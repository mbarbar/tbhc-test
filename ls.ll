; ModuleID = 'ls.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pending = type { i8*, i8*, i8, %struct.pending* }
%struct.dev_ino = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.tm_zone = type { %struct.tm_zone*, i8, [0 x i8] }
%struct.fileinfo = type { i8*, i8*, i8*, %struct.stat, i32, i32, i8*, i8, i8, i32, i8, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.bin_str = type { i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.ignore_pattern = type { i8*, %struct.ignore_pattern* }
%struct.color_ext_type = type { %struct.bin_str, %struct.bin_str, %struct.color_ext_type* }
%struct.column_info = type { i8, i64, i64* }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.userid = type { %union.anon.11, %struct.userid*, [0 x i8] }
%union.anon.11 = type { i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.sigaction = type { %union.anon.2, %struct.__sigset_t, i32, void ()* }
%union.anon.2 = type { void (i32)* }
%struct.__mbstate_t = type { i32, %union.anon.11 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.F_triple = type { i8*, i64, i64 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@exit_status = internal global i32 0, align 4, !dbg !0, !ctir !27
@print_dir_name = internal global i8 0, align 1, !dbg !881, !ctir !141
@pending_dirs = internal global %struct.pending* null, align 8, !dbg !849, !ctir !233
@current_time = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !851, !ctir !213
@print_with_color = internal global i8 0, align 1, !dbg !865, !ctir !141
@directories_first = internal global i8 0, align 1, !dbg !877, !ctir !141
@check_symlink_mode = internal global i8 0, align 1, !dbg !869, !ctir !141
@color_symlink_as_referent = internal global i8 0, align 1, !dbg !845, !ctir !141
@format = internal global i32 0, align 4, !dbg !855, !ctir !5
@dereference = internal global i32 0, align 4, !dbg !871, !ctir !13
@immediate_dirs = internal global i8 0, align 1, !dbg !875, !ctir !141
@indicator_style = internal global i32 0, align 4, !dbg !863, !ctir !20
@recursive = internal global i8 0, align 1, !dbg !873, !ctir !141
@active_dir_set = internal global %struct.hash_table* null, align 8, !dbg !837, !ctir !249
@dev_ino_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !899, !ctir !453
@.str.3 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@localtz = internal global %struct.tm_zone* null, align 8, !dbg !883, !ctir !254
@sort_type = internal global i32 0, align 4, !dbg !857, !ctir !26
@print_scontext = internal global i8 0, align 1, !dbg !853, !ctir !141
@print_block_size = internal global i8 0, align 1, !dbg !859, !ctir !141
@format_needs_stat = internal global i8 0, align 1, !dbg !885, !ctir !141
@format_needs_type = internal global i8 0, align 1, !dbg !887, !ctir !141
@dired = internal global i8 0, align 1, !dbg !861, !ctir !141
@dired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !895, !ctir !453
@subdired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !897, !ctir !453
@print_hyperlink = internal global i8 0, align 1, !dbg !867, !ctir !141
@hostname = internal global i8* null, align 8, !dbg !847, !ctir !146
@cwd_n_alloc = internal global i64 0, align 8, !dbg !841, !ctir !149
@cwd_file = internal global %struct.fileinfo* null, align 8, !dbg !839, !ctir !258
@cwd_n_used = internal global i64 0, align 8, !dbg !843, !ctir !149
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@dired_pos = internal global i64 0, align 8, !dbg !893, !ctir !149
@.str.5 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"src/ls.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@used_color = internal global i8 0, align 1, !dbg !903, !ctir !141
@color_indicator = internal global [24 x %struct.bin_str] [%struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0) }, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0) }, %struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }], align 16, !dbg !905, !ctir !279
@.str.7 = private unnamed_addr constant [3 x i8] c"\1B[\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !284
@stop_signal_count = internal global i32 0, align 4, !dbg !891, !ctir !330
@interrupt_signal = internal global i32 0, align 4, !dbg !889, !ctir !330
@.str.8 = private unnamed_addr constant [10 x i8] c"//DIRED//\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"//SUBDIRED//\00", align 1
@filename_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !879, !ctir !344
@.str.10 = private unnamed_addr constant [38 x i8] c"//DIRED-OPTIONS// --quoting-style=%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"hash_get_n_entries (active_dir_set) == 0\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c" %lu\00", align 1
@caught_signals = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !912, !ctir !504
@signal_setup.sig = internal constant [12 x i32] [i32 20, i32 14, i32 1, i32 2, i32 13, i32 3, i32 15, i32 29, i32 27, i32 26, i32 24, i32 25], align 16, !dbg !907
@.str.48 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"01;34\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"01;36\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"33\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"01;35\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"01;33\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"01;32\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"37;41\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"30;43\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"37;44\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"34;42\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"30;42\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"30;41\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"\1B[K\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"cannot open directory %s\00", align 1
@.str.204 = private unnamed_addr constant [40 x i8] c"cannot determine device and inode of %s\00", align 1
@.str.205 = private unnamed_addr constant [41 x i8] c"%s: not listing already-listed directory\00", align 1
@print_dir.first = internal global i8 1, align 1, !dbg !1000
@.str.206 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.207 = private unnamed_addr constant [24 x i8] c"error canonicalizing %s\00", align 1
@dirname_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !979, !ctir !344
@.str.208 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.209 = private unnamed_addr constant [21 x i8] c"reading directory %s\00", align 1
@.str.210 = private unnamed_addr constant [21 x i8] c"closing directory %s\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@human_output_opts = internal global i32 0, align 4, !dbg !943, !ctir !27
@output_block_size = internal global i64 0, align 8, !dbg !947, !ctir !168
@ignore_mode = internal global i32 0, align 4, !dbg !929, !ctir !85
@hide_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !933, !ctir !605
@ignore_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !931, !ctir !605
@align_variable_outer_quotes = internal global i8 0, align 1, !dbg !977, !ctir !141
@cwd_some_quoted = internal global i8 0, align 1, !dbg !1005, !ctir !141
@.str.213 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.212 = private unnamed_addr constant [20 x i8] c"\1B]8;;file://%s%s%s\07\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"\1B]8;;\07\00", align 1
@RFC3986 = internal global [256 x i8] zeroinitializer, align 16, !dbg !901, !ctir !448
@.str.215 = private unnamed_addr constant [7 x i8] c"%%%02x\00", align 1
@qmark_funny_chars = internal global i8 0, align 1, !dbg !919, !ctir !141
@.str.47 = private unnamed_addr constant [55 x i8] c"dev_ino_size <= obstack_object_size (&dev_ino_obstack)\00", align 1
@__PRETTY_FUNCTION__.dev_ino_pop = private unnamed_addr constant [33 x i8] c"struct dev_ino dev_ino_pop(void)\00", align 1
@sorted_file = internal global i8** null, align 8, !dbg !1007, !ctir !754
@line_length = internal global i64 0, align 8, !dbg !935, !ctir !149
@filetype_letter = internal constant [11 x i8] c"?pcdb-lswd\00", align 1, !dbg !1064, !ctir !808
@any_has_acl = internal global i8 0, align 1, !dbg !1011, !ctir !141
@time_type = internal global i32 0, align 4, !dbg !921, !ctir !79
@print_inode = internal global i8 0, align 1, !dbg !927, !ctir !141
@inode_number_width = internal global i32 0, align 4, !dbg !1013, !ctir !27
@.str.224 = private unnamed_addr constant [5 x i8] c"%*s \00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@block_size_width = internal global i32 0, align 4, !dbg !1015, !ctir !27
@nlink_width = internal global i32 0, align 4, !dbg !1017, !ctir !27
@.str.227 = private unnamed_addr constant [8 x i8] c"%s %*s \00", align 1
@print_owner = internal global i8 1, align 1, !dbg !941, !ctir !141
@print_group = internal global i8 1, align 1, !dbg !951, !ctir !141
@print_author = internal global i8 0, align 1, !dbg !953, !ctir !141
@owner_width = internal global i32 0, align 4, !dbg !1019, !ctir !27
@group_width = internal global i32 0, align 4, !dbg !1021, !ctir !27
@author_width = internal global i32 0, align 4, !dbg !1023, !ctir !27
@scontext_width = internal global i32 0, align 4, !dbg !1025, !ctir !27
@file_size_width = internal global i32 0, align 4, !dbg !1031, !ctir !27
@major_device_number_width = internal global i32 0, align 4, !dbg !1027, !ctir !27
@minor_device_number_width = internal global i32 0, align 4, !dbg !1029, !ctir !27
@.str.228 = private unnamed_addr constant [10 x i8] c"%*s, %*s \00", align 1
@file_human_output_opts = internal global i32 0, align 4, !dbg !945, !ctir !27
@file_output_block_size = internal global i64 1, align 8, !dbg !949, !ctir !168
@.str.229 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@get_color_indicator.filetype_indicator = internal global [10 x i32] [i32 13, i32 8, i32 11, i32 6, i32 10, i32 5, i32 7, i32 9, i32 5, i32 6], align 16, !dbg !1054
@color_ext_list = internal global %struct.color_ext_type* null, align 8, !dbg !996, !ctir !698
@long_time_expected_width.width = internal global i32 -1, align 4, !dbg !1066
@use_abformat = internal global i8 0, align 1, !dbg !989, !ctir !141
@abformat = internal global [2 x [12 x [128 x i8]]] zeroinitializer, align 16, !dbg !987, !ctir !691
@long_time_format = internal global [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.167, i32 0, i32 0)], align 16, !dbg !981, !ctir !674
@.str.166 = private unnamed_addr constant [10 x i8] c"%b %e  %Y\00", align 1
@.str.167 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"%*lu \00", align 1
@numeric_ids = internal global i8 0, align 1, !dbg !925, !ctir !141
@.str.226 = private unnamed_addr constant [40 x i8] c"INT_BUFSIZE_BOUND (uintmax_t) <= buflen\00", align 1
@__PRETTY_FUNCTION__.format_inode = private unnamed_addr constant [60 x i8] c"char *format_inode(char *, size_t, const struct fileinfo *)\00", align 1
@column_info = internal global %struct.column_info* null, align 8, !dbg !1062, !ctir !804
@tabsize = internal global i64 0, align 8, !dbg !937, !ctir !149
@max_idx = internal global i64 0, align 8, !dbg !975, !ctir !149
@init_column_info.column_info_alloc = internal global i64 0, align 8, !dbg !1059
@UNKNOWN_SECURITY_CONTEXT = internal global [2 x i8] c"?\00", align 1, !dbg !1009, !ctir !259
@sorted_file_alloc = internal global i64 0, align 8, !dbg !1048, !ctir !149
@failed_strcoll = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16, !dbg !1050, !ctir !759
@.str.222 = private unnamed_addr constant [26 x i8] c"sort_type != sort_version\00", align 1
@__PRETTY_FUNCTION__.sort_files = private unnamed_addr constant [22 x i8] c"void sort_files(void)\00", align 1
@sort_functions = internal constant [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]] [[2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_name, i32 (i8*, i8*)* @xstrcoll_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_name, i32 (i8*, i8*)* @rev_xstrcoll_df_name]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_name, i32 (i8*, i8*)* @strcmp_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_name, i32 (i8*, i8*)* @rev_strcmp_df_name]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_extension, i32 (i8*, i8*)* @xstrcoll_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_extension, i32 (i8*, i8*)* @rev_xstrcoll_df_extension]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_extension, i32 (i8*, i8*)* @strcmp_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_extension, i32 (i8*, i8*)* @rev_strcmp_df_extension]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_size, i32 (i8*, i8*)* @xstrcoll_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_size, i32 (i8*, i8*)* @rev_xstrcoll_df_size]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_size, i32 (i8*, i8*)* @strcmp_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_size, i32 (i8*, i8*)* @rev_strcmp_df_size]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_version, i32 (i8*, i8*)* @xstrcoll_df_version], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_version, i32 (i8*, i8*)* @rev_xstrcoll_df_version]], [2 x [2 x i32 (i8*, i8*)*]] zeroinitializer], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_mtime, i32 (i8*, i8*)* @xstrcoll_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_mtime, i32 (i8*, i8*)* @rev_xstrcoll_df_mtime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_mtime, i32 (i8*, i8*)* @strcmp_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_mtime, i32 (i8*, i8*)* @rev_strcmp_df_mtime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_ctime, i32 (i8*, i8*)* @xstrcoll_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_ctime, i32 (i8*, i8*)* @rev_xstrcoll_df_ctime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_ctime, i32 (i8*, i8*)* @strcmp_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_ctime, i32 (i8*, i8*)* @rev_strcmp_df_ctime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_atime, i32 (i8*, i8*)* @xstrcoll_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_atime, i32 (i8*, i8*)* @rev_xstrcoll_df_atime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_atime, i32 (i8*, i8*)* @strcmp_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_atime, i32 (i8*, i8*)* @rev_strcmp_df_atime]]]], align 16, !dbg !1052, !ctir !774
@sort_reverse = internal global i8 0, align 1, !dbg !923, !ctir !141
@.str.223 = private unnamed_addr constant [36 x i8] c"cannot compare file names %s and %s\00", align 1
@.str.216 = private unnamed_addr constant [51 x i8] c"! command_line_arg || inode == NOT_AN_INODE_NUMBER\00", align 1
@__PRETTY_FUNCTION__.gobble_file = private unnamed_addr constant [79 x i8] c"uintmax_t gobble_file(const char *, enum filetype, ino_t, _Bool, const char *)\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"unlabeled\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.221 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.220 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@file_has_acl_cache.unsupported_device = internal global i64 0, align 8, !dbg !1043
@getfilecon_cache.unsupported_device = internal global i64 0, align 8, !dbg !1038
@has_capability_cache.unsupported_device = internal global i64 0, align 8, !dbg !1033
@.str.46 = private unnamed_addr constant [3 x i8] c"00\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"LS_COLORS\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"COLORTERM\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"??\00", align 1
@color_buf = internal global i8* null, align 8, !dbg !994, !ctir !143
@indicator_name = internal constant [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8* null], align 16, !dbg !998, !ctir !704
@.str.175 = private unnamed_addr constant [24 x i8] c"unrecognized prefix: %s\00", align 1
@.str.176 = private unnamed_addr constant [52 x i8] c"unparsable value for LS_COLORS environment variable\00", align 1
@.str.177 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"lc\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@.str.182 = private unnamed_addr constant [3 x i8] c"ec\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"rs\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.187 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.189 = private unnamed_addr constant [3 x i8] c"bd\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.193 = private unnamed_addr constant [3 x i8] c"ex\00", align 1
@.str.194 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.195 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@.str.196 = private unnamed_addr constant [3 x i8] c"sg\00", align 1
@.str.197 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"ow\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"tw\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"ca\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"mh\00", align 1
@.str.202 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@G_line = internal constant [4304 x i8] c"# Configuration file for dircolors, a utility to help you set the\00# LS_COLORS environment variable used by GNU ls with the --color option.\00# Copyright (C) 1996-2019 Free Software Foundation, Inc.\00# Copying and distribution of this file, with or without modification,\00# are permitted provided the copyright notice and this notice are preserved.\00# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the\00# slackware version of dircolors) are recognized but ignored.\00# Below are TERM entries, which can be a glob patterns, to match\00# against the TERM environment variable to determine if it is colorizable.\00TERM Eterm\00TERM ansi\00TERM *color*\00TERM con[0-9]*x[0-9]*\00TERM cons25\00TERM console\00TERM cygwin\00TERM dtterm\00TERM gnome\00TERM hurd\00TERM jfbterm\00TERM konsole\00TERM kterm\00TERM linux\00TERM linux-c\00TERM mlterm\00TERM putty\00TERM rxvt*\00TERM screen*\00TERM st\00TERM terminator\00TERM tmux*\00TERM vt100\00TERM xterm*\00# Below are the color init strings for the basic file types.\00# One can use codes for 256 or more colors supported by modern terminals.\00# The default color codes use the capabilities of an 8 color terminal\00# with some additional attributes as per the following codes:\00# Attribute codes:\00# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed\00# Text color codes:\00# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\00# Background color codes:\00# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\00#NORMAL 00 # no color code at all\00#FILE 00 # regular file: use no color at all\00RESET 0 # reset to \22normal\22 color\00DIR 01;34 # directory\00LINK 01;36 # symbolic link. (If you set this to 'target' instead of a\00 # numerical value, the color is as for the file pointed to.)\00MULTIHARDLINK 00 # regular file with more than one link\00FIFO 40;33 # pipe\00SOCK 01;35 # socket\00DOOR 01;35 # door\00BLK 40;33;01 # block device driver\00CHR 40;33;01 # character device driver\00ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'able file ...\00MISSING 00 # ... and the files they point to\00SETUID 37;41 # file that is setuid (u+s)\00SETGID 30;43 # file that is setgid (g+s)\00CAPABILITY 30;41 # file with capability\00STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)\00OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky\00STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable\00# This is for files with execute permission:\00EXEC 01;32\00# List any file extensions like '.gz' or '.tar' that you would like ls\00# to colorize below. Put the extension, a space, and the color init string.\00# (and any comments you want to add after a '#')\00# If you use DOS-style suffixes, you may want to uncomment the following:\00#.cmd 01;32 # executables (bright green)\00#.exe 01;32\00#.com 01;32\00#.btm 01;32\00#.bat 01;32\00# Or if you want to colorize scripts even if they do not have the\00# executable bit actually set.\00#.sh 01;32\00#.csh 01;32\00 # archives or compressed (bright red)\00.tar 01;31\00.tgz 01;31\00.arc 01;31\00.arj 01;31\00.taz 01;31\00.lha 01;31\00.lz4 01;31\00.lzh 01;31\00.lzma 01;31\00.tlz 01;31\00.txz 01;31\00.tzo 01;31\00.t7z 01;31\00.zip 01;31\00.z 01;31\00.dz 01;31\00.gz 01;31\00.lrz 01;31\00.lz 01;31\00.lzo 01;31\00.xz 01;31\00.zst 01;31\00.tzst 01;31\00.bz2 01;31\00.bz 01;31\00.tbz 01;31\00.tbz2 01;31\00.tz 01;31\00.deb 01;31\00.rpm 01;31\00.jar 01;31\00.war 01;31\00.ear 01;31\00.sar 01;31\00.rar 01;31\00.alz 01;31\00.ace 01;31\00.zoo 01;31\00.cpio 01;31\00.7z 01;31\00.rz 01;31\00.cab 01;31\00.wim 01;31\00.swm 01;31\00.dwm 01;31\00.esd 01;31\00# image formats\00.jpg 01;35\00.jpeg 01;35\00.mjpg 01;35\00.mjpeg 01;35\00.gif 01;35\00.bmp 01;35\00.pbm 01;35\00.pgm 01;35\00.ppm 01;35\00.tga 01;35\00.xbm 01;35\00.xpm 01;35\00.tif 01;35\00.tiff 01;35\00.png 01;35\00.svg 01;35\00.svgz 01;35\00.mng 01;35\00.pcx 01;35\00.mov 01;35\00.mpg 01;35\00.mpeg 01;35\00.m2v 01;35\00.mkv 01;35\00.webm 01;35\00.webp 01;35\00.ogm 01;35\00.mp4 01;35\00.m4v 01;35\00.mp4v 01;35\00.vob 01;35\00.qt 01;35\00.nuv 01;35\00.wmv 01;35\00.asf 01;35\00.rm 01;35\00.rmvb 01;35\00.flc 01;35\00.avi 01;35\00.fli 01;35\00.flv 01;35\00.gl 01;35\00.dl 01;35\00.xcf 01;35\00.xwd 01;35\00.yuv 01;35\00.cgm 01;35\00.emf 01;35\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.ogv 01;35\00.ogx 01;35\00# audio formats\00.aac 00;36\00.au 00;36\00.flac 00;36\00.m4a 00;36\00.mid 00;36\00.midi 00;36\00.mka 00;36\00.mp3 00;36\00.mpc 00;36\00.ogg 00;36\00.ra 00;36\00.wav 00;36\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.oga 00;36\00.opus 00;36\00.spx 00;36\00.xspf 00;36\00", align 16, !dbg !991, !ctir !710
@.str.179 = private unnamed_addr constant [6 x i8] c"TERM \00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"COLUMNS\00", align 1
@.str.64 = private unnamed_addr constant [59 x i8] c"ignoring invalid width in environment variable COLUMNS: %s\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"TABSIZE\00", align 1
@.str.66 = private unnamed_addr constant [62 x i8] c"ignoring invalid tab size in environment variable TABSIZE: %s\00", align 1
@.str.67 = private unnamed_addr constant [44 x i8] c"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\00", align 1
@long_options = internal constant [44 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.102, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i32 0, i32* null, i32 68 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i32 0, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.105, i32 0, i32 0), i32 0, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i32 0, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i32 1, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 0, i32* null, i32 65 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i32 0, i32* null, i32 66 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i32 0, i32* null, i32 70 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i32 0, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.119, i32 0, i32 0), i32 0, i32* null, i32 141 }, %struct.option { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.120, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i32 1, i32* null, i32 136 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0), i32 1, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), i32 1, i32* null, i32 138 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i32 0, i32* null, i32 81 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i32 1, i32* null, i32 139 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i32 1, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), i32 0, i32* null, i32 140 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i32 1, i32* null, i32 142 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i32 1, i32* null, i32 143 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i32 1, i32* null, i32 144 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i32 2, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i32 2, i32* null, i32 137 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !939, !ctir !622
@optarg = external dso_local global i8*, align 8, !ctir !143
@.str.69 = private unnamed_addr constant [19 x i8] c"invalid line width\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"*~\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c".*~\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"invalid tab size\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"--sort\00", align 1
@sort_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i8* null], align 16, !dbg !957, !ctir !643
@sort_types = internal constant [5 x i32] [i32 -1, i32 4, i32 2, i32 1, i32 3], align 16, !dbg !955, !ctir !641
@.str.74 = private unnamed_addr constant [7 x i8] c"--time\00", align 1
@time_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i8* null], align 16, !dbg !961, !ctir !643
@time_types = internal constant [5 x i32] [i32 2, i32 2, i32 2, i32 1, i32 1], align 16, !dbg !959, !ctir !646
@.str.75 = private unnamed_addr constant [9 x i8] c"--format\00", align 1
@format_args = internal constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), i8* null], align 16, !dbg !965, !ctir !650
@format_types = internal constant [7 x i32] [i32 0, i32 0, i32 4, i32 3, i32 3, i32 2, i32 1], align 16, !dbg !963, !ctir !648
@.str.76 = private unnamed_addr constant [9 x i8] c"full-iso\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"--color\00", align 1
@when_args = internal constant [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i8* null], align 16, !dbg !969, !ctir !653
@when_types = internal constant [9 x i32] [i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2], align 16, !dbg !967, !ctir !651
@.str.78 = private unnamed_addr constant [12 x i8] c"--hyperlink\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"--indicator-style\00", align 1
@indicator_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i8* null], align 16, !dbg !973, !ctir !660
@indicator_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !971, !ctir !655
@.str.80 = private unnamed_addr constant [16 x i8] c"--quoting-style\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"vdir\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"Richard M. Stallman\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"LS_BLOCK_SIZE\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"*=>@|\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"TIME_STYLE\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@decode_switches.posix_prefix = internal constant [7 x i8] c"posix-\00", align 1, !dbg !914
@optind = external dso_local global i32, align 4, !ctir !27
@.str.89 = private unnamed_addr constant [29 x i8] c"invalid time style format %s\00", align 1
@time_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* null], align 16, !dbg !983, !ctir !660
@time_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !985, !ctir !676
@.str.90 = private unnamed_addr constant [11 x i8] c"time style\00", align 1
@.str.91 = private unnamed_addr constant [22 x i8] c"Valid arguments are:\0A\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !284
@.str.92 = private unnamed_addr constant [16 x i8] c"  - [posix-]%s\0A\00", align 1
@.str.93 = private unnamed_addr constant [54 x i8] c"  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\0A\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"%Y-%m-%d %H:%M:%S.%N %z\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"%Y-%m-%d \00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"%m-%d %H:%M\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"%.*s%s%s\00", align 1
@.str.168 = private unnamed_addr constant [9 x i8] c"long-iso\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 1
@.str.14 = private unnamed_addr constant [144 x i8] c"List information about the FILEs (the current directory by default).\0ASort entries alphabetically if none of -cftuvSUX nor --sort is specified.\0A\00", align 1
@.str.15 = private unnamed_addr constant [271 x i8] c"  -a, --all                  do not ignore entries starting with .\0A  -A, --almost-all           do not list implied . and ..\0A      --author               with -l, print the author of each file\0A  -b, --escape               print C-style escapes for nongraphic characters\0A\00", align 1
@.str.16 = private unnamed_addr constant [156 x i8] c"      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\0A                               e.g., '--block-size=M'; see SIZE format below\0A\00", align 1
@.str.17 = private unnamed_addr constant [362 x i8] c"  -B, --ignore-backups       do not list implied entries ending with ~\0A  -c                         with -lt: sort by, and show, ctime (time of last\0A                               modification of file status information);\0A                               with -l: show ctime and sort by name;\0A                               otherwise: sort by ctime, newest first\0A\00", align 1
@.str.18 = private unnamed_addr constant [367 x i8] c"  -C                         list entries by columns\0A      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\0A                               if omitted), 'auto', or 'never'; more info below\0A  -d, --directory            list directories themselves, not their contents\0A  -D, --dired                generate output designed for Emacs' dired mode\0A\00", align 1
@.str.19 = private unnamed_addr constant [419 x i8] c"  -f                         do not sort, enable -aU, disable -ls --color\0A  -F, --classify             append indicator (one of */=>@|) to entries\0A      --file-type            likewise, except do not append '*'\0A      --format=WORD          across -x, commas -m, horizontal -x, long -l,\0A                               single-column -1, verbose -l, vertical -C\0A      --full-time            like -l --time-style=full-iso\0A\00", align 1
@.str.20 = private unnamed_addr constant [61 x i8] c"  -g                         like -l, but do not list owner\0A\00", align 1
@.str.21 = private unnamed_addr constant [245 x i8] c"      --group-directories-first\0A                             group directories before files;\0A                               can be augmented with a --sort option, but any\0A                               use of --sort=none (-U) disables grouping\0A\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"  -G, --no-group             in a long listing, don't print group names\0A\00", align 1
@.str.23 = private unnamed_addr constant [150 x i8] c"  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\0A      --si                   likewise, but use powers of 1000 not 1024\0A\00", align 1
@.str.24 = private unnamed_addr constant [422 x i8] c"  -H, --dereference-command-line\0A                             follow symbolic links listed on the command line\0A      --dereference-command-line-symlink-to-dir\0A                             follow each command line symbolic link\0A                               that points to a directory\0A      --hide=PATTERN         do not list implied entries matching shell PATTERN\0A                               (overridden by -a or -A)\0A\00", align 1
@.str.25 = private unnamed_addr constant [145 x i8] c"      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\0A                               (default if omitted), 'auto', or 'never'\0A\00", align 1
@.str.26 = private unnamed_addr constant [354 x i8] c"      --indicator-style=WORD  append indicator with style WORD to entry names:\0A                               none (default), slash (-p),\0A                               file-type (--file-type), classify (-F)\0A  -i, --inode                print the index number of each file\0A  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\0A\00", align 1
@.str.27 = private unnamed_addr constant [148 x i8] c"  -k, --kibibytes            default to 1024-byte blocks for disk usage;\0A                               used only with -s and per directory totals\0A\00", align 1
@.str.28 = private unnamed_addr constant [359 x i8] c"  -l                         use a long listing format\0A  -L, --dereference          when showing file information for a symbolic\0A                               link, show information for the file the link\0A                               references rather than for the link itself\0A  -m                         fill width with a comma separated list of entries\0A\00", align 1
@.str.29 = private unnamed_addr constant [303 x i8] c"  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\0A  -N, --literal              print entry names without quoting\0A  -o                         like -l, but do not list group information\0A  -p, --indicator-style=slash\0A                             append / indicator to directories\0A\00", align 1
@.str.30 = private unnamed_addr constant [585 x i8] c"  -q, --hide-control-chars   print ? instead of nongraphic characters\0A      --show-control-chars   show nongraphic characters as-is (the default,\0A                               unless program is 'ls' and output is a terminal)\0A  -Q, --quote-name           enclose entry names in double quotes\0A      --quoting-style=WORD   use quoting style WORD for entry names:\0A                               literal, locale, shell, shell-always,\0A                               shell-escape, shell-escape-always, c, escape\0A                               (overrides QUOTING_STYLE environment variable)\0A\00", align 1
@.str.31 = private unnamed_addr constant [197 x i8] c"  -r, --reverse              reverse order while sorting\0A  -R, --recursive            list subdirectories recursively\0A  -s, --size                 print the allocated size of each file, in blocks\0A\00", align 1
@.str.32 = private unnamed_addr constant [519 x i8] c"  -S                         sort by file size, largest first\0A      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\0A                               time (-t), version (-v), extension (-X)\0A      --time=WORD            with -l, show time as WORD instead of default\0A                               modification time: atime or access or use (-u);\0A                               ctime or status (-c); also use specified time\0A                               as sort key if --sort=time (newest first)\0A\00", align 1
@.str.33 = private unnamed_addr constant [79 x i8] c"      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\0A\00", align 1
@.str.34 = private unnamed_addr constant [142 x i8] c"  -t                         sort by modification time, newest first\0A  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\0A\00", align 1
@.str.35 = private unnamed_addr constant [372 x i8] c"  -u                         with -lt: sort by, and show, access time;\0A                               with -l: show access time and sort by name;\0A                               otherwise: sort by access time, newest first\0A  -U                         do not sort; list entries in directory order\0A  -v                         natural sort of (version) numbers within text\0A\00", align 1
@.str.36 = private unnamed_addr constant [363 x i8] c"  -w, --width=COLS           set output width to COLS.  0 means no limit\0A  -x                         list entries by lines instead of by columns\0A  -X                         sort alphabetically by entry extension\0A  -Z, --context              print any security context of each file\0A  -1                         list one file per line.  Avoid '\5Cn' with -q or -b\0A\00", align 1
@.str.37 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.38 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.39 = private unnamed_addr constant [376 x i8] c"\0AThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\0AFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\0Athen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\0ATIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\0AAlso the TIME_STYLE environment variable sets the default style to use.\0A\00", align 1
@.str.40 = private unnamed_addr constant [286 x i8] c"\0AUsing color to distinguish file types is disabled both by default and\0Awith --color=never.  With --color=auto, ls emits color codes only when\0Astandard output is connected to a terminal.  The LS_COLORS environment\0Avariable can change the settings.  Use the dircolors command to set it.\0A\00", align 1
@.str.41 = private unnamed_addr constant [152 x i8] c"\0AExit status:\0A 0  if OK,\0A 1  if minor problems (e.g., cannot access subdirectory),\0A 2  if serious trouble (e.g., cannot access command-line argument).\0A\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.235, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.241 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.242 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.243 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.244 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.245 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.246 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.233 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.235 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.237 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.238 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.240 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.232 = private unnamed_addr constant [212 x i8] c"\0AThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\0AUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\0ABinary prefixes can be used, too: KiB=K, MiB=M, and so on.\0A\00", align 1
@.str.231 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.165 = private unnamed_addr constant [6 x i8] c"slash\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"file-type\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"classify\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"if-tty\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"commas\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"horizontal\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"across\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"single-column\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"use\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.144 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.142 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"dired\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"full-time\00", align 1
@.str.105 = private unnamed_addr constant [24 x i8] c"group-directories-first\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"inode\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"kibibytes\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"numeric-uid-gid\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"no-group\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"hide-control-chars\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"almost-all\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"ignore-backups\00", align 1
@.str.119 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.120 = private unnamed_addr constant [25 x i8] c"dereference-command-line\00", align 1
@.str.121 = private unnamed_addr constant [40 x i8] c"dereference-command-line-symlink-to-dir\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"hide\00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"indicator-style\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"quote-name\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"quoting-style\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"show-control-chars\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"tabsize\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"time-style\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"hyperlink\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"block-size\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"author\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"QUOTING_STYLE\00", align 1
@.str.99 = private unnamed_addr constant [65 x i8] c"ignoring invalid value of environment variable QUOTING_STYLE: %s\00", align 1
@ls_mode = dso_local global i32 1, align 4, !dbg !1071, !ctir !27
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i32 0, i32 0), align 8, !dbg !1076, !ctir !146
@.str.248 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1082, !ctir !644
@.str.257 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.258 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.259 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.260 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.261 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.270 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@file_name = internal global i8* null, align 8, !dbg !1127, !ctir !146
@ignore_EPIPE = internal global i8 0, align 1, !dbg !1171, !ctir !141
@.str.273 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.274 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.275 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !1174, !ctir !445
@.str.296 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.297 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.302 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.306 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.307 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.308 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.309 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !1181, !ctir !1205
@.str.328 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.329 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.330 = private unnamed_addr constant [6 x i8] c"%.0Lf\00", align 1
@.str.3.331 = private unnamed_addr constant [6 x i8] c"%.1Lf\00", align 1
@power_letter = internal constant [9 x i8] c"\00KMGTPEZY", align 1, !dbg !1230, !ctir !1266
@.str.9.334 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.4.335 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.5.336 = private unnamed_addr constant [10 x i8] c"BLOCKSIZE\00", align 1
@block_size_args = internal constant [3 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.338, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.339, i32 0, i32 0), i8* null], align 16, !dbg !1271, !ctir !1268
@block_size_opts = internal constant [2 x i32] [i32 176, i32 144], align 4, !dbg !1274, !ctir !1269
@.str.6.337 = private unnamed_addr constant [18 x i8] c"eEgGkKmMpPtTyYzZ0\00", align 1
@.str.7.338 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.8.339 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@user_alist = internal global %struct.userid* null, align 8, !dbg !1276, !ctir !1281
@.str.342 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@nouser_alist = internal global %struct.userid* null, align 8, !dbg !1314, !ctir !1281
@group_alist = internal global %struct.userid* null, align 8, !dbg !1316, !ctir !1281
@nogroup_alist = internal global %struct.userid* null, align 8, !dbg !1318, !ctir !1281
@.str.359 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.360 = private unnamed_addr constant [9 x i8] c"%m/%d/%y\00", align 1
@.str.2.361 = private unnamed_addr constant [9 x i8] c"%Y-%m-%d\00", align 1
@.str.3.362 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.4.363 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !1320, !ctir !146
@.str.368 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.369 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.370 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !143
@program_invocation_name = external dso_local global i8*, align 8, !ctir !143
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.374, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.375, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.376, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.377, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.379, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.380, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.381, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.382, i32 0, i32 0), i8* null], align 16, !dbg !1368, !ctir !1374
@.str.373 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.374 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.375 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.376 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.377 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.378 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.379 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.380 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.381 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.382 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1408, !ctir !1375
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1410, !ctir !1377
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1412, !ctir !1377
@.str.10.395 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.396 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.397 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.398 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.399 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.400 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.401 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.402 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.403 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.bin_str* @slotvec0, align 8, !dbg !1416, !ctir !1390
@nslots = internal global i32 1, align 4, !dbg !1418, !ctir !27
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1414, !ctir !448
@slotvec0 = internal global %struct.bin_str { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1420, !ctir !1391
@.str.418 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.433 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.434 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.435 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.436 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.437 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.438 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.439 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.440 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.441 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.442 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.443 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.444 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.445 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.446 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.447 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.448 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.451 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.452 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.453 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.454 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.455 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.456 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.457 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1422, !ctir !1427
@.str.1.476 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.477 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.480 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.487 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.488 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.491 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1.492 = private unnamed_addr constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str.2.493 = private unnamed_addr constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 1
@.str.3.494 = private unnamed_addr constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str.497 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.498 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoumax = private unnamed_addr constant [79 x i8] c"strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)\00", align 1
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !1432, !ctir !525
@.str.1.505 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.506 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.515 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.1.516 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.531 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.532 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !1863 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4, !ctir !27
  %thispend = alloca %struct.pending*, align 8, !ctir !233
  %n_files = alloca i32, align 4, !ctir !27
  %di = alloca %struct.dev_ino, align 8, !ctir !263
  %found = alloca %struct.dev_ino*, align 8, !ctir !262
  %j = alloca i32, align 4, !ctir !27
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1864, metadata !DIExpression()), !dbg !1865
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1866, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1868, metadata !DIExpression()), !dbg !1869
  call void @llvm.dbg.declare(metadata %struct.pending** %thispend, metadata !1870, metadata !DIExpression()), !dbg !1871
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !1872, metadata !DIExpression()), !dbg !1873
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !1874
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !1874, !ctir !142
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !1874
  call void @set_program_name(i8* %1), !dbg !1875
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13, !dbg !1876
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !1877
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !1878
  call void @initialize_exit_failure(i32 2), !dbg !1879
  %call3 = call i32 @atexit(void ()* @close_stdout) #13, !dbg !1880
  store i32 0, i32* @exit_status, align 4, !dbg !1881
  store i8 1, i8* @print_dir_name, align 1, !dbg !1882
  store %struct.pending* null, %struct.pending** @pending_dirs, align 8, !dbg !1883
  store i64 -9223372036854775808, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !1884, !ctir !164
  store i64 -1, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !1885, !ctir !217
  %2 = load i32, i32* %argc.addr, align 4, !dbg !1886
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !1887
  %call4 = call i32 @decode_switches(i32 %2, i8** %3), !dbg !1888
  store i32 %call4, i32* %i, align 4, !dbg !1889
  %4 = load i8, i8* @print_with_color, align 1, !dbg !1890
  %tobool = trunc i8 %4 to i1, !dbg !1890
  br i1 %tobool, label %if.then, label %if.end, !dbg !1892

if.then:                                          ; preds = %entry
  call void @parse_ls_color(), !dbg !1893
  br label %if.end, !dbg !1893

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* @directories_first, align 1, !dbg !1894
  %tobool5 = trunc i8 %5 to i1, !dbg !1894
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !1896

if.then6:                                         ; preds = %if.end
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !1897
  br label %if.end18, !dbg !1898

if.else:                                          ; preds = %if.end
  %6 = load i8, i8* @print_with_color, align 1, !dbg !1899
  %tobool7 = trunc i8 %6 to i1, !dbg !1899
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !1901

if.then8:                                         ; preds = %if.else
  %call9 = call zeroext i1 @is_colored(i32 13), !dbg !1902
  br i1 %call9, label %if.then15, label %lor.lhs.false, !dbg !1905

lor.lhs.false:                                    ; preds = %if.then8
  %call10 = call zeroext i1 @is_colored(i32 14), !dbg !1906
  br i1 %call10, label %land.lhs.true, label %lor.lhs.false12, !dbg !1907

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !1908
  %tobool11 = trunc i8 %7 to i1, !dbg !1908
  br i1 %tobool11, label %if.then15, label %lor.lhs.false12, !dbg !1909

lor.lhs.false12:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %call13 = call zeroext i1 @is_colored(i32 12), !dbg !1910
  br i1 %call13, label %land.lhs.true14, label %if.end16, !dbg !1911

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %8 = load i32, i32* @format, align 4, !dbg !1912
  %cmp = icmp eq i32 %8, 0, !dbg !1913
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !1914

if.then15:                                        ; preds = %land.lhs.true14, %land.lhs.true, %if.then8
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !1915
  br label %if.end16, !dbg !1916

if.end16:                                         ; preds = %if.then15, %land.lhs.true14, %lor.lhs.false12
  br label %if.end17, !dbg !1917

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then6
  %9 = load i32, i32* @dereference, align 4, !dbg !1918
  %cmp19 = icmp eq i32 %9, 1, !dbg !1920
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !1921

if.then20:                                        ; preds = %if.end18
  %10 = load i8, i8* @immediate_dirs, align 1, !dbg !1922
  %tobool21 = trunc i8 %10 to i1, !dbg !1922
  br i1 %tobool21, label %lor.end, label %lor.lhs.false22, !dbg !1923

lor.lhs.false22:                                  ; preds = %if.then20
  %11 = load i32, i32* @indicator_style, align 4, !dbg !1924
  %cmp23 = icmp eq i32 %11, 3, !dbg !1925
  br i1 %cmp23, label %lor.end, label %lor.rhs, !dbg !1926

lor.rhs:                                          ; preds = %lor.lhs.false22
  %12 = load i32, i32* @format, align 4, !dbg !1927
  %cmp24 = icmp eq i32 %12, 0, !dbg !1928
  br label %lor.end, !dbg !1926

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false22, %if.then20
  %13 = phi i1 [ true, %lor.lhs.false22 ], [ true, %if.then20 ], [ %cmp24, %lor.rhs ]
  %14 = zext i1 %13 to i64, !dbg !1929
  %cond = select i1 %13, i32 2, i32 4, !dbg !1929
  store i32 %cond, i32* @dereference, align 4, !dbg !1930
  br label %if.end25, !dbg !1931

if.end25:                                         ; preds = %lor.end, %if.end18
  %15 = load i8, i8* @recursive, align 1, !dbg !1932
  %tobool26 = trunc i8 %15 to i1, !dbg !1932
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !1934

if.then27:                                        ; preds = %if.end25
  %call28 = call %struct.hash_table* @hash_initialize(i64 30, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_ino_hash, i1 (i8*, i8*)* @dev_ino_compare, void (i8*)* @dev_ino_free), !dbg !1935
  store %struct.hash_table* %call28, %struct.hash_table** @active_dir_set, align 8, !dbg !1937
  %16 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !1938
  %cmp29 = icmp eq %struct.hash_table* %16, null, !dbg !1940
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !1941

if.then30:                                        ; preds = %if.then27
  call void @xalloc_die() #14, !dbg !1942
  unreachable, !dbg !1942

if.end31:                                         ; preds = %if.then27
  %call32 = call i32 @_obstack_begin(%struct.obstack* @dev_ino_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !1943
  br label %if.end33, !dbg !1944

if.end33:                                         ; preds = %if.end31, %if.end25
  %call34 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !1945
  %call35 = call %struct.tm_zone* @tzalloc(i8* %call34), !dbg !1946
  store %struct.tm_zone* %call35, %struct.tm_zone** @localtz, align 8, !dbg !1947
  %17 = load i32, i32* @sort_type, align 4, !dbg !1948
  %cmp36 = icmp eq i32 %17, 4, !dbg !1949
  br i1 %cmp36, label %lor.end45, label %lor.lhs.false37, !dbg !1950

lor.lhs.false37:                                  ; preds = %if.end33
  %18 = load i32, i32* @sort_type, align 4, !dbg !1951
  %cmp38 = icmp eq i32 %18, 2, !dbg !1952
  br i1 %cmp38, label %lor.end45, label %lor.lhs.false39, !dbg !1953

lor.lhs.false39:                                  ; preds = %lor.lhs.false37
  %19 = load i32, i32* @format, align 4, !dbg !1954
  %cmp40 = icmp eq i32 %19, 0, !dbg !1955
  br i1 %cmp40, label %lor.end45, label %lor.lhs.false41, !dbg !1956

lor.lhs.false41:                                  ; preds = %lor.lhs.false39
  %20 = load i8, i8* @print_scontext, align 1, !dbg !1957
  %tobool42 = trunc i8 %20 to i1, !dbg !1957
  br i1 %tobool42, label %lor.end45, label %lor.rhs43, !dbg !1958

lor.rhs43:                                        ; preds = %lor.lhs.false41
  %21 = load i8, i8* @print_block_size, align 1, !dbg !1959
  %tobool44 = trunc i8 %21 to i1, !dbg !1959
  br label %lor.end45, !dbg !1958

lor.end45:                                        ; preds = %lor.rhs43, %lor.lhs.false41, %lor.lhs.false39, %lor.lhs.false37, %if.end33
  %22 = phi i1 [ true, %lor.lhs.false41 ], [ true, %lor.lhs.false39 ], [ true, %lor.lhs.false37 ], [ true, %if.end33 ], [ %tobool44, %lor.rhs43 ]
  %frombool = zext i1 %22 to i8, !dbg !1960
  store i8 %frombool, i8* @format_needs_stat, align 1, !dbg !1960
  %23 = load i8, i8* @format_needs_stat, align 1, !dbg !1961
  %tobool46 = trunc i8 %23 to i1, !dbg !1961
  br i1 %tobool46, label %land.end, label %land.rhs, !dbg !1962

land.rhs:                                         ; preds = %lor.end45
  %24 = load i8, i8* @recursive, align 1, !dbg !1963
  %tobool47 = trunc i8 %24 to i1, !dbg !1963
  br i1 %tobool47, label %lor.end54, label %lor.lhs.false48, !dbg !1964

lor.lhs.false48:                                  ; preds = %land.rhs
  %25 = load i8, i8* @print_with_color, align 1, !dbg !1965
  %tobool49 = trunc i8 %25 to i1, !dbg !1965
  br i1 %tobool49, label %lor.end54, label %lor.lhs.false50, !dbg !1966

lor.lhs.false50:                                  ; preds = %lor.lhs.false48
  %26 = load i32, i32* @indicator_style, align 4, !dbg !1967
  %cmp51 = icmp ne i32 %26, 0, !dbg !1968
  br i1 %cmp51, label %lor.end54, label %lor.rhs52, !dbg !1969

lor.rhs52:                                        ; preds = %lor.lhs.false50
  %27 = load i8, i8* @directories_first, align 1, !dbg !1970
  %tobool53 = trunc i8 %27 to i1, !dbg !1970
  br label %lor.end54, !dbg !1969

lor.end54:                                        ; preds = %lor.rhs52, %lor.lhs.false50, %lor.lhs.false48, %land.rhs
  %28 = phi i1 [ true, %lor.lhs.false50 ], [ true, %lor.lhs.false48 ], [ true, %land.rhs ], [ %tobool53, %lor.rhs52 ]
  br label %land.end

land.end:                                         ; preds = %lor.end54, %lor.end45
  %29 = phi i1 [ false, %lor.end45 ], [ %28, %lor.end54 ], !dbg !1971
  %frombool55 = zext i1 %29 to i8, !dbg !1972
  store i8 %frombool55, i8* @format_needs_type, align 1, !dbg !1972
  %30 = load i8, i8* @dired, align 1, !dbg !1973
  %tobool56 = trunc i8 %30 to i1, !dbg !1973
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !1975

if.then57:                                        ; preds = %land.end
  %call58 = call i32 @_obstack_begin(%struct.obstack* @dired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !1976
  %call59 = call i32 @_obstack_begin(%struct.obstack* @subdired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !1978
  br label %if.end60, !dbg !1979

if.end60:                                         ; preds = %if.then57, %land.end
  %31 = load i8, i8* @print_hyperlink, align 1, !dbg !1980
  %tobool61 = trunc i8 %31 to i1, !dbg !1980
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !1982

if.then62:                                        ; preds = %if.end60
  call void @file_escape_init(), !dbg !1983
  %call63 = call i8* @xgethostname(), !dbg !1985
  store i8* %call63, i8** @hostname, align 8, !dbg !1986
  %32 = load i8*, i8** @hostname, align 8, !dbg !1987
  %tobool64 = icmp ne i8* %32, null, !dbg !1987
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !1989

if.then65:                                        ; preds = %if.then62
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** @hostname, align 8, !dbg !1990
  br label %if.end66, !dbg !1991

if.end66:                                         ; preds = %if.then65, %if.then62
  br label %if.end67, !dbg !1992

if.end67:                                         ; preds = %if.end66, %if.end60
  store i64 100, i64* @cwd_n_alloc, align 8, !dbg !1993
  %33 = load i64, i64* @cwd_n_alloc, align 8, !dbg !1994
  %call68 = call noalias i8* @xnmalloc(i64 %33, i64 200), !dbg !1995
  %34 = bitcast i8* %call68 to %struct.fileinfo*, !dbg !1995
  store %struct.fileinfo* %34, %struct.fileinfo** @cwd_file, align 8, !dbg !1996
  store i64 0, i64* @cwd_n_used, align 8, !dbg !1997
  call void @clear_files(), !dbg !1998
  %35 = load i32, i32* %argc.addr, align 4, !dbg !1999
  %36 = load i32, i32* %i, align 4, !dbg !2000
  %sub = sub nsw i32 %35, %36, !dbg !2001
  store i32 %sub, i32* %n_files, align 4, !dbg !2002
  %37 = load i32, i32* %n_files, align 4, !dbg !2003
  %cmp69 = icmp sle i32 %37, 0, !dbg !2005
  br i1 %cmp69, label %if.then70, label %if.else76, !dbg !2006

if.then70:                                        ; preds = %if.end67
  %38 = load i8, i8* @immediate_dirs, align 1, !dbg !2007
  %tobool71 = trunc i8 %38 to i1, !dbg !2007
  br i1 %tobool71, label %if.then72, label %if.else74, !dbg !2010

if.then72:                                        ; preds = %if.then70
  %call73 = call i64 @gobble_file(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 3, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2011
  br label %if.end75, !dbg !2011

if.else74:                                        ; preds = %if.then70
  call void @queue_directory(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* null, i1 zeroext true), !dbg !2012
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then72
  br label %if.end80, !dbg !2013

if.else76:                                        ; preds = %if.end67
  br label %do.body, !dbg !2014

do.body:                                          ; preds = %do.cond, %if.else76
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !2015
  %40 = load i32, i32* %i, align 4, !dbg !2016
  %inc = add nsw i32 %40, 1, !dbg !2016
  store i32 %inc, i32* %i, align 4, !dbg !2016
  %idxprom = sext i32 %40 to i64, !dbg !2015
  %arrayidx77 = getelementptr inbounds i8*, i8** %39, i64 %idxprom, !dbg !2015, !ctir !142
  %41 = load i8*, i8** %arrayidx77, align 8, !dbg !2015
  %call78 = call i64 @gobble_file(i8* %41, i32 0, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2017
  br label %do.cond, !dbg !2017

do.cond:                                          ; preds = %do.body
  %42 = load i32, i32* %i, align 4, !dbg !2018
  %43 = load i32, i32* %argc.addr, align 4, !dbg !2019
  %cmp79 = icmp slt i32 %42, %43, !dbg !2020
  br i1 %cmp79, label %do.body, label %do.end, !dbg !2017, !llvm.loop !2021

do.end:                                           ; preds = %do.cond
  br label %if.end80

if.end80:                                         ; preds = %do.end, %if.end75
  %44 = load i64, i64* @cwd_n_used, align 8, !dbg !2023
  %tobool81 = icmp ne i64 %44, 0, !dbg !2023
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !2025

if.then82:                                        ; preds = %if.end80
  call void @sort_files(), !dbg !2026
  %45 = load i8, i8* @immediate_dirs, align 1, !dbg !2028
  %tobool83 = trunc i8 %45 to i1, !dbg !2028
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !2030

if.then84:                                        ; preds = %if.then82
  call void @extract_dirs_from_files(i8* null, i1 zeroext true), !dbg !2031
  br label %if.end85, !dbg !2031

if.end85:                                         ; preds = %if.then84, %if.then82
  br label %if.end86, !dbg !2032

if.end86:                                         ; preds = %if.end85, %if.end80
  %46 = load i64, i64* @cwd_n_used, align 8, !dbg !2033
  %tobool87 = icmp ne i64 %46, 0, !dbg !2033
  br i1 %tobool87, label %if.then88, label %if.else97, !dbg !2035

if.then88:                                        ; preds = %if.end86
  call void @print_current_files(), !dbg !2036
  %47 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2038
  %tobool89 = icmp ne %struct.pending* %47, null, !dbg !2038
  br i1 %tobool89, label %if.then90, label %if.end96, !dbg !2040

if.then90:                                        ; preds = %if.then88
  br label %do.body91, !dbg !2041

do.body91:                                        ; preds = %if.then90
  %call92 = call i32 @putchar_unlocked(i32 10), !dbg !2042
  %48 = load i64, i64* @dired_pos, align 8, !dbg !2042
  %inc93 = add i64 %48, 1, !dbg !2042
  store i64 %inc93, i64* @dired_pos, align 8, !dbg !2042
  br label %do.end95, !dbg !2042

do.end95:                                         ; preds = %do.body91
  br label %if.end96, !dbg !2042

if.end96:                                         ; preds = %do.end95, %if.then88
  br label %if.end105, !dbg !2044

if.else97:                                        ; preds = %if.end86
  %49 = load i32, i32* %n_files, align 4, !dbg !2045
  %cmp98 = icmp sle i32 %49, 1, !dbg !2047
  br i1 %cmp98, label %land.lhs.true99, label %if.end104, !dbg !2048

land.lhs.true99:                                  ; preds = %if.else97
  %50 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2049
  %tobool100 = icmp ne %struct.pending* %50, null, !dbg !2049
  br i1 %tobool100, label %land.lhs.true101, label %if.end104, !dbg !2050

land.lhs.true101:                                 ; preds = %land.lhs.true99
  %51 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2051
  %next = getelementptr inbounds %struct.pending, %struct.pending* %51, i32 0, i32 3, !dbg !2052, !ctir !234
  %52 = load %struct.pending*, %struct.pending** %next, align 8, !dbg !2052, !ctir !233
  %cmp102 = icmp eq %struct.pending* %52, null, !dbg !2053
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !2054

if.then103:                                       ; preds = %land.lhs.true101
  store i8 0, i8* @print_dir_name, align 1, !dbg !2055
  br label %if.end104, !dbg !2056

if.end104:                                        ; preds = %if.then103, %land.lhs.true101, %land.lhs.true99, %if.else97
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end96
  br label %while.cond, !dbg !2057

while.cond:                                       ; preds = %if.end116, %cond.end, %if.end105
  %53 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2058
  %tobool106 = icmp ne %struct.pending* %53, null, !dbg !2057
  br i1 %tobool106, label %while.body, label %while.end, !dbg !2057

while.body:                                       ; preds = %while.cond
  %54 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2059
  store %struct.pending* %54, %struct.pending** %thispend, align 8, !dbg !2061
  %55 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2062
  %next107 = getelementptr inbounds %struct.pending, %struct.pending* %55, i32 0, i32 3, !dbg !2063, !ctir !234
  %56 = load %struct.pending*, %struct.pending** %next107, align 8, !dbg !2063, !ctir !233
  store %struct.pending* %56, %struct.pending** @pending_dirs, align 8, !dbg !2064
  %57 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2065
  %tobool108 = icmp ne %struct.hash_table* %57, null, !dbg !2065
  br i1 %tobool108, label %if.then109, label %if.end116, !dbg !2067

if.then109:                                       ; preds = %while.body
  %58 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2068
  %name = getelementptr inbounds %struct.pending, %struct.pending* %58, i32 0, i32 0, !dbg !2071, !ctir !234
  %59 = load i8*, i8** %name, align 8, !dbg !2071, !ctir !143
  %cmp110 = icmp eq i8* %59, null, !dbg !2072
  br i1 %cmp110, label %if.then111, label %if.end115, !dbg !2073

if.then111:                                       ; preds = %if.then109
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %di, metadata !2074, metadata !DIExpression()), !dbg !2076
  %call112 = call { i64, i64 } @dev_ino_pop(), !dbg !2077
  %60 = bitcast %struct.dev_ino* %di to { i64, i64 }*, !dbg !2077
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 0, !dbg !2077
  %62 = extractvalue { i64, i64 } %call112, 0, !dbg !2077
  store i64 %62, i64* %61, align 8, !dbg !2077
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 1, !dbg !2077
  %64 = extractvalue { i64, i64 } %call112, 1, !dbg !2077
  store i64 %64, i64* %63, align 8, !dbg !2077
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %found, metadata !2078, metadata !DIExpression()), !dbg !2079
  %65 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2080
  %66 = bitcast %struct.dev_ino* %di to i8*, !dbg !2081
  %call113 = call i8* @hash_delete(%struct.hash_table* %65, i8* %66), !dbg !2082
  %67 = bitcast i8* %call113 to %struct.dev_ino*, !dbg !2082
  store %struct.dev_ino* %67, %struct.dev_ino** %found, align 8, !dbg !2079
  %68 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2083
  %tobool114 = icmp ne %struct.dev_ino* %68, null, !dbg !2083
  br i1 %tobool114, label %cond.true, label %cond.false, !dbg !2083

cond.true:                                        ; preds = %if.then111
  br label %cond.end, !dbg !2083

cond.false:                                       ; preds = %if.then111
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1600, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2083
  unreachable, !dbg !2083

69:                                               ; No predecessors!
  br label %cond.end, !dbg !2083

cond.end:                                         ; preds = %69, %cond.true
  %70 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2084
  %71 = bitcast %struct.dev_ino* %70 to i8*, !dbg !2084
  call void @dev_ino_free(i8* %71), !dbg !2085
  %72 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2086
  call void @free_pending_ent(%struct.pending* %72), !dbg !2087
  br label %while.cond, !dbg !2088, !llvm.loop !2089

if.end115:                                        ; preds = %if.then109
  br label %if.end116, !dbg !2091

if.end116:                                        ; preds = %if.end115, %while.body
  %73 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2092
  %name117 = getelementptr inbounds %struct.pending, %struct.pending* %73, i32 0, i32 0, !dbg !2093, !ctir !234
  %74 = load i8*, i8** %name117, align 8, !dbg !2093, !ctir !143
  %75 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2094
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %75, i32 0, i32 1, !dbg !2095, !ctir !234
  %76 = load i8*, i8** %realname, align 8, !dbg !2095, !ctir !143
  %77 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2096
  %command_line_arg = getelementptr inbounds %struct.pending, %struct.pending* %77, i32 0, i32 2, !dbg !2097, !ctir !234
  %78 = load i8, i8* %command_line_arg, align 8, !dbg !2097
  %tobool118 = trunc i8 %78 to i1, !dbg !2097, !ctir !141
  call void @print_dir(i8* %74, i8* %76, i1 zeroext %tobool118), !dbg !2098
  %79 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2099
  call void @free_pending_ent(%struct.pending* %79), !dbg !2100
  store i8 1, i8* @print_dir_name, align 1, !dbg !2101
  br label %while.cond, !dbg !2057, !llvm.loop !2089

while.end:                                        ; preds = %while.cond
  %80 = load i8, i8* @print_with_color, align 1, !dbg !2102
  %tobool119 = trunc i8 %80 to i1, !dbg !2102
  br i1 %tobool119, label %land.lhs.true120, label %if.end142, !dbg !2104

land.lhs.true120:                                 ; preds = %while.end
  %81 = load i8, i8* @used_color, align 1, !dbg !2105
  %tobool121 = trunc i8 %81 to i1, !dbg !2105
  br i1 %tobool121, label %if.then122, label %if.end142, !dbg !2106

if.then122:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2107, metadata !DIExpression()), !dbg !2109
  %82 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 0), align 16, !dbg !2110, !ctir !149
  %cmp123 = icmp eq i64 %82, 2, !dbg !2112
  br i1 %cmp123, label %land.lhs.true124, label %if.then133, !dbg !2113

land.lhs.true124:                                 ; preds = %if.then122
  %83 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 1), align 8, !dbg !2114, !ctir !146
  %call125 = call i32 @memcmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16, !dbg !2115
  %cmp126 = icmp eq i32 %call125, 0, !dbg !2116
  br i1 %cmp126, label %land.lhs.true127, label %if.then133, !dbg !2117

land.lhs.true127:                                 ; preds = %land.lhs.true124
  %84 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 0), align 16, !dbg !2118, !ctir !149
  %cmp128 = icmp eq i64 %84, 1, !dbg !2119
  br i1 %cmp128, label %land.lhs.true129, label %if.then133, !dbg !2120

land.lhs.true129:                                 ; preds = %land.lhs.true127
  %85 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 1), align 8, !dbg !2121, !ctir !146
  %arrayidx130 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !2122, !ctir !146
  %86 = load i8, i8* %arrayidx130, align 1, !dbg !2122
  %conv = sext i8 %86 to i32, !dbg !2122
  %cmp131 = icmp eq i32 %conv, 109, !dbg !2123
  br i1 %cmp131, label %if.end134, label %if.then133, !dbg !2124

if.then133:                                       ; preds = %land.lhs.true129, %land.lhs.true127, %land.lhs.true124, %if.then122
  call void @restore_default_color(), !dbg !2125
  br label %if.end134, !dbg !2125

if.end134:                                        ; preds = %if.then133, %land.lhs.true129
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2126
  %call135 = call i32 @fflush_unlocked(%struct._IO_FILE* %87), !dbg !2126
  call void @signal_restore(), !dbg !2127
  %88 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !2128
  store i32 %88, i32* %j, align 4, !dbg !2130
  br label %for.cond, !dbg !2131

for.cond:                                         ; preds = %for.inc, %if.end134
  %89 = load i32, i32* %j, align 4, !dbg !2132
  %tobool136 = icmp ne i32 %89, 0, !dbg !2134
  br i1 %tobool136, label %for.body, label %for.end, !dbg !2134

for.body:                                         ; preds = %for.cond
  %call137 = call i32 @raise(i32 19) #13, !dbg !2135
  br label %for.inc, !dbg !2135

for.inc:                                          ; preds = %for.body
  %90 = load i32, i32* %j, align 4, !dbg !2136
  %dec = add nsw i32 %90, -1, !dbg !2136
  store i32 %dec, i32* %j, align 4, !dbg !2136
  br label %for.cond, !dbg !2137, !llvm.loop !2138

for.end:                                          ; preds = %for.cond
  %91 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !2140
  store i32 %91, i32* %j, align 4, !dbg !2141
  %92 = load i32, i32* %j, align 4, !dbg !2142
  %tobool138 = icmp ne i32 %92, 0, !dbg !2142
  br i1 %tobool138, label %if.then139, label %if.end141, !dbg !2144

if.then139:                                       ; preds = %for.end
  %93 = load i32, i32* %j, align 4, !dbg !2145
  %call140 = call i32 @raise(i32 %93) #13, !dbg !2146
  br label %if.end141, !dbg !2146

if.end141:                                        ; preds = %if.then139, %for.end
  br label %if.end142, !dbg !2147

if.end142:                                        ; preds = %if.end141, %land.lhs.true120, %while.end
  %94 = load i8, i8* @dired, align 1, !dbg !2148
  %tobool143 = trunc i8 %94 to i1, !dbg !2148
  br i1 %tobool143, label %if.then144, label %if.end149, !dbg !2150

if.then144:                                       ; preds = %if.end142
  call void @dired_dump_obstack(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), %struct.obstack* @dired_obstack), !dbg !2151
  call void @dired_dump_obstack(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), %struct.obstack* @subdired_obstack), !dbg !2153
  %95 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2154
  %call145 = call i32 @get_quoting_style(%struct.quoting_options* %95), !dbg !2155
  %idxprom146 = zext i32 %call145 to i64, !dbg !2156
  %arrayidx147 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @quoting_style_args to [0 x i8*]*), i64 0, i64 %idxprom146, !dbg !2156, !ctir !340
  %96 = load i8*, i8** %arrayidx147, align 8, !dbg !2156
  %call148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* %96), !dbg !2157
  br label %if.end149, !dbg !2158

if.end149:                                        ; preds = %if.then144, %if.end142
  %97 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2159
  %tobool150 = icmp ne %struct.hash_table* %97, null, !dbg !2159
  br i1 %tobool150, label %if.then151, label %if.end158, !dbg !2161

if.then151:                                       ; preds = %if.end149
  %98 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2162
  %call152 = call i64 @hash_get_n_entries(%struct.hash_table* %98) #16, !dbg !2162
  %cmp153 = icmp eq i64 %call152, 0, !dbg !2162
  br i1 %cmp153, label %cond.true155, label %cond.false156, !dbg !2162

cond.true155:                                     ; preds = %if.then151
  br label %cond.end157, !dbg !2162

cond.false156:                                    ; preds = %if.then151
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1652, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2162
  unreachable, !dbg !2162

99:                                               ; No predecessors!
  br label %cond.end157, !dbg !2162

cond.end157:                                      ; preds = %99, %cond.true155
  %100 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2164
  call void @hash_free(%struct.hash_table* %100), !dbg !2165
  br label %if.end158, !dbg !2166

if.end158:                                        ; preds = %cond.end157, %if.end149
  %101 = load i32, i32* @exit_status, align 4, !dbg !2167
  ret i32 %101, !dbg !2168
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_exit_failure(i32 %status) #0 !dbg !2169 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2170, metadata !DIExpression()), !dbg !2171
  %0 = load i32, i32* %status.addr, align 4, !dbg !2172
  %cmp = icmp ne i32 %0, 1, !dbg !2174
  br i1 %cmp, label %if.then, label %if.end, !dbg !2175

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !2176
  store volatile i32 %1, i32* @exit_failure, align 4, !dbg !2177
  br label %if.end, !dbg !2178

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2179
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_switches(i32 %argc, i8** %argv) #0 !dbg !916 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %time_style_option = alloca i8*, align 8, !ctir !143
  %sort_type_specified = alloca i8, align 1, !ctir !141
  %kibibytes_specified = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %ws = alloca %struct.winsize, align 2, !ctir !2180
  %p29 = alloca i8*, align 8, !ctir !146
  %tmp_ulong = alloca i64, align 8, !ctir !151
  %oi = alloca i32, align 4, !ctir !27
  %c = alloca i32, align 4, !ctir !27
  %hide = alloca %struct.ignore_pattern*, align 8, !ctir !605
  %i = alloca i32, align 4, !ctir !27
  %i139 = alloca i32, align 4, !ctir !27
  %e = alloca i32, align 4, !ctir !109
  %ls_block_size = alloca i8*, align 8, !ctir !146
  %qs = alloca i32, align 4, !ctir !95
  %p231 = alloca i8*, align 8, !ctir !146
  %style = alloca i8*, align 8, !ctir !143
  %p0 = alloca i8*, align 8, !ctir !143
  %p1 = alloca i8*, align 8, !ctir !143
  %res = alloca i64, align 8, !ctir !675
  %p304 = alloca i8**, align 8, !ctir !681
  %i320 = alloca i32, align 4, !ctir !27
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2187, metadata !DIExpression()), !dbg !2188
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2189, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.declare(metadata i8** %time_style_option, metadata !2191, metadata !DIExpression()), !dbg !2192
  store i8* null, i8** %time_style_option, align 8, !dbg !2192
  call void @llvm.dbg.declare(metadata i8* %sort_type_specified, metadata !2193, metadata !DIExpression()), !dbg !2194
  store i8 0, i8* %sort_type_specified, align 1, !dbg !2194
  call void @llvm.dbg.declare(metadata i8* %kibibytes_specified, metadata !2195, metadata !DIExpression()), !dbg !2196
  store i8 0, i8* %kibibytes_specified, align 1, !dbg !2196
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2197
  %0 = load i32, i32* @ls_mode, align 4, !dbg !2198
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !2199

sw.bb:                                            ; preds = %entry
  store i32 2, i32* @format, align 4, !dbg !2200
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2202
  br label %sw.epilog, !dbg !2203

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* @format, align 4, !dbg !2204
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2205
  br label %sw.epilog, !dbg !2206

sw.bb2:                                           ; preds = %entry
  %call = call i32 @isatty(i32 1) #13, !dbg !2207
  %tobool = icmp ne i32 %call, 0, !dbg !2207
  br i1 %tobool, label %if.then, label %if.else, !dbg !2209

if.then:                                          ; preds = %sw.bb2
  store i32 2, i32* @format, align 4, !dbg !2210
  call void @set_quoting_style(%struct.quoting_options* null, i32 3), !dbg !2212
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2213
  br label %if.end, !dbg !2214

if.else:                                          ; preds = %sw.bb2
  store i32 1, i32* @format, align 4, !dbg !2215
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2217
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !2218

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !2219
  unreachable, !dbg !2219

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  store i32 0, i32* @time_type, align 4, !dbg !2220
  store i32 0, i32* @sort_type, align 4, !dbg !2221
  store i8 0, i8* @sort_reverse, align 1, !dbg !2222
  store i8 0, i8* @numeric_ids, align 1, !dbg !2223
  store i8 0, i8* @print_block_size, align 1, !dbg !2224
  store i32 0, i32* @indicator_style, align 4, !dbg !2225
  store i8 0, i8* @print_inode, align 1, !dbg !2226
  store i32 1, i32* @dereference, align 4, !dbg !2227
  store i8 0, i8* @recursive, align 1, !dbg !2228
  store i8 0, i8* @immediate_dirs, align 1, !dbg !2229
  store i32 0, i32* @ignore_mode, align 4, !dbg !2230
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !2231
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !2232
  store i8 0, i8* @print_scontext, align 1, !dbg !2233
  call void @getenv_quoting_style(), !dbg !2234
  store i64 80, i64* @line_length, align 8, !dbg !2235
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2236, metadata !DIExpression()), !dbg !2238
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !2239
  store i8* %call3, i8** %p, align 8, !dbg !2238
  %1 = load i8*, i8** %p, align 8, !dbg !2240
  %tobool4 = icmp ne i8* %1, null, !dbg !2240
  br i1 %tobool4, label %land.lhs.true, label %if.end11, !dbg !2242

land.lhs.true:                                    ; preds = %sw.epilog
  %2 = load i8*, i8** %p, align 8, !dbg !2243
  %3 = load i8, i8* %2, align 1, !dbg !2244, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !2244
  %tobool5 = icmp ne i32 %conv, 0, !dbg !2244
  br i1 %tobool5, label %land.lhs.true6, label %if.end11, !dbg !2245

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %p, align 8, !dbg !2246
  %call7 = call zeroext i1 @set_line_length(i8* %4), !dbg !2247
  br i1 %call7, label %if.end11, label %if.then8, !dbg !2248

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.64, i64 0, i64 0)) #13, !dbg !2249
  %5 = load i8*, i8** %p, align 8, !dbg !2250
  %call10 = call i8* @quote(i8* %5), !dbg !2251
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call9, i8* %call10), !dbg !2252
  br label %if.end11, !dbg !2252

if.end11:                                         ; preds = %if.then8, %land.lhs.true6, %land.lhs.true, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.winsize* %ws, metadata !2253, metadata !DIExpression()), !dbg !2255
  %call12 = call i32 (i32, i64, ...) @ioctl(i32 1, i64 21523, %struct.winsize* %ws) #13, !dbg !2256
  %cmp = icmp ne i32 %call12, -1, !dbg !2258
  br i1 %cmp, label %land.lhs.true14, label %if.end28, !dbg !2259

land.lhs.true14:                                  ; preds = %if.end11
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2260, !ctir !2180
  %6 = load i16, i16* %ws_col, align 2, !dbg !2260, !ctir !177
  %conv15 = zext i16 %6 to i32, !dbg !2261
  %cmp16 = icmp slt i32 0, %conv15, !dbg !2262
  br i1 %cmp16, label %land.lhs.true18, label %if.end28, !dbg !2263

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %ws_col19 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2264, !ctir !2180
  %7 = load i16, i16* %ws_col19, align 2, !dbg !2264, !ctir !177
  %conv20 = zext i16 %7 to i64, !dbg !2265
  %ws_col21 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2266, !ctir !2180
  %8 = load i16, i16* %ws_col21, align 2, !dbg !2266, !ctir !177
  %conv22 = zext i16 %8 to i64, !dbg !2267
  %cmp23 = icmp eq i64 %conv20, %conv22, !dbg !2268
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !2269

if.then25:                                        ; preds = %land.lhs.true18
  %ws_col26 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2270, !ctir !2180
  %9 = load i16, i16* %ws_col26, align 2, !dbg !2270, !ctir !177
  %conv27 = zext i16 %9 to i64, !dbg !2271
  store i64 %conv27, i64* @line_length, align 8, !dbg !2272
  br label %if.end28, !dbg !2273

if.end28:                                         ; preds = %if.then25, %land.lhs.true18, %land.lhs.true14, %if.end11
  call void @llvm.dbg.declare(metadata i8** %p29, metadata !2274, metadata !DIExpression()), !dbg !2276
  %call30 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0)) #13, !dbg !2277
  store i8* %call30, i8** %p29, align 8, !dbg !2276
  store i64 8, i64* @tabsize, align 8, !dbg !2278
  %10 = load i8*, i8** %p29, align 8, !dbg !2279
  %tobool31 = icmp ne i8* %10, null, !dbg !2279
  br i1 %tobool31, label %if.then32, label %if.end44, !dbg !2281

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i64* %tmp_ulong, metadata !2282, metadata !DIExpression()), !dbg !2284
  %11 = load i8*, i8** %p29, align 8, !dbg !2285
  %call33 = call i32 @xstrtoul(i8* %11, i8** null, i32 0, i64* %tmp_ulong, i8* null), !dbg !2287
  %cmp34 = icmp eq i32 %call33, 0, !dbg !2288
  br i1 %cmp34, label %land.lhs.true36, label %if.else40, !dbg !2289

land.lhs.true36:                                  ; preds = %if.then32
  %12 = load i64, i64* %tmp_ulong, align 8, !dbg !2290
  %cmp37 = icmp ule i64 %12, -1, !dbg !2291
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !2292

if.then39:                                        ; preds = %land.lhs.true36
  %13 = load i64, i64* %tmp_ulong, align 8, !dbg !2293
  store i64 %13, i64* @tabsize, align 8, !dbg !2295
  br label %if.end43, !dbg !2296

if.else40:                                        ; preds = %land.lhs.true36, %if.then32
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !2297
  %14 = load i8*, i8** %p29, align 8, !dbg !2299
  %call42 = call i8* @quote(i8* %14), !dbg !2300
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call42), !dbg !2301
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then39
  br label %if.end44, !dbg !2302

if.end44:                                         ; preds = %if.end43, %if.end28
  br label %while.body, !dbg !2303

while.body:                                       ; preds = %if.end44, %sw.epilog182
  call void @llvm.dbg.declare(metadata i32* %oi, metadata !2304, metadata !DIExpression()), !dbg !2306
  store i32 -1, i32* %oi, align 4, !dbg !2306
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2307, metadata !DIExpression()), !dbg !2308
  %15 = load i32, i32* %argc.addr, align 4, !dbg !2309
  %16 = load i8**, i8*** %argv.addr, align 8, !dbg !2310
  %call45 = call i32 @getopt_long(i32 %15, i8** %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.67, i64 0, i64 0), %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) #13, !dbg !2311
  store i32 %call45, i32* %c, align 4, !dbg !2308
  %17 = load i32, i32* %c, align 4, !dbg !2312
  %cmp46 = icmp eq i32 %17, -1, !dbg !2314
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2315

if.then48:                                        ; preds = %while.body
  br label %while.end, !dbg !2316

if.end49:                                         ; preds = %while.body
  %18 = load i32, i32* %c, align 4, !dbg !2317
  switch i32 %18, label %sw.default181 [
    i32 97, label %sw.bb50
    i32 98, label %sw.bb51
    i32 99, label %sw.bb52
    i32 100, label %sw.bb53
    i32 102, label %sw.bb54
    i32 132, label %sw.bb61
    i32 103, label %sw.bb62
    i32 104, label %sw.bb63
    i32 105, label %sw.bb64
    i32 107, label %sw.bb65
    i32 108, label %sw.bb66
    i32 109, label %sw.bb67
    i32 110, label %sw.bb68
    i32 111, label %sw.bb69
    i32 112, label %sw.bb70
    i32 113, label %sw.bb71
    i32 114, label %sw.bb72
    i32 115, label %sw.bb73
    i32 116, label %sw.bb74
    i32 117, label %sw.bb75
    i32 118, label %sw.bb76
    i32 119, label %sw.bb77
    i32 120, label %sw.bb83
    i32 65, label %sw.bb84
    i32 66, label %sw.bb85
    i32 67, label %sw.bb86
    i32 68, label %sw.bb87
    i32 70, label %sw.bb88
    i32 71, label %sw.bb89
    i32 72, label %sw.bb90
    i32 131, label %sw.bb91
    i32 73, label %sw.bb92
    i32 76, label %sw.bb93
    i32 78, label %sw.bb94
    i32 81, label %sw.bb95
    i32 82, label %sw.bb96
    i32 83, label %sw.bb97
    i32 84, label %sw.bb98
    i32 85, label %sw.bb101
    i32 88, label %sw.bb102
    i32 49, label %sw.bb103
    i32 128, label %sw.bb108
    i32 136, label %sw.bb109
    i32 142, label %sw.bb111
    i32 135, label %sw.bb113
    i32 143, label %sw.bb114
    i32 133, label %sw.bb117
    i32 134, label %sw.bb120
    i32 130, label %sw.bb122
    i32 137, label %sw.bb138
    i32 138, label %sw.bb157
    i32 139, label %sw.bb160
    i32 144, label %sw.bb163
    i32 140, label %sw.bb164
    i32 129, label %sw.bb165
    i32 141, label %sw.bb171
    i32 90, label %sw.bb172
    i32 -130, label %sw.bb173
    i32 -131, label %sw.bb174
  ], !dbg !2318

sw.bb50:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2319
  br label %sw.epilog182, !dbg !2321

sw.bb51:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2322
  br label %sw.epilog182, !dbg !2323

sw.bb52:                                          ; preds = %if.end49
  store i32 1, i32* @time_type, align 4, !dbg !2324
  br label %sw.epilog182, !dbg !2325

sw.bb53:                                          ; preds = %if.end49
  store i8 1, i8* @immediate_dirs, align 1, !dbg !2326
  br label %sw.epilog182, !dbg !2327

sw.bb54:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2328
  store i32 -1, i32* @sort_type, align 4, !dbg !2329
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2330
  %19 = load i32, i32* @format, align 4, !dbg !2331
  %cmp55 = icmp eq i32 %19, 0, !dbg !2333
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !2334

if.then57:                                        ; preds = %sw.bb54
  %call58 = call i32 @isatty(i32 1) #13, !dbg !2335
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2335
  %20 = zext i1 %tobool59 to i64, !dbg !2335
  %cond = select i1 %tobool59, i32 2, i32 1, !dbg !2335
  store i32 %cond, i32* @format, align 4, !dbg !2336
  br label %if.end60, !dbg !2337

if.end60:                                         ; preds = %if.then57, %sw.bb54
  store i8 0, i8* @print_block_size, align 1, !dbg !2338
  store i8 0, i8* @print_with_color, align 1, !dbg !2339
  store i8 0, i8* @print_hyperlink, align 1, !dbg !2340
  br label %sw.epilog182, !dbg !2341

sw.bb61:                                          ; preds = %if.end49
  store i32 2, i32* @indicator_style, align 4, !dbg !2342
  br label %sw.epilog182, !dbg !2343

sw.bb62:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2344
  store i8 0, i8* @print_owner, align 1, !dbg !2345
  br label %sw.epilog182, !dbg !2346

sw.bb63:                                          ; preds = %if.end49
  store i32 176, i32* @human_output_opts, align 4, !dbg !2347
  store i32 176, i32* @file_human_output_opts, align 4, !dbg !2348
  store i64 1, i64* @output_block_size, align 8, !dbg !2349
  store i64 1, i64* @file_output_block_size, align 8, !dbg !2350
  br label %sw.epilog182, !dbg !2351

sw.bb64:                                          ; preds = %if.end49
  store i8 1, i8* @print_inode, align 1, !dbg !2352
  br label %sw.epilog182, !dbg !2353

sw.bb65:                                          ; preds = %if.end49
  store i8 1, i8* %kibibytes_specified, align 1, !dbg !2354
  br label %sw.epilog182, !dbg !2355

sw.bb66:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2356
  br label %sw.epilog182, !dbg !2357

sw.bb67:                                          ; preds = %if.end49
  store i32 4, i32* @format, align 4, !dbg !2358
  br label %sw.epilog182, !dbg !2359

sw.bb68:                                          ; preds = %if.end49
  store i8 1, i8* @numeric_ids, align 1, !dbg !2360
  store i32 0, i32* @format, align 4, !dbg !2361
  br label %sw.epilog182, !dbg !2362

sw.bb69:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2363
  store i8 0, i8* @print_group, align 1, !dbg !2364
  br label %sw.epilog182, !dbg !2365

sw.bb70:                                          ; preds = %if.end49
  store i32 1, i32* @indicator_style, align 4, !dbg !2366
  br label %sw.epilog182, !dbg !2367

sw.bb71:                                          ; preds = %if.end49
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2368
  br label %sw.epilog182, !dbg !2369

sw.bb72:                                          ; preds = %if.end49
  store i8 1, i8* @sort_reverse, align 1, !dbg !2370
  br label %sw.epilog182, !dbg !2371

sw.bb73:                                          ; preds = %if.end49
  store i8 1, i8* @print_block_size, align 1, !dbg !2372
  br label %sw.epilog182, !dbg !2373

sw.bb74:                                          ; preds = %if.end49
  store i32 4, i32* @sort_type, align 4, !dbg !2374
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2375
  br label %sw.epilog182, !dbg !2376

sw.bb75:                                          ; preds = %if.end49
  store i32 2, i32* @time_type, align 4, !dbg !2377
  br label %sw.epilog182, !dbg !2378

sw.bb76:                                          ; preds = %if.end49
  store i32 3, i32* @sort_type, align 4, !dbg !2379
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2380
  br label %sw.epilog182, !dbg !2381

sw.bb77:                                          ; preds = %if.end49
  %21 = load i8*, i8** @optarg, align 8, !dbg !2382
  %call78 = call zeroext i1 @set_line_length(i8* %21), !dbg !2384
  br i1 %call78, label %if.end82, label %if.then79, !dbg !2385

if.then79:                                        ; preds = %sw.bb77
  %call80 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !2386
  %22 = load i8*, i8** @optarg, align 8, !dbg !2386
  %call81 = call i8* @quote(i8* %22), !dbg !2386
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0), i8* %call80, i8* %call81), !dbg !2386
  unreachable, !dbg !2386

if.end82:                                         ; preds = %sw.bb77
  br label %sw.epilog182, !dbg !2387

sw.bb83:                                          ; preds = %if.end49
  store i32 3, i32* @format, align 4, !dbg !2388
  br label %sw.epilog182, !dbg !2389

sw.bb84:                                          ; preds = %if.end49
  store i32 1, i32* @ignore_mode, align 4, !dbg !2390
  br label %sw.epilog182, !dbg !2391

sw.bb85:                                          ; preds = %if.end49
  call void @add_ignore_pattern(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i64 0, i64 0)), !dbg !2392
  call void @add_ignore_pattern(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0)), !dbg !2393
  br label %sw.epilog182, !dbg !2394

sw.bb86:                                          ; preds = %if.end49
  store i32 2, i32* @format, align 4, !dbg !2395
  br label %sw.epilog182, !dbg !2396

sw.bb87:                                          ; preds = %if.end49
  store i8 1, i8* @dired, align 1, !dbg !2397
  br label %sw.epilog182, !dbg !2398

sw.bb88:                                          ; preds = %if.end49
  store i32 3, i32* @indicator_style, align 4, !dbg !2399
  br label %sw.epilog182, !dbg !2400

sw.bb89:                                          ; preds = %if.end49
  store i8 0, i8* @print_group, align 1, !dbg !2401
  br label %sw.epilog182, !dbg !2402

sw.bb90:                                          ; preds = %if.end49
  store i32 3, i32* @dereference, align 4, !dbg !2403
  br label %sw.epilog182, !dbg !2404

sw.bb91:                                          ; preds = %if.end49
  store i32 4, i32* @dereference, align 4, !dbg !2405
  br label %sw.epilog182, !dbg !2406

sw.bb92:                                          ; preds = %if.end49
  %23 = load i8*, i8** @optarg, align 8, !dbg !2407
  call void @add_ignore_pattern(i8* %23), !dbg !2408
  br label %sw.epilog182, !dbg !2409

sw.bb93:                                          ; preds = %if.end49
  store i32 5, i32* @dereference, align 4, !dbg !2410
  br label %sw.epilog182, !dbg !2411

sw.bb94:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 0), !dbg !2412
  br label %sw.epilog182, !dbg !2413

sw.bb95:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 5), !dbg !2414
  br label %sw.epilog182, !dbg !2415

sw.bb96:                                          ; preds = %if.end49
  store i8 1, i8* @recursive, align 1, !dbg !2416
  br label %sw.epilog182, !dbg !2417

sw.bb97:                                          ; preds = %if.end49
  store i32 2, i32* @sort_type, align 4, !dbg !2418
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2419
  br label %sw.epilog182, !dbg !2420

sw.bb98:                                          ; preds = %if.end49
  %24 = load i8*, i8** @optarg, align 8, !dbg !2421
  %call99 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #13, !dbg !2422
  %call100 = call i64 @xnumtoumax(i8* %24, i32 0, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %call99, i32 2), !dbg !2423
  store i64 %call100, i64* @tabsize, align 8, !dbg !2424
  br label %sw.epilog182, !dbg !2425

sw.bb101:                                         ; preds = %if.end49
  store i32 -1, i32* @sort_type, align 4, !dbg !2426
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2427
  br label %sw.epilog182, !dbg !2428

sw.bb102:                                         ; preds = %if.end49
  store i32 1, i32* @sort_type, align 4, !dbg !2429
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2430
  br label %sw.epilog182, !dbg !2431

sw.bb103:                                         ; preds = %if.end49
  %25 = load i32, i32* @format, align 4, !dbg !2432
  %cmp104 = icmp ne i32 %25, 0, !dbg !2434
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !2435

if.then106:                                       ; preds = %sw.bb103
  store i32 1, i32* @format, align 4, !dbg !2436
  br label %if.end107, !dbg !2437

if.end107:                                        ; preds = %if.then106, %sw.bb103
  br label %sw.epilog182, !dbg !2438

sw.bb108:                                         ; preds = %if.end49
  store i8 1, i8* @print_author, align 1, !dbg !2439
  br label %sw.epilog182, !dbg !2440

sw.bb109:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %hide, metadata !2441, metadata !DIExpression()), !dbg !2443
  %call110 = call noalias i8* @xmalloc(i64 16), !dbg !2444
  %26 = bitcast i8* %call110 to %struct.ignore_pattern*, !dbg !2444
  store %struct.ignore_pattern* %26, %struct.ignore_pattern** %hide, align 8, !dbg !2443
  %27 = load i8*, i8** @optarg, align 8, !dbg !2445
  %28 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !2446
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %28, i32 0, i32 0, !dbg !2447, !ctir !606
  store i8* %27, i8** %pattern, align 8, !dbg !2448, !ctir !146
  %29 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !2449
  %30 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !2450
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %30, i32 0, i32 1, !dbg !2451, !ctir !606
  store %struct.ignore_pattern* %29, %struct.ignore_pattern** %next, align 8, !dbg !2452, !ctir !605
  %31 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !2453
  store %struct.ignore_pattern* %31, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !2454
  br label %sw.epilog182, !dbg !2455

sw.bb111:                                         ; preds = %if.end49
  %32 = load i8*, i8** @optarg, align 8, !dbg !2456
  %33 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2456
  %call112 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i8* %32, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @sort_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @sort_types to i8*), i64 4, void ()* %33), !dbg !2456
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @sort_types, i64 0, i64 %call112, !dbg !2456, !ctir !641
  %34 = load i32, i32* %arrayidx, align 4, !dbg !2456
  store i32 %34, i32* @sort_type, align 4, !dbg !2457
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2458
  br label %sw.epilog182, !dbg !2459

sw.bb113:                                         ; preds = %if.end49
  store i8 1, i8* @directories_first, align 1, !dbg !2460
  br label %sw.epilog182, !dbg !2461

sw.bb114:                                         ; preds = %if.end49
  %35 = load i8*, i8** @optarg, align 8, !dbg !2462
  %36 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2462
  %call115 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i8* %35, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @time_types to i8*), i64 4, void ()* %36), !dbg !2462
  %arrayidx116 = getelementptr inbounds [5 x i32], [5 x i32]* @time_types, i64 0, i64 %call115, !dbg !2462, !ctir !646
  %37 = load i32, i32* %arrayidx116, align 4, !dbg !2462
  store i32 %37, i32* @time_type, align 4, !dbg !2463
  br label %sw.epilog182, !dbg !2464

sw.bb117:                                         ; preds = %if.end49
  %38 = load i8*, i8** @optarg, align 8, !dbg !2465
  %39 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2465
  %call118 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), i8* %38, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @format_args, i64 0, i64 0), i8* bitcast ([7 x i32]* @format_types to i8*), i64 4, void ()* %39), !dbg !2465
  %arrayidx119 = getelementptr inbounds [7 x i32], [7 x i32]* @format_types, i64 0, i64 %call118, !dbg !2465, !ctir !648
  %40 = load i32, i32* %arrayidx119, align 4, !dbg !2465
  store i32 %40, i32* @format, align 4, !dbg !2466
  br label %sw.epilog182, !dbg !2467

sw.bb120:                                         ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2468
  %call121 = call i8* @bad_cast(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)), !dbg !2469
  store i8* %call121, i8** %time_style_option, align 8, !dbg !2470
  br label %sw.epilog182, !dbg !2471

sw.bb122:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2472, metadata !DIExpression()), !dbg !2474
  %41 = load i8*, i8** @optarg, align 8, !dbg !2475
  %tobool123 = icmp ne i8* %41, null, !dbg !2475
  br i1 %tobool123, label %if.then124, label %if.else127, !dbg !2477

if.then124:                                       ; preds = %sw.bb122
  %42 = load i8*, i8** @optarg, align 8, !dbg !2478
  %43 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2478
  %call125 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %42, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %43), !dbg !2478
  %arrayidx126 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call125, !dbg !2478, !ctir !651
  %44 = load i32, i32* %arrayidx126, align 4, !dbg !2478
  store i32 %44, i32* %i, align 4, !dbg !2479
  br label %if.end128, !dbg !2480

if.else127:                                       ; preds = %sw.bb122
  store i32 1, i32* %i, align 4, !dbg !2481
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then124
  %45 = load i32, i32* %i, align 4, !dbg !2482
  %cmp129 = icmp eq i32 %45, 1, !dbg !2483
  br i1 %cmp129, label %lor.end, label %lor.rhs, !dbg !2484

lor.rhs:                                          ; preds = %if.end128
  %46 = load i32, i32* %i, align 4, !dbg !2485
  %cmp131 = icmp eq i32 %46, 2, !dbg !2486
  br i1 %cmp131, label %land.rhs, label %land.end, !dbg !2487

land.rhs:                                         ; preds = %lor.rhs
  %call133 = call i32 @isatty(i32 1) #13, !dbg !2488
  %tobool134 = icmp ne i32 %call133, 0, !dbg !2487
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %47 = phi i1 [ false, %lor.rhs ], [ %tobool134, %land.rhs ], !dbg !2489
  br label %lor.end, !dbg !2484

lor.end:                                          ; preds = %land.end, %if.end128
  %48 = phi i1 [ true, %if.end128 ], [ %47, %land.end ]
  %frombool = zext i1 %48 to i8, !dbg !2490
  store i8 %frombool, i8* @print_with_color, align 1, !dbg !2490
  %49 = load i8, i8* @print_with_color, align 1, !dbg !2491
  %tobool135 = trunc i8 %49 to i1, !dbg !2491
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !2493

if.then136:                                       ; preds = %lor.end
  store i64 0, i64* @tabsize, align 8, !dbg !2494
  br label %if.end137, !dbg !2496

if.end137:                                        ; preds = %if.then136, %lor.end
  br label %sw.epilog182, !dbg !2497

sw.bb138:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i139, metadata !2498, metadata !DIExpression()), !dbg !2500
  %50 = load i8*, i8** @optarg, align 8, !dbg !2501
  %tobool140 = icmp ne i8* %50, null, !dbg !2501
  br i1 %tobool140, label %if.then141, label %if.else144, !dbg !2503

if.then141:                                       ; preds = %sw.bb138
  %51 = load i8*, i8** @optarg, align 8, !dbg !2504
  %52 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2504
  %call142 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i8* %51, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %52), !dbg !2504
  %arrayidx143 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call142, !dbg !2504, !ctir !651
  %53 = load i32, i32* %arrayidx143, align 4, !dbg !2504
  store i32 %53, i32* %i139, align 4, !dbg !2505
  br label %if.end145, !dbg !2506

if.else144:                                       ; preds = %sw.bb138
  store i32 1, i32* %i139, align 4, !dbg !2507
  br label %if.end145

if.end145:                                        ; preds = %if.else144, %if.then141
  %54 = load i32, i32* %i139, align 4, !dbg !2508
  %cmp146 = icmp eq i32 %54, 1, !dbg !2509
  br i1 %cmp146, label %lor.end155, label %lor.rhs148, !dbg !2510

lor.rhs148:                                       ; preds = %if.end145
  %55 = load i32, i32* %i139, align 4, !dbg !2511
  %cmp149 = icmp eq i32 %55, 2, !dbg !2512
  br i1 %cmp149, label %land.rhs151, label %land.end154, !dbg !2513

land.rhs151:                                      ; preds = %lor.rhs148
  %call152 = call i32 @isatty(i32 1) #13, !dbg !2514
  %tobool153 = icmp ne i32 %call152, 0, !dbg !2513
  br label %land.end154

land.end154:                                      ; preds = %land.rhs151, %lor.rhs148
  %56 = phi i1 [ false, %lor.rhs148 ], [ %tobool153, %land.rhs151 ], !dbg !2515
  br label %lor.end155, !dbg !2510

lor.end155:                                       ; preds = %land.end154, %if.end145
  %57 = phi i1 [ true, %if.end145 ], [ %56, %land.end154 ]
  %frombool156 = zext i1 %57 to i8, !dbg !2516
  store i8 %frombool156, i8* @print_hyperlink, align 1, !dbg !2516
  br label %sw.epilog182, !dbg !2517

sw.bb157:                                         ; preds = %if.end49
  %58 = load i8*, i8** @optarg, align 8, !dbg !2518
  %59 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2518
  %call158 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8* %58, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @indicator_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @indicator_style_types to i8*), i64 4, void ()* %59), !dbg !2518
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* @indicator_style_types, i64 0, i64 %call158, !dbg !2518, !ctir !655
  %60 = load i32, i32* %arrayidx159, align 4, !dbg !2518
  store i32 %60, i32* @indicator_style, align 4, !dbg !2519
  br label %sw.epilog182, !dbg !2520

sw.bb160:                                         ; preds = %if.end49
  %61 = load i8*, i8** @optarg, align 8, !dbg !2521
  %62 = load void ()*, void ()** @argmatch_die, align 8, !dbg !2521
  %call161 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0), i8* %61, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4, void ()* %62), !dbg !2521
  %arrayidx162 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %call161, !dbg !2521, !ctir !661
  %63 = load i32, i32* %arrayidx162, align 4, !dbg !2521
  call void @set_quoting_style(%struct.quoting_options* null, i32 %63), !dbg !2522
  br label %sw.epilog182, !dbg !2523

sw.bb163:                                         ; preds = %if.end49
  %64 = load i8*, i8** @optarg, align 8, !dbg !2524
  store i8* %64, i8** %time_style_option, align 8, !dbg !2525
  br label %sw.epilog182, !dbg !2526

sw.bb164:                                         ; preds = %if.end49
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2527
  br label %sw.epilog182, !dbg !2528

sw.bb165:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %e, metadata !2529, metadata !DIExpression()), !dbg !2531
  %65 = load i8*, i8** @optarg, align 8, !dbg !2532
  %call166 = call i32 @human_options(i8* %65, i32* @human_output_opts, i64* @output_block_size), !dbg !2533
  store i32 %call166, i32* %e, align 4, !dbg !2531
  %66 = load i32, i32* %e, align 4, !dbg !2534
  %cmp167 = icmp ne i32 %66, 0, !dbg !2536
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !2537

if.then169:                                       ; preds = %sw.bb165
  %67 = load i32, i32* %e, align 4, !dbg !2538
  %68 = load i32, i32* %oi, align 4, !dbg !2539
  %69 = load i8*, i8** @optarg, align 8, !dbg !2540
  call void @xstrtol_fatal(i32 %67, i32 %68, i8 signext 0, %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i8* %69) #14, !dbg !2541
  unreachable, !dbg !2541

if.end170:                                        ; preds = %sw.bb165
  %70 = load i32, i32* @human_output_opts, align 4, !dbg !2542
  store i32 %70, i32* @file_human_output_opts, align 4, !dbg !2543
  %71 = load i64, i64* @output_block_size, align 8, !dbg !2544
  store i64 %71, i64* @file_output_block_size, align 8, !dbg !2545
  br label %sw.epilog182, !dbg !2546

sw.bb171:                                         ; preds = %if.end49
  store i32 144, i32* @human_output_opts, align 4, !dbg !2547
  store i32 144, i32* @file_human_output_opts, align 4, !dbg !2548
  store i64 1, i64* @output_block_size, align 8, !dbg !2549
  store i64 1, i64* @file_output_block_size, align 8, !dbg !2550
  br label %sw.epilog182, !dbg !2551

sw.bb172:                                         ; preds = %if.end49
  store i8 1, i8* @print_scontext, align 1, !dbg !2552
  br label %sw.epilog182, !dbg !2553

sw.bb173:                                         ; preds = %if.end49
  call void @usage(i32 0) #14, !dbg !2554
  unreachable, !dbg !2554

sw.bb174:                                         ; preds = %if.end49
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2555
  %73 = load i32, i32* @ls_mode, align 4, !dbg !2555
  %cmp175 = icmp eq i32 %73, 1, !dbg !2555
  br i1 %cmp175, label %cond.true, label %cond.false, !dbg !2555

cond.true:                                        ; preds = %sw.bb174
  br label %cond.end, !dbg !2555

cond.false:                                       ; preds = %sw.bb174
  %74 = load i32, i32* @ls_mode, align 4, !dbg !2555
  %cmp177 = icmp eq i32 %74, 2, !dbg !2555
  %75 = zext i1 %cmp177 to i64, !dbg !2555
  %cond179 = select i1 %cmp177, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !2555
  br label %cond.end, !dbg !2555

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond180 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond179, %cond.false ], !dbg !2555
  %76 = load i8*, i8** @Version, align 8, !dbg !2555
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %72, i8* %cond180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* %76, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8* null), !dbg !2555
  call void @exit(i32 0) #15, !dbg !2555
  unreachable, !dbg !2555

sw.default181:                                    ; preds = %if.end49
  call void @usage(i32 2) #14, !dbg !2556
  unreachable, !dbg !2556

sw.epilog182:                                     ; preds = %sw.bb172, %sw.bb171, %if.end170, %sw.bb164, %sw.bb163, %sw.bb160, %sw.bb157, %lor.end155, %if.end137, %sw.bb120, %sw.bb117, %sw.bb114, %sw.bb113, %sw.bb111, %sw.bb109, %sw.bb108, %if.end107, %sw.bb102, %sw.bb101, %sw.bb98, %sw.bb97, %sw.bb96, %sw.bb95, %sw.bb94, %sw.bb93, %sw.bb92, %sw.bb91, %sw.bb90, %sw.bb89, %sw.bb88, %sw.bb87, %sw.bb86, %sw.bb85, %sw.bb84, %sw.bb83, %if.end82, %sw.bb76, %sw.bb75, %sw.bb74, %sw.bb73, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %if.end60, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50
  br label %while.body, !dbg !2303, !llvm.loop !2557

while.end:                                        ; preds = %if.then48
  %77 = load i64, i64* @output_block_size, align 8, !dbg !2559
  %tobool183 = icmp ne i64 %77, 0, !dbg !2559
  br i1 %tobool183, label %if.end195, label %if.then184, !dbg !2561

if.then184:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %ls_block_size, metadata !2562, metadata !DIExpression()), !dbg !2564
  %call185 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i64 0, i64 0)) #13, !dbg !2565
  store i8* %call185, i8** %ls_block_size, align 8, !dbg !2564
  %78 = load i8*, i8** %ls_block_size, align 8, !dbg !2566
  %call186 = call i32 @human_options(i8* %78, i32* @human_output_opts, i64* @output_block_size), !dbg !2567
  %79 = load i8*, i8** %ls_block_size, align 8, !dbg !2568
  %tobool187 = icmp ne i8* %79, null, !dbg !2568
  br i1 %tobool187, label %if.then190, label %lor.lhs.false, !dbg !2570

lor.lhs.false:                                    ; preds = %if.then184
  %call188 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0)) #13, !dbg !2571
  %tobool189 = icmp ne i8* %call188, null, !dbg !2571
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !2572

if.then190:                                       ; preds = %lor.lhs.false, %if.then184
  %80 = load i32, i32* @human_output_opts, align 4, !dbg !2573
  store i32 %80, i32* @file_human_output_opts, align 4, !dbg !2575
  %81 = load i64, i64* @output_block_size, align 8, !dbg !2576
  store i64 %81, i64* @file_output_block_size, align 8, !dbg !2577
  br label %if.end191, !dbg !2578

if.end191:                                        ; preds = %if.then190, %lor.lhs.false
  %82 = load i8, i8* %kibibytes_specified, align 1, !dbg !2579
  %tobool192 = trunc i8 %82 to i1, !dbg !2579
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !2581

if.then193:                                       ; preds = %if.end191
  store i32 0, i32* @human_output_opts, align 4, !dbg !2582
  store i64 1024, i64* @output_block_size, align 8, !dbg !2584
  br label %if.end194, !dbg !2585

if.end194:                                        ; preds = %if.then193, %if.end191
  br label %if.end195, !dbg !2586

if.end195:                                        ; preds = %if.end194, %while.end
  %83 = load i64, i64* @line_length, align 8, !dbg !2587
  %div = udiv i64 %83, 3, !dbg !2588
  store i64 %div, i64* @max_idx, align 8, !dbg !2589
  %84 = load i64, i64* @line_length, align 8, !dbg !2590
  %rem = urem i64 %84, 3, !dbg !2591
  %cmp196 = icmp ne i64 %rem, 0, !dbg !2592
  %conv197 = zext i1 %cmp196 to i32, !dbg !2592
  %conv198 = sext i32 %conv197 to i64, !dbg !2590
  %85 = load i64, i64* @max_idx, align 8, !dbg !2593
  %add = add i64 %85, %conv198, !dbg !2593
  store i64 %add, i64* @max_idx, align 8, !dbg !2593
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !2594, metadata !DIExpression()), !dbg !2595
  %call199 = call i32 @get_quoting_style(%struct.quoting_options* null), !dbg !2596
  store i32 %call199, i32* %qs, align 4, !dbg !2595
  %86 = load i32, i32* @format, align 4, !dbg !2597
  %cmp200 = icmp ne i32 %86, 4, !dbg !2598
  br i1 %cmp200, label %land.lhs.true202, label %land.end220, !dbg !2599

land.lhs.true202:                                 ; preds = %if.end195
  %87 = load i32, i32* @format, align 4, !dbg !2600
  %cmp203 = icmp ne i32 %87, 1, !dbg !2601
  br i1 %cmp203, label %land.lhs.true205, label %land.end220, !dbg !2602

land.lhs.true205:                                 ; preds = %land.lhs.true202
  %88 = load i64, i64* @line_length, align 8, !dbg !2603
  %tobool206 = icmp ne i64 %88, 0, !dbg !2603
  br i1 %tobool206, label %land.rhs210, label %lor.lhs.false207, !dbg !2604

lor.lhs.false207:                                 ; preds = %land.lhs.true205
  %89 = load i32, i32* @format, align 4, !dbg !2605
  %cmp208 = icmp eq i32 %89, 0, !dbg !2606
  br i1 %cmp208, label %land.rhs210, label %land.end220, !dbg !2607

land.rhs210:                                      ; preds = %lor.lhs.false207, %land.lhs.true205
  %90 = load i32, i32* %qs, align 4, !dbg !2608
  %cmp211 = icmp eq i32 %90, 1, !dbg !2609
  br i1 %cmp211, label %lor.end219, label %lor.lhs.false213, !dbg !2610

lor.lhs.false213:                                 ; preds = %land.rhs210
  %91 = load i32, i32* %qs, align 4, !dbg !2611
  %cmp214 = icmp eq i32 %91, 3, !dbg !2612
  br i1 %cmp214, label %lor.end219, label %lor.rhs216, !dbg !2613

lor.rhs216:                                       ; preds = %lor.lhs.false213
  %92 = load i32, i32* %qs, align 4, !dbg !2614
  %cmp217 = icmp eq i32 %92, 6, !dbg !2615
  br label %lor.end219, !dbg !2613

lor.end219:                                       ; preds = %lor.rhs216, %lor.lhs.false213, %land.rhs210
  %93 = phi i1 [ true, %lor.lhs.false213 ], [ true, %land.rhs210 ], [ %cmp217, %lor.rhs216 ]
  br label %land.end220

land.end220:                                      ; preds = %lor.end219, %lor.lhs.false207, %land.lhs.true202, %if.end195
  %94 = phi i1 [ false, %lor.lhs.false207 ], [ false, %land.lhs.true202 ], [ false, %if.end195 ], [ %93, %lor.end219 ], !dbg !2616
  %frombool221 = zext i1 %94 to i8, !dbg !2617
  store i8 %frombool221, i8* @align_variable_outer_quotes, align 1, !dbg !2617
  %call222 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !2618
  store %struct.quoting_options* %call222, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2619
  %95 = load i32, i32* %qs, align 4, !dbg !2620
  %cmp223 = icmp eq i32 %95, 7, !dbg !2622
  br i1 %cmp223, label %if.then225, label %if.end227, !dbg !2623

if.then225:                                       ; preds = %land.end220
  %96 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2624
  %call226 = call i32 @set_char_quoting(%struct.quoting_options* %96, i8 signext 32, i32 1), !dbg !2625
  br label %if.end227, !dbg !2625

if.end227:                                        ; preds = %if.then225, %land.end220
  %97 = load i32, i32* @indicator_style, align 4, !dbg !2626
  %cmp228 = icmp ule i32 2, %97, !dbg !2628
  br i1 %cmp228, label %if.then230, label %if.end235, !dbg !2629

if.then230:                                       ; preds = %if.end227
  call void @llvm.dbg.declare(metadata i8** %p231, metadata !2630, metadata !DIExpression()), !dbg !2632
  %98 = load i32, i32* @indicator_style, align 4, !dbg !2633
  %sub = sub i32 %98, 2, !dbg !2635
  %idxprom = zext i32 %sub to i64, !dbg !2636
  %arrayidx232 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.86, i64 0, i64 %idxprom, !dbg !2636, !ctir !270
  store i8* %arrayidx232, i8** %p231, align 8, !dbg !2637
  br label %for.cond, !dbg !2638

for.cond:                                         ; preds = %for.inc, %if.then230
  %99 = load i8*, i8** %p231, align 8, !dbg !2639
  %100 = load i8, i8* %99, align 1, !dbg !2641, !ctir !147
  %tobool233 = icmp ne i8 %100, 0, !dbg !2642
  br i1 %tobool233, label %for.body, label %for.end, !dbg !2642

for.body:                                         ; preds = %for.cond
  %101 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2643
  %102 = load i8*, i8** %p231, align 8, !dbg !2644
  %103 = load i8, i8* %102, align 1, !dbg !2645, !ctir !147
  %call234 = call i32 @set_char_quoting(%struct.quoting_options* %101, i8 signext %103, i32 1), !dbg !2646
  br label %for.inc, !dbg !2646

for.inc:                                          ; preds = %for.body
  %104 = load i8*, i8** %p231, align 8, !dbg !2647
  %incdec.ptr = getelementptr inbounds i8, i8* %104, i32 1, !dbg !2647, !ctir !147
  store i8* %incdec.ptr, i8** %p231, align 8, !dbg !2647
  br label %for.cond, !dbg !2648, !llvm.loop !2649

for.end:                                          ; preds = %for.cond
  br label %if.end235, !dbg !2651

if.end235:                                        ; preds = %for.end, %if.end227
  %call236 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !2652
  store %struct.quoting_options* %call236, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !2653
  %105 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !2654
  %call237 = call i32 @set_char_quoting(%struct.quoting_options* %105, i8 signext 58, i32 1), !dbg !2655
  %106 = load i8, i8* @dired, align 1, !dbg !2656
  %tobool238 = trunc i8 %106 to i1, !dbg !2656
  br i1 %tobool238, label %land.lhs.true240, label %if.end247, !dbg !2658

land.lhs.true240:                                 ; preds = %if.end235
  %107 = load i32, i32* @format, align 4, !dbg !2659
  %cmp241 = icmp ne i32 %107, 0, !dbg !2660
  br i1 %cmp241, label %if.then246, label %lor.lhs.false243, !dbg !2661

lor.lhs.false243:                                 ; preds = %land.lhs.true240
  %108 = load i8, i8* @print_hyperlink, align 1, !dbg !2662
  %tobool244 = trunc i8 %108 to i1, !dbg !2662
  br i1 %tobool244, label %if.then246, label %if.end247, !dbg !2663

if.then246:                                       ; preds = %lor.lhs.false243, %land.lhs.true240
  store i8 0, i8* @dired, align 1, !dbg !2664
  br label %if.end247, !dbg !2665

if.end247:                                        ; preds = %if.then246, %lor.lhs.false243, %if.end235
  %109 = load i32, i32* @time_type, align 4, !dbg !2666
  %cmp248 = icmp eq i32 %109, 1, !dbg !2668
  br i1 %cmp248, label %land.lhs.true253, label %lor.lhs.false250, !dbg !2669

lor.lhs.false250:                                 ; preds = %if.end247
  %110 = load i32, i32* @time_type, align 4, !dbg !2670
  %cmp251 = icmp eq i32 %110, 2, !dbg !2671
  br i1 %cmp251, label %land.lhs.true253, label %if.end259, !dbg !2672

land.lhs.true253:                                 ; preds = %lor.lhs.false250, %if.end247
  %111 = load i8, i8* %sort_type_specified, align 1, !dbg !2673
  %tobool254 = trunc i8 %111 to i1, !dbg !2673
  br i1 %tobool254, label %if.end259, label %land.lhs.true255, !dbg !2674

land.lhs.true255:                                 ; preds = %land.lhs.true253
  %112 = load i32, i32* @format, align 4, !dbg !2675
  %cmp256 = icmp ne i32 %112, 0, !dbg !2676
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !2677

if.then258:                                       ; preds = %land.lhs.true255
  store i32 4, i32* @sort_type, align 4, !dbg !2678
  br label %if.end259, !dbg !2680

if.end259:                                        ; preds = %if.then258, %land.lhs.true255, %land.lhs.true253, %lor.lhs.false250
  %113 = load i32, i32* @format, align 4, !dbg !2681
  %cmp260 = icmp eq i32 %113, 0, !dbg !2683
  br i1 %cmp260, label %if.then262, label %if.end335, !dbg !2684

if.then262:                                       ; preds = %if.end259
  call void @llvm.dbg.declare(metadata i8** %style, metadata !2685, metadata !DIExpression()), !dbg !2687
  %114 = load i8*, i8** %time_style_option, align 8, !dbg !2688
  store i8* %114, i8** %style, align 8, !dbg !2687
  %115 = load i8*, i8** %style, align 8, !dbg !2689
  %tobool263 = icmp ne i8* %115, null, !dbg !2689
  br i1 %tobool263, label %if.end270, label %if.then264, !dbg !2691

if.then264:                                       ; preds = %if.then262
  %call265 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #13, !dbg !2692
  store i8* %call265, i8** %style, align 8, !dbg !2694
  %tobool266 = icmp ne i8* %call265, null, !dbg !2694
  br i1 %tobool266, label %if.end269, label %if.then267, !dbg !2695

if.then267:                                       ; preds = %if.then264
  %call268 = call i8* @bad_cast(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0)), !dbg !2696
  store i8* %call268, i8** %style, align 8, !dbg !2697
  br label %if.end269, !dbg !2698

if.end269:                                        ; preds = %if.then267, %if.then264
  br label %if.end270, !dbg !2699

if.end270:                                        ; preds = %if.end269, %if.then262
  br label %while.cond, !dbg !2700

while.cond:                                       ; preds = %if.end277, %if.end270
  %116 = load i8*, i8** %style, align 8, !dbg !2701
  %call271 = call i32 @strncmp(i8* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @decode_switches.posix_prefix, i64 0, i64 0), i64 6) #16, !dbg !2701
  %cmp272 = icmp eq i32 %call271, 0, !dbg !2701
  br i1 %cmp272, label %while.body274, label %while.end278, !dbg !2700

while.body274:                                    ; preds = %while.cond
  %call275 = call zeroext i1 @hard_locale(i32 2), !dbg !2702
  br i1 %call275, label %if.end277, label %if.then276, !dbg !2705

if.then276:                                       ; preds = %while.body274
  %117 = load i32, i32* @optind, align 4, !dbg !2706
  store i32 %117, i32* %retval, align 4, !dbg !2707
  br label %return, !dbg !2707

if.end277:                                        ; preds = %while.body274
  %118 = load i8*, i8** %style, align 8, !dbg !2708
  %add.ptr = getelementptr inbounds i8, i8* %118, i64 6, !dbg !2708, !ctir !144
  store i8* %add.ptr, i8** %style, align 8, !dbg !2708
  br label %while.cond, !dbg !2700, !llvm.loop !2709

while.end278:                                     ; preds = %while.cond
  %119 = load i8*, i8** %style, align 8, !dbg !2711
  %120 = load i8, i8* %119, align 1, !dbg !2713, !ctir !144
  %conv279 = sext i8 %120 to i32, !dbg !2713
  %cmp280 = icmp eq i32 %conv279, 43, !dbg !2714
  br i1 %cmp280, label %if.then282, label %if.else297, !dbg !2715

if.then282:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !2716, metadata !DIExpression()), !dbg !2718
  %121 = load i8*, i8** %style, align 8, !dbg !2719
  %add.ptr283 = getelementptr inbounds i8, i8* %121, i64 1, !dbg !2720, !ctir !144
  store i8* %add.ptr283, i8** %p0, align 8, !dbg !2718
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !2721, metadata !DIExpression()), !dbg !2722
  %122 = load i8*, i8** %p0, align 8, !dbg !2723
  %call284 = call i8* @strchr(i8* %122, i32 10) #16, !dbg !2724
  store i8* %call284, i8** %p1, align 8, !dbg !2722
  %123 = load i8*, i8** %p1, align 8, !dbg !2725
  %tobool285 = icmp ne i8* %123, null, !dbg !2725
  br i1 %tobool285, label %if.else287, label %if.then286, !dbg !2727

if.then286:                                       ; preds = %if.then282
  %124 = load i8*, i8** %p0, align 8, !dbg !2728
  store i8* %124, i8** %p1, align 8, !dbg !2729
  br label %if.end296, !dbg !2730

if.else287:                                       ; preds = %if.then282
  %125 = load i8*, i8** %p1, align 8, !dbg !2731
  %add.ptr288 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !2734, !ctir !144
  %call289 = call i8* @strchr(i8* %add.ptr288, i32 10) #16, !dbg !2735
  %tobool290 = icmp ne i8* %call289, null, !dbg !2735
  br i1 %tobool290, label %if.then291, label %if.end294, !dbg !2736

if.then291:                                       ; preds = %if.else287
  %call292 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i64 0, i64 0)) #13, !dbg !2737
  %126 = load i8*, i8** %p0, align 8, !dbg !2737
  %call293 = call i8* @quote(i8* %126), !dbg !2737
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call292, i8* %call293), !dbg !2737
  unreachable, !dbg !2737

if.end294:                                        ; preds = %if.else287
  %127 = load i8*, i8** %p1, align 8, !dbg !2738
  %incdec.ptr295 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !2738, !ctir !144
  store i8* %incdec.ptr295, i8** %p1, align 8, !dbg !2738
  store i8 0, i8* %127, align 1, !dbg !2739, !ctir !144
  br label %if.end296

if.end296:                                        ; preds = %if.end294, %if.then286
  %128 = load i8*, i8** %p0, align 8, !dbg !2740
  store i8* %128, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !2741
  %129 = load i8*, i8** %p1, align 8, !dbg !2742
  store i8* %129, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !2743
  br label %if.end334, !dbg !2744

if.else297:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i64* %res, metadata !2745, metadata !DIExpression()), !dbg !2747
  %130 = load i8*, i8** %style, align 8, !dbg !2748
  %call298 = call i64 @argmatch(i8* %130, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @time_style_types to i8*), i64 4) #16, !dbg !2749
  store i64 %call298, i64* %res, align 8, !dbg !2747
  %131 = load i64, i64* %res, align 8, !dbg !2750
  %cmp299 = icmp slt i64 %131, 0, !dbg !2752
  br i1 %cmp299, label %if.then301, label %if.end313, !dbg !2753

if.then301:                                       ; preds = %if.else297
  %132 = load i8*, i8** %style, align 8, !dbg !2754
  %133 = load i64, i64* %res, align 8, !dbg !2756
  call void @argmatch_invalid(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i8* %132, i64 %133), !dbg !2757
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0)) #13, !dbg !2758
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2758
  %call303 = call i32 @fputs_unlocked(i8* %call302, %struct._IO_FILE* %134), !dbg !2758
  call void @llvm.dbg.declare(metadata i8*** %p304, metadata !2759, metadata !DIExpression()), !dbg !2760
  store i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8*** %p304, align 8, !dbg !2760
  br label %while.cond305, !dbg !2761

while.cond305:                                    ; preds = %while.body307, %if.then301
  %135 = load i8**, i8*** %p304, align 8, !dbg !2762
  %136 = load i8*, i8** %135, align 8, !dbg !2763, !ctir !341
  %tobool306 = icmp ne i8* %136, null, !dbg !2761
  br i1 %tobool306, label %while.body307, label %while.end310, !dbg !2761

while.body307:                                    ; preds = %while.cond305
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2764
  %138 = load i8**, i8*** %p304, align 8, !dbg !2765
  %incdec.ptr308 = getelementptr inbounds i8*, i8** %138, i32 1, !dbg !2765, !ctir !341
  store i8** %incdec.ptr308, i8*** %p304, align 8, !dbg !2765
  %139 = load i8*, i8** %138, align 8, !dbg !2766, !ctir !341
  %call309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0), i8* %139), !dbg !2767
  br label %while.cond305, !dbg !2761, !llvm.loop !2768

while.end310:                                     ; preds = %while.cond305
  %call311 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.93, i64 0, i64 0)) #13, !dbg !2770
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2770
  %call312 = call i32 @fputs_unlocked(i8* %call311, %struct._IO_FILE* %140), !dbg !2770
  call void @usage(i32 2) #14, !dbg !2771
  unreachable, !dbg !2771

if.end313:                                        ; preds = %if.else297
  %141 = load i64, i64* %res, align 8, !dbg !2772
  switch i64 %141, label %sw.epilog333 [
    i64 0, label %sw.bb314
    i64 1, label %sw.bb315
    i64 2, label %sw.bb316
    i64 3, label %sw.bb317
  ], !dbg !2773

sw.bb314:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !2774
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !2776
  br label %sw.epilog333, !dbg !2777

sw.bb315:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !2778
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !2779
  br label %sw.epilog333, !dbg !2780

sw.bb316:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !2781
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !2782
  br label %sw.epilog333, !dbg !2783

sw.bb317:                                         ; preds = %if.end313
  %call318 = call zeroext i1 @hard_locale(i32 2), !dbg !2784
  br i1 %call318, label %if.then319, label %if.end332, !dbg !2786

if.then319:                                       ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %i320, metadata !2787, metadata !DIExpression()), !dbg !2790
  store i32 0, i32* %i320, align 4, !dbg !2790
  br label %for.cond321, !dbg !2791

for.cond321:                                      ; preds = %for.inc330, %if.then319
  %142 = load i32, i32* %i320, align 4, !dbg !2792
  %cmp322 = icmp slt i32 %142, 2, !dbg !2794
  br i1 %cmp322, label %for.body324, label %for.end331, !dbg !2795

for.body324:                                      ; preds = %for.cond321
  %143 = load i32, i32* %i320, align 4, !dbg !2796
  %idxprom325 = sext i32 %143 to i64, !dbg !2797
  %arrayidx326 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom325, !dbg !2797, !ctir !674
  %144 = load i8*, i8** %arrayidx326, align 8, !dbg !2797
  %call327 = call i8* @dcgettext(i8* null, i8* %144, i32 2) #13, !dbg !2798
  %145 = load i32, i32* %i320, align 4, !dbg !2799
  %idxprom328 = sext i32 %145 to i64, !dbg !2800
  %arrayidx329 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom328, !dbg !2800, !ctir !674
  store i8* %call327, i8** %arrayidx329, align 8, !dbg !2801
  br label %for.inc330, !dbg !2800

for.inc330:                                       ; preds = %for.body324
  %146 = load i32, i32* %i320, align 4, !dbg !2802
  %inc = add nsw i32 %146, 1, !dbg !2802
  store i32 %inc, i32* %i320, align 4, !dbg !2802
  br label %for.cond321, !dbg !2803, !llvm.loop !2804

for.end331:                                       ; preds = %for.cond321
  br label %if.end332, !dbg !2806

if.end332:                                        ; preds = %for.end331, %sw.bb317
  br label %sw.epilog333, !dbg !2807

sw.epilog333:                                     ; preds = %if.end332, %if.end313, %sw.bb316, %sw.bb315, %sw.bb314
  br label %if.end334

if.end334:                                        ; preds = %sw.epilog333, %if.end296
  call void @abformat_init(), !dbg !2808
  br label %if.end335, !dbg !2809

if.end335:                                        ; preds = %if.end334, %if.end259
  %147 = load i32, i32* @optind, align 4, !dbg !2810
  store i32 %147, i32* %retval, align 4, !dbg !2811
  br label %return, !dbg !2811

return:                                           ; preds = %if.end335, %if.then276
  %148 = load i32, i32* %retval, align 4, !dbg !2812
  ret i32 %148, !dbg !2812
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_ls_color() #0 !dbg !2813 {
entry:
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca i8*, align 8, !ctir !143
  %ind_no = alloca i32, align 4, !ctir !27
  %label = alloca [3 x i8], align 1, !ctir !253
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !698
  %colorterm = alloca i8*, align 8, !ctir !146
  %state = alloca i32, align 4, !ctir !129
  %e = alloca %struct.color_ext_type*, align 8, !ctir !698
  %e2 = alloca %struct.color_ext_type*, align 8, !ctir !698
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2814, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2816, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.declare(metadata i32* %ind_no, metadata !2818, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.declare(metadata [3 x i8]* %label, metadata !2820, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !2822, metadata !DIExpression()), !dbg !2823
  %call = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.172, i64 0, i64 0)) #13, !dbg !2824
  store i8* %call, i8** %p, align 8, !dbg !2826
  %cmp = icmp eq i8* %call, null, !dbg !2827
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2828

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8*, i8** %p, align 8, !dbg !2829
  %1 = load i8, i8* %0, align 1, !dbg !2830, !ctir !147
  %conv = sext i8 %1 to i32, !dbg !2830
  %cmp1 = icmp eq i32 %conv, 0, !dbg !2831
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !2832

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i8** %colorterm, metadata !2833, metadata !DIExpression()), !dbg !2835
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i64 0, i64 0)) #13, !dbg !2836
  store i8* %call3, i8** %colorterm, align 8, !dbg !2835
  %2 = load i8*, i8** %colorterm, align 8, !dbg !2837
  %tobool = icmp ne i8* %2, null, !dbg !2837
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true6, !dbg !2839

land.lhs.true:                                    ; preds = %if.then
  %3 = load i8*, i8** %colorterm, align 8, !dbg !2840
  %4 = load i8, i8* %3, align 1, !dbg !2841, !ctir !147
  %conv4 = sext i8 %4 to i32, !dbg !2841
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !2841
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !2842

land.lhs.true6:                                   ; preds = %land.lhs.true, %if.then
  %call7 = call zeroext i1 @known_term_type(), !dbg !2843
  br i1 %call7, label %if.end, label %if.then8, !dbg !2844

if.then8:                                         ; preds = %land.lhs.true6
  store i8 0, i8* @print_with_color, align 1, !dbg !2845
  br label %if.end, !dbg !2846

if.end:                                           ; preds = %if.then8, %land.lhs.true6, %land.lhs.true
  br label %if.end97, !dbg !2847

if.end9:                                          ; preds = %lor.lhs.false
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !2848
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !2849, !ctir !253
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0)) #13, !dbg !2850
  %5 = load i8*, i8** %p, align 8, !dbg !2851
  %call11 = call noalias i8* @xstrdup(i8* %5), !dbg !2852
  store i8* %call11, i8** @color_buf, align 8, !dbg !2853
  store i8* %call11, i8** %buf, align 8, !dbg !2854
  call void @llvm.dbg.declare(metadata i32* %state, metadata !2855, metadata !DIExpression()), !dbg !2856
  store i32 1, i32* %state, align 4, !dbg !2856
  br label %while.body, !dbg !2857

while.body:                                       ; preds = %if.end9, %sw.epilog79
  %6 = load i32, i32* %state, align 4, !dbg !2858
  switch i32 %6, label %sw.default78 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb29
    i32 4, label %sw.bb63
    i32 6, label %sw.bb77
  ], !dbg !2860

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !2861
  %8 = load i8, i8* %7, align 1, !dbg !2863, !ctir !147
  %conv12 = sext i8 %8 to i32, !dbg !2863
  switch i32 %conv12, label %sw.default [
    i32 58, label %sw.bb13
    i32 42, label %sw.bb14
    i32 0, label %sw.bb21
  ], !dbg !2864

sw.bb13:                                          ; preds = %sw.bb
  %9 = load i8*, i8** %p, align 8, !dbg !2865
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !2865, !ctir !147
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2865
  br label %sw.epilog, !dbg !2867

sw.bb14:                                          ; preds = %sw.bb
  %call15 = call noalias i8* @xmalloc(i64 40), !dbg !2868
  %10 = bitcast i8* %call15 to %struct.color_ext_type*, !dbg !2868
  store %struct.color_ext_type* %10, %struct.color_ext_type** %ext, align 8, !dbg !2869
  %11 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !2870
  %12 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !2871
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %12, i32 0, i32 2, !dbg !2872, !ctir !699
  store %struct.color_ext_type* %11, %struct.color_ext_type** %next, align 8, !dbg !2873, !ctir !698
  %13 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !2874
  store %struct.color_ext_type* %13, %struct.color_ext_type** @color_ext_list, align 8, !dbg !2875
  %14 = load i8*, i8** %p, align 8, !dbg !2876
  %incdec.ptr16 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !2876, !ctir !147
  store i8* %incdec.ptr16, i8** %p, align 8, !dbg !2876
  %15 = load i8*, i8** %buf, align 8, !dbg !2877
  %16 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !2878
  %ext17 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %16, i32 0, i32 0, !dbg !2879, !ctir !699
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext17, i32 0, i32 1, !dbg !2880, !ctir !280
  store i8* %15, i8** %string, align 8, !dbg !2881, !ctir !146
  %17 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !2882
  %ext18 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %17, i32 0, i32 0, !dbg !2883, !ctir !699
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext18, i32 0, i32 0, !dbg !2884, !ctir !280
  %call19 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext true, i64* %len), !dbg !2885
  %18 = zext i1 %call19 to i64, !dbg !2885
  %cond = select i1 %call19, i32 4, i32 6, !dbg !2885
  store i32 %cond, i32* %state, align 4, !dbg !2886
  br label %sw.epilog, !dbg !2887

sw.bb21:                                          ; preds = %sw.bb
  store i32 5, i32* %state, align 4, !dbg !2888
  br label %done, !dbg !2889

sw.default:                                       ; preds = %sw.bb
  %19 = load i8*, i8** %p, align 8, !dbg !2890
  %incdec.ptr22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !2890, !ctir !147
  store i8* %incdec.ptr22, i8** %p, align 8, !dbg !2890
  %20 = load i8, i8* %19, align 1, !dbg !2891, !ctir !147
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !2892, !ctir !253
  store i8 %20, i8* %arrayidx, align 1, !dbg !2893
  store i32 2, i32* %state, align 4, !dbg !2894
  br label %sw.epilog, !dbg !2895

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb13
  br label %sw.epilog79, !dbg !2896

sw.bb23:                                          ; preds = %while.body
  %21 = load i8*, i8** %p, align 8, !dbg !2897
  %22 = load i8, i8* %21, align 1, !dbg !2899, !ctir !147
  %tobool24 = icmp ne i8 %22, 0, !dbg !2899
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !2900

if.then25:                                        ; preds = %sw.bb23
  %23 = load i8*, i8** %p, align 8, !dbg !2901
  %incdec.ptr26 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !2901, !ctir !147
  store i8* %incdec.ptr26, i8** %p, align 8, !dbg !2901
  %24 = load i8, i8* %23, align 1, !dbg !2903, !ctir !147
  %arrayidx27 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 1, !dbg !2904, !ctir !253
  store i8 %24, i8* %arrayidx27, align 1, !dbg !2905
  store i32 3, i32* %state, align 4, !dbg !2906
  br label %if.end28, !dbg !2907

if.else:                                          ; preds = %sw.bb23
  store i32 6, i32* %state, align 4, !dbg !2908
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %sw.epilog79, !dbg !2909

sw.bb29:                                          ; preds = %while.body
  store i32 6, i32* %state, align 4, !dbg !2910
  %25 = load i8*, i8** %p, align 8, !dbg !2911
  %incdec.ptr30 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !2911, !ctir !147
  store i8* %incdec.ptr30, i8** %p, align 8, !dbg !2911
  %26 = load i8, i8* %25, align 1, !dbg !2913, !ctir !147
  %conv31 = sext i8 %26 to i32, !dbg !2913
  %cmp32 = icmp eq i32 %conv31, 61, !dbg !2914
  br i1 %cmp32, label %if.then34, label %if.end62, !dbg !2915

if.then34:                                        ; preds = %sw.bb29
  store i32 0, i32* %ind_no, align 4, !dbg !2916
  br label %for.cond, !dbg !2919

for.cond:                                         ; preds = %for.inc, %if.then34
  %27 = load i32, i32* %ind_no, align 4, !dbg !2920
  %idxprom = sext i32 %27 to i64, !dbg !2922
  %arrayidx35 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom, !dbg !2922, !ctir !704
  %28 = load i8*, i8** %arrayidx35, align 8, !dbg !2922
  %cmp36 = icmp ne i8* %28, null, !dbg !2923
  br i1 %cmp36, label %for.body, label %for.end, !dbg !2924

for.body:                                         ; preds = %for.cond
  %arraydecay38 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !2925, !ctir !253
  %29 = load i32, i32* %ind_no, align 4, !dbg !2925
  %idxprom39 = sext i32 %29 to i64, !dbg !2925
  %arrayidx40 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom39, !dbg !2925, !ctir !704
  %30 = load i8*, i8** %arrayidx40, align 8, !dbg !2925
  %call41 = call i32 @strcmp(i8* %arraydecay38, i8* %30) #16, !dbg !2925
  %cmp42 = icmp eq i32 %call41, 0, !dbg !2925
  br i1 %cmp42, label %if.then44, label %if.end54, !dbg !2928

if.then44:                                        ; preds = %for.body
  %31 = load i8*, i8** %buf, align 8, !dbg !2929
  %32 = load i32, i32* %ind_no, align 4, !dbg !2931
  %idxprom45 = sext i32 %32 to i64, !dbg !2932
  %arrayidx46 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom45, !dbg !2932, !ctir !279
  %string47 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx46, i32 0, i32 1, !dbg !2933, !ctir !280
  store i8* %31, i8** %string47, align 8, !dbg !2934, !ctir !146
  %33 = load i32, i32* %ind_no, align 4, !dbg !2935
  %idxprom48 = sext i32 %33 to i64, !dbg !2936
  %arrayidx49 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom48, !dbg !2936, !ctir !279
  %len50 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx49, i32 0, i32 0, !dbg !2937, !ctir !280
  %call51 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len50), !dbg !2938
  %34 = zext i1 %call51 to i64, !dbg !2938
  %cond53 = select i1 %call51, i32 1, i32 6, !dbg !2938
  store i32 %cond53, i32* %state, align 4, !dbg !2939
  br label %for.end, !dbg !2940

if.end54:                                         ; preds = %for.body
  br label %for.inc, !dbg !2941

for.inc:                                          ; preds = %if.end54
  %35 = load i32, i32* %ind_no, align 4, !dbg !2942
  %inc = add nsw i32 %35, 1, !dbg !2942
  store i32 %inc, i32* %ind_no, align 4, !dbg !2942
  br label %for.cond, !dbg !2943, !llvm.loop !2944

for.end:                                          ; preds = %if.then44, %for.cond
  %36 = load i32, i32* %state, align 4, !dbg !2946
  %cmp55 = icmp eq i32 %36, 6, !dbg !2948
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !2949

if.then57:                                        ; preds = %for.end
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.175, i64 0, i64 0)) #13, !dbg !2950
  %arraydecay59 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !2951, !ctir !253
  %call60 = call i8* @quote(i8* %arraydecay59), !dbg !2952
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call58, i8* %call60), !dbg !2953
  br label %if.end61, !dbg !2953

if.end61:                                         ; preds = %if.then57, %for.end
  br label %if.end62, !dbg !2954

if.end62:                                         ; preds = %if.end61, %sw.bb29
  br label %sw.epilog79, !dbg !2955

sw.bb63:                                          ; preds = %while.body
  %37 = load i8*, i8** %p, align 8, !dbg !2956
  %incdec.ptr64 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !2956, !ctir !147
  store i8* %incdec.ptr64, i8** %p, align 8, !dbg !2956
  %38 = load i8, i8* %37, align 1, !dbg !2958, !ctir !147
  %conv65 = sext i8 %38 to i32, !dbg !2958
  %cmp66 = icmp eq i32 %conv65, 61, !dbg !2959
  br i1 %cmp66, label %if.then68, label %if.else75, !dbg !2960

if.then68:                                        ; preds = %sw.bb63
  %39 = load i8*, i8** %buf, align 8, !dbg !2961
  %40 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !2963
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %40, i32 0, i32 1, !dbg !2964, !ctir !699
  %string69 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq, i32 0, i32 1, !dbg !2965, !ctir !280
  store i8* %39, i8** %string69, align 8, !dbg !2966, !ctir !146
  %41 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !2967
  %seq70 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %41, i32 0, i32 1, !dbg !2968, !ctir !699
  %len71 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq70, i32 0, i32 0, !dbg !2969, !ctir !280
  %call72 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len71), !dbg !2970
  %42 = zext i1 %call72 to i64, !dbg !2970
  %cond74 = select i1 %call72, i32 1, i32 6, !dbg !2970
  store i32 %cond74, i32* %state, align 4, !dbg !2971
  br label %if.end76, !dbg !2972

if.else75:                                        ; preds = %sw.bb63
  store i32 6, i32* %state, align 4, !dbg !2973
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then68
  br label %sw.epilog79, !dbg !2974

sw.bb77:                                          ; preds = %while.body
  br label %done, !dbg !2975

sw.default78:                                     ; preds = %while.body
  call void @abort() #15, !dbg !2976
  unreachable, !dbg !2976

sw.epilog79:                                      ; preds = %if.end76, %if.end62, %if.end28, %sw.epilog
  br label %while.body, !dbg !2857, !llvm.loop !2977

done:                                             ; preds = %sw.bb77, %sw.bb21
  call void @llvm.dbg.label(metadata !2979), !dbg !2980
  %43 = load i32, i32* %state, align 4, !dbg !2981
  %cmp80 = icmp eq i32 %43, 6, !dbg !2983
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !2984

if.then82:                                        ; preds = %done
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e, metadata !2985, metadata !DIExpression()), !dbg !2987
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e2, metadata !2988, metadata !DIExpression()), !dbg !2989
  %call83 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.176, i64 0, i64 0)) #13, !dbg !2990
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call83), !dbg !2991
  %44 = load i8*, i8** @color_buf, align 8, !dbg !2992
  call void @free(i8* %44) #13, !dbg !2993
  %45 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !2994
  store %struct.color_ext_type* %45, %struct.color_ext_type** %e, align 8, !dbg !2996
  br label %for.cond84, !dbg !2997

for.cond84:                                       ; preds = %for.body87, %if.then82
  %46 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !2998
  %cmp85 = icmp ne %struct.color_ext_type* %46, null, !dbg !3000
  br i1 %cmp85, label %for.body87, label %for.end89, !dbg !3001

for.body87:                                       ; preds = %for.cond84
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3002
  store %struct.color_ext_type* %47, %struct.color_ext_type** %e2, align 8, !dbg !3004
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3005
  %next88 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %48, i32 0, i32 2, !dbg !3006, !ctir !699
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %next88, align 8, !dbg !3006, !ctir !698
  store %struct.color_ext_type* %49, %struct.color_ext_type** %e, align 8, !dbg !3007
  %50 = load %struct.color_ext_type*, %struct.color_ext_type** %e2, align 8, !dbg !3008
  %51 = bitcast %struct.color_ext_type* %50 to i8*, !dbg !3008
  call void @free(i8* %51) #13, !dbg !3009
  br label %for.cond84, !dbg !3010, !llvm.loop !3011

for.end89:                                        ; preds = %for.cond84
  store i8 0, i8* @print_with_color, align 1, !dbg !3013
  br label %if.end90, !dbg !3014

if.end90:                                         ; preds = %for.end89, %done
  %52 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 0), align 16, !dbg !3015, !ctir !149
  %cmp91 = icmp eq i64 %52, 6, !dbg !3017
  br i1 %cmp91, label %land.lhs.true93, label %if.end97, !dbg !3018

land.lhs.true93:                                  ; preds = %if.end90
  %53 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 1), align 8, !dbg !3019, !ctir !146
  %call94 = call i32 @strncmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i64 0, i64 0), i64 6) #16, !dbg !3019
  %tobool95 = icmp ne i32 %call94, 0, !dbg !3019
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !3020

if.then96:                                        ; preds = %land.lhs.true93
  store i8 1, i8* @color_symlink_as_referent, align 1, !dbg !3021
  br label %if.end97, !dbg !3022

if.end97:                                         ; preds = %if.end, %if.then96, %land.lhs.true93, %if.end90
  ret void, !dbg !3023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_colored(i32 %type) #0 !dbg !3024 {
entry:
  %type.addr = alloca i32, align 4
  %len = alloca i64, align 8, !ctir !149
  %s = alloca i8*, align 8, !ctir !146
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3027, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3029, metadata !DIExpression()), !dbg !3030
  %0 = load i32, i32* %type.addr, align 4, !dbg !3031
  %idxprom = zext i32 %0 to i64, !dbg !3032
  %arrayidx = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom, !dbg !3032, !ctir !279
  %len1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !3033, !ctir !280
  %1 = load i64, i64* %len1, align 16, !dbg !3033, !ctir !149
  store i64 %1, i64* %len, align 8, !dbg !3030
  call void @llvm.dbg.declare(metadata i8** %s, metadata !3034, metadata !DIExpression()), !dbg !3035
  %2 = load i32, i32* %type.addr, align 4, !dbg !3036
  %idxprom2 = zext i32 %2 to i64, !dbg !3037
  %arrayidx3 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom2, !dbg !3037, !ctir !279
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx3, i32 0, i32 1, !dbg !3038, !ctir !280
  %3 = load i8*, i8** %string, align 8, !dbg !3038, !ctir !146
  store i8* %3, i8** %s, align 8, !dbg !3035
  %4 = load i64, i64* %len, align 8, !dbg !3039
  %cmp = icmp eq i64 %4, 0, !dbg !3040
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !3041

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %len, align 8, !dbg !3042
  %cmp4 = icmp eq i64 %5, 1, !dbg !3043
  br i1 %cmp4, label %land.lhs.true, label %lor.rhs, !dbg !3044

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %s, align 8, !dbg !3045
  %call = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1) #16, !dbg !3045
  %cmp5 = icmp eq i32 %call, 0, !dbg !3046
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3047

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i64, i64* %len, align 8, !dbg !3048
  %cmp6 = icmp eq i64 %7, 2, !dbg !3049
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3050

land.rhs:                                         ; preds = %lor.rhs
  %8 = load i8*, i8** %s, align 8, !dbg !3051
  %call7 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i64 2) #16, !dbg !3051
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3052
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %9 = phi i1 [ false, %lor.rhs ], [ %cmp8, %land.rhs ], !dbg !3053
  br label %lor.end, !dbg !3047

lor.end:                                          ; preds = %land.end, %land.lhs.true, %entry
  %10 = phi i1 [ true, %land.lhs.true ], [ true, %entry ], [ %9, %land.end ]
  %lnot = xor i1 %10, true, !dbg !3054
  ret i1 %lnot, !dbg !3055
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_ino_hash(i8* %x, i64 %table_size) #0 !dbg !3056 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.dev_ino*, align 8, !ctir !446
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3057, metadata !DIExpression()), !dbg !3058
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !3059, metadata !DIExpression()), !dbg !3060
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %p, metadata !3061, metadata !DIExpression()), !dbg !3062
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3063
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3063
  store %struct.dev_ino* %1, %struct.dev_ino** %p, align 8, !dbg !3062
  %2 = load %struct.dev_ino*, %struct.dev_ino** %p, align 8, !dbg !3064
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !3065, !ctir !447
  %3 = load i64, i64* %st_ino, align 8, !dbg !3065, !ctir !267
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !3066
  %rem = urem i64 %3, %4, !dbg !3067
  ret i64 %rem, !dbg !3068
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_ino_compare(i8* %x, i8* %y) #0 !dbg !3069 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.dev_ino*, align 8, !ctir !446
  %b = alloca %struct.dev_ino*, align 8, !ctir !446
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3070, metadata !DIExpression()), !dbg !3071
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !3072, metadata !DIExpression()), !dbg !3073
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %a, metadata !3074, metadata !DIExpression()), !dbg !3075
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3076
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3076
  store %struct.dev_ino* %1, %struct.dev_ino** %a, align 8, !dbg !3075
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %b, metadata !3077, metadata !DIExpression()), !dbg !3078
  %2 = load i8*, i8** %y.addr, align 8, !dbg !3079
  %3 = bitcast i8* %2 to %struct.dev_ino*, !dbg !3079
  store %struct.dev_ino* %3, %struct.dev_ino** %b, align 8, !dbg !3078
  %4 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3080
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 0, !dbg !3080, !ctir !447
  %5 = load i64, i64* %st_ino, align 8, !dbg !3080, !ctir !267
  %6 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3080
  %st_ino1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %6, i32 0, i32 0, !dbg !3080, !ctir !447
  %7 = load i64, i64* %st_ino1, align 8, !dbg !3080, !ctir !267
  %cmp = icmp eq i64 %5, %7, !dbg !3080
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3080

land.rhs:                                         ; preds = %entry
  %8 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3080
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %8, i32 0, i32 1, !dbg !3080, !ctir !447
  %9 = load i64, i64* %st_dev, align 8, !dbg !3080, !ctir !269
  %10 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3080
  %st_dev2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %10, i32 0, i32 1, !dbg !3080, !ctir !447
  %11 = load i64, i64* %st_dev2, align 8, !dbg !3080, !ctir !269
  %cmp3 = icmp eq i64 %9, %11, !dbg !3080
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !3081
  %13 = zext i1 %12 to i64, !dbg !3080
  %cond = select i1 %12, i32 1, i32 0, !dbg !3080
  %tobool = icmp ne i32 %cond, 0, !dbg !3080
  ret i1 %tobool, !dbg !3082
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_free(i8* %x) #0 !dbg !3083 {
entry:
  %x.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3084, metadata !DIExpression()), !dbg !3085
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3086
  call void @free(i8* %0) #13, !dbg !3087
  ret void, !dbg !3088
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_escape_init() #0 !dbg !3089 {
entry:
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3090, metadata !DIExpression()), !dbg !3092
  store i32 0, i32* %i, align 4, !dbg !3092
  br label %for.cond, !dbg !3093

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3094
  %cmp = icmp slt i32 %0, 256, !dbg !3096
  br i1 %cmp, label %for.body, label %for.end, !dbg !3097

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3098
  %call = call zeroext i1 @c_isalnum(i32 %1), !dbg !3099
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !3100

lor.lhs.false:                                    ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3101
  %cmp1 = icmp eq i32 %2, 126, !dbg !3102
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !3103

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %i, align 4, !dbg !3104
  %cmp3 = icmp eq i32 %3, 45, !dbg !3105
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !3106

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %4 = load i32, i32* %i, align 4, !dbg !3107
  %cmp5 = icmp eq i32 %4, 46, !dbg !3108
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3109

lor.rhs:                                          ; preds = %lor.lhs.false4
  %5 = load i32, i32* %i, align 4, !dbg !3110
  %cmp6 = icmp eq i32 %5, 95, !dbg !3111
  br label %lor.end, !dbg !3109

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %for.body
  %6 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !3109
  %7 = load i32, i32* %i, align 4, !dbg !3112
  %idxprom = sext i32 %7 to i64, !dbg !3113
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !3113, !ctir !448
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3114
  %conv = sext i8 %8 to i32, !dbg !3114
  %or = or i32 %conv, %lor.ext, !dbg !3114
  %conv7 = trunc i32 %or to i8, !dbg !3114
  store i8 %conv7, i8* %arrayidx, align 1, !dbg !3114
  br label %for.inc, !dbg !3113

for.inc:                                          ; preds = %lor.end
  %9 = load i32, i32* %i, align 4, !dbg !3115
  %inc = add nsw i32 %9, 1, !dbg !3115
  store i32 %inc, i32* %i, align 4, !dbg !3115
  br label %for.cond, !dbg !3116, !llvm.loop !3117

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_files() #0 !dbg !3120 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !258
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3121, metadata !DIExpression()), !dbg !3123
  store i64 0, i64* %i, align 8, !dbg !3123
  br label %for.cond, !dbg !3124

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !3125
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !3127
  %cmp = icmp ult i64 %0, %1, !dbg !3128
  br i1 %cmp, label %for.body, label %for.end, !dbg !3129

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3130, metadata !DIExpression()), !dbg !3132
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !3133
  %3 = load i64, i64* %i, align 8, !dbg !3134
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !3133, !ctir !754
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !3133
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !3133
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !3132
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3135
  call void @free_ent(%struct.fileinfo* %6), !dbg !3136
  br label %for.inc, !dbg !3137

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !3138
  %inc = add i64 %7, 1, !dbg !3138
  store i64 %inc, i64* %i, align 8, !dbg !3138
  br label %for.cond, !dbg !3139, !llvm.loop !3140

for.end:                                          ; preds = %for.cond
  store i64 0, i64* @cwd_n_used, align 8, !dbg !3142
  store i8 0, i8* @cwd_some_quoted, align 1, !dbg !3143
  store i8 0, i8* @any_has_acl, align 1, !dbg !3144
  store i32 0, i32* @inode_number_width, align 4, !dbg !3145
  store i32 0, i32* @block_size_width, align 4, !dbg !3146
  store i32 0, i32* @nlink_width, align 4, !dbg !3147
  store i32 0, i32* @owner_width, align 4, !dbg !3148
  store i32 0, i32* @group_width, align 4, !dbg !3149
  store i32 0, i32* @author_width, align 4, !dbg !3150
  store i32 0, i32* @scontext_width, align 4, !dbg !3151
  store i32 0, i32* @major_device_number_width, align 4, !dbg !3152
  store i32 0, i32* @minor_device_number_width, align 4, !dbg !3153
  store i32 0, i32* @file_size_width, align 4, !dbg !3154
  ret void, !dbg !3155
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @gobble_file(i8* %name, i32 %type, i64 %inode, i1 zeroext %command_line_arg, i8* %dirname) #0 !dbg !3156 {
entry:
  %retval = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %inode.addr = alloca i64, align 8
  %command_line_arg.addr = alloca i8, align 1
  %dirname.addr = alloca i8*, align 8
  %blocks = alloca i64, align 8, !ctir !168
  %f = alloca %struct.fileinfo*, align 8, !ctir !258
  %full_name = alloca i8*, align 8, !ctir !143
  %do_deref = alloca i8, align 1, !ctir !141
  %err = alloca i32, align 4, !ctir !27
  %need_lstat = alloca i8, align 1, !ctir !141
  %have_scontext = alloca i8, align 1, !ctir !141
  %have_acl = alloca i8, align 1, !ctir !141
  %attr_len = alloca i32, align 4, !ctir !27
  %n = alloca i32, align 4, !ctir !27
  %linkstats = alloca %struct.stat, align 8, !ctir !190
  %linkname = alloca i8*, align 8, !ctir !143
  %buf = alloca [652 x i8], align 16, !ctir !734
  %len = alloca i32, align 4, !ctir !27
  %len345 = alloca i32, align 4, !ctir !27
  %len355 = alloca i32, align 4, !ctir !27
  %len365 = alloca i32, align 4, !ctir !27
  %len377 = alloca i32, align 4, !ctir !27
  %b = alloca [21 x i8], align 16, !ctir !731
  %b_len = alloca i32, align 4, !ctir !27
  %buf410 = alloca [21 x i8], align 16, !ctir !731
  %len411 = alloca i32, align 4, !ctir !27
  %buf442 = alloca [652 x i8], align 16, !ctir !734
  %size = alloca i64, align 8, !ctir !168
  %len445 = alloca i32, align 4, !ctir !27
  %buf458 = alloca [21 x i8], align 16, !ctir !731
  %len459 = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3159, metadata !DIExpression()), !dbg !3160
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  store i64 %inode, i64* %inode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %inode.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  store i8* %dirname, i8** %dirname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.declare(metadata i64* %blocks, metadata !3169, metadata !DIExpression()), !dbg !3170
  store i64 0, i64* %blocks, align 8, !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3171, metadata !DIExpression()), !dbg !3172
  %0 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3173
  %tobool = trunc i8 %0 to i1, !dbg !3173
  br i1 %tobool, label %lor.lhs.false, label %cond.true, !dbg !3173

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %inode.addr, align 8, !dbg !3173
  %cmp = icmp eq i64 %1, 0, !dbg !3173
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3173

cond.true:                                        ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !3173

cond.false:                                       ; preds = %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3119, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.gobble_file, i64 0, i64 0)) #15, !dbg !3173
  unreachable, !dbg !3173

2:                                                ; No predecessors!
  br label %cond.end, !dbg !3173

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !3174
  %4 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3176
  %cmp1 = icmp eq i64 %3, %4, !dbg !3177
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3178

if.then:                                          ; preds = %cond.end
  %5 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3179
  %6 = bitcast %struct.fileinfo* %5 to i8*, !dbg !3179
  %7 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3181
  %call = call i8* @xnrealloc(i8* %6, i64 %7, i64 400), !dbg !3182
  %8 = bitcast i8* %call to %struct.fileinfo*, !dbg !3182
  store %struct.fileinfo* %8, %struct.fileinfo** @cwd_file, align 8, !dbg !3183
  %9 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3184
  %mul = mul i64 %9, 2, !dbg !3184
  store i64 %mul, i64* @cwd_n_alloc, align 8, !dbg !3184
  br label %if.end, !dbg !3185

if.end:                                           ; preds = %if.then, %cond.end
  %10 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3186
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !3187
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i64 %11, !dbg !3186, !ctir !258
  store %struct.fileinfo* %arrayidx, %struct.fileinfo** %f, align 8, !dbg !3188
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3189
  %13 = bitcast %struct.fileinfo* %12 to i8*, !dbg !3190
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 200, i1 false), !dbg !3190
  %14 = load i64, i64* %inode.addr, align 8, !dbg !3191
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3192
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 3, !dbg !3193, !ctir !184
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !3194, !ctir !190
  store i64 %14, i64* %st_ino, align 8, !dbg !3195, !ctir !196
  %16 = load i32, i32* %type.addr, align 4, !dbg !3196
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3197
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 4, !dbg !3198, !ctir !184
  store i32 %16, i32* %filetype, align 8, !dbg !3199, !ctir !36
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3200
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 11, !dbg !3201, !ctir !184
  store i32 -1, i32* %quoted, align 4, !dbg !3202, !ctir !27
  %19 = load i8, i8* @cwd_some_quoted, align 1, !dbg !3203
  %tobool2 = trunc i8 %19 to i1, !dbg !3203
  br i1 %tobool2, label %if.end11, label %land.lhs.true, !dbg !3205

land.lhs.true:                                    ; preds = %if.end
  %20 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !3206
  %tobool3 = trunc i8 %20 to i1, !dbg !3206
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !3207

if.then4:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %name.addr, align 8, !dbg !3208
  %call5 = call zeroext i1 @needs_quoting(i8* %21), !dbg !3210
  %conv = zext i1 %call5 to i32, !dbg !3210
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3211
  %quoted6 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 11, !dbg !3212, !ctir !184
  store i32 %conv, i32* %quoted6, align 4, !dbg !3213, !ctir !27
  %23 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3214
  %quoted7 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %23, i32 0, i32 11, !dbg !3216, !ctir !184
  %24 = load i32, i32* %quoted7, align 4, !dbg !3216, !ctir !27
  %tobool8 = icmp ne i32 %24, 0, !dbg !3214
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !3217

if.then9:                                         ; preds = %if.then4
  store i8 1, i8* @cwd_some_quoted, align 1, !dbg !3218
  br label %if.end10, !dbg !3219

if.end10:                                         ; preds = %if.then9, %if.then4
  br label %if.end11, !dbg !3220

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %if.end
  %25 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3221
  %tobool12 = trunc i8 %25 to i1, !dbg !3221
  br i1 %tobool12, label %if.then92, label %lor.lhs.false14, !dbg !3223

lor.lhs.false14:                                  ; preds = %if.end11
  %26 = load i8, i8* @print_hyperlink, align 1, !dbg !3224
  %tobool15 = trunc i8 %26 to i1, !dbg !3224
  br i1 %tobool15, label %if.then92, label %lor.lhs.false17, !dbg !3225

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %27 = load i8, i8* @format_needs_stat, align 1, !dbg !3226
  %tobool18 = trunc i8 %27 to i1, !dbg !3226
  br i1 %tobool18, label %if.then92, label %lor.lhs.false20, !dbg !3227

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %28 = load i32, i32* %type.addr, align 4, !dbg !3228
  %cmp21 = icmp eq i32 %28, 3, !dbg !3229
  br i1 %cmp21, label %land.lhs.true23, label %lor.lhs.false35, !dbg !3230

land.lhs.true23:                                  ; preds = %lor.lhs.false20
  %29 = load i8, i8* @print_with_color, align 1, !dbg !3231
  %tobool24 = trunc i8 %29 to i1, !dbg !3231
  br i1 %tobool24, label %land.lhs.true26, label %lor.lhs.false35, !dbg !3232

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %call27 = call zeroext i1 @is_colored(i32 19), !dbg !3233
  br i1 %call27, label %if.then92, label %lor.lhs.false29, !dbg !3234

lor.lhs.false29:                                  ; preds = %land.lhs.true26
  %call30 = call zeroext i1 @is_colored(i32 18), !dbg !3235
  br i1 %call30, label %if.then92, label %lor.lhs.false32, !dbg !3236

lor.lhs.false32:                                  ; preds = %lor.lhs.false29
  %call33 = call zeroext i1 @is_colored(i32 20), !dbg !3237
  br i1 %call33, label %if.then92, label %lor.lhs.false35, !dbg !3238

lor.lhs.false35:                                  ; preds = %lor.lhs.false32, %land.lhs.true23, %lor.lhs.false20
  %30 = load i8, i8* @print_inode, align 1, !dbg !3239
  %tobool36 = trunc i8 %30 to i1, !dbg !3239
  br i1 %tobool36, label %land.lhs.true41, label %lor.lhs.false38, !dbg !3240

lor.lhs.false38:                                  ; preds = %lor.lhs.false35
  %31 = load i8, i8* @format_needs_type, align 1, !dbg !3241
  %tobool39 = trunc i8 %31 to i1, !dbg !3241
  br i1 %tobool39, label %land.lhs.true41, label %lor.lhs.false56, !dbg !3242

land.lhs.true41:                                  ; preds = %lor.lhs.false38, %lor.lhs.false35
  %32 = load i32, i32* %type.addr, align 4, !dbg !3243
  %cmp42 = icmp eq i32 %32, 6, !dbg !3244
  br i1 %cmp42, label %land.lhs.true47, label %lor.lhs.false44, !dbg !3245

lor.lhs.false44:                                  ; preds = %land.lhs.true41
  %33 = load i32, i32* %type.addr, align 4, !dbg !3246
  %cmp45 = icmp eq i32 %33, 0, !dbg !3247
  br i1 %cmp45, label %land.lhs.true47, label %lor.lhs.false56, !dbg !3248

land.lhs.true47:                                  ; preds = %lor.lhs.false44, %land.lhs.true41
  %34 = load i32, i32* @dereference, align 4, !dbg !3249
  %cmp48 = icmp eq i32 %34, 5, !dbg !3250
  br i1 %cmp48, label %if.then92, label %lor.lhs.false50, !dbg !3251

lor.lhs.false50:                                  ; preds = %land.lhs.true47
  %35 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !3252
  %tobool51 = trunc i8 %35 to i1, !dbg !3252
  br i1 %tobool51, label %if.then92, label %lor.lhs.false53, !dbg !3253

lor.lhs.false53:                                  ; preds = %lor.lhs.false50
  %36 = load i8, i8* @check_symlink_mode, align 1, !dbg !3254
  %tobool54 = trunc i8 %36 to i1, !dbg !3254
  br i1 %tobool54, label %if.then92, label %lor.lhs.false56, !dbg !3255

lor.lhs.false56:                                  ; preds = %lor.lhs.false53, %lor.lhs.false44, %lor.lhs.false38
  %37 = load i8, i8* @print_inode, align 1, !dbg !3256
  %tobool57 = trunc i8 %37 to i1, !dbg !3256
  br i1 %tobool57, label %land.lhs.true59, label %lor.lhs.false62, !dbg !3257

land.lhs.true59:                                  ; preds = %lor.lhs.false56
  %38 = load i64, i64* %inode.addr, align 8, !dbg !3258
  %cmp60 = icmp eq i64 %38, 0, !dbg !3259
  br i1 %cmp60, label %if.then92, label %lor.lhs.false62, !dbg !3260

lor.lhs.false62:                                  ; preds = %land.lhs.true59, %lor.lhs.false56
  %39 = load i8, i8* @format_needs_type, align 1, !dbg !3261
  %tobool63 = trunc i8 %39 to i1, !dbg !3261
  br i1 %tobool63, label %land.lhs.true65, label %if.end455, !dbg !3262

land.lhs.true65:                                  ; preds = %lor.lhs.false62
  %40 = load i32, i32* %type.addr, align 4, !dbg !3263
  %cmp66 = icmp eq i32 %40, 0, !dbg !3264
  br i1 %cmp66, label %if.then92, label %lor.lhs.false68, !dbg !3265

lor.lhs.false68:                                  ; preds = %land.lhs.true65
  %41 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3266
  %tobool69 = trunc i8 %41 to i1, !dbg !3266
  br i1 %tobool69, label %if.then92, label %lor.lhs.false71, !dbg !3267

lor.lhs.false71:                                  ; preds = %lor.lhs.false68
  %42 = load i32, i32* %type.addr, align 4, !dbg !3268
  %cmp72 = icmp eq i32 %42, 5, !dbg !3269
  br i1 %cmp72, label %land.lhs.true74, label %if.end455, !dbg !3270

land.lhs.true74:                                  ; preds = %lor.lhs.false71
  %43 = load i32, i32* @indicator_style, align 4, !dbg !3271
  %cmp75 = icmp eq i32 %43, 3, !dbg !3272
  br i1 %cmp75, label %if.then92, label %lor.lhs.false77, !dbg !3273

lor.lhs.false77:                                  ; preds = %land.lhs.true74
  %44 = load i8, i8* @print_with_color, align 1, !dbg !3274
  %tobool78 = trunc i8 %44 to i1, !dbg !3274
  br i1 %tobool78, label %land.lhs.true80, label %if.end455, !dbg !3275

land.lhs.true80:                                  ; preds = %lor.lhs.false77
  %call81 = call zeroext i1 @is_colored(i32 14), !dbg !3276
  br i1 %call81, label %if.then92, label %lor.lhs.false83, !dbg !3277

lor.lhs.false83:                                  ; preds = %land.lhs.true80
  %call84 = call zeroext i1 @is_colored(i32 16), !dbg !3278
  br i1 %call84, label %if.then92, label %lor.lhs.false86, !dbg !3279

lor.lhs.false86:                                  ; preds = %lor.lhs.false83
  %call87 = call zeroext i1 @is_colored(i32 17), !dbg !3280
  br i1 %call87, label %if.then92, label %lor.lhs.false89, !dbg !3281

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %call90 = call zeroext i1 @is_colored(i32 21), !dbg !3282
  br i1 %call90, label %if.then92, label %if.end455, !dbg !3283

if.then92:                                        ; preds = %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %land.lhs.true80, %land.lhs.true74, %lor.lhs.false68, %land.lhs.true65, %land.lhs.true59, %lor.lhs.false53, %lor.lhs.false50, %land.lhs.true47, %lor.lhs.false32, %lor.lhs.false29, %land.lhs.true26, %lor.lhs.false17, %lor.lhs.false14, %if.end11
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !3284, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.declare(metadata i8* %do_deref, metadata !3287, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3289, metadata !DIExpression()), !dbg !3290
  %45 = load i8*, i8** %name.addr, align 8, !dbg !3291
  %arrayidx93 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !3291, !ctir !146
  %46 = load i8, i8* %arrayidx93, align 1, !dbg !3291
  %conv94 = sext i8 %46 to i32, !dbg !3291
  %cmp95 = icmp eq i32 %conv94, 47, !dbg !3293
  br i1 %cmp95, label %if.then102, label %lor.lhs.false97, !dbg !3294

lor.lhs.false97:                                  ; preds = %if.then92
  %47 = load i8*, i8** %dirname.addr, align 8, !dbg !3295
  %arrayidx98 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !3295, !ctir !146
  %48 = load i8, i8* %arrayidx98, align 1, !dbg !3295
  %conv99 = sext i8 %48 to i32, !dbg !3295
  %cmp100 = icmp eq i32 %conv99, 0, !dbg !3296
  br i1 %cmp100, label %if.then102, label %if.else, !dbg !3297

if.then102:                                       ; preds = %lor.lhs.false97, %if.then92
  %49 = load i8*, i8** %name.addr, align 8, !dbg !3298
  store i8* %49, i8** %full_name, align 8, !dbg !3299
  br label %if.end106, !dbg !3300

if.else:                                          ; preds = %lor.lhs.false97
  %50 = load i8*, i8** %name.addr, align 8, !dbg !3301
  %call103 = call i64 @strlen(i8* %50) #16, !dbg !3303
  %51 = load i8*, i8** %dirname.addr, align 8, !dbg !3304
  %call104 = call i64 @strlen(i8* %51) #16, !dbg !3305
  %add = add i64 %call103, %call104, !dbg !3306
  %add105 = add i64 %add, 2, !dbg !3307
  %52 = alloca i8, i64 %add105, align 16, !dbg !3308
  store i8* %52, i8** %full_name, align 8, !dbg !3309
  %53 = load i8*, i8** %full_name, align 8, !dbg !3310
  %54 = load i8*, i8** %dirname.addr, align 8, !dbg !3311
  %55 = load i8*, i8** %name.addr, align 8, !dbg !3312
  call void @attach(i8* %53, i8* %54, i8* %55), !dbg !3313
  br label %if.end106

if.end106:                                        ; preds = %if.else, %if.then102
  %56 = load i8, i8* @print_hyperlink, align 1, !dbg !3314
  %tobool107 = trunc i8 %56 to i1, !dbg !3314
  br i1 %tobool107, label %if.then108, label %if.end116, !dbg !3316

if.then108:                                       ; preds = %if.end106
  %57 = load i8*, i8** %full_name, align 8, !dbg !3317
  %call109 = call i8* @canonicalize_filename_mode(i8* %57, i32 2), !dbg !3319
  %58 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3320
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %58, i32 0, i32 2, !dbg !3321, !ctir !184
  store i8* %call109, i8** %absolute_name, align 8, !dbg !3322, !ctir !143
  %59 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3323
  %absolute_name110 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %59, i32 0, i32 2, !dbg !3325, !ctir !184
  %60 = load i8*, i8** %absolute_name110, align 8, !dbg !3325, !ctir !143
  %tobool111 = icmp ne i8* %60, null, !dbg !3323
  br i1 %tobool111, label %if.end115, label %if.then112, !dbg !3326

if.then112:                                       ; preds = %if.then108
  %61 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3327
  %tobool113 = trunc i8 %61 to i1, !dbg !3327
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !3328
  %62 = load i8*, i8** %full_name, align 8, !dbg !3329
  call void @file_failure(i1 zeroext %tobool113, i8* %call114, i8* %62), !dbg !3330
  br label %if.end115, !dbg !3330

if.end115:                                        ; preds = %if.then112, %if.then108
  br label %if.end116, !dbg !3331

if.end116:                                        ; preds = %if.end115, %if.end106
  %63 = load i32, i32* @dereference, align 4, !dbg !3332
  switch i32 %63, label %sw.default [
    i32 5, label %sw.bb
    i32 3, label %sw.bb119
    i32 4, label %sw.bb119
  ], !dbg !3333

sw.bb:                                            ; preds = %if.end116
  %64 = load i8*, i8** %full_name, align 8, !dbg !3334
  %65 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3336
  %stat117 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %65, i32 0, i32 3, !dbg !3337, !ctir !184
  %call118 = call i32 @stat(i8* %64, %struct.stat* %stat117) #13, !dbg !3338
  store i32 %call118, i32* %err, align 4, !dbg !3339
  store i8 1, i8* %do_deref, align 1, !dbg !3340
  br label %sw.epilog, !dbg !3341

sw.bb119:                                         ; preds = %if.end116, %if.end116
  %66 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3342
  %tobool120 = trunc i8 %66 to i1, !dbg !3342
  br i1 %tobool120, label %if.then121, label %if.end144, !dbg !3344

if.then121:                                       ; preds = %sw.bb119
  call void @llvm.dbg.declare(metadata i8* %need_lstat, metadata !3345, metadata !DIExpression()), !dbg !3347
  %67 = load i8*, i8** %full_name, align 8, !dbg !3348
  %68 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3349
  %stat122 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %68, i32 0, i32 3, !dbg !3350, !ctir !184
  %call123 = call i32 @stat(i8* %67, %struct.stat* %stat122) #13, !dbg !3351
  store i32 %call123, i32* %err, align 4, !dbg !3352
  store i8 1, i8* %do_deref, align 1, !dbg !3353
  %69 = load i32, i32* @dereference, align 4, !dbg !3354
  %cmp124 = icmp eq i32 %69, 3, !dbg !3356
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !3357

if.then126:                                       ; preds = %if.then121
  br label %sw.epilog, !dbg !3358

if.end127:                                        ; preds = %if.then121
  %70 = load i32, i32* %err, align 4, !dbg !3359
  %cmp128 = icmp slt i32 %70, 0, !dbg !3360
  br i1 %cmp128, label %cond.true130, label %cond.false134, !dbg !3359

cond.true130:                                     ; preds = %if.end127
  %call131 = call i32* @__errno_location() #17, !dbg !3361
  %71 = load i32, i32* %call131, align 4, !dbg !3361, !ctir !27
  %cmp132 = icmp eq i32 %71, 2, !dbg !3362
  %conv133 = zext i1 %cmp132 to i32, !dbg !3362
  br label %cond.end138, !dbg !3359

cond.false134:                                    ; preds = %if.end127
  %72 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3363
  %stat135 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %72, i32 0, i32 3, !dbg !3363, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat135, i32 0, i32 3, !dbg !3363, !ctir !190
  %73 = load i32, i32* %st_mode, align 8, !dbg !3363, !ctir !200
  %and = and i32 %73, 61440, !dbg !3363
  %cmp136 = icmp eq i32 %and, 16384, !dbg !3363
  %lnot = xor i1 %cmp136, true, !dbg !3364
  %lnot.ext = zext i1 %lnot to i32, !dbg !3364
  br label %cond.end138, !dbg !3359

cond.end138:                                      ; preds = %cond.false134, %cond.true130
  %cond = phi i32 [ %conv133, %cond.true130 ], [ %lnot.ext, %cond.false134 ], !dbg !3359
  %tobool139 = icmp ne i32 %cond, 0, !dbg !3365
  %frombool140 = zext i1 %tobool139 to i8, !dbg !3366
  store i8 %frombool140, i8* %need_lstat, align 1, !dbg !3366
  %74 = load i8, i8* %need_lstat, align 1, !dbg !3367
  %tobool141 = trunc i8 %74 to i1, !dbg !3367
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !3369

if.then142:                                       ; preds = %cond.end138
  br label %sw.epilog, !dbg !3370

if.end143:                                        ; preds = %cond.end138
  br label %if.end144, !dbg !3371

if.end144:                                        ; preds = %if.end143, %sw.bb119
  br label %sw.default, !dbg !3372

sw.default:                                       ; preds = %if.end116, %if.end144
  %75 = load i8*, i8** %full_name, align 8, !dbg !3373
  %76 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3374
  %stat145 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %76, i32 0, i32 3, !dbg !3375, !ctir !184
  %call146 = call i32 @lstat(i8* %75, %struct.stat* %stat145) #13, !dbg !3376
  store i32 %call146, i32* %err, align 4, !dbg !3377
  store i8 0, i8* %do_deref, align 1, !dbg !3378
  br label %sw.epilog, !dbg !3379

sw.epilog:                                        ; preds = %sw.default, %if.then142, %if.then126, %sw.bb
  %77 = load i32, i32* %err, align 4, !dbg !3380
  %cmp147 = icmp ne i32 %77, 0, !dbg !3382
  br i1 %cmp147, label %if.then149, label %if.end157, !dbg !3383

if.then149:                                       ; preds = %sw.epilog
  %78 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3384
  %tobool150 = trunc i8 %78 to i1, !dbg !3384
  %call151 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0)) #13, !dbg !3386
  %79 = load i8*, i8** %full_name, align 8, !dbg !3387
  call void @file_failure(i1 zeroext %tobool150, i8* %call151, i8* %79), !dbg !3388
  %80 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3389
  %tobool152 = trunc i8 %80 to i1, !dbg !3389
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !3391

if.then153:                                       ; preds = %if.then149
  store i64 0, i64* %retval, align 8, !dbg !3392
  br label %return, !dbg !3392

if.end154:                                        ; preds = %if.then149
  %81 = load i8*, i8** %name.addr, align 8, !dbg !3393
  %call155 = call noalias i8* @xstrdup(i8* %81), !dbg !3394
  %82 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3395
  %name156 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %82, i32 0, i32 0, !dbg !3396, !ctir !184
  store i8* %call155, i8** %name156, align 8, !dbg !3397, !ctir !143
  %83 = load i64, i64* @cwd_n_used, align 8, !dbg !3398
  %inc = add i64 %83, 1, !dbg !3398
  store i64 %inc, i64* @cwd_n_used, align 8, !dbg !3398
  store i64 0, i64* %retval, align 8, !dbg !3399
  br label %return, !dbg !3399

if.end157:                                        ; preds = %sw.epilog
  %84 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3400
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %84, i32 0, i32 7, !dbg !3401, !ctir !184
  store i8 1, i8* %stat_ok, align 8, !dbg !3402, !ctir !141
  %85 = load i32, i32* %type.addr, align 4, !dbg !3403
  %cmp158 = icmp eq i32 %85, 5, !dbg !3405
  br i1 %cmp158, label %land.lhs.true166, label %lor.lhs.false160, !dbg !3406

lor.lhs.false160:                                 ; preds = %if.end157
  %86 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3407
  %stat161 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %86, i32 0, i32 3, !dbg !3407, !ctir !184
  %st_mode162 = getelementptr inbounds %struct.stat, %struct.stat* %stat161, i32 0, i32 3, !dbg !3407, !ctir !190
  %87 = load i32, i32* %st_mode162, align 8, !dbg !3407, !ctir !200
  %and163 = and i32 %87, 61440, !dbg !3407
  %cmp164 = icmp eq i32 %and163, 32768, !dbg !3407
  br i1 %cmp164, label %land.lhs.true166, label %if.end175, !dbg !3408

land.lhs.true166:                                 ; preds = %lor.lhs.false160, %if.end157
  %88 = load i8, i8* @print_with_color, align 1, !dbg !3409
  %tobool167 = trunc i8 %88 to i1, !dbg !3409
  br i1 %tobool167, label %land.lhs.true169, label %if.end175, !dbg !3410

land.lhs.true169:                                 ; preds = %land.lhs.true166
  %call170 = call zeroext i1 @is_colored(i32 21), !dbg !3411
  br i1 %call170, label %if.then172, label %if.end175, !dbg !3412

if.then172:                                       ; preds = %land.lhs.true169
  %89 = load i8*, i8** %full_name, align 8, !dbg !3413
  %90 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3414
  %call173 = call zeroext i1 @has_capability_cache(i8* %89, %struct.fileinfo* %90), !dbg !3415
  %91 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3416
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %91, i32 0, i32 10, !dbg !3417, !ctir !184
  %frombool174 = zext i1 %call173 to i8, !dbg !3418
  store i8 %frombool174, i8* %has_capability, align 8, !dbg !3418, !ctir !141
  br label %if.end175, !dbg !3416

if.end175:                                        ; preds = %if.then172, %land.lhs.true169, %land.lhs.true166, %lor.lhs.false160
  %92 = load i32, i32* @format, align 4, !dbg !3419
  %cmp176 = icmp eq i32 %92, 0, !dbg !3421
  br i1 %cmp176, label %if.then181, label %lor.lhs.false178, !dbg !3422

lor.lhs.false178:                                 ; preds = %if.end175
  %93 = load i8, i8* @print_scontext, align 1, !dbg !3423
  %tobool179 = trunc i8 %93 to i1, !dbg !3423
  br i1 %tobool179, label %if.then181, label %if.end256, !dbg !3424

if.then181:                                       ; preds = %lor.lhs.false178, %if.end175
  call void @llvm.dbg.declare(metadata i8* %have_scontext, metadata !3425, metadata !DIExpression()), !dbg !3427
  store i8 0, i8* %have_scontext, align 1, !dbg !3427
  call void @llvm.dbg.declare(metadata i8* %have_acl, metadata !3428, metadata !DIExpression()), !dbg !3429
  store i8 0, i8* %have_acl, align 1, !dbg !3429
  call void @llvm.dbg.declare(metadata i32* %attr_len, metadata !3430, metadata !DIExpression()), !dbg !3431
  %94 = load i8*, i8** %full_name, align 8, !dbg !3432
  %95 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3433
  %96 = load i8, i8* %do_deref, align 1, !dbg !3434
  %tobool182 = trunc i8 %96 to i1, !dbg !3434
  %call183 = call i32 @getfilecon_cache(i8* %94, %struct.fileinfo* %95, i1 zeroext %tobool182), !dbg !3435
  store i32 %call183, i32* %attr_len, align 4, !dbg !3431
  %97 = load i32, i32* %attr_len, align 4, !dbg !3436
  %cmp184 = icmp slt i32 %97, 0, !dbg !3437
  %conv185 = zext i1 %cmp184 to i32, !dbg !3437
  store i32 %conv185, i32* %err, align 4, !dbg !3438
  %98 = load i32, i32* %err, align 4, !dbg !3439
  %cmp186 = icmp eq i32 %98, 0, !dbg !3441
  br i1 %cmp186, label %if.then188, label %if.else206, !dbg !3442

if.then188:                                       ; preds = %if.then181
  %call189 = call zeroext i1 @is_smack_enabled(), !dbg !3443
  br i1 %call189, label %if.then190, label %if.else197, !dbg !3446

if.then190:                                       ; preds = %if.then188
  %99 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3447
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %99, i32 0, i32 6, !dbg !3447, !ctir !184
  %100 = load i8*, i8** %scontext, align 8, !dbg !3447, !ctir !143
  %call191 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i64 0, i64 0), i8* %100) #16, !dbg !3447
  %cmp192 = icmp eq i32 %call191, 0, !dbg !3447
  %lnot194 = xor i1 %cmp192, true, !dbg !3448
  %frombool196 = zext i1 %lnot194 to i8, !dbg !3449
  store i8 %frombool196, i8* %have_scontext, align 1, !dbg !3449
  br label %if.end205, !dbg !3450

if.else197:                                       ; preds = %if.then188
  %101 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3451
  %scontext198 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %101, i32 0, i32 6, !dbg !3451, !ctir !184
  %102 = load i8*, i8** %scontext198, align 8, !dbg !3451, !ctir !143
  %call199 = call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i8* %102) #16, !dbg !3451
  %cmp200 = icmp eq i32 %call199, 0, !dbg !3451
  %lnot202 = xor i1 %cmp200, true, !dbg !3452
  %frombool204 = zext i1 %lnot202 to i8, !dbg !3453
  store i8 %frombool204, i8* %have_scontext, align 1, !dbg !3453
  br label %if.end205

if.end205:                                        ; preds = %if.else197, %if.then190
  br label %if.end217, !dbg !3454

if.else206:                                       ; preds = %if.then181
  %103 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3455
  %scontext207 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %103, i32 0, i32 6, !dbg !3457, !ctir !184
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), i8** %scontext207, align 8, !dbg !3458, !ctir !143
  %call208 = call i32* @__errno_location() #17, !dbg !3459
  %104 = load i32, i32* %call208, align 4, !dbg !3459, !ctir !27
  %call209 = call zeroext i1 @is_ENOTSUP(i32 %104), !dbg !3461
  br i1 %call209, label %if.then215, label %lor.lhs.false211, !dbg !3462

lor.lhs.false211:                                 ; preds = %if.else206
  %call212 = call i32* @__errno_location() #17, !dbg !3463
  %105 = load i32, i32* %call212, align 4, !dbg !3463, !ctir !27
  %cmp213 = icmp eq i32 %105, 61, !dbg !3464
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !3465

if.then215:                                       ; preds = %lor.lhs.false211, %if.else206
  store i32 0, i32* %err, align 4, !dbg !3466
  br label %if.end216, !dbg !3467

if.end216:                                        ; preds = %if.then215, %lor.lhs.false211
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end205
  %106 = load i32, i32* %err, align 4, !dbg !3468
  %cmp218 = icmp eq i32 %106, 0, !dbg !3470
  br i1 %cmp218, label %land.lhs.true220, label %if.end230, !dbg !3471

land.lhs.true220:                                 ; preds = %if.end217
  %107 = load i32, i32* @format, align 4, !dbg !3472
  %cmp221 = icmp eq i32 %107, 0, !dbg !3473
  br i1 %cmp221, label %if.then223, label %if.end230, !dbg !3474

if.then223:                                       ; preds = %land.lhs.true220
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3475, metadata !DIExpression()), !dbg !3477
  %108 = load i8*, i8** %full_name, align 8, !dbg !3478
  %109 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3479
  %call224 = call i32 @file_has_acl_cache(i8* %108, %struct.fileinfo* %109), !dbg !3480
  store i32 %call224, i32* %n, align 4, !dbg !3477
  %110 = load i32, i32* %n, align 4, !dbg !3481
  %cmp225 = icmp slt i32 %110, 0, !dbg !3482
  %conv226 = zext i1 %cmp225 to i32, !dbg !3482
  store i32 %conv226, i32* %err, align 4, !dbg !3483
  %111 = load i32, i32* %n, align 4, !dbg !3484
  %cmp227 = icmp slt i32 0, %111, !dbg !3485
  %frombool229 = zext i1 %cmp227 to i8, !dbg !3486
  store i8 %frombool229, i8* %have_acl, align 1, !dbg !3486
  br label %if.end230, !dbg !3487

if.end230:                                        ; preds = %if.then223, %land.lhs.true220, %if.end217
  %112 = load i8, i8* %have_scontext, align 1, !dbg !3488
  %tobool231 = trunc i8 %112 to i1, !dbg !3488
  br i1 %tobool231, label %cond.false235, label %land.lhs.true232, !dbg !3489

land.lhs.true232:                                 ; preds = %if.end230
  %113 = load i8, i8* %have_acl, align 1, !dbg !3490
  %tobool233 = trunc i8 %113 to i1, !dbg !3490
  br i1 %tobool233, label %cond.false235, label %cond.true234, !dbg !3491

cond.true234:                                     ; preds = %land.lhs.true232
  br label %cond.end242, !dbg !3491

cond.false235:                                    ; preds = %land.lhs.true232, %if.end230
  %114 = load i8, i8* %have_scontext, align 1, !dbg !3492
  %tobool236 = trunc i8 %114 to i1, !dbg !3492
  br i1 %tobool236, label %land.rhs, label %land.end, !dbg !3493

land.rhs:                                         ; preds = %cond.false235
  %115 = load i8, i8* %have_acl, align 1, !dbg !3494
  %tobool238 = trunc i8 %115 to i1, !dbg !3494
  %lnot239 = xor i1 %tobool238, true, !dbg !3495
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false235
  %116 = phi i1 [ false, %cond.false235 ], [ %lnot239, %land.rhs ], !dbg !3496
  %117 = zext i1 %116 to i64, !dbg !3492
  %cond241 = select i1 %116, i32 1, i32 2, !dbg !3492
  br label %cond.end242, !dbg !3491

cond.end242:                                      ; preds = %land.end, %cond.true234
  %cond243 = phi i32 [ 0, %cond.true234 ], [ %cond241, %land.end ], !dbg !3491
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3497
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 9, !dbg !3498, !ctir !184
  store i32 %cond243, i32* %acl_type, align 4, !dbg !3499, !ctir !48
  %119 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3500
  %acl_type244 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %119, i32 0, i32 9, !dbg !3501, !ctir !184
  %120 = load i32, i32* %acl_type244, align 4, !dbg !3501, !ctir !48
  %cmp245 = icmp ne i32 %120, 0, !dbg !3502
  %conv246 = zext i1 %cmp245 to i32, !dbg !3502
  %121 = load i8, i8* @any_has_acl, align 1, !dbg !3503
  %tobool247 = trunc i8 %121 to i1, !dbg !3503
  %conv248 = zext i1 %tobool247 to i32, !dbg !3503
  %or = or i32 %conv248, %conv246, !dbg !3503
  %tobool249 = icmp ne i32 %or, 0, !dbg !3503
  %frombool250 = zext i1 %tobool249 to i8, !dbg !3503
  store i8 %frombool250, i8* @any_has_acl, align 1, !dbg !3503
  %122 = load i32, i32* %err, align 4, !dbg !3504
  %tobool251 = icmp ne i32 %122, 0, !dbg !3504
  br i1 %tobool251, label %if.then252, label %if.end255, !dbg !3506

if.then252:                                       ; preds = %cond.end242
  %call253 = call i32* @__errno_location() #17, !dbg !3507
  %123 = load i32, i32* %call253, align 4, !dbg !3507, !ctir !27
  %124 = load i8*, i8** %full_name, align 8, !dbg !3508
  %call254 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %124), !dbg !3508
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %call254), !dbg !3509
  br label %if.end255, !dbg !3509

if.end255:                                        ; preds = %if.then252, %cond.end242
  br label %if.end256, !dbg !3510

if.end256:                                        ; preds = %if.end255, %lor.lhs.false178
  %125 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3511
  %stat257 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %125, i32 0, i32 3, !dbg !3511, !ctir !184
  %st_mode258 = getelementptr inbounds %struct.stat, %struct.stat* %stat257, i32 0, i32 3, !dbg !3511, !ctir !190
  %126 = load i32, i32* %st_mode258, align 8, !dbg !3511, !ctir !200
  %and259 = and i32 %126, 61440, !dbg !3511
  %cmp260 = icmp eq i32 %and259, 40960, !dbg !3511
  br i1 %cmp260, label %land.lhs.true262, label %if.end298, !dbg !3513

land.lhs.true262:                                 ; preds = %if.end256
  %127 = load i32, i32* @format, align 4, !dbg !3514
  %cmp263 = icmp eq i32 %127, 0, !dbg !3515
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265, !dbg !3516

lor.lhs.false265:                                 ; preds = %land.lhs.true262
  %128 = load i8, i8* @check_symlink_mode, align 1, !dbg !3517
  %tobool266 = trunc i8 %128 to i1, !dbg !3517
  br i1 %tobool266, label %if.then268, label %if.end298, !dbg !3518

if.then268:                                       ; preds = %lor.lhs.false265, %land.lhs.true262
  call void @llvm.dbg.declare(metadata %struct.stat* %linkstats, metadata !3519, metadata !DIExpression()), !dbg !3521
  %129 = load i8*, i8** %full_name, align 8, !dbg !3522
  %130 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3523
  %131 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3524
  %tobool269 = trunc i8 %131 to i1, !dbg !3524
  call void @get_link_name(i8* %129, %struct.fileinfo* %130, i1 zeroext %tobool269), !dbg !3525
  call void @llvm.dbg.declare(metadata i8** %linkname, metadata !3526, metadata !DIExpression()), !dbg !3527
  %132 = load i8*, i8** %full_name, align 8, !dbg !3528
  %133 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3529
  %linkname270 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %133, i32 0, i32 1, !dbg !3530, !ctir !184
  %134 = load i8*, i8** %linkname270, align 8, !dbg !3530, !ctir !143
  %call271 = call i8* @make_link_name(i8* %132, i8* %134), !dbg !3531
  store i8* %call271, i8** %linkname, align 8, !dbg !3527
  %135 = load i8*, i8** %linkname, align 8, !dbg !3532
  %tobool272 = icmp ne i8* %135, null, !dbg !3532
  br i1 %tobool272, label %land.lhs.true273, label %if.end283, !dbg !3534

land.lhs.true273:                                 ; preds = %if.then268
  %136 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3535
  %quoted274 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %136, i32 0, i32 11, !dbg !3536, !ctir !184
  %137 = load i32, i32* %quoted274, align 4, !dbg !3536, !ctir !27
  %cmp275 = icmp eq i32 %137, 0, !dbg !3537
  br i1 %cmp275, label %land.lhs.true277, label %if.end283, !dbg !3538

land.lhs.true277:                                 ; preds = %land.lhs.true273
  %138 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3539
  %linkname278 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %138, i32 0, i32 1, !dbg !3540, !ctir !184
  %139 = load i8*, i8** %linkname278, align 8, !dbg !3540, !ctir !143
  %call279 = call zeroext i1 @needs_quoting(i8* %139), !dbg !3541
  br i1 %call279, label %if.then281, label %if.end283, !dbg !3542

if.then281:                                       ; preds = %land.lhs.true277
  %140 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3543
  %quoted282 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %140, i32 0, i32 11, !dbg !3544, !ctir !184
  store i32 -1, i32* %quoted282, align 4, !dbg !3545, !ctir !27
  br label %if.end283, !dbg !3543

if.end283:                                        ; preds = %if.then281, %land.lhs.true277, %land.lhs.true273, %if.then268
  %141 = load i8*, i8** %linkname, align 8, !dbg !3546
  %tobool284 = icmp ne i8* %141, null, !dbg !3546
  br i1 %tobool284, label %land.lhs.true285, label %if.end297, !dbg !3548

land.lhs.true285:                                 ; preds = %if.end283
  %142 = load i32, i32* @indicator_style, align 4, !dbg !3549
  %cmp286 = icmp ule i32 2, %142, !dbg !3550
  br i1 %cmp286, label %land.lhs.true291, label %lor.lhs.false288, !dbg !3551

lor.lhs.false288:                                 ; preds = %land.lhs.true285
  %143 = load i8, i8* @check_symlink_mode, align 1, !dbg !3552
  %tobool289 = trunc i8 %143 to i1, !dbg !3552
  br i1 %tobool289, label %land.lhs.true291, label %if.end297, !dbg !3553

land.lhs.true291:                                 ; preds = %lor.lhs.false288, %land.lhs.true285
  %144 = load i8*, i8** %linkname, align 8, !dbg !3554
  %call292 = call i32 @stat(i8* %144, %struct.stat* %linkstats) #13, !dbg !3555
  %cmp293 = icmp eq i32 %call292, 0, !dbg !3556
  br i1 %cmp293, label %if.then295, label %if.end297, !dbg !3557

if.then295:                                       ; preds = %land.lhs.true291
  %145 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3558
  %linkok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %145, i32 0, i32 8, !dbg !3560, !ctir !184
  store i8 1, i8* %linkok, align 1, !dbg !3561, !ctir !141
  %st_mode296 = getelementptr inbounds %struct.stat, %struct.stat* %linkstats, i32 0, i32 3, !dbg !3562, !ctir !190
  %146 = load i32, i32* %st_mode296, align 8, !dbg !3562, !ctir !200
  %147 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3563
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %147, i32 0, i32 5, !dbg !3564, !ctir !184
  store i32 %146, i32* %linkmode, align 4, !dbg !3565, !ctir !226
  br label %if.end297, !dbg !3566

if.end297:                                        ; preds = %if.then295, %land.lhs.true291, %lor.lhs.false288, %if.end283
  %148 = load i8*, i8** %linkname, align 8, !dbg !3567
  call void @free(i8* %148) #13, !dbg !3568
  br label %if.end298, !dbg !3569

if.end298:                                        ; preds = %if.end297, %lor.lhs.false265, %if.end256
  %149 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3570
  %stat299 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %149, i32 0, i32 3, !dbg !3570, !ctir !184
  %st_mode300 = getelementptr inbounds %struct.stat, %struct.stat* %stat299, i32 0, i32 3, !dbg !3570, !ctir !190
  %150 = load i32, i32* %st_mode300, align 8, !dbg !3570, !ctir !200
  %and301 = and i32 %150, 61440, !dbg !3570
  %cmp302 = icmp eq i32 %and301, 40960, !dbg !3570
  br i1 %cmp302, label %if.then304, label %if.else306, !dbg !3572

if.then304:                                       ; preds = %if.end298
  %151 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3573
  %filetype305 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %151, i32 0, i32 4, !dbg !3574, !ctir !184
  store i32 6, i32* %filetype305, align 8, !dbg !3575, !ctir !36
  br label %if.end325, !dbg !3573

if.else306:                                       ; preds = %if.end298
  %152 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3576
  %stat307 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %152, i32 0, i32 3, !dbg !3576, !ctir !184
  %st_mode308 = getelementptr inbounds %struct.stat, %struct.stat* %stat307, i32 0, i32 3, !dbg !3576, !ctir !190
  %153 = load i32, i32* %st_mode308, align 8, !dbg !3576, !ctir !200
  %and309 = and i32 %153, 61440, !dbg !3576
  %cmp310 = icmp eq i32 %and309, 16384, !dbg !3576
  br i1 %cmp310, label %if.then312, label %if.else322, !dbg !3578

if.then312:                                       ; preds = %if.else306
  %154 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3579
  %tobool313 = trunc i8 %154 to i1, !dbg !3579
  br i1 %tobool313, label %land.lhs.true315, label %if.else319, !dbg !3582

land.lhs.true315:                                 ; preds = %if.then312
  %155 = load i8, i8* @immediate_dirs, align 1, !dbg !3583
  %tobool316 = trunc i8 %155 to i1, !dbg !3583
  br i1 %tobool316, label %if.else319, label %if.then317, !dbg !3584

if.then317:                                       ; preds = %land.lhs.true315
  %156 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3585
  %filetype318 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %156, i32 0, i32 4, !dbg !3586, !ctir !184
  store i32 9, i32* %filetype318, align 8, !dbg !3587, !ctir !36
  br label %if.end321, !dbg !3585

if.else319:                                       ; preds = %land.lhs.true315, %if.then312
  %157 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3588
  %filetype320 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %157, i32 0, i32 4, !dbg !3589, !ctir !184
  store i32 3, i32* %filetype320, align 8, !dbg !3590, !ctir !36
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.then317
  br label %if.end324, !dbg !3591

if.else322:                                       ; preds = %if.else306
  %158 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3592
  %filetype323 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %158, i32 0, i32 4, !dbg !3593, !ctir !184
  store i32 5, i32* %filetype323, align 8, !dbg !3594, !ctir !36
  br label %if.end324

if.end324:                                        ; preds = %if.else322, %if.end321
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then304
  %159 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3595
  %stat326 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %159, i32 0, i32 3, !dbg !3595, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat326, i32 0, i32 10, !dbg !3595, !ctir !190
  %160 = load i64, i64* %st_blocks, align 8, !dbg !3595, !ctir !211
  store i64 %160, i64* %blocks, align 8, !dbg !3596
  %161 = load i32, i32* @format, align 4, !dbg !3597
  %cmp327 = icmp eq i32 %161, 0, !dbg !3599
  br i1 %cmp327, label %if.then332, label %lor.lhs.false329, !dbg !3600

lor.lhs.false329:                                 ; preds = %if.end325
  %162 = load i8, i8* @print_block_size, align 1, !dbg !3601
  %tobool330 = trunc i8 %162 to i1, !dbg !3601
  br i1 %tobool330, label %if.then332, label %if.end339, !dbg !3602

if.then332:                                       ; preds = %lor.lhs.false329, %if.end325
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !3603, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3606, metadata !DIExpression()), !dbg !3607
  %163 = load i64, i64* %blocks, align 8, !dbg !3608
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !3609, !ctir !734
  %164 = load i32, i32* @human_output_opts, align 4, !dbg !3610
  %165 = load i64, i64* @output_block_size, align 8, !dbg !3611
  %call333 = call i8* @human_readable(i64 %163, i8* %arraydecay, i32 %164, i64 512, i64 %165), !dbg !3612
  %call334 = call i32 @gnu_mbswidth(i8* %call333, i32 0), !dbg !3613
  store i32 %call334, i32* %len, align 4, !dbg !3607
  %166 = load i32, i32* @block_size_width, align 4, !dbg !3614
  %167 = load i32, i32* %len, align 4, !dbg !3616
  %cmp335 = icmp slt i32 %166, %167, !dbg !3617
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !3618

if.then337:                                       ; preds = %if.then332
  %168 = load i32, i32* %len, align 4, !dbg !3619
  store i32 %168, i32* @block_size_width, align 4, !dbg !3620
  br label %if.end338, !dbg !3621

if.end338:                                        ; preds = %if.then337, %if.then332
  br label %if.end339, !dbg !3622

if.end339:                                        ; preds = %if.end338, %lor.lhs.false329
  %169 = load i32, i32* @format, align 4, !dbg !3623
  %cmp340 = icmp eq i32 %169, 0, !dbg !3625
  br i1 %cmp340, label %if.then342, label %if.end374, !dbg !3626

if.then342:                                       ; preds = %if.end339
  %170 = load i8, i8* @print_owner, align 1, !dbg !3627
  %tobool343 = trunc i8 %170 to i1, !dbg !3627
  br i1 %tobool343, label %if.then344, label %if.end352, !dbg !3630

if.then344:                                       ; preds = %if.then342
  call void @llvm.dbg.declare(metadata i32* %len345, metadata !3631, metadata !DIExpression()), !dbg !3633
  %171 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3634
  %stat346 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %171, i32 0, i32 3, !dbg !3635, !ctir !184
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat346, i32 0, i32 4, !dbg !3636, !ctir !190
  %172 = load i32, i32* %st_uid, align 4, !dbg !3636, !ctir !202
  %call347 = call i32 @format_user_width(i32 %172), !dbg !3637
  store i32 %call347, i32* %len345, align 4, !dbg !3633
  %173 = load i32, i32* @owner_width, align 4, !dbg !3638
  %174 = load i32, i32* %len345, align 4, !dbg !3640
  %cmp348 = icmp slt i32 %173, %174, !dbg !3641
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !3642

if.then350:                                       ; preds = %if.then344
  %175 = load i32, i32* %len345, align 4, !dbg !3643
  store i32 %175, i32* @owner_width, align 4, !dbg !3644
  br label %if.end351, !dbg !3645

if.end351:                                        ; preds = %if.then350, %if.then344
  br label %if.end352, !dbg !3646

if.end352:                                        ; preds = %if.end351, %if.then342
  %176 = load i8, i8* @print_group, align 1, !dbg !3647
  %tobool353 = trunc i8 %176 to i1, !dbg !3647
  br i1 %tobool353, label %if.then354, label %if.end362, !dbg !3649

if.then354:                                       ; preds = %if.end352
  call void @llvm.dbg.declare(metadata i32* %len355, metadata !3650, metadata !DIExpression()), !dbg !3652
  %177 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3653
  %stat356 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %177, i32 0, i32 3, !dbg !3654, !ctir !184
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat356, i32 0, i32 5, !dbg !3655, !ctir !190
  %178 = load i32, i32* %st_gid, align 8, !dbg !3655, !ctir !204
  %call357 = call i32 @format_group_width(i32 %178), !dbg !3656
  store i32 %call357, i32* %len355, align 4, !dbg !3652
  %179 = load i32, i32* @group_width, align 4, !dbg !3657
  %180 = load i32, i32* %len355, align 4, !dbg !3659
  %cmp358 = icmp slt i32 %179, %180, !dbg !3660
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !3661

if.then360:                                       ; preds = %if.then354
  %181 = load i32, i32* %len355, align 4, !dbg !3662
  store i32 %181, i32* @group_width, align 4, !dbg !3663
  br label %if.end361, !dbg !3664

if.end361:                                        ; preds = %if.then360, %if.then354
  br label %if.end362, !dbg !3665

if.end362:                                        ; preds = %if.end361, %if.end352
  %182 = load i8, i8* @print_author, align 1, !dbg !3666
  %tobool363 = trunc i8 %182 to i1, !dbg !3666
  br i1 %tobool363, label %if.then364, label %if.end373, !dbg !3668

if.then364:                                       ; preds = %if.end362
  call void @llvm.dbg.declare(metadata i32* %len365, metadata !3669, metadata !DIExpression()), !dbg !3671
  %183 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3672
  %stat366 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %183, i32 0, i32 3, !dbg !3673, !ctir !184
  %st_uid367 = getelementptr inbounds %struct.stat, %struct.stat* %stat366, i32 0, i32 4, !dbg !3674, !ctir !190
  %184 = load i32, i32* %st_uid367, align 4, !dbg !3674, !ctir !202
  %call368 = call i32 @format_user_width(i32 %184), !dbg !3675
  store i32 %call368, i32* %len365, align 4, !dbg !3671
  %185 = load i32, i32* @author_width, align 4, !dbg !3676
  %186 = load i32, i32* %len365, align 4, !dbg !3678
  %cmp369 = icmp slt i32 %185, %186, !dbg !3679
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !3680

if.then371:                                       ; preds = %if.then364
  %187 = load i32, i32* %len365, align 4, !dbg !3681
  store i32 %187, i32* @author_width, align 4, !dbg !3682
  br label %if.end372, !dbg !3683

if.end372:                                        ; preds = %if.then371, %if.then364
  br label %if.end373, !dbg !3684

if.end373:                                        ; preds = %if.end372, %if.end362
  br label %if.end374, !dbg !3685

if.end374:                                        ; preds = %if.end373, %if.end339
  %188 = load i8, i8* @print_scontext, align 1, !dbg !3686
  %tobool375 = trunc i8 %188 to i1, !dbg !3686
  br i1 %tobool375, label %if.then376, label %if.end385, !dbg !3688

if.then376:                                       ; preds = %if.end374
  call void @llvm.dbg.declare(metadata i32* %len377, metadata !3689, metadata !DIExpression()), !dbg !3691
  %189 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3692
  %scontext378 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %189, i32 0, i32 6, !dbg !3693, !ctir !184
  %190 = load i8*, i8** %scontext378, align 8, !dbg !3693, !ctir !143
  %call379 = call i64 @strlen(i8* %190) #16, !dbg !3694
  %conv380 = trunc i64 %call379 to i32, !dbg !3694
  store i32 %conv380, i32* %len377, align 4, !dbg !3691
  %191 = load i32, i32* @scontext_width, align 4, !dbg !3695
  %192 = load i32, i32* %len377, align 4, !dbg !3697
  %cmp381 = icmp slt i32 %191, %192, !dbg !3698
  br i1 %cmp381, label %if.then383, label %if.end384, !dbg !3699

if.then383:                                       ; preds = %if.then376
  %193 = load i32, i32* %len377, align 4, !dbg !3700
  store i32 %193, i32* @scontext_width, align 4, !dbg !3701
  br label %if.end384, !dbg !3702

if.end384:                                        ; preds = %if.then383, %if.then376
  br label %if.end385, !dbg !3703

if.end385:                                        ; preds = %if.end384, %if.end374
  %194 = load i32, i32* @format, align 4, !dbg !3704
  %cmp386 = icmp eq i32 %194, 0, !dbg !3706
  br i1 %cmp386, label %if.then388, label %if.end454, !dbg !3707

if.then388:                                       ; preds = %if.end385
  call void @llvm.dbg.declare(metadata [21 x i8]* %b, metadata !3708, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata i32* %b_len, metadata !3711, metadata !DIExpression()), !dbg !3712
  %195 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3713
  %stat389 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %195, i32 0, i32 3, !dbg !3714, !ctir !184
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat389, i32 0, i32 2, !dbg !3715, !ctir !190
  %196 = load i64, i64* %st_nlink, align 8, !dbg !3715, !ctir !198
  %arraydecay390 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i64 0, i64 0, !dbg !3716, !ctir !731
  %call391 = call i8* @umaxtostr(i64 %196, i8* %arraydecay390), !dbg !3717
  %call392 = call i64 @strlen(i8* %call391) #16, !dbg !3718
  %conv393 = trunc i64 %call392 to i32, !dbg !3718
  store i32 %conv393, i32* %b_len, align 4, !dbg !3712
  %197 = load i32, i32* @nlink_width, align 4, !dbg !3719
  %198 = load i32, i32* %b_len, align 4, !dbg !3721
  %cmp394 = icmp slt i32 %197, %198, !dbg !3722
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !3723

if.then396:                                       ; preds = %if.then388
  %199 = load i32, i32* %b_len, align 4, !dbg !3724
  store i32 %199, i32* @nlink_width, align 4, !dbg !3725
  br label %if.end397, !dbg !3726

if.end397:                                        ; preds = %if.then396, %if.then388
  %200 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3727
  %stat398 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %200, i32 0, i32 3, !dbg !3727, !ctir !184
  %st_mode399 = getelementptr inbounds %struct.stat, %struct.stat* %stat398, i32 0, i32 3, !dbg !3727, !ctir !190
  %201 = load i32, i32* %st_mode399, align 8, !dbg !3727, !ctir !200
  %and400 = and i32 %201, 61440, !dbg !3727
  %cmp401 = icmp eq i32 %and400, 8192, !dbg !3727
  br i1 %cmp401, label %if.then409, label %lor.lhs.false403, !dbg !3729

lor.lhs.false403:                                 ; preds = %if.end397
  %202 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3730
  %stat404 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %202, i32 0, i32 3, !dbg !3730, !ctir !184
  %st_mode405 = getelementptr inbounds %struct.stat, %struct.stat* %stat404, i32 0, i32 3, !dbg !3730, !ctir !190
  %203 = load i32, i32* %st_mode405, align 8, !dbg !3730, !ctir !200
  %and406 = and i32 %203, 61440, !dbg !3730
  %cmp407 = icmp eq i32 %and406, 24576, !dbg !3730
  br i1 %cmp407, label %if.then409, label %if.else441, !dbg !3731

if.then409:                                       ; preds = %lor.lhs.false403, %if.end397
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf410, metadata !3732, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.declare(metadata i32* %len411, metadata !3735, metadata !DIExpression()), !dbg !3736
  %204 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3737
  %stat412 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %204, i32 0, i32 3, !dbg !3737, !ctir !184
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat412, i32 0, i32 7, !dbg !3737, !ctir !190
  %205 = load i64, i64* %st_rdev, align 8, !dbg !3737, !ctir !194
  %call413 = call i32 @gnu_dev_major(i64 %205) #17, !dbg !3737
  %conv414 = zext i32 %call413 to i64, !dbg !3737
  %arraydecay415 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !3738, !ctir !731
  %call416 = call i8* @umaxtostr(i64 %conv414, i8* %arraydecay415), !dbg !3739
  %call417 = call i64 @strlen(i8* %call416) #16, !dbg !3740
  %conv418 = trunc i64 %call417 to i32, !dbg !3740
  store i32 %conv418, i32* %len411, align 4, !dbg !3736
  %206 = load i32, i32* @major_device_number_width, align 4, !dbg !3741
  %207 = load i32, i32* %len411, align 4, !dbg !3743
  %cmp419 = icmp slt i32 %206, %207, !dbg !3744
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !3745

if.then421:                                       ; preds = %if.then409
  %208 = load i32, i32* %len411, align 4, !dbg !3746
  store i32 %208, i32* @major_device_number_width, align 4, !dbg !3747
  br label %if.end422, !dbg !3748

if.end422:                                        ; preds = %if.then421, %if.then409
  %209 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3749
  %stat423 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %209, i32 0, i32 3, !dbg !3749, !ctir !184
  %st_rdev424 = getelementptr inbounds %struct.stat, %struct.stat* %stat423, i32 0, i32 7, !dbg !3749, !ctir !190
  %210 = load i64, i64* %st_rdev424, align 8, !dbg !3749, !ctir !194
  %call425 = call i32 @gnu_dev_minor(i64 %210) #17, !dbg !3749
  %conv426 = zext i32 %call425 to i64, !dbg !3749
  %arraydecay427 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !3750, !ctir !731
  %call428 = call i8* @umaxtostr(i64 %conv426, i8* %arraydecay427), !dbg !3751
  %call429 = call i64 @strlen(i8* %call428) #16, !dbg !3752
  %conv430 = trunc i64 %call429 to i32, !dbg !3752
  store i32 %conv430, i32* %len411, align 4, !dbg !3753
  %211 = load i32, i32* @minor_device_number_width, align 4, !dbg !3754
  %212 = load i32, i32* %len411, align 4, !dbg !3756
  %cmp431 = icmp slt i32 %211, %212, !dbg !3757
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !3758

if.then433:                                       ; preds = %if.end422
  %213 = load i32, i32* %len411, align 4, !dbg !3759
  store i32 %213, i32* @minor_device_number_width, align 4, !dbg !3760
  br label %if.end434, !dbg !3761

if.end434:                                        ; preds = %if.then433, %if.end422
  %214 = load i32, i32* @major_device_number_width, align 4, !dbg !3762
  %add435 = add nsw i32 %214, 2, !dbg !3763
  %215 = load i32, i32* @minor_device_number_width, align 4, !dbg !3764
  %add436 = add nsw i32 %add435, %215, !dbg !3765
  store i32 %add436, i32* %len411, align 4, !dbg !3766
  %216 = load i32, i32* @file_size_width, align 4, !dbg !3767
  %217 = load i32, i32* %len411, align 4, !dbg !3769
  %cmp437 = icmp slt i32 %216, %217, !dbg !3770
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !3771

if.then439:                                       ; preds = %if.end434
  %218 = load i32, i32* %len411, align 4, !dbg !3772
  store i32 %218, i32* @file_size_width, align 4, !dbg !3773
  br label %if.end440, !dbg !3774

if.end440:                                        ; preds = %if.then439, %if.end434
  br label %if.end453, !dbg !3775

if.else441:                                       ; preds = %lor.lhs.false403
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf442, metadata !3776, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.declare(metadata i64* %size, metadata !3779, metadata !DIExpression()), !dbg !3780
  %219 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3781
  %stat443 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %219, i32 0, i32 3, !dbg !3782, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat443, i32 0, i32 8, !dbg !3783, !ctir !190
  %220 = load i64, i64* %st_size, align 8, !dbg !3783, !ctir !180
  %call444 = call i64 @unsigned_file_size(i64 %220), !dbg !3784
  store i64 %call444, i64* %size, align 8, !dbg !3780
  call void @llvm.dbg.declare(metadata i32* %len445, metadata !3785, metadata !DIExpression()), !dbg !3786
  %221 = load i64, i64* %size, align 8, !dbg !3787
  %arraydecay446 = getelementptr inbounds [652 x i8], [652 x i8]* %buf442, i64 0, i64 0, !dbg !3788, !ctir !734
  %222 = load i32, i32* @file_human_output_opts, align 4, !dbg !3789
  %223 = load i64, i64* @file_output_block_size, align 8, !dbg !3790
  %call447 = call i8* @human_readable(i64 %221, i8* %arraydecay446, i32 %222, i64 1, i64 %223), !dbg !3791
  %call448 = call i32 @gnu_mbswidth(i8* %call447, i32 0), !dbg !3792
  store i32 %call448, i32* %len445, align 4, !dbg !3786
  %224 = load i32, i32* @file_size_width, align 4, !dbg !3793
  %225 = load i32, i32* %len445, align 4, !dbg !3795
  %cmp449 = icmp slt i32 %224, %225, !dbg !3796
  br i1 %cmp449, label %if.then451, label %if.end452, !dbg !3797

if.then451:                                       ; preds = %if.else441
  %226 = load i32, i32* %len445, align 4, !dbg !3798
  store i32 %226, i32* @file_size_width, align 4, !dbg !3799
  br label %if.end452, !dbg !3800

if.end452:                                        ; preds = %if.then451, %if.else441
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.end440
  br label %if.end454, !dbg !3801

if.end454:                                        ; preds = %if.end453, %if.end385
  br label %if.end455, !dbg !3802

if.end455:                                        ; preds = %if.end454, %lor.lhs.false89, %lor.lhs.false77, %lor.lhs.false71, %lor.lhs.false62
  %227 = load i8, i8* @print_inode, align 1, !dbg !3803
  %tobool456 = trunc i8 %227 to i1, !dbg !3803
  br i1 %tobool456, label %if.then457, label %if.end470, !dbg !3805

if.then457:                                       ; preds = %if.end455
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf458, metadata !3806, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %len459, metadata !3809, metadata !DIExpression()), !dbg !3810
  %228 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3811
  %stat460 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %228, i32 0, i32 3, !dbg !3812, !ctir !184
  %st_ino461 = getelementptr inbounds %struct.stat, %struct.stat* %stat460, i32 0, i32 1, !dbg !3813, !ctir !190
  %229 = load i64, i64* %st_ino461, align 8, !dbg !3813, !ctir !196
  %arraydecay462 = getelementptr inbounds [21 x i8], [21 x i8]* %buf458, i64 0, i64 0, !dbg !3814, !ctir !731
  %call463 = call i8* @umaxtostr(i64 %229, i8* %arraydecay462), !dbg !3815
  %call464 = call i64 @strlen(i8* %call463) #16, !dbg !3816
  %conv465 = trunc i64 %call464 to i32, !dbg !3816
  store i32 %conv465, i32* %len459, align 4, !dbg !3810
  %230 = load i32, i32* @inode_number_width, align 4, !dbg !3817
  %231 = load i32, i32* %len459, align 4, !dbg !3819
  %cmp466 = icmp slt i32 %230, %231, !dbg !3820
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !3821

if.then468:                                       ; preds = %if.then457
  %232 = load i32, i32* %len459, align 4, !dbg !3822
  store i32 %232, i32* @inode_number_width, align 4, !dbg !3823
  br label %if.end469, !dbg !3824

if.end469:                                        ; preds = %if.then468, %if.then457
  br label %if.end470, !dbg !3825

if.end470:                                        ; preds = %if.end469, %if.end455
  %233 = load i8*, i8** %name.addr, align 8, !dbg !3826
  %call471 = call noalias i8* @xstrdup(i8* %233), !dbg !3827
  %234 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3828
  %name472 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %234, i32 0, i32 0, !dbg !3829, !ctir !184
  store i8* %call471, i8** %name472, align 8, !dbg !3830, !ctir !143
  %235 = load i64, i64* @cwd_n_used, align 8, !dbg !3831
  %inc473 = add i64 %235, 1, !dbg !3831
  store i64 %inc473, i64* @cwd_n_used, align 8, !dbg !3831
  %236 = load i64, i64* %blocks, align 8, !dbg !3832
  store i64 %236, i64* %retval, align 8, !dbg !3833
  br label %return, !dbg !3833

return:                                           ; preds = %if.end470, %if.end154, %if.then153
  %237 = load i64, i64* %retval, align 8, !dbg !3834
  ret i64 %237, !dbg !3834
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_directory(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !3835 {
entry:
  %name.addr = alloca i8*, align 8
  %realname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %new = alloca %struct.pending*, align 8, !ctir !233
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3836, metadata !DIExpression()), !dbg !3837
  store i8* %realname, i8** %realname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !3838, metadata !DIExpression()), !dbg !3839
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.declare(metadata %struct.pending** %new, metadata !3842, metadata !DIExpression()), !dbg !3843
  %call = call noalias i8* @xmalloc(i64 32), !dbg !3844
  %0 = bitcast i8* %call to %struct.pending*, !dbg !3844
  store %struct.pending* %0, %struct.pending** %new, align 8, !dbg !3843
  %1 = load i8*, i8** %realname.addr, align 8, !dbg !3845
  %tobool = icmp ne i8* %1, null, !dbg !3845
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3845

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %realname.addr, align 8, !dbg !3846
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !3847
  br label %cond.end, !dbg !3845

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3845

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !3845
  %3 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !3848
  %realname2 = getelementptr inbounds %struct.pending, %struct.pending* %3, i32 0, i32 1, !dbg !3849, !ctir !234
  store i8* %cond, i8** %realname2, align 8, !dbg !3850, !ctir !143
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3851
  %tobool3 = icmp ne i8* %4, null, !dbg !3851
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !3851

cond.true4:                                       ; preds = %cond.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !3852
  %call5 = call noalias i8* @xstrdup(i8* %5), !dbg !3853
  br label %cond.end7, !dbg !3851

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !3851

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi i8* [ %call5, %cond.true4 ], [ null, %cond.false6 ], !dbg !3851
  %6 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !3854
  %name9 = getelementptr inbounds %struct.pending, %struct.pending* %6, i32 0, i32 0, !dbg !3855, !ctir !234
  store i8* %cond8, i8** %name9, align 8, !dbg !3856, !ctir !143
  %7 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3857
  %tobool10 = trunc i8 %7 to i1, !dbg !3857
  %8 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !3858
  %command_line_arg11 = getelementptr inbounds %struct.pending, %struct.pending* %8, i32 0, i32 2, !dbg !3859, !ctir !234
  %frombool12 = zext i1 %tobool10 to i8, !dbg !3860
  store i8 %frombool12, i8* %command_line_arg11, align 8, !dbg !3860, !ctir !141
  %9 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !3861
  %10 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !3862
  %next = getelementptr inbounds %struct.pending, %struct.pending* %10, i32 0, i32 3, !dbg !3863, !ctir !234
  store %struct.pending* %9, %struct.pending** %next, align 8, !dbg !3864, !ctir !233
  %11 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !3865
  store %struct.pending* %11, %struct.pending** @pending_dirs, align 8, !dbg !3866
  ret void, !dbg !3867
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sort_files() #0 !dbg !3868 {
entry:
  %use_strcmp = alloca i8, align 1, !ctir !141
  call void @llvm.dbg.declare(metadata i8* %use_strcmp, metadata !3869, metadata !DIExpression()), !dbg !3870
  %0 = load i64, i64* @sorted_file_alloc, align 8, !dbg !3871
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !3873
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !3874
  %div = udiv i64 %2, 2, !dbg !3875
  %add = add i64 %1, %div, !dbg !3876
  %cmp = icmp ult i64 %0, %add, !dbg !3877
  br i1 %cmp, label %if.then, label %if.end, !dbg !3878

if.then:                                          ; preds = %entry
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !3879
  %4 = bitcast i8** %3 to i8*, !dbg !3879
  call void @free(i8* %4) #13, !dbg !3881
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !3882
  %call = call noalias i8* @xnmalloc(i64 %5, i64 24), !dbg !3883
  %6 = bitcast i8* %call to i8**, !dbg !3883
  store i8** %6, i8*** @sorted_file, align 8, !dbg !3884
  %7 = load i64, i64* @cwd_n_used, align 8, !dbg !3885
  %mul = mul i64 3, %7, !dbg !3886
  store i64 %mul, i64* @sorted_file_alloc, align 8, !dbg !3887
  br label %if.end, !dbg !3888

if.end:                                           ; preds = %if.then, %entry
  call void @initialize_ordering_vector(), !dbg !3889
  %8 = load i32, i32* @sort_type, align 4, !dbg !3890
  %cmp1 = icmp eq i32 %8, -1, !dbg !3892
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3893

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !3894

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @_setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0)) #18, !dbg !3895
  %tobool = icmp ne i32 %call4, 0, !dbg !3895
  br i1 %tobool, label %if.else, label %if.then5, !dbg !3897

if.then5:                                         ; preds = %if.end3
  store i8 0, i8* %use_strcmp, align 1, !dbg !3898
  br label %if.end7, !dbg !3899

if.else:                                          ; preds = %if.end3
  store i8 1, i8* %use_strcmp, align 1, !dbg !3900
  %9 = load i32, i32* @sort_type, align 4, !dbg !3902
  %cmp6 = icmp ne i32 %9, 3, !dbg !3902
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3902

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !3902

cond.false:                                       ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3818, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.sort_files, i64 0, i64 0)) #15, !dbg !3902
  unreachable, !dbg !3902

10:                                               ; No predecessors!
  br label %cond.end, !dbg !3902

cond.end:                                         ; preds = %10, %cond.true
  call void @initialize_ordering_vector(), !dbg !3903
  br label %if.end7

if.end7:                                          ; preds = %cond.end, %if.then5
  %11 = load i8**, i8*** @sorted_file, align 8, !dbg !3904
  %12 = load i64, i64* @cwd_n_used, align 8, !dbg !3905
  %13 = load i32, i32* @sort_type, align 4, !dbg !3906
  %14 = load i32, i32* @sort_type, align 4, !dbg !3907
  %cmp8 = icmp eq i32 %14, 4, !dbg !3908
  br i1 %cmp8, label %cond.true9, label %cond.false10, !dbg !3907

cond.true9:                                       ; preds = %if.end7
  %15 = load i32, i32* @time_type, align 4, !dbg !3909
  br label %cond.end11, !dbg !3907

cond.false10:                                     ; preds = %if.end7
  br label %cond.end11, !dbg !3907

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond = phi i32 [ %15, %cond.true9 ], [ 0, %cond.false10 ], !dbg !3907
  %add12 = add i32 %13, %cond, !dbg !3910
  %idxprom = zext i32 %add12 to i64, !dbg !3911
  %arrayidx = getelementptr inbounds [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]], [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]]* @sort_functions, i64 0, i64 %idxprom, !dbg !3911, !ctir !774
  %16 = load i8, i8* %use_strcmp, align 1, !dbg !3912
  %tobool13 = trunc i8 %16 to i1, !dbg !3912
  %idxprom14 = zext i1 %tobool13 to i64, !dbg !3911
  %arrayidx15 = getelementptr inbounds [2 x [2 x [2 x i32 (i8*, i8*)*]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]]* %arrayidx, i64 0, i64 %idxprom14, !dbg !3911, !ctir !782
  %17 = load i8, i8* @sort_reverse, align 1, !dbg !3913
  %tobool16 = trunc i8 %17 to i1, !dbg !3913
  %idxprom17 = zext i1 %tobool16 to i64, !dbg !3911
  %arrayidx18 = getelementptr inbounds [2 x [2 x i32 (i8*, i8*)*]], [2 x [2 x i32 (i8*, i8*)*]]* %arrayidx15, i64 0, i64 %idxprom17, !dbg !3911, !ctir !784
  %18 = load i8, i8* @directories_first, align 1, !dbg !3914
  %tobool19 = trunc i8 %18 to i1, !dbg !3914
  %idxprom20 = zext i1 %tobool19 to i64, !dbg !3911
  %arrayidx21 = getelementptr inbounds [2 x i32 (i8*, i8*)*], [2 x i32 (i8*, i8*)*]* %arrayidx18, i64 0, i64 %idxprom20, !dbg !3911, !ctir !786
  %19 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx21, align 8, !dbg !3911
  call void @mpsort(i8** %11, i64 %12, i32 (i8*, i8*)* %19), !dbg !3915
  br label %return, !dbg !3916

return:                                           ; preds = %cond.end11, %if.then2
  ret void, !dbg !3916
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extract_dirs_from_files(i8* %dirname, i1 zeroext %command_line_arg) #0 !dbg !3917 {
entry:
  %dirname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %i = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ignore_dot_and_dot_dot = alloca i8, align 1, !ctir !141
  %f = alloca %struct.fileinfo*, align 8, !ctir !258
  %name17 = alloca i8*, align 8, !ctir !143
  %f32 = alloca %struct.fileinfo*, align 8, !ctir !258
  store i8* %dirname, i8** %dirname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !3920, metadata !DIExpression()), !dbg !3921
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3922, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3924, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.declare(metadata i64* %j, metadata !3926, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.declare(metadata i8* %ignore_dot_and_dot_dot, metadata !3928, metadata !DIExpression()), !dbg !3929
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !3930
  %cmp = icmp ne i8* %0, null, !dbg !3931
  %frombool1 = zext i1 %cmp to i8, !dbg !3929
  store i8 %frombool1, i8* %ignore_dot_and_dot_dot, align 1, !dbg !3929
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !3932
  %tobool = icmp ne i8* %1, null, !dbg !3932
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3934

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !3935
  %tobool2 = icmp ne %struct.hash_table* %2, null, !dbg !3935
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3936

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !3937
  call void @queue_directory(i8* null, i8* %3, i1 zeroext false), !dbg !3939
  br label %if.end, !dbg !3940

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !3941
  store i64 %4, i64* %i, align 8, !dbg !3943
  br label %for.cond, !dbg !3944

for.cond:                                         ; preds = %if.end27, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !3945
  %dec = add i64 %5, -1, !dbg !3945
  store i64 %dec, i64* %i, align 8, !dbg !3945
  %cmp3 = icmp ne i64 %5, 0, !dbg !3947
  br i1 %cmp3, label %for.body, label %for.end, !dbg !3948

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3949, metadata !DIExpression()), !dbg !3951
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !3952
  %7 = load i64, i64* %i, align 8, !dbg !3953
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !3952, !ctir !754
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !3952
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !3952
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !3951
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3954
  %call = call zeroext i1 @is_directory(%struct.fileinfo* %10), !dbg !3956
  br i1 %call, label %land.lhs.true4, label %if.end27, !dbg !3957

land.lhs.true4:                                   ; preds = %for.body
  %11 = load i8, i8* %ignore_dot_and_dot_dot, align 1, !dbg !3958
  %tobool5 = trunc i8 %11 to i1, !dbg !3958
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !3959

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3960
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !3961, !ctir !184
  %13 = load i8*, i8** %name, align 8, !dbg !3961, !ctir !143
  %call6 = call zeroext i1 @basename_is_dot_or_dotdot(i8* %13), !dbg !3962
  br i1 %call6, label %if.end27, label %if.then7, !dbg !3963

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true4
  %14 = load i8*, i8** %dirname.addr, align 8, !dbg !3964
  %tobool8 = icmp ne i8* %14, null, !dbg !3964
  br i1 %tobool8, label %lor.lhs.false9, label %if.then14, !dbg !3967

lor.lhs.false9:                                   ; preds = %if.then7
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3968
  %name10 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 0, !dbg !3969, !ctir !184
  %16 = load i8*, i8** %name10, align 8, !dbg !3969, !ctir !143
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !3968, !ctir !143
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !3968
  %conv = sext i8 %17 to i32, !dbg !3968
  %cmp12 = icmp eq i32 %conv, 47, !dbg !3970
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !3971

if.then14:                                        ; preds = %lor.lhs.false9, %if.then7
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3972
  %name15 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 0, !dbg !3973, !ctir !184
  %19 = load i8*, i8** %name15, align 8, !dbg !3973, !ctir !143
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3974
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 1, !dbg !3975, !ctir !184
  %21 = load i8*, i8** %linkname, align 8, !dbg !3975, !ctir !143
  %22 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3976
  %tobool16 = trunc i8 %22 to i1, !dbg !3976
  call void @queue_directory(i8* %19, i8* %21, i1 zeroext %tobool16), !dbg !3977
  br label %if.end22, !dbg !3977

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.dbg.declare(metadata i8** %name17, metadata !3978, metadata !DIExpression()), !dbg !3980
  %23 = load i8*, i8** %dirname.addr, align 8, !dbg !3981
  %24 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3982
  %name18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %24, i32 0, i32 0, !dbg !3983, !ctir !184
  %25 = load i8*, i8** %name18, align 8, !dbg !3983, !ctir !143
  %call19 = call i8* @file_name_concat(i8* %23, i8* %25, i8** null), !dbg !3984
  store i8* %call19, i8** %name17, align 8, !dbg !3980
  %26 = load i8*, i8** %name17, align 8, !dbg !3985
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3986
  %linkname20 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 1, !dbg !3987, !ctir !184
  %28 = load i8*, i8** %linkname20, align 8, !dbg !3987, !ctir !143
  %29 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3988
  %tobool21 = trunc i8 %29 to i1, !dbg !3988
  call void @queue_directory(i8* %26, i8* %28, i1 zeroext %tobool21), !dbg !3989
  %30 = load i8*, i8** %name17, align 8, !dbg !3990
  call void @free(i8* %30) #13, !dbg !3991
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then14
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3992
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 4, !dbg !3994, !ctir !184
  %32 = load i32, i32* %filetype, align 8, !dbg !3994, !ctir !36
  %cmp23 = icmp eq i32 %32, 9, !dbg !3995
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !3996

if.then25:                                        ; preds = %if.end22
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3997
  call void @free_ent(%struct.fileinfo* %33), !dbg !3998
  br label %if.end26, !dbg !3998

if.end26:                                         ; preds = %if.then25, %if.end22
  br label %if.end27, !dbg !3999

if.end27:                                         ; preds = %if.end26, %lor.lhs.false, %for.body
  br label %for.cond, !dbg !4000, !llvm.loop !4001

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4003
  store i64 0, i64* %j, align 8, !dbg !4005
  br label %for.cond28, !dbg !4006

for.cond28:                                       ; preds = %for.inc, %for.end
  %34 = load i64, i64* %i, align 8, !dbg !4007
  %35 = load i64, i64* @cwd_n_used, align 8, !dbg !4009
  %cmp29 = icmp ult i64 %34, %35, !dbg !4010
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !4011

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f32, metadata !4012, metadata !DIExpression()), !dbg !4014
  %36 = load i8**, i8*** @sorted_file, align 8, !dbg !4015
  %37 = load i64, i64* %i, align 8, !dbg !4016
  %arrayidx33 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !4015, !ctir !754
  %38 = load i8*, i8** %arrayidx33, align 8, !dbg !4015
  %39 = bitcast i8* %38 to %struct.fileinfo*, !dbg !4015
  store %struct.fileinfo* %39, %struct.fileinfo** %f32, align 8, !dbg !4014
  %40 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4017
  %41 = bitcast %struct.fileinfo* %40 to i8*, !dbg !4017
  %42 = load i8**, i8*** @sorted_file, align 8, !dbg !4018
  %43 = load i64, i64* %j, align 8, !dbg !4019
  %arrayidx34 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !4018, !ctir !754
  store i8* %41, i8** %arrayidx34, align 8, !dbg !4020
  %44 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4021
  %filetype35 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %44, i32 0, i32 4, !dbg !4022, !ctir !184
  %45 = load i32, i32* %filetype35, align 8, !dbg !4022, !ctir !36
  %cmp36 = icmp ne i32 %45, 9, !dbg !4023
  %conv37 = zext i1 %cmp36 to i32, !dbg !4023
  %conv38 = sext i32 %conv37 to i64, !dbg !4024
  %46 = load i64, i64* %j, align 8, !dbg !4025
  %add = add i64 %46, %conv38, !dbg !4025
  store i64 %add, i64* %j, align 8, !dbg !4025
  br label %for.inc, !dbg !4026

for.inc:                                          ; preds = %for.body31
  %47 = load i64, i64* %i, align 8, !dbg !4027
  %inc = add i64 %47, 1, !dbg !4027
  store i64 %inc, i64* %i, align 8, !dbg !4027
  br label %for.cond28, !dbg !4028, !llvm.loop !4029

for.end39:                                        ; preds = %for.cond28
  %48 = load i64, i64* %j, align 8, !dbg !4031
  store i64 %48, i64* @cwd_n_used, align 8, !dbg !4032
  ret void, !dbg !4033
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_current_files() #0 !dbg !4034 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4035, metadata !DIExpression()), !dbg !4036
  %0 = load i32, i32* @format, align 4, !dbg !4037
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb8
    i32 0, label %sw.bb9
  ], !dbg !4038

sw.bb:                                            ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4039
  br label %for.cond, !dbg !4042

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i64, i64* %i, align 8, !dbg !4043
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4045
  %cmp = icmp ult i64 %1, %2, !dbg !4046
  br i1 %cmp, label %for.body, label %for.end, !dbg !4047

for.body:                                         ; preds = %for.cond
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4048
  %4 = load i64, i64* %i, align 8, !dbg !4050
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %4, !dbg !4048, !ctir !754
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4048
  %6 = bitcast i8* %5 to %struct.fileinfo*, !dbg !4048
  %call = call i64 @print_file_name_and_frills(%struct.fileinfo* %6, i64 0), !dbg !4051
  %call1 = call i32 @putchar_unlocked(i32 10), !dbg !4052
  br label %for.inc, !dbg !4053

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !4054
  %inc = add i64 %7, 1, !dbg !4054
  store i64 %inc, i64* %i, align 8, !dbg !4054
  br label %for.cond, !dbg !4055, !llvm.loop !4056

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4058

sw.bb2:                                           ; preds = %entry
  %8 = load i64, i64* @line_length, align 8, !dbg !4059
  %tobool = icmp ne i64 %8, 0, !dbg !4059
  br i1 %tobool, label %if.else, label %if.then, !dbg !4061

if.then:                                          ; preds = %sw.bb2
  call void @print_with_separator(i8 signext 32), !dbg !4062
  br label %if.end, !dbg !4062

if.else:                                          ; preds = %sw.bb2
  call void @print_many_per_line(), !dbg !4063
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !4064

sw.bb3:                                           ; preds = %entry
  %9 = load i64, i64* @line_length, align 8, !dbg !4065
  %tobool4 = icmp ne i64 %9, 0, !dbg !4065
  br i1 %tobool4, label %if.else6, label %if.then5, !dbg !4067

if.then5:                                         ; preds = %sw.bb3
  call void @print_with_separator(i8 signext 32), !dbg !4068
  br label %if.end7, !dbg !4068

if.else6:                                         ; preds = %sw.bb3
  call void @print_horizontal(), !dbg !4069
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  br label %sw.epilog, !dbg !4070

sw.bb8:                                           ; preds = %entry
  call void @print_with_separator(i8 signext 44), !dbg !4071
  br label %sw.epilog, !dbg !4072

sw.bb9:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4073
  br label %for.cond10, !dbg !4075

for.cond10:                                       ; preds = %for.inc16, %sw.bb9
  %10 = load i64, i64* %i, align 8, !dbg !4076
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !4078
  %cmp11 = icmp ult i64 %10, %11, !dbg !4079
  br i1 %cmp11, label %for.body12, label %for.end18, !dbg !4080

for.body12:                                       ; preds = %for.cond10
  call void @set_normal_color(), !dbg !4081
  %12 = load i8**, i8*** @sorted_file, align 8, !dbg !4083
  %13 = load i64, i64* %i, align 8, !dbg !4084
  %arrayidx13 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !4083, !ctir !754
  %14 = load i8*, i8** %arrayidx13, align 8, !dbg !4083
  %15 = bitcast i8* %14 to %struct.fileinfo*, !dbg !4083
  call void @print_long_format(%struct.fileinfo* %15), !dbg !4085
  br label %do.body, !dbg !4086

do.body:                                          ; preds = %for.body12
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !4087
  %16 = load i64, i64* @dired_pos, align 8, !dbg !4087
  %inc15 = add i64 %16, 1, !dbg !4087
  store i64 %inc15, i64* @dired_pos, align 8, !dbg !4087
  br label %do.end, !dbg !4087

do.end:                                           ; preds = %do.body
  br label %for.inc16, !dbg !4089

for.inc16:                                        ; preds = %do.end
  %17 = load i64, i64* %i, align 8, !dbg !4090
  %inc17 = add i64 %17, 1, !dbg !4090
  store i64 %inc17, i64* %i, align 8, !dbg !4090
  br label %for.cond10, !dbg !4091, !llvm.loop !4092

for.end18:                                        ; preds = %for.cond10
  br label %sw.epilog, !dbg !4094

sw.epilog:                                        ; preds = %entry, %for.end18, %sw.bb8, %if.end7, %if.end, %for.end
  ret void, !dbg !4095
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal { i64, i64 } @dev_ino_pop() #0 !dbg !4096 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !262
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !451
  %tmp = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !4099, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !4101, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !4103, metadata !DIExpression()), !dbg !4104
  store i32 16, i32* %dev_ino_size, align 4, !dbg !4104
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !4105
  %conv = sext i32 %0 to i64, !dbg !4105
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4106, metadata !DIExpression()), !dbg !4108
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !4108
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4108
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !4108, !ctir !452
  %2 = load i8*, i8** %next_free, align 8, !dbg !4108, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4108
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !4108, !ctir !452
  %4 = load i8*, i8** %object_base, align 8, !dbg !4108, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4108
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4108
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4108
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4108
  %5 = load i64, i64* %tmp, align 8, !dbg !4108
  %cmp = icmp ule i64 %conv, %5, !dbg !4105
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4105

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4105

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1027, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.dev_ino_pop, i64 0, i64 0)) #15, !dbg !4105
  unreachable, !dbg !4105

6:                                                ; No predecessors!
  br label %cond.end, !dbg !4105

cond.end:                                         ; preds = %6, %cond.true
  %7 = load i32, i32* %dev_ino_size, align 4, !dbg !4109
  %sub = sub nsw i32 0, %7, !dbg !4109
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4109, !ctir !143
  %idx.ext = sext i32 %sub to i64, !dbg !4109
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !4109, !ctir !144
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4109, !ctir !143
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4110, !ctir !143
  store i8* %9, i8** %vdi, align 8, !dbg !4111
  %10 = load i8*, i8** %vdi, align 8, !dbg !4112
  %11 = bitcast i8* %10 to %struct.dev_ino*, !dbg !4112
  store %struct.dev_ino* %11, %struct.dev_ino** %di, align 8, !dbg !4113
  %12 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4114
  %13 = bitcast %struct.dev_ino* %retval to i8*, !dbg !4115
  %14 = bitcast %struct.dev_ino* %12 to i8*, !dbg !4115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false), !dbg !4115
  %15 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !4116
  %16 = load { i64, i64 }, { i64, i64 }* %15, align 8, !dbg !4116
  ret { i64, i64 } %16, !dbg !4116
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_pending_ent(%struct.pending* %p) #0 !dbg !4117 {
entry:
  %p.addr = alloca %struct.pending*, align 8
  store %struct.pending* %p, %struct.pending** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pending** %p.addr, metadata !4120, metadata !DIExpression()), !dbg !4121
  %0 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4122
  %name = getelementptr inbounds %struct.pending, %struct.pending* %0, i32 0, i32 0, !dbg !4123, !ctir !234
  %1 = load i8*, i8** %name, align 8, !dbg !4123, !ctir !143
  call void @free(i8* %1) #13, !dbg !4124
  %2 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4125
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %2, i32 0, i32 1, !dbg !4126, !ctir !234
  %3 = load i8*, i8** %realname, align 8, !dbg !4126, !ctir !143
  call void @free(i8* %3) #13, !dbg !4127
  %4 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4128
  %5 = bitcast %struct.pending* %4 to i8*, !dbg !4128
  call void @free(i8* %5) #13, !dbg !4129
  ret void, !dbg !4130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_dir(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !1002 {
entry:
  %name.addr = alloca i8*, align 8
  %realname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !713
  %next = alloca %struct.dirent*, align 8, !ctir !717
  %total_blocks = alloca i64, align 8, !ctir !168
  %dir_stat = alloca %struct.stat, align 8, !ctir !190
  %fd = alloca i32, align 4, !ctir !27
  %absolute_name = alloca i8*, align 8, !ctir !143
  %type = alloca i32, align 4, !ctir !36
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca [652 x i8], align 16, !ctir !734
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4131, metadata !DIExpression()), !dbg !4132
  store i8* %realname, i8** %realname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4133, metadata !DIExpression()), !dbg !4134
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4137, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.declare(metadata %struct.dirent** %next, metadata !4139, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.declare(metadata i64* %total_blocks, metadata !4141, metadata !DIExpression()), !dbg !4142
  store i64 0, i64* %total_blocks, align 8, !dbg !4142
  %call = call i32* @__errno_location() #17, !dbg !4143
  store i32 0, i32* %call, align 4, !dbg !4144, !ctir !27
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4145
  %call1 = call %struct.__dirstream* @opendir(i8* %0), !dbg !4146
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4147
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4148
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !4148
  br i1 %tobool, label %if.end, label %if.then, !dbg !4150

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4151
  %tobool2 = trunc i8 %2 to i1, !dbg !4151
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i64 0, i64 0)) #13, !dbg !4153
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4154
  call void @file_failure(i1 zeroext %tobool2, i8* %call3, i8* %3), !dbg !4155
  br label %if.end150, !dbg !4156

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4157
  %tobool4 = icmp ne %struct.hash_table* %4, null, !dbg !4157
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !4159

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.stat* %dir_stat, metadata !4160, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4163, metadata !DIExpression()), !dbg !4164
  %5 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4165
  %call6 = call i32 @dirfd(%struct.__dirstream* %5) #13, !dbg !4166
  store i32 %call6, i32* %fd, align 4, !dbg !4164
  %6 = load i32, i32* %fd, align 4, !dbg !4167
  %cmp = icmp sle i32 0, %6, !dbg !4169
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4170

cond.true:                                        ; preds = %if.then5
  %7 = load i32, i32* %fd, align 4, !dbg !4171
  %call7 = call i32 @fstat(i32 %7, %struct.stat* %dir_stat) #13, !dbg !4172
  br label %cond.end, !dbg !4170

cond.false:                                       ; preds = %if.then5
  %8 = load i8*, i8** %name.addr, align 8, !dbg !4173
  %call8 = call i32 @stat(i8* %8, %struct.stat* %dir_stat) #13, !dbg !4174
  br label %cond.end, !dbg !4170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %call8, %cond.false ], !dbg !4170
  %cmp9 = icmp slt i32 %cond, 0, !dbg !4175
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !4176

if.then10:                                        ; preds = %cond.end
  %9 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4177
  %tobool11 = trunc i8 %9 to i1, !dbg !4177
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.204, i64 0, i64 0)) #13, !dbg !4179
  %10 = load i8*, i8** %name.addr, align 8, !dbg !4180
  call void @file_failure(i1 zeroext %tobool11, i8* %call12, i8* %10), !dbg !4181
  %11 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4182
  %call13 = call i32 @closedir(%struct.__dirstream* %11), !dbg !4183
  br label %if.end150, !dbg !4184

if.end14:                                         ; preds = %cond.end
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4185, !ctir !190
  %12 = load i64, i64* %st_dev, align 8, !dbg !4185, !ctir !194
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4187, !ctir !190
  %13 = load i64, i64* %st_ino, align 8, !dbg !4187, !ctir !196
  %call15 = call zeroext i1 @visit_dir(i64 %12, i64 %13), !dbg !4188
  br i1 %call15, label %if.then16, label %if.end20, !dbg !4189

if.then16:                                        ; preds = %if.end14
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0)) #13, !dbg !4190
  %14 = load i8*, i8** %name.addr, align 8, !dbg !4192
  %call18 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %14), !dbg !4192
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17, i8* %call18), !dbg !4193
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4194
  %call19 = call i32 @closedir(%struct.__dirstream* %15), !dbg !4195
  call void @set_exit_status(i1 zeroext true), !dbg !4196
  br label %if.end150, !dbg !4197

if.end20:                                         ; preds = %if.end14
  %st_dev21 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4198, !ctir !190
  %16 = load i64, i64* %st_dev21, align 8, !dbg !4198, !ctir !194
  %st_ino22 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4199, !ctir !190
  %17 = load i64, i64* %st_ino22, align 8, !dbg !4199, !ctir !196
  call void @dev_ino_push(i64 %16, i64 %17), !dbg !4200
  br label %if.end23, !dbg !4201

if.end23:                                         ; preds = %if.end20, %if.end
  call void @clear_files(), !dbg !4202
  %18 = load i8, i8* @recursive, align 1, !dbg !4203
  %tobool24 = trunc i8 %18 to i1, !dbg !4203
  br i1 %tobool24, label %if.then26, label %lor.lhs.false, !dbg !4205

lor.lhs.false:                                    ; preds = %if.end23
  %19 = load i8, i8* @print_dir_name, align 1, !dbg !4206
  %tobool25 = trunc i8 %19 to i1, !dbg !4206
  br i1 %tobool25, label %if.then26, label %if.end58, !dbg !4207

if.then26:                                        ; preds = %lor.lhs.false, %if.end23
  %20 = load i8, i8* @print_dir.first, align 1, !dbg !4208
  %tobool27 = trunc i8 %20 to i1, !dbg !4208
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4211

if.then28:                                        ; preds = %if.then26
  br label %do.body, !dbg !4212

do.body:                                          ; preds = %if.then28
  %call29 = call i32 @putchar_unlocked(i32 10), !dbg !4213
  %21 = load i64, i64* @dired_pos, align 8, !dbg !4213
  %inc = add i64 %21, 1, !dbg !4213
  store i64 %inc, i64* @dired_pos, align 8, !dbg !4213
  br label %do.end, !dbg !4213

do.end:                                           ; preds = %do.body
  br label %if.end30, !dbg !4213

if.end30:                                         ; preds = %do.end, %if.then26
  store i8 0, i8* @print_dir.first, align 1, !dbg !4215
  br label %do.body31, !dbg !4216

do.body31:                                        ; preds = %if.end30
  %22 = load i8, i8* @dired, align 1, !dbg !4217
  %tobool32 = trunc i8 %22 to i1, !dbg !4217
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !4220

if.then33:                                        ; preds = %do.body31
  br label %do.body34, !dbg !4217

do.body34:                                        ; preds = %if.then33
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4221
  %call35 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %23), !dbg !4221
  %24 = load i64, i64* @dired_pos, align 8, !dbg !4221
  %add = add i64 %24, 2, !dbg !4221
  store i64 %add, i64* @dired_pos, align 8, !dbg !4221
  br label %do.end36, !dbg !4221

do.end36:                                         ; preds = %do.body34
  br label %if.end37, !dbg !4221

if.end37:                                         ; preds = %do.end36, %do.body31
  br label %do.end38, !dbg !4220

do.end38:                                         ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8** %absolute_name, metadata !4223, metadata !DIExpression()), !dbg !4224
  store i8* null, i8** %absolute_name, align 8, !dbg !4224
  %25 = load i8, i8* @print_hyperlink, align 1, !dbg !4225
  %tobool39 = trunc i8 %25 to i1, !dbg !4225
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !4227

if.then40:                                        ; preds = %do.end38
  %26 = load i8*, i8** %name.addr, align 8, !dbg !4228
  %call41 = call i8* @canonicalize_filename_mode(i8* %26, i32 2), !dbg !4230
  store i8* %call41, i8** %absolute_name, align 8, !dbg !4231
  %27 = load i8*, i8** %absolute_name, align 8, !dbg !4232
  %tobool42 = icmp ne i8* %27, null, !dbg !4232
  br i1 %tobool42, label %if.end46, label %if.then43, !dbg !4234

if.then43:                                        ; preds = %if.then40
  %28 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4235
  %tobool44 = trunc i8 %28 to i1, !dbg !4235
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !4236
  %29 = load i8*, i8** %name.addr, align 8, !dbg !4237
  call void @file_failure(i1 zeroext %tobool44, i8* %call45, i8* %29), !dbg !4238
  br label %if.end46, !dbg !4238

if.end46:                                         ; preds = %if.then43, %if.then40
  br label %if.end47, !dbg !4239

if.end47:                                         ; preds = %if.end46, %do.end38
  %30 = load i8*, i8** %realname.addr, align 8, !dbg !4240
  %tobool48 = icmp ne i8* %30, null, !dbg !4240
  br i1 %tobool48, label %cond.true49, label %cond.false50, !dbg !4240

cond.true49:                                      ; preds = %if.end47
  %31 = load i8*, i8** %realname.addr, align 8, !dbg !4241
  br label %cond.end51, !dbg !4240

cond.false50:                                     ; preds = %if.end47
  %32 = load i8*, i8** %name.addr, align 8, !dbg !4242
  br label %cond.end51, !dbg !4240

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i8* [ %31, %cond.true49 ], [ %32, %cond.false50 ], !dbg !4240
  %33 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !4243
  %34 = load i8*, i8** %absolute_name, align 8, !dbg !4244
  %call53 = call i64 @quote_name(i8* %cond52, %struct.quoting_options* %33, i32 -1, %struct.bin_str* null, i1 zeroext true, %struct.obstack* @subdired_obstack, i8* %34), !dbg !4245
  %35 = load i8*, i8** %absolute_name, align 8, !dbg !4246
  call void @free(i8* %35) #13, !dbg !4247
  br label %do.body54, !dbg !4248

do.body54:                                        ; preds = %cond.end51
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4249
  %call55 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i64 0, i64 0), %struct._IO_FILE* %36), !dbg !4249
  %37 = load i64, i64* @dired_pos, align 8, !dbg !4249
  %add56 = add i64 %37, 2, !dbg !4249
  store i64 %add56, i64* @dired_pos, align 8, !dbg !4249
  br label %do.end57, !dbg !4249

do.end57:                                         ; preds = %do.body54
  br label %if.end58, !dbg !4251

if.end58:                                         ; preds = %do.end57, %lor.lhs.false
  br label %while.body, !dbg !4252

while.body:                                       ; preds = %if.end58, %if.end100
  %call59 = call i32* @__errno_location() #17, !dbg !4253
  store i32 0, i32* %call59, align 4, !dbg !4255, !ctir !27
  %38 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4256
  %call60 = call %struct.dirent* @readdir(%struct.__dirstream* %38), !dbg !4257
  store %struct.dirent* %call60, %struct.dirent** %next, align 8, !dbg !4258
  %39 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4259
  %tobool61 = icmp ne %struct.dirent* %39, null, !dbg !4259
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !4261

if.then62:                                        ; preds = %while.body
  %40 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4262
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %40, i32 0, i32 4, !dbg !4265, !ctir !718
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4262, !ctir !448
  %call63 = call zeroext i1 @file_ignored(i8* %arraydecay), !dbg !4266
  br i1 %call63, label %if.end86, label %if.then64, !dbg !4267

if.then64:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4268, metadata !DIExpression()), !dbg !4270
  store i32 0, i32* %type, align 4, !dbg !4270
  %41 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4271
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %41, i32 0, i32 3, !dbg !4272, !ctir !718
  %42 = load i8, i8* %d_type, align 2, !dbg !4272, !ctir !725
  %conv = zext i8 %42 to i32, !dbg !4271
  switch i32 %conv, label %sw.epilog [
    i32 6, label %sw.bb
    i32 2, label %sw.bb65
    i32 4, label %sw.bb66
    i32 1, label %sw.bb67
    i32 10, label %sw.bb68
    i32 8, label %sw.bb69
    i32 12, label %sw.bb70
    i32 14, label %sw.bb71
  ], !dbg !4273

sw.bb:                                            ; preds = %if.then64
  store i32 4, i32* %type, align 4, !dbg !4274
  br label %sw.epilog, !dbg !4276

sw.bb65:                                          ; preds = %if.then64
  store i32 2, i32* %type, align 4, !dbg !4277
  br label %sw.epilog, !dbg !4278

sw.bb66:                                          ; preds = %if.then64
  store i32 3, i32* %type, align 4, !dbg !4279
  br label %sw.epilog, !dbg !4280

sw.bb67:                                          ; preds = %if.then64
  store i32 1, i32* %type, align 4, !dbg !4281
  br label %sw.epilog, !dbg !4282

sw.bb68:                                          ; preds = %if.then64
  store i32 6, i32* %type, align 4, !dbg !4283
  br label %sw.epilog, !dbg !4284

sw.bb69:                                          ; preds = %if.then64
  store i32 5, i32* %type, align 4, !dbg !4285
  br label %sw.epilog, !dbg !4286

sw.bb70:                                          ; preds = %if.then64
  store i32 7, i32* %type, align 4, !dbg !4287
  br label %sw.epilog, !dbg !4288

sw.bb71:                                          ; preds = %if.then64
  store i32 8, i32* %type, align 4, !dbg !4289
  br label %sw.epilog, !dbg !4290

sw.epilog:                                        ; preds = %if.then64, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb
  %43 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4291
  %d_name72 = getelementptr inbounds %struct.dirent, %struct.dirent* %43, i32 0, i32 4, !dbg !4292, !ctir !718
  %arraydecay73 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name72, i64 0, i64 0, !dbg !4291, !ctir !448
  %44 = load i32, i32* %type, align 4, !dbg !4293
  %45 = load i8*, i8** %name.addr, align 8, !dbg !4294
  %call74 = call i64 @gobble_file(i8* %arraydecay73, i32 %44, i64 0, i1 zeroext false, i8* %45), !dbg !4295
  %46 = load i64, i64* %total_blocks, align 8, !dbg !4296
  %add75 = add i64 %46, %call74, !dbg !4296
  store i64 %add75, i64* %total_blocks, align 8, !dbg !4296
  %47 = load i32, i32* @format, align 4, !dbg !4297
  %cmp76 = icmp eq i32 %47, 1, !dbg !4299
  br i1 %cmp76, label %land.lhs.true, label %if.end85, !dbg !4300

land.lhs.true:                                    ; preds = %sw.epilog
  %48 = load i32, i32* @sort_type, align 4, !dbg !4301
  %cmp78 = icmp eq i32 %48, -1, !dbg !4302
  br i1 %cmp78, label %land.lhs.true80, label %if.end85, !dbg !4303

land.lhs.true80:                                  ; preds = %land.lhs.true
  %49 = load i8, i8* @print_block_size, align 1, !dbg !4304
  %tobool81 = trunc i8 %49 to i1, !dbg !4304
  br i1 %tobool81, label %if.end85, label %land.lhs.true82, !dbg !4305

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %50 = load i8, i8* @recursive, align 1, !dbg !4306
  %tobool83 = trunc i8 %50 to i1, !dbg !4306
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !4307

if.then84:                                        ; preds = %land.lhs.true82
  call void @sort_files(), !dbg !4308
  call void @print_current_files(), !dbg !4310
  call void @clear_files(), !dbg !4311
  br label %if.end85, !dbg !4312

if.end85:                                         ; preds = %if.then84, %land.lhs.true82, %land.lhs.true80, %land.lhs.true, %sw.epilog
  br label %if.end86, !dbg !4313

if.end86:                                         ; preds = %if.end85, %if.then62
  br label %if.end100, !dbg !4314

if.else:                                          ; preds = %while.body
  %call87 = call i32* @__errno_location() #17, !dbg !4315
  %51 = load i32, i32* %call87, align 4, !dbg !4315, !ctir !27
  %cmp88 = icmp ne i32 %51, 0, !dbg !4317
  br i1 %cmp88, label %if.then90, label %if.else98, !dbg !4318

if.then90:                                        ; preds = %if.else
  %52 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4319
  %tobool91 = trunc i8 %52 to i1, !dbg !4319
  %call92 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.209, i64 0, i64 0)) #13, !dbg !4321
  %53 = load i8*, i8** %name.addr, align 8, !dbg !4322
  call void @file_failure(i1 zeroext %tobool91, i8* %call92, i8* %53), !dbg !4323
  %call93 = call i32* @__errno_location() #17, !dbg !4324
  %54 = load i32, i32* %call93, align 4, !dbg !4324, !ctir !27
  %cmp94 = icmp ne i32 %54, 75, !dbg !4326
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4327

if.then96:                                        ; preds = %if.then90
  br label %while.end, !dbg !4328

if.end97:                                         ; preds = %if.then90
  br label %if.end99, !dbg !4329

if.else98:                                        ; preds = %if.else
  br label %while.end, !dbg !4330

if.end99:                                         ; preds = %if.end97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end86
  call void @process_signals(), !dbg !4331
  br label %while.body, !dbg !4252, !llvm.loop !4332

while.end:                                        ; preds = %if.else98, %if.then96
  %55 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4334
  %call101 = call i32 @closedir(%struct.__dirstream* %55), !dbg !4336
  %cmp102 = icmp ne i32 %call101, 0, !dbg !4337
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !4338

if.then104:                                       ; preds = %while.end
  %56 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4339
  %tobool105 = trunc i8 %56 to i1, !dbg !4339
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.210, i64 0, i64 0)) #13, !dbg !4341
  %57 = load i8*, i8** %name.addr, align 8, !dbg !4342
  call void @file_failure(i1 zeroext %tobool105, i8* %call106, i8* %57), !dbg !4343
  br label %if.end107, !dbg !4344

if.end107:                                        ; preds = %if.then104, %while.end
  call void @sort_files(), !dbg !4345
  %58 = load i8, i8* @recursive, align 1, !dbg !4346
  %tobool108 = trunc i8 %58 to i1, !dbg !4346
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !4348

if.then109:                                       ; preds = %if.end107
  %59 = load i8*, i8** %name.addr, align 8, !dbg !4349
  call void @extract_dirs_from_files(i8* %59, i1 zeroext false), !dbg !4350
  br label %if.end110, !dbg !4350

if.end110:                                        ; preds = %if.then109, %if.end107
  %60 = load i32, i32* @format, align 4, !dbg !4351
  %cmp111 = icmp eq i32 %60, 0, !dbg !4353
  br i1 %cmp111, label %if.then116, label %lor.lhs.false113, !dbg !4354

lor.lhs.false113:                                 ; preds = %if.end110
  %61 = load i8, i8* @print_block_size, align 1, !dbg !4355
  %tobool114 = trunc i8 %61 to i1, !dbg !4355
  br i1 %tobool114, label %if.then116, label %if.end147, !dbg !4356

if.then116:                                       ; preds = %lor.lhs.false113, %if.end110
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4357, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !4360, metadata !DIExpression()), !dbg !4361
  br label %do.body117, !dbg !4362

do.body117:                                       ; preds = %if.then116
  %62 = load i8, i8* @dired, align 1, !dbg !4363
  %tobool118 = trunc i8 %62 to i1, !dbg !4363
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !4366

if.then119:                                       ; preds = %do.body117
  br label %do.body120, !dbg !4363

do.body120:                                       ; preds = %if.then119
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4367
  %call121 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %63), !dbg !4367
  %64 = load i64, i64* @dired_pos, align 8, !dbg !4367
  %add122 = add i64 %64, 2, !dbg !4367
  store i64 %add122, i64* @dired_pos, align 8, !dbg !4367
  br label %do.end123, !dbg !4367

do.end123:                                        ; preds = %do.body120
  br label %if.end124, !dbg !4367

if.end124:                                        ; preds = %do.end123, %do.body117
  br label %do.end125, !dbg !4366

do.end125:                                        ; preds = %if.end124
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i64 0, i64 0)) #13, !dbg !4369
  store i8* %call126, i8** %p, align 8, !dbg !4370
  br label %do.body127, !dbg !4371

do.body127:                                       ; preds = %do.end125
  %65 = load i8*, i8** %p, align 8, !dbg !4372
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4372
  %call128 = call i32 @fputs_unlocked(i8* %65, %struct._IO_FILE* %66), !dbg !4372
  %67 = load i8*, i8** %p, align 8, !dbg !4372
  %call129 = call i64 @strlen(i8* %67) #16, !dbg !4372
  %68 = load i64, i64* @dired_pos, align 8, !dbg !4372
  %add130 = add i64 %68, %call129, !dbg !4372
  store i64 %add130, i64* @dired_pos, align 8, !dbg !4372
  br label %do.end131, !dbg !4372

do.end131:                                        ; preds = %do.body127
  br label %do.body132, !dbg !4374

do.body132:                                       ; preds = %do.end131
  %call133 = call i32 @putchar_unlocked(i32 32), !dbg !4375
  %69 = load i64, i64* @dired_pos, align 8, !dbg !4375
  %inc134 = add i64 %69, 1, !dbg !4375
  store i64 %inc134, i64* @dired_pos, align 8, !dbg !4375
  br label %do.end135, !dbg !4375

do.end135:                                        ; preds = %do.body132
  %70 = load i64, i64* %total_blocks, align 8, !dbg !4377
  %arraydecay136 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !4378, !ctir !734
  %71 = load i32, i32* @human_output_opts, align 4, !dbg !4379
  %72 = load i64, i64* @output_block_size, align 8, !dbg !4380
  %call137 = call i8* @human_readable(i64 %70, i8* %arraydecay136, i32 %71, i64 512, i64 %72), !dbg !4381
  store i8* %call137, i8** %p, align 8, !dbg !4382
  br label %do.body138, !dbg !4383

do.body138:                                       ; preds = %do.end135
  %73 = load i8*, i8** %p, align 8, !dbg !4384
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4384
  %call139 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !4384
  %75 = load i8*, i8** %p, align 8, !dbg !4384
  %call140 = call i64 @strlen(i8* %75) #16, !dbg !4384
  %76 = load i64, i64* @dired_pos, align 8, !dbg !4384
  %add141 = add i64 %76, %call140, !dbg !4384
  store i64 %add141, i64* @dired_pos, align 8, !dbg !4384
  br label %do.end142, !dbg !4384

do.end142:                                        ; preds = %do.body138
  br label %do.body143, !dbg !4386

do.body143:                                       ; preds = %do.end142
  %call144 = call i32 @putchar_unlocked(i32 10), !dbg !4387
  %77 = load i64, i64* @dired_pos, align 8, !dbg !4387
  %inc145 = add i64 %77, 1, !dbg !4387
  store i64 %inc145, i64* @dired_pos, align 8, !dbg !4387
  br label %do.end146, !dbg !4387

do.end146:                                        ; preds = %do.body143
  br label %if.end147, !dbg !4389

if.end147:                                        ; preds = %do.end146, %lor.lhs.false113
  %78 = load i64, i64* @cwd_n_used, align 8, !dbg !4390
  %tobool148 = icmp ne i64 %78, 0, !dbg !4390
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !4392

if.then149:                                       ; preds = %if.end147
  call void @print_current_files(), !dbg !4393
  br label %if.end150, !dbg !4393

if.end150:                                        ; preds = %if.then, %if.then10, %if.then16, %if.then149, %if.end147
  ret void, !dbg !4394
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_color() #0 !dbg !4395 {
entry:
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !4396
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !4397
  ret void, !dbg !4398
}

declare dso_local i32 @fflush_unlocked(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_restore() #0 !dbg !4399 {
entry:
  call void @signal_setup(i1 zeroext false), !dbg !4400
  ret void, !dbg !4401
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dired_dump_obstack(i8* %prefix, %struct.obstack* %os) #0 !dbg !4402 {
entry:
  %prefix.addr = alloca i8*, align 8
  %os.addr = alloca %struct.obstack*, align 8
  %n_pos = alloca i64, align 8, !ctir !149
  %__o = alloca %struct.obstack*, align 8, !ctir !451
  %tmp = alloca i64, align 8
  %pos = alloca i64*, align 8, !ctir !148
  %__o1 = alloca %struct.obstack*, align 8, !ctir !604
  %__value = alloca i8*, align 8, !ctir !167
  %tmp25 = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !149
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !4405, metadata !DIExpression()), !dbg !4406
  store %struct.obstack* %os, %struct.obstack** %os.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %os.addr, metadata !4407, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.declare(metadata i64* %n_pos, metadata !4409, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4411, metadata !DIExpression()), !dbg !4413
  %0 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !4413
  store %struct.obstack* %0, %struct.obstack** %__o, align 8, !dbg !4413
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4413
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !4413, !ctir !452
  %2 = load i8*, i8** %next_free, align 8, !dbg !4413, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4413
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !4413, !ctir !452
  %4 = load i8*, i8** %object_base, align 8, !dbg !4413, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4413
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4413
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4413
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4413
  %5 = load i64, i64* %tmp, align 8, !dbg !4413
  %div = udiv i64 %5, 8, !dbg !4414
  store i64 %div, i64* %n_pos, align 8, !dbg !4415
  %6 = load i64, i64* %n_pos, align 8, !dbg !4416
  %cmp = icmp ugt i64 %6, 0, !dbg !4418
  br i1 %cmp, label %if.then, label %if.end29, !dbg !4419

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64** %pos, metadata !4420, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !4423, metadata !DIExpression()), !dbg !4425
  %7 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !4425
  store %struct.obstack* %7, %struct.obstack** %__o1, align 8, !dbg !4425
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !4426, metadata !DIExpression()), !dbg !4425
  %8 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %object_base1 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 2, !dbg !4425, !ctir !453
  %9 = load i8*, i8** %object_base1, align 8, !dbg !4425, !ctir !143
  store i8* %9, i8** %__value, align 8, !dbg !4425
  %10 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4427
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3, !dbg !4427, !ctir !453
  %11 = load i8*, i8** %next_free2, align 8, !dbg !4427, !ctir !143
  %12 = load i8*, i8** %__value, align 8, !dbg !4427
  %cmp3 = icmp eq i8* %11, %12, !dbg !4427
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4425

if.then4:                                         ; preds = %if.then
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4427
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 10, !dbg !4427
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !4427
  %bf.clear = and i8 %bf.load, -3, !dbg !4427
  %bf.set = or i8 %bf.clear, 2, !dbg !4427
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !4427
  br label %if.end, !dbg !4427

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3, !dbg !4425, !ctir !453
  %15 = load i8*, i8** %next_free5, align 8, !dbg !4425, !ctir !143
  %sub.ptr.lhs.cast6 = ptrtoint i8* %15 to i64, !dbg !4425
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast6, 0, !dbg !4425
  %16 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0, i32 6, !dbg !4425, !ctir !453
  %17 = load i64, i64* %alignment_mask, align 8, !dbg !4425, !ctir !149
  %add = add i64 %sub.ptr.sub7, %17, !dbg !4425
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %alignment_mask8 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 6, !dbg !4425, !ctir !453
  %19 = load i64, i64* %alignment_mask8, align 8, !dbg !4425, !ctir !149
  %neg = xor i64 %19, -1, !dbg !4425
  %and = and i64 %add, %neg, !dbg !4425
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !4425, !ctir !144
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %next_free9 = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !4425, !ctir !453
  store i8* %add.ptr, i8** %next_free9, align 8, !dbg !4425, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4429
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3, !dbg !4429, !ctir !453
  %22 = load i8*, i8** %next_free10, align 8, !dbg !4429, !ctir !143
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4429
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 1, !dbg !4429, !ctir !453
  %24 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !4429, !ctir !458
  %25 = bitcast %struct._obstack_chunk* %24 to i8*, !dbg !4429
  %sub.ptr.lhs.cast11 = ptrtoint i8* %22 to i64, !dbg !4429
  %sub.ptr.rhs.cast12 = ptrtoint i8* %25 to i64, !dbg !4429
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !4429
  %26 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4429
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 4, !dbg !4429, !ctir !453
  %27 = load i8*, i8** %chunk_limit, align 8, !dbg !4429, !ctir !143
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4429
  %chunk14 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1, !dbg !4429, !ctir !453
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk14, align 8, !dbg !4429, !ctir !458
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !4429
  %sub.ptr.lhs.cast15 = ptrtoint i8* %27 to i64, !dbg !4429
  %sub.ptr.rhs.cast16 = ptrtoint i8* %30 to i64, !dbg !4429
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !4429
  %cmp18 = icmp ugt i64 %sub.ptr.sub13, %sub.ptr.sub17, !dbg !4429
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !4425

if.then19:                                        ; preds = %if.end
  %31 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4429
  %chunk_limit20 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 4, !dbg !4429, !ctir !453
  %32 = load i8*, i8** %chunk_limit20, align 8, !dbg !4429, !ctir !143
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4429
  %next_free21 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 3, !dbg !4429, !ctir !453
  store i8* %32, i8** %next_free21, align 8, !dbg !4429, !ctir !143
  br label %if.end22, !dbg !4429

if.end22:                                         ; preds = %if.then19, %if.end
  %34 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %next_free23 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0, i32 3, !dbg !4425, !ctir !453
  %35 = load i8*, i8** %next_free23, align 8, !dbg !4425, !ctir !143
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4425
  %object_base24 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 2, !dbg !4425, !ctir !453
  store i8* %35, i8** %object_base24, align 8, !dbg !4425, !ctir !143
  %37 = load i8*, i8** %__value, align 8, !dbg !4425
  store i8* %37, i8** %tmp25, align 8, !dbg !4425
  %38 = load i8*, i8** %tmp25, align 8, !dbg !4425
  %39 = bitcast i8* %38 to i64*, !dbg !4431
  store i64* %39, i64** %pos, align 8, !dbg !4422
  %40 = load i8*, i8** %prefix.addr, align 8, !dbg !4432
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4432
  %call = call i32 @fputs_unlocked(i8* %40, %struct._IO_FILE* %41), !dbg !4432
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4433, metadata !DIExpression()), !dbg !4435
  store i64 0, i64* %i, align 8, !dbg !4435
  br label %for.cond, !dbg !4436

for.cond:                                         ; preds = %for.inc, %if.end22
  %42 = load i64, i64* %i, align 8, !dbg !4437
  %43 = load i64, i64* %n_pos, align 8, !dbg !4439
  %cmp26 = icmp ult i64 %42, %43, !dbg !4440
  br i1 %cmp26, label %for.body, label %for.end, !dbg !4441

for.body:                                         ; preds = %for.cond
  %44 = load i64*, i64** %pos, align 8, !dbg !4442
  %45 = load i64, i64* %i, align 8, !dbg !4443
  %arrayidx = getelementptr inbounds i64, i64* %44, i64 %45, !dbg !4442, !ctir !148
  %46 = load i64, i64* %arrayidx, align 8, !dbg !4442
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 %46), !dbg !4444
  br label %for.inc, !dbg !4444

for.inc:                                          ; preds = %for.body
  %47 = load i64, i64* %i, align 8, !dbg !4445
  %inc = add i64 %47, 1, !dbg !4445
  store i64 %inc, i64* %i, align 8, !dbg !4445
  br label %for.cond, !dbg !4446, !llvm.loop !4447

for.end:                                          ; preds = %for.cond
  %call28 = call i32 @putchar_unlocked(i32 10), !dbg !4449
  br label %if.end29, !dbg !4450

if.end29:                                         ; preds = %for.end, %entry
  ret void, !dbg !4451
}

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_setup(i1 zeroext %init) #0 !dbg !909 {
entry:
  %init.addr = alloca i8, align 1
  %j = alloca i32, align 4, !ctir !27
  %act = alloca %struct.sigaction, align 8, !ctir !519
  %frombool = zext i1 %init to i8
  store i8 %frombool, i8* %init.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %init.addr, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4454, metadata !DIExpression()), !dbg !4455
  %0 = load i8, i8* %init.addr, align 1, !dbg !4456
  %tobool = trunc i8 %0 to i1, !dbg !4456
  br i1 %tobool, label %if.then, label %if.else, !dbg !4458

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !4459, metadata !DIExpression()), !dbg !4461
  %call = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #13, !dbg !4462
  store i32 0, i32* %j, align 4, !dbg !4463
  br label %for.cond, !dbg !4465

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %j, align 4, !dbg !4466
  %cmp = icmp slt i32 %1, 12, !dbg !4468
  br i1 %cmp, label %for.body, label %for.end, !dbg !4469

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4, !dbg !4470
  %idxprom = sext i32 %2 to i64, !dbg !4472
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom, !dbg !4472, !ctir !513
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4472
  %call1 = call i32 @sigaction(i32 %3, %struct.sigaction* null, %struct.sigaction* %act) #13, !dbg !4473
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !4474, !ctir !519
  %sa_handler = bitcast %union.anon.2* %__sigaction_handler to void (i32)**, !dbg !4474
  %4 = load void (i32)*, void (i32)** %sa_handler, align 8, !dbg !4474, !ctir !517
  %cmp2 = icmp ne void (i32)* %4, inttoptr (i64 1 to void (i32)*), !dbg !4476
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4477

if.then3:                                         ; preds = %for.body
  %5 = load i32, i32* %j, align 4, !dbg !4478
  %idxprom4 = sext i32 %5 to i64, !dbg !4479
  %arrayidx5 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom4, !dbg !4479, !ctir !513
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !4479
  %call6 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %6) #13, !dbg !4480
  br label %if.end, !dbg !4480

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !4481

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %j, align 4, !dbg !4482
  %inc = add nsw i32 %7, 1, !dbg !4482
  store i32 %inc, i32* %j, align 4, !dbg !4482
  br label %for.cond, !dbg !4483, !llvm.loop !4484

for.end:                                          ; preds = %for.cond
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 1, !dbg !4486, !ctir !519
  %8 = bitcast %struct.__sigset_t* %sa_mask to i8*, !dbg !4487
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i1 false), !dbg !4487
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 2, !dbg !4488, !ctir !519
  store i32 268435456, i32* %sa_flags, align 8, !dbg !4489, !ctir !27
  store i32 0, i32* %j, align 4, !dbg !4490
  br label %for.cond7, !dbg !4492

for.cond7:                                        ; preds = %for.inc24, %for.end
  %9 = load i32, i32* %j, align 4, !dbg !4493
  %cmp8 = icmp slt i32 %9, 12, !dbg !4495
  br i1 %cmp8, label %for.body9, label %for.end26, !dbg !4496

for.body9:                                        ; preds = %for.cond7
  %10 = load i32, i32* %j, align 4, !dbg !4497
  %idxprom10 = sext i32 %10 to i64, !dbg !4499
  %arrayidx11 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom10, !dbg !4499, !ctir !513
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !4499
  %call12 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %11) #13, !dbg !4500
  %tobool13 = icmp ne i32 %call12, 0, !dbg !4500
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !4501

if.then14:                                        ; preds = %for.body9
  %12 = load i32, i32* %j, align 4, !dbg !4502
  %idxprom15 = sext i32 %12 to i64, !dbg !4504
  %arrayidx16 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom15, !dbg !4504, !ctir !513
  %13 = load i32, i32* %arrayidx16, align 4, !dbg !4504
  %cmp17 = icmp eq i32 %13, 20, !dbg !4505
  %14 = zext i1 %cmp17 to i64, !dbg !4504
  %cond = select i1 %cmp17, void (i32)* @stophandler, void (i32)* @sighandler, !dbg !4504
  %__sigaction_handler18 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !4506, !ctir !519
  %sa_handler19 = bitcast %union.anon.2* %__sigaction_handler18 to void (i32)**, !dbg !4506
  store void (i32)* %cond, void (i32)** %sa_handler19, align 8, !dbg !4507, !ctir !517
  %15 = load i32, i32* %j, align 4, !dbg !4508
  %idxprom20 = sext i32 %15 to i64, !dbg !4509
  %arrayidx21 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom20, !dbg !4509, !ctir !513
  %16 = load i32, i32* %arrayidx21, align 4, !dbg !4509
  %call22 = call i32 @sigaction(i32 %16, %struct.sigaction* %act, %struct.sigaction* null) #13, !dbg !4510
  br label %if.end23, !dbg !4511

if.end23:                                         ; preds = %if.then14, %for.body9
  br label %for.inc24, !dbg !4512

for.inc24:                                        ; preds = %if.end23
  %17 = load i32, i32* %j, align 4, !dbg !4513
  %inc25 = add nsw i32 %17, 1, !dbg !4513
  store i32 %inc25, i32* %j, align 4, !dbg !4513
  br label %for.cond7, !dbg !4514, !llvm.loop !4515

for.end26:                                        ; preds = %for.cond7
  br label %if.end42, !dbg !4517

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !dbg !4518
  br label %for.cond27, !dbg !4521

for.cond27:                                       ; preds = %for.inc39, %if.else
  %18 = load i32, i32* %j, align 4, !dbg !4522
  %cmp28 = icmp slt i32 %18, 12, !dbg !4524
  br i1 %cmp28, label %for.body29, label %for.end41, !dbg !4525

for.body29:                                       ; preds = %for.cond27
  %19 = load i32, i32* %j, align 4, !dbg !4526
  %idxprom30 = sext i32 %19 to i64, !dbg !4528
  %arrayidx31 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom30, !dbg !4528, !ctir !513
  %20 = load i32, i32* %arrayidx31, align 4, !dbg !4528
  %call32 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %20) #13, !dbg !4529
  %tobool33 = icmp ne i32 %call32, 0, !dbg !4529
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !4530

if.then34:                                        ; preds = %for.body29
  %21 = load i32, i32* %j, align 4, !dbg !4531
  %idxprom35 = sext i32 %21 to i64, !dbg !4532
  %arrayidx36 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom35, !dbg !4532, !ctir !513
  %22 = load i32, i32* %arrayidx36, align 4, !dbg !4532
  %call37 = call void (i32)* @signal(i32 %22, void (i32)* null) #13, !dbg !4533
  br label %if.end38, !dbg !4533

if.end38:                                         ; preds = %if.then34, %for.body29
  br label %for.inc39, !dbg !4534

for.inc39:                                        ; preds = %if.end38
  %23 = load i32, i32* %j, align 4, !dbg !4535
  %inc40 = add nsw i32 %23, 1, !dbg !4535
  store i32 %inc40, i32* %j, align 4, !dbg !4535
  br label %for.cond27, !dbg !4536, !llvm.loop !4537

for.end41:                                        ; preds = %for.cond27
  br label %if.end42

if.end42:                                         ; preds = %for.end41, %for.end26
  ret void, !dbg !4539
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @sigismember(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @stophandler(i32 %sig) #0 !dbg !4540 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !4541, metadata !DIExpression()), !dbg !4542
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !4543
  %tobool = icmp ne i32 %0, 0, !dbg !4543
  br i1 %tobool, label %if.end, label %if.then, !dbg !4545

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !4546
  %inc = add nsw i32 %1, 1, !dbg !4546
  store volatile i32 %inc, i32* @stop_signal_count, align 4, !dbg !4546
  br label %if.end, !dbg !4547

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4548
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighandler(i32 %sig) #0 !dbg !4549 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !4550, metadata !DIExpression()), !dbg !4551
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !4552
  %tobool = icmp ne i32 %0, 0, !dbg !4552
  br i1 %tobool, label %if.end, label %if.then, !dbg !4554

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %sig.addr, align 4, !dbg !4555
  store volatile i32 %1, i32* @interrupt_signal, align 4, !dbg !4556
  br label %if.end, !dbg !4557

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4558
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @put_indicator(%struct.bin_str* %ind) #0 !dbg !4559 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !4562, metadata !DIExpression()), !dbg !4563
  %0 = load i8, i8* @used_color, align 1, !dbg !4564
  %tobool = trunc i8 %0 to i1, !dbg !4564
  br i1 %tobool, label %if.end2, label %if.then, !dbg !4566

if.then:                                          ; preds = %entry
  store i8 1, i8* @used_color, align 1, !dbg !4567
  %call = call i32 @tcgetpgrp(i32 1) #13, !dbg !4569
  %cmp = icmp sle i32 0, %call, !dbg !4571
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4572

if.then1:                                         ; preds = %if.then
  call void @signal_init(), !dbg !4573
  br label %if.end, !dbg !4573

if.end:                                           ; preds = %if.then1, %if.then
  call void @prep_non_filename_text(), !dbg !4574
  br label %if.end2, !dbg !4575

if.end2:                                          ; preds = %if.end, %entry
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !4576
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %1, i32 0, i32 1, !dbg !4576, !ctir !794
  %2 = load i8*, i8** %string, align 8, !dbg !4576, !ctir !146
  %3 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !4576
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i32 0, i32 0, !dbg !4576, !ctir !794
  %4 = load i64, i64* %len, align 8, !dbg !4576, !ctir !149
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4576
  %call3 = call i64 @fwrite_unlocked(i8* %2, i64 %4, i64 1, %struct._IO_FILE* %5), !dbg !4576
  ret void, !dbg !4577
}

; Function Attrs: nounwind
declare dso_local i32 @tcgetpgrp(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_init() #0 !dbg !4578 {
entry:
  call void @signal_setup(i1 zeroext true), !dbg !4579
  ret void, !dbg !4580
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @prep_non_filename_text() #0 !dbg !4581 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2, i32 1), align 8, !dbg !4582, !ctir !146
  %cmp = icmp ne i8* %0, null, !dbg !4584
  br i1 %cmp, label %if.then, label %if.else, !dbg !4585

if.then:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2)), !dbg !4586
  br label %if.end, !dbg !4586

if.else:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !4587
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 3)), !dbg !4589
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !4590
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4591
}

declare dso_local i64 @fwrite_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_failure(i1 zeroext %serious, i8* %message, i8* %file) #0 !dbg !4592 {
entry:
  %serious.addr = alloca i8, align 1
  %message.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !4595, metadata !DIExpression()), !dbg !4596
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !4597, metadata !DIExpression()), !dbg !4598
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4599, metadata !DIExpression()), !dbg !4600
  %call = call i32* @__errno_location() #17, !dbg !4601
  %0 = load i32, i32* %call, align 4, !dbg !4601, !ctir !27
  %1 = load i8*, i8** %message.addr, align 8, !dbg !4602
  %2 = load i8*, i8** %file.addr, align 8, !dbg !4603
  %call1 = call i8* @quotearg_style(i32 4, i8* %2), !dbg !4603
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %0, i8* %1, i8* %call1), !dbg !4604
  %3 = load i8, i8* %serious.addr, align 1, !dbg !4605
  %tobool = trunc i8 %3 to i1, !dbg !4605
  call void @set_exit_status(i1 zeroext %tobool), !dbg !4606
  ret void, !dbg !4607
}

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @visit_dir(i64 %dev, i64 %ino) #0 !dbg !4608 {
entry:
  %dev.addr = alloca i64, align 8
  %ino.addr = alloca i64, align 8
  %ent = alloca %struct.dev_ino*, align 8, !ctir !262
  %ent_from_table = alloca %struct.dev_ino*, align 8, !ctir !262
  %found_match = alloca i8, align 1, !ctir !141
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !4611, metadata !DIExpression()), !dbg !4612
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !4613, metadata !DIExpression()), !dbg !4614
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent, metadata !4615, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent_from_table, metadata !4617, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.declare(metadata i8* %found_match, metadata !4619, metadata !DIExpression()), !dbg !4620
  %call = call noalias i8* @xmalloc(i64 16), !dbg !4621
  %0 = bitcast i8* %call to %struct.dev_ino*, !dbg !4621
  store %struct.dev_ino* %0, %struct.dev_ino** %ent, align 8, !dbg !4622
  %1 = load i64, i64* %ino.addr, align 8, !dbg !4623
  %2 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !4624
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !4625, !ctir !263
  store i64 %1, i64* %st_ino, align 8, !dbg !4626, !ctir !267
  %3 = load i64, i64* %dev.addr, align 8, !dbg !4627
  %4 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !4628
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 1, !dbg !4629, !ctir !263
  store i64 %3, i64* %st_dev, align 8, !dbg !4630, !ctir !269
  %5 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4631
  %6 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !4632
  %7 = bitcast %struct.dev_ino* %6 to i8*, !dbg !4632
  %call1 = call i8* @hash_insert(%struct.hash_table* %5, i8* %7), !dbg !4633
  %8 = bitcast i8* %call1 to %struct.dev_ino*, !dbg !4633
  store %struct.dev_ino* %8, %struct.dev_ino** %ent_from_table, align 8, !dbg !4634
  %9 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !4635
  %cmp = icmp eq %struct.dev_ino* %9, null, !dbg !4637
  br i1 %cmp, label %if.then, label %if.end, !dbg !4638

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !4639
  unreachable, !dbg !4639

if.end:                                           ; preds = %entry
  %10 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !4641
  %11 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !4642
  %cmp2 = icmp ne %struct.dev_ino* %10, %11, !dbg !4643
  %frombool = zext i1 %cmp2 to i8, !dbg !4644
  store i8 %frombool, i8* %found_match, align 1, !dbg !4644
  %12 = load i8, i8* %found_match, align 1, !dbg !4645
  %tobool = trunc i8 %12 to i1, !dbg !4645
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !4647

if.then3:                                         ; preds = %if.end
  %13 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !4648
  %14 = bitcast %struct.dev_ino* %13 to i8*, !dbg !4648
  call void @free(i8* %14) #13, !dbg !4650
  br label %if.end4, !dbg !4651

if.end4:                                          ; preds = %if.then3, %if.end
  %15 = load i8, i8* %found_match, align 1, !dbg !4652
  %tobool5 = trunc i8 %15 to i1, !dbg !4652
  ret i1 %tobool5, !dbg !4653
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_exit_status(i1 zeroext %serious) #0 !dbg !4654 {
entry:
  %serious.addr = alloca i8, align 1
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !4655, metadata !DIExpression()), !dbg !4656
  %0 = load i8, i8* %serious.addr, align 1, !dbg !4657
  %tobool = trunc i8 %0 to i1, !dbg !4657
  br i1 %tobool, label %if.then, label %if.else, !dbg !4659

if.then:                                          ; preds = %entry
  store i32 2, i32* @exit_status, align 4, !dbg !4660
  br label %if.end2, !dbg !4661

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @exit_status, align 4, !dbg !4662
  %cmp = icmp eq i32 %1, 0, !dbg !4664
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4665

if.then1:                                         ; preds = %if.else
  store i32 1, i32* @exit_status, align 4, !dbg !4666
  br label %if.end, !dbg !4667

if.end:                                           ; preds = %if.then1, %if.else
  br label %if.end2

if.end2:                                          ; preds = %if.end, %if.then
  ret void, !dbg !4668
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_push(i64 %dev, i64 %ino) #0 !dbg !4669 {
entry:
  %dev.addr = alloca i64, align 8
  %ino.addr = alloca i64, align 8
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !262
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !604
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !451
  %tmp = alloca i64, align 8
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !4676, metadata !DIExpression()), !dbg !4677
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !4678, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !4680, metadata !DIExpression()), !dbg !4681
  store i32 16, i32* %dev_ino_size, align 4, !dbg !4681
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4682, metadata !DIExpression()), !dbg !4684
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !4684
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4685, metadata !DIExpression()), !dbg !4684
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !4684
  %conv = sext i32 %0 to i64, !dbg !4684
  store i64 %conv, i64* %__len, align 8, !dbg !4684
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !4686, metadata !DIExpression()), !dbg !4689
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4689
  store %struct.obstack* %1, %struct.obstack** %__o1, align 8, !dbg !4689
  %2 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4689
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 4, !dbg !4689, !ctir !452
  %3 = load i8*, i8** %chunk_limit, align 8, !dbg !4689, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4689
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 3, !dbg !4689, !ctir !452
  %5 = load i8*, i8** %next_free, align 8, !dbg !4689, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !4689
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !4689
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4689
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4689
  %6 = load i64, i64* %tmp, align 8, !dbg !4689
  %7 = load i64, i64* %__len, align 8, !dbg !4690
  %cmp = icmp ult i64 %6, %7, !dbg !4690
  br i1 %cmp, label %if.then, label %if.end, !dbg !4684

if.then:                                          ; preds = %entry
  %8 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4690
  %9 = load i64, i64* %__len, align 8, !dbg !4690
  call void @_obstack_newchunk(%struct.obstack* %8, i64 %9), !dbg !4690
  br label %if.end, !dbg !4690

if.end:                                           ; preds = %if.then, %entry
  %10 = load i64, i64* %__len, align 8, !dbg !4684
  %11 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4684
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 3, !dbg !4684, !ctir !453
  %12 = load i8*, i8** %next_free2, align 8, !dbg !4684, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %10, !dbg !4684, !ctir !144
  store i8* %add.ptr, i8** %next_free2, align 8, !dbg !4684, !ctir !143
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4691, !ctir !143
  store i8* %13, i8** %vdi, align 8, !dbg !4692
  %14 = load i8*, i8** %vdi, align 8, !dbg !4693
  %15 = bitcast i8* %14 to %struct.dev_ino*, !dbg !4693
  store %struct.dev_ino* %15, %struct.dev_ino** %di, align 8, !dbg !4694
  %16 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4695
  %incdec.ptr = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %16, i32 -1, !dbg !4695, !ctir !263
  store %struct.dev_ino* %incdec.ptr, %struct.dev_ino** %di, align 8, !dbg !4695
  %17 = load i64, i64* %dev.addr, align 8, !dbg !4696
  %18 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4697
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %18, i32 0, i32 1, !dbg !4698, !ctir !263
  store i64 %17, i64* %st_dev, align 8, !dbg !4699, !ctir !269
  %19 = load i64, i64* %ino.addr, align 8, !dbg !4700
  %20 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4701
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %20, i32 0, i32 0, !dbg !4702, !ctir !263
  store i64 %19, i64* %st_ino, align 8, !dbg !4703, !ctir !267
  ret void, !dbg !4704
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, %struct.bin_str* %color, i1 zeroext %allow_pad, %struct.obstack* %stack, i8* %absolute_name) #0 !dbg !4705 {
entry:
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %color.addr = alloca %struct.bin_str*, align 8
  %allow_pad.addr = alloca i8, align 1
  %stack.addr = alloca %struct.obstack*, align 8
  %absolute_name.addr = alloca i8*, align 8
  %smallbuf = alloca [8192 x i8], align 16, !ctir !737
  %buf = alloca i8*, align 8, !ctir !143
  %len = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  %skip_quotes = alloca i8, align 1, !ctir !141
  %h = alloca i8*, align 8, !ctir !143
  %n = alloca i8*, align 8, !ctir !143
  %__o = alloca %struct.obstack*, align 8, !ctir !604
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !451
  %tmp = alloca i64, align 8
  %__o49 = alloca %struct.obstack*, align 8, !ctir !604
  %__len50 = alloca i64, align 8, !ctir !149
  %__o151 = alloca %struct.obstack*, align 8, !ctir !451
  %tmp52 = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4710, metadata !DIExpression()), !dbg !4711
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !4712, metadata !DIExpression()), !dbg !4713
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !4714, metadata !DIExpression()), !dbg !4715
  store %struct.bin_str* %color, %struct.bin_str** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  %frombool = zext i1 %allow_pad to i8
  store i8 %frombool, i8* %allow_pad.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allow_pad.addr, metadata !4718, metadata !DIExpression()), !dbg !4719
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !4720, metadata !DIExpression()), !dbg !4721
  store i8* %absolute_name, i8** %absolute_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %absolute_name.addr, metadata !4722, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !4724, metadata !DIExpression()), !dbg !4725
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4726, metadata !DIExpression()), !dbg !4727
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !4728, !ctir !737
  store i8* %arraydecay, i8** %buf, align 8, !dbg !4727
  call void @llvm.dbg.declare(metadata i64* %len, metadata !4729, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !4731, metadata !DIExpression()), !dbg !4732
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4733
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !4734
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !4735
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* null, i8* %pad), !dbg !4736
  store i64 %call, i64* %len, align 8, !dbg !4737
  %3 = load i8, i8* %pad, align 1, !dbg !4738
  %tobool = trunc i8 %3 to i1, !dbg !4738
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4740

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* %allow_pad.addr, align 1, !dbg !4741
  %tobool1 = trunc i8 %4 to i1, !dbg !4741
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4742

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !4743

do.body:                                          ; preds = %if.then
  %call2 = call i32 @putchar_unlocked(i32 32), !dbg !4744
  %5 = load i64, i64* @dired_pos, align 8, !dbg !4744
  %inc = add i64 %5, 1, !dbg !4744
  store i64 %inc, i64* @dired_pos, align 8, !dbg !4744
  br label %do.end, !dbg !4744

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !4744

if.end:                                           ; preds = %do.end, %land.lhs.true, %entry
  %6 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !4746
  %tobool3 = icmp ne %struct.bin_str* %6, null, !dbg !4746
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !4748

if.then4:                                         ; preds = %if.end
  %7 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !4749
  %call5 = call zeroext i1 @print_color_indicator(%struct.bin_str* %7), !dbg !4750
  br label %if.end6, !dbg !4750

if.end6:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i8* %skip_quotes, metadata !4751, metadata !DIExpression()), !dbg !4752
  store i8 0, i8* %skip_quotes, align 1, !dbg !4752
  %8 = load i8*, i8** %absolute_name.addr, align 8, !dbg !4753
  %tobool7 = icmp ne i8* %8, null, !dbg !4753
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !4755

if.then8:                                         ; preds = %if.end6
  %9 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !4756
  %tobool9 = trunc i8 %9 to i1, !dbg !4756
  br i1 %tobool9, label %land.lhs.true10, label %if.end16, !dbg !4759

land.lhs.true10:                                  ; preds = %if.then8
  %10 = load i8, i8* @cwd_some_quoted, align 1, !dbg !4760
  %tobool11 = trunc i8 %10 to i1, !dbg !4760
  br i1 %tobool11, label %land.lhs.true12, label %if.end16, !dbg !4761

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load i8, i8* %pad, align 1, !dbg !4762
  %tobool13 = trunc i8 %11 to i1, !dbg !4762
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !4763

if.then14:                                        ; preds = %land.lhs.true12
  store i8 1, i8* %skip_quotes, align 1, !dbg !4764
  %12 = load i8*, i8** %buf, align 8, !dbg !4766
  %13 = load i8, i8* %12, align 1, !dbg !4766, !ctir !144
  %conv = sext i8 %13 to i32, !dbg !4766
  %call15 = call i32 @putchar_unlocked(i32 %conv), !dbg !4766
  br label %if.end16, !dbg !4767

if.end16:                                         ; preds = %if.then14, %land.lhs.true12, %land.lhs.true10, %if.then8
  call void @llvm.dbg.declare(metadata i8** %h, metadata !4768, metadata !DIExpression()), !dbg !4769
  %14 = load i8*, i8** @hostname, align 8, !dbg !4770
  %call17 = call i8* @file_escape(i8* %14, i1 zeroext false), !dbg !4771
  store i8* %call17, i8** %h, align 8, !dbg !4769
  call void @llvm.dbg.declare(metadata i8** %n, metadata !4772, metadata !DIExpression()), !dbg !4773
  %15 = load i8*, i8** %absolute_name.addr, align 8, !dbg !4774
  %call18 = call i8* @file_escape(i8* %15, i1 zeroext true), !dbg !4775
  store i8* %call18, i8** %n, align 8, !dbg !4773
  %16 = load i8*, i8** %h, align 8, !dbg !4776
  %17 = load i8*, i8** %n, align 8, !dbg !4777
  %18 = load i8, i8* %17, align 1, !dbg !4778, !ctir !144
  %conv19 = sext i8 %18 to i32, !dbg !4778
  %cmp = icmp eq i32 %conv19, 47, !dbg !4779
  %19 = zext i1 %cmp to i64, !dbg !4778
  %cond = select i1 %cmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i64 0, i64 0), !dbg !4778
  %20 = load i8*, i8** %n, align 8, !dbg !4780
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i64 0, i64 0), i8* %16, i8* %cond, i8* %20), !dbg !4781
  %21 = load i8*, i8** %h, align 8, !dbg !4782
  call void @free(i8* %21) #13, !dbg !4783
  %22 = load i8*, i8** %n, align 8, !dbg !4784
  call void @free(i8* %22) #13, !dbg !4785
  br label %if.end22, !dbg !4786

if.end22:                                         ; preds = %if.end16, %if.end6
  %23 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !4787
  %tobool23 = icmp ne %struct.obstack* %23, null, !dbg !4787
  br i1 %tobool23, label %if.then24, label %if.end36, !dbg !4789

if.then24:                                        ; preds = %if.end22
  br label %do.body25, !dbg !4790

do.body25:                                        ; preds = %if.then24
  %24 = load i8, i8* @dired, align 1, !dbg !4791
  %tobool26 = trunc i8 %24 to i1, !dbg !4791
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !4794

if.then27:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4795, metadata !DIExpression()), !dbg !4797
  %25 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !4797
  store %struct.obstack* %25, %struct.obstack** %__o, align 8, !dbg !4797
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4798, metadata !DIExpression()), !dbg !4797
  store i64 8, i64* %__len, align 8, !dbg !4797
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !4799, metadata !DIExpression()), !dbg !4802
  %26 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4802
  store %struct.obstack* %26, %struct.obstack** %__o1, align 8, !dbg !4802
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4802
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 4, !dbg !4802, !ctir !452
  %28 = load i8*, i8** %chunk_limit, align 8, !dbg !4802, !ctir !143
  %29 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !4802
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %29, i32 0, i32 3, !dbg !4802, !ctir !452
  %30 = load i8*, i8** %next_free, align 8, !dbg !4802, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !4802
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !4802
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4802
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4802
  %31 = load i64, i64* %tmp, align 8, !dbg !4802
  %32 = load i64, i64* %__len, align 8, !dbg !4803
  %cmp28 = icmp ult i64 %31, %32, !dbg !4803
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !4797

if.then30:                                        ; preds = %if.then27
  %33 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4803
  %34 = load i64, i64* %__len, align 8, !dbg !4803
  call void @_obstack_newchunk(%struct.obstack* %33, i64 %34), !dbg !4803
  br label %if.end31, !dbg !4803

if.end31:                                         ; preds = %if.then30, %if.then27
  %35 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4797
  %next_free32 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 3, !dbg !4797, !ctir !453
  %36 = load i8*, i8** %next_free32, align 8, !dbg !4797, !ctir !143
  %37 = load i64, i64* %__len, align 8, !dbg !4797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %37, i1 false), !dbg !4797
  %38 = load i64, i64* %__len, align 8, !dbg !4797
  %39 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4797
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %39, i32 0, i32 3, !dbg !4797, !ctir !453
  %40 = load i8*, i8** %next_free33, align 8, !dbg !4797, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %38, !dbg !4797, !ctir !144
  store i8* %add.ptr, i8** %next_free33, align 8, !dbg !4797, !ctir !143
  br label %if.end34, !dbg !4791

if.end34:                                         ; preds = %if.end31, %do.body25
  br label %do.end35, !dbg !4794

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !4794

if.end36:                                         ; preds = %do.end35, %if.end22
  %41 = load i8*, i8** %buf, align 8, !dbg !4804
  %42 = load i8, i8* %skip_quotes, align 1, !dbg !4804
  %tobool37 = trunc i8 %42 to i1, !dbg !4804
  %conv38 = zext i1 %tobool37 to i32, !dbg !4804
  %idx.ext = sext i32 %conv38 to i64, !dbg !4804
  %add.ptr39 = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !4804, !ctir !144
  %43 = load i64, i64* %len, align 8, !dbg !4804
  %44 = load i8, i8* %skip_quotes, align 1, !dbg !4804
  %tobool40 = trunc i8 %44 to i1, !dbg !4804
  %conv41 = zext i1 %tobool40 to i32, !dbg !4804
  %mul = mul nsw i32 %conv41, 2, !dbg !4804
  %conv42 = sext i32 %mul to i64, !dbg !4804
  %sub = sub i64 %43, %conv42, !dbg !4804
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4804
  %call43 = call i64 @fwrite_unlocked(i8* %add.ptr39, i64 1, i64 %sub, %struct._IO_FILE* %45), !dbg !4804
  %46 = load i64, i64* %len, align 8, !dbg !4805
  %47 = load i64, i64* @dired_pos, align 8, !dbg !4806
  %add = add i64 %47, %46, !dbg !4806
  store i64 %add, i64* @dired_pos, align 8, !dbg !4806
  %48 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !4807
  %tobool44 = icmp ne %struct.obstack* %48, null, !dbg !4807
  br i1 %tobool44, label %if.then45, label %if.end67, !dbg !4809

if.then45:                                        ; preds = %if.end36
  br label %do.body46, !dbg !4810

do.body46:                                        ; preds = %if.then45
  %49 = load i8, i8* @dired, align 1, !dbg !4811
  %tobool47 = trunc i8 %49 to i1, !dbg !4811
  br i1 %tobool47, label %if.then48, label %if.end65, !dbg !4814

if.then48:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o49, metadata !4815, metadata !DIExpression()), !dbg !4817
  %50 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !4817
  store %struct.obstack* %50, %struct.obstack** %__o49, align 8, !dbg !4817
  call void @llvm.dbg.declare(metadata i64* %__len50, metadata !4818, metadata !DIExpression()), !dbg !4817
  store i64 8, i64* %__len50, align 8, !dbg !4817
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o151, metadata !4819, metadata !DIExpression()), !dbg !4822
  %51 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !4822
  store %struct.obstack* %51, %struct.obstack** %__o151, align 8, !dbg !4822
  %52 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !4822
  %chunk_limit53 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 4, !dbg !4822, !ctir !452
  %53 = load i8*, i8** %chunk_limit53, align 8, !dbg !4822, !ctir !143
  %54 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !4822
  %next_free54 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 3, !dbg !4822, !ctir !452
  %55 = load i8*, i8** %next_free54, align 8, !dbg !4822, !ctir !143
  %sub.ptr.lhs.cast55 = ptrtoint i8* %53 to i64, !dbg !4822
  %sub.ptr.rhs.cast56 = ptrtoint i8* %55 to i64, !dbg !4822
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !4822
  store i64 %sub.ptr.sub57, i64* %tmp52, align 8, !dbg !4822
  %56 = load i64, i64* %tmp52, align 8, !dbg !4822
  %57 = load i64, i64* %__len50, align 8, !dbg !4823
  %cmp58 = icmp ult i64 %56, %57, !dbg !4823
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !4817

if.then60:                                        ; preds = %if.then48
  %58 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !4823
  %59 = load i64, i64* %__len50, align 8, !dbg !4823
  call void @_obstack_newchunk(%struct.obstack* %58, i64 %59), !dbg !4823
  br label %if.end61, !dbg !4823

if.end61:                                         ; preds = %if.then60, %if.then48
  %60 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !4817
  %next_free62 = getelementptr inbounds %struct.obstack, %struct.obstack* %60, i32 0, i32 3, !dbg !4817, !ctir !453
  %61 = load i8*, i8** %next_free62, align 8, !dbg !4817, !ctir !143
  %62 = load i64, i64* %__len50, align 8, !dbg !4817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %62, i1 false), !dbg !4817
  %63 = load i64, i64* %__len50, align 8, !dbg !4817
  %64 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !4817
  %next_free63 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !4817, !ctir !453
  %65 = load i8*, i8** %next_free63, align 8, !dbg !4817, !ctir !143
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %63, !dbg !4817, !ctir !144
  store i8* %add.ptr64, i8** %next_free63, align 8, !dbg !4817, !ctir !143
  br label %if.end65, !dbg !4811

if.end65:                                         ; preds = %if.end61, %do.body46
  br label %do.end66, !dbg !4814

do.end66:                                         ; preds = %if.end65
  br label %if.end67, !dbg !4814

if.end67:                                         ; preds = %do.end66, %if.end36
  %66 = load i8*, i8** %absolute_name.addr, align 8, !dbg !4824
  %tobool68 = icmp ne i8* %66, null, !dbg !4824
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !4826

if.then69:                                        ; preds = %if.end67
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4827
  %call70 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !4827
  %68 = load i8, i8* %skip_quotes, align 1, !dbg !4829
  %tobool71 = trunc i8 %68 to i1, !dbg !4829
  br i1 %tobool71, label %if.then72, label %if.end77, !dbg !4831

if.then72:                                        ; preds = %if.then69
  %69 = load i8*, i8** %buf, align 8, !dbg !4832
  %70 = load i64, i64* %len, align 8, !dbg !4832
  %add.ptr73 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !4832, !ctir !144
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr73, i64 -1, !dbg !4832, !ctir !144
  %71 = load i8, i8* %add.ptr74, align 1, !dbg !4832, !ctir !144
  %conv75 = sext i8 %71 to i32, !dbg !4832
  %call76 = call i32 @putchar_unlocked(i32 %conv75), !dbg !4832
  br label %if.end77, !dbg !4832

if.end77:                                         ; preds = %if.then72, %if.then69
  br label %if.end78, !dbg !4833

if.end78:                                         ; preds = %if.end77, %if.end67
  %72 = load i8*, i8** %buf, align 8, !dbg !4834
  %arraydecay79 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !4836, !ctir !737
  %cmp80 = icmp ne i8* %72, %arraydecay79, !dbg !4837
  br i1 %cmp80, label %land.lhs.true82, label %if.end86, !dbg !4838

land.lhs.true82:                                  ; preds = %if.end78
  %73 = load i8*, i8** %buf, align 8, !dbg !4839
  %74 = load i8*, i8** %name.addr, align 8, !dbg !4840
  %cmp83 = icmp ne i8* %73, %74, !dbg !4841
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !4842

if.then85:                                        ; preds = %land.lhs.true82
  %75 = load i8*, i8** %buf, align 8, !dbg !4843
  call void @free(i8* %75) #13, !dbg !4844
  br label %if.end86, !dbg !4844

if.end86:                                         ; preds = %if.then85, %land.lhs.true82, %if.end78
  %76 = load i64, i64* %len, align 8, !dbg !4845
  %77 = load i8, i8* %pad, align 1, !dbg !4846
  %tobool87 = trunc i8 %77 to i1, !dbg !4846
  %conv88 = zext i1 %tobool87 to i64, !dbg !4846
  %add89 = add i64 %76, %conv88, !dbg !4847
  ret i64 %add89, !dbg !4848
}

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @file_ignored(i8* %name) #0 !dbg !4849 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  %0 = load i32, i32* @ignore_mode, align 4, !dbg !4854
  %cmp = icmp ne i32 %0, 2, !dbg !4855
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false11, !dbg !4856

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4857
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !4857, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4857
  %conv = sext i8 %2 to i32, !dbg !4857
  %cmp1 = icmp eq i32 %conv, 46, !dbg !4858
  br i1 %cmp1, label %land.lhs.true3, label %lor.lhs.false11, !dbg !4859

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* @ignore_mode, align 4, !dbg !4860
  %cmp4 = icmp eq i32 %3, 0, !dbg !4861
  br i1 %cmp4, label %lor.end, label %lor.lhs.false, !dbg !4862

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %4 = load i8*, i8** %name.addr, align 8, !dbg !4863
  %5 = load i8*, i8** %name.addr, align 8, !dbg !4864
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !4864, !ctir !146
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !4864
  %conv7 = sext i8 %6 to i32, !dbg !4864
  %cmp8 = icmp eq i32 %conv7, 46, !dbg !4865
  %conv9 = zext i1 %cmp8 to i32, !dbg !4865
  %add = add nsw i32 1, %conv9, !dbg !4866
  %idxprom = sext i32 %add to i64, !dbg !4863
  %arrayidx10 = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4863, !ctir !146
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !4863
  %tobool = icmp ne i8 %7, 0, !dbg !4863
  br i1 %tobool, label %lor.lhs.false11, label %lor.end, !dbg !4867

lor.lhs.false11:                                  ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %8 = load i32, i32* @ignore_mode, align 4, !dbg !4868
  %cmp12 = icmp eq i32 %8, 0, !dbg !4869
  br i1 %cmp12, label %land.lhs.true14, label %lor.rhs, !dbg !4870

land.lhs.true14:                                  ; preds = %lor.lhs.false11
  %9 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !4871
  %10 = load i8*, i8** %name.addr, align 8, !dbg !4872
  %call = call zeroext i1 @patterns_match(%struct.ignore_pattern* %9, i8* %10), !dbg !4873
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !4874

lor.rhs:                                          ; preds = %land.lhs.true14, %lor.lhs.false11
  %11 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !4875
  %12 = load i8*, i8** %name.addr, align 8, !dbg !4876
  %call16 = call zeroext i1 @patterns_match(%struct.ignore_pattern* %11, i8* %12), !dbg !4877
  br label %lor.end, !dbg !4874

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true14, %lor.lhs.false, %land.lhs.true3
  %13 = phi i1 [ true, %land.lhs.true14 ], [ true, %lor.lhs.false ], [ true, %land.lhs.true3 ], [ %call16, %lor.rhs ]
  ret i1 %13, !dbg !4878
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_signals() #0 !dbg !4879 {
entry:
  %sig = alloca i32, align 4, !ctir !27
  %stops = alloca i32, align 4, !ctir !27
  %oldset = alloca %struct.__sigset_t, align 8, !ctir !504
  br label %while.cond, !dbg !4880

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !4881
  %tobool = icmp ne i32 %0, 0, !dbg !4881
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4882

lor.rhs:                                          ; preds = %while.cond
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !4883
  %tobool1 = icmp ne i32 %1, 0, !dbg !4882
  br label %lor.end, !dbg !4882

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %2 = phi i1 [ true, %while.cond ], [ %tobool1, %lor.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !4880

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %sig, metadata !4884, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata i32* %stops, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %oldset, metadata !4889, metadata !DIExpression()), !dbg !4890
  %3 = load i8, i8* @used_color, align 1, !dbg !4891
  %tobool2 = trunc i8 %3 to i1, !dbg !4891
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4893

if.then:                                          ; preds = %while.body
  call void @restore_default_color(), !dbg !4894
  br label %if.end, !dbg !4894

if.end:                                           ; preds = %if.then, %while.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4895
  %call = call i32 @fflush_unlocked(%struct._IO_FILE* %4), !dbg !4895
  %call3 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #13, !dbg !4896
  %5 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !4897
  store i32 %5, i32* %sig, align 4, !dbg !4898
  %6 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !4899
  store i32 %6, i32* %stops, align 4, !dbg !4900
  %7 = load i32, i32* %stops, align 4, !dbg !4901
  %tobool4 = icmp ne i32 %7, 0, !dbg !4901
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4903

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %stops, align 4, !dbg !4904
  %sub = sub nsw i32 %8, 1, !dbg !4906
  store volatile i32 %sub, i32* @stop_signal_count, align 4, !dbg !4907
  store i32 19, i32* %sig, align 4, !dbg !4908
  br label %if.end7, !dbg !4909

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %sig, align 4, !dbg !4910
  %call6 = call void (i32)* @signal(i32 %9, void (i32)* null) #13, !dbg !4911
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %10 = load i32, i32* %sig, align 4, !dbg !4912
  %call8 = call i32 @raise(i32 %10) #13, !dbg !4913
  %call9 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #13, !dbg !4914
  br label %while.cond, !dbg !4880, !llvm.loop !4915

while.end:                                        ; preds = %lor.end
  ret void, !dbg !4917
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @patterns_match(%struct.ignore_pattern* %patterns, i8* %file) #0 !dbg !4918 {
entry:
  %retval = alloca i1, align 1
  %patterns.addr = alloca %struct.ignore_pattern*, align 8
  %file.addr = alloca i8*, align 8
  %p = alloca %struct.ignore_pattern*, align 8, !ctir !752
  store %struct.ignore_pattern* %patterns, %struct.ignore_pattern** %patterns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %patterns.addr, metadata !4921, metadata !DIExpression()), !dbg !4922
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %p, metadata !4925, metadata !DIExpression()), !dbg !4926
  %0 = load %struct.ignore_pattern*, %struct.ignore_pattern** %patterns.addr, align 8, !dbg !4927
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %p, align 8, !dbg !4929
  br label %for.cond, !dbg !4930

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !4931
  %tobool = icmp ne %struct.ignore_pattern* %1, null, !dbg !4933
  br i1 %tobool, label %for.body, label %for.end, !dbg !4933

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !4934
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !4936, !ctir !753
  %3 = load i8*, i8** %pattern, align 8, !dbg !4936, !ctir !146
  %4 = load i8*, i8** %file.addr, align 8, !dbg !4937
  %call = call i32 @fnmatch(i8* %3, i8* %4, i32 4), !dbg !4938
  %cmp = icmp eq i32 %call, 0, !dbg !4939
  br i1 %cmp, label %if.then, label %if.end, !dbg !4940

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !4941
  br label %return, !dbg !4941

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4942

for.inc:                                          ; preds = %if.end
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !4943
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %5, i32 0, i32 1, !dbg !4944, !ctir !753
  %6 = load %struct.ignore_pattern*, %struct.ignore_pattern** %next, align 8, !dbg !4944, !ctir !605
  store %struct.ignore_pattern* %6, %struct.ignore_pattern** %p, align 8, !dbg !4945
  br label %for.cond, !dbg !4946, !llvm.loop !4947

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !4949
  br label %return, !dbg !4949

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !4950
  ret i1 %7, !dbg !4950
}

declare dso_local i32 @fnmatch(i8*, i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_buf(i8** %inbuf, i64 %bufsize, i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, i64* %width, i8* %pad) #0 !dbg !4951 {
entry:
  %inbuf.addr = alloca i8**, align 8
  %bufsize.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %width.addr = alloca i64*, align 8
  %pad.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8, !ctir !143
  %displayed_width = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %quoted = alloca i8, align 1, !ctir !141
  %qs = alloca i32, align 4, !ctir !95
  %needs_further_quoting = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !740
  %wc = alloca i32, align 4, !ctir !751
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %p83 = alloca i8*, align 8, !ctir !143
  %plimit84 = alloca i8*, align 8, !ctir !146
  %p111 = alloca i8*, align 8, !ctir !146
  %plimit112 = alloca i8*, align 8, !ctir !146
  store i8** %inbuf, i8*** %inbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %inbuf.addr, metadata !4955, metadata !DIExpression()), !dbg !4956
  store i64 %bufsize, i64* %bufsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !4957, metadata !DIExpression()), !dbg !4958
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4959, metadata !DIExpression()), !dbg !4960
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !4961, metadata !DIExpression()), !dbg !4962
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !4963, metadata !DIExpression()), !dbg !4964
  store i64* %width, i64** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  store i8* %pad, i8** %pad.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pad.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4969, metadata !DIExpression()), !dbg !4970
  %0 = load i8**, i8*** %inbuf.addr, align 8, !dbg !4971
  %1 = load i8*, i8** %0, align 8, !dbg !4972, !ctir !143
  store i8* %1, i8** %buf, align 8, !dbg !4970
  call void @llvm.dbg.declare(metadata i64* %displayed_width, metadata !4973, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.declare(metadata i64* %len, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i64 0, i64* %len, align 8, !dbg !4976
  call void @llvm.dbg.declare(metadata i8* %quoted, metadata !4977, metadata !DIExpression()), !dbg !4978
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !4979, metadata !DIExpression()), !dbg !4980
  %2 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !4981
  %call = call i32 @get_quoting_style(%struct.quoting_options* %2), !dbg !4982
  store i32 %call, i32* %qs, align 4, !dbg !4980
  call void @llvm.dbg.declare(metadata i8* %needs_further_quoting, metadata !4983, metadata !DIExpression()), !dbg !4984
  %3 = load i8, i8* @qmark_funny_chars, align 1, !dbg !4985
  %tobool = trunc i8 %3 to i1, !dbg !4985
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4986

land.rhs:                                         ; preds = %entry
  %4 = load i32, i32* %qs, align 4, !dbg !4987
  %cmp = icmp eq i32 %4, 1, !dbg !4988
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !4989

lor.lhs.false:                                    ; preds = %land.rhs
  %5 = load i32, i32* %qs, align 4, !dbg !4990
  %cmp1 = icmp eq i32 %5, 2, !dbg !4991
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !4992

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %qs, align 4, !dbg !4993
  %cmp2 = icmp eq i32 %6, 0, !dbg !4994
  br label %lor.end, !dbg !4992

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %8 = phi i1 [ false, %entry ], [ %7, %lor.end ], !dbg !4995
  %frombool = zext i1 %8 to i8, !dbg !4984
  store i8 %frombool, i8* %needs_further_quoting, align 1, !dbg !4984
  %9 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !4996
  %cmp3 = icmp ne i32 %9, 0, !dbg !4998
  br i1 %cmp3, label %if.then, label %if.else, !dbg !4999

if.then:                                          ; preds = %land.end
  %10 = load i8*, i8** %buf, align 8, !dbg !5000
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !5002
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5003
  %13 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5004
  %call4 = call i64 @quotearg_buffer(i8* %10, i64 %11, i8* %12, i64 -1, %struct.quoting_options* %13), !dbg !5005
  store i64 %call4, i64* %len, align 8, !dbg !5006
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !5007
  %15 = load i64, i64* %len, align 8, !dbg !5009
  %cmp5 = icmp ule i64 %14, %15, !dbg !5010
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5011

if.then6:                                         ; preds = %if.then
  %16 = load i64, i64* %len, align 8, !dbg !5012
  %add = add i64 %16, 1, !dbg !5014
  %call7 = call noalias i8* @xmalloc(i64 %add), !dbg !5015
  store i8* %call7, i8** %buf, align 8, !dbg !5016
  %17 = load i8*, i8** %buf, align 8, !dbg !5017
  %18 = load i64, i64* %len, align 8, !dbg !5018
  %add8 = add i64 %18, 1, !dbg !5019
  %19 = load i8*, i8** %name.addr, align 8, !dbg !5020
  %20 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5021
  %call9 = call i64 @quotearg_buffer(i8* %17, i64 %add8, i8* %19, i64 -1, %struct.quoting_options* %20), !dbg !5022
  br label %if.end, !dbg !5023

if.end:                                           ; preds = %if.then6, %if.then
  %21 = load i8*, i8** %name.addr, align 8, !dbg !5024
  %22 = load i8, i8* %21, align 1, !dbg !5025, !ctir !144
  %conv = sext i8 %22 to i32, !dbg !5025
  %23 = load i8*, i8** %buf, align 8, !dbg !5026
  %24 = load i8, i8* %23, align 1, !dbg !5027, !ctir !144
  %conv10 = sext i8 %24 to i32, !dbg !5027
  %cmp11 = icmp ne i32 %conv, %conv10, !dbg !5028
  br i1 %cmp11, label %lor.end17, label %lor.rhs13, !dbg !5029

lor.rhs13:                                        ; preds = %if.end
  %25 = load i8*, i8** %name.addr, align 8, !dbg !5030
  %call14 = call i64 @strlen(i8* %25) #16, !dbg !5031
  %26 = load i64, i64* %len, align 8, !dbg !5032
  %cmp15 = icmp ne i64 %call14, %26, !dbg !5033
  br label %lor.end17, !dbg !5029

lor.end17:                                        ; preds = %lor.rhs13, %if.end
  %27 = phi i1 [ true, %if.end ], [ %cmp15, %lor.rhs13 ]
  %frombool18 = zext i1 %27 to i8, !dbg !5034
  store i8 %frombool18, i8* %quoted, align 1, !dbg !5034
  br label %if.end32, !dbg !5035

if.else:                                          ; preds = %land.end
  %28 = load i8, i8* %needs_further_quoting, align 1, !dbg !5036
  %tobool19 = trunc i8 %28 to i1, !dbg !5036
  br i1 %tobool19, label %if.then20, label %if.else29, !dbg !5038

if.then20:                                        ; preds = %if.else
  %29 = load i8*, i8** %name.addr, align 8, !dbg !5039
  %call21 = call i64 @strlen(i8* %29) #16, !dbg !5041
  store i64 %call21, i64* %len, align 8, !dbg !5042
  %30 = load i64, i64* %bufsize.addr, align 8, !dbg !5043
  %31 = load i64, i64* %len, align 8, !dbg !5045
  %cmp22 = icmp ule i64 %30, %31, !dbg !5046
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !5047

if.then24:                                        ; preds = %if.then20
  %32 = load i64, i64* %len, align 8, !dbg !5048
  %add25 = add i64 %32, 1, !dbg !5049
  %call26 = call noalias i8* @xmalloc(i64 %add25), !dbg !5050
  store i8* %call26, i8** %buf, align 8, !dbg !5051
  br label %if.end27, !dbg !5052

if.end27:                                         ; preds = %if.then24, %if.then20
  %33 = load i8*, i8** %buf, align 8, !dbg !5053
  %34 = load i8*, i8** %name.addr, align 8, !dbg !5054
  %35 = load i64, i64* %len, align 8, !dbg !5055
  %add28 = add i64 %35, 1, !dbg !5056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %add28, i1 false), !dbg !5057
  store i8 0, i8* %quoted, align 1, !dbg !5058
  br label %if.end31, !dbg !5059

if.else29:                                        ; preds = %if.else
  %36 = load i8*, i8** %name.addr, align 8, !dbg !5060
  %call30 = call i64 @strlen(i8* %36) #16, !dbg !5062
  store i64 %call30, i64* %len, align 8, !dbg !5063
  %37 = load i8*, i8** %name.addr, align 8, !dbg !5064
  store i8* %37, i8** %buf, align 8, !dbg !5065
  store i8 0, i8* %quoted, align 1, !dbg !5066
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.end27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %lor.end17
  %38 = load i8, i8* %needs_further_quoting, align 1, !dbg !5067
  %tobool33 = trunc i8 %38 to i1, !dbg !5067
  br i1 %tobool33, label %if.then34, label %if.else100, !dbg !5069

if.then34:                                        ; preds = %if.end32
  %call35 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5070
  %cmp36 = icmp ugt i64 %call35, 1, !dbg !5073
  br i1 %cmp36, label %if.then38, label %if.else82, !dbg !5074

if.then38:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5075, metadata !DIExpression()), !dbg !5077
  %39 = load i8*, i8** %buf, align 8, !dbg !5078
  store i8* %39, i8** %p, align 8, !dbg !5077
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !5079, metadata !DIExpression()), !dbg !5080
  %40 = load i8*, i8** %buf, align 8, !dbg !5081
  %41 = load i64, i64* %len, align 8, !dbg !5082
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !5083, !ctir !144
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !5080
  call void @llvm.dbg.declare(metadata i8** %q, metadata !5084, metadata !DIExpression()), !dbg !5085
  %42 = load i8*, i8** %buf, align 8, !dbg !5086
  store i8* %42, i8** %q, align 8, !dbg !5085
  store i64 0, i64* %displayed_width, align 8, !dbg !5087
  br label %while.cond, !dbg !5088

while.cond:                                       ; preds = %sw.epilog, %if.then38
  %43 = load i8*, i8** %p, align 8, !dbg !5089
  %44 = load i8*, i8** %plimit, align 8, !dbg !5090
  %cmp39 = icmp ult i8* %43, %44, !dbg !5091
  br i1 %cmp39, label %while.body, label %while.end, !dbg !5088

while.body:                                       ; preds = %while.cond
  %45 = load i8*, i8** %p, align 8, !dbg !5092
  %46 = load i8, i8* %45, align 1, !dbg !5093, !ctir !147
  %conv41 = sext i8 %46 to i32, !dbg !5093
  switch i32 %conv41, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !5094

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %47 = load i8*, i8** %p, align 8, !dbg !5095
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !5095, !ctir !147
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5095
  %48 = load i8, i8* %47, align 1, !dbg !5097, !ctir !147
  %49 = load i8*, i8** %q, align 8, !dbg !5098
  %incdec.ptr42 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !5098, !ctir !144
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !5098
  store i8 %48, i8* %49, align 1, !dbg !5099, !ctir !144
  %50 = load i64, i64* %displayed_width, align 8, !dbg !5100
  %add43 = add i64 %50, 1, !dbg !5100
  store i64 %add43, i64* %displayed_width, align 8, !dbg !5100
  br label %sw.epilog, !dbg !5101

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !5102, metadata !DIExpression()), !dbg !5104
  %51 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !5104
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 8, i1 false), !dbg !5104
  br label %do.body, !dbg !5105

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !5106, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5109, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5111, metadata !DIExpression()), !dbg !5112
  %52 = load i8*, i8** %p, align 8, !dbg !5113
  %53 = load i8*, i8** %plimit, align 8, !dbg !5114
  %54 = load i8*, i8** %p, align 8, !dbg !5115
  %sub.ptr.lhs.cast = ptrtoint i8* %53 to i64, !dbg !5116
  %sub.ptr.rhs.cast = ptrtoint i8* %54 to i64, !dbg !5116
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5116
  %call44 = call i64 @rpl_mbrtowc(i32* %wc, i8* %52, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !5117
  store i64 %call44, i64* %bytes, align 8, !dbg !5118
  %55 = load i64, i64* %bytes, align 8, !dbg !5119
  %cmp45 = icmp eq i64 %55, -1, !dbg !5121
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !5122

if.then47:                                        ; preds = %do.body
  %56 = load i8*, i8** %p, align 8, !dbg !5123
  %incdec.ptr48 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5123, !ctir !147
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !5123
  %57 = load i8*, i8** %q, align 8, !dbg !5125
  %incdec.ptr49 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !5125, !ctir !144
  store i8* %incdec.ptr49, i8** %q, align 8, !dbg !5125
  store i8 63, i8* %57, align 1, !dbg !5126, !ctir !144
  %58 = load i64, i64* %displayed_width, align 8, !dbg !5127
  %add50 = add i64 %58, 1, !dbg !5127
  store i64 %add50, i64* %displayed_width, align 8, !dbg !5127
  br label %do.end, !dbg !5128

if.end51:                                         ; preds = %do.body
  %59 = load i64, i64* %bytes, align 8, !dbg !5129
  %cmp52 = icmp eq i64 %59, -2, !dbg !5131
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !5132

if.then54:                                        ; preds = %if.end51
  %60 = load i8*, i8** %plimit, align 8, !dbg !5133
  store i8* %60, i8** %p, align 8, !dbg !5135
  %61 = load i8*, i8** %q, align 8, !dbg !5136
  %incdec.ptr55 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !5136, !ctir !144
  store i8* %incdec.ptr55, i8** %q, align 8, !dbg !5136
  store i8 63, i8* %61, align 1, !dbg !5137, !ctir !144
  %62 = load i64, i64* %displayed_width, align 8, !dbg !5138
  %add56 = add i64 %62, 1, !dbg !5138
  store i64 %add56, i64* %displayed_width, align 8, !dbg !5138
  br label %do.end, !dbg !5139

if.end57:                                         ; preds = %if.end51
  %63 = load i64, i64* %bytes, align 8, !dbg !5140
  %cmp58 = icmp eq i64 %63, 0, !dbg !5142
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5143

if.then60:                                        ; preds = %if.end57
  store i64 1, i64* %bytes, align 8, !dbg !5144
  br label %if.end61, !dbg !5145

if.end61:                                         ; preds = %if.then60, %if.end57
  %64 = load i32, i32* %wc, align 4, !dbg !5146
  %call62 = call i32 @wcwidth(i32 %64) #13, !dbg !5147
  store i32 %call62, i32* %w, align 4, !dbg !5148
  %65 = load i32, i32* %w, align 4, !dbg !5149
  %cmp63 = icmp sge i32 %65, 0, !dbg !5151
  br i1 %cmp63, label %if.then65, label %if.else72, !dbg !5152

if.then65:                                        ; preds = %if.end61
  br label %for.cond, !dbg !5153

for.cond:                                         ; preds = %for.inc, %if.then65
  %66 = load i64, i64* %bytes, align 8, !dbg !5155
  %cmp66 = icmp ugt i64 %66, 0, !dbg !5158
  br i1 %cmp66, label %for.body, label %for.end, !dbg !5159

for.body:                                         ; preds = %for.cond
  %67 = load i8*, i8** %p, align 8, !dbg !5160
  %incdec.ptr68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !5160, !ctir !147
  store i8* %incdec.ptr68, i8** %p, align 8, !dbg !5160
  %68 = load i8, i8* %67, align 1, !dbg !5161, !ctir !147
  %69 = load i8*, i8** %q, align 8, !dbg !5162
  %incdec.ptr69 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !5162, !ctir !144
  store i8* %incdec.ptr69, i8** %q, align 8, !dbg !5162
  store i8 %68, i8* %69, align 1, !dbg !5163, !ctir !144
  br label %for.inc, !dbg !5164

for.inc:                                          ; preds = %for.body
  %70 = load i64, i64* %bytes, align 8, !dbg !5165
  %dec = add i64 %70, -1, !dbg !5165
  store i64 %dec, i64* %bytes, align 8, !dbg !5165
  br label %for.cond, !dbg !5166, !llvm.loop !5167

for.end:                                          ; preds = %for.cond
  %71 = load i32, i32* %w, align 4, !dbg !5169
  %conv70 = sext i32 %71 to i64, !dbg !5169
  %72 = load i64, i64* %displayed_width, align 8, !dbg !5170
  %add71 = add i64 %72, %conv70, !dbg !5170
  store i64 %add71, i64* %displayed_width, align 8, !dbg !5170
  br label %if.end76, !dbg !5171

if.else72:                                        ; preds = %if.end61
  %73 = load i64, i64* %bytes, align 8, !dbg !5172
  %74 = load i8*, i8** %p, align 8, !dbg !5174
  %add.ptr73 = getelementptr inbounds i8, i8* %74, i64 %73, !dbg !5174, !ctir !147
  store i8* %add.ptr73, i8** %p, align 8, !dbg !5174
  %75 = load i8*, i8** %q, align 8, !dbg !5175
  %incdec.ptr74 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !5175, !ctir !144
  store i8* %incdec.ptr74, i8** %q, align 8, !dbg !5175
  store i8 63, i8* %75, align 1, !dbg !5176, !ctir !144
  %76 = load i64, i64* %displayed_width, align 8, !dbg !5177
  %add75 = add i64 %76, 1, !dbg !5177
  store i64 %add75, i64* %displayed_width, align 8, !dbg !5177
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %for.end
  br label %do.cond, !dbg !5178

do.cond:                                          ; preds = %if.end76
  %call77 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !5179
  %tobool78 = icmp ne i32 %call77, 0, !dbg !5180
  %lnot = xor i1 %tobool78, true, !dbg !5180
  br i1 %lnot, label %do.body, label %do.end, !dbg !5178, !llvm.loop !5181

do.end:                                           ; preds = %do.cond, %if.then54, %if.then47
  br label %sw.epilog, !dbg !5183

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !5088, !llvm.loop !5184

while.end:                                        ; preds = %while.cond
  %77 = load i8*, i8** %q, align 8, !dbg !5186
  %78 = load i8*, i8** %buf, align 8, !dbg !5187
  %sub.ptr.lhs.cast79 = ptrtoint i8* %77 to i64, !dbg !5188
  %sub.ptr.rhs.cast80 = ptrtoint i8* %78 to i64, !dbg !5188
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !5188
  store i64 %sub.ptr.sub81, i64* %len, align 8, !dbg !5189
  br label %if.end99, !dbg !5190

if.else82:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p83, metadata !5191, metadata !DIExpression()), !dbg !5193
  %79 = load i8*, i8** %buf, align 8, !dbg !5194
  store i8* %79, i8** %p83, align 8, !dbg !5193
  call void @llvm.dbg.declare(metadata i8** %plimit84, metadata !5195, metadata !DIExpression()), !dbg !5196
  %80 = load i8*, i8** %buf, align 8, !dbg !5197
  %81 = load i64, i64* %len, align 8, !dbg !5198
  %add.ptr85 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !5199, !ctir !144
  store i8* %add.ptr85, i8** %plimit84, align 8, !dbg !5196
  br label %while.cond86, !dbg !5200

while.cond86:                                     ; preds = %if.end96, %if.else82
  %82 = load i8*, i8** %p83, align 8, !dbg !5201
  %83 = load i8*, i8** %plimit84, align 8, !dbg !5202
  %cmp87 = icmp ult i8* %82, %83, !dbg !5203
  br i1 %cmp87, label %while.body89, label %while.end98, !dbg !5200

while.body89:                                     ; preds = %while.cond86
  %call90 = call i16** @__ctype_b_loc() #17, !dbg !5204
  %84 = load i16*, i16** %call90, align 8, !dbg !5204, !ctir !696
  %85 = load i8*, i8** %p83, align 8, !dbg !5204
  %86 = load i8, i8* %85, align 1, !dbg !5204, !ctir !144
  %call91 = call zeroext i8 @to_uchar(i8 signext %86), !dbg !5204
  %conv92 = zext i8 %call91 to i32, !dbg !5204
  %idxprom = sext i32 %conv92 to i64, !dbg !5204
  %arrayidx = getelementptr inbounds i16, i16* %84, i64 %idxprom, !dbg !5204, !ctir !696
  %87 = load i16, i16* %arrayidx, align 2, !dbg !5204
  %conv93 = zext i16 %87 to i32, !dbg !5204
  %and = and i32 %conv93, 16384, !dbg !5204
  %tobool94 = icmp ne i32 %and, 0, !dbg !5204
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !5207

if.then95:                                        ; preds = %while.body89
  %88 = load i8*, i8** %p83, align 8, !dbg !5208
  store i8 63, i8* %88, align 1, !dbg !5209, !ctir !144
  br label %if.end96, !dbg !5210

if.end96:                                         ; preds = %if.then95, %while.body89
  %89 = load i8*, i8** %p83, align 8, !dbg !5211
  %incdec.ptr97 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !5211, !ctir !144
  store i8* %incdec.ptr97, i8** %p83, align 8, !dbg !5211
  br label %while.cond86, !dbg !5200, !llvm.loop !5212

while.end98:                                      ; preds = %while.cond86
  %90 = load i64, i64* %len, align 8, !dbg !5214
  store i64 %90, i64* %displayed_width, align 8, !dbg !5215
  br label %if.end99

if.end99:                                         ; preds = %while.end98, %while.end
  br label %if.end132, !dbg !5216

if.else100:                                       ; preds = %if.end32
  %91 = load i64*, i64** %width.addr, align 8, !dbg !5217
  %cmp101 = icmp ne i64* %91, null, !dbg !5219
  br i1 %cmp101, label %if.then103, label %if.end131, !dbg !5220

if.then103:                                       ; preds = %if.else100
  %call104 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5221
  %cmp105 = icmp ugt i64 %call104, 1, !dbg !5224
  br i1 %cmp105, label %if.then107, label %if.else110, !dbg !5225

if.then107:                                       ; preds = %if.then103
  %92 = load i8*, i8** %buf, align 8, !dbg !5226
  %93 = load i64, i64* %len, align 8, !dbg !5227
  %call108 = call i32 @mbsnwidth(i8* %92, i64 %93, i32 0), !dbg !5228
  %conv109 = sext i32 %call108 to i64, !dbg !5228
  store i64 %conv109, i64* %displayed_width, align 8, !dbg !5229
  br label %if.end130, !dbg !5230

if.else110:                                       ; preds = %if.then103
  call void @llvm.dbg.declare(metadata i8** %p111, metadata !5231, metadata !DIExpression()), !dbg !5233
  %94 = load i8*, i8** %buf, align 8, !dbg !5234
  store i8* %94, i8** %p111, align 8, !dbg !5233
  call void @llvm.dbg.declare(metadata i8** %plimit112, metadata !5235, metadata !DIExpression()), !dbg !5236
  %95 = load i8*, i8** %buf, align 8, !dbg !5237
  %96 = load i64, i64* %len, align 8, !dbg !5238
  %add.ptr113 = getelementptr inbounds i8, i8* %95, i64 %96, !dbg !5239, !ctir !144
  store i8* %add.ptr113, i8** %plimit112, align 8, !dbg !5236
  store i64 0, i64* %displayed_width, align 8, !dbg !5240
  br label %while.cond114, !dbg !5241

while.cond114:                                    ; preds = %if.end127, %if.else110
  %97 = load i8*, i8** %p111, align 8, !dbg !5242
  %98 = load i8*, i8** %plimit112, align 8, !dbg !5243
  %cmp115 = icmp ult i8* %97, %98, !dbg !5244
  br i1 %cmp115, label %while.body117, label %while.end129, !dbg !5241

while.body117:                                    ; preds = %while.cond114
  %call118 = call i16** @__ctype_b_loc() #17, !dbg !5245
  %99 = load i16*, i16** %call118, align 8, !dbg !5245, !ctir !696
  %100 = load i8*, i8** %p111, align 8, !dbg !5245
  %101 = load i8, i8* %100, align 1, !dbg !5245, !ctir !147
  %call119 = call zeroext i8 @to_uchar(i8 signext %101), !dbg !5245
  %conv120 = zext i8 %call119 to i32, !dbg !5245
  %idxprom121 = sext i32 %conv120 to i64, !dbg !5245
  %arrayidx122 = getelementptr inbounds i16, i16* %99, i64 %idxprom121, !dbg !5245, !ctir !696
  %102 = load i16, i16* %arrayidx122, align 2, !dbg !5245
  %conv123 = zext i16 %102 to i32, !dbg !5245
  %and124 = and i32 %conv123, 16384, !dbg !5245
  %tobool125 = icmp ne i32 %and124, 0, !dbg !5245
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !5248

if.then126:                                       ; preds = %while.body117
  %103 = load i64, i64* %displayed_width, align 8, !dbg !5249
  %inc = add i64 %103, 1, !dbg !5249
  store i64 %inc, i64* %displayed_width, align 8, !dbg !5249
  br label %if.end127, !dbg !5250

if.end127:                                        ; preds = %if.then126, %while.body117
  %104 = load i8*, i8** %p111, align 8, !dbg !5251
  %incdec.ptr128 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !5251, !ctir !147
  store i8* %incdec.ptr128, i8** %p111, align 8, !dbg !5251
  br label %while.cond114, !dbg !5241, !llvm.loop !5252

while.end129:                                     ; preds = %while.cond114
  br label %if.end130

if.end130:                                        ; preds = %while.end129, %if.then107
  br label %if.end131, !dbg !5254

if.end131:                                        ; preds = %if.end130, %if.else100
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end99
  %105 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5255
  %tobool133 = trunc i8 %105 to i1, !dbg !5255
  br i1 %tobool133, label %land.lhs.true, label %land.end140, !dbg !5256

land.lhs.true:                                    ; preds = %if.end132
  %106 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5257
  %tobool135 = trunc i8 %106 to i1, !dbg !5257
  br i1 %tobool135, label %land.rhs137, label %land.end140, !dbg !5258

land.rhs137:                                      ; preds = %land.lhs.true
  %107 = load i8, i8* %quoted, align 1, !dbg !5259
  %tobool138 = trunc i8 %107 to i1, !dbg !5259
  %lnot139 = xor i1 %tobool138, true, !dbg !5260
  br label %land.end140

land.end140:                                      ; preds = %land.rhs137, %land.lhs.true, %if.end132
  %108 = phi i1 [ false, %land.lhs.true ], [ false, %if.end132 ], [ %lnot139, %land.rhs137 ], !dbg !4995
  %109 = load i8*, i8** %pad.addr, align 8, !dbg !5261
  %frombool141 = zext i1 %108 to i8, !dbg !5262
  store i8 %frombool141, i8* %109, align 1, !dbg !5262, !ctir !141
  %110 = load i64*, i64** %width.addr, align 8, !dbg !5263
  %cmp142 = icmp ne i64* %110, null, !dbg !5265
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !5266

if.then144:                                       ; preds = %land.end140
  %111 = load i64, i64* %displayed_width, align 8, !dbg !5267
  %112 = load i64*, i64** %width.addr, align 8, !dbg !5268
  store i64 %111, i64* %112, align 8, !dbg !5269, !ctir !149
  br label %if.end145, !dbg !5270

if.end145:                                        ; preds = %if.then144, %land.end140
  %113 = load i8*, i8** %buf, align 8, !dbg !5271
  %114 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5272
  store i8* %113, i8** %114, align 8, !dbg !5273, !ctir !143
  %115 = load i64, i64* %len, align 8, !dbg !5274
  ret i64 %115, !dbg !5275
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_color_indicator(%struct.bin_str* %ind) #0 !dbg !5276 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  %0 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5281
  %tobool = icmp ne %struct.bin_str* %0, null, !dbg !5281
  br i1 %tobool, label %if.then, label %if.end2, !dbg !5283

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !5284
  br i1 %call, label %if.then1, label %if.end, !dbg !5287

if.then1:                                         ; preds = %if.then
  call void @restore_default_color(), !dbg !5288
  br label %if.end, !dbg !5288

if.end:                                           ; preds = %if.then1, %if.then
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5289
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5290
  call void @put_indicator(%struct.bin_str* %1), !dbg !5291
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5292
  br label %if.end2, !dbg !5293

if.end2:                                          ; preds = %if.end, %entry
  %2 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5294
  %cmp = icmp ne %struct.bin_str* %2, null, !dbg !5295
  ret i1 %cmp, !dbg !5296
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @file_escape(i8* %str, i1 zeroext %path) #0 !dbg !5297 {
entry:
  %str.addr = alloca i8*, align 8
  %path.addr = alloca i8, align 1
  %esc = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5300, metadata !DIExpression()), !dbg !5301
  %frombool = zext i1 %path to i8
  store i8 %frombool, i8* %path.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %path.addr, metadata !5302, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.declare(metadata i8** %esc, metadata !5304, metadata !DIExpression()), !dbg !5305
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5306
  %call = call i64 @strlen(i8* %0) #16, !dbg !5307
  %add = add i64 %call, 1, !dbg !5308
  %call1 = call noalias i8* @xnmalloc(i64 3, i64 %add), !dbg !5309
  store i8* %call1, i8** %esc, align 8, !dbg !5305
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5310, metadata !DIExpression()), !dbg !5311
  %1 = load i8*, i8** %esc, align 8, !dbg !5312
  store i8* %1, i8** %p, align 8, !dbg !5311
  br label %while.cond, !dbg !5313

while.cond:                                       ; preds = %if.end15, %entry
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5314
  %3 = load i8, i8* %2, align 1, !dbg !5315, !ctir !147
  %tobool = icmp ne i8 %3, 0, !dbg !5313
  br i1 %tobool, label %while.body, label %while.end, !dbg !5313

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %path.addr, align 1, !dbg !5316
  %tobool2 = trunc i8 %4 to i1, !dbg !5316
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !5319

land.lhs.true:                                    ; preds = %while.body
  %5 = load i8*, i8** %str.addr, align 8, !dbg !5320
  %6 = load i8, i8* %5, align 1, !dbg !5320, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !5320
  %cmp = icmp eq i32 %conv, 47, !dbg !5320
  br i1 %cmp, label %if.then, label %if.else, !dbg !5321

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8*, i8** %p, align 8, !dbg !5322
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5322, !ctir !144
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5322
  store i8 47, i8* %7, align 1, !dbg !5324, !ctir !144
  %8 = load i8*, i8** %str.addr, align 8, !dbg !5325
  %incdec.ptr4 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5325, !ctir !147
  store i8* %incdec.ptr4, i8** %str.addr, align 8, !dbg !5325
  br label %if.end15, !dbg !5326

if.else:                                          ; preds = %land.lhs.true, %while.body
  %9 = load i8*, i8** %str.addr, align 8, !dbg !5327
  %10 = load i8, i8* %9, align 1, !dbg !5329, !ctir !147
  %call5 = call zeroext i8 @to_uchar(i8 signext %10), !dbg !5330
  %idxprom = zext i8 %call5 to i64, !dbg !5331
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !5331, !ctir !448
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5331
  %tobool6 = icmp ne i8 %11, 0, !dbg !5331
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !5332

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !5333
  %incdec.ptr8 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !5333, !ctir !147
  store i8* %incdec.ptr8, i8** %str.addr, align 8, !dbg !5333
  %13 = load i8, i8* %12, align 1, !dbg !5334, !ctir !147
  %14 = load i8*, i8** %p, align 8, !dbg !5335
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5335, !ctir !144
  store i8* %incdec.ptr9, i8** %p, align 8, !dbg !5335
  store i8 %13, i8* %14, align 1, !dbg !5336, !ctir !144
  br label %if.end, !dbg !5337

if.else10:                                        ; preds = %if.else
  %15 = load i8*, i8** %p, align 8, !dbg !5338
  %16 = load i8*, i8** %str.addr, align 8, !dbg !5339
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5339, !ctir !147
  store i8* %incdec.ptr11, i8** %str.addr, align 8, !dbg !5339
  %17 = load i8, i8* %16, align 1, !dbg !5340, !ctir !147
  %call12 = call zeroext i8 @to_uchar(i8 signext %17), !dbg !5341
  %conv13 = zext i8 %call12 to i32, !dbg !5341
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), i32 %conv13) #13, !dbg !5342
  %18 = load i8*, i8** %p, align 8, !dbg !5343
  %idx.ext = sext i32 %call14 to i64, !dbg !5343
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !5343, !ctir !144
  store i8* %add.ptr, i8** %p, align 8, !dbg !5343
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !5313, !llvm.loop !5344

while.end:                                        ; preds = %while.cond
  %19 = load i8*, i8** %p, align 8, !dbg !5346
  store i8 0, i8* %19, align 1, !dbg !5347, !ctir !144
  %20 = load i8*, i8** %esc, align 8, !dbg !5348
  ret i8* %20, !dbg !5349
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %ch) #0 !dbg !5350 {
entry:
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  %0 = load i8, i8* %ch.addr, align 1, !dbg !5355
  ret i8 %0, !dbg !5356
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #5

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_file_name_and_frills(%struct.fileinfo* %f, i64 %start_col) #0 !dbg !5357 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %start_col.addr = alloca i64, align 8
  %buf = alloca [652 x i8], align 16, !ctir !734
  %width = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  store i64 %start_col, i64* %start_col.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !5362, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @set_normal_color(), !dbg !5366
  %0 = load i8, i8* @print_inode, align 1, !dbg !5367
  %tobool = trunc i8 %0 to i1, !dbg !5367
  br i1 %tobool, label %if.then, label %if.end, !dbg !5369

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !5370
  %cmp = icmp eq i32 %1, 4, !dbg !5371
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5370

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5370

cond.false:                                       ; preds = %if.then
  %2 = load i32, i32* @inode_number_width, align 4, !dbg !5372
  br label %cond.end, !dbg !5370

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %2, %cond.false ], !dbg !5370
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5373, !ctir !734
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5374
  %call = call i8* @format_inode(i8* %arraydecay, i64 652, %struct.fileinfo* %3), !dbg !5375
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond, i8* %call), !dbg !5376
  br label %if.end, !dbg !5376

if.end:                                           ; preds = %cond.end, %entry
  %4 = load i8, i8* @print_block_size, align 1, !dbg !5377
  %tobool2 = trunc i8 %4 to i1, !dbg !5377
  br i1 %tobool2, label %if.then3, label %if.end17, !dbg !5379

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* @format, align 4, !dbg !5380
  %cmp4 = icmp eq i32 %5, 4, !dbg !5381
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !5380

cond.true5:                                       ; preds = %if.then3
  br label %cond.end7, !dbg !5380

cond.false6:                                      ; preds = %if.then3
  %6 = load i32, i32* @block_size_width, align 4, !dbg !5382
  br label %cond.end7, !dbg !5380

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ %6, %cond.false6 ], !dbg !5380
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5383
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 7, !dbg !5384, !ctir !183
  %8 = load i8, i8* %stat_ok, align 8, !dbg !5384
  %tobool9 = trunc i8 %8 to i1, !dbg !5384, !ctir !141
  br i1 %tobool9, label %cond.false11, label %cond.true10, !dbg !5385

cond.true10:                                      ; preds = %cond.end7
  br label %cond.end14, !dbg !5385

cond.false11:                                     ; preds = %cond.end7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5386
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 3, !dbg !5386, !ctir !183
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 10, !dbg !5386, !ctir !190
  %10 = load i64, i64* %st_blocks, align 8, !dbg !5386, !ctir !211
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5387, !ctir !734
  %11 = load i32, i32* @human_output_opts, align 4, !dbg !5388
  %12 = load i64, i64* @output_block_size, align 8, !dbg !5389
  %call13 = call i8* @human_readable(i64 %10, i8* %arraydecay12, i32 %11, i64 512, i64 %12), !dbg !5390
  br label %cond.end14, !dbg !5385

cond.end14:                                       ; preds = %cond.false11, %cond.true10
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true10 ], [ %call13, %cond.false11 ], !dbg !5385
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond8, i8* %cond15), !dbg !5391
  br label %if.end17, !dbg !5391

if.end17:                                         ; preds = %cond.end14, %if.end
  %13 = load i8, i8* @print_scontext, align 1, !dbg !5392
  %tobool18 = trunc i8 %13 to i1, !dbg !5392
  br i1 %tobool18, label %if.then19, label %if.end26, !dbg !5394

if.then19:                                        ; preds = %if.end17
  %14 = load i32, i32* @format, align 4, !dbg !5395
  %cmp20 = icmp eq i32 %14, 4, !dbg !5396
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !5395

cond.true21:                                      ; preds = %if.then19
  br label %cond.end23, !dbg !5395

cond.false22:                                     ; preds = %if.then19
  %15 = load i32, i32* @scontext_width, align 4, !dbg !5397
  br label %cond.end23, !dbg !5395

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ %15, %cond.false22 ], !dbg !5395
  %16 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5398
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %16, i32 0, i32 6, !dbg !5399, !ctir !183
  %17 = load i8*, i8** %scontext, align 8, !dbg !5399, !ctir !143
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond24, i8* %17), !dbg !5400
  br label %if.end26, !dbg !5400

if.end26:                                         ; preds = %cond.end23, %if.end17
  call void @llvm.dbg.declare(metadata i64* %width, metadata !5401, metadata !DIExpression()), !dbg !5402
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5403
  %19 = load i64, i64* %start_col.addr, align 8, !dbg !5404
  %call27 = call i64 @print_name_with_quoting(%struct.fileinfo* %18, i1 zeroext false, %struct.obstack* null, i64 %19), !dbg !5405
  store i64 %call27, i64* %width, align 8, !dbg !5402
  %20 = load i32, i32* @indicator_style, align 4, !dbg !5406
  %cmp28 = icmp ne i32 %20, 0, !dbg !5408
  br i1 %cmp28, label %if.then29, label %if.end34, !dbg !5409

if.then29:                                        ; preds = %if.end26
  %21 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5410
  %stat_ok30 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %21, i32 0, i32 7, !dbg !5411, !ctir !183
  %22 = load i8, i8* %stat_ok30, align 8, !dbg !5411
  %tobool31 = trunc i8 %22 to i1, !dbg !5411, !ctir !141
  %23 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5412
  %stat32 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %23, i32 0, i32 3, !dbg !5413, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat32, i32 0, i32 3, !dbg !5414, !ctir !190
  %24 = load i32, i32* %st_mode, align 8, !dbg !5414, !ctir !200
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5415
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 4, !dbg !5416, !ctir !183
  %26 = load i32, i32* %filetype, align 8, !dbg !5416, !ctir !36
  %call33 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool31, i32 %24, i32 %26), !dbg !5417
  %conv = zext i1 %call33 to i64, !dbg !5417
  %27 = load i64, i64* %width, align 8, !dbg !5418
  %add = add i64 %27, %conv, !dbg !5418
  store i64 %add, i64* %width, align 8, !dbg !5418
  br label %if.end34, !dbg !5419

if.end34:                                         ; preds = %if.then29, %if.end26
  %28 = load i64, i64* %width, align 8, !dbg !5420
  ret i64 %28, !dbg !5421
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_with_separator(i8 signext %sep) #0 !dbg !5422 {
entry:
  %sep.addr = alloca i8, align 1
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %len = alloca i64, align 8, !ctir !149
  %separator = alloca i8, align 1, !ctir !144
  store i8 %sep, i8* %sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !5425, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !5427, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5429, metadata !DIExpression()), !dbg !5430
  store i64 0, i64* %pos, align 8, !dbg !5430
  store i64 0, i64* %filesno, align 8, !dbg !5431
  br label %for.cond, !dbg !5433

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %filesno, align 8, !dbg !5434
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !5436
  %cmp = icmp ult i64 %0, %1, !dbg !5437
  br i1 %cmp, label %for.body, label %for.end, !dbg !5438

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !5439, metadata !DIExpression()), !dbg !5441
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !5442
  %3 = load i64, i64* %filesno, align 8, !dbg !5443
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !5442, !ctir !754
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !5442
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !5442
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !5441
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5444, metadata !DIExpression()), !dbg !5445
  %6 = load i64, i64* @line_length, align 8, !dbg !5446
  %tobool = icmp ne i64 %6, 0, !dbg !5446
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5446

cond.true:                                        ; preds = %for.body
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5447
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %7), !dbg !5448
  br label %cond.end, !dbg !5446

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !5446
  store i64 %cond, i64* %len, align 8, !dbg !5445
  %8 = load i64, i64* %filesno, align 8, !dbg !5449
  %cmp1 = icmp ne i64 %8, 0, !dbg !5451
  br i1 %cmp1, label %if.then, label %if.end12, !dbg !5452

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %separator, metadata !5453, metadata !DIExpression()), !dbg !5455
  %9 = load i64, i64* @line_length, align 8, !dbg !5456
  %tobool2 = icmp ne i64 %9, 0, !dbg !5456
  br i1 %tobool2, label %lor.lhs.false, label %if.then7, !dbg !5458

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i64, i64* %pos, align 8, !dbg !5459
  %11 = load i64, i64* %len, align 8, !dbg !5460
  %add = add i64 %10, %11, !dbg !5461
  %add3 = add i64 %add, 2, !dbg !5462
  %12 = load i64, i64* @line_length, align 8, !dbg !5463
  %cmp4 = icmp ult i64 %add3, %12, !dbg !5464
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !5465

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load i64, i64* %pos, align 8, !dbg !5466
  %14 = load i64, i64* %len, align 8, !dbg !5467
  %sub = sub i64 -1, %14, !dbg !5468
  %sub5 = sub i64 %sub, 2, !dbg !5469
  %cmp6 = icmp ule i64 %13, %sub5, !dbg !5470
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5471

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %15 = load i64, i64* %pos, align 8, !dbg !5472
  %add8 = add i64 %15, 2, !dbg !5472
  store i64 %add8, i64* %pos, align 8, !dbg !5472
  store i8 32, i8* %separator, align 1, !dbg !5474
  br label %if.end, !dbg !5475

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i64 0, i64* %pos, align 8, !dbg !5476
  store i8 10, i8* %separator, align 1, !dbg !5478
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %16 = load i8, i8* %sep.addr, align 1, !dbg !5479
  %conv = sext i8 %16 to i32, !dbg !5479
  %call9 = call i32 @putchar_unlocked(i32 %conv), !dbg !5479
  %17 = load i8, i8* %separator, align 1, !dbg !5480
  %conv10 = sext i8 %17 to i32, !dbg !5480
  %call11 = call i32 @putchar_unlocked(i32 %conv10), !dbg !5480
  br label %if.end12, !dbg !5481

if.end12:                                         ; preds = %if.end, %cond.end
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5482
  %19 = load i64, i64* %pos, align 8, !dbg !5483
  %call13 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !5484
  %20 = load i64, i64* %len, align 8, !dbg !5485
  %21 = load i64, i64* %pos, align 8, !dbg !5486
  %add14 = add i64 %21, %20, !dbg !5486
  store i64 %add14, i64* %pos, align 8, !dbg !5486
  br label %for.inc, !dbg !5487

for.inc:                                          ; preds = %if.end12
  %22 = load i64, i64* %filesno, align 8, !dbg !5488
  %inc = add i64 %22, 1, !dbg !5488
  store i64 %inc, i64* %filesno, align 8, !dbg !5488
  br label %for.cond, !dbg !5489, !llvm.loop !5490

for.end:                                          ; preds = %for.cond
  %call15 = call i32 @putchar_unlocked(i32 10), !dbg !5492
  ret void, !dbg !5493
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_many_per_line() #0 !dbg !5494 {
entry:
  %row = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !797
  %rows = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %row, metadata !5495, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !5497, metadata !DIExpression()), !dbg !5498
  %call = call i64 @calculate_columns(i1 zeroext true), !dbg !5499
  store i64 %call, i64* %cols, align 8, !dbg !5498
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !5500, metadata !DIExpression()), !dbg !5501
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !5502
  %1 = load i64, i64* %cols, align 8, !dbg !5503
  %sub = sub i64 %1, 1, !dbg !5504
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !5502, !ctir !804
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !5501
  call void @llvm.dbg.declare(metadata i64* %rows, metadata !5505, metadata !DIExpression()), !dbg !5506
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !5507
  %3 = load i64, i64* %cols, align 8, !dbg !5508
  %div = udiv i64 %2, %3, !dbg !5509
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !5510
  %5 = load i64, i64* %cols, align 8, !dbg !5511
  %rem = urem i64 %4, %5, !dbg !5512
  %cmp = icmp ne i64 %rem, 0, !dbg !5513
  %conv = zext i1 %cmp to i32, !dbg !5513
  %conv1 = sext i32 %conv to i64, !dbg !5514
  %add = add i64 %div, %conv1, !dbg !5515
  store i64 %add, i64* %rows, align 8, !dbg !5506
  store i64 0, i64* %row, align 8, !dbg !5516
  br label %for.cond, !dbg !5518

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i64, i64* %row, align 8, !dbg !5519
  %7 = load i64, i64* %rows, align 8, !dbg !5521
  %cmp2 = icmp ult i64 %6, %7, !dbg !5522
  br i1 %cmp2, label %for.body, label %for.end, !dbg !5523

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !5524, metadata !DIExpression()), !dbg !5526
  store i64 0, i64* %col, align 8, !dbg !5526
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !5527, metadata !DIExpression()), !dbg !5528
  %8 = load i64, i64* %row, align 8, !dbg !5529
  store i64 %8, i64* %filesno, align 8, !dbg !5528
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5530, metadata !DIExpression()), !dbg !5531
  store i64 0, i64* %pos, align 8, !dbg !5531
  br label %while.body, !dbg !5532

while.body:                                       ; preds = %for.body, %if.end
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !5533, metadata !DIExpression()), !dbg !5535
  %9 = load i8**, i8*** @sorted_file, align 8, !dbg !5536
  %10 = load i64, i64* %filesno, align 8, !dbg !5537
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !5536, !ctir !754
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !5536
  %12 = bitcast i8* %11 to %struct.fileinfo*, !dbg !5536
  store %struct.fileinfo* %12, %struct.fileinfo** %f, align 8, !dbg !5535
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !5538, metadata !DIExpression()), !dbg !5539
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5540
  %call5 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %13), !dbg !5541
  store i64 %call5, i64* %name_length, align 8, !dbg !5539
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !5542, metadata !DIExpression()), !dbg !5543
  %14 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !5544
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %14, i32 0, i32 2, !dbg !5545, !ctir !798
  %15 = load i64*, i64** %col_arr, align 8, !dbg !5545, !ctir !148
  %16 = load i64, i64* %col, align 8, !dbg !5546
  %inc = add i64 %16, 1, !dbg !5546
  store i64 %inc, i64* %col, align 8, !dbg !5546
  %arrayidx6 = getelementptr inbounds i64, i64* %15, i64 %16, !dbg !5544, !ctir !148
  %17 = load i64, i64* %arrayidx6, align 8, !dbg !5544
  store i64 %17, i64* %max_name_length, align 8, !dbg !5543
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5547
  %19 = load i64, i64* %pos, align 8, !dbg !5548
  %call7 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !5549
  %20 = load i64, i64* %rows, align 8, !dbg !5550
  %21 = load i64, i64* %filesno, align 8, !dbg !5551
  %add8 = add i64 %21, %20, !dbg !5551
  store i64 %add8, i64* %filesno, align 8, !dbg !5551
  %22 = load i64, i64* %filesno, align 8, !dbg !5552
  %23 = load i64, i64* @cwd_n_used, align 8, !dbg !5554
  %cmp9 = icmp uge i64 %22, %23, !dbg !5555
  br i1 %cmp9, label %if.then, label %if.end, !dbg !5556

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !5557

if.end:                                           ; preds = %while.body
  %24 = load i64, i64* %pos, align 8, !dbg !5558
  %25 = load i64, i64* %name_length, align 8, !dbg !5559
  %add11 = add i64 %24, %25, !dbg !5560
  %26 = load i64, i64* %pos, align 8, !dbg !5561
  %27 = load i64, i64* %max_name_length, align 8, !dbg !5562
  %add12 = add i64 %26, %27, !dbg !5563
  call void @indent(i64 %add11, i64 %add12), !dbg !5564
  %28 = load i64, i64* %max_name_length, align 8, !dbg !5565
  %29 = load i64, i64* %pos, align 8, !dbg !5566
  %add13 = add i64 %29, %28, !dbg !5566
  store i64 %add13, i64* %pos, align 8, !dbg !5566
  br label %while.body, !dbg !5532, !llvm.loop !5567

while.end:                                        ; preds = %if.then
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !5569
  br label %for.inc, !dbg !5570

for.inc:                                          ; preds = %while.end
  %30 = load i64, i64* %row, align 8, !dbg !5571
  %inc15 = add i64 %30, 1, !dbg !5571
  store i64 %inc15, i64* %row, align 8, !dbg !5571
  br label %for.cond, !dbg !5572, !llvm.loop !5573

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5575
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_horizontal() #0 !dbg !5576 {
entry:
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !797
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !5577, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5579, metadata !DIExpression()), !dbg !5580
  store i64 0, i64* %pos, align 8, !dbg !5580
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !5581, metadata !DIExpression()), !dbg !5582
  %call = call i64 @calculate_columns(i1 zeroext false), !dbg !5583
  store i64 %call, i64* %cols, align 8, !dbg !5582
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !5584, metadata !DIExpression()), !dbg !5585
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !5586
  %1 = load i64, i64* %cols, align 8, !dbg !5587
  %sub = sub i64 %1, 1, !dbg !5588
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !5586, !ctir !804
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !5585
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !5589, metadata !DIExpression()), !dbg !5590
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !5591
  %arrayidx1 = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !5591, !ctir !754
  %3 = load i8*, i8** %arrayidx1, align 8, !dbg !5591
  %4 = bitcast i8* %3 to %struct.fileinfo*, !dbg !5591
  store %struct.fileinfo* %4, %struct.fileinfo** %f, align 8, !dbg !5590
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !5592, metadata !DIExpression()), !dbg !5593
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5594
  %call2 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %5), !dbg !5595
  store i64 %call2, i64* %name_length, align 8, !dbg !5593
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !5596, metadata !DIExpression()), !dbg !5597
  %6 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !5598
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %6, i32 0, i32 2, !dbg !5599, !ctir !798
  %7 = load i64*, i64** %col_arr, align 8, !dbg !5599, !ctir !148
  %arrayidx3 = getelementptr inbounds i64, i64* %7, i64 0, !dbg !5598, !ctir !148
  %8 = load i64, i64* %arrayidx3, align 8, !dbg !5598
  store i64 %8, i64* %max_name_length, align 8, !dbg !5597
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5600
  %call4 = call i64 @print_file_name_and_frills(%struct.fileinfo* %9, i64 0), !dbg !5601
  store i64 1, i64* %filesno, align 8, !dbg !5602
  br label %for.cond, !dbg !5604

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i64, i64* %filesno, align 8, !dbg !5605
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !5607
  %cmp = icmp ult i64 %10, %11, !dbg !5608
  br i1 %cmp, label %for.body, label %for.end, !dbg !5609

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !5610, metadata !DIExpression()), !dbg !5612
  %12 = load i64, i64* %filesno, align 8, !dbg !5613
  %13 = load i64, i64* %cols, align 8, !dbg !5614
  %rem = urem i64 %12, %13, !dbg !5615
  store i64 %rem, i64* %col, align 8, !dbg !5612
  %14 = load i64, i64* %col, align 8, !dbg !5616
  %cmp5 = icmp eq i64 %14, 0, !dbg !5618
  br i1 %cmp5, label %if.then, label %if.else, !dbg !5619

if.then:                                          ; preds = %for.body
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !5620
  store i64 0, i64* %pos, align 8, !dbg !5622
  br label %if.end, !dbg !5623

if.else:                                          ; preds = %for.body
  %15 = load i64, i64* %pos, align 8, !dbg !5624
  %16 = load i64, i64* %name_length, align 8, !dbg !5626
  %add = add i64 %15, %16, !dbg !5627
  %17 = load i64, i64* %pos, align 8, !dbg !5628
  %18 = load i64, i64* %max_name_length, align 8, !dbg !5629
  %add7 = add i64 %17, %18, !dbg !5630
  call void @indent(i64 %add, i64 %add7), !dbg !5631
  %19 = load i64, i64* %max_name_length, align 8, !dbg !5632
  %20 = load i64, i64* %pos, align 8, !dbg !5633
  %add8 = add i64 %20, %19, !dbg !5633
  store i64 %add8, i64* %pos, align 8, !dbg !5633
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load i8**, i8*** @sorted_file, align 8, !dbg !5634
  %22 = load i64, i64* %filesno, align 8, !dbg !5635
  %arrayidx9 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !5634, !ctir !754
  %23 = load i8*, i8** %arrayidx9, align 8, !dbg !5634
  %24 = bitcast i8* %23 to %struct.fileinfo*, !dbg !5634
  store %struct.fileinfo* %24, %struct.fileinfo** %f, align 8, !dbg !5636
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5637
  %26 = load i64, i64* %pos, align 8, !dbg !5638
  %call10 = call i64 @print_file_name_and_frills(%struct.fileinfo* %25, i64 %26), !dbg !5639
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !5640
  %call11 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %27), !dbg !5641
  store i64 %call11, i64* %name_length, align 8, !dbg !5642
  %28 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !5643
  %col_arr12 = getelementptr inbounds %struct.column_info, %struct.column_info* %28, i32 0, i32 2, !dbg !5644, !ctir !798
  %29 = load i64*, i64** %col_arr12, align 8, !dbg !5644, !ctir !148
  %30 = load i64, i64* %col, align 8, !dbg !5645
  %arrayidx13 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !5643, !ctir !148
  %31 = load i64, i64* %arrayidx13, align 8, !dbg !5643
  store i64 %31, i64* %max_name_length, align 8, !dbg !5646
  br label %for.inc, !dbg !5647

for.inc:                                          ; preds = %if.end
  %32 = load i64, i64* %filesno, align 8, !dbg !5648
  %inc = add i64 %32, 1, !dbg !5648
  store i64 %inc, i64* %filesno, align 8, !dbg !5648
  br label %for.cond, !dbg !5649, !llvm.loop !5650

for.end:                                          ; preds = %for.cond
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !5652
  ret void, !dbg !5653
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_normal_color() #0 !dbg !5654 {
entry:
  %0 = load i8, i8* @print_with_color, align 1, !dbg !5655
  %tobool = trunc i8 %0 to i1, !dbg !5655
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5657

land.lhs.true:                                    ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !5658
  br i1 %call, label %if.then, label %if.end, !dbg !5659

if.then:                                          ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5660
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 4)), !dbg !5662
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5663
  br label %if.end, !dbg !5664

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5665
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_long_format(%struct.fileinfo* %f) #0 !dbg !5666 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %modebuf = alloca [12 x i8], align 1, !ctir !654
  %buf = alloca [3643 x i8], align 16, !ctir !805
  %s = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %when_timespec = alloca %struct.dev_ino, align 8, !ctir !213
  %when_local = alloca %struct.tm, align 8, !ctir !5669
  %tmp = alloca %struct.dev_ino, align 8
  %tmp20 = alloca %struct.dev_ino, align 8
  %tmp24 = alloca %struct.dev_ino, align 8
  %hbuf = alloca [21 x i8], align 16, !ctir !731
  %hbuf38 = alloca [652 x i8], align 16, !ctir !734
  %blocks = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %hbuf51 = alloca [21 x i8], align 16, !ctir !731
  %majorbuf = alloca [21 x i8], align 16, !ctir !731
  %minorbuf = alloca [21 x i8], align 16, !ctir !731
  %blanks_width = alloca i32, align 4, !ctir !27
  %hbuf141 = alloca [652 x i8], align 16, !ctir !734
  %size = alloca i8*, align 8, !ctir !146
  %pad152 = alloca i32, align 4, !ctir !27
  %six_months_ago = alloca %struct.dev_ino, align 8, !ctir !213
  %recent = alloca i8, align 1, !ctir !141
  %hbuf203 = alloca [21 x i8], align 16, !ctir !731
  %w = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !5682, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata [12 x i8]* %modebuf, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata [3643 x i8]* %buf, metadata !5686, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata i64* %s, metadata !5688, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5690, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %when_timespec, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata %struct.tm* %when_local, metadata !5694, metadata !DIExpression()), !dbg !5695
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5696
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 7, !dbg !5698, !ctir !183
  %1 = load i8, i8* %stat_ok, align 8, !dbg !5698
  %tobool = trunc i8 %1 to i1, !dbg !5698, !ctir !141
  br i1 %tobool, label %if.then, label %if.else, !dbg !5699

if.then:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5700
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !5701, !ctir !183
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !5702, !ctir !654
  call void @filemodestring(%struct.stat* %stat, i8* %arraydecay), !dbg !5703
  br label %if.end, !dbg !5703

if.else:                                          ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5704
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 4, !dbg !5706, !ctir !183
  %4 = load i32, i32* %filetype, align 8, !dbg !5706, !ctir !36
  %idxprom = zext i32 %4 to i64, !dbg !5707
  %arrayidx = getelementptr inbounds [11 x i8], [11 x i8]* @filetype_letter, i64 0, i64 %idxprom, !dbg !5707, !ctir !808
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5707
  %arrayidx1 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !5708, !ctir !654
  store i8 %5, i8* %arrayidx1, align 1, !dbg !5709
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !5710, !ctir !654
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 1, !dbg !5711, !ctir !144
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 63, i64 10, i1 false), !dbg !5712
  %arrayidx3 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 11, !dbg !5713, !ctir !654
  store i8 0, i8* %arrayidx3, align 1, !dbg !5714
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* @any_has_acl, align 1, !dbg !5715
  %tobool4 = trunc i8 %6 to i1, !dbg !5715
  br i1 %tobool4, label %if.else7, label %if.then5, !dbg !5717

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !5718, !ctir !654
  store i8 0, i8* %arrayidx6, align 1, !dbg !5719
  br label %if.end17, !dbg !5718

if.else7:                                         ; preds = %if.end
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5720
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 9, !dbg !5722, !ctir !183
  %8 = load i32, i32* %acl_type, align 4, !dbg !5722, !ctir !48
  %cmp = icmp eq i32 %8, 1, !dbg !5723
  br i1 %cmp, label %if.then8, label %if.else10, !dbg !5724

if.then8:                                         ; preds = %if.else7
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !5725, !ctir !654
  store i8 46, i8* %arrayidx9, align 1, !dbg !5726
  br label %if.end16, !dbg !5725

if.else10:                                        ; preds = %if.else7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5727
  %acl_type11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 9, !dbg !5729, !ctir !183
  %10 = load i32, i32* %acl_type11, align 4, !dbg !5729, !ctir !48
  %cmp12 = icmp eq i32 %10, 2, !dbg !5730
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !5731

if.then13:                                        ; preds = %if.else10
  %arrayidx14 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !5732, !ctir !654
  store i8 43, i8* %arrayidx14, align 1, !dbg !5733
  br label %if.end15, !dbg !5732

if.end15:                                         ; preds = %if.then13, %if.else10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  %11 = load i32, i32* @time_type, align 4, !dbg !5734
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb19
    i32 2, label %sw.bb23
  ], !dbg !5735

sw.bb:                                            ; preds = %if.end17
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5736
  %stat18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 3, !dbg !5738, !ctir !183
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat18) #16, !dbg !5739
  %13 = bitcast %struct.dev_ino* %tmp to { i64, i64 }*, !dbg !5739
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !5739
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !5739
  store i64 %15, i64* %14, align 8, !dbg !5739
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !5739
  %17 = extractvalue { i64, i64 } %call, 1, !dbg !5739
  store i64 %17, i64* %16, align 8, !dbg !5739
  %18 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !5739
  %19 = bitcast %struct.dev_ino* %tmp to i8*, !dbg !5739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !5739
  br label %sw.epilog, !dbg !5740

sw.bb19:                                          ; preds = %if.end17
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5741
  %stat21 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 3, !dbg !5742, !ctir !183
  %call22 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat21) #16, !dbg !5743
  %21 = bitcast %struct.dev_ino* %tmp20 to { i64, i64 }*, !dbg !5743
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0, !dbg !5743
  %23 = extractvalue { i64, i64 } %call22, 0, !dbg !5743
  store i64 %23, i64* %22, align 8, !dbg !5743
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1, !dbg !5743
  %25 = extractvalue { i64, i64 } %call22, 1, !dbg !5743
  store i64 %25, i64* %24, align 8, !dbg !5743
  %26 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !5743
  %27 = bitcast %struct.dev_ino* %tmp20 to i8*, !dbg !5743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false), !dbg !5743
  br label %sw.epilog, !dbg !5744

sw.bb23:                                          ; preds = %if.end17
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5745
  %stat25 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 3, !dbg !5746, !ctir !183
  %call26 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat25) #16, !dbg !5747
  %29 = bitcast %struct.dev_ino* %tmp24 to { i64, i64 }*, !dbg !5747
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !5747
  %31 = extractvalue { i64, i64 } %call26, 0, !dbg !5747
  store i64 %31, i64* %30, align 8, !dbg !5747
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !5747
  %33 = extractvalue { i64, i64 } %call26, 1, !dbg !5747
  store i64 %33, i64* %32, align 8, !dbg !5747
  %34 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !5747
  %35 = bitcast %struct.dev_ino* %tmp24 to i8*, !dbg !5747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !5747
  br label %sw.epilog, !dbg !5748

sw.default:                                       ; preds = %if.end17
  call void @abort() #15, !dbg !5749
  unreachable, !dbg !5749

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb19, %sw.bb
  %arraydecay27 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !5750, !ctir !805
  store i8* %arraydecay27, i8** %p, align 8, !dbg !5751
  %36 = load i8, i8* @print_inode, align 1, !dbg !5752
  %tobool28 = trunc i8 %36 to i1, !dbg !5752
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !5754

if.then29:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf, metadata !5755, metadata !DIExpression()), !dbg !5757
  %37 = load i8*, i8** %p, align 8, !dbg !5758
  %38 = load i32, i32* @inode_number_width, align 4, !dbg !5759
  %arraydecay30 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf, i64 0, i64 0, !dbg !5760, !ctir !731
  %39 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5761
  %call31 = call i8* @format_inode(i8* %arraydecay30, i64 21, %struct.fileinfo* %39), !dbg !5762
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %38, i8* %call31) #13, !dbg !5763
  %40 = load i8*, i8** %p, align 8, !dbg !5764
  %call33 = call i64 @strlen(i8* %40) #16, !dbg !5765
  %41 = load i8*, i8** %p, align 8, !dbg !5766
  %add.ptr34 = getelementptr inbounds i8, i8* %41, i64 %call33, !dbg !5766, !ctir !144
  store i8* %add.ptr34, i8** %p, align 8, !dbg !5766
  br label %if.end35, !dbg !5767

if.end35:                                         ; preds = %if.then29, %sw.epilog
  %42 = load i8, i8* @print_block_size, align 1, !dbg !5768
  %tobool36 = trunc i8 %42 to i1, !dbg !5768
  br i1 %tobool36, label %if.then37, label %if.end50, !dbg !5770

if.then37:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf38, metadata !5771, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata i8** %blocks, metadata !5774, metadata !DIExpression()), !dbg !5775
  %43 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5776
  %stat_ok39 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %43, i32 0, i32 7, !dbg !5777, !ctir !183
  %44 = load i8, i8* %stat_ok39, align 8, !dbg !5777
  %tobool40 = trunc i8 %44 to i1, !dbg !5777, !ctir !141
  br i1 %tobool40, label %cond.false, label %cond.true, !dbg !5778

cond.true:                                        ; preds = %if.then37
  br label %cond.end, !dbg !5778

cond.false:                                       ; preds = %if.then37
  %45 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5779
  %stat41 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %45, i32 0, i32 3, !dbg !5779, !ctir !183
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat41, i32 0, i32 10, !dbg !5779, !ctir !190
  %46 = load i64, i64* %st_blocks, align 8, !dbg !5779, !ctir !211
  %arraydecay42 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf38, i64 0, i64 0, !dbg !5780, !ctir !734
  %47 = load i32, i32* @human_output_opts, align 4, !dbg !5781
  %48 = load i64, i64* @output_block_size, align 8, !dbg !5782
  %call43 = call i8* @human_readable(i64 %46, i8* %arraydecay42, i32 %47, i64 512, i64 %48), !dbg !5783
  br label %cond.end, !dbg !5778

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %call43, %cond.false ], !dbg !5778
  store i8* %cond, i8** %blocks, align 8, !dbg !5775
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !5784, metadata !DIExpression()), !dbg !5785
  %49 = load i32, i32* @block_size_width, align 4, !dbg !5786
  %50 = load i8*, i8** %blocks, align 8, !dbg !5788
  %call44 = call i32 @gnu_mbswidth(i8* %50, i32 0), !dbg !5789
  %sub = sub nsw i32 %49, %call44, !dbg !5790
  store i32 %sub, i32* %pad, align 4, !dbg !5791
  br label %for.cond, !dbg !5792

for.cond:                                         ; preds = %for.inc, %cond.end
  %51 = load i32, i32* %pad, align 4, !dbg !5793
  %cmp45 = icmp slt i32 0, %51, !dbg !5795
  br i1 %cmp45, label %for.body, label %for.end, !dbg !5796

for.body:                                         ; preds = %for.cond
  %52 = load i8*, i8** %p, align 8, !dbg !5797
  %incdec.ptr = getelementptr inbounds i8, i8* %52, i32 1, !dbg !5797, !ctir !144
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5797
  store i8 32, i8* %52, align 1, !dbg !5798, !ctir !144
  br label %for.inc, !dbg !5799

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %pad, align 4, !dbg !5800
  %dec = add nsw i32 %53, -1, !dbg !5800
  store i32 %dec, i32* %pad, align 4, !dbg !5800
  br label %for.cond, !dbg !5801, !llvm.loop !5802

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !5804

while.cond:                                       ; preds = %while.body, %for.end
  %54 = load i8*, i8** %blocks, align 8, !dbg !5805
  %incdec.ptr46 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !5805, !ctir !147
  store i8* %incdec.ptr46, i8** %blocks, align 8, !dbg !5805
  %55 = load i8, i8* %54, align 1, !dbg !5806, !ctir !147
  %56 = load i8*, i8** %p, align 8, !dbg !5807
  %incdec.ptr47 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5807, !ctir !144
  store i8* %incdec.ptr47, i8** %p, align 8, !dbg !5807
  store i8 %55, i8* %56, align 1, !dbg !5808, !ctir !144
  %tobool48 = icmp ne i8 %55, 0, !dbg !5804
  br i1 %tobool48, label %while.body, label %while.end, !dbg !5804

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !5809, !llvm.loop !5810

while.end:                                        ; preds = %while.cond
  %57 = load i8*, i8** %p, align 8, !dbg !5811
  %arrayidx49 = getelementptr inbounds i8, i8* %57, i64 -1, !dbg !5811, !ctir !143
  store i8 32, i8* %arrayidx49, align 1, !dbg !5812
  br label %if.end50, !dbg !5813

if.end50:                                         ; preds = %while.end, %if.end35
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf51, metadata !5814, metadata !DIExpression()), !dbg !5816
  %58 = load i8*, i8** %p, align 8, !dbg !5817
  %arraydecay52 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !5818, !ctir !654
  %59 = load i32, i32* @nlink_width, align 4, !dbg !5819
  %60 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5820
  %stat_ok53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %60, i32 0, i32 7, !dbg !5821, !ctir !183
  %61 = load i8, i8* %stat_ok53, align 8, !dbg !5821
  %tobool54 = trunc i8 %61 to i1, !dbg !5821, !ctir !141
  br i1 %tobool54, label %cond.false56, label %cond.true55, !dbg !5822

cond.true55:                                      ; preds = %if.end50
  br label %cond.end60, !dbg !5822

cond.false56:                                     ; preds = %if.end50
  %62 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5823
  %stat57 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %62, i32 0, i32 3, !dbg !5824, !ctir !183
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat57, i32 0, i32 2, !dbg !5825, !ctir !190
  %63 = load i64, i64* %st_nlink, align 8, !dbg !5825, !ctir !198
  %arraydecay58 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf51, i64 0, i64 0, !dbg !5826, !ctir !731
  %call59 = call i8* @umaxtostr(i64 %63, i8* %arraydecay58), !dbg !5827
  br label %cond.end60, !dbg !5822

cond.end60:                                       ; preds = %cond.false56, %cond.true55
  %cond61 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true55 ], [ %call59, %cond.false56 ], !dbg !5822
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.227, i64 0, i64 0), i8* %arraydecay52, i32 %59, i8* %cond61) #13, !dbg !5828
  %64 = load i8*, i8** %p, align 8, !dbg !5829
  %call63 = call i64 @strlen(i8* %64) #16, !dbg !5830
  %65 = load i8*, i8** %p, align 8, !dbg !5831
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %call63, !dbg !5831, !ctir !144
  store i8* %add.ptr64, i8** %p, align 8, !dbg !5831
  br label %do.body, !dbg !5832

do.body:                                          ; preds = %cond.end60
  %66 = load i8, i8* @dired, align 1, !dbg !5833
  %tobool65 = trunc i8 %66 to i1, !dbg !5833
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !5836

if.then66:                                        ; preds = %do.body
  br label %do.body67, !dbg !5833

do.body67:                                        ; preds = %if.then66
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5837
  %call68 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !5837
  %68 = load i64, i64* @dired_pos, align 8, !dbg !5837
  %add = add i64 %68, 2, !dbg !5837
  store i64 %add, i64* @dired_pos, align 8, !dbg !5837
  br label %do.end, !dbg !5837

do.end:                                           ; preds = %do.body67
  br label %if.end69, !dbg !5837

if.end69:                                         ; preds = %do.end, %do.body
  br label %do.end70, !dbg !5836

do.end70:                                         ; preds = %if.end69
  %69 = load i8, i8* @print_owner, align 1, !dbg !5839
  %tobool71 = trunc i8 %69 to i1, !dbg !5839
  br i1 %tobool71, label %if.then77, label %lor.lhs.false, !dbg !5841

lor.lhs.false:                                    ; preds = %do.end70
  %70 = load i8, i8* @print_group, align 1, !dbg !5842
  %tobool72 = trunc i8 %70 to i1, !dbg !5842
  br i1 %tobool72, label %if.then77, label %lor.lhs.false73, !dbg !5843

lor.lhs.false73:                                  ; preds = %lor.lhs.false
  %71 = load i8, i8* @print_author, align 1, !dbg !5844
  %tobool74 = trunc i8 %71 to i1, !dbg !5844
  br i1 %tobool74, label %if.then77, label %lor.lhs.false75, !dbg !5845

lor.lhs.false75:                                  ; preds = %lor.lhs.false73
  %72 = load i8, i8* @print_scontext, align 1, !dbg !5846
  %tobool76 = trunc i8 %72 to i1, !dbg !5846
  br i1 %tobool76, label %if.then77, label %if.end107, !dbg !5847

if.then77:                                        ; preds = %lor.lhs.false75, %lor.lhs.false73, %lor.lhs.false, %do.end70
  br label %do.body78, !dbg !5848

do.body78:                                        ; preds = %if.then77
  %arraydecay79 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !5850, !ctir !805
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5850
  %call80 = call i32 @fputs_unlocked(i8* %arraydecay79, %struct._IO_FILE* %73), !dbg !5850
  %74 = load i8*, i8** %p, align 8, !dbg !5850
  %arraydecay81 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !5850, !ctir !805
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i64, !dbg !5850
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay81 to i64, !dbg !5850
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5850
  %75 = load i64, i64* @dired_pos, align 8, !dbg !5850
  %add82 = add i64 %75, %sub.ptr.sub, !dbg !5850
  store i64 %add82, i64* @dired_pos, align 8, !dbg !5850
  br label %do.end83, !dbg !5850

do.end83:                                         ; preds = %do.body78
  %76 = load i8, i8* @print_owner, align 1, !dbg !5852
  %tobool84 = trunc i8 %76 to i1, !dbg !5852
  br i1 %tobool84, label %if.then85, label %if.end89, !dbg !5854

if.then85:                                        ; preds = %do.end83
  %77 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5855
  %stat86 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %77, i32 0, i32 3, !dbg !5856, !ctir !183
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat86, i32 0, i32 4, !dbg !5857, !ctir !190
  %78 = load i32, i32* %st_uid, align 4, !dbg !5857, !ctir !202
  %79 = load i32, i32* @owner_width, align 4, !dbg !5858
  %80 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5859
  %stat_ok87 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %80, i32 0, i32 7, !dbg !5860, !ctir !183
  %81 = load i8, i8* %stat_ok87, align 8, !dbg !5860
  %tobool88 = trunc i8 %81 to i1, !dbg !5860, !ctir !141
  call void @format_user(i32 %78, i32 %79, i1 zeroext %tobool88), !dbg !5861
  br label %if.end89, !dbg !5861

if.end89:                                         ; preds = %if.then85, %do.end83
  %82 = load i8, i8* @print_group, align 1, !dbg !5862
  %tobool90 = trunc i8 %82 to i1, !dbg !5862
  br i1 %tobool90, label %if.then91, label %if.end95, !dbg !5864

if.then91:                                        ; preds = %if.end89
  %83 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5865
  %stat92 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %83, i32 0, i32 3, !dbg !5866, !ctir !183
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat92, i32 0, i32 5, !dbg !5867, !ctir !190
  %84 = load i32, i32* %st_gid, align 8, !dbg !5867, !ctir !204
  %85 = load i32, i32* @group_width, align 4, !dbg !5868
  %86 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5869
  %stat_ok93 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %86, i32 0, i32 7, !dbg !5870, !ctir !183
  %87 = load i8, i8* %stat_ok93, align 8, !dbg !5870
  %tobool94 = trunc i8 %87 to i1, !dbg !5870, !ctir !141
  call void @format_group(i32 %84, i32 %85, i1 zeroext %tobool94), !dbg !5871
  br label %if.end95, !dbg !5871

if.end95:                                         ; preds = %if.then91, %if.end89
  %88 = load i8, i8* @print_author, align 1, !dbg !5872
  %tobool96 = trunc i8 %88 to i1, !dbg !5872
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !5874

if.then97:                                        ; preds = %if.end95
  %89 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5875
  %stat98 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %89, i32 0, i32 3, !dbg !5876, !ctir !183
  %st_uid99 = getelementptr inbounds %struct.stat, %struct.stat* %stat98, i32 0, i32 4, !dbg !5877, !ctir !190
  %90 = load i32, i32* %st_uid99, align 4, !dbg !5877, !ctir !202
  %91 = load i32, i32* @author_width, align 4, !dbg !5878
  %92 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5879
  %stat_ok100 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %92, i32 0, i32 7, !dbg !5880, !ctir !183
  %93 = load i8, i8* %stat_ok100, align 8, !dbg !5880
  %tobool101 = trunc i8 %93 to i1, !dbg !5880, !ctir !141
  call void @format_user(i32 %90, i32 %91, i1 zeroext %tobool101), !dbg !5881
  br label %if.end102, !dbg !5881

if.end102:                                        ; preds = %if.then97, %if.end95
  %94 = load i8, i8* @print_scontext, align 1, !dbg !5882
  %tobool103 = trunc i8 %94 to i1, !dbg !5882
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !5884

if.then104:                                       ; preds = %if.end102
  %95 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5885
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %95, i32 0, i32 6, !dbg !5886, !ctir !183
  %96 = load i8*, i8** %scontext, align 8, !dbg !5886, !ctir !143
  %97 = load i32, i32* @scontext_width, align 4, !dbg !5887
  call void @format_user_or_group(i8* %96, i64 0, i32 %97), !dbg !5888
  br label %if.end105, !dbg !5888

if.end105:                                        ; preds = %if.then104, %if.end102
  %arraydecay106 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !5889, !ctir !805
  store i8* %arraydecay106, i8** %p, align 8, !dbg !5890
  br label %if.end107, !dbg !5891

if.end107:                                        ; preds = %if.end105, %lor.lhs.false75
  %98 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5892
  %stat_ok108 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %98, i32 0, i32 7, !dbg !5894, !ctir !183
  %99 = load i8, i8* %stat_ok108, align 8, !dbg !5894
  %tobool109 = trunc i8 %99 to i1, !dbg !5894, !ctir !141
  br i1 %tobool109, label %land.lhs.true, label %if.else140, !dbg !5895

land.lhs.true:                                    ; preds = %if.end107
  %100 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5896
  %stat110 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %100, i32 0, i32 3, !dbg !5896, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat110, i32 0, i32 3, !dbg !5896, !ctir !190
  %101 = load i32, i32* %st_mode, align 8, !dbg !5896, !ctir !200
  %and = and i32 %101, 61440, !dbg !5896
  %cmp111 = icmp eq i32 %and, 8192, !dbg !5896
  br i1 %cmp111, label %if.then117, label %lor.lhs.false112, !dbg !5897

lor.lhs.false112:                                 ; preds = %land.lhs.true
  %102 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5898
  %stat113 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %102, i32 0, i32 3, !dbg !5898, !ctir !183
  %st_mode114 = getelementptr inbounds %struct.stat, %struct.stat* %stat113, i32 0, i32 3, !dbg !5898, !ctir !190
  %103 = load i32, i32* %st_mode114, align 8, !dbg !5898, !ctir !200
  %and115 = and i32 %103, 61440, !dbg !5898
  %cmp116 = icmp eq i32 %and115, 24576, !dbg !5898
  br i1 %cmp116, label %if.then117, label %if.else140, !dbg !5899

if.then117:                                       ; preds = %lor.lhs.false112, %land.lhs.true
  call void @llvm.dbg.declare(metadata [21 x i8]* %majorbuf, metadata !5900, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata [21 x i8]* %minorbuf, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata i32* %blanks_width, metadata !5905, metadata !DIExpression()), !dbg !5906
  %104 = load i32, i32* @file_size_width, align 4, !dbg !5907
  %105 = load i32, i32* @major_device_number_width, align 4, !dbg !5908
  %add118 = add nsw i32 %105, 2, !dbg !5909
  %106 = load i32, i32* @minor_device_number_width, align 4, !dbg !5910
  %add119 = add nsw i32 %add118, %106, !dbg !5911
  %sub120 = sub nsw i32 %104, %add119, !dbg !5912
  store i32 %sub120, i32* %blanks_width, align 4, !dbg !5906
  %107 = load i8*, i8** %p, align 8, !dbg !5913
  %108 = load i32, i32* @major_device_number_width, align 4, !dbg !5914
  %109 = load i32, i32* %blanks_width, align 4, !dbg !5915
  %cmp121 = icmp sgt i32 0, %109, !dbg !5915
  br i1 %cmp121, label %cond.true122, label %cond.false123, !dbg !5915

cond.true122:                                     ; preds = %if.then117
  br label %cond.end124, !dbg !5915

cond.false123:                                    ; preds = %if.then117
  %110 = load i32, i32* %blanks_width, align 4, !dbg !5915
  br label %cond.end124, !dbg !5915

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ 0, %cond.true122 ], [ %110, %cond.false123 ], !dbg !5915
  %add126 = add nsw i32 %108, %cond125, !dbg !5916
  %111 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5917
  %stat127 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %111, i32 0, i32 3, !dbg !5917, !ctir !183
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat127, i32 0, i32 7, !dbg !5917, !ctir !190
  %112 = load i64, i64* %st_rdev, align 8, !dbg !5917, !ctir !194
  %call128 = call i32 @gnu_dev_major(i64 %112) #17, !dbg !5917
  %conv = zext i32 %call128 to i64, !dbg !5917
  %arraydecay129 = getelementptr inbounds [21 x i8], [21 x i8]* %majorbuf, i64 0, i64 0, !dbg !5918, !ctir !731
  %call130 = call i8* @umaxtostr(i64 %conv, i8* %arraydecay129), !dbg !5919
  %113 = load i32, i32* @minor_device_number_width, align 4, !dbg !5920
  %114 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5921
  %stat131 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %114, i32 0, i32 3, !dbg !5921, !ctir !183
  %st_rdev132 = getelementptr inbounds %struct.stat, %struct.stat* %stat131, i32 0, i32 7, !dbg !5921, !ctir !190
  %115 = load i64, i64* %st_rdev132, align 8, !dbg !5921, !ctir !194
  %call133 = call i32 @gnu_dev_minor(i64 %115) #17, !dbg !5921
  %conv134 = zext i32 %call133 to i64, !dbg !5921
  %arraydecay135 = getelementptr inbounds [21 x i8], [21 x i8]* %minorbuf, i64 0, i64 0, !dbg !5922, !ctir !731
  %call136 = call i8* @umaxtostr(i64 %conv134, i8* %arraydecay135), !dbg !5923
  %call137 = call i32 (i8*, i8*, ...) @sprintf(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i64 0, i64 0), i32 %add126, i8* %call130, i32 %113, i8* %call136) #13, !dbg !5924
  %116 = load i32, i32* @file_size_width, align 4, !dbg !5925
  %add138 = add nsw i32 %116, 1, !dbg !5926
  %117 = load i8*, i8** %p, align 8, !dbg !5927
  %idx.ext = sext i32 %add138 to i64, !dbg !5927
  %add.ptr139 = getelementptr inbounds i8, i8* %117, i64 %idx.ext, !dbg !5927, !ctir !144
  store i8* %add.ptr139, i8** %p, align 8, !dbg !5927
  br label %if.end170, !dbg !5928

if.else140:                                       ; preds = %lor.lhs.false112, %if.end107
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf141, metadata !5929, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.declare(metadata i8** %size, metadata !5932, metadata !DIExpression()), !dbg !5933
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5934
  %stat_ok142 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 7, !dbg !5935, !ctir !183
  %119 = load i8, i8* %stat_ok142, align 8, !dbg !5935
  %tobool143 = trunc i8 %119 to i1, !dbg !5935, !ctir !141
  br i1 %tobool143, label %cond.false145, label %cond.true144, !dbg !5936

cond.true144:                                     ; preds = %if.else140
  br label %cond.end150, !dbg !5936

cond.false145:                                    ; preds = %if.else140
  %120 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5937
  %stat146 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %120, i32 0, i32 3, !dbg !5938, !ctir !183
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat146, i32 0, i32 8, !dbg !5939, !ctir !190
  %121 = load i64, i64* %st_size, align 8, !dbg !5939, !ctir !180
  %call147 = call i64 @unsigned_file_size(i64 %121), !dbg !5940
  %arraydecay148 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf141, i64 0, i64 0, !dbg !5941, !ctir !734
  %122 = load i32, i32* @file_human_output_opts, align 4, !dbg !5942
  %123 = load i64, i64* @file_output_block_size, align 8, !dbg !5943
  %call149 = call i8* @human_readable(i64 %call147, i8* %arraydecay148, i32 %122, i64 1, i64 %123), !dbg !5944
  br label %cond.end150, !dbg !5936

cond.end150:                                      ; preds = %cond.false145, %cond.true144
  %cond151 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true144 ], [ %call149, %cond.false145 ], !dbg !5936
  store i8* %cond151, i8** %size, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata i32* %pad152, metadata !5945, metadata !DIExpression()), !dbg !5946
  %124 = load i32, i32* @file_size_width, align 4, !dbg !5947
  %125 = load i8*, i8** %size, align 8, !dbg !5949
  %call153 = call i32 @gnu_mbswidth(i8* %125, i32 0), !dbg !5950
  %sub154 = sub nsw i32 %124, %call153, !dbg !5951
  store i32 %sub154, i32* %pad152, align 4, !dbg !5952
  br label %for.cond155, !dbg !5953

for.cond155:                                      ; preds = %for.inc160, %cond.end150
  %126 = load i32, i32* %pad152, align 4, !dbg !5954
  %cmp156 = icmp slt i32 0, %126, !dbg !5956
  br i1 %cmp156, label %for.body158, label %for.end162, !dbg !5957

for.body158:                                      ; preds = %for.cond155
  %127 = load i8*, i8** %p, align 8, !dbg !5958
  %incdec.ptr159 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !5958, !ctir !144
  store i8* %incdec.ptr159, i8** %p, align 8, !dbg !5958
  store i8 32, i8* %127, align 1, !dbg !5959, !ctir !144
  br label %for.inc160, !dbg !5960

for.inc160:                                       ; preds = %for.body158
  %128 = load i32, i32* %pad152, align 4, !dbg !5961
  %dec161 = add nsw i32 %128, -1, !dbg !5961
  store i32 %dec161, i32* %pad152, align 4, !dbg !5961
  br label %for.cond155, !dbg !5962, !llvm.loop !5963

for.end162:                                       ; preds = %for.cond155
  br label %while.cond163, !dbg !5965

while.cond163:                                    ; preds = %while.body167, %for.end162
  %129 = load i8*, i8** %size, align 8, !dbg !5966
  %incdec.ptr164 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !5966, !ctir !147
  store i8* %incdec.ptr164, i8** %size, align 8, !dbg !5966
  %130 = load i8, i8* %129, align 1, !dbg !5967, !ctir !147
  %131 = load i8*, i8** %p, align 8, !dbg !5968
  %incdec.ptr165 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !5968, !ctir !144
  store i8* %incdec.ptr165, i8** %p, align 8, !dbg !5968
  store i8 %130, i8* %131, align 1, !dbg !5969, !ctir !144
  %tobool166 = icmp ne i8 %130, 0, !dbg !5965
  br i1 %tobool166, label %while.body167, label %while.end168, !dbg !5965

while.body167:                                    ; preds = %while.cond163
  br label %while.cond163, !dbg !5970, !llvm.loop !5971

while.end168:                                     ; preds = %while.cond163
  %132 = load i8*, i8** %p, align 8, !dbg !5972
  %arrayidx169 = getelementptr inbounds i8, i8* %132, i64 -1, !dbg !5972, !ctir !143
  store i8 32, i8* %arrayidx169, align 1, !dbg !5973
  br label %if.end170

if.end170:                                        ; preds = %while.end168, %cond.end124
  store i64 0, i64* %s, align 8, !dbg !5974
  %133 = load i8*, i8** %p, align 8, !dbg !5975
  store i8 1, i8* %133, align 1, !dbg !5976, !ctir !144
  %134 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5977
  %stat_ok171 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %134, i32 0, i32 7, !dbg !5979, !ctir !183
  %135 = load i8, i8* %stat_ok171, align 8, !dbg !5979
  %tobool172 = trunc i8 %135 to i1, !dbg !5979, !ctir !141
  br i1 %tobool172, label %land.lhs.true174, label %if.end195, !dbg !5980

land.lhs.true174:                                 ; preds = %if.end170
  %136 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !5981
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !5982, !ctir !213
  %call175 = call %struct.tm* @localtime_rz(%struct.tm_zone* %136, i64* %tv_sec, %struct.tm* %when_local), !dbg !5983
  %tobool176 = icmp ne %struct.tm* %call175, null, !dbg !5983
  br i1 %tobool176, label %if.then177, label %if.end195, !dbg !5984

if.then177:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %six_months_ago, metadata !5985, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata i8* %recent, metadata !5988, metadata !DIExpression()), !dbg !5989
  %137 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !5990
  %138 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !5990
  %139 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !5990
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 0, !dbg !5990
  %141 = load i64, i64* %140, align 8, !dbg !5990
  %142 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 1, !dbg !5990
  %143 = load i64, i64* %142, align 8, !dbg !5990
  %call178 = call i32 @timespec_cmp(i64 %137, i64 %138, i64 %141, i64 %143) #16, !dbg !5990
  %cmp179 = icmp slt i32 %call178, 0, !dbg !5992
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !5993

if.then181:                                       ; preds = %if.then177
  call void @gettime(%struct.dev_ino* @current_time), !dbg !5994
  br label %if.end182, !dbg !5994

if.end182:                                        ; preds = %if.then181, %if.then177
  %144 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !5995, !ctir !164
  %sub183 = sub nsw i64 %144, 15778476, !dbg !5996
  %tv_sec184 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 0, !dbg !5997, !ctir !213
  store i64 %sub183, i64* %tv_sec184, align 8, !dbg !5998, !ctir !164
  %145 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !5999, !ctir !217
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 1, !dbg !6000, !ctir !213
  store i64 %145, i64* %tv_nsec, align 8, !dbg !6001, !ctir !217
  %146 = bitcast %struct.dev_ino* %six_months_ago to { i64, i64 }*, !dbg !6002
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 0, !dbg !6002
  %148 = load i64, i64* %147, align 8, !dbg !6002
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 1, !dbg !6002
  %150 = load i64, i64* %149, align 8, !dbg !6002
  %151 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6002
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 0, !dbg !6002
  %153 = load i64, i64* %152, align 8, !dbg !6002
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 1, !dbg !6002
  %155 = load i64, i64* %154, align 8, !dbg !6002
  %call185 = call i32 @timespec_cmp(i64 %148, i64 %150, i64 %153, i64 %155) #16, !dbg !6002
  %cmp186 = icmp slt i32 %call185, 0, !dbg !6003
  br i1 %cmp186, label %land.rhs, label %land.end, !dbg !6004

land.rhs:                                         ; preds = %if.end182
  %156 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6005
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 0, !dbg !6005
  %158 = load i64, i64* %157, align 8, !dbg !6005
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 1, !dbg !6005
  %160 = load i64, i64* %159, align 8, !dbg !6005
  %161 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6005
  %162 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6005
  %call188 = call i32 @timespec_cmp(i64 %158, i64 %160, i64 %161, i64 %162) #16, !dbg !6005
  %cmp189 = icmp slt i32 %call188, 0, !dbg !6006
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end182
  %163 = phi i1 [ false, %if.end182 ], [ %cmp189, %land.rhs ], !dbg !6007
  %frombool = zext i1 %163 to i8, !dbg !6008
  store i8 %frombool, i8* %recent, align 1, !dbg !6008
  %164 = load i8*, i8** %p, align 8, !dbg !6009
  %165 = load i8, i8* %recent, align 1, !dbg !6010
  %tobool191 = trunc i8 %165 to i1, !dbg !6010
  %166 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6011
  %tv_nsec192 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 1, !dbg !6012, !ctir !213
  %167 = load i64, i64* %tv_nsec192, align 8, !dbg !6012, !ctir !217
  %conv193 = trunc i64 %167 to i32, !dbg !6013
  %call194 = call i64 @align_nstrftime(i8* %164, i64 1001, i1 zeroext %tobool191, %struct.tm* %when_local, %struct.tm_zone* %166, i32 %conv193), !dbg !6014
  store i64 %call194, i64* %s, align 8, !dbg !6015
  br label %if.end195, !dbg !6016

if.end195:                                        ; preds = %land.end, %land.lhs.true174, %if.end170
  %168 = load i64, i64* %s, align 8, !dbg !6017
  %tobool196 = icmp ne i64 %168, 0, !dbg !6017
  br i1 %tobool196, label %if.then199, label %lor.lhs.false197, !dbg !6019

lor.lhs.false197:                                 ; preds = %if.end195
  %169 = load i8*, i8** %p, align 8, !dbg !6020
  %170 = load i8, i8* %169, align 1, !dbg !6021, !ctir !144
  %tobool198 = icmp ne i8 %170, 0, !dbg !6021
  br i1 %tobool198, label %if.else202, label %if.then199, !dbg !6022

if.then199:                                       ; preds = %lor.lhs.false197, %if.end195
  %171 = load i64, i64* %s, align 8, !dbg !6023
  %172 = load i8*, i8** %p, align 8, !dbg !6025
  %add.ptr200 = getelementptr inbounds i8, i8* %172, i64 %171, !dbg !6025, !ctir !144
  store i8* %add.ptr200, i8** %p, align 8, !dbg !6025
  %173 = load i8*, i8** %p, align 8, !dbg !6026
  %incdec.ptr201 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !6026, !ctir !144
  store i8* %incdec.ptr201, i8** %p, align 8, !dbg !6026
  store i8 32, i8* %173, align 1, !dbg !6027, !ctir !144
  %174 = load i8*, i8** %p, align 8, !dbg !6028
  store i8 0, i8* %174, align 1, !dbg !6029, !ctir !144
  br label %if.end217, !dbg !6030

if.else202:                                       ; preds = %lor.lhs.false197
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf203, metadata !6031, metadata !DIExpression()), !dbg !6033
  %175 = load i8*, i8** %p, align 8, !dbg !6034
  %call204 = call i32 @long_time_expected_width(), !dbg !6035
  %176 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6036
  %stat_ok205 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %176, i32 0, i32 7, !dbg !6037, !ctir !183
  %177 = load i8, i8* %stat_ok205, align 8, !dbg !6037
  %tobool206 = trunc i8 %177 to i1, !dbg !6037, !ctir !141
  br i1 %tobool206, label %cond.false208, label %cond.true207, !dbg !6038

cond.true207:                                     ; preds = %if.else202
  br label %cond.end212, !dbg !6038

cond.false208:                                    ; preds = %if.else202
  %tv_sec209 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6039, !ctir !213
  %178 = load i64, i64* %tv_sec209, align 8, !dbg !6039, !ctir !164
  %arraydecay210 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf203, i64 0, i64 0, !dbg !6040, !ctir !731
  %call211 = call i8* @timetostr(i64 %178, i8* %arraydecay210), !dbg !6041
  br label %cond.end212, !dbg !6038

cond.end212:                                      ; preds = %cond.false208, %cond.true207
  %cond213 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true207 ], [ %call211, %cond.false208 ], !dbg !6038
  %call214 = call i32 (i8*, i8*, ...) @sprintf(i8* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %call204, i8* %cond213) #13, !dbg !6042
  %179 = load i8*, i8** %p, align 8, !dbg !6043
  %call215 = call i64 @strlen(i8* %179) #16, !dbg !6044
  %180 = load i8*, i8** %p, align 8, !dbg !6045
  %add.ptr216 = getelementptr inbounds i8, i8* %180, i64 %call215, !dbg !6045, !ctir !144
  store i8* %add.ptr216, i8** %p, align 8, !dbg !6045
  br label %if.end217

if.end217:                                        ; preds = %cond.end212, %if.then199
  br label %do.body218, !dbg !6046

do.body218:                                       ; preds = %if.end217
  %arraydecay219 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6047, !ctir !805
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6047
  %call220 = call i32 @fputs_unlocked(i8* %arraydecay219, %struct._IO_FILE* %181), !dbg !6047
  %182 = load i8*, i8** %p, align 8, !dbg !6047
  %arraydecay221 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6047, !ctir !805
  %sub.ptr.lhs.cast222 = ptrtoint i8* %182 to i64, !dbg !6047
  %sub.ptr.rhs.cast223 = ptrtoint i8* %arraydecay221 to i64, !dbg !6047
  %sub.ptr.sub224 = sub i64 %sub.ptr.lhs.cast222, %sub.ptr.rhs.cast223, !dbg !6047
  %183 = load i64, i64* @dired_pos, align 8, !dbg !6047
  %add225 = add i64 %183, %sub.ptr.sub224, !dbg !6047
  store i64 %add225, i64* @dired_pos, align 8, !dbg !6047
  br label %do.end226, !dbg !6047

do.end226:                                        ; preds = %do.body218
  call void @llvm.dbg.declare(metadata i64* %w, metadata !6049, metadata !DIExpression()), !dbg !6050
  %184 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6051
  %185 = load i8*, i8** %p, align 8, !dbg !6052
  %arraydecay227 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6053, !ctir !805
  %sub.ptr.lhs.cast228 = ptrtoint i8* %185 to i64, !dbg !6054
  %sub.ptr.rhs.cast229 = ptrtoint i8* %arraydecay227 to i64, !dbg !6054
  %sub.ptr.sub230 = sub i64 %sub.ptr.lhs.cast228, %sub.ptr.rhs.cast229, !dbg !6054
  %call231 = call i64 @print_name_with_quoting(%struct.fileinfo* %184, i1 zeroext false, %struct.obstack* @dired_obstack, i64 %sub.ptr.sub230), !dbg !6055
  store i64 %call231, i64* %w, align 8, !dbg !6050
  %186 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6056
  %filetype232 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %186, i32 0, i32 4, !dbg !6058, !ctir !183
  %187 = load i32, i32* %filetype232, align 8, !dbg !6058, !ctir !36
  %cmp233 = icmp eq i32 %187, 6, !dbg !6059
  br i1 %cmp233, label %if.then235, label %if.else255, !dbg !6060

if.then235:                                       ; preds = %do.end226
  %188 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6061
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %188, i32 0, i32 1, !dbg !6064, !ctir !183
  %189 = load i8*, i8** %linkname, align 8, !dbg !6064, !ctir !143
  %tobool236 = icmp ne i8* %189, null, !dbg !6061
  br i1 %tobool236, label %if.then237, label %if.end254, !dbg !6065

if.then237:                                       ; preds = %if.then235
  br label %do.body238, !dbg !6066

do.body238:                                       ; preds = %if.then237
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6068
  %call239 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i64 0, i64 0), %struct._IO_FILE* %190), !dbg !6068
  %191 = load i64, i64* @dired_pos, align 8, !dbg !6068
  %add240 = add i64 %191, 4, !dbg !6068
  store i64 %add240, i64* @dired_pos, align 8, !dbg !6068
  br label %do.end241, !dbg !6068

do.end241:                                        ; preds = %do.body238
  %192 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6070
  %193 = load i8*, i8** %p, align 8, !dbg !6071
  %arraydecay242 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6072, !ctir !805
  %sub.ptr.lhs.cast243 = ptrtoint i8* %193 to i64, !dbg !6073
  %sub.ptr.rhs.cast244 = ptrtoint i8* %arraydecay242 to i64, !dbg !6073
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !6073
  %194 = load i64, i64* %w, align 8, !dbg !6074
  %add246 = add i64 %sub.ptr.sub245, %194, !dbg !6075
  %add247 = add i64 %add246, 4, !dbg !6076
  %call248 = call i64 @print_name_with_quoting(%struct.fileinfo* %192, i1 zeroext true, %struct.obstack* null, i64 %add247), !dbg !6077
  %195 = load i32, i32* @indicator_style, align 4, !dbg !6078
  %cmp249 = icmp ne i32 %195, 0, !dbg !6080
  br i1 %cmp249, label %if.then251, label %if.end253, !dbg !6081

if.then251:                                       ; preds = %do.end241
  %196 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6082
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %196, i32 0, i32 5, !dbg !6083, !ctir !183
  %197 = load i32, i32* %linkmode, align 4, !dbg !6083, !ctir !226
  %call252 = call zeroext i1 @print_type_indicator(i1 zeroext true, i32 %197, i32 0), !dbg !6084
  br label %if.end253, !dbg !6084

if.end253:                                        ; preds = %if.then251, %do.end241
  br label %if.end254, !dbg !6085

if.end254:                                        ; preds = %if.end253, %if.then235
  br label %if.end266, !dbg !6086

if.else255:                                       ; preds = %do.end226
  %198 = load i32, i32* @indicator_style, align 4, !dbg !6087
  %cmp256 = icmp ne i32 %198, 0, !dbg !6089
  br i1 %cmp256, label %if.then258, label %if.end265, !dbg !6090

if.then258:                                       ; preds = %if.else255
  %199 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6091
  %stat_ok259 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %199, i32 0, i32 7, !dbg !6092, !ctir !183
  %200 = load i8, i8* %stat_ok259, align 8, !dbg !6092
  %tobool260 = trunc i8 %200 to i1, !dbg !6092, !ctir !141
  %201 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6093
  %stat261 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %201, i32 0, i32 3, !dbg !6094, !ctir !183
  %st_mode262 = getelementptr inbounds %struct.stat, %struct.stat* %stat261, i32 0, i32 3, !dbg !6095, !ctir !190
  %202 = load i32, i32* %st_mode262, align 8, !dbg !6095, !ctir !200
  %203 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6096
  %filetype263 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %203, i32 0, i32 4, !dbg !6097, !ctir !183
  %204 = load i32, i32* %filetype263, align 8, !dbg !6097, !ctir !36
  %call264 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool260, i32 %202, i32 %204), !dbg !6098
  br label %if.end265, !dbg !6098

if.end265:                                        ; preds = %if.then258, %if.else255
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end254
  ret void, !dbg !6099
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @format_inode(i8* %buf, i64 %buflen, %struct.fileinfo* %f) #0 !dbg !6100 {
entry:
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i64, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  store i64 %buflen, i64* %buflen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buflen.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6107, metadata !DIExpression()), !dbg !6108
  %0 = load i64, i64* %buflen.addr, align 8, !dbg !6109
  %cmp = icmp ule i64 21, %0, !dbg !6109
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6109

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6109

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 4012, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.format_inode, i64 0, i64 0)) #15, !dbg !6109
  unreachable, !dbg !6109

1:                                                ; No predecessors!
  br label %cond.end, !dbg !6109

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6110
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 7, !dbg !6111, !ctir !183
  %3 = load i8, i8* %stat_ok, align 8, !dbg !6111
  %tobool = trunc i8 %3 to i1, !dbg !6111, !ctir !141
  br i1 %tobool, label %land.lhs.true, label %cond.false5, !dbg !6112

land.lhs.true:                                    ; preds = %cond.end
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6113
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !6114, !ctir !183
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !6115, !ctir !190
  %5 = load i64, i64* %st_ino, align 8, !dbg !6115, !ctir !196
  %cmp1 = icmp ne i64 %5, 0, !dbg !6116
  br i1 %cmp1, label %cond.true2, label %cond.false5, !dbg !6110

cond.true2:                                       ; preds = %land.lhs.true
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6117
  %stat3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !6118, !ctir !183
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %stat3, i32 0, i32 1, !dbg !6119, !ctir !190
  %7 = load i64, i64* %st_ino4, align 8, !dbg !6119, !ctir !196
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !6120
  %call = call i8* @umaxtostr(i64 %7, i8* %8), !dbg !6121
  br label %cond.end6, !dbg !6110

cond.false5:                                      ; preds = %land.lhs.true, %cond.end
  br label %cond.end6, !dbg !6110

cond.end6:                                        ; preds = %cond.false5, %cond.true2
  %cond = phi i8* [ %call, %cond.true2 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.false5 ], !dbg !6110
  ret i8* %cond, !dbg !6122
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user(i32 %u, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6123 {
entry:
  %u.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %stat_ok.addr = alloca i8, align 1
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6128, metadata !DIExpression()), !dbg !6129
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6130, metadata !DIExpression()), !dbg !6131
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6132
  %tobool = trunc i8 %0 to i1, !dbg !6132
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6133

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6133

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6134
  %tobool1 = trunc i8 %1 to i1, !dbg !6134
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6134

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6134

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %u.addr, align 4, !dbg !6135
  %call = call i8* @getuser(i32 %2), !dbg !6136
  br label %cond.end, !dbg !6134

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6134
  br label %cond.end4, !dbg !6133

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6133
  %3 = load i32, i32* %u.addr, align 4, !dbg !6137
  %conv = zext i32 %3 to i64, !dbg !6137
  %4 = load i32, i32* %width.addr, align 4, !dbg !6138
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6139
  ret void, !dbg !6140
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_group(i32 %g, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6141 {
entry:
  %g.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %stat_ok.addr = alloca i8, align 1
  store i32 %g, i32* %g.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !6144, metadata !DIExpression()), !dbg !6145
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6146, metadata !DIExpression()), !dbg !6147
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6150
  %tobool = trunc i8 %0 to i1, !dbg !6150
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6151

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6151

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6152
  %tobool1 = trunc i8 %1 to i1, !dbg !6152
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6152

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6152

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %g.addr, align 4, !dbg !6153
  %call = call i8* @getgroup(i32 %2), !dbg !6154
  br label %cond.end, !dbg !6152

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6152
  br label %cond.end4, !dbg !6151

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6151
  %3 = load i32, i32* %g.addr, align 4, !dbg !6155
  %conv = zext i32 %3 to i64, !dbg !6155
  %4 = load i32, i32* %width.addr, align 4, !dbg !6156
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6157
  ret void, !dbg !6158
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user_or_group(i8* %name, i64 %id, i32 %width) #0 !dbg !6159 {
entry:
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %width.addr = alloca i32, align 4
  %len = alloca i64, align 8, !ctir !149
  %width_gap = alloca i32, align 4, !ctir !27
  %pad = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6162, metadata !DIExpression()), !dbg !6163
  store i64 %id, i64* %id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6168, metadata !DIExpression()), !dbg !6169
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6170
  %tobool = icmp ne i8* %0, null, !dbg !6170
  br i1 %tobool, label %if.then, label %if.else, !dbg !6172

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %width_gap, metadata !6173, metadata !DIExpression()), !dbg !6175
  %1 = load i32, i32* %width.addr, align 4, !dbg !6176
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6177
  %call = call i32 @gnu_mbswidth(i8* %2, i32 0), !dbg !6178
  %sub = sub nsw i32 %1, %call, !dbg !6179
  store i32 %sub, i32* %width_gap, align 4, !dbg !6175
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6180, metadata !DIExpression()), !dbg !6181
  %3 = load i32, i32* %width_gap, align 4, !dbg !6182
  %cmp = icmp sgt i32 0, %3, !dbg !6182
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6182

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6182

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* %width_gap, align 4, !dbg !6182
  br label %cond.end, !dbg !6182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !6182
  store i32 %cond, i32* %pad, align 4, !dbg !6181
  %5 = load i8*, i8** %name.addr, align 8, !dbg !6183
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6183
  %call1 = call i32 @fputs_unlocked(i8* %5, %struct._IO_FILE* %6), !dbg !6183
  %7 = load i8*, i8** %name.addr, align 8, !dbg !6184
  %call2 = call i64 @strlen(i8* %7) #16, !dbg !6185
  %8 = load i32, i32* %pad, align 4, !dbg !6186
  %conv = sext i32 %8 to i64, !dbg !6186
  %add = add i64 %call2, %conv, !dbg !6187
  store i64 %add, i64* %len, align 8, !dbg !6188
  br label %do.body, !dbg !6189

do.body:                                          ; preds = %do.cond, %cond.end
  %call3 = call i32 @putchar_unlocked(i32 32), !dbg !6190
  br label %do.cond, !dbg !6190

do.cond:                                          ; preds = %do.body
  %9 = load i32, i32* %pad, align 4, !dbg !6191
  %dec = add nsw i32 %9, -1, !dbg !6191
  store i32 %dec, i32* %pad, align 4, !dbg !6191
  %tobool4 = icmp ne i32 %9, 0, !dbg !6190
  br i1 %tobool4, label %do.body, label %do.end, !dbg !6190, !llvm.loop !6192

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !6194

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %width.addr, align 4, !dbg !6195
  %11 = load i64, i64* %id.addr, align 8, !dbg !6197
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i64 0, i64 0), i32 %10, i64 %11), !dbg !6198
  %12 = load i32, i32* %width.addr, align 4, !dbg !6199
  %conv6 = sext i32 %12 to i64, !dbg !6199
  store i64 %conv6, i64* %len, align 8, !dbg !6200
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %13 = load i64, i64* %len, align 8, !dbg !6201
  %add7 = add i64 %13, 1, !dbg !6202
  %14 = load i64, i64* @dired_pos, align 8, !dbg !6203
  %add8 = add i64 %14, %add7, !dbg !6203
  store i64 %add8, i64* @dired_pos, align 8, !dbg !6203
  ret void, !dbg !6204
}

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_major(i64) #7

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_minor(i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @unsigned_file_size(i64 %size) #0 !dbg !6205 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  %0 = load i64, i64* %size.addr, align 8, !dbg !6210
  %1 = load i64, i64* %size.addr, align 8, !dbg !6211
  %cmp = icmp slt i64 %1, 0, !dbg !6212
  %conv = zext i1 %cmp to i32, !dbg !6212
  %conv1 = sext i32 %conv to i64, !dbg !6213
  %mul = mul i64 %conv1, 0, !dbg !6214
  %add = add i64 %0, %mul, !dbg !6215
  ret i64 %add, !dbg !6216
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @align_nstrftime(i8* %buf, i64 %size, i1 zeroext %recent, %struct.tm* %tm, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !6217 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %recent.addr = alloca i8, align 1
  %tm.addr = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %nfmt = alloca i8*, align 8, !ctir !146
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6222, metadata !DIExpression()), !dbg !6223
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6224, metadata !DIExpression()), !dbg !6225
  %frombool = zext i1 %recent to i8
  store i8 %frombool, i8* %recent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recent.addr, metadata !6226, metadata !DIExpression()), !dbg !6227
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !6228, metadata !DIExpression()), !dbg !6229
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  store i32 %ns, i32* %ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !6232, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !6234, metadata !DIExpression()), !dbg !6235
  %0 = load i8, i8* @use_abformat, align 1, !dbg !6236
  %tobool = trunc i8 %0 to i1, !dbg !6236
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6236

cond.true:                                        ; preds = %entry
  %1 = load i8, i8* %recent.addr, align 1, !dbg !6237
  %tobool1 = trunc i8 %1 to i1, !dbg !6237
  %idxprom = zext i1 %tobool1 to i64, !dbg !6238
  %arrayidx = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom, !dbg !6238, !ctir !691
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6239
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 4, !dbg !6240, !ctir !6221
  %3 = load i32, i32* %tm_mon, align 8, !dbg !6240, !ctir !27
  %idxprom2 = sext i32 %3 to i64, !dbg !6238
  %arrayidx3 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx, i64 0, i64 %idxprom2, !dbg !6238, !ctir !688
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx3, i64 0, i64 0, !dbg !6238, !ctir !693
  br label %cond.end, !dbg !6236

cond.false:                                       ; preds = %entry
  %4 = load i8, i8* %recent.addr, align 1, !dbg !6241
  %tobool4 = trunc i8 %4 to i1, !dbg !6241
  %idxprom5 = zext i1 %tobool4 to i64, !dbg !6242
  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom5, !dbg !6242, !ctir !674
  %5 = load i8*, i8** %arrayidx6, align 8, !dbg !6242
  br label %cond.end, !dbg !6236

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %5, %cond.false ], !dbg !6236
  store i8* %cond, i8** %nfmt, align 8, !dbg !6235
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6243
  %7 = load i64, i64* %size.addr, align 8, !dbg !6244
  %8 = load i8*, i8** %nfmt, align 8, !dbg !6245
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6246
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !6247
  %11 = load i32, i32* %ns.addr, align 4, !dbg !6248
  %call = call i64 @nstrftime(i8* %6, i64 %7, i8* %8, %struct.tm* %9, %struct.tm_zone* %10, i32 %11), !dbg !6249
  ret i64 %call, !dbg !6250
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @long_time_expected_width() #0 !dbg !1068 {
entry:
  %epoch = alloca i64, align 8, !ctir !162
  %tm = alloca %struct.tm, align 8, !ctir !5669
  %buf = alloca [1001 x i8], align 16, !ctir !809
  %len = alloca i64, align 8, !ctir !149
  %0 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6251
  %cmp = icmp slt i32 %0, 0, !dbg !6253
  br i1 %cmp, label %if.then, label %if.end11, !dbg !6254

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %epoch, metadata !6255, metadata !DIExpression()), !dbg !6257
  store i64 0, i64* %epoch, align 8, !dbg !6257
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !6258, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.declare(metadata [1001 x i8]* %buf, metadata !6260, metadata !DIExpression()), !dbg !6261
  %1 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6262
  %call = call %struct.tm* @localtime_rz(%struct.tm_zone* %1, i64* %epoch, %struct.tm* %tm), !dbg !6264
  %tobool = icmp ne %struct.tm* %call, null, !dbg !6264
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !6265

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6266, metadata !DIExpression()), !dbg !6268
  %arraydecay = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6269, !ctir !809
  %2 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6270
  %call2 = call i64 @align_nstrftime(i8* %arraydecay, i64 1001, i1 zeroext false, %struct.tm* %tm, %struct.tm_zone* %2, i32 0), !dbg !6271
  store i64 %call2, i64* %len, align 8, !dbg !6268
  %3 = load i64, i64* %len, align 8, !dbg !6272
  %cmp3 = icmp ne i64 %3, 0, !dbg !6274
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6275

if.then4:                                         ; preds = %if.then1
  %arraydecay5 = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6276, !ctir !809
  %4 = load i64, i64* %len, align 8, !dbg !6277
  %call6 = call i32 @mbsnwidth(i8* %arraydecay5, i64 %4, i32 0), !dbg !6278
  store i32 %call6, i32* @long_time_expected_width.width, align 4, !dbg !6279
  br label %if.end, !dbg !6280

if.end:                                           ; preds = %if.then4, %if.then1
  br label %if.end7, !dbg !6281

if.end7:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6282
  %cmp8 = icmp slt i32 %5, 0, !dbg !6284
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !6285

if.then9:                                         ; preds = %if.end7
  store i32 0, i32* @long_time_expected_width.width, align 4, !dbg !6286
  br label %if.end10, !dbg !6287

if.end10:                                         ; preds = %if.then9, %if.end7
  br label %if.end11, !dbg !6288

if.end11:                                         ; preds = %if.end10, %entry
  %6 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6289
  ret i32 %6, !dbg !6290
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64 %t, i8* %buf) #0 !dbg !6291 {
entry:
  %t.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  store i64 %t, i64* %t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %t.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  %0 = load i64, i64* %t.addr, align 8, !dbg !6298
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6299
  %call = call i8* @imaxtostr(i64 %0, i8* %1), !dbg !6300
  ret i8* %call, !dbg !6301
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_name_with_quoting(%struct.fileinfo* %f, i1 zeroext %symlink_target, %struct.obstack* %stack, i64 %start_col) #0 !dbg !6302 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %symlink_target.addr = alloca i8, align 1
  %stack.addr = alloca %struct.obstack*, align 8
  %start_col.addr = alloca i64, align 8
  %name = alloca i8*, align 8, !ctir !146
  %color = alloca %struct.bin_str*, align 8, !ctir !793
  %used_color_this_time = alloca i8, align 1, !ctir !141
  %len = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !6307, metadata !DIExpression()), !dbg !6308
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store i64 %start_col, i64* %start_col.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6313, metadata !DIExpression()), !dbg !6314
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !6315
  %tobool = trunc i8 %0 to i1, !dbg !6315
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6315

cond.true:                                        ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6316
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !6317, !ctir !183
  %2 = load i8*, i8** %linkname, align 8, !dbg !6317, !ctir !143
  br label %cond.end, !dbg !6315

cond.false:                                       ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6318
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !6319, !ctir !183
  %4 = load i8*, i8** %name1, align 8, !dbg !6319, !ctir !143
  br label %cond.end, !dbg !6315

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6315
  store i8* %cond, i8** %name, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color, metadata !6320, metadata !DIExpression()), !dbg !6321
  %5 = load i8, i8* @print_with_color, align 1, !dbg !6322
  %tobool2 = trunc i8 %5 to i1, !dbg !6322
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !6322

cond.true3:                                       ; preds = %cond.end
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6323
  %7 = load i8, i8* %symlink_target.addr, align 1, !dbg !6324
  %tobool4 = trunc i8 %7 to i1, !dbg !6324
  %call = call %struct.bin_str* @get_color_indicator(%struct.fileinfo* %6, i1 zeroext %tobool4), !dbg !6325
  br label %cond.end6, !dbg !6322

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !6322

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.bin_str* [ %call, %cond.true3 ], [ null, %cond.false5 ], !dbg !6322
  store %struct.bin_str* %cond7, %struct.bin_str** %color, align 8, !dbg !6321
  call void @llvm.dbg.declare(metadata i8* %used_color_this_time, metadata !6326, metadata !DIExpression()), !dbg !6327
  %8 = load i8, i8* @print_with_color, align 1, !dbg !6328
  %tobool8 = trunc i8 %8 to i1, !dbg !6328
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !6329

land.rhs:                                         ; preds = %cond.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6330
  %tobool9 = icmp ne %struct.bin_str* %9, null, !dbg !6330
  br i1 %tobool9, label %lor.end, label %lor.rhs, !dbg !6331

lor.rhs:                                          ; preds = %land.rhs
  %call10 = call zeroext i1 @is_colored(i32 4), !dbg !6332
  br label %lor.end, !dbg !6331

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %call10, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.end6
  %11 = phi i1 [ false, %cond.end6 ], [ %10, %lor.end ], !dbg !6333
  %frombool11 = zext i1 %11 to i8, !dbg !6327
  store i8 %frombool11, i8* %used_color_this_time, align 1, !dbg !6327
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6334, metadata !DIExpression()), !dbg !6335
  %12 = load i8*, i8** %name, align 8, !dbg !6336
  %13 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !6337
  %14 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6338
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 11, !dbg !6339, !ctir !183
  %15 = load i32, i32* %quoted, align 4, !dbg !6339, !ctir !27
  %16 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6340
  %17 = load i8, i8* %symlink_target.addr, align 1, !dbg !6341
  %tobool12 = trunc i8 %17 to i1, !dbg !6341
  %lnot = xor i1 %tobool12, true, !dbg !6342
  %18 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !6343
  %19 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6344
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %19, i32 0, i32 2, !dbg !6345, !ctir !183
  %20 = load i8*, i8** %absolute_name, align 8, !dbg !6345, !ctir !143
  %call13 = call i64 @quote_name(i8* %12, %struct.quoting_options* %13, i32 %15, %struct.bin_str* %16, i1 zeroext %lnot, %struct.obstack* %18, i8* %20), !dbg !6346
  store i64 %call13, i64* %len, align 8, !dbg !6335
  call void @process_signals(), !dbg !6347
  %21 = load i8, i8* %used_color_this_time, align 1, !dbg !6348
  %tobool14 = trunc i8 %21 to i1, !dbg !6348
  br i1 %tobool14, label %if.then, label %if.end18, !dbg !6350

if.then:                                          ; preds = %land.end
  call void @prep_non_filename_text(), !dbg !6351
  %22 = load i64, i64* @line_length, align 8, !dbg !6353
  %tobool15 = icmp ne i64 %22, 0, !dbg !6353
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !6355

land.lhs.true:                                    ; preds = %if.then
  %23 = load i64, i64* %start_col.addr, align 8, !dbg !6356
  %24 = load i64, i64* @line_length, align 8, !dbg !6357
  %div = udiv i64 %23, %24, !dbg !6358
  %25 = load i64, i64* %start_col.addr, align 8, !dbg !6359
  %26 = load i64, i64* %len, align 8, !dbg !6360
  %add = add i64 %25, %26, !dbg !6361
  %sub = sub i64 %add, 1, !dbg !6362
  %27 = load i64, i64* @line_length, align 8, !dbg !6363
  %div16 = udiv i64 %sub, %27, !dbg !6364
  %cmp = icmp ne i64 %div, %div16, !dbg !6365
  br i1 %cmp, label %if.then17, label %if.end, !dbg !6366

if.then17:                                        ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 23)), !dbg !6367
  br label %if.end, !dbg !6367

if.end:                                           ; preds = %if.then17, %land.lhs.true, %if.then
  br label %if.end18, !dbg !6368

if.end18:                                         ; preds = %if.end, %land.end
  %28 = load i64, i64* %len, align 8, !dbg !6369
  ret i64 %28, !dbg !6370
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6371 {
entry:
  %stat_ok.addr = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6378, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6380, metadata !DIExpression()), !dbg !6381
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6382
  %tobool = trunc i8 %0 to i1, !dbg !6382
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6383
  %2 = load i32, i32* %type.addr, align 4, !dbg !6384
  %call = call signext i8 @get_type_indicator(i1 zeroext %tobool, i32 %1, i32 %2), !dbg !6385
  store i8 %call, i8* %c, align 1, !dbg !6381
  %3 = load i8, i8* %c, align 1, !dbg !6386
  %tobool1 = icmp ne i8 %3, 0, !dbg !6386
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6388

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6389

do.body:                                          ; preds = %if.then
  %4 = load i8, i8* %c, align 1, !dbg !6390
  %conv = sext i8 %4 to i32, !dbg !6390
  %call2 = call i32 @putchar_unlocked(i32 %conv), !dbg !6390
  %5 = load i64, i64* @dired_pos, align 8, !dbg !6390
  %inc = add i64 %5, 1, !dbg !6390
  store i64 %inc, i64* @dired_pos, align 8, !dbg !6390
  br label %do.end, !dbg !6390

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !6390

if.end:                                           ; preds = %do.end, %entry
  %6 = load i8, i8* %c, align 1, !dbg !6392
  %tobool3 = icmp ne i8 %6, 0, !dbg !6393
  %lnot = xor i1 %tobool3, true, !dbg !6393
  %lnot4 = xor i1 %lnot, true, !dbg !6394
  ret i1 %lnot4, !dbg !6395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @get_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6396 {
entry:
  %stat_ok.addr = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6399, metadata !DIExpression()), !dbg !6400
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6403, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6405, metadata !DIExpression()), !dbg !6406
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6407
  %tobool = trunc i8 %0 to i1, !dbg !6407
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6409

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6410
  %and = and i32 %1, 61440, !dbg !6410
  %cmp = icmp eq i32 %and, 32768, !dbg !6410
  br i1 %cmp, label %if.then, label %if.else8, !dbg !6407

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !6411
  %cmp1 = icmp eq i32 %2, 5, !dbg !6412
  br i1 %cmp1, label %if.then, label %if.else8, !dbg !6409

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load i8, i8* %stat_ok.addr, align 1, !dbg !6413
  %tobool2 = trunc i8 %3 to i1, !dbg !6413
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !6416

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* @indicator_style, align 4, !dbg !6417
  %cmp3 = icmp eq i32 %4, 3, !dbg !6418
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !6419

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load i32, i32* %mode.addr, align 4, !dbg !6420
  %and5 = and i32 %5, 73, !dbg !6421
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6421
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !6422

if.then7:                                         ; preds = %land.lhs.true4
  store i8 42, i8* %c, align 1, !dbg !6423
  br label %if.end, !dbg !6424

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.then
  store i8 0, i8* %c, align 1, !dbg !6425
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end55, !dbg !6426

if.else8:                                         ; preds = %cond.false, %cond.true
  %6 = load i8, i8* %stat_ok.addr, align 1, !dbg !6427
  %tobool9 = trunc i8 %6 to i1, !dbg !6427
  br i1 %tobool9, label %cond.true10, label %cond.false13, !dbg !6430

cond.true10:                                      ; preds = %if.else8
  %7 = load i32, i32* %mode.addr, align 4, !dbg !6431
  %and11 = and i32 %7, 61440, !dbg !6431
  %cmp12 = icmp eq i32 %and11, 16384, !dbg !6431
  br i1 %cmp12, label %if.then16, label %if.else17, !dbg !6427

cond.false13:                                     ; preds = %if.else8
  %8 = load i32, i32* %type.addr, align 4, !dbg !6432
  %cmp14 = icmp eq i32 %8, 3, !dbg !6433
  br i1 %cmp14, label %if.then16, label %lor.lhs.false, !dbg !6434

lor.lhs.false:                                    ; preds = %cond.false13
  %9 = load i32, i32* %type.addr, align 4, !dbg !6435
  %cmp15 = icmp eq i32 %9, 9, !dbg !6436
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !6430

if.then16:                                        ; preds = %lor.lhs.false, %cond.false13, %cond.true10
  store i8 47, i8* %c, align 1, !dbg !6437
  br label %if.end54, !dbg !6438

if.else17:                                        ; preds = %lor.lhs.false, %cond.true10
  %10 = load i32, i32* @indicator_style, align 4, !dbg !6439
  %cmp18 = icmp eq i32 %10, 1, !dbg !6441
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !6442

if.then19:                                        ; preds = %if.else17
  store i8 0, i8* %c, align 1, !dbg !6443
  br label %if.end53, !dbg !6444

if.else20:                                        ; preds = %if.else17
  %11 = load i8, i8* %stat_ok.addr, align 1, !dbg !6445
  %tobool21 = trunc i8 %11 to i1, !dbg !6445
  br i1 %tobool21, label %cond.true22, label %cond.false25, !dbg !6447

cond.true22:                                      ; preds = %if.else20
  %12 = load i32, i32* %mode.addr, align 4, !dbg !6448
  %and23 = and i32 %12, 61440, !dbg !6448
  %cmp24 = icmp eq i32 %and23, 40960, !dbg !6448
  br i1 %cmp24, label %if.then27, label %if.else28, !dbg !6445

cond.false25:                                     ; preds = %if.else20
  %13 = load i32, i32* %type.addr, align 4, !dbg !6449
  %cmp26 = icmp eq i32 %13, 6, !dbg !6450
  br i1 %cmp26, label %if.then27, label %if.else28, !dbg !6447

if.then27:                                        ; preds = %cond.false25, %cond.true22
  store i8 64, i8* %c, align 1, !dbg !6451
  br label %if.end52, !dbg !6452

if.else28:                                        ; preds = %cond.false25, %cond.true22
  %14 = load i8, i8* %stat_ok.addr, align 1, !dbg !6453
  %tobool29 = trunc i8 %14 to i1, !dbg !6453
  br i1 %tobool29, label %cond.true30, label %cond.false33, !dbg !6455

cond.true30:                                      ; preds = %if.else28
  %15 = load i32, i32* %mode.addr, align 4, !dbg !6456
  %and31 = and i32 %15, 61440, !dbg !6456
  %cmp32 = icmp eq i32 %and31, 4096, !dbg !6456
  br i1 %cmp32, label %if.then35, label %if.else36, !dbg !6453

cond.false33:                                     ; preds = %if.else28
  %16 = load i32, i32* %type.addr, align 4, !dbg !6457
  %cmp34 = icmp eq i32 %16, 1, !dbg !6458
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !6455

if.then35:                                        ; preds = %cond.false33, %cond.true30
  store i8 124, i8* %c, align 1, !dbg !6459
  br label %if.end51, !dbg !6460

if.else36:                                        ; preds = %cond.false33, %cond.true30
  %17 = load i8, i8* %stat_ok.addr, align 1, !dbg !6461
  %tobool37 = trunc i8 %17 to i1, !dbg !6461
  br i1 %tobool37, label %cond.true38, label %cond.false41, !dbg !6463

cond.true38:                                      ; preds = %if.else36
  %18 = load i32, i32* %mode.addr, align 4, !dbg !6464
  %and39 = and i32 %18, 61440, !dbg !6464
  %cmp40 = icmp eq i32 %and39, 49152, !dbg !6464
  br i1 %cmp40, label %if.then43, label %if.else44, !dbg !6461

cond.false41:                                     ; preds = %if.else36
  %19 = load i32, i32* %type.addr, align 4, !dbg !6465
  %cmp42 = icmp eq i32 %19, 7, !dbg !6466
  br i1 %cmp42, label %if.then43, label %if.else44, !dbg !6463

if.then43:                                        ; preds = %cond.false41, %cond.true38
  store i8 61, i8* %c, align 1, !dbg !6467
  br label %if.end50, !dbg !6468

if.else44:                                        ; preds = %cond.false41, %cond.true38
  %20 = load i8, i8* %stat_ok.addr, align 1, !dbg !6469
  %tobool45 = trunc i8 %20 to i1, !dbg !6469
  br i1 %tobool45, label %land.lhs.true46, label %if.else48, !dbg !6471

land.lhs.true46:                                  ; preds = %if.else44
  br i1 false, label %if.then47, label %if.else48, !dbg !6472

if.then47:                                        ; preds = %land.lhs.true46
  store i8 62, i8* %c, align 1, !dbg !6473
  br label %if.end49, !dbg !6474

if.else48:                                        ; preds = %land.lhs.true46, %if.else44
  store i8 0, i8* %c, align 1, !dbg !6475
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then43
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then35
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then27
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then19
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then16
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end
  %21 = load i8, i8* %c, align 1, !dbg !6476
  ret i8 %21, !dbg !6477
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.bin_str* @get_color_indicator(%struct.fileinfo* %f, i1 zeroext %symlink_target) #0 !dbg !1056 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %symlink_target.addr = alloca i8, align 1
  %type = alloca i32, align 4, !ctir !53
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !698
  %len = alloca i64, align 8, !ctir !149
  %name = alloca i8*, align 8, !ctir !146
  %mode = alloca i32, align 4, !ctir !226
  %linkok = alloca i32, align 4, !ctir !27
  %s = alloca %struct.bin_str*, align 8, !ctir !796
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6488, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !6490, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %linkok, metadata !6492, metadata !DIExpression()), !dbg !6493
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !6494
  %tobool = trunc i8 %0 to i1, !dbg !6494
  br i1 %tobool, label %if.then, label %if.else, !dbg !6496

if.then:                                          ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6497
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !6499, !ctir !183
  %2 = load i8*, i8** %linkname, align 8, !dbg !6499, !ctir !143
  store i8* %2, i8** %name, align 8, !dbg !6500
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6501
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 5, !dbg !6502, !ctir !183
  %4 = load i32, i32* %linkmode, align 4, !dbg !6502, !ctir !226
  store i32 %4, i32* %mode, align 4, !dbg !6503
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6504
  %linkok1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 8, !dbg !6505, !ctir !183
  %6 = load i8, i8* %linkok1, align 1, !dbg !6505
  %tobool2 = trunc i8 %6 to i1, !dbg !6505, !ctir !141
  %7 = zext i1 %tobool2 to i64, !dbg !6504
  %cond = select i1 %tobool2, i32 0, i32 -1, !dbg !6504
  store i32 %cond, i32* %linkok, align 4, !dbg !6506
  br label %if.end, !dbg !6507

if.else:                                          ; preds = %entry
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6508
  %name3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 0, !dbg !6510, !ctir !183
  %9 = load i8*, i8** %name3, align 8, !dbg !6510, !ctir !143
  store i8* %9, i8** %name, align 8, !dbg !6511
  %10 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !6512
  %tobool4 = trunc i8 %10 to i1, !dbg !6512
  br i1 %tobool4, label %land.lhs.true, label %cond.false, !dbg !6512

land.lhs.true:                                    ; preds = %if.else
  %11 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6512
  %linkok5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 8, !dbg !6512, !ctir !183
  %12 = load i8, i8* %linkok5, align 1, !dbg !6512
  %tobool6 = trunc i8 %12 to i1, !dbg !6512, !ctir !141
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !6512

cond.true:                                        ; preds = %land.lhs.true
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6512
  %linkmode7 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 5, !dbg !6512, !ctir !183
  %14 = load i32, i32* %linkmode7, align 4, !dbg !6512, !ctir !226
  br label %cond.end, !dbg !6512

cond.false:                                       ; preds = %land.lhs.true, %if.else
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6512
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 3, !dbg !6512, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 3, !dbg !6512, !ctir !190
  %16 = load i32, i32* %st_mode, align 8, !dbg !6512, !ctir !200
  br label %cond.end, !dbg !6512

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i32 [ %14, %cond.true ], [ %16, %cond.false ], !dbg !6512
  store i32 %cond8, i32* %mode, align 4, !dbg !6513
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6514
  %linkok9 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 8, !dbg !6515, !ctir !183
  %18 = load i8, i8* %linkok9, align 1, !dbg !6515
  %tobool10 = trunc i8 %18 to i1, !dbg !6515, !ctir !141
  %conv = zext i1 %tobool10 to i32, !dbg !6514
  store i32 %conv, i32* %linkok, align 4, !dbg !6516
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %19 = load i32, i32* %linkok, align 4, !dbg !6517
  %cmp = icmp eq i32 %19, -1, !dbg !6519
  br i1 %cmp, label %land.lhs.true12, label %if.else15, !dbg !6520

land.lhs.true12:                                  ; preds = %if.end
  %call = call zeroext i1 @is_colored(i32 12), !dbg !6521
  br i1 %call, label %if.then14, label %if.else15, !dbg !6522

if.then14:                                        ; preds = %land.lhs.true12
  store i32 12, i32* %type, align 4, !dbg !6523
  br label %if.end132, !dbg !6524

if.else15:                                        ; preds = %land.lhs.true12, %if.end
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6525
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 7, !dbg !6527, !ctir !183
  %21 = load i8, i8* %stat_ok, align 8, !dbg !6527
  %tobool16 = trunc i8 %21 to i1, !dbg !6527, !ctir !141
  br i1 %tobool16, label %if.else18, label %if.then17, !dbg !6528

if.then17:                                        ; preds = %if.else15
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6529
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 4, !dbg !6531, !ctir !183
  %23 = load i32, i32* %filetype, align 8, !dbg !6531, !ctir !36
  %idxprom = zext i32 %23 to i64, !dbg !6532
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @get_color_indicator.filetype_indicator, i64 0, i64 %idxprom, !dbg !6532, !ctir !795
  %24 = load i32, i32* %arrayidx, align 4, !dbg !6532
  store i32 %24, i32* %type, align 4, !dbg !6533
  br label %if.end131, !dbg !6534

if.else18:                                        ; preds = %if.else15
  %25 = load i32, i32* %mode, align 4, !dbg !6535
  %and = and i32 %25, 61440, !dbg !6535
  %cmp19 = icmp eq i32 %and, 32768, !dbg !6535
  br i1 %cmp19, label %if.then21, label %if.else65, !dbg !6538

if.then21:                                        ; preds = %if.else18
  store i32 5, i32* %type, align 4, !dbg !6539
  %26 = load i32, i32* %mode, align 4, !dbg !6541
  %and22 = and i32 %26, 2048, !dbg !6543
  %cmp23 = icmp ne i32 %and22, 0, !dbg !6544
  br i1 %cmp23, label %land.lhs.true25, label %if.else29, !dbg !6545

land.lhs.true25:                                  ; preds = %if.then21
  %call26 = call zeroext i1 @is_colored(i32 16), !dbg !6546
  br i1 %call26, label %if.then28, label %if.else29, !dbg !6547

if.then28:                                        ; preds = %land.lhs.true25
  store i32 16, i32* %type, align 4, !dbg !6548
  br label %if.end64, !dbg !6549

if.else29:                                        ; preds = %land.lhs.true25, %if.then21
  %27 = load i32, i32* %mode, align 4, !dbg !6550
  %and30 = and i32 %27, 1024, !dbg !6552
  %cmp31 = icmp ne i32 %and30, 0, !dbg !6553
  br i1 %cmp31, label %land.lhs.true33, label %if.else37, !dbg !6554

land.lhs.true33:                                  ; preds = %if.else29
  %call34 = call zeroext i1 @is_colored(i32 17), !dbg !6555
  br i1 %call34, label %if.then36, label %if.else37, !dbg !6556

if.then36:                                        ; preds = %land.lhs.true33
  store i32 17, i32* %type, align 4, !dbg !6557
  br label %if.end63, !dbg !6558

if.else37:                                        ; preds = %land.lhs.true33, %if.else29
  %call38 = call zeroext i1 @is_colored(i32 21), !dbg !6559
  br i1 %call38, label %land.lhs.true40, label %if.else44, !dbg !6561

land.lhs.true40:                                  ; preds = %if.else37
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6562
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 10, !dbg !6563, !ctir !183
  %29 = load i8, i8* %has_capability, align 8, !dbg !6563
  %tobool41 = trunc i8 %29 to i1, !dbg !6563, !ctir !141
  br i1 %tobool41, label %if.then43, label %if.else44, !dbg !6564

if.then43:                                        ; preds = %land.lhs.true40
  store i32 21, i32* %type, align 4, !dbg !6565
  br label %if.end62, !dbg !6566

if.else44:                                        ; preds = %land.lhs.true40, %if.else37
  %30 = load i32, i32* %mode, align 4, !dbg !6567
  %and45 = and i32 %30, 73, !dbg !6569
  %cmp46 = icmp ne i32 %and45, 0, !dbg !6570
  br i1 %cmp46, label %land.lhs.true48, label %if.else52, !dbg !6571

land.lhs.true48:                                  ; preds = %if.else44
  %call49 = call zeroext i1 @is_colored(i32 14), !dbg !6572
  br i1 %call49, label %if.then51, label %if.else52, !dbg !6573

if.then51:                                        ; preds = %land.lhs.true48
  store i32 14, i32* %type, align 4, !dbg !6574
  br label %if.end61, !dbg !6575

if.else52:                                        ; preds = %land.lhs.true48, %if.else44
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6576
  %stat53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !6578, !ctir !183
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat53, i32 0, i32 2, !dbg !6579, !ctir !190
  %32 = load i64, i64* %st_nlink, align 8, !dbg !6579, !ctir !198
  %cmp54 = icmp ult i64 1, %32, !dbg !6580
  br i1 %cmp54, label %land.lhs.true56, label %if.end60, !dbg !6581

land.lhs.true56:                                  ; preds = %if.else52
  %call57 = call zeroext i1 @is_colored(i32 22), !dbg !6582
  br i1 %call57, label %if.then59, label %if.end60, !dbg !6583

if.then59:                                        ; preds = %land.lhs.true56
  store i32 22, i32* %type, align 4, !dbg !6584
  br label %if.end60, !dbg !6585

if.end60:                                         ; preds = %if.then59, %land.lhs.true56, %if.else52
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then51
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then43
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then36
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then28
  br label %if.end130, !dbg !6586

if.else65:                                        ; preds = %if.else18
  %33 = load i32, i32* %mode, align 4, !dbg !6587
  %and66 = and i32 %33, 61440, !dbg !6587
  %cmp67 = icmp eq i32 %and66, 16384, !dbg !6587
  br i1 %cmp67, label %if.then69, label %if.else98, !dbg !6589

if.then69:                                        ; preds = %if.else65
  store i32 6, i32* %type, align 4, !dbg !6590
  %34 = load i32, i32* %mode, align 4, !dbg !6592
  %and70 = and i32 %34, 512, !dbg !6594
  %tobool71 = icmp ne i32 %and70, 0, !dbg !6594
  br i1 %tobool71, label %land.lhs.true72, label %if.else79, !dbg !6595

land.lhs.true72:                                  ; preds = %if.then69
  %35 = load i32, i32* %mode, align 4, !dbg !6596
  %and73 = and i32 %35, 2, !dbg !6597
  %tobool74 = icmp ne i32 %and73, 0, !dbg !6597
  br i1 %tobool74, label %land.lhs.true75, label %if.else79, !dbg !6598

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %call76 = call zeroext i1 @is_colored(i32 20), !dbg !6599
  br i1 %call76, label %if.then78, label %if.else79, !dbg !6600

if.then78:                                        ; preds = %land.lhs.true75
  store i32 20, i32* %type, align 4, !dbg !6601
  br label %if.end97, !dbg !6602

if.else79:                                        ; preds = %land.lhs.true75, %land.lhs.true72, %if.then69
  %36 = load i32, i32* %mode, align 4, !dbg !6603
  %and80 = and i32 %36, 2, !dbg !6605
  %cmp81 = icmp ne i32 %and80, 0, !dbg !6606
  br i1 %cmp81, label %land.lhs.true83, label %if.else87, !dbg !6607

land.lhs.true83:                                  ; preds = %if.else79
  %call84 = call zeroext i1 @is_colored(i32 19), !dbg !6608
  br i1 %call84, label %if.then86, label %if.else87, !dbg !6609

if.then86:                                        ; preds = %land.lhs.true83
  store i32 19, i32* %type, align 4, !dbg !6610
  br label %if.end96, !dbg !6611

if.else87:                                        ; preds = %land.lhs.true83, %if.else79
  %37 = load i32, i32* %mode, align 4, !dbg !6612
  %and88 = and i32 %37, 512, !dbg !6614
  %cmp89 = icmp ne i32 %and88, 0, !dbg !6615
  br i1 %cmp89, label %land.lhs.true91, label %if.end95, !dbg !6616

land.lhs.true91:                                  ; preds = %if.else87
  %call92 = call zeroext i1 @is_colored(i32 18), !dbg !6617
  br i1 %call92, label %if.then94, label %if.end95, !dbg !6618

if.then94:                                        ; preds = %land.lhs.true91
  store i32 18, i32* %type, align 4, !dbg !6619
  br label %if.end95, !dbg !6620

if.end95:                                         ; preds = %if.then94, %land.lhs.true91, %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then86
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then78
  br label %if.end129, !dbg !6621

if.else98:                                        ; preds = %if.else65
  %38 = load i32, i32* %mode, align 4, !dbg !6622
  %and99 = and i32 %38, 61440, !dbg !6622
  %cmp100 = icmp eq i32 %and99, 40960, !dbg !6622
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !6624

if.then102:                                       ; preds = %if.else98
  store i32 7, i32* %type, align 4, !dbg !6625
  br label %if.end128, !dbg !6626

if.else103:                                       ; preds = %if.else98
  %39 = load i32, i32* %mode, align 4, !dbg !6627
  %and104 = and i32 %39, 61440, !dbg !6627
  %cmp105 = icmp eq i32 %and104, 4096, !dbg !6627
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !6629

if.then107:                                       ; preds = %if.else103
  store i32 8, i32* %type, align 4, !dbg !6630
  br label %if.end127, !dbg !6631

if.else108:                                       ; preds = %if.else103
  %40 = load i32, i32* %mode, align 4, !dbg !6632
  %and109 = and i32 %40, 61440, !dbg !6632
  %cmp110 = icmp eq i32 %and109, 49152, !dbg !6632
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !6634

if.then112:                                       ; preds = %if.else108
  store i32 9, i32* %type, align 4, !dbg !6635
  br label %if.end126, !dbg !6636

if.else113:                                       ; preds = %if.else108
  %41 = load i32, i32* %mode, align 4, !dbg !6637
  %and114 = and i32 %41, 61440, !dbg !6637
  %cmp115 = icmp eq i32 %and114, 24576, !dbg !6637
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !6639

if.then117:                                       ; preds = %if.else113
  store i32 10, i32* %type, align 4, !dbg !6640
  br label %if.end125, !dbg !6641

if.else118:                                       ; preds = %if.else113
  %42 = load i32, i32* %mode, align 4, !dbg !6642
  %and119 = and i32 %42, 61440, !dbg !6642
  %cmp120 = icmp eq i32 %and119, 8192, !dbg !6642
  br i1 %cmp120, label %if.then122, label %if.else123, !dbg !6644

if.then122:                                       ; preds = %if.else118
  store i32 11, i32* %type, align 4, !dbg !6645
  br label %if.end124, !dbg !6646

if.else123:                                       ; preds = %if.else118
  store i32 13, i32* %type, align 4, !dbg !6647
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then117
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then112
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then107
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then102
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end97
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end64
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then17
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then14
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !6650
  %43 = load i32, i32* %type, align 4, !dbg !6651
  %cmp133 = icmp eq i32 %43, 5, !dbg !6653
  br i1 %cmp133, label %if.then135, label %if.end155, !dbg !6654

if.then135:                                       ; preds = %if.end132
  %44 = load i8*, i8** %name, align 8, !dbg !6655
  %call136 = call i64 @strlen(i8* %44) #16, !dbg !6657
  store i64 %call136, i64* %len, align 8, !dbg !6658
  %45 = load i64, i64* %len, align 8, !dbg !6659
  %46 = load i8*, i8** %name, align 8, !dbg !6660
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !6660, !ctir !147
  store i8* %add.ptr, i8** %name, align 8, !dbg !6660
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !6661
  store %struct.color_ext_type* %47, %struct.color_ext_type** %ext, align 8, !dbg !6663
  br label %for.cond, !dbg !6664

for.cond:                                         ; preds = %for.inc, %if.then135
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6665
  %cmp137 = icmp ne %struct.color_ext_type* %48, null, !dbg !6667
  br i1 %cmp137, label %for.body, label %for.end, !dbg !6668

for.body:                                         ; preds = %for.cond
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6669
  %ext139 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %49, i32 0, i32 0, !dbg !6672, !ctir !699
  %len140 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext139, i32 0, i32 0, !dbg !6673, !ctir !280
  %50 = load i64, i64* %len140, align 8, !dbg !6673, !ctir !149
  %51 = load i64, i64* %len, align 8, !dbg !6674
  %cmp141 = icmp ule i64 %50, %51, !dbg !6675
  br i1 %cmp141, label %land.lhs.true143, label %if.end154, !dbg !6676

land.lhs.true143:                                 ; preds = %for.body
  %52 = load i8*, i8** %name, align 8, !dbg !6677
  %53 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6678
  %ext144 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %53, i32 0, i32 0, !dbg !6679, !ctir !699
  %len145 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext144, i32 0, i32 0, !dbg !6680, !ctir !280
  %54 = load i64, i64* %len145, align 8, !dbg !6680, !ctir !149
  %idx.neg = sub i64 0, %54, !dbg !6681
  %add.ptr146 = getelementptr inbounds i8, i8* %52, i64 %idx.neg, !dbg !6681, !ctir !147
  %55 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6682
  %ext147 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %55, i32 0, i32 0, !dbg !6683, !ctir !699
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext147, i32 0, i32 1, !dbg !6684, !ctir !280
  %56 = load i8*, i8** %string, align 8, !dbg !6684, !ctir !146
  %57 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6685
  %ext148 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %57, i32 0, i32 0, !dbg !6686, !ctir !699
  %len149 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext148, i32 0, i32 0, !dbg !6687, !ctir !280
  %58 = load i64, i64* %len149, align 8, !dbg !6687, !ctir !149
  %call150 = call i32 @c_strncasecmp(i8* %add.ptr146, i8* %56, i64 %58) #16, !dbg !6688
  %cmp151 = icmp eq i32 %call150, 0, !dbg !6689
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !6690

if.then153:                                       ; preds = %land.lhs.true143
  br label %for.end, !dbg !6691

if.end154:                                        ; preds = %land.lhs.true143, %for.body
  br label %for.inc, !dbg !6692

for.inc:                                          ; preds = %if.end154
  %59 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6693
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %59, i32 0, i32 2, !dbg !6694, !ctir !699
  %60 = load %struct.color_ext_type*, %struct.color_ext_type** %next, align 8, !dbg !6694, !ctir !698
  store %struct.color_ext_type* %60, %struct.color_ext_type** %ext, align 8, !dbg !6695
  br label %for.cond, !dbg !6696, !llvm.loop !6697

for.end:                                          ; preds = %if.then153, %for.cond
  br label %if.end155, !dbg !6699

if.end155:                                        ; preds = %for.end, %if.end132
  %61 = load i32, i32* %type, align 4, !dbg !6700
  %cmp156 = icmp eq i32 %61, 7, !dbg !6702
  br i1 %cmp156, label %land.lhs.true158, label %if.end167, !dbg !6703

land.lhs.true158:                                 ; preds = %if.end155
  %62 = load i32, i32* %linkok, align 4, !dbg !6704
  %tobool159 = icmp ne i32 %62, 0, !dbg !6704
  br i1 %tobool159, label %if.end167, label %if.then160, !dbg !6705

if.then160:                                       ; preds = %land.lhs.true158
  %63 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !6706
  %tobool161 = trunc i8 %63 to i1, !dbg !6706
  br i1 %tobool161, label %if.then165, label %lor.lhs.false, !dbg !6709

lor.lhs.false:                                    ; preds = %if.then160
  %call163 = call zeroext i1 @is_colored(i32 13), !dbg !6710
  br i1 %call163, label %if.then165, label %if.end166, !dbg !6711

if.then165:                                       ; preds = %lor.lhs.false, %if.then160
  store i32 13, i32* %type, align 4, !dbg !6712
  br label %if.end166, !dbg !6713

if.end166:                                        ; preds = %if.then165, %lor.lhs.false
  br label %if.end167, !dbg !6714

if.end167:                                        ; preds = %if.end166, %land.lhs.true158, %if.end155
  call void @llvm.dbg.declare(metadata %struct.bin_str** %s, metadata !6715, metadata !DIExpression()), !dbg !6716
  %64 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6717
  %tobool168 = icmp ne %struct.color_ext_type* %64, null, !dbg !6717
  br i1 %tobool168, label %cond.true169, label %cond.false170, !dbg !6717

cond.true169:                                     ; preds = %if.end167
  %65 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !6718
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %65, i32 0, i32 1, !dbg !6719, !ctir !699
  br label %cond.end173, !dbg !6717

cond.false170:                                    ; preds = %if.end167
  %66 = load i32, i32* %type, align 4, !dbg !6720
  %idxprom171 = zext i32 %66 to i64, !dbg !6721
  %arrayidx172 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom171, !dbg !6721, !ctir !279
  br label %cond.end173, !dbg !6717

cond.end173:                                      ; preds = %cond.false170, %cond.true169
  %cond174 = phi %struct.bin_str* [ %seq, %cond.true169 ], [ %arrayidx172, %cond.false170 ], !dbg !6717
  store %struct.bin_str* %cond174, %struct.bin_str** %s, align 8, !dbg !6716
  %67 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !6722
  %string175 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %67, i32 0, i32 1, !dbg !6723, !ctir !794
  %68 = load i8*, i8** %string175, align 8, !dbg !6723, !ctir !146
  %tobool176 = icmp ne i8* %68, null, !dbg !6722
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !6722

cond.true177:                                     ; preds = %cond.end173
  %69 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !6724
  br label %cond.end179, !dbg !6722

cond.false178:                                    ; preds = %cond.end173
  br label %cond.end179, !dbg !6722

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi %struct.bin_str* [ %69, %cond.true177 ], [ null, %cond.false178 ], !dbg !6722
  ret %struct.bin_str* %cond180, !dbg !6725
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @calculate_columns(i1 zeroext %by_columns) #0 !dbg !6726 {
entry:
  %by_columns.addr = alloca i8, align 1
  %filesno = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %name_length = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %idx = alloca i64, align 8, !ctir !149
  %real_length = alloca i64, align 8, !ctir !149
  %frombool = zext i1 %by_columns to i8
  store i8 %frombool, i8* %by_columns.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %by_columns.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6733, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !6735, metadata !DIExpression()), !dbg !6736
  %0 = load i64, i64* @max_idx, align 8, !dbg !6737
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !6737
  %cmp = icmp ult i64 %0, %1, !dbg !6737
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6737

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !6737
  br label %cond.end, !dbg !6737

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !6737
  br label %cond.end, !dbg !6737

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6737
  store i64 %cond, i64* %max_cols, align 8, !dbg !6736
  call void @init_column_info(), !dbg !6738
  store i64 0, i64* %filesno, align 8, !dbg !6739
  br label %for.cond, !dbg !6741

for.cond:                                         ; preds = %for.inc38, %cond.end
  %4 = load i64, i64* %filesno, align 8, !dbg !6742
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !6744
  %cmp1 = icmp ult i64 %4, %5, !dbg !6745
  br i1 %cmp1, label %for.body, label %for.end40, !dbg !6746

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6747, metadata !DIExpression()), !dbg !6749
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !6750
  %7 = load i64, i64* %filesno, align 8, !dbg !6751
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !6750, !ctir !754
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !6750
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !6750
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !6749
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6752, metadata !DIExpression()), !dbg !6753
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6754
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %10), !dbg !6755
  store i64 %call, i64* %name_length, align 8, !dbg !6753
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6756, metadata !DIExpression()), !dbg !6758
  store i64 0, i64* %i, align 8, !dbg !6758
  br label %for.cond2, !dbg !6759

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load i64, i64* %i, align 8, !dbg !6760
  %12 = load i64, i64* %max_cols, align 8, !dbg !6762
  %cmp3 = icmp ult i64 %11, %12, !dbg !6763
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !6764

for.body4:                                        ; preds = %for.cond2
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6765
  %14 = load i64, i64* %i, align 8, !dbg !6768
  %arrayidx5 = getelementptr inbounds %struct.column_info, %struct.column_info* %13, i64 %14, !dbg !6765, !ctir !804
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx5, i32 0, i32 0, !dbg !6769, !ctir !799
  %15 = load i8, i8* %valid_len, align 8, !dbg !6769
  %tobool = trunc i8 %15 to i1, !dbg !6769, !ctir !141
  br i1 %tobool, label %if.then, label %if.end37, !dbg !6770

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata i64* %idx, metadata !6771, metadata !DIExpression()), !dbg !6773
  %16 = load i8, i8* %by_columns.addr, align 1, !dbg !6774
  %tobool6 = trunc i8 %16 to i1, !dbg !6774
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !6774

cond.true7:                                       ; preds = %if.then
  %17 = load i64, i64* %filesno, align 8, !dbg !6775
  %18 = load i64, i64* @cwd_n_used, align 8, !dbg !6776
  %19 = load i64, i64* %i, align 8, !dbg !6777
  %add = add i64 %18, %19, !dbg !6778
  %20 = load i64, i64* %i, align 8, !dbg !6779
  %add8 = add i64 %20, 1, !dbg !6780
  %div = udiv i64 %add, %add8, !dbg !6781
  %div9 = udiv i64 %17, %div, !dbg !6782
  br label %cond.end12, !dbg !6774

cond.false10:                                     ; preds = %if.then
  %21 = load i64, i64* %filesno, align 8, !dbg !6783
  %22 = load i64, i64* %i, align 8, !dbg !6784
  %add11 = add i64 %22, 1, !dbg !6785
  %rem = urem i64 %21, %add11, !dbg !6786
  br label %cond.end12, !dbg !6774

cond.end12:                                       ; preds = %cond.false10, %cond.true7
  %cond13 = phi i64 [ %div9, %cond.true7 ], [ %rem, %cond.false10 ], !dbg !6774
  store i64 %cond13, i64* %idx, align 8, !dbg !6773
  call void @llvm.dbg.declare(metadata i64* %real_length, metadata !6787, metadata !DIExpression()), !dbg !6788
  %23 = load i64, i64* %name_length, align 8, !dbg !6789
  %24 = load i64, i64* %idx, align 8, !dbg !6790
  %25 = load i64, i64* %i, align 8, !dbg !6791
  %cmp14 = icmp eq i64 %24, %25, !dbg !6792
  %26 = zext i1 %cmp14 to i64, !dbg !6790
  %cond15 = select i1 %cmp14, i32 0, i32 2, !dbg !6790
  %conv = sext i32 %cond15 to i64, !dbg !6793
  %add16 = add i64 %23, %conv, !dbg !6794
  store i64 %add16, i64* %real_length, align 8, !dbg !6788
  %27 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6795
  %28 = load i64, i64* %i, align 8, !dbg !6797
  %arrayidx17 = getelementptr inbounds %struct.column_info, %struct.column_info* %27, i64 %28, !dbg !6795, !ctir !804
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx17, i32 0, i32 2, !dbg !6798, !ctir !799
  %29 = load i64*, i64** %col_arr, align 8, !dbg !6798, !ctir !148
  %30 = load i64, i64* %idx, align 8, !dbg !6799
  %arrayidx18 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !6795, !ctir !148
  %31 = load i64, i64* %arrayidx18, align 8, !dbg !6795
  %32 = load i64, i64* %real_length, align 8, !dbg !6800
  %cmp19 = icmp ult i64 %31, %32, !dbg !6801
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !6802

if.then21:                                        ; preds = %cond.end12
  %33 = load i64, i64* %real_length, align 8, !dbg !6803
  %34 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6805
  %35 = load i64, i64* %i, align 8, !dbg !6806
  %arrayidx22 = getelementptr inbounds %struct.column_info, %struct.column_info* %34, i64 %35, !dbg !6805, !ctir !804
  %col_arr23 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx22, i32 0, i32 2, !dbg !6807, !ctir !799
  %36 = load i64*, i64** %col_arr23, align 8, !dbg !6807, !ctir !148
  %37 = load i64, i64* %idx, align 8, !dbg !6808
  %arrayidx24 = getelementptr inbounds i64, i64* %36, i64 %37, !dbg !6805, !ctir !148
  %38 = load i64, i64* %arrayidx24, align 8, !dbg !6805
  %sub = sub i64 %33, %38, !dbg !6809
  %39 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6810
  %40 = load i64, i64* %i, align 8, !dbg !6811
  %arrayidx25 = getelementptr inbounds %struct.column_info, %struct.column_info* %39, i64 %40, !dbg !6810, !ctir !804
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx25, i32 0, i32 1, !dbg !6812, !ctir !799
  %41 = load i64, i64* %line_len, align 8, !dbg !6813, !ctir !149
  %add26 = add i64 %41, %sub, !dbg !6813
  store i64 %add26, i64* %line_len, align 8, !dbg !6813, !ctir !149
  %42 = load i64, i64* %real_length, align 8, !dbg !6814
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6815
  %44 = load i64, i64* %i, align 8, !dbg !6816
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !6815, !ctir !804
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !6817, !ctir !799
  %45 = load i64*, i64** %col_arr28, align 8, !dbg !6817, !ctir !148
  %46 = load i64, i64* %idx, align 8, !dbg !6818
  %arrayidx29 = getelementptr inbounds i64, i64* %45, i64 %46, !dbg !6815, !ctir !148
  store i64 %42, i64* %arrayidx29, align 8, !dbg !6819
  %47 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6820
  %48 = load i64, i64* %i, align 8, !dbg !6821
  %arrayidx30 = getelementptr inbounds %struct.column_info, %struct.column_info* %47, i64 %48, !dbg !6820, !ctir !804
  %line_len31 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx30, i32 0, i32 1, !dbg !6822, !ctir !799
  %49 = load i64, i64* %line_len31, align 8, !dbg !6822, !ctir !149
  %50 = load i64, i64* @line_length, align 8, !dbg !6823
  %cmp32 = icmp ult i64 %49, %50, !dbg !6824
  %51 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6825
  %52 = load i64, i64* %i, align 8, !dbg !6826
  %arrayidx34 = getelementptr inbounds %struct.column_info, %struct.column_info* %51, i64 %52, !dbg !6825, !ctir !804
  %valid_len35 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx34, i32 0, i32 0, !dbg !6827, !ctir !799
  %frombool36 = zext i1 %cmp32 to i8, !dbg !6828
  store i8 %frombool36, i8* %valid_len35, align 8, !dbg !6828, !ctir !141
  br label %if.end, !dbg !6829

if.end:                                           ; preds = %if.then21, %cond.end12
  br label %if.end37, !dbg !6830

if.end37:                                         ; preds = %if.end, %for.body4
  br label %for.inc, !dbg !6831

for.inc:                                          ; preds = %if.end37
  %53 = load i64, i64* %i, align 8, !dbg !6832
  %inc = add i64 %53, 1, !dbg !6832
  store i64 %inc, i64* %i, align 8, !dbg !6832
  br label %for.cond2, !dbg !6833, !llvm.loop !6834

for.end:                                          ; preds = %for.cond2
  br label %for.inc38, !dbg !6836

for.inc38:                                        ; preds = %for.end
  %54 = load i64, i64* %filesno, align 8, !dbg !6837
  %inc39 = add i64 %54, 1, !dbg !6837
  store i64 %inc39, i64* %filesno, align 8, !dbg !6837
  br label %for.cond, !dbg !6838, !llvm.loop !6839

for.end40:                                        ; preds = %for.cond
  %55 = load i64, i64* %max_cols, align 8, !dbg !6841
  store i64 %55, i64* %cols, align 8, !dbg !6843
  br label %for.cond41, !dbg !6844

for.cond41:                                       ; preds = %for.inc51, %for.end40
  %56 = load i64, i64* %cols, align 8, !dbg !6845
  %cmp42 = icmp ult i64 1, %56, !dbg !6847
  br i1 %cmp42, label %for.body44, label %for.end52, !dbg !6848

for.body44:                                       ; preds = %for.cond41
  %57 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6849
  %58 = load i64, i64* %cols, align 8, !dbg !6852
  %sub45 = sub i64 %58, 1, !dbg !6853
  %arrayidx46 = getelementptr inbounds %struct.column_info, %struct.column_info* %57, i64 %sub45, !dbg !6849, !ctir !804
  %valid_len47 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx46, i32 0, i32 0, !dbg !6854, !ctir !799
  %59 = load i8, i8* %valid_len47, align 8, !dbg !6854
  %tobool48 = trunc i8 %59 to i1, !dbg !6854, !ctir !141
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !6855

if.then49:                                        ; preds = %for.body44
  br label %for.end52, !dbg !6856

if.end50:                                         ; preds = %for.body44
  br label %for.inc51, !dbg !6857

for.inc51:                                        ; preds = %if.end50
  %60 = load i64, i64* %cols, align 8, !dbg !6858
  %dec = add i64 %60, -1, !dbg !6858
  store i64 %dec, i64* %cols, align 8, !dbg !6858
  br label %for.cond41, !dbg !6859, !llvm.loop !6860

for.end52:                                        ; preds = %if.then49, %for.cond41
  %61 = load i64, i64* %cols, align 8, !dbg !6862
  ret i64 %61, !dbg !6863
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @length_of_file_name_and_frills(%struct.fileinfo* %f) #0 !dbg !6864 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %len = alloca i64, align 8, !ctir !149
  %buf = alloca [652 x i8], align 16, !ctir !734
  %c = alloca i8, align 1, !ctir !144
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6869, metadata !DIExpression()), !dbg !6870
  store i64 0, i64* %len, align 8, !dbg !6870
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !6871, metadata !DIExpression()), !dbg !6872
  %0 = load i8, i8* @print_inode, align 1, !dbg !6873
  %tobool = trunc i8 %0 to i1, !dbg !6873
  br i1 %tobool, label %if.then, label %if.end, !dbg !6875

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !6876
  %cmp = icmp eq i32 %1, 4, !dbg !6877
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6876

cond.true:                                        ; preds = %if.then
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6878
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !6879, !ctir !183
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !6880, !ctir !190
  %3 = load i64, i64* %st_ino, align 8, !dbg !6880, !ctir !196
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !6881, !ctir !734
  %call = call i8* @umaxtostr(i64 %3, i8* %arraydecay), !dbg !6882
  %call1 = call i64 @strlen(i8* %call) #16, !dbg !6883
  br label %cond.end, !dbg !6876

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* @inode_number_width, align 4, !dbg !6884
  %conv = sext i32 %4 to i64, !dbg !6884
  br label %cond.end, !dbg !6876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call1, %cond.true ], [ %conv, %cond.false ], !dbg !6876
  %add = add i64 1, %cond, !dbg !6885
  %5 = load i64, i64* %len, align 8, !dbg !6886
  %add2 = add i64 %5, %add, !dbg !6886
  store i64 %add2, i64* %len, align 8, !dbg !6886
  br label %if.end, !dbg !6887

if.end:                                           ; preds = %cond.end, %entry
  %6 = load i8, i8* @print_block_size, align 1, !dbg !6888
  %tobool3 = trunc i8 %6 to i1, !dbg !6888
  br i1 %tobool3, label %if.then4, label %if.end23, !dbg !6890

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* @format, align 4, !dbg !6891
  %cmp5 = icmp eq i32 %7, 4, !dbg !6892
  br i1 %cmp5, label %cond.true7, label %cond.false17, !dbg !6891

cond.true7:                                       ; preds = %if.then4
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6893
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 7, !dbg !6894, !ctir !183
  %9 = load i8, i8* %stat_ok, align 8, !dbg !6894
  %tobool8 = trunc i8 %9 to i1, !dbg !6894, !ctir !141
  br i1 %tobool8, label %cond.false10, label %cond.true9, !dbg !6895

cond.true9:                                       ; preds = %cond.true7
  br label %cond.end14, !dbg !6895

cond.false10:                                     ; preds = %cond.true7
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6896
  %stat11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !6896, !ctir !183
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat11, i32 0, i32 10, !dbg !6896, !ctir !190
  %11 = load i64, i64* %st_blocks, align 8, !dbg !6896, !ctir !211
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !6897, !ctir !734
  %12 = load i32, i32* @human_output_opts, align 4, !dbg !6898
  %13 = load i64, i64* @output_block_size, align 8, !dbg !6899
  %call13 = call i8* @human_readable(i64 %11, i8* %arraydecay12, i32 %12, i64 512, i64 %13), !dbg !6900
  br label %cond.end14, !dbg !6895

cond.end14:                                       ; preds = %cond.false10, %cond.true9
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true9 ], [ %call13, %cond.false10 ], !dbg !6895
  %call16 = call i64 @strlen(i8* %cond15) #16, !dbg !6901
  br label %cond.end19, !dbg !6891

cond.false17:                                     ; preds = %if.then4
  %14 = load i32, i32* @block_size_width, align 4, !dbg !6902
  %conv18 = sext i32 %14 to i64, !dbg !6902
  br label %cond.end19, !dbg !6891

cond.end19:                                       ; preds = %cond.false17, %cond.end14
  %cond20 = phi i64 [ %call16, %cond.end14 ], [ %conv18, %cond.false17 ], !dbg !6891
  %add21 = add i64 1, %cond20, !dbg !6903
  %15 = load i64, i64* %len, align 8, !dbg !6904
  %add22 = add i64 %15, %add21, !dbg !6904
  store i64 %add22, i64* %len, align 8, !dbg !6904
  br label %if.end23, !dbg !6905

if.end23:                                         ; preds = %cond.end19, %if.end
  %16 = load i8, i8* @print_scontext, align 1, !dbg !6906
  %tobool24 = trunc i8 %16 to i1, !dbg !6906
  br i1 %tobool24, label %if.then25, label %if.end36, !dbg !6908

if.then25:                                        ; preds = %if.end23
  %17 = load i32, i32* @format, align 4, !dbg !6909
  %cmp26 = icmp eq i32 %17, 4, !dbg !6910
  br i1 %cmp26, label %cond.true28, label %cond.false30, !dbg !6909

cond.true28:                                      ; preds = %if.then25
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6911
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 6, !dbg !6912, !ctir !183
  %19 = load i8*, i8** %scontext, align 8, !dbg !6912, !ctir !143
  %call29 = call i64 @strlen(i8* %19) #16, !dbg !6913
  br label %cond.end32, !dbg !6909

cond.false30:                                     ; preds = %if.then25
  %20 = load i32, i32* @scontext_width, align 4, !dbg !6914
  %conv31 = sext i32 %20 to i64, !dbg !6914
  br label %cond.end32, !dbg !6909

cond.end32:                                       ; preds = %cond.false30, %cond.true28
  %cond33 = phi i64 [ %call29, %cond.true28 ], [ %conv31, %cond.false30 ], !dbg !6909
  %add34 = add i64 1, %cond33, !dbg !6915
  %21 = load i64, i64* %len, align 8, !dbg !6916
  %add35 = add i64 %21, %add34, !dbg !6916
  store i64 %add35, i64* %len, align 8, !dbg !6916
  br label %if.end36, !dbg !6917

if.end36:                                         ; preds = %cond.end32, %if.end23
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6918
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 0, !dbg !6919, !ctir !183
  %23 = load i8*, i8** %name, align 8, !dbg !6919, !ctir !143
  %24 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !6920
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6921
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 11, !dbg !6922, !ctir !183
  %26 = load i32, i32* %quoted, align 4, !dbg !6922, !ctir !27
  %call37 = call i64 @quote_name_width(i8* %23, %struct.quoting_options* %24, i32 %26), !dbg !6923
  %27 = load i64, i64* %len, align 8, !dbg !6924
  %add38 = add i64 %27, %call37, !dbg !6924
  store i64 %add38, i64* %len, align 8, !dbg !6924
  %28 = load i32, i32* @indicator_style, align 4, !dbg !6925
  %cmp39 = icmp ne i32 %28, 0, !dbg !6927
  br i1 %cmp39, label %if.then41, label %if.end51, !dbg !6928

if.then41:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6929, metadata !DIExpression()), !dbg !6931
  %29 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6932
  %stat_ok42 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %29, i32 0, i32 7, !dbg !6933, !ctir !183
  %30 = load i8, i8* %stat_ok42, align 8, !dbg !6933
  %tobool43 = trunc i8 %30 to i1, !dbg !6933, !ctir !141
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6934
  %stat44 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !6935, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat44, i32 0, i32 3, !dbg !6936, !ctir !190
  %32 = load i32, i32* %st_mode, align 8, !dbg !6936, !ctir !200
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6937
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %33, i32 0, i32 4, !dbg !6938, !ctir !183
  %34 = load i32, i32* %filetype, align 8, !dbg !6938, !ctir !36
  %call45 = call signext i8 @get_type_indicator(i1 zeroext %tobool43, i32 %32, i32 %34), !dbg !6939
  store i8 %call45, i8* %c, align 1, !dbg !6931
  %35 = load i8, i8* %c, align 1, !dbg !6940
  %conv46 = sext i8 %35 to i32, !dbg !6940
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !6941
  %conv48 = zext i1 %cmp47 to i32, !dbg !6941
  %conv49 = sext i32 %conv48 to i64, !dbg !6942
  %36 = load i64, i64* %len, align 8, !dbg !6943
  %add50 = add i64 %36, %conv49, !dbg !6943
  store i64 %add50, i64* %len, align 8, !dbg !6943
  br label %if.end51, !dbg !6944

if.end51:                                         ; preds = %if.then41, %if.end36
  %37 = load i64, i64* %len, align 8, !dbg !6945
  ret i64 %37, !dbg !6946
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @indent(i64 %from, i64 %to) #0 !dbg !6947 {
entry:
  %from.addr = alloca i64, align 8
  %to.addr = alloca i64, align 8
  store i64 %from, i64* %from.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !6950, metadata !DIExpression()), !dbg !6951
  store i64 %to, i64* %to.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !6952, metadata !DIExpression()), !dbg !6953
  br label %while.cond, !dbg !6954

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %from.addr, align 8, !dbg !6955
  %1 = load i64, i64* %to.addr, align 8, !dbg !6956
  %cmp = icmp ult i64 %0, %1, !dbg !6957
  br i1 %cmp, label %while.body, label %while.end, !dbg !6954

while.body:                                       ; preds = %while.cond
  %2 = load i64, i64* @tabsize, align 8, !dbg !6958
  %cmp1 = icmp ne i64 %2, 0, !dbg !6961
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !6962

land.lhs.true:                                    ; preds = %while.body
  %3 = load i64, i64* %to.addr, align 8, !dbg !6963
  %4 = load i64, i64* @tabsize, align 8, !dbg !6964
  %div = udiv i64 %3, %4, !dbg !6965
  %5 = load i64, i64* %from.addr, align 8, !dbg !6966
  %add = add i64 %5, 1, !dbg !6967
  %6 = load i64, i64* @tabsize, align 8, !dbg !6968
  %div2 = udiv i64 %add, %6, !dbg !6969
  %cmp3 = icmp ugt i64 %div, %div2, !dbg !6970
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6971

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @putchar_unlocked(i32 9), !dbg !6972
  %7 = load i64, i64* @tabsize, align 8, !dbg !6974
  %8 = load i64, i64* %from.addr, align 8, !dbg !6975
  %9 = load i64, i64* @tabsize, align 8, !dbg !6976
  %rem = urem i64 %8, %9, !dbg !6977
  %sub = sub i64 %7, %rem, !dbg !6978
  %10 = load i64, i64* %from.addr, align 8, !dbg !6979
  %add4 = add i64 %10, %sub, !dbg !6979
  store i64 %add4, i64* %from.addr, align 8, !dbg !6979
  br label %if.end, !dbg !6980

if.else:                                          ; preds = %land.lhs.true, %while.body
  %call5 = call i32 @putchar_unlocked(i32 32), !dbg !6981
  %11 = load i64, i64* %from.addr, align 8, !dbg !6983
  %inc = add i64 %11, 1, !dbg !6983
  store i64 %inc, i64* %from.addr, align 8, !dbg !6983
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !6954, !llvm.loop !6984

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6986
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_width(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting) #0 !dbg !6987 {
entry:
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %smallbuf = alloca [8192 x i8], align 16, !ctir !737
  %buf = alloca i8*, align 8, !ctir !143
  %width = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !6994, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6998, metadata !DIExpression()), !dbg !6999
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7000, !ctir !737
  store i8* %arraydecay, i8** %buf, align 8, !dbg !6999
  call void @llvm.dbg.declare(metadata i64* %width, metadata !7001, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !7003, metadata !DIExpression()), !dbg !7004
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7005
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !7006
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !7007
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* %width, i8* %pad), !dbg !7008
  %3 = load i8*, i8** %buf, align 8, !dbg !7009
  %arraydecay1 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7011, !ctir !737
  %cmp = icmp ne i8* %3, %arraydecay1, !dbg !7012
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7013

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %buf, align 8, !dbg !7014
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7015
  %cmp2 = icmp ne i8* %4, %5, !dbg !7016
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7017

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %buf, align 8, !dbg !7018
  call void @free(i8* %6) #13, !dbg !7019
  br label %if.end, !dbg !7019

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i8, i8* %pad, align 1, !dbg !7020
  %tobool = trunc i8 %7 to i1, !dbg !7020
  %conv = zext i1 %tobool to i64, !dbg !7020
  %8 = load i64, i64* %width, align 8, !dbg !7021
  %add = add i64 %8, %conv, !dbg !7021
  store i64 %add, i64* %width, align 8, !dbg !7021
  %9 = load i64, i64* %width, align 8, !dbg !7022
  ret i64 %9, !dbg !7023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_column_info() #0 !dbg !1061 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %new_column_info_alloc = alloca i64, align 8, !ctir !149
  %p = alloca i64*, align 8, !ctir !148
  %column_info_growth = alloca i64, align 8, !ctir !149
  %s = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7024, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7026, metadata !DIExpression()), !dbg !7027
  %0 = load i64, i64* @max_idx, align 8, !dbg !7028
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7028
  %cmp = icmp ult i64 %0, %1, !dbg !7028
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7028

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7028
  br label %cond.end, !dbg !7028

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7028
  br label %cond.end, !dbg !7028

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7028
  store i64 %cond, i64* %max_cols, align 8, !dbg !7027
  %4 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7029
  %5 = load i64, i64* %max_cols, align 8, !dbg !7031
  %cmp1 = icmp ult i64 %4, %5, !dbg !7032
  br i1 %cmp1, label %if.then, label %if.end16, !dbg !7033

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %new_column_info_alloc, metadata !7034, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata i64** %p, metadata !7037, metadata !DIExpression()), !dbg !7038
  %6 = load i64, i64* %max_cols, align 8, !dbg !7039
  %7 = load i64, i64* @max_idx, align 8, !dbg !7041
  %div = udiv i64 %7, 2, !dbg !7042
  %cmp2 = icmp ult i64 %6, %div, !dbg !7043
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7044

if.then3:                                         ; preds = %if.then
  %8 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7045
  %9 = bitcast %struct.column_info* %8 to i8*, !dbg !7045
  %10 = load i64, i64* %max_cols, align 8, !dbg !7047
  %call = call i8* @xnrealloc(i8* %9, i64 %10, i64 48), !dbg !7048
  %11 = bitcast i8* %call to %struct.column_info*, !dbg !7048
  store %struct.column_info* %11, %struct.column_info** @column_info, align 8, !dbg !7049
  %12 = load i64, i64* %max_cols, align 8, !dbg !7050
  %mul = mul i64 2, %12, !dbg !7051
  store i64 %mul, i64* %new_column_info_alloc, align 8, !dbg !7052
  br label %if.end, !dbg !7053

if.else:                                          ; preds = %if.then
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7054
  %14 = bitcast %struct.column_info* %13 to i8*, !dbg !7054
  %15 = load i64, i64* @max_idx, align 8, !dbg !7056
  %call4 = call i8* @xnrealloc(i8* %14, i64 %15, i64 24), !dbg !7057
  %16 = bitcast i8* %call4 to %struct.column_info*, !dbg !7057
  store %struct.column_info* %16, %struct.column_info** @column_info, align 8, !dbg !7058
  %17 = load i64, i64* @max_idx, align 8, !dbg !7059
  store i64 %17, i64* %new_column_info_alloc, align 8, !dbg !7060
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  call void @llvm.dbg.declare(metadata i64* %column_info_growth, metadata !7061, metadata !DIExpression()), !dbg !7063
  %18 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7064
  %19 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7065
  %sub = sub i64 %18, %19, !dbg !7066
  store i64 %sub, i64* %column_info_growth, align 8, !dbg !7063
  call void @llvm.dbg.declare(metadata i64* %s, metadata !7067, metadata !DIExpression()), !dbg !7068
  %20 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7069
  %add = add i64 %20, 1, !dbg !7070
  %21 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7071
  %add5 = add i64 %add, %21, !dbg !7072
  store i64 %add5, i64* %s, align 8, !dbg !7068
  call void @llvm.dbg.declare(metadata i64* %t, metadata !7073, metadata !DIExpression()), !dbg !7074
  %22 = load i64, i64* %s, align 8, !dbg !7075
  %23 = load i64, i64* %column_info_growth, align 8, !dbg !7076
  %mul6 = mul i64 %22, %23, !dbg !7077
  store i64 %mul6, i64* %t, align 8, !dbg !7074
  %24 = load i64, i64* %s, align 8, !dbg !7078
  %25 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7080
  %cmp7 = icmp ult i64 %24, %25, !dbg !7081
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !7082

lor.lhs.false:                                    ; preds = %if.end
  %26 = load i64, i64* %t, align 8, !dbg !7083
  %27 = load i64, i64* %column_info_growth, align 8, !dbg !7084
  %div8 = udiv i64 %26, %27, !dbg !7085
  %28 = load i64, i64* %s, align 8, !dbg !7086
  %cmp9 = icmp ne i64 %div8, %28, !dbg !7087
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7088

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  call void @xalloc_die() #14, !dbg !7089
  unreachable, !dbg !7089

if.end11:                                         ; preds = %lor.lhs.false
  %29 = load i64, i64* %t, align 8, !dbg !7090
  %div12 = udiv i64 %29, 2, !dbg !7091
  %call13 = call noalias i8* @xnmalloc(i64 %div12, i64 8), !dbg !7092
  %30 = bitcast i8* %call13 to i64*, !dbg !7092
  store i64* %30, i64** %p, align 8, !dbg !7093
  %31 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7094
  store i64 %31, i64* %i, align 8, !dbg !7096
  br label %for.cond, !dbg !7097

for.cond:                                         ; preds = %for.inc, %if.end11
  %32 = load i64, i64* %i, align 8, !dbg !7098
  %33 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7100
  %cmp14 = icmp ult i64 %32, %33, !dbg !7101
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7102

for.body:                                         ; preds = %for.cond
  %34 = load i64*, i64** %p, align 8, !dbg !7103
  %35 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7105
  %36 = load i64, i64* %i, align 8, !dbg !7106
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %35, i64 %36, !dbg !7105, !ctir !804
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx, i32 0, i32 2, !dbg !7107, !ctir !799
  store i64* %34, i64** %col_arr, align 8, !dbg !7108, !ctir !148
  %37 = load i64, i64* %i, align 8, !dbg !7109
  %add15 = add i64 %37, 1, !dbg !7110
  %38 = load i64*, i64** %p, align 8, !dbg !7111
  %add.ptr = getelementptr inbounds i64, i64* %38, i64 %add15, !dbg !7111, !ctir !149
  store i64* %add.ptr, i64** %p, align 8, !dbg !7111
  br label %for.inc, !dbg !7112

for.inc:                                          ; preds = %for.body
  %39 = load i64, i64* %i, align 8, !dbg !7113
  %inc = add i64 %39, 1, !dbg !7113
  store i64 %inc, i64* %i, align 8, !dbg !7113
  br label %for.cond, !dbg !7114, !llvm.loop !7115

for.end:                                          ; preds = %for.cond
  %40 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7117
  store i64 %40, i64* @init_column_info.column_info_alloc, align 8, !dbg !7118
  br label %if.end16, !dbg !7119

if.end16:                                         ; preds = %for.end, %cond.end
  store i64 0, i64* %i, align 8, !dbg !7120
  br label %for.cond17, !dbg !7122

for.cond17:                                       ; preds = %for.inc33, %if.end16
  %41 = load i64, i64* %i, align 8, !dbg !7123
  %42 = load i64, i64* %max_cols, align 8, !dbg !7125
  %cmp18 = icmp ult i64 %41, %42, !dbg !7126
  br i1 %cmp18, label %for.body19, label %for.end35, !dbg !7127

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7128, metadata !DIExpression()), !dbg !7130
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7131
  %44 = load i64, i64* %i, align 8, !dbg !7132
  %arrayidx20 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7131, !ctir !804
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx20, i32 0, i32 0, !dbg !7133, !ctir !799
  store i8 1, i8* %valid_len, align 8, !dbg !7134, !ctir !141
  %45 = load i64, i64* %i, align 8, !dbg !7135
  %add21 = add i64 %45, 1, !dbg !7136
  %mul22 = mul i64 %add21, 3, !dbg !7137
  %46 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7138
  %47 = load i64, i64* %i, align 8, !dbg !7139
  %arrayidx23 = getelementptr inbounds %struct.column_info, %struct.column_info* %46, i64 %47, !dbg !7138, !ctir !804
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx23, i32 0, i32 1, !dbg !7140, !ctir !799
  store i64 %mul22, i64* %line_len, align 8, !dbg !7141, !ctir !149
  store i64 0, i64* %j, align 8, !dbg !7142
  br label %for.cond24, !dbg !7144

for.cond24:                                       ; preds = %for.inc30, %for.body19
  %48 = load i64, i64* %j, align 8, !dbg !7145
  %49 = load i64, i64* %i, align 8, !dbg !7147
  %cmp25 = icmp ule i64 %48, %49, !dbg !7148
  br i1 %cmp25, label %for.body26, label %for.end32, !dbg !7149

for.body26:                                       ; preds = %for.cond24
  %50 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7150
  %51 = load i64, i64* %i, align 8, !dbg !7151
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %50, i64 %51, !dbg !7150, !ctir !804
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7152, !ctir !799
  %52 = load i64*, i64** %col_arr28, align 8, !dbg !7152, !ctir !148
  %53 = load i64, i64* %j, align 8, !dbg !7153
  %arrayidx29 = getelementptr inbounds i64, i64* %52, i64 %53, !dbg !7150, !ctir !148
  store i64 3, i64* %arrayidx29, align 8, !dbg !7154
  br label %for.inc30, !dbg !7150

for.inc30:                                        ; preds = %for.body26
  %54 = load i64, i64* %j, align 8, !dbg !7155
  %inc31 = add i64 %54, 1, !dbg !7155
  store i64 %inc31, i64* %j, align 8, !dbg !7155
  br label %for.cond24, !dbg !7156, !llvm.loop !7157

for.end32:                                        ; preds = %for.cond24
  br label %for.inc33, !dbg !7159

for.inc33:                                        ; preds = %for.end32
  %55 = load i64, i64* %i, align 8, !dbg !7160
  %inc34 = add i64 %55, 1, !dbg !7160
  store i64 %inc34, i64* %i, align 8, !dbg !7160
  br label %for.cond17, !dbg !7161, !llvm.loop !7162

for.end35:                                        ; preds = %for.cond17
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_directory(%struct.fileinfo* %f) #0 !dbg !7165 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7170
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !7171, !ctir !183
  %1 = load i32, i32* %filetype, align 8, !dbg !7171, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !7172
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7173

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7174
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !7175, !ctir !183
  %3 = load i32, i32* %filetype1, align 8, !dbg !7175, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !7176
  br label %lor.end, !dbg !7173

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %4, !dbg !7177
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @basename_is_dot_or_dotdot(i8* %name) #0 !dbg !7178 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7179, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7181, metadata !DIExpression()), !dbg !7182
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7183
  %call = call i8* @last_component(i8* %0) #16, !dbg !7184
  store i8* %call, i8** %base, align 8, !dbg !7182
  %1 = load i8*, i8** %base, align 8, !dbg !7185
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %1), !dbg !7186
  ret i1 %call1, !dbg !7187
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_ent(%struct.fileinfo* %f) #0 !dbg !7188 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7193
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !7194, !ctir !184
  %1 = load i8*, i8** %name, align 8, !dbg !7194, !ctir !143
  call void @free(i8* %1) #13, !dbg !7195
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7196
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 1, !dbg !7197, !ctir !184
  %3 = load i8*, i8** %linkname, align 8, !dbg !7197, !ctir !143
  call void @free(i8* %3) #13, !dbg !7198
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7199
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 2, !dbg !7200, !ctir !184
  %5 = load i8*, i8** %absolute_name, align 8, !dbg !7200, !ctir !143
  call void @free(i8* %5) #13, !dbg !7201
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7202
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 6, !dbg !7204, !ctir !184
  %7 = load i8*, i8** %scontext, align 8, !dbg !7204, !ctir !143
  %cmp = icmp ne i8* %7, getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), !dbg !7205
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7206

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_smack_enabled(), !dbg !7207
  br i1 %call, label %if.then1, label %if.else, !dbg !7210

if.then1:                                         ; preds = %if.then
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7211
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 6, !dbg !7212, !ctir !184
  %9 = load i8*, i8** %scontext2, align 8, !dbg !7212, !ctir !143
  call void @free(i8* %9) #13, !dbg !7213
  br label %if.end, !dbg !7213

if.else:                                          ; preds = %if.then
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7214
  %scontext3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 6, !dbg !7215, !ctir !184
  %11 = load i8*, i8** %scontext3, align 8, !dbg !7215, !ctir !143
  call void @freecon(i8* %11), !dbg !7216
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end4, !dbg !7217

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !7218
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #0 !dbg !7219 {
entry:
  ret i1 false, !dbg !7223
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #0 !dbg !7224 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !144
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !7227
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7227, !ctir !146
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7227
  %conv = sext i8 %1 to i32, !dbg !7227
  %cmp = icmp eq i32 %conv, 46, !dbg !7229
  br i1 %cmp, label %if.then, label %if.else, !dbg !7230

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !7231, metadata !DIExpression()), !dbg !7233
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !7234
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !7235
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7235, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7235
  %conv3 = sext i8 %4 to i32, !dbg !7235
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !7236
  %conv5 = zext i1 %cmp4 to i32, !dbg !7236
  %add = add nsw i32 %conv5, 1, !dbg !7237
  %idxprom = sext i32 %add to i64, !dbg !7234
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !7234, !ctir !146
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !7234
  store i8 %5, i8* %sep, align 1, !dbg !7233
  %6 = load i8, i8* %sep, align 1, !dbg !7238
  %tobool = icmp ne i8 %6, 0, !dbg !7238
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7239

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !7240
  %conv7 = sext i8 %7 to i32, !dbg !7240
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !7240
  br label %lor.end, !dbg !7239

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !7241
  br label %return, !dbg !7241

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7242
  br label %return, !dbg !7242

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !7243
  ret i1 %9, !dbg !7243
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_ordering_vector() #0 !dbg !7244 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7245, metadata !DIExpression()), !dbg !7247
  store i64 0, i64* %i, align 8, !dbg !7247
  br label %for.cond, !dbg !7248

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !7249
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7251
  %cmp = icmp ult i64 %0, %1, !dbg !7252
  br i1 %cmp, label %for.body, label %for.end, !dbg !7253

for.body:                                         ; preds = %for.cond
  %2 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !7254
  %3 = load i64, i64* %i, align 8, !dbg !7255
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i64 %3, !dbg !7254, !ctir !258
  %4 = bitcast %struct.fileinfo* %arrayidx to i8*, !dbg !7256
  %5 = load i8**, i8*** @sorted_file, align 8, !dbg !7257
  %6 = load i64, i64* %i, align 8, !dbg !7258
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 %6, !dbg !7257, !ctir !754
  store i8* %4, i8** %arrayidx1, align 8, !dbg !7259
  br label %for.inc, !dbg !7257

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !7260
  %inc = add i64 %7, 1, !dbg !7260
  store i64 %inc, i64* %i, align 8, !dbg !7260
  br label %for.cond, !dbg !7261, !llvm.loop !7262

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7264
}

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%struct.__jmp_buf_tag*) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7265 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7266, metadata !DIExpression()), !dbg !7267
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7268, metadata !DIExpression()), !dbg !7267
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7267
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7267
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7267
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7267
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7267
  ret i32 %call, !dbg !7267
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7269 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7272, metadata !DIExpression()), !dbg !7271
  br label %do.body, !dbg !7271

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7273, metadata !DIExpression()), !dbg !7275
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7275
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7275
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7275
  %frombool = zext i1 %call to i8, !dbg !7275
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7275
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7276, metadata !DIExpression()), !dbg !7275
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7275
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7275
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7275
  %frombool2 = zext i1 %call1 to i8, !dbg !7275
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7275
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7277
  %tobool = trunc i8 %4 to i1, !dbg !7277
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7277

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7277
  %tobool3 = trunc i8 %5 to i1, !dbg !7277
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7275

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7277
  br label %return, !dbg !7277

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7279
  %tobool4 = trunc i8 %6 to i1, !dbg !7279
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7279

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7279
  %tobool6 = trunc i8 %7 to i1, !dbg !7279
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7275

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7279
  br label %return, !dbg !7279

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7275

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7271
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7271
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7271
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7271
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7271
  store i32 %call9, i32* %retval, align 4, !dbg !7271
  br label %return, !dbg !7271

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7271
  ret i32 %12, !dbg !7271
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7281 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7282, metadata !DIExpression()), !dbg !7283
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7284, metadata !DIExpression()), !dbg !7283
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7283
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7283
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7283
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7283
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7283
  ret i32 %call, !dbg !7283
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7285 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7286, metadata !DIExpression()), !dbg !7287
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7288, metadata !DIExpression()), !dbg !7287
  br label %do.body, !dbg !7287

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7289, metadata !DIExpression()), !dbg !7291
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7291
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7291
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7291
  %frombool = zext i1 %call to i8, !dbg !7291
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7291
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7292, metadata !DIExpression()), !dbg !7291
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7291
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7291
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7291
  %frombool2 = zext i1 %call1 to i8, !dbg !7291
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7291
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7293
  %tobool = trunc i8 %4 to i1, !dbg !7293
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7293

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7293
  %tobool3 = trunc i8 %5 to i1, !dbg !7293
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7291

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7293
  br label %return, !dbg !7293

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7295
  %tobool4 = trunc i8 %6 to i1, !dbg !7295
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7295

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7295
  %tobool6 = trunc i8 %7 to i1, !dbg !7295
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7291

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7295
  br label %return, !dbg !7295

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7291

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7287
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7287
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7287
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7287
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7287
  store i32 %call9, i32* %retval, align 4, !dbg !7287
  br label %return, !dbg !7287

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7287
  ret i32 %12, !dbg !7287
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_name(i8* %a, i8* %b) #9 !dbg !7297 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7298, metadata !DIExpression()), !dbg !7299
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7300, metadata !DIExpression()), !dbg !7299
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7299
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7299
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7299
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7299
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7299
  ret i32 %call, !dbg !7299
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7301 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7302, metadata !DIExpression()), !dbg !7303
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7304, metadata !DIExpression()), !dbg !7303
  br label %do.body, !dbg !7303

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7305, metadata !DIExpression()), !dbg !7307
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7307
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7307
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7307
  %frombool = zext i1 %call to i8, !dbg !7307
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7307
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7308, metadata !DIExpression()), !dbg !7307
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7307
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7307
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7307
  %frombool2 = zext i1 %call1 to i8, !dbg !7307
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7307
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7309
  %tobool = trunc i8 %4 to i1, !dbg !7309
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7309

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7309
  %tobool3 = trunc i8 %5 to i1, !dbg !7309
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7307

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7309
  br label %return, !dbg !7309

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7311
  %tobool4 = trunc i8 %6 to i1, !dbg !7311
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7311

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7311
  %tobool6 = trunc i8 %7 to i1, !dbg !7311
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7307

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7311
  br label %return, !dbg !7311

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7307

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7303
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7303
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7303
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7303
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7303
  store i32 %call9, i32* %retval, align 4, !dbg !7303
  br label %return, !dbg !7303

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7303
  ret i32 %12, !dbg !7303
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_name(i8* %a, i8* %b) #9 !dbg !7313 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7314, metadata !DIExpression()), !dbg !7315
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7316, metadata !DIExpression()), !dbg !7315
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7315
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7315
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7315
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7315
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7315
  ret i32 %call, !dbg !7315
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7317 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7320, metadata !DIExpression()), !dbg !7319
  br label %do.body, !dbg !7319

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7321, metadata !DIExpression()), !dbg !7323
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7323
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7323
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7323
  %frombool = zext i1 %call to i8, !dbg !7323
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7323
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7324, metadata !DIExpression()), !dbg !7323
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7323
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7323
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7323
  %frombool2 = zext i1 %call1 to i8, !dbg !7323
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7323
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7325
  %tobool = trunc i8 %4 to i1, !dbg !7325
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7325

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7325
  %tobool3 = trunc i8 %5 to i1, !dbg !7325
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7323

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7325
  br label %return, !dbg !7325

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7327
  %tobool4 = trunc i8 %6 to i1, !dbg !7327
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7327

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7327
  %tobool6 = trunc i8 %7 to i1, !dbg !7327
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7323

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7327
  br label %return, !dbg !7327

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7323

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7319
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7319
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7319
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7319
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7319
  store i32 %call9, i32* %retval, align 4, !dbg !7319
  br label %return, !dbg !7319

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7319
  ret i32 %12, !dbg !7319
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7329 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7332, metadata !DIExpression()), !dbg !7331
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7331
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7331
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7331
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7331
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7331
  ret i32 %call, !dbg !7331
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7333 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7334, metadata !DIExpression()), !dbg !7335
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7336, metadata !DIExpression()), !dbg !7335
  br label %do.body, !dbg !7335

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7337, metadata !DIExpression()), !dbg !7339
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7339
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7339
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7339
  %frombool = zext i1 %call to i8, !dbg !7339
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7339
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7340, metadata !DIExpression()), !dbg !7339
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7339
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7339
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7339
  %frombool2 = zext i1 %call1 to i8, !dbg !7339
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7339
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7341
  %tobool = trunc i8 %4 to i1, !dbg !7341
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7341

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7341
  %tobool3 = trunc i8 %5 to i1, !dbg !7341
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7339

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7341
  br label %return, !dbg !7341

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7343
  %tobool4 = trunc i8 %6 to i1, !dbg !7343
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7343

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7343
  %tobool6 = trunc i8 %7 to i1, !dbg !7343
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7339

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7343
  br label %return, !dbg !7343

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7339

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7335
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7335
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7335
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7335
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7335
  store i32 %call9, i32* %retval, align 4, !dbg !7335
  br label %return, !dbg !7335

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7335
  ret i32 %12, !dbg !7335
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7345 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7346, metadata !DIExpression()), !dbg !7347
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7348, metadata !DIExpression()), !dbg !7347
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7347
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7347
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7347
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7347
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7347
  ret i32 %call, !dbg !7347
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7349 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7352, metadata !DIExpression()), !dbg !7351
  br label %do.body, !dbg !7351

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7353, metadata !DIExpression()), !dbg !7355
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7355
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7355
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7355
  %frombool = zext i1 %call to i8, !dbg !7355
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7355
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7356, metadata !DIExpression()), !dbg !7355
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7355
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7355
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7355
  %frombool2 = zext i1 %call1 to i8, !dbg !7355
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7355
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7357
  %tobool = trunc i8 %4 to i1, !dbg !7357
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7357

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7357
  %tobool3 = trunc i8 %5 to i1, !dbg !7357
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7355

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7357
  br label %return, !dbg !7357

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7359
  %tobool4 = trunc i8 %6 to i1, !dbg !7359
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7359

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7359
  %tobool6 = trunc i8 %7 to i1, !dbg !7359
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7355

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7359
  br label %return, !dbg !7359

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7355

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7351
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7351
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7351
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7351
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7351
  store i32 %call9, i32* %retval, align 4, !dbg !7351
  br label %return, !dbg !7351

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7351
  ret i32 %12, !dbg !7351
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_extension(i8* %a, i8* %b) #9 !dbg !7361 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7364, metadata !DIExpression()), !dbg !7363
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7363
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7363
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7363
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7363
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7363
  ret i32 %call, !dbg !7363
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7365 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7368, metadata !DIExpression()), !dbg !7367
  br label %do.body, !dbg !7367

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7369, metadata !DIExpression()), !dbg !7371
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7371
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7371
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7371
  %frombool = zext i1 %call to i8, !dbg !7371
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7371
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7372, metadata !DIExpression()), !dbg !7371
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7371
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7371
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7371
  %frombool2 = zext i1 %call1 to i8, !dbg !7371
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7371
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7373
  %tobool = trunc i8 %4 to i1, !dbg !7373
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7373

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7373
  %tobool3 = trunc i8 %5 to i1, !dbg !7373
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7371

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7373
  br label %return, !dbg !7373

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7375
  %tobool4 = trunc i8 %6 to i1, !dbg !7375
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7375

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7375
  %tobool6 = trunc i8 %7 to i1, !dbg !7375
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7371

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7375
  br label %return, !dbg !7375

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7371

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7367
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7367
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7367
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7367
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7367
  store i32 %call9, i32* %retval, align 4, !dbg !7367
  br label %return, !dbg !7367

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7367
  ret i32 %12, !dbg !7367
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_extension(i8* %a, i8* %b) #9 !dbg !7377 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7378, metadata !DIExpression()), !dbg !7379
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7380, metadata !DIExpression()), !dbg !7379
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7379
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7379
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7379
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7379
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7379
  ret i32 %call, !dbg !7379
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7381 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7384, metadata !DIExpression()), !dbg !7383
  br label %do.body, !dbg !7383

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7385, metadata !DIExpression()), !dbg !7387
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7387
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7387
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7387
  %frombool = zext i1 %call to i8, !dbg !7387
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7387
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7388, metadata !DIExpression()), !dbg !7387
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7387
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7387
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7387
  %frombool2 = zext i1 %call1 to i8, !dbg !7387
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7387
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7389
  %tobool = trunc i8 %4 to i1, !dbg !7389
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7389

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7389
  %tobool3 = trunc i8 %5 to i1, !dbg !7389
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7387

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7389
  br label %return, !dbg !7389

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7391
  %tobool4 = trunc i8 %6 to i1, !dbg !7391
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7391

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7391
  %tobool6 = trunc i8 %7 to i1, !dbg !7391
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7387

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7391
  br label %return, !dbg !7391

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7387

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7383
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7383
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7383
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7383
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7383
  store i32 %call9, i32* %retval, align 4, !dbg !7383
  br label %return, !dbg !7383

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7383
  ret i32 %12, !dbg !7383
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7393 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7396, metadata !DIExpression()), !dbg !7395
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7395
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7395
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7395
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7395
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7395
  ret i32 %call, !dbg !7395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7397 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7400, metadata !DIExpression()), !dbg !7399
  br label %do.body, !dbg !7399

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7401, metadata !DIExpression()), !dbg !7403
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7403
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7403
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7403
  %frombool = zext i1 %call to i8, !dbg !7403
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7403
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7404, metadata !DIExpression()), !dbg !7403
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7403
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7403
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7403
  %frombool2 = zext i1 %call1 to i8, !dbg !7403
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7403
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7405
  %tobool = trunc i8 %4 to i1, !dbg !7405
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7405

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7405
  %tobool3 = trunc i8 %5 to i1, !dbg !7405
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7403

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7405
  br label %return, !dbg !7405

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7407
  %tobool4 = trunc i8 %6 to i1, !dbg !7407
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7407

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7407
  %tobool6 = trunc i8 %7 to i1, !dbg !7407
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7403

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7407
  br label %return, !dbg !7407

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7403

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7399
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7399
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7399
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7399
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7399
  store i32 %call9, i32* %retval, align 4, !dbg !7399
  br label %return, !dbg !7399

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7399
  ret i32 %12, !dbg !7399
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7409 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7412, metadata !DIExpression()), !dbg !7411
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7411
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7411
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7411
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7411
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7411
  ret i32 %call, !dbg !7411
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7413 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7416, metadata !DIExpression()), !dbg !7415
  br label %do.body, !dbg !7415

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7417, metadata !DIExpression()), !dbg !7419
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7419
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7419
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7419
  %frombool = zext i1 %call to i8, !dbg !7419
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7419
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7420, metadata !DIExpression()), !dbg !7419
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7419
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7419
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7419
  %frombool2 = zext i1 %call1 to i8, !dbg !7419
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7419
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7421
  %tobool = trunc i8 %4 to i1, !dbg !7421
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7421

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7421
  %tobool3 = trunc i8 %5 to i1, !dbg !7421
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7419

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7421
  br label %return, !dbg !7421

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7423
  %tobool4 = trunc i8 %6 to i1, !dbg !7423
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7423

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7423
  %tobool6 = trunc i8 %7 to i1, !dbg !7423
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7419

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7423
  br label %return, !dbg !7423

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7419

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7415
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7415
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7415
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7415
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7415
  store i32 %call9, i32* %retval, align 4, !dbg !7415
  br label %return, !dbg !7415

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7415
  ret i32 %12, !dbg !7415
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_size(i8* %a, i8* %b) #9 !dbg !7425 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7426, metadata !DIExpression()), !dbg !7427
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7428, metadata !DIExpression()), !dbg !7427
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7427
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7427
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7427
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7427
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7427
  ret i32 %call, !dbg !7427
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_size(i8* %a, i8* %b) #9 !dbg !7429 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7430, metadata !DIExpression()), !dbg !7431
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7432, metadata !DIExpression()), !dbg !7431
  br label %do.body, !dbg !7431

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7433, metadata !DIExpression()), !dbg !7435
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7435
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7435
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7435
  %frombool = zext i1 %call to i8, !dbg !7435
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7435
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7436, metadata !DIExpression()), !dbg !7435
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7435
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7435
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7435
  %frombool2 = zext i1 %call1 to i8, !dbg !7435
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7435
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7437
  %tobool = trunc i8 %4 to i1, !dbg !7437
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7437

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7437
  %tobool3 = trunc i8 %5 to i1, !dbg !7437
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7435

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7437
  br label %return, !dbg !7437

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7439
  %tobool4 = trunc i8 %6 to i1, !dbg !7439
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7439

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7439
  %tobool6 = trunc i8 %7 to i1, !dbg !7439
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7435

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7439
  br label %return, !dbg !7439

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7435

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7431
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7431
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7431
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7431
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7431
  store i32 %call9, i32* %retval, align 4, !dbg !7431
  br label %return, !dbg !7431

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7431
  ret i32 %12, !dbg !7431
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_size(i8* %a, i8* %b) #9 !dbg !7441 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7444, metadata !DIExpression()), !dbg !7443
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7443
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7443
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7443
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7443
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7443
  ret i32 %call, !dbg !7443
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_size(i8* %a, i8* %b) #9 !dbg !7445 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7448, metadata !DIExpression()), !dbg !7447
  br label %do.body, !dbg !7447

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7449, metadata !DIExpression()), !dbg !7451
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7451
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7451
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7451
  %frombool = zext i1 %call to i8, !dbg !7451
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7451
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7452, metadata !DIExpression()), !dbg !7451
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7451
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7451
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7451
  %frombool2 = zext i1 %call1 to i8, !dbg !7451
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7451
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7453
  %tobool = trunc i8 %4 to i1, !dbg !7453
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7453

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7453
  %tobool3 = trunc i8 %5 to i1, !dbg !7453
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7451

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7453
  br label %return, !dbg !7453

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7455
  %tobool4 = trunc i8 %6 to i1, !dbg !7455
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7455

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7455
  %tobool6 = trunc i8 %7 to i1, !dbg !7455
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7451

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7455
  br label %return, !dbg !7455

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7451

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7447
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7447
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7447
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7447
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7447
  store i32 %call9, i32* %retval, align 4, !dbg !7447
  br label %return, !dbg !7447

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7447
  ret i32 %12, !dbg !7447
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_version(i8* %a, i8* %b) #0 !dbg !7457 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7458, metadata !DIExpression()), !dbg !7459
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7460, metadata !DIExpression()), !dbg !7461
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7462
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7462
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7463
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7463
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !7464
  ret i32 %call, !dbg !7465
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !7466 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7467, metadata !DIExpression()), !dbg !7468
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7469, metadata !DIExpression()), !dbg !7470
  br label %do.body, !dbg !7471

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7472, metadata !DIExpression()), !dbg !7474
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7474
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7474
  %frombool = zext i1 %call to i8, !dbg !7474
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7474
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7475, metadata !DIExpression()), !dbg !7474
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7474
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7474
  %frombool2 = zext i1 %call1 to i8, !dbg !7474
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7474
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7476
  %tobool = trunc i8 %4 to i1, !dbg !7476
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7476

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7476
  %tobool3 = trunc i8 %5 to i1, !dbg !7476
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7474

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7476
  br label %return, !dbg !7476

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7478
  %tobool4 = trunc i8 %6 to i1, !dbg !7478
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7478

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7478
  %tobool6 = trunc i8 %7 to i1, !dbg !7478
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7474

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7478
  br label %return, !dbg !7478

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7474

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7480
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7480
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7481
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7481
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !7482
  store i32 %call9, i32* %retval, align 4, !dbg !7483
  br label %return, !dbg !7483

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7484
  ret i32 %12, !dbg !7484
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_version(i8* %a, i8* %b) #0 !dbg !7485 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7488, metadata !DIExpression()), !dbg !7489
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7490
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7490
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7491
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7491
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !7492
  ret i32 %call, !dbg !7493
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !7494 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  br label %do.body, !dbg !7499

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7500, metadata !DIExpression()), !dbg !7502
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7502
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7502
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7502
  %frombool = zext i1 %call to i8, !dbg !7502
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7502
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7503, metadata !DIExpression()), !dbg !7502
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7502
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7502
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7502
  %frombool2 = zext i1 %call1 to i8, !dbg !7502
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7502
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7504
  %tobool = trunc i8 %4 to i1, !dbg !7504
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7504

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7504
  %tobool3 = trunc i8 %5 to i1, !dbg !7504
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7502

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7504
  br label %return, !dbg !7504

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7506
  %tobool4 = trunc i8 %6 to i1, !dbg !7506
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7506

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7506
  %tobool6 = trunc i8 %7 to i1, !dbg !7506
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7502

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7506
  br label %return, !dbg !7506

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7502

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7508
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7508
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7509
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7509
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !7510
  store i32 %call9, i32* %retval, align 4, !dbg !7511
  br label %return, !dbg !7511

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7512
  ret i32 %12, !dbg !7512
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !7513 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7514, metadata !DIExpression()), !dbg !7515
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7516, metadata !DIExpression()), !dbg !7515
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7515
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7515
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7515
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7515
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7515
  ret i32 %call, !dbg !7515
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !7517 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7518, metadata !DIExpression()), !dbg !7519
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7520, metadata !DIExpression()), !dbg !7519
  br label %do.body, !dbg !7519

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7521, metadata !DIExpression()), !dbg !7523
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7523
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7523
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7523
  %frombool = zext i1 %call to i8, !dbg !7523
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7523
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7524, metadata !DIExpression()), !dbg !7523
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7523
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7523
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7523
  %frombool2 = zext i1 %call1 to i8, !dbg !7523
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7523
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7525
  %tobool = trunc i8 %4 to i1, !dbg !7525
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7525

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7525
  %tobool3 = trunc i8 %5 to i1, !dbg !7525
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7523

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7525
  br label %return, !dbg !7525

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7527
  %tobool4 = trunc i8 %6 to i1, !dbg !7527
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7527

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7527
  %tobool6 = trunc i8 %7 to i1, !dbg !7527
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7523

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7527
  br label %return, !dbg !7527

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7523

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7519
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7519
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7519
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7519
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7519
  store i32 %call9, i32* %retval, align 4, !dbg !7519
  br label %return, !dbg !7519

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7519
  ret i32 %12, !dbg !7519
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !7529 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7530, metadata !DIExpression()), !dbg !7531
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7532, metadata !DIExpression()), !dbg !7531
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7531
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7531
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7531
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7531
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7531
  ret i32 %call, !dbg !7531
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !7533 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7536, metadata !DIExpression()), !dbg !7535
  br label %do.body, !dbg !7535

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7537, metadata !DIExpression()), !dbg !7539
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7539
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7539
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7539
  %frombool = zext i1 %call to i8, !dbg !7539
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7539
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7540, metadata !DIExpression()), !dbg !7539
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7539
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7539
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7539
  %frombool2 = zext i1 %call1 to i8, !dbg !7539
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7539
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7541
  %tobool = trunc i8 %4 to i1, !dbg !7541
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7541

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7541
  %tobool3 = trunc i8 %5 to i1, !dbg !7541
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7539

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7541
  br label %return, !dbg !7541

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7543
  %tobool4 = trunc i8 %6 to i1, !dbg !7543
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7543

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7543
  %tobool6 = trunc i8 %7 to i1, !dbg !7543
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7539

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7543
  br label %return, !dbg !7543

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7539

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7535
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7535
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7535
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7535
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7535
  store i32 %call9, i32* %retval, align 4, !dbg !7535
  br label %return, !dbg !7535

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7535
  ret i32 %12, !dbg !7535
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_mtime(i8* %a, i8* %b) #9 !dbg !7545 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7546, metadata !DIExpression()), !dbg !7547
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7548, metadata !DIExpression()), !dbg !7547
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7547
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7547
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7547
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7547
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7547
  ret i32 %call, !dbg !7547
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !7549 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7552, metadata !DIExpression()), !dbg !7551
  br label %do.body, !dbg !7551

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7553, metadata !DIExpression()), !dbg !7555
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7555
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7555
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7555
  %frombool = zext i1 %call to i8, !dbg !7555
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7555
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7556, metadata !DIExpression()), !dbg !7555
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7555
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7555
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7555
  %frombool2 = zext i1 %call1 to i8, !dbg !7555
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7555
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7557
  %tobool = trunc i8 %4 to i1, !dbg !7557
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7557

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7557
  %tobool3 = trunc i8 %5 to i1, !dbg !7557
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7555

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7557
  br label %return, !dbg !7557

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7559
  %tobool4 = trunc i8 %6 to i1, !dbg !7559
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7559

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7559
  %tobool6 = trunc i8 %7 to i1, !dbg !7559
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7555

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7559
  br label %return, !dbg !7559

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7555

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7551
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7551
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7551
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7551
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7551
  store i32 %call9, i32* %retval, align 4, !dbg !7551
  br label %return, !dbg !7551

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7551
  ret i32 %12, !dbg !7551
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_mtime(i8* %a, i8* %b) #9 !dbg !7561 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7562, metadata !DIExpression()), !dbg !7563
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7564, metadata !DIExpression()), !dbg !7563
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7563
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7563
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7563
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7563
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7563
  ret i32 %call, !dbg !7563
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !7565 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7568, metadata !DIExpression()), !dbg !7567
  br label %do.body, !dbg !7567

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7569, metadata !DIExpression()), !dbg !7571
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7571
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7571
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7571
  %frombool = zext i1 %call to i8, !dbg !7571
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7571
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7572, metadata !DIExpression()), !dbg !7571
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7571
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7571
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7571
  %frombool2 = zext i1 %call1 to i8, !dbg !7571
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7571
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7573
  %tobool = trunc i8 %4 to i1, !dbg !7573
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7573

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7573
  %tobool3 = trunc i8 %5 to i1, !dbg !7573
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7571

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7573
  br label %return, !dbg !7573

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7575
  %tobool4 = trunc i8 %6 to i1, !dbg !7575
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7575

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7575
  %tobool6 = trunc i8 %7 to i1, !dbg !7575
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7571

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7575
  br label %return, !dbg !7575

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7571

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7567
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7567
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7567
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7567
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7567
  store i32 %call9, i32* %retval, align 4, !dbg !7567
  br label %return, !dbg !7567

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7567
  ret i32 %12, !dbg !7567
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !7577 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7580, metadata !DIExpression()), !dbg !7579
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7579
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7579
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7579
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7579
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7579
  ret i32 %call, !dbg !7579
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !7581 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7584, metadata !DIExpression()), !dbg !7583
  br label %do.body, !dbg !7583

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7585, metadata !DIExpression()), !dbg !7587
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7587
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7587
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7587
  %frombool = zext i1 %call to i8, !dbg !7587
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7587
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7588, metadata !DIExpression()), !dbg !7587
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7587
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7587
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7587
  %frombool2 = zext i1 %call1 to i8, !dbg !7587
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7587
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7589
  %tobool = trunc i8 %4 to i1, !dbg !7589
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7589

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7589
  %tobool3 = trunc i8 %5 to i1, !dbg !7589
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7587

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7589
  br label %return, !dbg !7589

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7591
  %tobool4 = trunc i8 %6 to i1, !dbg !7591
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7591

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7591
  %tobool6 = trunc i8 %7 to i1, !dbg !7591
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7587

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7591
  br label %return, !dbg !7591

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7587

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7583
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7583
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7583
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7583
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7583
  store i32 %call9, i32* %retval, align 4, !dbg !7583
  br label %return, !dbg !7583

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7583
  ret i32 %12, !dbg !7583
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !7593 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7594, metadata !DIExpression()), !dbg !7595
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7596, metadata !DIExpression()), !dbg !7595
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7595
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7595
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7595
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7595
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7595
  ret i32 %call, !dbg !7595
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !7597 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7598, metadata !DIExpression()), !dbg !7599
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7600, metadata !DIExpression()), !dbg !7599
  br label %do.body, !dbg !7599

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7601, metadata !DIExpression()), !dbg !7603
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7603
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7603
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7603
  %frombool = zext i1 %call to i8, !dbg !7603
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7603
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7604, metadata !DIExpression()), !dbg !7603
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7603
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7603
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7603
  %frombool2 = zext i1 %call1 to i8, !dbg !7603
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7603
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7605
  %tobool = trunc i8 %4 to i1, !dbg !7605
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7605

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7605
  %tobool3 = trunc i8 %5 to i1, !dbg !7605
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7603

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7605
  br label %return, !dbg !7605

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7607
  %tobool4 = trunc i8 %6 to i1, !dbg !7607
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7607

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7607
  %tobool6 = trunc i8 %7 to i1, !dbg !7607
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7603

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7607
  br label %return, !dbg !7607

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7603

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7599
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7599
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7599
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7599
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7599
  store i32 %call9, i32* %retval, align 4, !dbg !7599
  br label %return, !dbg !7599

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7599
  ret i32 %12, !dbg !7599
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_ctime(i8* %a, i8* %b) #9 !dbg !7609 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7612, metadata !DIExpression()), !dbg !7611
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7611
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7611
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7611
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7611
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7611
  ret i32 %call, !dbg !7611
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !7613 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7616, metadata !DIExpression()), !dbg !7615
  br label %do.body, !dbg !7615

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7617, metadata !DIExpression()), !dbg !7619
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7619
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7619
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7619
  %frombool = zext i1 %call to i8, !dbg !7619
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7619
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7620, metadata !DIExpression()), !dbg !7619
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7619
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7619
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7619
  %frombool2 = zext i1 %call1 to i8, !dbg !7619
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7619
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7621
  %tobool = trunc i8 %4 to i1, !dbg !7621
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7621

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7621
  %tobool3 = trunc i8 %5 to i1, !dbg !7621
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7619

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7621
  br label %return, !dbg !7621

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7623
  %tobool4 = trunc i8 %6 to i1, !dbg !7623
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7623

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7623
  %tobool6 = trunc i8 %7 to i1, !dbg !7623
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7619

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7623
  br label %return, !dbg !7623

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7619

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7615
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7615
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7615
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7615
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7615
  store i32 %call9, i32* %retval, align 4, !dbg !7615
  br label %return, !dbg !7615

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7615
  ret i32 %12, !dbg !7615
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_ctime(i8* %a, i8* %b) #9 !dbg !7625 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7628, metadata !DIExpression()), !dbg !7627
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7627
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7627
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7627
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7627
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7627
  ret i32 %call, !dbg !7627
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !7629 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7632, metadata !DIExpression()), !dbg !7631
  br label %do.body, !dbg !7631

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7633, metadata !DIExpression()), !dbg !7635
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7635
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7635
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7635
  %frombool = zext i1 %call to i8, !dbg !7635
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7635
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7636, metadata !DIExpression()), !dbg !7635
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7635
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7635
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7635
  %frombool2 = zext i1 %call1 to i8, !dbg !7635
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7635
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7637
  %tobool = trunc i8 %4 to i1, !dbg !7637
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7637

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7637
  %tobool3 = trunc i8 %5 to i1, !dbg !7637
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7635

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7637
  br label %return, !dbg !7637

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7639
  %tobool4 = trunc i8 %6 to i1, !dbg !7639
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7639

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7639
  %tobool6 = trunc i8 %7 to i1, !dbg !7639
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7635

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7639
  br label %return, !dbg !7639

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7635

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7631
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7631
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7631
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7631
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7631
  store i32 %call9, i32* %retval, align 4, !dbg !7631
  br label %return, !dbg !7631

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7631
  ret i32 %12, !dbg !7631
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !7641 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7644, metadata !DIExpression()), !dbg !7643
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7643
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7643
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7643
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7643
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7643
  ret i32 %call, !dbg !7643
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !7645 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7648, metadata !DIExpression()), !dbg !7647
  br label %do.body, !dbg !7647

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7649, metadata !DIExpression()), !dbg !7651
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7651
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7651
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7651
  %frombool = zext i1 %call to i8, !dbg !7651
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7651
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7652, metadata !DIExpression()), !dbg !7651
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7651
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7651
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7651
  %frombool2 = zext i1 %call1 to i8, !dbg !7651
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7651
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7653
  %tobool = trunc i8 %4 to i1, !dbg !7653
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7653

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7653
  %tobool3 = trunc i8 %5 to i1, !dbg !7653
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7651

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7653
  br label %return, !dbg !7653

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7655
  %tobool4 = trunc i8 %6 to i1, !dbg !7655
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7655

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7655
  %tobool6 = trunc i8 %7 to i1, !dbg !7655
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7651

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7655
  br label %return, !dbg !7655

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7651

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7647
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7647
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7647
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7647
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7647
  store i32 %call9, i32* %retval, align 4, !dbg !7647
  br label %return, !dbg !7647

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7647
  ret i32 %12, !dbg !7647
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !7657 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7658, metadata !DIExpression()), !dbg !7659
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7660, metadata !DIExpression()), !dbg !7659
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7659
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7659
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7659
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7659
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7659
  ret i32 %call, !dbg !7659
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !7661 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7662, metadata !DIExpression()), !dbg !7663
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7664, metadata !DIExpression()), !dbg !7663
  br label %do.body, !dbg !7663

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7665, metadata !DIExpression()), !dbg !7667
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7667
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7667
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7667
  %frombool = zext i1 %call to i8, !dbg !7667
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7667
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7668, metadata !DIExpression()), !dbg !7667
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7667
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7667
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7667
  %frombool2 = zext i1 %call1 to i8, !dbg !7667
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7667
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7669
  %tobool = trunc i8 %4 to i1, !dbg !7669
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7669

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7669
  %tobool3 = trunc i8 %5 to i1, !dbg !7669
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7667

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7669
  br label %return, !dbg !7669

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7671
  %tobool4 = trunc i8 %6 to i1, !dbg !7671
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7671

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7671
  %tobool6 = trunc i8 %7 to i1, !dbg !7671
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7667

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7671
  br label %return, !dbg !7671

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7667

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7663
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7663
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7663
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7663
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7663
  store i32 %call9, i32* %retval, align 4, !dbg !7663
  br label %return, !dbg !7663

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7663
  ret i32 %12, !dbg !7663
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_atime(i8* %a, i8* %b) #9 !dbg !7673 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7676, metadata !DIExpression()), !dbg !7675
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7675
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7675
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7675
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7675
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7675
  ret i32 %call, !dbg !7675
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !7677 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7680, metadata !DIExpression()), !dbg !7679
  br label %do.body, !dbg !7679

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7681, metadata !DIExpression()), !dbg !7683
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7683
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7683
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7683
  %frombool = zext i1 %call to i8, !dbg !7683
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7683
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7684, metadata !DIExpression()), !dbg !7683
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7683
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7683
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7683
  %frombool2 = zext i1 %call1 to i8, !dbg !7683
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7683
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7685
  %tobool = trunc i8 %4 to i1, !dbg !7685
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7685

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7685
  %tobool3 = trunc i8 %5 to i1, !dbg !7685
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7683

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7685
  br label %return, !dbg !7685

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7687
  %tobool4 = trunc i8 %6 to i1, !dbg !7687
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7687

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7687
  %tobool6 = trunc i8 %7 to i1, !dbg !7687
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7683

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7687
  br label %return, !dbg !7687

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7683

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7679
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7679
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7679
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7679
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7679
  store i32 %call9, i32* %retval, align 4, !dbg !7679
  br label %return, !dbg !7679

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7679
  ret i32 %12, !dbg !7679
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_atime(i8* %a, i8* %b) #9 !dbg !7689 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7690, metadata !DIExpression()), !dbg !7691
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7692, metadata !DIExpression()), !dbg !7691
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7691
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7691
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7691
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7691
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7691
  ret i32 %call, !dbg !7691
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !7693 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7696, metadata !DIExpression()), !dbg !7695
  br label %do.body, !dbg !7695

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7697, metadata !DIExpression()), !dbg !7699
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7699
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7699
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7699
  %frombool = zext i1 %call to i8, !dbg !7699
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7699
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7700, metadata !DIExpression()), !dbg !7699
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7699
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7699
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7699
  %frombool2 = zext i1 %call1 to i8, !dbg !7699
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7699
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7701
  %tobool = trunc i8 %4 to i1, !dbg !7701
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7701

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7701
  %tobool3 = trunc i8 %5 to i1, !dbg !7701
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7699

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7701
  br label %return, !dbg !7701

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7703
  %tobool4 = trunc i8 %6 to i1, !dbg !7703
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7703

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7703
  %tobool6 = trunc i8 %7 to i1, !dbg !7703
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7699

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7703
  br label %return, !dbg !7703

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7699

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7695
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7695
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7695
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7695
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7695
  store i32 %call9, i32* %retval, align 4, !dbg !7695
  br label %return, !dbg !7695

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7695
  ret i32 %12, !dbg !7695
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_linked_directory(%struct.fileinfo* %f) #0 !dbg !7705 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7706, metadata !DIExpression()), !dbg !7707
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7708
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !7709, !ctir !183
  %1 = load i32, i32* %filetype, align 8, !dbg !7709, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !7710
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !7711

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7712
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !7713, !ctir !183
  %3 = load i32, i32* %filetype1, align 8, !dbg !7713, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !7714
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !7715

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7716
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 5, !dbg !7716, !ctir !183
  %5 = load i32, i32* %linkmode, align 4, !dbg !7716, !ctir !226
  %and = and i32 %5, 61440, !dbg !7716
  %cmp3 = icmp eq i32 %and, 16384, !dbg !7716
  br label %lor.end, !dbg !7715

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %6, !dbg !7717
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_atime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !7718 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7724, metadata !DIExpression()), !dbg !7725
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7730, metadata !DIExpression()), !dbg !7731
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7732
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !7733, !ctir !183
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %stat) #16, !dbg !7734
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !7734
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !7734
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !7734
  store i64 %3, i64* %2, align 8, !dbg !7734
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !7734
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !7734
  store i64 %5, i64* %4, align 8, !dbg !7734
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7735
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !7736, !ctir !183
  %call3 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat2) #16, !dbg !7737
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !7737
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !7737
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !7737
  store i64 %9, i64* %8, align 8, !dbg !7737
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !7737
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !7737
  store i64 %11, i64* %10, align 8, !dbg !7737
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !7738
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !7738
  %14 = load i64, i64* %13, align 8, !dbg !7738
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !7738
  %16 = load i64, i64* %15, align 8, !dbg !7738
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !7738
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !7738
  %19 = load i64, i64* %18, align 8, !dbg !7738
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !7738
  %21 = load i64, i64* %20, align 8, !dbg !7738
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !7738
  store i32 %call4, i32* %diff, align 4, !dbg !7731
  %22 = load i32, i32* %diff, align 4, !dbg !7739
  %tobool = icmp ne i32 %22, 0, !dbg !7739
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7739

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !7740
  br label %cond.end, !dbg !7739

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7741
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7742
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !7743, !ctir !183
  %26 = load i8*, i8** %name, align 8, !dbg !7743, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7744
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !7745, !ctir !183
  %28 = load i8*, i8** %name5, align 8, !dbg !7745, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !7741
  br label %cond.end, !dbg !7739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !7739
  ret i32 %cond, !dbg !7746
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll(i8* %a, i8* %b) #0 !dbg !7747 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %diff = alloca i32, align 4, !ctir !27
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7752, metadata !DIExpression()), !dbg !7753
  %call = call i32* @__errno_location() #17, !dbg !7754
  store i32 0, i32* %call, align 4, !dbg !7755, !ctir !27
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7756
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7757
  %call1 = call i32 @strcoll(i8* %0, i8* %1) #16, !dbg !7758
  store i32 %call1, i32* %diff, align 4, !dbg !7759
  %call2 = call i32* @__errno_location() #17, !dbg !7760
  %2 = load i32, i32* %call2, align 4, !dbg !7760, !ctir !27
  %tobool = icmp ne i32 %2, 0, !dbg !7760
  br i1 %tobool, label %if.then, label %if.end, !dbg !7762

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #17, !dbg !7763
  %3 = load i32, i32* %call3, align 4, !dbg !7763, !ctir !27
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.223, i64 0, i64 0)) #13, !dbg !7765
  %4 = load i8*, i8** %a.addr, align 8, !dbg !7766
  %call5 = call i8* @quote_n(i32 0, i8* %4), !dbg !7767
  %5 = load i8*, i8** %b.addr, align 8, !dbg !7768
  %call6 = call i8* @quote_n(i32 1, i8* %5), !dbg !7769
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call4, i8* %call5, i8* %call6), !dbg !7770
  call void @set_exit_status(i1 zeroext false), !dbg !7771
  call void @longjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0), i32 1) #15, !dbg !7772
  unreachable, !dbg !7772

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %diff, align 4, !dbg !7773
  ret i32 %6, !dbg !7774
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #5

; Function Attrs: noreturn nounwind
declare dso_local void @longjmp(%struct.__jmp_buf_tag*, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_ctime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !7775 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7782, metadata !DIExpression()), !dbg !7783
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7784
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !7785, !ctir !183
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat) #16, !dbg !7786
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !7786
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !7786
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !7786
  store i64 %3, i64* %2, align 8, !dbg !7786
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !7786
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !7786
  store i64 %5, i64* %4, align 8, !dbg !7786
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7787
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !7788, !ctir !183
  %call3 = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat2) #16, !dbg !7789
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !7789
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !7789
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !7789
  store i64 %9, i64* %8, align 8, !dbg !7789
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !7789
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !7789
  store i64 %11, i64* %10, align 8, !dbg !7789
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !7790
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !7790
  %14 = load i64, i64* %13, align 8, !dbg !7790
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !7790
  %16 = load i64, i64* %15, align 8, !dbg !7790
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !7790
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !7790
  %19 = load i64, i64* %18, align 8, !dbg !7790
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !7790
  %21 = load i64, i64* %20, align 8, !dbg !7790
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !7790
  store i32 %call4, i32* %diff, align 4, !dbg !7783
  %22 = load i32, i32* %diff, align 4, !dbg !7791
  %tobool = icmp ne i32 %22, 0, !dbg !7791
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7791

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !7792
  br label %cond.end, !dbg !7791

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7793
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7794
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !7795, !ctir !183
  %26 = load i8*, i8** %name, align 8, !dbg !7795, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7796
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !7797, !ctir !183
  %28 = load i8*, i8** %name5, align 8, !dbg !7797, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !7793
  br label %cond.end, !dbg !7791

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !7791
  ret i32 %cond, !dbg !7798
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_mtime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !7799 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7800, metadata !DIExpression()), !dbg !7801
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7802, metadata !DIExpression()), !dbg !7803
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7806, metadata !DIExpression()), !dbg !7807
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7808
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !7809, !ctir !183
  %call = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat) #16, !dbg !7810
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !7810
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !7810
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !7810
  store i64 %3, i64* %2, align 8, !dbg !7810
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !7810
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !7810
  store i64 %5, i64* %4, align 8, !dbg !7810
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7811
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !7812, !ctir !183
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat2) #16, !dbg !7813
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !7813
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !7813
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !7813
  store i64 %9, i64* %8, align 8, !dbg !7813
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !7813
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !7813
  store i64 %11, i64* %10, align 8, !dbg !7813
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !7814
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !7814
  %14 = load i64, i64* %13, align 8, !dbg !7814
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !7814
  %16 = load i64, i64* %15, align 8, !dbg !7814
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !7814
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !7814
  %19 = load i64, i64* %18, align 8, !dbg !7814
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !7814
  %21 = load i64, i64* %20, align 8, !dbg !7814
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !7814
  store i32 %call4, i32* %diff, align 4, !dbg !7807
  %22 = load i32, i32* %diff, align 4, !dbg !7815
  %tobool = icmp ne i32 %22, 0, !dbg !7815
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7815

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !7816
  br label %cond.end, !dbg !7815

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7817
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7818
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !7819, !ctir !183
  %26 = load i8*, i8** %name, align 8, !dbg !7819, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7820
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !7821, !ctir !183
  %28 = load i8*, i8** %name5, align 8, !dbg !7821, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !7817
  br label %cond.end, !dbg !7815

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !7815
  ret i32 %cond, !dbg !7822
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_version(%struct.fileinfo* %a, %struct.fileinfo* %b) #0 !dbg !7823 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7828, metadata !DIExpression()), !dbg !7829
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7830
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !7831, !ctir !183
  %1 = load i8*, i8** %name, align 8, !dbg !7831, !ctir !143
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7832
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !7833, !ctir !183
  %3 = load i8*, i8** %name1, align 8, !dbg !7833, !ctir !143
  %call = call i32 @filevercmp(i8* %1, i8* %3) #16, !dbg !7834
  ret i32 %call, !dbg !7835
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_size(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !7836 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7837, metadata !DIExpression()), !dbg !7838
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7839, metadata !DIExpression()), !dbg !7840
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7843, metadata !DIExpression()), !dbg !7844
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7845
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !7845, !ctir !183
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !7845, !ctir !190
  %1 = load i64, i64* %st_size, align 8, !dbg !7845, !ctir !180
  %2 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7845
  %stat1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !7845, !ctir !183
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %stat1, i32 0, i32 8, !dbg !7845, !ctir !190
  %3 = load i64, i64* %st_size2, align 8, !dbg !7845, !ctir !180
  %cmp3 = icmp slt i64 %1, %3, !dbg !7845
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !7845

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7845

cond.false:                                       ; preds = %entry
  %4 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7845
  %stat4 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !7845, !ctir !183
  %st_size5 = getelementptr inbounds %struct.stat, %struct.stat* %stat4, i32 0, i32 8, !dbg !7845, !ctir !190
  %5 = load i64, i64* %st_size5, align 8, !dbg !7845, !ctir !180
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7845
  %stat6 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !7845, !ctir !183
  %st_size7 = getelementptr inbounds %struct.stat, %struct.stat* %stat6, i32 0, i32 8, !dbg !7845, !ctir !190
  %7 = load i64, i64* %st_size7, align 8, !dbg !7845, !ctir !180
  %cmp8 = icmp sgt i64 %5, %7, !dbg !7845
  %conv = zext i1 %cmp8 to i32, !dbg !7845
  br label %cond.end, !dbg !7845

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !7845
  store i32 %cond, i32* %diff, align 4, !dbg !7844
  %8 = load i32, i32* %diff, align 4, !dbg !7846
  %tobool = icmp ne i32 %8, 0, !dbg !7846
  br i1 %tobool, label %cond.true9, label %cond.false10, !dbg !7846

cond.true9:                                       ; preds = %cond.end
  %9 = load i32, i32* %diff, align 4, !dbg !7847
  br label %cond.end12, !dbg !7846

cond.false10:                                     ; preds = %cond.end
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7848
  %11 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7849
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 0, !dbg !7850, !ctir !183
  %12 = load i8*, i8** %name, align 8, !dbg !7850, !ctir !143
  %13 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7851
  %name11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 0, !dbg !7852, !ctir !183
  %14 = load i8*, i8** %name11, align 8, !dbg !7852, !ctir !143
  %call = call i32 %10(i8* %12, i8* %14), !dbg !7848
  br label %cond.end12, !dbg !7846

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %9, %cond.true9 ], [ %call, %cond.false10 ], !dbg !7846
  ret i32 %cond13, !dbg !7853
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_extension(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !7854 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %base1 = alloca i8*, align 8, !ctir !146
  %base2 = alloca i8*, align 8, !ctir !146
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.declare(metadata i8** %base1, metadata !7861, metadata !DIExpression()), !dbg !7862
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7863
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !7864, !ctir !183
  %1 = load i8*, i8** %name, align 8, !dbg !7864, !ctir !143
  %call = call i8* @strrchr(i8* %1, i32 46) #16, !dbg !7865
  store i8* %call, i8** %base1, align 8, !dbg !7862
  call void @llvm.dbg.declare(metadata i8** %base2, metadata !7866, metadata !DIExpression()), !dbg !7867
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7868
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !7869, !ctir !183
  %3 = load i8*, i8** %name1, align 8, !dbg !7869, !ctir !143
  %call2 = call i8* @strrchr(i8* %3, i32 46) #16, !dbg !7870
  store i8* %call2, i8** %base2, align 8, !dbg !7867
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7871, metadata !DIExpression()), !dbg !7872
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7873
  %5 = load i8*, i8** %base1, align 8, !dbg !7874
  %tobool = icmp ne i8* %5, null, !dbg !7874
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7874

cond.true:                                        ; preds = %entry
  %6 = load i8*, i8** %base1, align 8, !dbg !7875
  br label %cond.end, !dbg !7874

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7874

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !7874
  %7 = load i8*, i8** %base2, align 8, !dbg !7876
  %tobool3 = icmp ne i8* %7, null, !dbg !7876
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !7876

cond.true4:                                       ; preds = %cond.end
  %8 = load i8*, i8** %base2, align 8, !dbg !7877
  br label %cond.end6, !dbg !7876

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !7876

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i8* [ %8, %cond.true4 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false5 ], !dbg !7876
  %call8 = call i32 %4(i8* %cond, i8* %cond7), !dbg !7873
  store i32 %call8, i32* %diff, align 4, !dbg !7872
  %9 = load i32, i32* %diff, align 4, !dbg !7878
  %tobool9 = icmp ne i32 %9, 0, !dbg !7878
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !7878

cond.true10:                                      ; preds = %cond.end6
  %10 = load i32, i32* %diff, align 4, !dbg !7879
  br label %cond.end15, !dbg !7878

cond.false11:                                     ; preds = %cond.end6
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7880
  %12 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7881
  %name12 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !7882, !ctir !183
  %13 = load i8*, i8** %name12, align 8, !dbg !7882, !ctir !143
  %14 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7883
  %name13 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 0, !dbg !7884, !ctir !183
  %15 = load i8*, i8** %name13, align 8, !dbg !7884, !ctir !143
  %call14 = call i32 %11(i8* %13, i8* %15), !dbg !7880
  br label %cond.end15, !dbg !7878

cond.end15:                                       ; preds = %cond.false11, %cond.true10
  %cond16 = phi i32 [ %10, %cond.true10 ], [ %call14, %cond.false11 ], !dbg !7878
  ret i32 %cond16, !dbg !7885
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_name(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !7886 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !7887, metadata !DIExpression()), !dbg !7888
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !7891, metadata !DIExpression()), !dbg !7892
  %0 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !7893
  %1 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !7894
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 0, !dbg !7895, !ctir !183
  %2 = load i8*, i8** %name, align 8, !dbg !7895, !ctir !143
  %3 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !7896
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !7897, !ctir !183
  %4 = load i8*, i8** %name1, align 8, !dbg !7897, !ctir !143
  %call = call i32 %0(i8* %2, i8* %4), !dbg !7893
  ret i32 %call, !dbg !7898
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @needs_quoting(i8* %name) #0 !dbg !7899 {
entry:
  %name.addr = alloca i8*, align 8
  %test = alloca [2 x i8], align 1, !ctir !259
  %len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.declare(metadata [2 x i8]* %test, metadata !7902, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7904, metadata !DIExpression()), !dbg !7905
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !7906, !ctir !259
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7907
  %1 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !7908
  %call = call i64 @quotearg_buffer(i8* %arraydecay, i64 2, i8* %0, i64 -1, %struct.quoting_options* %1), !dbg !7909
  store i64 %call, i64* %len, align 8, !dbg !7905
  %2 = load i8*, i8** %name.addr, align 8, !dbg !7910
  %3 = load i8, i8* %2, align 1, !dbg !7911, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !7911
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !7912, !ctir !259
  %4 = load i8, i8* %arraydecay1, align 1, !dbg !7912, !ctir !144
  %conv2 = sext i8 %4 to i32, !dbg !7912
  %cmp = icmp ne i32 %conv, %conv2, !dbg !7913
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7914

lor.rhs:                                          ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7915
  %call4 = call i64 @strlen(i8* %5) #16, !dbg !7916
  %6 = load i64, i64* %len, align 8, !dbg !7917
  %cmp5 = icmp ne i64 %call4, %6, !dbg !7918
  br label %lor.end, !dbg !7914

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  ret i1 %7, !dbg !7919
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @attach(i8* %dest, i8* %dirname, i8* %name) #0 !dbg !7920 {
entry:
  %dest.addr = alloca i8*, align 8
  %dirname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %dirnamep = alloca i8*, align 8, !ctir !146
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  store i8* %dirname, i8** %dirname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !7925, metadata !DIExpression()), !dbg !7926
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7927, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.declare(metadata i8** %dirnamep, metadata !7929, metadata !DIExpression()), !dbg !7930
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !7931
  store i8* %0, i8** %dirnamep, align 8, !dbg !7930
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !7932
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !7932, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7932
  %conv = sext i8 %2 to i32, !dbg !7932
  %cmp = icmp ne i32 %conv, 46, !dbg !7934
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7935

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !7936
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7936, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7936
  %conv3 = sext i8 %4 to i32, !dbg !7936
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !7937
  br i1 %cmp4, label %if.then, label %if.end15, !dbg !7938

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.cond, !dbg !7939

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load i8*, i8** %dirnamep, align 8, !dbg !7941
  %6 = load i8, i8* %5, align 1, !dbg !7942, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !7939
  br i1 %tobool, label %while.body, label %while.end, !dbg !7939

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %dirnamep, align 8, !dbg !7943
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7943, !ctir !147
  store i8* %incdec.ptr, i8** %dirnamep, align 8, !dbg !7943
  %8 = load i8, i8* %7, align 1, !dbg !7944, !ctir !147
  %9 = load i8*, i8** %dest.addr, align 8, !dbg !7945
  %incdec.ptr6 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7945, !ctir !144
  store i8* %incdec.ptr6, i8** %dest.addr, align 8, !dbg !7945
  store i8 %8, i8* %9, align 1, !dbg !7946, !ctir !144
  br label %while.cond, !dbg !7939, !llvm.loop !7947

while.end:                                        ; preds = %while.cond
  %10 = load i8*, i8** %dirnamep, align 8, !dbg !7948
  %11 = load i8*, i8** %dirname.addr, align 8, !dbg !7950
  %cmp7 = icmp ugt i8* %10, %11, !dbg !7951
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !7952

land.lhs.true:                                    ; preds = %while.end
  %12 = load i8*, i8** %dirnamep, align 8, !dbg !7953
  %arrayidx9 = getelementptr inbounds i8, i8* %12, i64 -1, !dbg !7953, !ctir !146
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !7953
  %conv10 = sext i8 %13 to i32, !dbg !7953
  %cmp11 = icmp ne i32 %conv10, 47, !dbg !7954
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !7955

if.then13:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %dest.addr, align 8, !dbg !7956
  %incdec.ptr14 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7956, !ctir !144
  store i8* %incdec.ptr14, i8** %dest.addr, align 8, !dbg !7956
  store i8 47, i8* %14, align 1, !dbg !7957, !ctir !144
  br label %if.end, !dbg !7958

if.end:                                           ; preds = %if.then13, %land.lhs.true, %while.end
  br label %if.end15, !dbg !7959

if.end15:                                         ; preds = %if.end, %lor.lhs.false
  br label %while.cond16, !dbg !7960

while.cond16:                                     ; preds = %while.body18, %if.end15
  %15 = load i8*, i8** %name.addr, align 8, !dbg !7961
  %16 = load i8, i8* %15, align 1, !dbg !7962, !ctir !147
  %tobool17 = icmp ne i8 %16, 0, !dbg !7960
  br i1 %tobool17, label %while.body18, label %while.end21, !dbg !7960

while.body18:                                     ; preds = %while.cond16
  %17 = load i8*, i8** %name.addr, align 8, !dbg !7963
  %incdec.ptr19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7963, !ctir !147
  store i8* %incdec.ptr19, i8** %name.addr, align 8, !dbg !7963
  %18 = load i8, i8* %17, align 1, !dbg !7964, !ctir !147
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !7965
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7965, !ctir !144
  store i8* %incdec.ptr20, i8** %dest.addr, align 8, !dbg !7965
  store i8 %18, i8* %19, align 1, !dbg !7966, !ctir !144
  br label %while.cond16, !dbg !7960, !llvm.loop !7967

while.end21:                                      ; preds = %while.cond16
  %20 = load i8*, i8** %dest.addr, align 8, !dbg !7968
  store i8 0, i8* %20, align 1, !dbg !7969, !ctir !144
  ret void, !dbg !7970
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !1035 {
entry:
  %retval = alloca i1, align 1
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %b = alloca i8, align 1, !ctir !141
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7973, metadata !DIExpression()), !dbg !7974
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7975
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !7977, !ctir !184
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !7978, !ctir !190
  %1 = load i64, i64* %st_dev, align 8, !dbg !7978, !ctir !194
  %2 = load i64, i64* @has_capability_cache.unsupported_device, align 8, !dbg !7979
  %cmp = icmp eq i64 %1, %2, !dbg !7980
  br i1 %cmp, label %if.then, label %if.end, !dbg !7981

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !7982
  store i32 95, i32* %call, align 4, !dbg !7984, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !7985
  br label %return, !dbg !7985

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %b, metadata !7986, metadata !DIExpression()), !dbg !7987
  %3 = load i8*, i8** %file.addr, align 8, !dbg !7988
  %call1 = call zeroext i1 @has_capability(i8* %3), !dbg !7989
  %frombool = zext i1 %call1 to i8, !dbg !7987
  store i8 %frombool, i8* %b, align 1, !dbg !7987
  %4 = load i8, i8* %b, align 1, !dbg !7990
  %tobool = trunc i8 %4 to i1, !dbg !7990
  br i1 %tobool, label %if.end7, label %land.lhs.true, !dbg !7992

land.lhs.true:                                    ; preds = %if.end
  %call2 = call i32* @__errno_location() #17, !dbg !7993
  %5 = load i32, i32* %call2, align 4, !dbg !7993, !ctir !27
  %call3 = call zeroext i1 @errno_unsupported(i32 %5), !dbg !7994
  br i1 %call3, label %if.then4, label %if.end7, !dbg !7995

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7996
  %stat5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !7997, !ctir !184
  %st_dev6 = getelementptr inbounds %struct.stat, %struct.stat* %stat5, i32 0, i32 0, !dbg !7998, !ctir !190
  %7 = load i64, i64* %st_dev6, align 8, !dbg !7998, !ctir !194
  store i64 %7, i64* @has_capability_cache.unsupported_device, align 8, !dbg !7999
  br label %if.end7, !dbg !8000

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %8 = load i8, i8* %b, align 1, !dbg !8001
  %tobool8 = trunc i8 %8 to i1, !dbg !8001
  store i1 %tobool8, i1* %retval, align 1, !dbg !8002
  br label %return, !dbg !8002

return:                                           ; preds = %if.end7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8003
  ret i1 %9, !dbg !8003
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getfilecon_cache(i8* %file, %struct.fileinfo* %f, i1 zeroext %deref) #0 !dbg !1040 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %deref.addr = alloca i8, align 1
  %r = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8006, metadata !DIExpression()), !dbg !8007
  %frombool = zext i1 %deref to i8
  store i8 %frombool, i8* %deref.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %deref.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8010
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8012, !ctir !184
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8013, !ctir !190
  %1 = load i64, i64* %st_dev, align 8, !dbg !8013, !ctir !194
  %2 = load i64, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8014
  %cmp = icmp eq i64 %1, %2, !dbg !8015
  br i1 %cmp, label %if.then, label %if.end, !dbg !8016

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8017
  store i32 95, i32* %call, align 4, !dbg !8019, !ctir !27
  store i32 -1, i32* %retval, align 4, !dbg !8020
  br label %return, !dbg !8020

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8021, metadata !DIExpression()), !dbg !8022
  store i32 0, i32* %r, align 4, !dbg !8022
  %3 = load i8, i8* %deref.addr, align 1, !dbg !8023
  %tobool = trunc i8 %3 to i1, !dbg !8023
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8023

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %file.addr, align 8, !dbg !8024
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8025
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 6, !dbg !8026, !ctir !184
  %call1 = call i32 @getfilecon(i8* %4, i8** %scontext), !dbg !8027
  br label %cond.end, !dbg !8023

cond.false:                                       ; preds = %if.end
  %6 = load i8*, i8** %file.addr, align 8, !dbg !8028
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8029
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 6, !dbg !8030, !ctir !184
  %call3 = call i32 @lgetfilecon(i8* %6, i8** %scontext2), !dbg !8031
  br label %cond.end, !dbg !8023

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call3, %cond.false ], !dbg !8023
  store i32 %cond, i32* %r, align 4, !dbg !8032
  %8 = load i32, i32* %r, align 4, !dbg !8033
  %cmp4 = icmp slt i32 %8, 0, !dbg !8035
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8036

land.lhs.true:                                    ; preds = %cond.end
  %call5 = call i32* @__errno_location() #17, !dbg !8037
  %9 = load i32, i32* %call5, align 4, !dbg !8037, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %9), !dbg !8038
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8039

if.then7:                                         ; preds = %land.lhs.true
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8040
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !8041, !ctir !184
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8042, !ctir !190
  %11 = load i64, i64* %st_dev9, align 8, !dbg !8042, !ctir !194
  store i64 %11, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8043
  br label %if.end10, !dbg !8044

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %cond.end
  %12 = load i32, i32* %r, align 4, !dbg !8045
  store i32 %12, i32* %retval, align 4, !dbg !8046
  br label %return, !dbg !8046

return:                                           ; preds = %if.end10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8047
  ret i32 %13, !dbg !8047
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #0 !dbg !8048 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8051, metadata !DIExpression()), !dbg !8052
  %0 = load i32, i32* %err.addr, align 4, !dbg !8053
  %cmp = icmp eq i32 %0, 95, !dbg !8054
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8055

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8055

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8056
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @file_has_acl_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !1045 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %n = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8061
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8063, !ctir !184
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8064, !ctir !190
  %1 = load i64, i64* %st_dev, align 8, !dbg !8064, !ctir !194
  %2 = load i64, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8065
  %cmp = icmp eq i64 %1, %2, !dbg !8066
  br i1 %cmp, label %if.then, label %if.end, !dbg !8067

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8068
  store i32 95, i32* %call, align 4, !dbg !8070, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !8071
  br label %return, !dbg !8071

if.end:                                           ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !8072
  store i32 0, i32* %call1, align 4, !dbg !8073, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8074, metadata !DIExpression()), !dbg !8075
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8076
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8077
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8078, !ctir !184
  %call3 = call i32 @file_has_acl(i8* %3, %struct.stat* %stat2), !dbg !8079
  store i32 %call3, i32* %n, align 4, !dbg !8075
  %5 = load i32, i32* %n, align 4, !dbg !8080
  %cmp4 = icmp sle i32 %5, 0, !dbg !8082
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8083

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #17, !dbg !8084
  %6 = load i32, i32* %call5, align 4, !dbg !8084, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %6), !dbg !8085
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8086

if.then7:                                         ; preds = %land.lhs.true
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8087
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 3, !dbg !8088, !ctir !184
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8089, !ctir !190
  %8 = load i64, i64* %st_dev9, align 8, !dbg !8089, !ctir !194
  store i64 %8, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8090
  br label %if.end10, !dbg !8091

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %9 = load i32, i32* %n, align 4, !dbg !8092
  store i32 %9, i32* %retval, align 4, !dbg !8093
  br label %return, !dbg !8093

return:                                           ; preds = %if.end10, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8094
  ret i32 %10, !dbg !8094
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_link_name(i8* %filename, %struct.fileinfo* %f, i1 zeroext %command_line_arg) #0 !dbg !8095 {
entry:
  %filename.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !8104
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8105
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 3, !dbg !8106, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8107, !ctir !190
  %2 = load i64, i64* %st_size, align 8, !dbg !8107, !ctir !180
  %call = call i8* @areadlink_with_size(i8* %0, i64 %2), !dbg !8108
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8109
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 1, !dbg !8110, !ctir !184
  store i8* %call, i8** %linkname, align 8, !dbg !8111, !ctir !143
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8112
  %linkname1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 1, !dbg !8114, !ctir !184
  %5 = load i8*, i8** %linkname1, align 8, !dbg !8114, !ctir !143
  %cmp = icmp eq i8* %5, null, !dbg !8115
  br i1 %cmp, label %if.then, label %if.end, !dbg !8116

if.then:                                          ; preds = %entry
  %6 = load i8, i8* %command_line_arg.addr, align 1, !dbg !8117
  %tobool = trunc i8 %6 to i1, !dbg !8117
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i64 0, i64 0)) #13, !dbg !8118
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !8119
  call void @file_failure(i1 zeroext %tobool, i8* %call2, i8* %7), !dbg !8120
  br label %if.end, !dbg !8120

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8121
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_link_name(i8* %name, i8* %linkname) #0 !dbg !8122 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %linkname.addr = alloca i8*, align 8
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8125, metadata !DIExpression()), !dbg !8126
  store i8* %linkname, i8** %linkname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %linkname.addr, metadata !8127, metadata !DIExpression()), !dbg !8128
  %0 = load i8*, i8** %linkname.addr, align 8, !dbg !8129
  %tobool = icmp ne i8* %0, null, !dbg !8129
  br i1 %tobool, label %if.end, label %if.then, !dbg !8131

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8132
  br label %return, !dbg !8132

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %linkname.addr, align 8, !dbg !8133
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8133, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8133
  %conv = sext i8 %2 to i32, !dbg !8133
  %cmp = icmp eq i32 %conv, 47, !dbg !8133
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8135

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %linkname.addr, align 8, !dbg !8136
  %call = call noalias i8* @xstrdup(i8* %3), !dbg !8137
  store i8* %call, i8** %retval, align 8, !dbg !8138
  br label %return, !dbg !8138

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !8139, metadata !DIExpression()), !dbg !8140
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8141
  %call4 = call i64 @dir_len(i8* %4) #16, !dbg !8142
  store i64 %call4, i64* %prefix_len, align 8, !dbg !8140
  %5 = load i64, i64* %prefix_len, align 8, !dbg !8143
  %cmp5 = icmp eq i64 %5, 0, !dbg !8145
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !8146

if.then7:                                         ; preds = %if.end3
  %6 = load i8*, i8** %linkname.addr, align 8, !dbg !8147
  %call8 = call noalias i8* @xstrdup(i8* %6), !dbg !8148
  store i8* %call8, i8** %retval, align 8, !dbg !8149
  br label %return, !dbg !8149

if.end9:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8150, metadata !DIExpression()), !dbg !8151
  %7 = load i64, i64* %prefix_len, align 8, !dbg !8152
  %add = add i64 %7, 1, !dbg !8153
  %8 = load i8*, i8** %linkname.addr, align 8, !dbg !8154
  %call10 = call i64 @strlen(i8* %8) #16, !dbg !8155
  %add11 = add i64 %add, %call10, !dbg !8156
  %add12 = add i64 %add11, 1, !dbg !8157
  %call13 = call noalias i8* @xmalloc(i64 %add12), !dbg !8158
  store i8* %call13, i8** %p, align 8, !dbg !8151
  %9 = load i8*, i8** %name.addr, align 8, !dbg !8159
  %10 = load i64, i64* %prefix_len, align 8, !dbg !8159
  %sub = sub i64 %10, 1, !dbg !8159
  %arrayidx14 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !8159, !ctir !146
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !8159
  %conv15 = sext i8 %11 to i32, !dbg !8159
  %cmp16 = icmp eq i32 %conv15, 47, !dbg !8159
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !8161

if.then18:                                        ; preds = %if.end9
  %12 = load i64, i64* %prefix_len, align 8, !dbg !8162
  %inc = add i64 %12, 1, !dbg !8162
  store i64 %inc, i64* %prefix_len, align 8, !dbg !8162
  br label %if.end19, !dbg !8162

if.end19:                                         ; preds = %if.then18, %if.end9
  %13 = load i8*, i8** %p, align 8, !dbg !8163
  %14 = load i8*, i8** %name.addr, align 8, !dbg !8164
  %15 = load i64, i64* %prefix_len, align 8, !dbg !8165
  %call20 = call i8* @stpncpy(i8* %13, i8* %14, i64 %15) #13, !dbg !8166
  %16 = load i8*, i8** %linkname.addr, align 8, !dbg !8167
  %call21 = call i8* @stpcpy(i8* %call20, i8* %16) #13, !dbg !8168
  %17 = load i8*, i8** %p, align 8, !dbg !8169
  store i8* %17, i8** %retval, align 8, !dbg !8170
  br label %return, !dbg !8170

return:                                           ; preds = %if.end19, %if.then7, %if.then2, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !8171
  ret i8* %18, !dbg !8171
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_width(i32 %u) #0 !dbg !8172 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8177
  %tobool = trunc i8 %0 to i1, !dbg !8177
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8177

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8177

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %u.addr, align 4, !dbg !8178
  %call = call i8* @getuser(i32 %1), !dbg !8179
  br label %cond.end, !dbg !8177

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8177
  %2 = load i32, i32* %u.addr, align 4, !dbg !8180
  %conv = zext i32 %2 to i64, !dbg !8180
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8181
  ret i32 %call1, !dbg !8182
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_group_width(i32 %g) #0 !dbg !8183 {
entry:
  %g.addr = alloca i32, align 4
  store i32 %g, i32* %g.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8188
  %tobool = trunc i8 %0 to i1, !dbg !8188
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8188

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8188

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %g.addr, align 4, !dbg !8189
  %call = call i8* @getgroup(i32 %1), !dbg !8190
  br label %cond.end, !dbg !8188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8188
  %2 = load i32, i32* %g.addr, align 4, !dbg !8191
  %conv = zext i32 %2 to i64, !dbg !8191
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8192
  ret i32 %call1, !dbg !8193
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_or_group_width(i8* %name, i64 %id) #0 !dbg !8194 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %len = alloca i32, align 4, !ctir !27
  %buf = alloca [21 x i8], align 16, !ctir !731
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8197, metadata !DIExpression()), !dbg !8198
  store i64 %id, i64* %id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8201
  %tobool = icmp ne i8* %0, null, !dbg !8201
  br i1 %tobool, label %if.then, label %if.else, !dbg !8203

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8204, metadata !DIExpression()), !dbg !8206
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8207
  %call = call i32 @gnu_mbswidth(i8* %1, i32 0), !dbg !8208
  store i32 %call, i32* %len, align 4, !dbg !8206
  %2 = load i32, i32* %len, align 4, !dbg !8209
  %cmp = icmp sgt i32 0, %2, !dbg !8209
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8209

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8209

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %len, align 4, !dbg !8209
  br label %cond.end, !dbg !8209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !8209
  store i32 %cond, i32* %retval, align 4, !dbg !8210
  br label %return, !dbg !8210

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf, metadata !8211, metadata !DIExpression()), !dbg !8213
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8214, !ctir !731
  %4 = load i64, i64* %id.addr, align 8, !dbg !8215
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.221, i64 0, i64 0), i64 %4) #13, !dbg !8216
  %arraydecay2 = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8217, !ctir !731
  %call3 = call i64 @strlen(i8* %arraydecay2) #16, !dbg !8218
  %conv = trunc i64 %call3 to i32, !dbg !8218
  store i32 %conv, i32* %retval, align 4, !dbg !8219
  br label %return, !dbg !8219

return:                                           ; preds = %if.else, %cond.end
  %5 = load i32, i32* %retval, align 4, !dbg !8220
  ret i32 %5, !dbg !8220
}

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #0 !dbg !8221 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8222, metadata !DIExpression()), !dbg !8223
  %0 = load i32, i32* %err.addr, align 4, !dbg !8224
  %cmp = icmp eq i32 %0, 22, !dbg !8225
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8226

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !8227
  %cmp1 = icmp eq i32 %1, 38, !dbg !8228
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !8229

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* %err.addr, align 4, !dbg !8230
  %call = call zeroext i1 @is_ENOTSUP(i32 %2), !dbg !8231
  br label %lor.end, !dbg !8229

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %3 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %3, !dbg !8232
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability(i8* %name) #0 !dbg !8233 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  %call = call i32* @__errno_location() #17, !dbg !8236
  store i32 95, i32* %call, align 4, !dbg !8237, !ctir !27
  ret i1 false, !dbg !8238
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @known_term_type() #0 !dbg !8239 {
entry:
  %retval = alloca i1, align 1
  %term = alloca i8*, align 8, !ctir !146
  %line = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %term, metadata !8240, metadata !DIExpression()), !dbg !8241
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i64 0, i64 0)) #13, !dbg !8242
  store i8* %call, i8** %term, align 8, !dbg !8241
  %0 = load i8*, i8** %term, align 8, !dbg !8243
  %tobool = icmp ne i8* %0, null, !dbg !8243
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8245

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %term, align 8, !dbg !8246
  %2 = load i8, i8* %1, align 1, !dbg !8247, !ctir !147
  %tobool1 = icmp ne i8 %2, 0, !dbg !8247
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8248

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !8249
  br label %return, !dbg !8249

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %line, metadata !8250, metadata !DIExpression()), !dbg !8251
  store i8* getelementptr inbounds ([4304 x i8], [4304 x i8]* @G_line, i64 0, i64 0), i8** %line, align 8, !dbg !8251
  br label %while.cond, !dbg !8252

while.cond:                                       ; preds = %if.end9, %if.end
  %3 = load i8*, i8** %line, align 8, !dbg !8253
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !8254
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4304 x i8]* @G_line to i64), !dbg !8254
  %cmp = icmp ult i64 %sub.ptr.sub, 4304, !dbg !8255
  br i1 %cmp, label %while.body, label %while.end, !dbg !8252

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %line, align 8, !dbg !8256
  %call2 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), i64 5) #16, !dbg !8256
  %cmp3 = icmp eq i32 %call2, 0, !dbg !8259
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !8260

if.then4:                                         ; preds = %while.body
  %5 = load i8*, i8** %line, align 8, !dbg !8261
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 5, !dbg !8264, !ctir !147
  %6 = load i8*, i8** %term, align 8, !dbg !8265
  %call5 = call i32 @fnmatch(i8* %add.ptr, i8* %6, i32 0), !dbg !8266
  %cmp6 = icmp eq i32 %call5, 0, !dbg !8267
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8268

if.then7:                                         ; preds = %if.then4
  store i1 true, i1* %retval, align 1, !dbg !8269
  br label %return, !dbg !8269

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !8270

if.end9:                                          ; preds = %if.end8, %while.body
  %7 = load i8*, i8** %line, align 8, !dbg !8271
  %call10 = call i64 @strlen(i8* %7) #16, !dbg !8272
  %add = add i64 %call10, 1, !dbg !8273
  %8 = load i8*, i8** %line, align 8, !dbg !8274
  %add.ptr11 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !8274, !ctir !147
  store i8* %add.ptr11, i8** %line, align 8, !dbg !8274
  br label %while.cond, !dbg !8252, !llvm.loop !8275

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !8277
  br label %return, !dbg !8277

return:                                           ; preds = %while.end, %if.then7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8278
  ret i1 %9, !dbg !8278
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @get_funky_string(i8** %dest, i8** %src, i1 zeroext %equals_end, i64* %output_count) #0 !dbg !138 {
entry:
  %dest.addr = alloca i8**, align 8
  %src.addr = alloca i8**, align 8
  %equals_end.addr = alloca i8, align 1
  %output_count.addr = alloca i64*, align 8
  %num = alloca i8, align 1, !ctir !144
  %count = alloca i64, align 8, !ctir !149
  %state = alloca i32, align 4, !ctir !137
  %p = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  store i8** %src, i8*** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  %frombool = zext i1 %equals_end to i8
  store i8 %frombool, i8* %equals_end.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %equals_end.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store i64* %output_count, i64** %output_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %output_count.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i8* %num, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8293, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.declare(metadata i8** %q, metadata !8295, metadata !DIExpression()), !dbg !8296
  %0 = load i8**, i8*** %src.addr, align 8, !dbg !8297
  %1 = load i8*, i8** %0, align 8, !dbg !8298, !ctir !146
  store i8* %1, i8** %p, align 8, !dbg !8299
  %2 = load i8**, i8*** %dest.addr, align 8, !dbg !8300
  %3 = load i8*, i8** %2, align 8, !dbg !8301, !ctir !143
  store i8* %3, i8** %q, align 8, !dbg !8302
  store i64 0, i64* %count, align 8, !dbg !8303
  store i8 0, i8* %num, align 1, !dbg !8304
  store i32 0, i32* %state, align 4, !dbg !8305
  br label %while.cond, !dbg !8306

while.cond:                                       ; preds = %sw.epilog106, %entry
  %4 = load i32, i32* %state, align 4, !dbg !8307
  %cmp = icmp ult i32 %4, 5, !dbg !8308
  br i1 %cmp, label %while.body, label %while.end, !dbg !8306

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %state, align 4, !dbg !8309
  switch i32 %5, label %sw.default105 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb34
    i32 3, label %sw.bb50
    i32 4, label %sw.bb82
  ], !dbg !8311

sw.bb:                                            ; preds = %while.body
  %6 = load i8*, i8** %p, align 8, !dbg !8312
  %7 = load i8, i8* %6, align 1, !dbg !8314, !ctir !147
  %conv = sext i8 %7 to i32, !dbg !8314
  switch i32 %conv, label %sw.default [
    i32 58, label %sw.bb1
    i32 0, label %sw.bb1
    i32 92, label %sw.bb2
    i32 94, label %sw.bb3
    i32 61, label %sw.bb5
  ], !dbg !8315

sw.bb1:                                           ; preds = %sw.bb, %sw.bb
  store i32 5, i32* %state, align 4, !dbg !8316
  br label %sw.epilog, !dbg !8318

sw.bb2:                                           ; preds = %sw.bb
  store i32 1, i32* %state, align 4, !dbg !8319
  %8 = load i8*, i8** %p, align 8, !dbg !8320
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8320, !ctir !147
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8320
  br label %sw.epilog, !dbg !8321

sw.bb3:                                           ; preds = %sw.bb
  store i32 4, i32* %state, align 4, !dbg !8322
  %9 = load i8*, i8** %p, align 8, !dbg !8323
  %incdec.ptr4 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8323, !ctir !147
  store i8* %incdec.ptr4, i8** %p, align 8, !dbg !8323
  br label %sw.epilog, !dbg !8324

sw.bb5:                                           ; preds = %sw.bb
  %10 = load i8, i8* %equals_end.addr, align 1, !dbg !8325
  %tobool = trunc i8 %10 to i1, !dbg !8325
  br i1 %tobool, label %if.then, label %if.end, !dbg !8327

if.then:                                          ; preds = %sw.bb5
  store i32 5, i32* %state, align 4, !dbg !8328
  br label %sw.epilog, !dbg !8330

if.end:                                           ; preds = %sw.bb5
  br label %sw.default, !dbg !8331

sw.default:                                       ; preds = %sw.bb, %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !8332
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !8332, !ctir !147
  store i8* %incdec.ptr6, i8** %p, align 8, !dbg !8332
  %12 = load i8, i8* %11, align 1, !dbg !8333, !ctir !147
  %13 = load i8*, i8** %q, align 8, !dbg !8334
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8334, !ctir !144
  store i8* %incdec.ptr7, i8** %q, align 8, !dbg !8334
  store i8 %12, i8* %13, align 1, !dbg !8335, !ctir !144
  %14 = load i64, i64* %count, align 8, !dbg !8336
  %inc = add i64 %14, 1, !dbg !8336
  store i64 %inc, i64* %count, align 8, !dbg !8336
  br label %sw.epilog, !dbg !8337

sw.epilog:                                        ; preds = %sw.default, %if.then, %sw.bb3, %sw.bb2, %sw.bb1
  br label %sw.epilog106, !dbg !8338

sw.bb8:                                           ; preds = %while.body
  %15 = load i8*, i8** %p, align 8, !dbg !8339
  %16 = load i8, i8* %15, align 1, !dbg !8340, !ctir !147
  %conv9 = sext i8 %16 to i32, !dbg !8340
  switch i32 %conv9, label %sw.default25 [
    i32 48, label %sw.bb10
    i32 49, label %sw.bb10
    i32 50, label %sw.bb10
    i32 51, label %sw.bb10
    i32 52, label %sw.bb10
    i32 53, label %sw.bb10
    i32 54, label %sw.bb10
    i32 55, label %sw.bb10
    i32 120, label %sw.bb13
    i32 88, label %sw.bb13
    i32 97, label %sw.bb14
    i32 98, label %sw.bb15
    i32 101, label %sw.bb16
    i32 102, label %sw.bb17
    i32 110, label %sw.bb18
    i32 114, label %sw.bb19
    i32 116, label %sw.bb20
    i32 118, label %sw.bb21
    i32 63, label %sw.bb22
    i32 95, label %sw.bb23
    i32 0, label %sw.bb24
  ], !dbg !8341

sw.bb10:                                          ; preds = %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8
  store i32 2, i32* %state, align 4, !dbg !8342
  %17 = load i8*, i8** %p, align 8, !dbg !8344
  %18 = load i8, i8* %17, align 1, !dbg !8345, !ctir !147
  %conv11 = sext i8 %18 to i32, !dbg !8345
  %sub = sub nsw i32 %conv11, 48, !dbg !8346
  %conv12 = trunc i32 %sub to i8, !dbg !8345
  store i8 %conv12, i8* %num, align 1, !dbg !8347
  br label %sw.epilog26, !dbg !8348

sw.bb13:                                          ; preds = %sw.bb8, %sw.bb8
  store i32 3, i32* %state, align 4, !dbg !8349
  store i8 0, i8* %num, align 1, !dbg !8350
  br label %sw.epilog26, !dbg !8351

sw.bb14:                                          ; preds = %sw.bb8
  store i8 7, i8* %num, align 1, !dbg !8352
  br label %sw.epilog26, !dbg !8353

sw.bb15:                                          ; preds = %sw.bb8
  store i8 8, i8* %num, align 1, !dbg !8354
  br label %sw.epilog26, !dbg !8355

sw.bb16:                                          ; preds = %sw.bb8
  store i8 27, i8* %num, align 1, !dbg !8356
  br label %sw.epilog26, !dbg !8357

sw.bb17:                                          ; preds = %sw.bb8
  store i8 12, i8* %num, align 1, !dbg !8358
  br label %sw.epilog26, !dbg !8359

sw.bb18:                                          ; preds = %sw.bb8
  store i8 10, i8* %num, align 1, !dbg !8360
  br label %sw.epilog26, !dbg !8361

sw.bb19:                                          ; preds = %sw.bb8
  store i8 13, i8* %num, align 1, !dbg !8362
  br label %sw.epilog26, !dbg !8363

sw.bb20:                                          ; preds = %sw.bb8
  store i8 9, i8* %num, align 1, !dbg !8364
  br label %sw.epilog26, !dbg !8365

sw.bb21:                                          ; preds = %sw.bb8
  store i8 11, i8* %num, align 1, !dbg !8366
  br label %sw.epilog26, !dbg !8367

sw.bb22:                                          ; preds = %sw.bb8
  store i8 127, i8* %num, align 1, !dbg !8368
  br label %sw.epilog26, !dbg !8369

sw.bb23:                                          ; preds = %sw.bb8
  store i8 32, i8* %num, align 1, !dbg !8370
  br label %sw.epilog26, !dbg !8371

sw.bb24:                                          ; preds = %sw.bb8
  store i32 6, i32* %state, align 4, !dbg !8372
  br label %sw.epilog26, !dbg !8373

sw.default25:                                     ; preds = %sw.bb8
  %19 = load i8*, i8** %p, align 8, !dbg !8374
  %20 = load i8, i8* %19, align 1, !dbg !8375, !ctir !147
  store i8 %20, i8* %num, align 1, !dbg !8376
  br label %sw.epilog26, !dbg !8377

sw.epilog26:                                      ; preds = %sw.default25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb10
  %21 = load i32, i32* %state, align 4, !dbg !8378
  %cmp27 = icmp eq i32 %21, 1, !dbg !8380
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !8381

if.then29:                                        ; preds = %sw.epilog26
  %22 = load i8, i8* %num, align 1, !dbg !8382
  %23 = load i8*, i8** %q, align 8, !dbg !8384
  %incdec.ptr30 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8384, !ctir !144
  store i8* %incdec.ptr30, i8** %q, align 8, !dbg !8384
  store i8 %22, i8* %23, align 1, !dbg !8385, !ctir !144
  %24 = load i64, i64* %count, align 8, !dbg !8386
  %inc31 = add i64 %24, 1, !dbg !8386
  store i64 %inc31, i64* %count, align 8, !dbg !8386
  store i32 0, i32* %state, align 4, !dbg !8387
  br label %if.end32, !dbg !8388

if.end32:                                         ; preds = %if.then29, %sw.epilog26
  %25 = load i8*, i8** %p, align 8, !dbg !8389
  %incdec.ptr33 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !8389, !ctir !147
  store i8* %incdec.ptr33, i8** %p, align 8, !dbg !8389
  br label %sw.epilog106, !dbg !8390

sw.bb34:                                          ; preds = %while.body
  %26 = load i8*, i8** %p, align 8, !dbg !8391
  %27 = load i8, i8* %26, align 1, !dbg !8393, !ctir !147
  %conv35 = sext i8 %27 to i32, !dbg !8393
  %cmp36 = icmp slt i32 %conv35, 48, !dbg !8394
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !8395

lor.lhs.false:                                    ; preds = %sw.bb34
  %28 = load i8*, i8** %p, align 8, !dbg !8396
  %29 = load i8, i8* %28, align 1, !dbg !8397, !ctir !147
  %conv38 = sext i8 %29 to i32, !dbg !8397
  %cmp39 = icmp sgt i32 %conv38, 55, !dbg !8398
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !8399

if.then41:                                        ; preds = %lor.lhs.false, %sw.bb34
  %30 = load i8, i8* %num, align 1, !dbg !8400
  %31 = load i8*, i8** %q, align 8, !dbg !8402
  %incdec.ptr42 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8402, !ctir !144
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !8402
  store i8 %30, i8* %31, align 1, !dbg !8403, !ctir !144
  %32 = load i64, i64* %count, align 8, !dbg !8404
  %inc43 = add i64 %32, 1, !dbg !8404
  store i64 %inc43, i64* %count, align 8, !dbg !8404
  store i32 0, i32* %state, align 4, !dbg !8405
  br label %if.end49, !dbg !8406

if.else:                                          ; preds = %lor.lhs.false
  %33 = load i8, i8* %num, align 1, !dbg !8407
  %conv44 = sext i8 %33 to i32, !dbg !8407
  %shl = shl i32 %conv44, 3, !dbg !8408
  %34 = load i8*, i8** %p, align 8, !dbg !8409
  %incdec.ptr45 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !8409, !ctir !147
  store i8* %incdec.ptr45, i8** %p, align 8, !dbg !8409
  %35 = load i8, i8* %34, align 1, !dbg !8410, !ctir !147
  %conv46 = sext i8 %35 to i32, !dbg !8410
  %sub47 = sub nsw i32 %conv46, 48, !dbg !8411
  %add = add nsw i32 %shl, %sub47, !dbg !8412
  %conv48 = trunc i32 %add to i8, !dbg !8413
  store i8 %conv48, i8* %num, align 1, !dbg !8414
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41
  br label %sw.epilog106, !dbg !8415

sw.bb50:                                          ; preds = %while.body
  %36 = load i8*, i8** %p, align 8, !dbg !8416
  %37 = load i8, i8* %36, align 1, !dbg !8417, !ctir !147
  %conv51 = sext i8 %37 to i32, !dbg !8417
  switch i32 %conv51, label %sw.default78 [
    i32 48, label %sw.bb52
    i32 49, label %sw.bb52
    i32 50, label %sw.bb52
    i32 51, label %sw.bb52
    i32 52, label %sw.bb52
    i32 53, label %sw.bb52
    i32 54, label %sw.bb52
    i32 55, label %sw.bb52
    i32 56, label %sw.bb52
    i32 57, label %sw.bb52
    i32 97, label %sw.bb60
    i32 98, label %sw.bb60
    i32 99, label %sw.bb60
    i32 100, label %sw.bb60
    i32 101, label %sw.bb60
    i32 102, label %sw.bb60
    i32 65, label %sw.bb69
    i32 66, label %sw.bb69
    i32 67, label %sw.bb69
    i32 68, label %sw.bb69
    i32 69, label %sw.bb69
    i32 70, label %sw.bb69
  ], !dbg !8418

sw.bb52:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %38 = load i8, i8* %num, align 1, !dbg !8419
  %conv53 = sext i8 %38 to i32, !dbg !8419
  %shl54 = shl i32 %conv53, 4, !dbg !8421
  %39 = load i8*, i8** %p, align 8, !dbg !8422
  %incdec.ptr55 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8422, !ctir !147
  store i8* %incdec.ptr55, i8** %p, align 8, !dbg !8422
  %40 = load i8, i8* %39, align 1, !dbg !8423, !ctir !147
  %conv56 = sext i8 %40 to i32, !dbg !8423
  %sub57 = sub nsw i32 %conv56, 48, !dbg !8424
  %add58 = add nsw i32 %shl54, %sub57, !dbg !8425
  %conv59 = trunc i32 %add58 to i8, !dbg !8426
  store i8 %conv59, i8* %num, align 1, !dbg !8427
  br label %sw.epilog81, !dbg !8428

sw.bb60:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %41 = load i8, i8* %num, align 1, !dbg !8429
  %conv61 = sext i8 %41 to i32, !dbg !8429
  %shl62 = shl i32 %conv61, 4, !dbg !8430
  %42 = load i8*, i8** %p, align 8, !dbg !8431
  %incdec.ptr63 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !8431, !ctir !147
  store i8* %incdec.ptr63, i8** %p, align 8, !dbg !8431
  %43 = load i8, i8* %42, align 1, !dbg !8432, !ctir !147
  %conv64 = sext i8 %43 to i32, !dbg !8432
  %sub65 = sub nsw i32 %conv64, 97, !dbg !8433
  %add66 = add nsw i32 %shl62, %sub65, !dbg !8434
  %add67 = add nsw i32 %add66, 10, !dbg !8435
  %conv68 = trunc i32 %add67 to i8, !dbg !8436
  store i8 %conv68, i8* %num, align 1, !dbg !8437
  br label %sw.epilog81, !dbg !8438

sw.bb69:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %44 = load i8, i8* %num, align 1, !dbg !8439
  %conv70 = sext i8 %44 to i32, !dbg !8439
  %shl71 = shl i32 %conv70, 4, !dbg !8440
  %45 = load i8*, i8** %p, align 8, !dbg !8441
  %incdec.ptr72 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !8441, !ctir !147
  store i8* %incdec.ptr72, i8** %p, align 8, !dbg !8441
  %46 = load i8, i8* %45, align 1, !dbg !8442, !ctir !147
  %conv73 = sext i8 %46 to i32, !dbg !8442
  %sub74 = sub nsw i32 %conv73, 65, !dbg !8443
  %add75 = add nsw i32 %shl71, %sub74, !dbg !8444
  %add76 = add nsw i32 %add75, 10, !dbg !8445
  %conv77 = trunc i32 %add76 to i8, !dbg !8446
  store i8 %conv77, i8* %num, align 1, !dbg !8447
  br label %sw.epilog81, !dbg !8448

sw.default78:                                     ; preds = %sw.bb50
  %47 = load i8, i8* %num, align 1, !dbg !8449
  %48 = load i8*, i8** %q, align 8, !dbg !8450
  %incdec.ptr79 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !8450, !ctir !144
  store i8* %incdec.ptr79, i8** %q, align 8, !dbg !8450
  store i8 %47, i8* %48, align 1, !dbg !8451, !ctir !144
  %49 = load i64, i64* %count, align 8, !dbg !8452
  %inc80 = add i64 %49, 1, !dbg !8452
  store i64 %inc80, i64* %count, align 8, !dbg !8452
  store i32 0, i32* %state, align 4, !dbg !8453
  br label %sw.epilog81, !dbg !8454

sw.epilog81:                                      ; preds = %sw.default78, %sw.bb69, %sw.bb60, %sw.bb52
  br label %sw.epilog106, !dbg !8455

sw.bb82:                                          ; preds = %while.body
  store i32 0, i32* %state, align 4, !dbg !8456
  %50 = load i8*, i8** %p, align 8, !dbg !8457
  %51 = load i8, i8* %50, align 1, !dbg !8459, !ctir !147
  %conv83 = sext i8 %51 to i32, !dbg !8459
  %cmp84 = icmp sge i32 %conv83, 64, !dbg !8460
  br i1 %cmp84, label %land.lhs.true, label %if.else95, !dbg !8461

land.lhs.true:                                    ; preds = %sw.bb82
  %52 = load i8*, i8** %p, align 8, !dbg !8462
  %53 = load i8, i8* %52, align 1, !dbg !8463, !ctir !147
  %conv86 = sext i8 %53 to i32, !dbg !8463
  %cmp87 = icmp sle i32 %conv86, 126, !dbg !8464
  br i1 %cmp87, label %if.then89, label %if.else95, !dbg !8465

if.then89:                                        ; preds = %land.lhs.true
  %54 = load i8*, i8** %p, align 8, !dbg !8466
  %incdec.ptr90 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !8466, !ctir !147
  store i8* %incdec.ptr90, i8** %p, align 8, !dbg !8466
  %55 = load i8, i8* %54, align 1, !dbg !8468, !ctir !147
  %conv91 = sext i8 %55 to i32, !dbg !8468
  %and = and i32 %conv91, 31, !dbg !8469
  %conv92 = trunc i32 %and to i8, !dbg !8468
  %56 = load i8*, i8** %q, align 8, !dbg !8470
  %incdec.ptr93 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !8470, !ctir !144
  store i8* %incdec.ptr93, i8** %q, align 8, !dbg !8470
  store i8 %conv92, i8* %56, align 1, !dbg !8471, !ctir !144
  %57 = load i64, i64* %count, align 8, !dbg !8472
  %inc94 = add i64 %57, 1, !dbg !8472
  store i64 %inc94, i64* %count, align 8, !dbg !8472
  br label %if.end104, !dbg !8473

if.else95:                                        ; preds = %land.lhs.true, %sw.bb82
  %58 = load i8*, i8** %p, align 8, !dbg !8474
  %59 = load i8, i8* %58, align 1, !dbg !8476, !ctir !147
  %conv96 = sext i8 %59 to i32, !dbg !8476
  %cmp97 = icmp eq i32 %conv96, 63, !dbg !8477
  br i1 %cmp97, label %if.then99, label %if.else102, !dbg !8478

if.then99:                                        ; preds = %if.else95
  %60 = load i8*, i8** %q, align 8, !dbg !8479
  %incdec.ptr100 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !8479, !ctir !144
  store i8* %incdec.ptr100, i8** %q, align 8, !dbg !8479
  store i8 127, i8* %60, align 1, !dbg !8481, !ctir !144
  %61 = load i64, i64* %count, align 8, !dbg !8482
  %inc101 = add i64 %61, 1, !dbg !8482
  store i64 %inc101, i64* %count, align 8, !dbg !8482
  br label %if.end103, !dbg !8483

if.else102:                                       ; preds = %if.else95
  store i32 6, i32* %state, align 4, !dbg !8484
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.then99
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  br label %sw.epilog106, !dbg !8485

sw.default105:                                    ; preds = %while.body
  call void @abort() #15, !dbg !8486
  unreachable, !dbg !8486

sw.epilog106:                                     ; preds = %if.end104, %sw.epilog81, %if.end49, %if.end32, %sw.epilog
  br label %while.cond, !dbg !8306, !llvm.loop !8487

while.end:                                        ; preds = %while.cond
  %62 = load i8*, i8** %q, align 8, !dbg !8489
  %63 = load i8**, i8*** %dest.addr, align 8, !dbg !8490
  store i8* %62, i8** %63, align 8, !dbg !8491, !ctir !143
  %64 = load i8*, i8** %p, align 8, !dbg !8492
  %65 = load i8**, i8*** %src.addr, align 8, !dbg !8493
  store i8* %64, i8** %65, align 8, !dbg !8494, !ctir !146
  %66 = load i64, i64* %count, align 8, !dbg !8495
  %67 = load i64*, i64** %output_count.addr, align 8, !dbg !8496
  store i64 %66, i64* %67, align 8, !dbg !8497, !ctir !149
  %68 = load i32, i32* %state, align 4, !dbg !8498
  %cmp107 = icmp ne i32 %68, 6, !dbg !8499
  ret i1 %cmp107, !dbg !8500
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @getenv_quoting_style() #0 !dbg !8501 {
entry:
  %q_style = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q_style, metadata !8502, metadata !DIExpression()), !dbg !8503
  %call = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i64 0, i64 0)) #13, !dbg !8504
  store i8* %call, i8** %q_style, align 8, !dbg !8503
  %0 = load i8*, i8** %q_style, align 8, !dbg !8505
  %tobool = icmp ne i8* %0, null, !dbg !8505
  br i1 %tobool, label %if.then, label %if.end6, !dbg !8507

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8508, metadata !DIExpression()), !dbg !8510
  %1 = load i8*, i8** %q_style, align 8, !dbg !8511
  %call1 = call i64 @argmatch(i8* %1, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4) #16, !dbg !8511
  %conv = trunc i64 %call1 to i32, !dbg !8511
  store i32 %conv, i32* %i, align 4, !dbg !8510
  %2 = load i32, i32* %i, align 4, !dbg !8512
  %cmp = icmp sle i32 0, %2, !dbg !8514
  br i1 %cmp, label %if.then3, label %if.else, !dbg !8515

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* %i, align 4, !dbg !8516
  %idxprom = sext i32 %3 to i64, !dbg !8517
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %idxprom, !dbg !8517, !ctir !661
  %4 = load i32, i32* %arrayidx, align 4, !dbg !8517
  call void @set_quoting_style(%struct.quoting_options* null, i32 %4), !dbg !8518
  br label %if.end, !dbg !8518

if.else:                                          ; preds = %if.then
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !8519
  %5 = load i8*, i8** %q_style, align 8, !dbg !8520
  %call5 = call i8* @quote(i8* %5), !dbg !8521
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call4, i8* %call5), !dbg !8522
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end6, !dbg !8523

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !8524
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_line_length(i8* %spec) #0 !dbg !8525 {
entry:
  %retval = alloca i1, align 1
  %spec.addr = alloca i8*, align 8
  %val = alloca i64, align 8, !ctir !168
  store i8* %spec, i8** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.declare(metadata i64* %val, metadata !8528, metadata !DIExpression()), !dbg !8529
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !8530
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 0, i64* %val, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !8531
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !8532

sw.bb:                                            ; preds = %entry
  %1 = load i64, i64* %val, align 8, !dbg !8533
  %cmp = icmp ult i64 %1, -1, !dbg !8533
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8533

cond.true:                                        ; preds = %sw.bb
  %2 = load i64, i64* %val, align 8, !dbg !8533
  br label %cond.end, !dbg !8533

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !8533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !8533
  store i64 %cond, i64* @line_length, align 8, !dbg !8535
  store i1 true, i1* %retval, align 1, !dbg !8536
  br label %return, !dbg !8536

sw.bb1:                                           ; preds = %entry
  store i64 -1, i64* @line_length, align 8, !dbg !8537
  store i1 true, i1* %retval, align 1, !dbg !8538
  br label %return, !dbg !8538

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8539
  br label %return, !dbg !8539

return:                                           ; preds = %sw.default, %sw.bb1, %cond.end
  %3 = load i1, i1* %retval, align 1, !dbg !8540
  ret i1 %3, !dbg !8540
}

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_ignore_pattern(i8* %pattern) #0 !dbg !8541 {
entry:
  %pattern.addr = alloca i8*, align 8
  %ignore = alloca %struct.ignore_pattern*, align 8, !ctir !605
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %ignore, metadata !8544, metadata !DIExpression()), !dbg !8545
  %call = call noalias i8* @xmalloc(i64 16), !dbg !8546
  %0 = bitcast i8* %call to %struct.ignore_pattern*, !dbg !8546
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %ignore, align 8, !dbg !8547
  %1 = load i8*, i8** %pattern.addr, align 8, !dbg !8548
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !8549
  %pattern1 = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !8550, !ctir !606
  store i8* %1, i8** %pattern1, align 8, !dbg !8551, !ctir !146
  %3 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !8552
  %4 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !8553
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %4, i32 0, i32 1, !dbg !8554, !ctir !606
  store %struct.ignore_pattern* %3, %struct.ignore_pattern** %next, align 8, !dbg !8555, !ctir !605
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !8556
  store %struct.ignore_pattern* %5, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !8557
  ret void, !dbg !8558
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bad_cast(i8* %s) #0 !dbg !8559 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8562, metadata !DIExpression()), !dbg !8563
  %0 = load i8*, i8** %s.addr, align 8, !dbg !8564
  ret i8* %0, !dbg !8565
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #10 !dbg !8566 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !8567, metadata !DIExpression()), !dbg !8568
  %0 = load i32, i32* %status.addr, align 4, !dbg !8569
  %cmp = icmp ne i32 %0, 0, !dbg !8571
  br i1 %cmp, label %if.then, label %if.else, !dbg !8572

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8573

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8574
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0)) #13, !dbg !8574
  %2 = load i8*, i8** @program_name, align 8, !dbg !8574
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !8574
  br label %do.end, !dbg !8574

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !8574

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !8576
  %3 = load i8*, i8** @program_name, align 8, !dbg !8578
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3), !dbg !8579
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !8580
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8580
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %4), !dbg !8580
  call void @emit_mandatory_arg_note(), !dbg !8581
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !8582
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8582
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %5), !dbg !8582
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !8583
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8583
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %6), !dbg !8583
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([362 x i8], [362 x i8]* @.str.17, i64 0, i64 0)) #13, !dbg !8584
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8584
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %7), !dbg !8584
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !8585
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8585
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %8), !dbg !8585
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([419 x i8], [419 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !8586
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8586
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %9), !dbg !8586
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !8587
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8587
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %10), !dbg !8587
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([245 x i8], [245 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !8588
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8588
  %call19 = call i32 @fputs_unlocked(i8* %call18, %struct._IO_FILE* %11), !dbg !8588
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !8589
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8589
  %call21 = call i32 @fputs_unlocked(i8* %call20, %struct._IO_FILE* %12), !dbg !8589
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !8590
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8590
  %call23 = call i32 @fputs_unlocked(i8* %call22, %struct._IO_FILE* %13), !dbg !8590
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([422 x i8], [422 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !8591
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8591
  %call25 = call i32 @fputs_unlocked(i8* %call24, %struct._IO_FILE* %14), !dbg !8591
  %call26 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !8592
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8592
  %call27 = call i32 @fputs_unlocked(i8* %call26, %struct._IO_FILE* %15), !dbg !8592
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([354 x i8], [354 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !8593
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8593
  %call29 = call i32 @fputs_unlocked(i8* %call28, %struct._IO_FILE* %16), !dbg !8593
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !8594
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8594
  %call31 = call i32 @fputs_unlocked(i8* %call30, %struct._IO_FILE* %17), !dbg !8594
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([359 x i8], [359 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !8595
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8595
  %call33 = call i32 @fputs_unlocked(i8* %call32, %struct._IO_FILE* %18), !dbg !8595
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([303 x i8], [303 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !8596
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8596
  %call35 = call i32 @fputs_unlocked(i8* %call34, %struct._IO_FILE* %19), !dbg !8596
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([585 x i8], [585 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !8597
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8597
  %call37 = call i32 @fputs_unlocked(i8* %call36, %struct._IO_FILE* %20), !dbg !8597
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([197 x i8], [197 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !8598
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8598
  %call39 = call i32 @fputs_unlocked(i8* %call38, %struct._IO_FILE* %21), !dbg !8598
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([519 x i8], [519 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !8599
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8599
  %call41 = call i32 @fputs_unlocked(i8* %call40, %struct._IO_FILE* %22), !dbg !8599
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !8600
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8600
  %call43 = call i32 @fputs_unlocked(i8* %call42, %struct._IO_FILE* %23), !dbg !8600
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !8601
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8601
  %call45 = call i32 @fputs_unlocked(i8* %call44, %struct._IO_FILE* %24), !dbg !8601
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([372 x i8], [372 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !8602
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8602
  %call47 = call i32 @fputs_unlocked(i8* %call46, %struct._IO_FILE* %25), !dbg !8602
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([363 x i8], [363 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !8603
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8603
  %call49 = call i32 @fputs_unlocked(i8* %call48, %struct._IO_FILE* %26), !dbg !8603
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !8604
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8604
  %call51 = call i32 @fputs_unlocked(i8* %call50, %struct._IO_FILE* %27), !dbg !8604
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !8605
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8605
  %call53 = call i32 @fputs_unlocked(i8* %call52, %struct._IO_FILE* %28), !dbg !8605
  call void @emit_size_note(), !dbg !8606
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([376 x i8], [376 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !8607
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8607
  %call55 = call i32 @fputs_unlocked(i8* %call54, %struct._IO_FILE* %29), !dbg !8607
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([286 x i8], [286 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !8608
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8608
  %call57 = call i32 @fputs_unlocked(i8* %call56, %struct._IO_FILE* %30), !dbg !8608
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !8609
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8609
  %call59 = call i32 @fputs_unlocked(i8* %call58, %struct._IO_FILE* %31), !dbg !8609
  %32 = load i32, i32* @ls_mode, align 4, !dbg !8610
  %cmp60 = icmp eq i32 %32, 1, !dbg !8610
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !8610

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !8610

cond.false:                                       ; preds = %if.else
  %33 = load i32, i32* @ls_mode, align 4, !dbg !8610
  %cmp61 = icmp eq i32 %33, 2, !dbg !8610
  %34 = zext i1 %cmp61 to i64, !dbg !8610
  %cond = select i1 %cmp61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !8610
  br label %cond.end, !dbg !8610

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond62 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond, %cond.false ], !dbg !8610
  call void @emit_ancillary_info(i8* %cond62), !dbg !8611
  br label %if.end

if.end:                                           ; preds = %cond.end, %do.end
  %35 = load i32, i32* %status.addr, align 4, !dbg !8612
  call void @exit(i32 %35) #15, !dbg !8613
  unreachable, !dbg !8613
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @dcgettext(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @abformat_init() #0 !dbg !8614 {
entry:
  %pb = alloca [2 x i8*], align 16, !ctir !674
  %recent = alloca i32, align 4, !ctir !27
  %abmon = alloca [12 x [128 x i8]], align 16, !ctir !688
  %recent9 = alloca i32, align 4, !ctir !27
  %fmt = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  %nfmt = alloca i8*, align 8, !ctir !143
  %nbytes = alloca i32, align 4, !ctir !27
  %prefix_len = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata [2 x i8*]* %pb, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !8617, metadata !DIExpression()), !dbg !8619
  store i32 0, i32* %recent, align 4, !dbg !8619
  br label %for.cond, !dbg !8620

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %recent, align 4, !dbg !8621
  %cmp = icmp slt i32 %0, 2, !dbg !8623
  br i1 %cmp, label %for.body, label %for.end, !dbg !8624

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %recent, align 4, !dbg !8625
  %idxprom = sext i32 %1 to i64, !dbg !8626
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom, !dbg !8626, !ctir !674
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8626
  %call = call i8* @first_percent_b(i8* %2) #16, !dbg !8627
  %3 = load i32, i32* %recent, align 4, !dbg !8628
  %idxprom1 = sext i32 %3 to i64, !dbg !8629
  %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom1, !dbg !8629, !ctir !674
  store i8* %call, i8** %arrayidx2, align 8, !dbg !8630
  br label %for.inc, !dbg !8629

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %recent, align 4, !dbg !8631
  %inc = add nsw i32 %4, 1, !dbg !8631
  store i32 %inc, i32* %recent, align 4, !dbg !8631
  br label %for.cond, !dbg !8632, !llvm.loop !8633

for.end:                                          ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 0, !dbg !8635, !ctir !674
  %5 = load i8*, i8** %arrayidx3, align 16, !dbg !8635
  %tobool = icmp ne i8* %5, null, !dbg !8635
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !8637

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 1, !dbg !8638, !ctir !674
  %6 = load i8*, i8** %arrayidx4, align 8, !dbg !8638
  %tobool5 = icmp ne i8* %6, null, !dbg !8638
  br i1 %tobool5, label %if.end, label %if.then, !dbg !8639

if.then:                                          ; preds = %lor.lhs.false
  br label %return, !dbg !8640

if.end:                                           ; preds = %lor.lhs.false, %for.end
  call void @llvm.dbg.declare(metadata [12 x [128 x i8]]* %abmon, metadata !8641, metadata !DIExpression()), !dbg !8642
  %arraydecay = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 0, !dbg !8643, !ctir !688
  %call6 = call zeroext i1 @abmon_init([128 x i8]* %arraydecay), !dbg !8645
  br i1 %call6, label %if.end8, label %if.then7, !dbg !8646

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !8647

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %recent9, metadata !8648, metadata !DIExpression()), !dbg !8650
  store i32 0, i32* %recent9, align 4, !dbg !8650
  br label %for.cond10, !dbg !8651

for.cond10:                                       ; preds = %for.inc54, %if.end8
  %7 = load i32, i32* %recent9, align 4, !dbg !8652
  %cmp11 = icmp slt i32 %7, 2, !dbg !8654
  br i1 %cmp11, label %for.body12, label %for.end56, !dbg !8655

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !8656, metadata !DIExpression()), !dbg !8658
  %8 = load i32, i32* %recent9, align 4, !dbg !8659
  %idxprom13 = sext i32 %8 to i64, !dbg !8660
  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom13, !dbg !8660, !ctir !674
  %9 = load i8*, i8** %arrayidx14, align 8, !dbg !8660
  store i8* %9, i8** %fmt, align 8, !dbg !8658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8661, metadata !DIExpression()), !dbg !8663
  store i32 0, i32* %i, align 4, !dbg !8663
  br label %for.cond15, !dbg !8664

for.cond15:                                       ; preds = %for.inc51, %for.body12
  %10 = load i32, i32* %i, align 4, !dbg !8665
  %cmp16 = icmp slt i32 %10, 12, !dbg !8667
  br i1 %cmp16, label %for.body17, label %for.end53, !dbg !8668

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !8669, metadata !DIExpression()), !dbg !8671
  %11 = load i32, i32* %recent9, align 4, !dbg !8672
  %idxprom18 = sext i32 %11 to i64, !dbg !8673
  %arrayidx19 = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom18, !dbg !8673, !ctir !691
  %12 = load i32, i32* %i, align 4, !dbg !8674
  %idxprom20 = sext i32 %12 to i64, !dbg !8673
  %arrayidx21 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx19, i64 0, i64 %idxprom20, !dbg !8673, !ctir !688
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx21, i64 0, i64 0, !dbg !8673, !ctir !693
  store i8* %arraydecay22, i8** %nfmt, align 8, !dbg !8671
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !8675, metadata !DIExpression()), !dbg !8676
  %13 = load i32, i32* %recent9, align 4, !dbg !8677
  %idxprom23 = sext i32 %13 to i64, !dbg !8679
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom23, !dbg !8679, !ctir !674
  %14 = load i8*, i8** %arrayidx24, align 8, !dbg !8679
  %tobool25 = icmp ne i8* %14, null, !dbg !8679
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !8680

if.then26:                                        ; preds = %for.body17
  %15 = load i8*, i8** %nfmt, align 8, !dbg !8681
  %16 = load i8*, i8** %fmt, align 8, !dbg !8682
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %16) #13, !dbg !8683
  store i32 %call27, i32* %nbytes, align 4, !dbg !8684
  br label %if.end44, !dbg !8685

if.else:                                          ; preds = %for.body17
  %17 = load i32, i32* %recent9, align 4, !dbg !8686
  %idxprom28 = sext i32 %17 to i64, !dbg !8689
  %arrayidx29 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom28, !dbg !8689, !ctir !674
  %18 = load i8*, i8** %arrayidx29, align 8, !dbg !8689
  %19 = load i8*, i8** %fmt, align 8, !dbg !8690
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !8691
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !8691
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8691
  %cmp30 = icmp sle i64 %sub.ptr.sub, 128, !dbg !8692
  br i1 %cmp30, label %if.end32, label %if.then31, !dbg !8693

if.then31:                                        ; preds = %if.else
  br label %return, !dbg !8694

if.end32:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %prefix_len, metadata !8695, metadata !DIExpression()), !dbg !8696
  %20 = load i32, i32* %recent9, align 4, !dbg !8697
  %idxprom33 = sext i32 %20 to i64, !dbg !8698
  %arrayidx34 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom33, !dbg !8698, !ctir !674
  %21 = load i8*, i8** %arrayidx34, align 8, !dbg !8698
  %22 = load i8*, i8** %fmt, align 8, !dbg !8699
  %sub.ptr.lhs.cast35 = ptrtoint i8* %21 to i64, !dbg !8700
  %sub.ptr.rhs.cast36 = ptrtoint i8* %22 to i64, !dbg !8700
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !8700
  %conv = trunc i64 %sub.ptr.sub37 to i32, !dbg !8698
  store i32 %conv, i32* %prefix_len, align 4, !dbg !8696
  %23 = load i8*, i8** %nfmt, align 8, !dbg !8701
  %24 = load i32, i32* %prefix_len, align 4, !dbg !8702
  %25 = load i8*, i8** %fmt, align 8, !dbg !8703
  %26 = load i32, i32* %i, align 4, !dbg !8704
  %idxprom38 = sext i32 %26 to i64, !dbg !8705
  %arrayidx39 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 %idxprom38, !dbg !8705, !ctir !688
  %arraydecay40 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx39, i64 0, i64 0, !dbg !8705, !ctir !693
  %27 = load i32, i32* %recent9, align 4, !dbg !8706
  %idxprom41 = sext i32 %27 to i64, !dbg !8707
  %arrayidx42 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom41, !dbg !8707, !ctir !674
  %28 = load i8*, i8** %arrayidx42, align 8, !dbg !8707
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 2, !dbg !8708, !ctir !147
  %call43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i64 0, i64 0), i32 %24, i8* %25, i8* %arraydecay40, i8* %add.ptr) #13, !dbg !8709
  store i32 %call43, i32* %nbytes, align 4, !dbg !8710
  br label %if.end44

if.end44:                                         ; preds = %if.end32, %if.then26
  %29 = load i32, i32* %nbytes, align 4, !dbg !8711
  %cmp45 = icmp sle i32 0, %29, !dbg !8713
  br i1 %cmp45, label %land.lhs.true, label %if.then49, !dbg !8714

land.lhs.true:                                    ; preds = %if.end44
  %30 = load i32, i32* %nbytes, align 4, !dbg !8715
  %cmp47 = icmp slt i32 %30, 128, !dbg !8716
  br i1 %cmp47, label %if.end50, label %if.then49, !dbg !8717

if.then49:                                        ; preds = %land.lhs.true, %if.end44
  br label %return, !dbg !8718

if.end50:                                         ; preds = %land.lhs.true
  br label %for.inc51, !dbg !8719

for.inc51:                                        ; preds = %if.end50
  %31 = load i32, i32* %i, align 4, !dbg !8720
  %inc52 = add nsw i32 %31, 1, !dbg !8720
  store i32 %inc52, i32* %i, align 4, !dbg !8720
  br label %for.cond15, !dbg !8721, !llvm.loop !8722

for.end53:                                        ; preds = %for.cond15
  br label %for.inc54, !dbg !8724

for.inc54:                                        ; preds = %for.end53
  %32 = load i32, i32* %recent9, align 4, !dbg !8725
  %inc55 = add nsw i32 %32, 1, !dbg !8725
  store i32 %inc55, i32* %recent9, align 4, !dbg !8725
  br label %for.cond10, !dbg !8726, !llvm.loop !8727

for.end56:                                        ; preds = %for.cond10
  store i8 1, i8* @use_abformat, align 1, !dbg !8729
  br label %return, !dbg !8730

return:                                           ; preds = %for.end56, %if.then49, %if.then31, %if.then7, %if.then
  ret void, !dbg !8730
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i8* @first_percent_b(i8* %fmt) #9 !dbg !8731 {
entry:
  %retval = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !8734, metadata !DIExpression()), !dbg !8735
  br label %for.cond, !dbg !8736

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !8737
  %1 = load i8, i8* %0, align 1, !dbg !8740, !ctir !147
  %tobool = icmp ne i8 %1, 0, !dbg !8741
  br i1 %tobool, label %for.body, label %for.end, !dbg !8741

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !8742
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !8742, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8742
  %conv = sext i8 %3 to i32, !dbg !8742
  %cmp = icmp eq i32 %conv, 37, !dbg !8744
  br i1 %cmp, label %if.then, label %if.end, !dbg !8745

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !8746
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !8746, !ctir !146
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !8746
  %conv3 = sext i8 %5 to i32, !dbg !8746
  switch i32 %conv3, label %sw.epilog [
    i32 98, label %sw.bb
    i32 37, label %sw.bb4
  ], !dbg !8747

sw.bb:                                            ; preds = %if.then
  %6 = load i8*, i8** %fmt.addr, align 8, !dbg !8748
  store i8* %6, i8** %retval, align 8, !dbg !8750
  br label %return, !dbg !8750

sw.bb4:                                           ; preds = %if.then
  %7 = load i8*, i8** %fmt.addr, align 8, !dbg !8751
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8751, !ctir !147
  store i8* %incdec.ptr, i8** %fmt.addr, align 8, !dbg !8751
  br label %sw.epilog, !dbg !8752

sw.epilog:                                        ; preds = %if.then, %sw.bb4
  br label %if.end, !dbg !8753

if.end:                                           ; preds = %sw.epilog, %for.body
  br label %for.inc, !dbg !8754

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !8755
  %incdec.ptr5 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8755, !ctir !147
  store i8* %incdec.ptr5, i8** %fmt.addr, align 8, !dbg !8755
  br label %for.cond, !dbg !8756, !llvm.loop !8757

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !8759
  br label %return, !dbg !8759

return:                                           ; preds = %for.end, %sw.bb
  %9 = load i8*, i8** %retval, align 8, !dbg !8760
  ret i8* %9, !dbg !8760
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abmon_init([128 x i8]* %abmon) #0 !dbg !8761 {
entry:
  %retval = alloca i1, align 1
  %abmon.addr = alloca [128 x i8]*, align 8
  %required_mon_width = alloca i64, align 8, !ctir !149
  %curr_max_width = alloca i64, align 8, !ctir !149
  %i = alloca i32, align 4, !ctir !27
  %width = alloca i64, align 8, !ctir !149
  %abbr = alloca i8*, align 8, !ctir !146
  %alignment = alloca i32, align 4, !ctir !695
  %req = alloca i64, align 8, !ctir !149
  store [128 x i8]* %abmon, [128 x i8]** %abmon.addr, align 8
  call void @llvm.dbg.declare(metadata [128 x i8]** %abmon.addr, metadata !8765, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.declare(metadata i64* %required_mon_width, metadata !8767, metadata !DIExpression()), !dbg !8768
  store i64 12, i64* %required_mon_width, align 8, !dbg !8768
  call void @llvm.dbg.declare(metadata i64* %curr_max_width, metadata !8769, metadata !DIExpression()), !dbg !8770
  br label %do.body, !dbg !8771

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i64, i64* %required_mon_width, align 8, !dbg !8772
  store i64 %0, i64* %curr_max_width, align 8, !dbg !8774
  store i64 0, i64* %required_mon_width, align 8, !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8776, metadata !DIExpression()), !dbg !8778
  store i32 0, i32* %i, align 4, !dbg !8778
  br label %for.cond, !dbg !8779

for.cond:                                         ; preds = %for.inc, %do.body
  %1 = load i32, i32* %i, align 4, !dbg !8780
  %cmp = icmp slt i32 %1, 12, !dbg !8782
  br i1 %cmp, label %for.body, label %for.end, !dbg !8783

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %width, metadata !8784, metadata !DIExpression()), !dbg !8786
  %2 = load i64, i64* %curr_max_width, align 8, !dbg !8787
  store i64 %2, i64* %width, align 8, !dbg !8786
  call void @llvm.dbg.declare(metadata i8** %abbr, metadata !8788, metadata !DIExpression()), !dbg !8789
  %3 = load i32, i32* %i, align 4, !dbg !8790
  %add = add nsw i32 131086, %3, !dbg !8791
  %call = call i8* @rpl_nl_langinfo(i32 %add), !dbg !8792
  store i8* %call, i8** %abbr, align 8, !dbg !8789
  %4 = load i8*, i8** %abbr, align 8, !dbg !8793
  %call1 = call i8* @strchr(i8* %4, i32 37) #16, !dbg !8795
  %tobool = icmp ne i8* %call1, null, !dbg !8795
  br i1 %tobool, label %if.then, label %if.end, !dbg !8796

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !8797
  br label %return, !dbg !8797

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %alignment, metadata !8798, metadata !DIExpression()), !dbg !8799
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !8800
  %5 = load i16*, i16** %call2, align 8, !dbg !8800, !ctir !696
  %6 = load i8*, i8** %abbr, align 8, !dbg !8800
  %7 = load i8, i8* %6, align 1, !dbg !8800, !ctir !147
  %call3 = call zeroext i8 @to_uchar(i8 signext %7), !dbg !8800
  %conv = zext i8 %call3 to i32, !dbg !8800
  %idxprom = sext i32 %conv to i64, !dbg !8800
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !8800, !ctir !696
  %8 = load i16, i16* %arrayidx, align 2, !dbg !8800
  %conv4 = zext i16 %8 to i32, !dbg !8800
  %and = and i32 %conv4, 2048, !dbg !8800
  %tobool5 = icmp ne i32 %and, 0, !dbg !8800
  %9 = zext i1 %tobool5 to i64, !dbg !8800
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !8800
  store i32 %cond, i32* %alignment, align 4, !dbg !8799
  call void @llvm.dbg.declare(metadata i64* %req, metadata !8801, metadata !DIExpression()), !dbg !8802
  %10 = load i8*, i8** %abbr, align 8, !dbg !8803
  %11 = load [128 x i8]*, [128 x i8]** %abmon.addr, align 8, !dbg !8804
  %12 = load i32, i32* %i, align 4, !dbg !8805
  %idxprom6 = sext i32 %12 to i64, !dbg !8804
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 %idxprom6, !dbg !8804, !ctir !8764
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx7, i64 0, i64 0, !dbg !8804, !ctir !693
  %13 = load i32, i32* %alignment, align 4, !dbg !8806
  %call8 = call i64 @mbsalign(i8* %10, i8* %arraydecay, i64 128, i64* %width, i32 %13, i32 0), !dbg !8807
  store i64 %call8, i64* %req, align 8, !dbg !8802
  %14 = load i64, i64* %req, align 8, !dbg !8808
  %cmp9 = icmp ult i64 %14, 128, !dbg !8810
  br i1 %cmp9, label %if.end12, label %if.then11, !dbg !8811

if.then11:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !8812
  br label %return, !dbg !8812

if.end12:                                         ; preds = %if.end
  %15 = load i64, i64* %required_mon_width, align 8, !dbg !8813
  %16 = load i64, i64* %width, align 8, !dbg !8813
  %cmp13 = icmp ugt i64 %15, %16, !dbg !8813
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !8813

cond.true:                                        ; preds = %if.end12
  %17 = load i64, i64* %required_mon_width, align 8, !dbg !8813
  br label %cond.end, !dbg !8813

cond.false:                                       ; preds = %if.end12
  %18 = load i64, i64* %width, align 8, !dbg !8813
  br label %cond.end, !dbg !8813

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i64 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !8813
  store i64 %cond15, i64* %required_mon_width, align 8, !dbg !8814
  br label %for.inc, !dbg !8815

for.inc:                                          ; preds = %cond.end
  %19 = load i32, i32* %i, align 4, !dbg !8816
  %inc = add nsw i32 %19, 1, !dbg !8816
  store i32 %inc, i32* %i, align 4, !dbg !8816
  br label %for.cond, !dbg !8817, !llvm.loop !8818

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !8820

do.cond:                                          ; preds = %for.end
  %20 = load i64, i64* %curr_max_width, align 8, !dbg !8821
  %21 = load i64, i64* %required_mon_width, align 8, !dbg !8822
  %cmp16 = icmp ugt i64 %20, %21, !dbg !8823
  br i1 %cmp16, label %do.body, label %do.end, !dbg !8820, !llvm.loop !8824

do.end:                                           ; preds = %do.cond
  store i1 true, i1* %retval, align 1, !dbg !8826
  br label %return, !dbg !8826

return:                                           ; preds = %do.end, %if.then11, %if.then
  %22 = load i1, i1* %retval, align 1, !dbg !8827
  ret i1 %22, !dbg !8827
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #0 !dbg !8828 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.231, i64 0, i64 0)) #13, !dbg !8829
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8829
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_size_note() #0 !dbg !8831 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.232, i64 0, i64 0)) #13, !dbg !8832
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8832
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !8832
  ret void, !dbg !8833
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #0 !dbg !822 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !818
  %node = alloca i8*, align 8, !ctir !146
  %map_prog = alloca %struct.infomap*, align 8, !ctir !828
  %lc_messages = alloca i8*, align 8, !ctir !146
  store i8* %program, i8** %program.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !8836, metadata !DIExpression()), !dbg !8837
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !8837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !8837
  call void @llvm.dbg.declare(metadata i8** %node, metadata !8838, metadata !DIExpression()), !dbg !8839
  %1 = load i8*, i8** %program.addr, align 8, !dbg !8840
  store i8* %1, i8** %node, align 8, !dbg !8839
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !8841, metadata !DIExpression()), !dbg !8842
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !8843, !ctir !818
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !8842
  br label %while.cond, !dbg !8844

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !8845
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !8846, !ctir !819
  %3 = load i8*, i8** %program1, align 8, !dbg !8846, !ctir !146
  %tobool = icmp ne i8* %3, null, !dbg !8845
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8847

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !8848
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !8848
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !8848, !ctir !819
  %6 = load i8*, i8** %program2, align 8, !dbg !8848, !ctir !146
  %call = call i32 @strcmp(i8* %4, i8* %6) #16, !dbg !8848
  %cmp = icmp eq i32 %call, 0, !dbg !8848
  %lnot = xor i1 %cmp, true, !dbg !8849
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !8850
  br i1 %7, label %while.body, label %while.end, !dbg !8844

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !8851
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !8851, !ctir !819
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !8851
  br label %while.cond, !dbg !8844, !llvm.loop !8852

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !8853
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !8855, !ctir !819
  %10 = load i8*, i8** %node3, align 8, !dbg !8855, !ctir !146
  %tobool4 = icmp ne i8* %10, null, !dbg !8853
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8856

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !8857
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !8858, !ctir !819
  %12 = load i8*, i8** %node5, align 8, !dbg !8858, !ctir !146
  store i8* %12, i8** %node, align 8, !dbg !8859
  br label %if.end, !dbg !8860

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i64 0, i64 0)) #13, !dbg !8861
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0)), !dbg !8862
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !8863, metadata !DIExpression()), !dbg !8864
  %call8 = call i8* @setlocale(i32 5, i8* null) #13, !dbg !8865
  store i8* %call8, i8** %lc_messages, align 8, !dbg !8864
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !8866
  %tobool9 = icmp ne i8* %13, null, !dbg !8866
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !8868

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !8869
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.243, i64 0, i64 0), i64 3) #16, !dbg !8869
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8869
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !8870

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.244, i64 0, i64 0)) #13, !dbg !8871
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8871
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !8871
  br label %if.end15, !dbg !8873

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.245, i64 0, i64 0)) #13, !dbg !8874
  %16 = load i8*, i8** %program.addr, align 8, !dbg !8875
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0), i8* %16), !dbg !8876
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.246, i64 0, i64 0)) #13, !dbg !8877
  %17 = load i8*, i8** %node, align 8, !dbg !8878
  %18 = load i8*, i8** %node, align 8, !dbg !8879
  %19 = load i8*, i8** %program.addr, align 8, !dbg !8880
  %cmp19 = icmp eq i8* %18, %19, !dbg !8881
  %20 = zext i1 %cmp19 to i64, !dbg !8879
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !8879
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !8882
  ret void, !dbg !8883
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #0 !dbg !8884 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !149
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !149
  %initial_limit = alloca i64, align 8, !ctir !149
  %buf_size = alloca i64, align 8, !ctir !149
  %r = alloca i64, align 8, !ctir !1513
  %link_length = alloca i64, align 8, !ctir !149
  %stackbuf = alloca [128 x i8], align 16, !ctir !693
  %buf = alloca i8*, align 8, !ctir !143
  %buffer = alloca i8*, align 8, !ctir !143
  %saved_errno = alloca i32, align 4, !ctir !27
  %shrinked_buffer = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !8892, metadata !DIExpression()), !dbg !8893
  store i64 1024, i64* %symlink_max, align 8, !dbg !8893
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !8894, metadata !DIExpression()), !dbg !8895
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8895
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !8896, metadata !DIExpression()), !dbg !8897
  %0 = load i64, i64* %symlink_max, align 8, !dbg !8898
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8899
  %cmp = icmp ult i64 %0, %1, !dbg !8900
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8898

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !8901
  %add = add i64 %2, 1, !dbg !8902
  br label %cond.end, !dbg !8898

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8903
  br label %cond.end, !dbg !8898

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !8898
  store i64 %cond, i64* %initial_limit, align 8, !dbg !8897
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !8904, metadata !DIExpression()), !dbg !8905
  %4 = load i64, i64* %size.addr, align 8, !dbg !8906
  %cmp1 = icmp eq i64 %4, 0, !dbg !8907
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !8906

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !8906

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !8908
  %6 = load i64, i64* %initial_limit, align 8, !dbg !8909
  %cmp4 = icmp ult i64 %5, %6, !dbg !8910
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !8908

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !8911
  %add6 = add i64 %7, 1, !dbg !8912
  br label %cond.end8, !dbg !8908

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !8913
  br label %cond.end8, !dbg !8908

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !8908
  br label %cond.end10, !dbg !8906

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !8906
  store i64 %cond11, i64* %buf_size, align 8, !dbg !8905
  br label %while.body, !dbg !8914

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !8915, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !8918, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !8920, metadata !DIExpression()), !dbg !8921
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8922, metadata !DIExpression()), !dbg !8923
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !8924, !ctir !693
  store i8* %arraydecay, i8** %buf, align 8, !dbg !8923
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !8925, metadata !DIExpression()), !dbg !8926
  store i8* null, i8** %buffer, align 8, !dbg !8926
  %9 = load i64, i64* %size.addr, align 8, !dbg !8927
  %cmp12 = icmp eq i64 %9, 0, !dbg !8929
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !8930

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !8931
  %cmp13 = icmp eq i64 %10, 128, !dbg !8932
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !8933

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !8934
  %call = call noalias i8* @malloc(i64 %11) #13, !dbg !8936
  store i8* %call, i8** %buffer, align 8, !dbg !8937
  store i8* %call, i8** %buf, align 8, !dbg !8938
  %12 = load i8*, i8** %buffer, align 8, !dbg !8939
  %tobool = icmp ne i8* %12, null, !dbg !8939
  br i1 %tobool, label %if.end, label %if.then14, !dbg !8941

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !8942
  br label %return, !dbg !8942

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !8943

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !8944
  %14 = load i8*, i8** %buf, align 8, !dbg !8945
  %15 = load i64, i64* %buf_size, align 8, !dbg !8946
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #13, !dbg !8947
  store i64 %call16, i64* %r, align 8, !dbg !8948
  %16 = load i64, i64* %r, align 8, !dbg !8949
  store i64 %16, i64* %link_length, align 8, !dbg !8950
  %17 = load i64, i64* %r, align 8, !dbg !8951
  %cmp17 = icmp slt i64 %17, 0, !dbg !8953
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !8954

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #17, !dbg !8955
  %18 = load i32, i32* %call19, align 4, !dbg !8955, !ctir !27
  %cmp20 = icmp ne i32 %18, 34, !dbg !8956
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !8957

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8958, metadata !DIExpression()), !dbg !8960
  %call22 = call i32* @__errno_location() #17, !dbg !8961
  %19 = load i32, i32* %call22, align 4, !dbg !8961, !ctir !27
  store i32 %19, i32* %saved_errno, align 4, !dbg !8960
  %20 = load i8*, i8** %buffer, align 8, !dbg !8962
  call void @free(i8* %20) #13, !dbg !8963
  %21 = load i32, i32* %saved_errno, align 4, !dbg !8964
  %call23 = call i32* @__errno_location() #17, !dbg !8965
  store i32 %21, i32* %call23, align 4, !dbg !8966, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !8967
  br label %return, !dbg !8967

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !8968
  %23 = load i64, i64* %buf_size, align 8, !dbg !8970
  %cmp25 = icmp ult i64 %22, %23, !dbg !8971
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !8972

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !8973
  %25 = load i64, i64* %link_length, align 8, !dbg !8975
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !8973, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !8976
  %26 = load i8*, i8** %buffer, align 8, !dbg !8977
  %tobool27 = icmp ne i8* %26, null, !dbg !8977
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !8979

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !8980
  %add29 = add i64 %27, 1, !dbg !8982
  %call30 = call noalias i8* @malloc(i64 %add29) #13, !dbg !8983
  store i8* %call30, i8** %buffer, align 8, !dbg !8984
  %28 = load i8*, i8** %buffer, align 8, !dbg !8985
  %tobool31 = icmp ne i8* %28, null, !dbg !8985
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !8987

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !8988
  %30 = load i8*, i8** %buf, align 8, !dbg !8989
  %31 = load i64, i64* %link_length, align 8, !dbg !8990
  %add33 = add i64 %31, 1, !dbg !8991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !8992
  store i8* %29, i8** %retval, align 8, !dbg !8993
  br label %return, !dbg !8993

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !8994

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !8995
  %add35 = add i64 %32, 1, !dbg !8997
  %33 = load i64, i64* %buf_size, align 8, !dbg !8998
  %cmp36 = icmp ult i64 %add35, %33, !dbg !8999
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9000

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9001, metadata !DIExpression()), !dbg !9003
  %34 = load i8*, i8** %buffer, align 8, !dbg !9004
  %35 = load i64, i64* %link_length, align 8, !dbg !9005
  %add38 = add i64 %35, 1, !dbg !9006
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #13, !dbg !9007
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9003
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9008
  %cmp40 = icmp ne i8* %36, null, !dbg !9010
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9011

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9012
  store i8* %37, i8** %buffer, align 8, !dbg !9013
  br label %if.end42, !dbg !9014

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9015

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9016
  store i8* %38, i8** %retval, align 8, !dbg !9017
  br label %return, !dbg !9017

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9018
  call void @free(i8* %39) #13, !dbg !9019
  %40 = load i64, i64* %buf_size, align 8, !dbg !9020
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9022
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9023

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9024
  %mul = mul i64 %41, 2, !dbg !9024
  store i64 %mul, i64* %buf_size, align 8, !dbg !9024
  br label %if.end54, !dbg !9025

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9026
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9028
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9029

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9030
  br label %if.end53, !dbg !9031

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #17, !dbg !9032
  store i32 12, i32* %call52, align 4, !dbg !9034, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9035
  br label %return, !dbg !9035

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !8914, !llvm.loop !9036

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9038
  ret i8* %43, !dbg !9038
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #0 !dbg !9039 {
entry:
  call void @usage(i32 1), !dbg !9040
  ret void, !dbg !9041
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9042 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  %arglen = alloca i64, align 8, !ctir !149
  %matchind = alloca i64, align 8, !ctir !675
  %ambiguous = alloca i8, align 1, !ctir !141
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9045, metadata !DIExpression()), !dbg !9046
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9051, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !9057, metadata !DIExpression()), !dbg !9058
  store i64 -1, i64* %matchind, align 8, !dbg !9058
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !9059, metadata !DIExpression()), !dbg !9060
  store i8 0, i8* %ambiguous, align 1, !dbg !9060
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9061
  %call = call i64 @strlen(i8* %0) #16, !dbg !9062
  store i64 %call, i64* %arglen, align 8, !dbg !9063
  store i64 0, i64* %i, align 8, !dbg !9064
  br label %for.cond, !dbg !9066

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9067
  %2 = load i64, i64* %i, align 8, !dbg !9069
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9067, !ctir !681
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9067
  %tobool = icmp ne i8* %3, null, !dbg !9070
  br i1 %tobool, label %for.body, label %for.end, !dbg !9070

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !9071
  %5 = load i64, i64* %i, align 8, !dbg !9074
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !9071, !ctir !681
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !9071
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9075
  %8 = load i64, i64* %arglen, align 8, !dbg !9076
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #16, !dbg !9077
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9077
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !9078

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9079
  %10 = load i64, i64* %i, align 8, !dbg !9082
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !9079, !ctir !681
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !9079
  %call5 = call i64 @strlen(i8* %11) #16, !dbg !9083
  %12 = load i64, i64* %arglen, align 8, !dbg !9084
  %cmp = icmp eq i64 %call5, %12, !dbg !9085
  br i1 %cmp, label %if.then6, label %if.else, !dbg !9086

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !9087
  store i64 %13, i64* %retval, align 8, !dbg !9088
  br label %return, !dbg !9088

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !9089
  %cmp7 = icmp eq i64 %14, -1, !dbg !9091
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9092

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !9093
  store i64 %15, i64* %matchind, align 8, !dbg !9094
  br label %if.end16, !dbg !9095

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !9096
  %cmp10 = icmp eq i8* %16, null, !dbg !9099
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !9100

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !9101
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !9102
  %19 = load i64, i64* %matchind, align 8, !dbg !9103
  %mul = mul i64 %18, %19, !dbg !9104
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !9105, !ctir !147
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !9106
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !9107
  %22 = load i64, i64* %i, align 8, !dbg !9108
  %mul11 = mul i64 %21, %22, !dbg !9109
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !9110, !ctir !147
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !9111
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #16, !dbg !9112
  %tobool14 = icmp ne i32 %call13, 0, !dbg !9112
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !9113

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !9114
  br label %if.end, !dbg !9116

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !9117

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !9118

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !9119
  %inc = add i64 %24, 1, !dbg !9119
  store i64 %inc, i64* %i, align 8, !dbg !9119
  br label %for.cond, !dbg !9120, !llvm.loop !9121

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !9123
  %tobool19 = trunc i8 %25 to i1, !dbg !9123
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !9125

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !9126
  br label %return, !dbg !9126

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !9127
  store i64 %26, i64* %retval, align 8, !dbg !9128
  br label %return, !dbg !9128

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !9129
  ret i64 %27, !dbg !9129
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #0 !dbg !9130 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !146
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9135, metadata !DIExpression()), !dbg !9136
  store i64 %problem, i64* %problem.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.declare(metadata i8** %format, metadata !9139, metadata !DIExpression()), !dbg !9140
  %0 = load i64, i64* %problem.addr, align 8, !dbg !9141
  %cmp = icmp eq i64 %0, -1, !dbg !9142
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9141

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.257, i64 0, i64 0)) #13, !dbg !9143
  br label %cond.end, !dbg !9141

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.258, i64 0, i64 0)) #13, !dbg !9144
  br label %cond.end, !dbg !9141

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !9141
  store i8* %cond, i8** %format, align 8, !dbg !9140
  %1 = load i8*, i8** %format, align 8, !dbg !9145
  %2 = load i8*, i8** %value.addr, align 8, !dbg !9146
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !9147
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9148
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !9149
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !9150
  ret void, !dbg !9151
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #0 !dbg !9152 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  %last_val = alloca i8*, align 8, !ctir !146
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9155, metadata !DIExpression()), !dbg !9156
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9161, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !9163, metadata !DIExpression()), !dbg !9164
  store i8* null, i8** %last_val, align 8, !dbg !9164
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.259, i64 0, i64 0)) #13, !dbg !9165
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9165
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9165
  store i64 0, i64* %i, align 8, !dbg !9166
  br label %for.cond, !dbg !9168

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9169
  %2 = load i64, i64* %i, align 8, !dbg !9171
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9169, !ctir !681
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9169
  %tobool = icmp ne i8* %3, null, !dbg !9172
  br i1 %tobool, label %for.body, label %for.end, !dbg !9172

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !9173
  %cmp = icmp eq i64 %4, 0, !dbg !9175
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9176

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !9177
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !9178
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9179
  %8 = load i64, i64* %i, align 8, !dbg !9180
  %mul = mul i64 %7, %8, !dbg !9181
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !9182, !ctir !147
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !9183
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #16, !dbg !9184
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9184
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9185

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9186
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !9188
  %12 = load i64, i64* %i, align 8, !dbg !9189
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !9188, !ctir !681
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !9188
  %call5 = call i8* @quote(i8* %13), !dbg !9190
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.260, i64 0, i64 0), i8* %call5), !dbg !9191
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !9192
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !9193
  %16 = load i64, i64* %i, align 8, !dbg !9194
  %mul7 = mul i64 %15, %16, !dbg !9195
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !9196, !ctir !147
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !9197
  br label %if.end, !dbg !9198

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9199
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !9201
  %19 = load i64, i64* %i, align 8, !dbg !9202
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !9201, !ctir !681
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !9201
  %call10 = call i8* @quote(i8* %20), !dbg !9203
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.261, i64 0, i64 0), i8* %call10), !dbg !9204
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9205

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !9206
  %inc = add i64 %21, 1, !dbg !9206
  store i64 %inc, i64* %i, align 8, !dbg !9206
  br label %for.cond, !dbg !9207, !llvm.loop !9208

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9210
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !9210
  ret void, !dbg !9211
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #0 !dbg !9212 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !675
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9215, metadata !DIExpression()), !dbg !9216
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9217, metadata !DIExpression()), !dbg !9218
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9221, metadata !DIExpression()), !dbg !9222
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9223, metadata !DIExpression()), !dbg !9224
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !9225, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.declare(metadata i64* %res, metadata !9227, metadata !DIExpression()), !dbg !9228
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9229
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9230
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !9231
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !9232
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #16, !dbg !9233
  store i64 %call, i64* %res, align 8, !dbg !9228
  %4 = load i64, i64* %res, align 8, !dbg !9234
  %cmp = icmp sge i64 %4, 0, !dbg !9236
  br i1 %cmp, label %if.then, label %if.end, !dbg !9237

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !9238
  store i64 %5, i64* %retval, align 8, !dbg !9239
  br label %return, !dbg !9239

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !9240
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9241
  %8 = load i64, i64* %res, align 8, !dbg !9242
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !9243
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9244
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !9245
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !9246
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !9247
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !9248
  call void %12(), !dbg !9249
  store i64 -1, i64* %retval, align 8, !dbg !9250
  br label %return, !dbg !9250

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !9251
  ret i64 %13, !dbg !9251
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9252 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i64 0, i64* %i, align 8, !dbg !9265
  br label %for.cond, !dbg !9267

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !9268
  %1 = load i64, i64* %i, align 8, !dbg !9270
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !9268, !ctir !681
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9268
  %tobool = icmp ne i8* %2, null, !dbg !9271
  br i1 %tobool, label %for.body, label %for.end, !dbg !9271

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !9272
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !9274
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !9275
  %6 = load i64, i64* %i, align 8, !dbg !9276
  %mul = mul i64 %5, %6, !dbg !9277
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !9278, !ctir !147
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9279
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #16, !dbg !9280
  %tobool1 = icmp ne i32 %call, 0, !dbg !9280
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9281

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !9282
  %9 = load i64, i64* %i, align 8, !dbg !9283
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !9282, !ctir !681
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !9282
  store i8* %10, i8** %retval, align 8, !dbg !9284
  br label %return, !dbg !9284

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9285

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !9286
  %inc = add i64 %11, 1, !dbg !9286
  store i64 %inc, i64* %i, align 8, !dbg !9286
  br label %for.cond, !dbg !9287, !llvm.loop !9288

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9290
  br label %return, !dbg !9290

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !9291
  ret i8* %12, !dbg !9291
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #0 !dbg !9292 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9294, metadata !DIExpression()), !dbg !9295
  %0 = load i32, i32* %c.addr, align 4, !dbg !9296
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9297

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9298
  br label %return, !dbg !9298

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9300
  br label %return, !dbg !9300

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9301
  ret i1 %1, !dbg !9301
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #0 !dbg !9302 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9303, metadata !DIExpression()), !dbg !9304
  %0 = load i32, i32* %c.addr, align 4, !dbg !9305
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9306

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9307
  br label %return, !dbg !9307

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9309
  br label %return, !dbg !9309

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9310
  ret i1 %1, !dbg !9310
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #0 !dbg !9311 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9312, metadata !DIExpression()), !dbg !9313
  %0 = load i32, i32* %c.addr, align 4, !dbg !9314
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9315

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9316
  br label %return, !dbg !9316

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9318
  br label %return, !dbg !9318

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9319
  ret i1 %1, !dbg !9319
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #0 !dbg !9320 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9321, metadata !DIExpression()), !dbg !9322
  %0 = load i32, i32* %c.addr, align 4, !dbg !9323
  %cmp = icmp eq i32 %0, 32, !dbg !9324
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9325

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9326
  %cmp1 = icmp eq i32 %1, 9, !dbg !9327
  br label %lor.end, !dbg !9325

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !9328
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #0 !dbg !9329 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  %0 = load i32, i32* %c.addr, align 4, !dbg !9332
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !9333

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9334
  br label %return, !dbg !9334

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9336
  br label %return, !dbg !9336

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9337
  ret i1 %1, !dbg !9337
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #0 !dbg !9338 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9339, metadata !DIExpression()), !dbg !9340
  %0 = load i32, i32* %c.addr, align 4, !dbg !9341
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !9342

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9343
  br label %return, !dbg !9343

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9345
  br label %return, !dbg !9345

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9346
  ret i1 %1, !dbg !9346
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #0 !dbg !9347 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9348, metadata !DIExpression()), !dbg !9349
  %0 = load i32, i32* %c.addr, align 4, !dbg !9350
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9351

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9352
  br label %return, !dbg !9352

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9354
  br label %return, !dbg !9354

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9355
  ret i1 %1, !dbg !9355
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #0 !dbg !9356 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9357, metadata !DIExpression()), !dbg !9358
  %0 = load i32, i32* %c.addr, align 4, !dbg !9359
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9360

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9361
  br label %return, !dbg !9361

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9363
  br label %return, !dbg !9363

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9364
  ret i1 %1, !dbg !9364
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #0 !dbg !9365 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  %0 = load i32, i32* %c.addr, align 4, !dbg !9368
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9369

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9370
  br label %return, !dbg !9370

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9372
  br label %return, !dbg !9372

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9373
  ret i1 %1, !dbg !9373
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #0 !dbg !9374 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9375, metadata !DIExpression()), !dbg !9376
  %0 = load i32, i32* %c.addr, align 4, !dbg !9377
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !9378

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9379
  br label %return, !dbg !9379

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9381
  br label %return, !dbg !9381

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9382
  ret i1 %1, !dbg !9382
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #0 !dbg !9383 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9384, metadata !DIExpression()), !dbg !9385
  %0 = load i32, i32* %c.addr, align 4, !dbg !9386
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !9387

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9388
  br label %return, !dbg !9388

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9390
  br label %return, !dbg !9390

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9391
  ret i1 %1, !dbg !9391
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #0 !dbg !9392 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9393, metadata !DIExpression()), !dbg !9394
  %0 = load i32, i32* %c.addr, align 4, !dbg !9395
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9396

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9397
  br label %return, !dbg !9397

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9399
  br label %return, !dbg !9399

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9400
  ret i1 %1, !dbg !9400
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #0 !dbg !9401 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  %0 = load i32, i32* %c.addr, align 4, !dbg !9404
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !9405

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9406
  br label %return, !dbg !9406

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9408
  br label %return, !dbg !9408

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9409
  ret i1 %1, !dbg !9409
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #0 !dbg !9410 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  %0 = load i32, i32* %c.addr, align 4, !dbg !9415
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9416

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9417
  %sub = sub nsw i32 %1, 65, !dbg !9419
  %add = add nsw i32 %sub, 97, !dbg !9420
  store i32 %add, i32* %retval, align 4, !dbg !9421
  br label %return, !dbg !9421

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9422
  store i32 %2, i32* %retval, align 4, !dbg !9423
  br label %return, !dbg !9423

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9424
  ret i32 %3, !dbg !9424
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #0 !dbg !9425 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  %0 = load i32, i32* %c.addr, align 4, !dbg !9428
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9429

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9430
  %sub = sub nsw i32 %1, 97, !dbg !9432
  %add = add nsw i32 %sub, 65, !dbg !9433
  store i32 %add, i32* %retval, align 4, !dbg !9434
  br label %return, !dbg !9434

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9435
  store i32 %2, i32* %retval, align 4, !dbg !9436
  br label %return, !dbg !9436

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9437
  ret i32 %3, !dbg !9437
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strncasecmp(i8* %s1, i8* %s2, i64 %n) #9 !dbg !9438 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %p1 = alloca i8*, align 8, !ctir !1520
  %p2 = alloca i8*, align 8, !ctir !1520
  %c1 = alloca i8, align 1, !ctir !725
  %c2 = alloca i8, align 1, !ctir !725
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !9442, metadata !DIExpression()), !dbg !9443
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !9444, metadata !DIExpression()), !dbg !9445
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9446, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !9448, metadata !DIExpression()), !dbg !9449
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !9450
  store i8* %0, i8** %p1, align 8, !dbg !9449
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !9451, metadata !DIExpression()), !dbg !9452
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !9453
  store i8* %1, i8** %p2, align 8, !dbg !9452
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !9454, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !9456, metadata !DIExpression()), !dbg !9457
  %2 = load i8*, i8** %p1, align 8, !dbg !9458
  %3 = load i8*, i8** %p2, align 8, !dbg !9460
  %cmp = icmp eq i8* %2, %3, !dbg !9461
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9462

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %n.addr, align 8, !dbg !9463
  %cmp1 = icmp eq i64 %4, 0, !dbg !9464
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9465

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9466
  br label %return, !dbg !9466

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !9467

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i8*, i8** %p1, align 8, !dbg !9468
  %6 = load i8, i8* %5, align 1, !dbg !9470, !ctir !1521
  %conv = zext i8 %6 to i32, !dbg !9470
  %call = call i32 @c_tolower(i32 %conv), !dbg !9471
  %conv2 = trunc i32 %call to i8, !dbg !9471
  store i8 %conv2, i8* %c1, align 1, !dbg !9472
  %7 = load i8*, i8** %p2, align 8, !dbg !9473
  %8 = load i8, i8* %7, align 1, !dbg !9474, !ctir !1521
  %conv3 = zext i8 %8 to i32, !dbg !9474
  %call4 = call i32 @c_tolower(i32 %conv3), !dbg !9475
  %conv5 = trunc i32 %call4 to i8, !dbg !9475
  store i8 %conv5, i8* %c2, align 1, !dbg !9476
  %9 = load i64, i64* %n.addr, align 8, !dbg !9477
  %dec = add i64 %9, -1, !dbg !9477
  store i64 %dec, i64* %n.addr, align 8, !dbg !9477
  %cmp6 = icmp eq i64 %dec, 0, !dbg !9479
  br i1 %cmp6, label %if.then12, label %lor.lhs.false8, !dbg !9480

lor.lhs.false8:                                   ; preds = %do.body
  %10 = load i8, i8* %c1, align 1, !dbg !9481
  %conv9 = zext i8 %10 to i32, !dbg !9481
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !9482
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9483

if.then12:                                        ; preds = %lor.lhs.false8, %do.body
  br label %do.end, !dbg !9484

if.end13:                                         ; preds = %lor.lhs.false8
  %11 = load i8*, i8** %p1, align 8, !dbg !9485
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9485, !ctir !1521
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !9485
  %12 = load i8*, i8** %p2, align 8, !dbg !9486
  %incdec.ptr14 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !9486, !ctir !1521
  store i8* %incdec.ptr14, i8** %p2, align 8, !dbg !9486
  br label %do.cond, !dbg !9487

do.cond:                                          ; preds = %if.end13
  %13 = load i8, i8* %c1, align 1, !dbg !9488
  %conv15 = zext i8 %13 to i32, !dbg !9488
  %14 = load i8, i8* %c2, align 1, !dbg !9489
  %conv16 = zext i8 %14 to i32, !dbg !9489
  %cmp17 = icmp eq i32 %conv15, %conv16, !dbg !9490
  br i1 %cmp17, label %do.body, label %do.end, !dbg !9487, !llvm.loop !9491

do.end:                                           ; preds = %do.cond, %if.then12
  %15 = load i8, i8* %c1, align 1, !dbg !9493
  %conv19 = zext i8 %15 to i32, !dbg !9493
  %16 = load i8, i8* %c2, align 1, !dbg !9495
  %conv20 = zext i8 %16 to i32, !dbg !9495
  %sub = sub nsw i32 %conv19, %conv20, !dbg !9496
  store i32 %sub, i32* %retval, align 4, !dbg !9497
  br label %return, !dbg !9497

return:                                           ; preds = %do.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9498
  ret i32 %17, !dbg !9498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @canonicalize_filename_mode(i8* %name, i32 %can_mode) #0 !dbg !9499 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %can_mode.addr = alloca i32, align 4
  %rname = alloca i8*, align 8, !ctir !143
  %dest = alloca i8*, align 8, !ctir !143
  %extra_buf = alloca i8*, align 8, !ctir !143
  %start = alloca i8*, align 8, !ctir !146
  %end = alloca i8*, align 8, !ctir !146
  %rname_limit = alloca i8*, align 8, !ctir !146
  %extra_len = alloca i64, align 8, !ctir !149
  %ht = alloca %struct.hash_table*, align 8, !ctir !249
  %saved_errno = alloca i32, align 4, !ctir !27
  %can_flags = alloca i32, align 4, !ctir !27
  %logical = alloca i8, align 1, !ctir !141
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %st = alloca %struct.stat, align 8, !ctir !9504
  %dest_offset = alloca i64, align 8, !ctir !675
  %new_size = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %n = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %pfxlen = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9525, metadata !DIExpression()), !dbg !9526
  store i32 %can_mode, i32* %can_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %can_mode.addr, metadata !9527, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.declare(metadata i8** %rname, metadata !9529, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !9531, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.declare(metadata i8** %extra_buf, metadata !9533, metadata !DIExpression()), !dbg !9534
  store i8* null, i8** %extra_buf, align 8, !dbg !9534
  call void @llvm.dbg.declare(metadata i8** %start, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.declare(metadata i8** %end, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.declare(metadata i8** %rname_limit, metadata !9539, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata i64* %extra_len, metadata !9541, metadata !DIExpression()), !dbg !9542
  store i64 0, i64* %extra_len, align 8, !dbg !9542
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht, metadata !9543, metadata !DIExpression()), !dbg !9544
  store %struct.hash_table* null, %struct.hash_table** %ht, align 8, !dbg !9544
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9545, metadata !DIExpression()), !dbg !9546
  call void @llvm.dbg.declare(metadata i32* %can_flags, metadata !9547, metadata !DIExpression()), !dbg !9548
  %0 = load i32, i32* %can_mode.addr, align 4, !dbg !9549
  %and = and i32 %0, -4, !dbg !9550
  store i32 %and, i32* %can_flags, align 4, !dbg !9548
  call void @llvm.dbg.declare(metadata i8* %logical, metadata !9551, metadata !DIExpression()), !dbg !9552
  %1 = load i32, i32* %can_flags, align 4, !dbg !9553
  %and1 = and i32 %1, 4, !dbg !9554
  %tobool = icmp ne i32 %and1, 0, !dbg !9553
  %frombool = zext i1 %tobool to i8, !dbg !9552
  store i8 %frombool, i8* %logical, align 1, !dbg !9552
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !9555, metadata !DIExpression()), !dbg !9556
  %2 = load i32, i32* %can_mode.addr, align 4, !dbg !9557
  %and2 = and i32 %2, 3, !dbg !9557
  store i32 %and2, i32* %can_mode.addr, align 4, !dbg !9557
  %3 = load i32, i32* %can_mode.addr, align 4, !dbg !9558
  %4 = load i32, i32* %can_mode.addr, align 4, !dbg !9558
  %sub = sub i32 %4, 1, !dbg !9558
  %and3 = and i32 %3, %sub, !dbg !9558
  %cmp = icmp ne i32 %and3, 0, !dbg !9558
  br i1 %cmp, label %if.then, label %if.end, !dbg !9560

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !9561
  store i32 22, i32* %call, align 4, !dbg !9563, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9564
  br label %return, !dbg !9564

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9565
  %cmp4 = icmp eq i8* %5, null, !dbg !9567
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9568

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #17, !dbg !9569
  store i32 22, i32* %call6, align 4, !dbg !9571, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9572
  br label %return, !dbg !9572

if.end7:                                          ; preds = %if.end
  %6 = load i8*, i8** %name.addr, align 8, !dbg !9573
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !9573, !ctir !146
  %7 = load i8, i8* %arrayidx, align 1, !dbg !9573
  %conv = sext i8 %7 to i32, !dbg !9573
  %cmp8 = icmp eq i32 %conv, 0, !dbg !9575
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !9576

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #17, !dbg !9577
  store i32 2, i32* %call11, align 4, !dbg !9579, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9580
  br label %return, !dbg !9580

if.end12:                                         ; preds = %if.end7
  store i64 0, i64* %prefix_len, align 8, !dbg !9581
  %8 = load i8*, i8** %name.addr, align 8, !dbg !9582
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !9582, !ctir !146
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !9582
  %conv14 = sext i8 %9 to i32, !dbg !9582
  %cmp15 = icmp eq i32 %conv14, 47, !dbg !9582
  br i1 %cmp15, label %if.else32, label %if.then17, !dbg !9584

if.then17:                                        ; preds = %if.end12
  %call18 = call i8* @xgetcwd(), !dbg !9585
  store i8* %call18, i8** %rname, align 8, !dbg !9587
  %10 = load i8*, i8** %rname, align 8, !dbg !9588
  %tobool19 = icmp ne i8* %10, null, !dbg !9588
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !9590

if.then20:                                        ; preds = %if.then17
  store i8* null, i8** %retval, align 8, !dbg !9591
  br label %return, !dbg !9591

if.end21:                                         ; preds = %if.then17
  %11 = load i8*, i8** %rname, align 8, !dbg !9592
  %call22 = call i8* @strchr(i8* %11, i32 0) #16, !dbg !9593
  store i8* %call22, i8** %dest, align 8, !dbg !9594
  %12 = load i8*, i8** %dest, align 8, !dbg !9595
  %13 = load i8*, i8** %rname, align 8, !dbg !9597
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !9598
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !9598
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9598
  %cmp23 = icmp slt i64 %sub.ptr.sub, 4096, !dbg !9599
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !9600

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9601, metadata !DIExpression()), !dbg !9603
  %14 = load i8*, i8** %rname, align 8, !dbg !9604
  %call26 = call i8* @xrealloc(i8* %14, i64 4096), !dbg !9605
  store i8* %call26, i8** %p, align 8, !dbg !9603
  %15 = load i8*, i8** %p, align 8, !dbg !9606
  %16 = load i8*, i8** %dest, align 8, !dbg !9607
  %17 = load i8*, i8** %rname, align 8, !dbg !9608
  %sub.ptr.lhs.cast27 = ptrtoint i8* %16 to i64, !dbg !9609
  %sub.ptr.rhs.cast28 = ptrtoint i8* %17 to i64, !dbg !9609
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !9609
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %sub.ptr.sub29, !dbg !9610, !ctir !144
  store i8* %add.ptr, i8** %dest, align 8, !dbg !9611
  %18 = load i8*, i8** %p, align 8, !dbg !9612
  store i8* %18, i8** %rname, align 8, !dbg !9613
  %19 = load i8*, i8** %rname, align 8, !dbg !9614
  %add.ptr30 = getelementptr inbounds i8, i8* %19, i64 4096, !dbg !9615, !ctir !144
  store i8* %add.ptr30, i8** %rname_limit, align 8, !dbg !9616
  br label %if.end31, !dbg !9617

if.else:                                          ; preds = %if.end21
  %20 = load i8*, i8** %dest, align 8, !dbg !9618
  store i8* %20, i8** %rname_limit, align 8, !dbg !9620
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then25
  %21 = load i8*, i8** %name.addr, align 8, !dbg !9621
  store i8* %21, i8** %start, align 8, !dbg !9622
  store i64 0, i64* %prefix_len, align 8, !dbg !9623
  br label %if.end40, !dbg !9624

if.else32:                                        ; preds = %if.end12
  %call33 = call noalias i8* @xmalloc(i64 4096), !dbg !9625
  store i8* %call33, i8** %rname, align 8, !dbg !9627
  %22 = load i8*, i8** %rname, align 8, !dbg !9628
  %add.ptr34 = getelementptr inbounds i8, i8* %22, i64 4096, !dbg !9629, !ctir !144
  store i8* %add.ptr34, i8** %rname_limit, align 8, !dbg !9630
  %23 = load i8*, i8** %rname, align 8, !dbg !9631
  store i8* %23, i8** %dest, align 8, !dbg !9632
  %24 = load i64, i64* %prefix_len, align 8, !dbg !9633
  %tobool35 = icmp ne i64 %24, 0, !dbg !9633
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !9635

if.then36:                                        ; preds = %if.else32
  %25 = load i8*, i8** %rname, align 8, !dbg !9636
  %26 = load i8*, i8** %name.addr, align 8, !dbg !9638
  %27 = load i64, i64* %prefix_len, align 8, !dbg !9639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false), !dbg !9640
  %28 = load i64, i64* %prefix_len, align 8, !dbg !9641
  %29 = load i8*, i8** %dest, align 8, !dbg !9642
  %add.ptr37 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !9642, !ctir !144
  store i8* %add.ptr37, i8** %dest, align 8, !dbg !9642
  br label %if.end38, !dbg !9643

if.end38:                                         ; preds = %if.then36, %if.else32
  %30 = load i8*, i8** %dest, align 8, !dbg !9644
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !9644, !ctir !144
  store i8* %incdec.ptr, i8** %dest, align 8, !dbg !9644
  store i8 47, i8* %30, align 1, !dbg !9645, !ctir !144
  %31 = load i8*, i8** %name.addr, align 8, !dbg !9646
  %32 = load i64, i64* %prefix_len, align 8, !dbg !9647
  %add.ptr39 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !9648, !ctir !147
  store i8* %add.ptr39, i8** %start, align 8, !dbg !9649
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %if.end31
  br label %for.cond, !dbg !9650

for.cond:                                         ; preds = %for.inc292, %if.end40
  %33 = load i8*, i8** %start, align 8, !dbg !9651
  %34 = load i8, i8* %33, align 1, !dbg !9654, !ctir !147
  %tobool41 = icmp ne i8 %34, 0, !dbg !9655
  br i1 %tobool41, label %for.body, label %for.end293, !dbg !9655

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !9656

while.cond:                                       ; preds = %while.body, %for.body
  %35 = load i8*, i8** %start, align 8, !dbg !9658
  %36 = load i8, i8* %35, align 1, !dbg !9658, !ctir !147
  %conv42 = sext i8 %36 to i32, !dbg !9658
  %cmp43 = icmp eq i32 %conv42, 47, !dbg !9658
  br i1 %cmp43, label %while.body, label %while.end, !dbg !9656

while.body:                                       ; preds = %while.cond
  %37 = load i8*, i8** %start, align 8, !dbg !9659
  %incdec.ptr45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !9659, !ctir !147
  store i8* %incdec.ptr45, i8** %start, align 8, !dbg !9659
  br label %while.cond, !dbg !9656, !llvm.loop !9660

while.end:                                        ; preds = %while.cond
  %38 = load i8*, i8** %start, align 8, !dbg !9662
  store i8* %38, i8** %end, align 8, !dbg !9664
  br label %for.cond46, !dbg !9665

for.cond46:                                       ; preds = %for.inc, %while.end
  %39 = load i8*, i8** %end, align 8, !dbg !9666
  %40 = load i8, i8* %39, align 1, !dbg !9668, !ctir !147
  %conv47 = sext i8 %40 to i32, !dbg !9668
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !9668
  br i1 %tobool48, label %land.rhs, label %land.end, !dbg !9669

land.rhs:                                         ; preds = %for.cond46
  %41 = load i8*, i8** %end, align 8, !dbg !9670
  %42 = load i8, i8* %41, align 1, !dbg !9670, !ctir !147
  %conv49 = sext i8 %42 to i32, !dbg !9670
  %cmp50 = icmp eq i32 %conv49, 47, !dbg !9670
  %lnot = xor i1 %cmp50, true, !dbg !9671
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond46
  %43 = phi i1 [ false, %for.cond46 ], [ %lnot, %land.rhs ], !dbg !9672
  br i1 %43, label %for.body52, label %for.end, !dbg !9673

for.body52:                                       ; preds = %land.end
  br label %for.inc, !dbg !9673

for.inc:                                          ; preds = %for.body52
  %44 = load i8*, i8** %end, align 8, !dbg !9674
  %incdec.ptr53 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !9674, !ctir !147
  store i8* %incdec.ptr53, i8** %end, align 8, !dbg !9674
  br label %for.cond46, !dbg !9675, !llvm.loop !9676

for.end:                                          ; preds = %land.end
  %45 = load i8*, i8** %end, align 8, !dbg !9678
  %46 = load i8*, i8** %start, align 8, !dbg !9680
  %sub.ptr.lhs.cast54 = ptrtoint i8* %45 to i64, !dbg !9681
  %sub.ptr.rhs.cast55 = ptrtoint i8* %46 to i64, !dbg !9681
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !9681
  %cmp57 = icmp eq i64 %sub.ptr.sub56, 0, !dbg !9682
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !9683

if.then59:                                        ; preds = %for.end
  br label %for.end293, !dbg !9684

if.else60:                                        ; preds = %for.end
  %47 = load i8*, i8** %end, align 8, !dbg !9685
  %48 = load i8*, i8** %start, align 8, !dbg !9687
  %sub.ptr.lhs.cast61 = ptrtoint i8* %47 to i64, !dbg !9688
  %sub.ptr.rhs.cast62 = ptrtoint i8* %48 to i64, !dbg !9688
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62, !dbg !9688
  %cmp64 = icmp eq i64 %sub.ptr.sub63, 1, !dbg !9689
  br i1 %cmp64, label %land.lhs.true, label %if.else71, !dbg !9690

land.lhs.true:                                    ; preds = %if.else60
  %49 = load i8*, i8** %start, align 8, !dbg !9691
  %arrayidx66 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !9691, !ctir !146
  %50 = load i8, i8* %arrayidx66, align 1, !dbg !9691
  %conv67 = sext i8 %50 to i32, !dbg !9691
  %cmp68 = icmp eq i32 %conv67, 46, !dbg !9692
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !9693

if.then70:                                        ; preds = %land.lhs.true
  br label %if.end290, !dbg !9693

if.else71:                                        ; preds = %land.lhs.true, %if.else60
  %51 = load i8*, i8** %end, align 8, !dbg !9694
  %52 = load i8*, i8** %start, align 8, !dbg !9696
  %sub.ptr.lhs.cast72 = ptrtoint i8* %51 to i64, !dbg !9697
  %sub.ptr.rhs.cast73 = ptrtoint i8* %52 to i64, !dbg !9697
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !9697
  %cmp75 = icmp eq i64 %sub.ptr.sub74, 2, !dbg !9698
  br i1 %cmp75, label %land.lhs.true77, label %if.else109, !dbg !9699

land.lhs.true77:                                  ; preds = %if.else71
  %53 = load i8*, i8** %start, align 8, !dbg !9700
  %arrayidx78 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !9700, !ctir !146
  %54 = load i8, i8* %arrayidx78, align 1, !dbg !9700
  %conv79 = sext i8 %54 to i32, !dbg !9700
  %cmp80 = icmp eq i32 %conv79, 46, !dbg !9701
  br i1 %cmp80, label %land.lhs.true82, label %if.else109, !dbg !9702

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %55 = load i8*, i8** %start, align 8, !dbg !9703
  %arrayidx83 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !9703, !ctir !146
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !9703
  %conv84 = sext i8 %56 to i32, !dbg !9703
  %cmp85 = icmp eq i32 %conv84, 46, !dbg !9704
  br i1 %cmp85, label %if.then87, label %if.else109, !dbg !9705

if.then87:                                        ; preds = %land.lhs.true82
  %57 = load i8*, i8** %dest, align 8, !dbg !9706
  %58 = load i8*, i8** %rname, align 8, !dbg !9709
  %59 = load i64, i64* %prefix_len, align 8, !dbg !9710
  %add.ptr88 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !9711, !ctir !144
  %add.ptr89 = getelementptr inbounds i8, i8* %add.ptr88, i64 1, !dbg !9712, !ctir !144
  %cmp90 = icmp ugt i8* %57, %add.ptr89, !dbg !9713
  br i1 %cmp90, label %if.then92, label %if.end108, !dbg !9714

if.then92:                                        ; preds = %if.then87
  %60 = load i8*, i8** %dest, align 8, !dbg !9715
  %incdec.ptr93 = getelementptr inbounds i8, i8* %60, i32 -1, !dbg !9715, !ctir !144
  store i8* %incdec.ptr93, i8** %dest, align 8, !dbg !9715
  br label %for.cond94, !dbg !9715

for.cond94:                                       ; preds = %for.inc105, %if.then92
  %61 = load i8*, i8** %dest, align 8, !dbg !9717
  %62 = load i8*, i8** %rname, align 8, !dbg !9719
  %cmp95 = icmp ugt i8* %61, %62, !dbg !9720
  br i1 %cmp95, label %land.rhs97, label %land.end103, !dbg !9721

land.rhs97:                                       ; preds = %for.cond94
  %63 = load i8*, i8** %dest, align 8, !dbg !9722
  %arrayidx98 = getelementptr inbounds i8, i8* %63, i64 -1, !dbg !9722, !ctir !143
  %64 = load i8, i8* %arrayidx98, align 1, !dbg !9722
  %conv99 = sext i8 %64 to i32, !dbg !9722
  %cmp100 = icmp eq i32 %conv99, 47, !dbg !9722
  %lnot102 = xor i1 %cmp100, true, !dbg !9723
  br label %land.end103

land.end103:                                      ; preds = %land.rhs97, %for.cond94
  %65 = phi i1 [ false, %for.cond94 ], [ %lnot102, %land.rhs97 ], !dbg !9724
  br i1 %65, label %for.body104, label %for.end107, !dbg !9725

for.body104:                                      ; preds = %land.end103
  br label %for.inc105, !dbg !9726

for.inc105:                                       ; preds = %for.body104
  %66 = load i8*, i8** %dest, align 8, !dbg !9727
  %incdec.ptr106 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !9727, !ctir !144
  store i8* %incdec.ptr106, i8** %dest, align 8, !dbg !9727
  br label %for.cond94, !dbg !9728, !llvm.loop !9729

for.end107:                                       ; preds = %land.end103
  br label %if.end108, !dbg !9730

if.end108:                                        ; preds = %for.end107, %if.then87
  br label %if.end289, !dbg !9731

if.else109:                                       ; preds = %land.lhs.true82, %land.lhs.true77, %if.else71
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !9732, metadata !DIExpression()), !dbg !9734
  %67 = load i8*, i8** %dest, align 8, !dbg !9735
  %arrayidx110 = getelementptr inbounds i8, i8* %67, i64 -1, !dbg !9735, !ctir !143
  %68 = load i8, i8* %arrayidx110, align 1, !dbg !9735
  %conv111 = sext i8 %68 to i32, !dbg !9735
  %cmp112 = icmp eq i32 %conv111, 47, !dbg !9735
  br i1 %cmp112, label %if.end116, label %if.then114, !dbg !9737

if.then114:                                       ; preds = %if.else109
  %69 = load i8*, i8** %dest, align 8, !dbg !9738
  %incdec.ptr115 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !9738, !ctir !144
  store i8* %incdec.ptr115, i8** %dest, align 8, !dbg !9738
  store i8 47, i8* %69, align 1, !dbg !9739, !ctir !144
  br label %if.end116, !dbg !9740

if.end116:                                        ; preds = %if.then114, %if.else109
  %70 = load i8*, i8** %dest, align 8, !dbg !9741
  %71 = load i8*, i8** %end, align 8, !dbg !9743
  %72 = load i8*, i8** %start, align 8, !dbg !9744
  %sub.ptr.lhs.cast117 = ptrtoint i8* %71 to i64, !dbg !9745
  %sub.ptr.rhs.cast118 = ptrtoint i8* %72 to i64, !dbg !9745
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !9745
  %add.ptr120 = getelementptr inbounds i8, i8* %70, i64 %sub.ptr.sub119, !dbg !9746, !ctir !144
  %73 = load i8*, i8** %rname_limit, align 8, !dbg !9747
  %cmp121 = icmp uge i8* %add.ptr120, %73, !dbg !9748
  br i1 %cmp121, label %if.then123, label %if.end147, !dbg !9749

if.then123:                                       ; preds = %if.end116
  call void @llvm.dbg.declare(metadata i64* %dest_offset, metadata !9750, metadata !DIExpression()), !dbg !9752
  %74 = load i8*, i8** %dest, align 8, !dbg !9753
  %75 = load i8*, i8** %rname, align 8, !dbg !9754
  %sub.ptr.lhs.cast124 = ptrtoint i8* %74 to i64, !dbg !9755
  %sub.ptr.rhs.cast125 = ptrtoint i8* %75 to i64, !dbg !9755
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !9755
  store i64 %sub.ptr.sub126, i64* %dest_offset, align 8, !dbg !9752
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !9756, metadata !DIExpression()), !dbg !9757
  %76 = load i8*, i8** %rname_limit, align 8, !dbg !9758
  %77 = load i8*, i8** %rname, align 8, !dbg !9759
  %sub.ptr.lhs.cast127 = ptrtoint i8* %76 to i64, !dbg !9760
  %sub.ptr.rhs.cast128 = ptrtoint i8* %77 to i64, !dbg !9760
  %sub.ptr.sub129 = sub i64 %sub.ptr.lhs.cast127, %sub.ptr.rhs.cast128, !dbg !9760
  store i64 %sub.ptr.sub129, i64* %new_size, align 8, !dbg !9757
  %78 = load i8*, i8** %end, align 8, !dbg !9761
  %79 = load i8*, i8** %start, align 8, !dbg !9763
  %sub.ptr.lhs.cast130 = ptrtoint i8* %78 to i64, !dbg !9764
  %sub.ptr.rhs.cast131 = ptrtoint i8* %79 to i64, !dbg !9764
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131, !dbg !9764
  %add = add nsw i64 %sub.ptr.sub132, 1, !dbg !9765
  %cmp133 = icmp sgt i64 %add, 4096, !dbg !9766
  br i1 %cmp133, label %if.then135, label %if.else141, !dbg !9767

if.then135:                                       ; preds = %if.then123
  %80 = load i8*, i8** %end, align 8, !dbg !9768
  %81 = load i8*, i8** %start, align 8, !dbg !9769
  %sub.ptr.lhs.cast136 = ptrtoint i8* %80 to i64, !dbg !9770
  %sub.ptr.rhs.cast137 = ptrtoint i8* %81 to i64, !dbg !9770
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !9770
  %add139 = add nsw i64 %sub.ptr.sub138, 1, !dbg !9771
  %82 = load i64, i64* %new_size, align 8, !dbg !9772
  %add140 = add i64 %82, %add139, !dbg !9772
  store i64 %add140, i64* %new_size, align 8, !dbg !9772
  br label %if.end143, !dbg !9773

if.else141:                                       ; preds = %if.then123
  %83 = load i64, i64* %new_size, align 8, !dbg !9774
  %add142 = add i64 %83, 4096, !dbg !9774
  store i64 %add142, i64* %new_size, align 8, !dbg !9774
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then135
  %84 = load i8*, i8** %rname, align 8, !dbg !9775
  %85 = load i64, i64* %new_size, align 8, !dbg !9776
  %call144 = call i8* @xrealloc(i8* %84, i64 %85), !dbg !9777
  store i8* %call144, i8** %rname, align 8, !dbg !9778
  %86 = load i8*, i8** %rname, align 8, !dbg !9779
  %87 = load i64, i64* %new_size, align 8, !dbg !9780
  %add.ptr145 = getelementptr inbounds i8, i8* %86, i64 %87, !dbg !9781, !ctir !144
  store i8* %add.ptr145, i8** %rname_limit, align 8, !dbg !9782
  %88 = load i8*, i8** %rname, align 8, !dbg !9783
  %89 = load i64, i64* %dest_offset, align 8, !dbg !9784
  %add.ptr146 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !9785, !ctir !144
  store i8* %add.ptr146, i8** %dest, align 8, !dbg !9786
  br label %if.end147, !dbg !9787

if.end147:                                        ; preds = %if.end143, %if.end116
  %90 = load i8*, i8** %dest, align 8, !dbg !9788
  %91 = load i8*, i8** %start, align 8, !dbg !9789
  %92 = load i8*, i8** %end, align 8, !dbg !9790
  %93 = load i8*, i8** %start, align 8, !dbg !9791
  %sub.ptr.lhs.cast148 = ptrtoint i8* %92 to i64, !dbg !9792
  %sub.ptr.rhs.cast149 = ptrtoint i8* %93 to i64, !dbg !9792
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !9792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %91, i64 %sub.ptr.sub150, i1 false), !dbg !9793
  store i8* %90, i8** %dest, align 8, !dbg !9794
  %94 = load i8*, i8** %end, align 8, !dbg !9795
  %95 = load i8*, i8** %start, align 8, !dbg !9796
  %sub.ptr.lhs.cast151 = ptrtoint i8* %94 to i64, !dbg !9797
  %sub.ptr.rhs.cast152 = ptrtoint i8* %95 to i64, !dbg !9797
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !9797
  %96 = load i8*, i8** %dest, align 8, !dbg !9798
  %add.ptr154 = getelementptr inbounds i8, i8* %96, i64 %sub.ptr.sub153, !dbg !9798, !ctir !144
  store i8* %add.ptr154, i8** %dest, align 8, !dbg !9798
  %97 = load i8*, i8** %dest, align 8, !dbg !9799
  store i8 0, i8* %97, align 1, !dbg !9800, !ctir !144
  %98 = load i8, i8* %logical, align 1, !dbg !9801
  %tobool155 = trunc i8 %98 to i1, !dbg !9801
  br i1 %tobool155, label %land.lhs.true157, label %if.else161, !dbg !9803

land.lhs.true157:                                 ; preds = %if.end147
  %99 = load i32, i32* %can_mode.addr, align 4, !dbg !9804
  %cmp158 = icmp eq i32 %99, 2, !dbg !9805
  br i1 %cmp158, label %if.then160, label %if.else161, !dbg !9806

if.then160:                                       ; preds = %land.lhs.true157
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !9807, !ctir !9504
  store i32 0, i32* %st_mode, align 8, !dbg !9809, !ctir !200
  br label %if.end188, !dbg !9810

if.else161:                                       ; preds = %land.lhs.true157, %if.end147
  %100 = load i8, i8* %logical, align 1, !dbg !9811
  %tobool162 = trunc i8 %100 to i1, !dbg !9811
  br i1 %tobool162, label %cond.true, label %cond.false, !dbg !9811

cond.true:                                        ; preds = %if.else161
  %101 = load i8*, i8** %rname, align 8, !dbg !9813
  %call164 = call i32 @stat(i8* %101, %struct.stat* %st) #13, !dbg !9814
  br label %cond.end, !dbg !9811

cond.false:                                       ; preds = %if.else161
  %102 = load i8*, i8** %rname, align 8, !dbg !9815
  %call165 = call i32 @lstat(i8* %102, %struct.stat* %st) #13, !dbg !9816
  br label %cond.end, !dbg !9811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call164, %cond.true ], [ %call165, %cond.false ], !dbg !9811
  %cmp166 = icmp ne i32 %cond, 0, !dbg !9817
  br i1 %cmp166, label %if.then168, label %if.end187, !dbg !9818

if.then168:                                       ; preds = %cond.end
  %call169 = call i32* @__errno_location() #17, !dbg !9819
  %103 = load i32, i32* %call169, align 4, !dbg !9819, !ctir !27
  store i32 %103, i32* %saved_errno, align 4, !dbg !9821
  %104 = load i32, i32* %can_mode.addr, align 4, !dbg !9822
  %cmp170 = icmp eq i32 %104, 0, !dbg !9824
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !9825

if.then172:                                       ; preds = %if.then168
  br label %error, !dbg !9826

if.end173:                                        ; preds = %if.then168
  %105 = load i32, i32* %can_mode.addr, align 4, !dbg !9827
  %cmp174 = icmp eq i32 %105, 1, !dbg !9829
  br i1 %cmp174, label %if.then176, label %if.end185, !dbg !9830

if.then176:                                       ; preds = %if.end173
  %106 = load i8*, i8** %end, align 8, !dbg !9831
  %107 = load i8*, i8** %end, align 8, !dbg !9834
  %call177 = call i64 @strspn(i8* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.270, i64 0, i64 0)) #16, !dbg !9835
  %arrayidx178 = getelementptr inbounds i8, i8* %106, i64 %call177, !dbg !9831, !ctir !146
  %108 = load i8, i8* %arrayidx178, align 1, !dbg !9831
  %conv179 = sext i8 %108 to i32, !dbg !9831
  %tobool180 = icmp ne i32 %conv179, 0, !dbg !9831
  br i1 %tobool180, label %if.then183, label %lor.lhs.false, !dbg !9836

lor.lhs.false:                                    ; preds = %if.then176
  %109 = load i32, i32* %saved_errno, align 4, !dbg !9837
  %cmp181 = icmp ne i32 %109, 2, !dbg !9838
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !9839

if.then183:                                       ; preds = %lor.lhs.false, %if.then176
  br label %error, !dbg !9840

if.end184:                                        ; preds = %lor.lhs.false
  br label %for.inc292, !dbg !9841

if.end185:                                        ; preds = %if.end173
  %st_mode186 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !9842, !ctir !9504
  store i32 0, i32* %st_mode186, align 8, !dbg !9843, !ctir !200
  br label %if.end187, !dbg !9844

if.end187:                                        ; preds = %if.end185, %cond.end
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then160
  %st_mode189 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !9845, !ctir !9504
  %110 = load i32, i32* %st_mode189, align 8, !dbg !9845, !ctir !200
  %and190 = and i32 %110, 61440, !dbg !9845
  %cmp191 = icmp eq i32 %and190, 40960, !dbg !9845
  br i1 %cmp191, label %if.then193, label %if.else275, !dbg !9847

if.then193:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9848, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9851, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.declare(metadata i64* %len, metadata !9853, metadata !DIExpression()), !dbg !9854
  %111 = load i8*, i8** %name.addr, align 8, !dbg !9855
  %call194 = call zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %111, %struct.stat* %st), !dbg !9857
  br i1 %call194, label %if.then195, label %if.end200, !dbg !9858

if.then195:                                       ; preds = %if.then193
  %112 = load i32, i32* %can_mode.addr, align 4, !dbg !9859
  %cmp196 = icmp eq i32 %112, 2, !dbg !9862
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !9863

if.then198:                                       ; preds = %if.then195
  br label %for.inc292, !dbg !9864

if.end199:                                        ; preds = %if.then195
  store i32 40, i32* %saved_errno, align 4, !dbg !9865
  br label %error, !dbg !9866

if.end200:                                        ; preds = %if.then193
  %113 = load i8*, i8** %rname, align 8, !dbg !9867
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !9868, !ctir !9504
  %114 = load i64, i64* %st_size, align 8, !dbg !9868, !ctir !180
  %call201 = call i8* @areadlink_with_size(i8* %113, i64 %114), !dbg !9869
  store i8* %call201, i8** %buf, align 8, !dbg !9870
  %115 = load i8*, i8** %buf, align 8, !dbg !9871
  %tobool202 = icmp ne i8* %115, null, !dbg !9871
  br i1 %tobool202, label %if.end213, label %if.then203, !dbg !9873

if.then203:                                       ; preds = %if.end200
  %116 = load i32, i32* %can_mode.addr, align 4, !dbg !9874
  %cmp204 = icmp eq i32 %116, 2, !dbg !9877
  br i1 %cmp204, label %land.lhs.true206, label %if.end211, !dbg !9878

land.lhs.true206:                                 ; preds = %if.then203
  %call207 = call i32* @__errno_location() #17, !dbg !9879
  %117 = load i32, i32* %call207, align 4, !dbg !9879, !ctir !27
  %cmp208 = icmp ne i32 %117, 12, !dbg !9880
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !9881

if.then210:                                       ; preds = %land.lhs.true206
  br label %for.inc292, !dbg !9882

if.end211:                                        ; preds = %land.lhs.true206, %if.then203
  %call212 = call i32* @__errno_location() #17, !dbg !9883
  %118 = load i32, i32* %call212, align 4, !dbg !9883, !ctir !27
  store i32 %118, i32* %saved_errno, align 4, !dbg !9884
  br label %error, !dbg !9885

if.end213:                                        ; preds = %if.end200
  %119 = load i8*, i8** %buf, align 8, !dbg !9886
  %call214 = call i64 @strlen(i8* %119) #16, !dbg !9887
  store i64 %call214, i64* %n, align 8, !dbg !9888
  %120 = load i8*, i8** %end, align 8, !dbg !9889
  %call215 = call i64 @strlen(i8* %120) #16, !dbg !9890
  store i64 %call215, i64* %len, align 8, !dbg !9891
  %121 = load i64, i64* %extra_len, align 8, !dbg !9892
  %tobool216 = icmp ne i64 %121, 0, !dbg !9892
  br i1 %tobool216, label %if.else229, label %if.then217, !dbg !9894

if.then217:                                       ; preds = %if.end213
  %122 = load i64, i64* %n, align 8, !dbg !9895
  %123 = load i64, i64* %len, align 8, !dbg !9897
  %add218 = add i64 %122, %123, !dbg !9898
  %add219 = add i64 %add218, 1, !dbg !9899
  %cmp220 = icmp ugt i64 %add219, 4096, !dbg !9900
  br i1 %cmp220, label %cond.true222, label %cond.false225, !dbg !9901

cond.true222:                                     ; preds = %if.then217
  %124 = load i64, i64* %n, align 8, !dbg !9902
  %125 = load i64, i64* %len, align 8, !dbg !9903
  %add223 = add i64 %124, %125, !dbg !9904
  %add224 = add i64 %add223, 1, !dbg !9905
  br label %cond.end226, !dbg !9901

cond.false225:                                    ; preds = %if.then217
  br label %cond.end226, !dbg !9901

cond.end226:                                      ; preds = %cond.false225, %cond.true222
  %cond227 = phi i64 [ %add224, %cond.true222 ], [ 4096, %cond.false225 ], !dbg !9901
  store i64 %cond227, i64* %extra_len, align 8, !dbg !9906
  %126 = load i64, i64* %extra_len, align 8, !dbg !9907
  %call228 = call noalias i8* @xmalloc(i64 %126), !dbg !9908
  store i8* %call228, i8** %extra_buf, align 8, !dbg !9909
  br label %if.end239, !dbg !9910

if.else229:                                       ; preds = %if.end213
  %127 = load i64, i64* %n, align 8, !dbg !9911
  %128 = load i64, i64* %len, align 8, !dbg !9913
  %add230 = add i64 %127, %128, !dbg !9914
  %add231 = add i64 %add230, 1, !dbg !9915
  %129 = load i64, i64* %extra_len, align 8, !dbg !9916
  %cmp232 = icmp ugt i64 %add231, %129, !dbg !9917
  br i1 %cmp232, label %if.then234, label %if.end238, !dbg !9918

if.then234:                                       ; preds = %if.else229
  %130 = load i64, i64* %n, align 8, !dbg !9919
  %131 = load i64, i64* %len, align 8, !dbg !9921
  %add235 = add i64 %130, %131, !dbg !9922
  %add236 = add i64 %add235, 1, !dbg !9923
  store i64 %add236, i64* %extra_len, align 8, !dbg !9924
  %132 = load i8*, i8** %extra_buf, align 8, !dbg !9925
  %133 = load i64, i64* %extra_len, align 8, !dbg !9926
  %call237 = call i8* @xrealloc(i8* %132, i64 %133), !dbg !9927
  store i8* %call237, i8** %extra_buf, align 8, !dbg !9928
  br label %if.end238, !dbg !9929

if.end238:                                        ; preds = %if.then234, %if.else229
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %cond.end226
  %134 = load i8*, i8** %extra_buf, align 8, !dbg !9930
  %135 = load i64, i64* %n, align 8, !dbg !9931
  %arrayidx240 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !9930, !ctir !143
  %136 = load i8*, i8** %end, align 8, !dbg !9932
  %137 = load i64, i64* %len, align 8, !dbg !9933
  %add241 = add i64 %137, 1, !dbg !9934
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %arrayidx240, i8* align 1 %136, i64 %add241, i1 false), !dbg !9935
  %138 = load i8*, i8** %extra_buf, align 8, !dbg !9936
  %139 = load i8*, i8** %buf, align 8, !dbg !9937
  %140 = load i64, i64* %n, align 8, !dbg !9938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %139, i64 %140, i1 false), !dbg !9939
  store i8* %138, i8** %end, align 8, !dbg !9940
  store i8* %138, i8** %name.addr, align 8, !dbg !9941
  %141 = load i8*, i8** %buf, align 8, !dbg !9942
  %arrayidx242 = getelementptr inbounds i8, i8* %141, i64 0, !dbg !9942, !ctir !143
  %142 = load i8, i8* %arrayidx242, align 1, !dbg !9942
  %conv243 = sext i8 %142 to i32, !dbg !9942
  %cmp244 = icmp eq i32 %conv243, 47, !dbg !9942
  br i1 %cmp244, label %if.then246, label %if.else252, !dbg !9944

if.then246:                                       ; preds = %if.end239
  call void @llvm.dbg.declare(metadata i64* %pfxlen, metadata !9945, metadata !DIExpression()), !dbg !9947
  store i64 0, i64* %pfxlen, align 8, !dbg !9947
  %143 = load i64, i64* %pfxlen, align 8, !dbg !9948
  %tobool247 = icmp ne i64 %143, 0, !dbg !9948
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !9950

if.then248:                                       ; preds = %if.then246
  %144 = load i8*, i8** %rname, align 8, !dbg !9951
  %145 = load i8*, i8** %buf, align 8, !dbg !9952
  %146 = load i64, i64* %pfxlen, align 8, !dbg !9953
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 %145, i64 %146, i1 false), !dbg !9954
  br label %if.end249, !dbg !9954

if.end249:                                        ; preds = %if.then248, %if.then246
  %147 = load i8*, i8** %rname, align 8, !dbg !9955
  %148 = load i64, i64* %pfxlen, align 8, !dbg !9956
  %add.ptr250 = getelementptr inbounds i8, i8* %147, i64 %148, !dbg !9957, !ctir !144
  store i8* %add.ptr250, i8** %dest, align 8, !dbg !9958
  %149 = load i8*, i8** %dest, align 8, !dbg !9959
  %incdec.ptr251 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !9959, !ctir !144
  store i8* %incdec.ptr251, i8** %dest, align 8, !dbg !9959
  store i8 47, i8* %149, align 1, !dbg !9960, !ctir !144
  %150 = load i64, i64* %pfxlen, align 8, !dbg !9961
  store i64 %150, i64* %prefix_len, align 8, !dbg !9962
  br label %if.end274, !dbg !9963

if.else252:                                       ; preds = %if.end239
  %151 = load i8*, i8** %dest, align 8, !dbg !9964
  %152 = load i8*, i8** %rname, align 8, !dbg !9967
  %153 = load i64, i64* %prefix_len, align 8, !dbg !9968
  %add.ptr253 = getelementptr inbounds i8, i8* %152, i64 %153, !dbg !9969, !ctir !144
  %add.ptr254 = getelementptr inbounds i8, i8* %add.ptr253, i64 1, !dbg !9970, !ctir !144
  %cmp255 = icmp ugt i8* %151, %add.ptr254, !dbg !9971
  br i1 %cmp255, label %if.then257, label %if.end273, !dbg !9972

if.then257:                                       ; preds = %if.else252
  %154 = load i8*, i8** %dest, align 8, !dbg !9973
  %incdec.ptr258 = getelementptr inbounds i8, i8* %154, i32 -1, !dbg !9973, !ctir !144
  store i8* %incdec.ptr258, i8** %dest, align 8, !dbg !9973
  br label %for.cond259, !dbg !9973

for.cond259:                                      ; preds = %for.inc270, %if.then257
  %155 = load i8*, i8** %dest, align 8, !dbg !9975
  %156 = load i8*, i8** %rname, align 8, !dbg !9977
  %cmp260 = icmp ugt i8* %155, %156, !dbg !9978
  br i1 %cmp260, label %land.rhs262, label %land.end268, !dbg !9979

land.rhs262:                                      ; preds = %for.cond259
  %157 = load i8*, i8** %dest, align 8, !dbg !9980
  %arrayidx263 = getelementptr inbounds i8, i8* %157, i64 -1, !dbg !9980, !ctir !143
  %158 = load i8, i8* %arrayidx263, align 1, !dbg !9980
  %conv264 = sext i8 %158 to i32, !dbg !9980
  %cmp265 = icmp eq i32 %conv264, 47, !dbg !9980
  %lnot267 = xor i1 %cmp265, true, !dbg !9981
  br label %land.end268

land.end268:                                      ; preds = %land.rhs262, %for.cond259
  %159 = phi i1 [ false, %for.cond259 ], [ %lnot267, %land.rhs262 ], !dbg !9982
  br i1 %159, label %for.body269, label %for.end272, !dbg !9983

for.body269:                                      ; preds = %land.end268
  br label %for.inc270, !dbg !9984

for.inc270:                                       ; preds = %for.body269
  %160 = load i8*, i8** %dest, align 8, !dbg !9985
  %incdec.ptr271 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !9985, !ctir !144
  store i8* %incdec.ptr271, i8** %dest, align 8, !dbg !9985
  br label %for.cond259, !dbg !9986, !llvm.loop !9987

for.end272:                                       ; preds = %land.end268
  br label %if.end273, !dbg !9988

if.end273:                                        ; preds = %for.end272, %if.else252
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.end249
  %161 = load i8*, i8** %buf, align 8, !dbg !9989
  call void @free(i8* %161) #13, !dbg !9990
  br label %if.end288, !dbg !9991

if.else275:                                       ; preds = %if.end188
  %st_mode276 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !9992, !ctir !9504
  %162 = load i32, i32* %st_mode276, align 8, !dbg !9992, !ctir !200
  %and277 = and i32 %162, 61440, !dbg !9992
  %cmp278 = icmp eq i32 %and277, 16384, !dbg !9992
  br i1 %cmp278, label %if.end287, label %land.lhs.true280, !dbg !9995

land.lhs.true280:                                 ; preds = %if.else275
  %163 = load i8*, i8** %end, align 8, !dbg !9996
  %164 = load i8, i8* %163, align 1, !dbg !9997, !ctir !147
  %conv281 = sext i8 %164 to i32, !dbg !9997
  %tobool282 = icmp ne i32 %conv281, 0, !dbg !9997
  br i1 %tobool282, label %land.lhs.true283, label %if.end287, !dbg !9998

land.lhs.true283:                                 ; preds = %land.lhs.true280
  %165 = load i32, i32* %can_mode.addr, align 4, !dbg !9999
  %cmp284 = icmp ne i32 %165, 2, !dbg !10000
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !10001

if.then286:                                       ; preds = %land.lhs.true283
  store i32 20, i32* %saved_errno, align 4, !dbg !10002
  br label %error, !dbg !10004

if.end287:                                        ; preds = %land.lhs.true283, %land.lhs.true280, %if.else275
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end274
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end108
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then70
  br label %if.end291

if.end291:                                        ; preds = %if.end290
  br label %for.inc292, !dbg !10005

for.inc292:                                       ; preds = %if.end291, %if.then210, %if.then198, %if.end184
  %166 = load i8*, i8** %end, align 8, !dbg !10006
  store i8* %166, i8** %start, align 8, !dbg !10007
  br label %for.cond, !dbg !10008, !llvm.loop !10009

for.end293:                                       ; preds = %if.then59, %for.cond
  %167 = load i8*, i8** %dest, align 8, !dbg !10011
  %168 = load i8*, i8** %rname, align 8, !dbg !10013
  %169 = load i64, i64* %prefix_len, align 8, !dbg !10014
  %add.ptr294 = getelementptr inbounds i8, i8* %168, i64 %169, !dbg !10015, !ctir !144
  %add.ptr295 = getelementptr inbounds i8, i8* %add.ptr294, i64 1, !dbg !10016, !ctir !144
  %cmp296 = icmp ugt i8* %167, %add.ptr295, !dbg !10017
  br i1 %cmp296, label %land.lhs.true298, label %if.end305, !dbg !10018

land.lhs.true298:                                 ; preds = %for.end293
  %170 = load i8*, i8** %dest, align 8, !dbg !10019
  %arrayidx299 = getelementptr inbounds i8, i8* %170, i64 -1, !dbg !10019, !ctir !143
  %171 = load i8, i8* %arrayidx299, align 1, !dbg !10019
  %conv300 = sext i8 %171 to i32, !dbg !10019
  %cmp301 = icmp eq i32 %conv300, 47, !dbg !10019
  br i1 %cmp301, label %if.then303, label %if.end305, !dbg !10020

if.then303:                                       ; preds = %land.lhs.true298
  %172 = load i8*, i8** %dest, align 8, !dbg !10021
  %incdec.ptr304 = getelementptr inbounds i8, i8* %172, i32 -1, !dbg !10021, !ctir !144
  store i8* %incdec.ptr304, i8** %dest, align 8, !dbg !10021
  br label %if.end305, !dbg !10021

if.end305:                                        ; preds = %if.then303, %land.lhs.true298, %for.end293
  %173 = load i8*, i8** %dest, align 8, !dbg !10022
  store i8 0, i8* %173, align 1, !dbg !10023, !ctir !144
  %174 = load i8*, i8** %rname_limit, align 8, !dbg !10024
  %175 = load i8*, i8** %dest, align 8, !dbg !10026
  %add.ptr306 = getelementptr inbounds i8, i8* %175, i64 1, !dbg !10027, !ctir !144
  %cmp307 = icmp ne i8* %174, %add.ptr306, !dbg !10028
  br i1 %cmp307, label %if.then309, label %if.end315, !dbg !10029

if.then309:                                       ; preds = %if.end305
  %176 = load i8*, i8** %rname, align 8, !dbg !10030
  %177 = load i8*, i8** %dest, align 8, !dbg !10031
  %178 = load i8*, i8** %rname, align 8, !dbg !10032
  %sub.ptr.lhs.cast310 = ptrtoint i8* %177 to i64, !dbg !10033
  %sub.ptr.rhs.cast311 = ptrtoint i8* %178 to i64, !dbg !10033
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311, !dbg !10033
  %add313 = add nsw i64 %sub.ptr.sub312, 1, !dbg !10034
  %call314 = call i8* @xrealloc(i8* %176, i64 %add313), !dbg !10035
  store i8* %call314, i8** %rname, align 8, !dbg !10036
  br label %if.end315, !dbg !10037

if.end315:                                        ; preds = %if.then309, %if.end305
  %179 = load i8*, i8** %extra_buf, align 8, !dbg !10038
  call void @free(i8* %179) #13, !dbg !10039
  %180 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10040
  %tobool316 = icmp ne %struct.hash_table* %180, null, !dbg !10040
  br i1 %tobool316, label %if.then317, label %if.end318, !dbg !10042

if.then317:                                       ; preds = %if.end315
  %181 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10043
  call void @hash_free(%struct.hash_table* %181), !dbg !10044
  br label %if.end318, !dbg !10044

if.end318:                                        ; preds = %if.then317, %if.end315
  %182 = load i8*, i8** %rname, align 8, !dbg !10045
  store i8* %182, i8** %retval, align 8, !dbg !10046
  br label %return, !dbg !10046

error:                                            ; preds = %if.then286, %if.end211, %if.end199, %if.then183, %if.then172
  call void @llvm.dbg.label(metadata !10047), !dbg !10048
  %183 = load i8*, i8** %extra_buf, align 8, !dbg !10049
  call void @free(i8* %183) #13, !dbg !10050
  %184 = load i8*, i8** %rname, align 8, !dbg !10051
  call void @free(i8* %184) #13, !dbg !10052
  %185 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10053
  %tobool319 = icmp ne %struct.hash_table* %185, null, !dbg !10053
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !10055

if.then320:                                       ; preds = %error
  %186 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10056
  call void @hash_free(%struct.hash_table* %186), !dbg !10057
  br label %if.end321, !dbg !10057

if.end321:                                        ; preds = %if.then320, %error
  %187 = load i32, i32* %saved_errno, align 4, !dbg !10058
  %call322 = call i32* @__errno_location() #17, !dbg !10059
  store i32 %187, i32* %call322, align 4, !dbg !10060, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10061
  br label %return, !dbg !10061

return:                                           ; preds = %if.end321, %if.end318, %if.then20, %if.then10, %if.then5, %if.then
  %188 = load i8*, i8** %retval, align 8, !dbg !10062
  ret i8* %188, !dbg !10062
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %filename, %struct.stat* %st) #0 !dbg !10063 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table**, align 8
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %initial_capacity = alloca i64, align 8, !ctir !149
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table*** %ht.addr, metadata !10069, metadata !DIExpression()), !dbg !10070
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !10073, metadata !DIExpression()), !dbg !10074
  %0 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10075
  %1 = load %struct.hash_table*, %struct.hash_table** %0, align 8, !dbg !10077, !ctir !249
  %cmp = icmp eq %struct.hash_table* %1, null, !dbg !10078
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10079

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %initial_capacity, metadata !10080, metadata !DIExpression()), !dbg !10082
  store i64 7, i64* %initial_capacity, align 8, !dbg !10082
  %2 = load i64, i64* %initial_capacity, align 8, !dbg !10083
  %call = call %struct.hash_table* @hash_initialize(i64 %2, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare_ino_str, void (i8*)* @triple_free), !dbg !10084
  %3 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10085
  store %struct.hash_table* %call, %struct.hash_table** %3, align 8, !dbg !10086, !ctir !249
  %4 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10087
  %5 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !10089, !ctir !249
  %cmp1 = icmp eq %struct.hash_table* %5, null, !dbg !10090
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10091

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #14, !dbg !10092
  unreachable, !dbg !10092

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !10093

if.end3:                                          ; preds = %if.end, %entry
  %6 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10094
  %7 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !10096, !ctir !249
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !10097
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10098
  %call4 = call zeroext i1 @seen_file(%struct.hash_table* %7, i8* %8, %struct.stat* %9), !dbg !10099
  br i1 %call4, label %if.then5, label %if.end6, !dbg !10100

if.then5:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !10101
  br label %return, !dbg !10101

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10102
  %11 = load %struct.hash_table*, %struct.hash_table** %10, align 8, !dbg !10103, !ctir !249
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !10104
  %13 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10105
  call void @record_file(%struct.hash_table* %11, i8* %12, %struct.stat* %13), !dbg !10106
  store i1 false, i1* %retval, align 1, !dbg !10107
  br label %return, !dbg !10107

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i1, i1* %retval, align 1, !dbg !10108
  ret i1 %14, !dbg !10108
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #0 !dbg !10109 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10110, metadata !DIExpression()), !dbg !10111
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10112
  store i8* %0, i8** @file_name, align 8, !dbg !10113
  ret void, !dbg !10114
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #0 !dbg !10115 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10118
  %tobool = trunc i8 %0 to i1, !dbg !10118
  %frombool1 = zext i1 %tobool to i8, !dbg !10119
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10119
  ret void, !dbg !10120
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #0 !dbg !10121 {
entry:
  %write_error = alloca i8*, align 8, !ctir !146
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10122
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10124
  %cmp = icmp ne i32 %call, 0, !dbg !10125
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10126

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10127
  %tobool = trunc i8 %1 to i1, !dbg !10127
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10128

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #17, !dbg !10129
  %2 = load i32, i32* %call2, align 4, !dbg !10129, !ctir !27
  %cmp3 = icmp eq i32 %2, 32, !dbg !10130
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10131

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10132, metadata !DIExpression()), !dbg !10134
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #13, !dbg !10135
  store i8* %call4, i8** %write_error, align 8, !dbg !10134
  %3 = load i8*, i8** @file_name, align 8, !dbg !10136
  %tobool5 = icmp ne i8* %3, null, !dbg !10136
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10138

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #17, !dbg !10139
  %4 = load i32, i32* %call7, align 4, !dbg !10139, !ctir !27
  %5 = load i8*, i8** @file_name, align 8, !dbg !10140
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10141
  %6 = load i8*, i8** %write_error, align 8, !dbg !10142
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.274, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10143
  br label %if.end, !dbg !10143

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #17, !dbg !10144
  %7 = load i32, i32* %call9, align 4, !dbg !10144, !ctir !27
  %8 = load i8*, i8** %write_error, align 8, !dbg !10145
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.275, i64 0, i64 0), i8* %8), !dbg !10146
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10147
  call void @_exit(i32 %9) #14, !dbg !10148
  unreachable, !dbg !10148

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10149
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10151
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10152
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10153

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10154
  call void @_exit(i32 %11) #14, !dbg !10155
  unreachable, !dbg !10155

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10156
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10157 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !149
  %length = alloca i64, align 8, !ctir !149
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10163, metadata !DIExpression()), !dbg !10164
  store i64 0, i64* %prefix_length, align 8, !dbg !10164
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10165, metadata !DIExpression()), !dbg !10166
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10167
  %cmp = icmp ne i64 %0, 0, !dbg !10168
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10167

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10167

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10169
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10169, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10169
  %conv = sext i8 %2 to i32, !dbg !10169
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10169
  %3 = zext i1 %cmp1 to i64, !dbg !10169
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10169
  br label %cond.end, !dbg !10167

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10167
  %conv4 = sext i32 %cond3 to i64, !dbg !10170
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10171
  %add = add i64 %4, %conv4, !dbg !10171
  store i64 %add, i64* %prefix_length, align 8, !dbg !10171
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10172
  %call = call i8* @last_component(i8* %5) #16, !dbg !10174
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10175
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10176
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10176
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10176
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10177
  br label %for.cond, !dbg !10178

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10179
  %8 = load i64, i64* %length, align 8, !dbg !10181
  %cmp5 = icmp ult i64 %7, %8, !dbg !10182
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10183

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10184
  %10 = load i64, i64* %length, align 8, !dbg !10184
  %sub = sub i64 %10, 1, !dbg !10184
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10184, !ctir !146
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10184
  %conv8 = sext i8 %11 to i32, !dbg !10184
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10184
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10186

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10187

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10184

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10188
  %dec = add i64 %12, -1, !dbg !10188
  store i64 %dec, i64* %length, align 8, !dbg !10188
  br label %for.cond, !dbg !10189, !llvm.loop !10190

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10192
  ret i64 %13, !dbg !10193
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #0 !dbg !10194 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !149
  %append_dot = alloca i8, align 1, !ctir !141
  %dir = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10197, metadata !DIExpression()), !dbg !10198
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10199
  %call = call i64 @dir_len(i8* %0) #16, !dbg !10200
  store i64 %call, i64* %length, align 8, !dbg !10198
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10201, metadata !DIExpression()), !dbg !10202
  %1 = load i64, i64* %length, align 8, !dbg !10203
  %cmp = icmp eq i64 %1, 0, !dbg !10204
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10205

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10205

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10202
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10202
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10206, metadata !DIExpression()), !dbg !10207
  %3 = load i64, i64* %length, align 8, !dbg !10208
  %4 = load i8, i8* %append_dot, align 1, !dbg !10209
  %tobool = trunc i8 %4 to i1, !dbg !10209
  %conv = zext i1 %tobool to i64, !dbg !10209
  %add = add i64 %3, %conv, !dbg !10210
  %add1 = add i64 %add, 1, !dbg !10211
  %call2 = call noalias i8* @malloc(i64 %add1) #13, !dbg !10212
  store i8* %call2, i8** %dir, align 8, !dbg !10207
  %5 = load i8*, i8** %dir, align 8, !dbg !10213
  %tobool3 = icmp ne i8* %5, null, !dbg !10213
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10215

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10216
  br label %return, !dbg !10216

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10217
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10218
  %8 = load i64, i64* %length, align 8, !dbg !10219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10220
  %9 = load i8, i8* %append_dot, align 1, !dbg !10221
  %tobool4 = trunc i8 %9 to i1, !dbg !10221
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10223

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10224
  %11 = load i64, i64* %length, align 8, !dbg !10225
  %inc = add i64 %11, 1, !dbg !10225
  store i64 %inc, i64* %length, align 8, !dbg !10225
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10224, !ctir !143
  store i8 46, i8* %arrayidx, align 1, !dbg !10226
  br label %if.end6, !dbg !10224

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10227
  %13 = load i64, i64* %length, align 8, !dbg !10228
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10227, !ctir !143
  store i8 0, i8* %arrayidx7, align 1, !dbg !10229
  %14 = load i8*, i8** %dir, align 8, !dbg !10230
  store i8* %14, i8** %retval, align 8, !dbg !10231
  br label %return, !dbg !10231

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10232
  ret i8* %15, !dbg !10232
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10233 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !146
  %p = alloca i8*, align 8, !ctir !146
  %saw_slash = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10237, metadata !DIExpression()), !dbg !10238
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10239
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10240, !ctir !147
  store i8* %add.ptr, i8** %base, align 8, !dbg !10238
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10243, metadata !DIExpression()), !dbg !10244
  store i8 0, i8* %saw_slash, align 1, !dbg !10244
  br label %while.cond, !dbg !10245

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10246
  %2 = load i8, i8* %1, align 1, !dbg !10246, !ctir !147
  %conv = sext i8 %2 to i32, !dbg !10246
  %cmp = icmp eq i32 %conv, 47, !dbg !10246
  br i1 %cmp, label %while.body, label %while.end, !dbg !10245

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10247
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10247, !ctir !147
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10247
  br label %while.cond, !dbg !10245, !llvm.loop !10248

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10249
  store i8* %4, i8** %p, align 8, !dbg !10251
  br label %for.cond, !dbg !10252

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10253
  %6 = load i8, i8* %5, align 1, !dbg !10255, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !10256
  br i1 %tobool, label %for.body, label %for.end, !dbg !10256

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10257
  %8 = load i8, i8* %7, align 1, !dbg !10257, !ctir !147
  %conv2 = sext i8 %8 to i32, !dbg !10257
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10257
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10260

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10261
  br label %if.end7, !dbg !10262

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10263
  %tobool5 = trunc i8 %9 to i1, !dbg !10263
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10265

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10266
  store i8* %10, i8** %base, align 8, !dbg !10268
  store i8 0, i8* %saw_slash, align 1, !dbg !10269
  br label %if.end, !dbg !10270

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10271

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10272
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10272, !ctir !147
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10272
  br label %for.cond, !dbg !10273, !llvm.loop !10274

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10276
  ret i8* %12, !dbg !10277
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10278 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !149
  %prefix_len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10281, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10283, metadata !DIExpression()), !dbg !10284
  store i64 0, i64* %prefix_len, align 8, !dbg !10284
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10285
  %call = call i64 @strlen(i8* %0) #16, !dbg !10287
  store i64 %call, i64* %len, align 8, !dbg !10288
  br label %for.cond, !dbg !10289

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10290
  %cmp = icmp ult i64 1, %1, !dbg !10292
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10293

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10294
  %3 = load i64, i64* %len, align 8, !dbg !10294
  %sub = sub i64 %3, 1, !dbg !10294
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10294, !ctir !146
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10294
  %conv = sext i8 %4 to i32, !dbg !10294
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10294
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10295
  br i1 %5, label %for.body, label %for.end, !dbg !10296

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10297

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10298
  %dec = add i64 %6, -1, !dbg !10298
  store i64 %dec, i64* %len, align 8, !dbg !10298
  br label %for.cond, !dbg !10299, !llvm.loop !10300

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10302
  ret i64 %7, !dbg !10303
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @file_has_acl(i8* %name, %struct.stat* %sb) #0 !dbg !10304 {
entry:
  %name.addr = alloca i8*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  ret i32 0, !dbg !10335
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #0 !dbg !10336 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1544
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1544
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10363, metadata !DIExpression()), !dbg !10364
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10365, metadata !DIExpression()), !dbg !10366
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10367, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10369, metadata !DIExpression()), !dbg !10370
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10371
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10373
  br i1 %cmp, label %if.then, label %if.end, !dbg !10374

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10375

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10376
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10376
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10377
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10378
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10379
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10380
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10381, !ctir !1545
  store i8* %call1, i8** %name, align 8, !dbg !10382, !ctir !143
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10383
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10384, !ctir !10341
  %5 = load i64, i64* %st_ino, align 8, !dbg !10384, !ctir !196
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10385
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10386, !ctir !1545
  store i64 %5, i64* %st_ino2, align 8, !dbg !10387, !ctir !267
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10388
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10389, !ctir !10341
  %8 = load i64, i64* %st_dev, align 8, !dbg !10389, !ctir !194
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10390
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10391, !ctir !1545
  store i64 %8, i64* %st_dev3, align 8, !dbg !10392, !ctir !269
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10393, metadata !DIExpression()), !dbg !10395
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10396
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10397
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10397
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10398
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10398
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10395
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10399
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10401
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10402

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !10403
  unreachable, !dbg !10403

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10405
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10407
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10408
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10409

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10410
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10410
  call void @triple_free(i8* %18), !dbg !10412
  br label %if.end10, !dbg !10413

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10414
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #0 !dbg !10415 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1545
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10420, metadata !DIExpression()), !dbg !10421
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10426, metadata !DIExpression()), !dbg !10427
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10428
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10430
  br i1 %cmp, label %if.then, label %if.end, !dbg !10431

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10432
  br label %return, !dbg !10432

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10433
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10434, !ctir !1545
  store i8* %1, i8** %name, align 8, !dbg !10435, !ctir !143
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10436
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10437, !ctir !10341
  %3 = load i64, i64* %st_ino, align 8, !dbg !10437, !ctir !196
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10438, !ctir !1545
  store i64 %3, i64* %st_ino1, align 8, !dbg !10439, !ctir !267
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10440
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10441, !ctir !10341
  %5 = load i64, i64* %st_dev, align 8, !dbg !10441, !ctir !194
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10442, !ctir !1545
  store i64 %5, i64* %st_dev2, align 8, !dbg !10443, !ctir !269
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10444
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10445
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10446
  %tobool = icmp ne i8* %call, null, !dbg !10447
  %lnot = xor i1 %tobool, true, !dbg !10447
  %lnot3 = xor i1 %lnot, true, !dbg !10448
  store i1 %lnot3, i1* %retval, align 1, !dbg !10449
  br label %return, !dbg !10449

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10450
  ret i1 %8, !dbg !10450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #0 !dbg !10451 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10455, metadata !DIExpression()), !dbg !10456
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10459
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10460
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10461
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10461, !ctir !143
  store i8 %call, i8* %arrayidx, align 1, !dbg !10462
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10463
  %and = and i32 %2, 256, !dbg !10464
  %tobool = icmp ne i32 %and, 0, !dbg !10463
  %3 = zext i1 %tobool to i64, !dbg !10463
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10463
  %conv = trunc i32 %cond to i8, !dbg !10463
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10465
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10465, !ctir !143
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10466
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10467
  %and2 = and i32 %5, 128, !dbg !10468
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10467
  %6 = zext i1 %tobool3 to i64, !dbg !10467
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10467
  %conv5 = trunc i32 %cond4 to i8, !dbg !10467
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10469
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10469, !ctir !143
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10470
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10471
  %and7 = and i32 %8, 2048, !dbg !10472
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10472
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10471

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10473
  %and9 = and i32 %9, 64, !dbg !10474
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10473
  %10 = zext i1 %tobool10 to i64, !dbg !10473
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10473
  br label %cond.end, !dbg !10471

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10475
  %and12 = and i32 %11, 64, !dbg !10476
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10475
  %12 = zext i1 %tobool13 to i64, !dbg !10475
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10475
  br label %cond.end, !dbg !10471

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10471
  %conv16 = trunc i32 %cond15 to i8, !dbg !10477
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10478
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10478, !ctir !143
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10479
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10480
  %and18 = and i32 %14, 32, !dbg !10481
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10480
  %15 = zext i1 %tobool19 to i64, !dbg !10480
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10480
  %conv21 = trunc i32 %cond20 to i8, !dbg !10480
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10482
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10482, !ctir !143
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10483
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10484
  %and23 = and i32 %17, 16, !dbg !10485
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10484
  %18 = zext i1 %tobool24 to i64, !dbg !10484
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10484
  %conv26 = trunc i32 %cond25 to i8, !dbg !10484
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10486
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10486, !ctir !143
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10487
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10488
  %and28 = and i32 %20, 1024, !dbg !10489
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10489
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10488

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10490
  %and31 = and i32 %21, 8, !dbg !10491
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10490
  %22 = zext i1 %tobool32 to i64, !dbg !10490
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10490
  br label %cond.end38, !dbg !10488

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10492
  %and35 = and i32 %23, 8, !dbg !10493
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10492
  %24 = zext i1 %tobool36 to i64, !dbg !10492
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10492
  br label %cond.end38, !dbg !10488

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10488
  %conv40 = trunc i32 %cond39 to i8, !dbg !10494
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10495
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10495, !ctir !143
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10496
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10497
  %and42 = and i32 %26, 4, !dbg !10498
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10497
  %27 = zext i1 %tobool43 to i64, !dbg !10497
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10497
  %conv45 = trunc i32 %cond44 to i8, !dbg !10497
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10499
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10499, !ctir !143
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10500
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10501
  %and47 = and i32 %29, 2, !dbg !10502
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10501
  %30 = zext i1 %tobool48 to i64, !dbg !10501
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10501
  %conv50 = trunc i32 %cond49 to i8, !dbg !10501
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10503
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10503, !ctir !143
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10504
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10505
  %and52 = and i32 %32, 512, !dbg !10506
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10506
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10505

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10507
  %and55 = and i32 %33, 1, !dbg !10508
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10507
  %34 = zext i1 %tobool56 to i64, !dbg !10507
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10507
  br label %cond.end62, !dbg !10505

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10509
  %and59 = and i32 %35, 1, !dbg !10510
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10509
  %36 = zext i1 %tobool60 to i64, !dbg !10509
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10509
  br label %cond.end62, !dbg !10505

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10505
  %conv64 = trunc i32 %cond63 to i8, !dbg !10511
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10512
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10512, !ctir !143
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10513
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10514
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10514, !ctir !143
  store i8 32, i8* %arrayidx66, align 1, !dbg !10515
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10516
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10516, !ctir !143
  store i8 0, i8* %arrayidx67, align 1, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #0 !dbg !10519 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10522, metadata !DIExpression()), !dbg !10523
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10524
  %and = and i32 %0, 61440, !dbg !10524
  %cmp = icmp eq i32 %and, 32768, !dbg !10524
  br i1 %cmp, label %if.then, label %if.end, !dbg !10526

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10527
  br label %return, !dbg !10527

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10528
  %and1 = and i32 %1, 61440, !dbg !10528
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10528
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10530

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10531
  br label %return, !dbg !10531

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10532
  %and5 = and i32 %2, 61440, !dbg !10532
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10532
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10534

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10535
  br label %return, !dbg !10535

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10536
  %and9 = and i32 %3, 61440, !dbg !10536
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10536
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10538

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10539
  br label %return, !dbg !10539

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10540
  %and13 = and i32 %4, 61440, !dbg !10540
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10540
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10542

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10543
  br label %return, !dbg !10543

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10544
  %and17 = and i32 %5, 61440, !dbg !10544
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10544
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10546

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10547
  br label %return, !dbg !10547

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10548
  %and21 = and i32 %6, 61440, !dbg !10548
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10548
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10550

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10551
  br label %return, !dbg !10551

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10552
  br label %return, !dbg !10552

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10553
  ret i8 %7, !dbg !10553
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #0 !dbg !10554 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10580, metadata !DIExpression()), !dbg !10581
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10582, metadata !DIExpression()), !dbg !10583
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10584
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10585, !ctir !10558
  %1 = load i32, i32* %st_mode, align 8, !dbg !10585, !ctir !200
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10586
  call void @strmode(i32 %1, i8* %2), !dbg !10587
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10588
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10588, !ctir !10558
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10588, !ctir !200
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10588
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10588, !ctir !10558
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10588, !ctir !200
  %sub = sub i32 %4, %6, !dbg !10588
  %tobool = icmp ne i32 %sub, 0, !dbg !10588
  br i1 %tobool, label %if.then, label %if.else, !dbg !10590

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10591
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10591, !ctir !143
  store i8 70, i8* %arrayidx, align 1, !dbg !10592
  br label %if.end18, !dbg !10591

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10593
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10593, !ctir !10558
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10593, !ctir !200
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10593
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10593, !ctir !10558
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10593, !ctir !200
  %sub5 = sub i32 %9, %11, !dbg !10593
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10593
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10596

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10597
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10597, !ctir !143
  store i8 81, i8* %arrayidx8, align 1, !dbg !10598
  br label %if.end17, !dbg !10597

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10599
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10599, !ctir !10558
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10599, !ctir !200
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10599
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10599, !ctir !10558
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10599, !ctir !200
  %sub12 = sub i32 %14, %16, !dbg !10599
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10599
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10601

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10602
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10602, !ctir !143
  store i8 83, i8* %arrayidx15, align 1, !dbg !10603
  br label %if.end, !dbg !10602

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10604
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !10605 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10613, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10615, metadata !DIExpression()), !dbg !10616
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10617
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10618
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10619
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10620
  store i8* %call, i8** %p, align 8, !dbg !10616
  %3 = load i8*, i8** %p, align 8, !dbg !10621
  %cmp = icmp eq i8* %3, null, !dbg !10623
  br i1 %cmp, label %if.then, label %if.end, !dbg !10624

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !10625
  unreachable, !dbg !10625

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10626
  ret i8* %4, !dbg !10627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !10628 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !146
  %dirbaselen = alloca i64, align 8, !ctir !149
  %dirlen = alloca i64, align 8, !ctir !149
  %baselen = alloca i64, align 8, !ctir !149
  %sep = alloca i8, align 1, !ctir !144
  %p_concat = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10636, metadata !DIExpression()), !dbg !10637
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10638
  %call = call i8* @last_component(i8* %0) #16, !dbg !10639
  store i8* %call, i8** %dirbase, align 8, !dbg !10637
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10640, metadata !DIExpression()), !dbg !10641
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10642
  %call1 = call i64 @base_len(i8* %1) #16, !dbg !10643
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10641
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10644, metadata !DIExpression()), !dbg !10645
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10646
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10647
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10648
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10648
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10648
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10649
  %add = add i64 %sub.ptr.sub, %4, !dbg !10650
  store i64 %add, i64* %dirlen, align 8, !dbg !10645
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10651, metadata !DIExpression()), !dbg !10652
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10653
  %call2 = call i64 @strlen(i8* %5) #16, !dbg !10654
  store i64 %call2, i64* %baselen, align 8, !dbg !10652
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10655, metadata !DIExpression()), !dbg !10656
  store i8 0, i8* %sep, align 1, !dbg !10656
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10657
  %tobool = icmp ne i64 %6, 0, !dbg !10657
  br i1 %tobool, label %if.then, label %if.else, !dbg !10659

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10660
  %8 = load i64, i64* %dirlen, align 8, !dbg !10660
  %sub = sub i64 %8, 1, !dbg !10660
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10660, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10660
  %conv = sext i8 %9 to i32, !dbg !10660
  %cmp = icmp eq i32 %conv, 47, !dbg !10660
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10663

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10664
  %11 = load i8, i8* %10, align 1, !dbg !10664, !ctir !147
  %conv4 = sext i8 %11 to i32, !dbg !10664
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10664
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10665

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10666
  br label %if.end, !dbg !10667

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10668

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10669
  %13 = load i8, i8* %12, align 1, !dbg !10669, !ctir !147
  %conv8 = sext i8 %13 to i32, !dbg !10669
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10669
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10671

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10672
  br label %if.end12, !dbg !10674

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10675, metadata !DIExpression()), !dbg !10676
  %14 = load i64, i64* %dirlen, align 8, !dbg !10677
  %15 = load i8, i8* %sep, align 1, !dbg !10678
  %conv14 = sext i8 %15 to i32, !dbg !10678
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10679
  %conv16 = zext i1 %cmp15 to i32, !dbg !10679
  %conv17 = sext i32 %conv16 to i64, !dbg !10680
  %add18 = add i64 %14, %conv17, !dbg !10681
  %16 = load i64, i64* %baselen, align 8, !dbg !10682
  %add19 = add i64 %add18, %16, !dbg !10683
  %add20 = add i64 %add19, 1, !dbg !10684
  %call21 = call noalias i8* @malloc(i64 %add20) #13, !dbg !10685
  store i8* %call21, i8** %p_concat, align 8, !dbg !10676
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10686, metadata !DIExpression()), !dbg !10687
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10688
  %cmp22 = icmp eq i8* %17, null, !dbg !10690
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10691

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10692
  br label %return, !dbg !10692

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10693
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10694
  %20 = load i64, i64* %dirlen, align 8, !dbg !10695
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #13, !dbg !10696
  store i8* %call26, i8** %p, align 8, !dbg !10697
  %21 = load i8, i8* %sep, align 1, !dbg !10698
  %22 = load i8*, i8** %p, align 8, !dbg !10699
  store i8 %21, i8* %22, align 1, !dbg !10700, !ctir !144
  %23 = load i8, i8* %sep, align 1, !dbg !10701
  %conv27 = sext i8 %23 to i32, !dbg !10701
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10702
  %conv29 = zext i1 %cmp28 to i32, !dbg !10702
  %24 = load i8*, i8** %p, align 8, !dbg !10703
  %idx.ext = sext i32 %conv29 to i64, !dbg !10703
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10703, !ctir !144
  store i8* %add.ptr, i8** %p, align 8, !dbg !10703
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10704
  %tobool30 = icmp ne i8** %25, null, !dbg !10704
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10706

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10707
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10708
  store i8* %26, i8** %27, align 8, !dbg !10709, !ctir !143
  br label %if.end32, !dbg !10710

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10711
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10712
  %30 = load i64, i64* %baselen, align 8, !dbg !10713
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #13, !dbg !10714
  store i8* %call33, i8** %p, align 8, !dbg !10715
  %31 = load i8*, i8** %p, align 8, !dbg !10716
  store i8 0, i8* %31, align 1, !dbg !10717, !ctir !144
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10718
  store i8* %32, i8** %retval, align 8, !dbg !10719
  br label %return, !dbg !10719

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !10720
  ret i8* %33, !dbg !10720
}

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @filevercmp(i8* %s1, i8* %s2) #9 !dbg !10721 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %s1_pos = alloca i8*, align 8, !ctir !146
  %s2_pos = alloca i8*, align 8, !ctir !146
  %s1_suffix = alloca i8*, align 8, !ctir !146
  %s2_suffix = alloca i8*, align 8, !ctir !146
  %s1_len = alloca i64, align 8, !ctir !149
  %s2_len = alloca i64, align 8, !ctir !149
  %result = alloca i32, align 4, !ctir !27
  %simple_cmp = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !10723, metadata !DIExpression()), !dbg !10724
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !10725, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.declare(metadata i8** %s1_pos, metadata !10727, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.declare(metadata i8** %s2_pos, metadata !10729, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.declare(metadata i8** %s1_suffix, metadata !10731, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.declare(metadata i8** %s2_suffix, metadata !10733, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.declare(metadata i64* %s1_len, metadata !10735, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.declare(metadata i64* %s2_len, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10739, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata i32* %simple_cmp, metadata !10741, metadata !DIExpression()), !dbg !10742
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !10743
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !10744
  %call = call i32 @strcmp(i8* %0, i8* %1) #16, !dbg !10745
  store i32 %call, i32* %simple_cmp, align 4, !dbg !10742
  %2 = load i32, i32* %simple_cmp, align 4, !dbg !10746
  %cmp = icmp eq i32 %2, 0, !dbg !10748
  br i1 %cmp, label %if.then, label %if.end, !dbg !10749

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10750
  br label %return, !dbg !10750

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s1.addr, align 8, !dbg !10751
  %4 = load i8, i8* %3, align 1, !dbg !10753, !ctir !147
  %tobool = icmp ne i8 %4, 0, !dbg !10753
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !10754

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10755
  br label %return, !dbg !10755

if.end2:                                          ; preds = %if.end
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !10756
  %6 = load i8, i8* %5, align 1, !dbg !10758, !ctir !147
  %tobool3 = icmp ne i8 %6, 0, !dbg !10758
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !10759

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !10760
  br label %return, !dbg !10760

if.end5:                                          ; preds = %if.end2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !10761
  %call6 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.296, i64 0, i64 0), i8* %7) #16, !dbg !10763
  %cmp7 = icmp eq i32 0, %call6, !dbg !10764
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10765

if.then8:                                         ; preds = %if.end5
  store i32 -1, i32* %retval, align 4, !dbg !10766
  br label %return, !dbg !10766

if.end9:                                          ; preds = %if.end5
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !10767
  %call10 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.296, i64 0, i64 0), i8* %8) #16, !dbg !10769
  %cmp11 = icmp eq i32 0, %call10, !dbg !10770
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !10771

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !10772
  br label %return, !dbg !10772

if.end13:                                         ; preds = %if.end9
  %9 = load i8*, i8** %s1.addr, align 8, !dbg !10773
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.297, i64 0, i64 0), i8* %9) #16, !dbg !10775
  %cmp15 = icmp eq i32 0, %call14, !dbg !10776
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !10777

if.then16:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !10778
  br label %return, !dbg !10778

if.end17:                                         ; preds = %if.end13
  %10 = load i8*, i8** %s2.addr, align 8, !dbg !10779
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.297, i64 0, i64 0), i8* %10) #16, !dbg !10781
  %cmp19 = icmp eq i32 0, %call18, !dbg !10782
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !10783

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !10784
  br label %return, !dbg !10784

if.end21:                                         ; preds = %if.end17
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !10785
  %12 = load i8, i8* %11, align 1, !dbg !10787, !ctir !147
  %conv = sext i8 %12 to i32, !dbg !10787
  %cmp22 = icmp eq i32 %conv, 46, !dbg !10788
  br i1 %cmp22, label %land.lhs.true, label %if.end28, !dbg !10789

land.lhs.true:                                    ; preds = %if.end21
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !10790
  %14 = load i8, i8* %13, align 1, !dbg !10791, !ctir !147
  %conv24 = sext i8 %14 to i32, !dbg !10791
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !10792
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !10793

if.then27:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !10794
  br label %return, !dbg !10794

if.end28:                                         ; preds = %land.lhs.true, %if.end21
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !10795
  %16 = load i8, i8* %15, align 1, !dbg !10797, !ctir !147
  %conv29 = sext i8 %16 to i32, !dbg !10797
  %cmp30 = icmp ne i32 %conv29, 46, !dbg !10798
  br i1 %cmp30, label %land.lhs.true32, label %if.end37, !dbg !10799

land.lhs.true32:                                  ; preds = %if.end28
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !10800
  %18 = load i8, i8* %17, align 1, !dbg !10801, !ctir !147
  %conv33 = sext i8 %18 to i32, !dbg !10801
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !10802
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !10803

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %retval, align 4, !dbg !10804
  br label %return, !dbg !10804

if.end37:                                         ; preds = %land.lhs.true32, %if.end28
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !10805
  %20 = load i8, i8* %19, align 1, !dbg !10807, !ctir !147
  %conv38 = sext i8 %20 to i32, !dbg !10807
  %cmp39 = icmp eq i32 %conv38, 46, !dbg !10808
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !10809

land.lhs.true41:                                  ; preds = %if.end37
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !10810
  %22 = load i8, i8* %21, align 1, !dbg !10811, !ctir !147
  %conv42 = sext i8 %22 to i32, !dbg !10811
  %cmp43 = icmp eq i32 %conv42, 46, !dbg !10812
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !10813

if.then45:                                        ; preds = %land.lhs.true41
  %23 = load i8*, i8** %s1.addr, align 8, !dbg !10814
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !10814, !ctir !147
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !10814
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !10816
  %incdec.ptr46 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !10816, !ctir !147
  store i8* %incdec.ptr46, i8** %s2.addr, align 8, !dbg !10816
  br label %if.end47, !dbg !10817

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.end37
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !10818
  store i8* %25, i8** %s1_pos, align 8, !dbg !10819
  %26 = load i8*, i8** %s2.addr, align 8, !dbg !10820
  store i8* %26, i8** %s2_pos, align 8, !dbg !10821
  %call48 = call i8* @match_suffix(i8** %s1_pos), !dbg !10822
  store i8* %call48, i8** %s1_suffix, align 8, !dbg !10823
  %call49 = call i8* @match_suffix(i8** %s2_pos), !dbg !10824
  store i8* %call49, i8** %s2_suffix, align 8, !dbg !10825
  %27 = load i8*, i8** %s1_suffix, align 8, !dbg !10826
  %tobool50 = icmp ne i8* %27, null, !dbg !10826
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !10826

cond.true:                                        ; preds = %if.end47
  %28 = load i8*, i8** %s1_suffix, align 8, !dbg !10827
  br label %cond.end, !dbg !10826

cond.false:                                       ; preds = %if.end47
  %29 = load i8*, i8** %s1_pos, align 8, !dbg !10828
  br label %cond.end, !dbg !10826

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %28, %cond.true ], [ %29, %cond.false ], !dbg !10826
  %30 = load i8*, i8** %s1.addr, align 8, !dbg !10829
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64, !dbg !10830
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !10830
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10830
  store i64 %sub.ptr.sub, i64* %s1_len, align 8, !dbg !10831
  %31 = load i8*, i8** %s2_suffix, align 8, !dbg !10832
  %tobool51 = icmp ne i8* %31, null, !dbg !10832
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !10832

cond.true52:                                      ; preds = %cond.end
  %32 = load i8*, i8** %s2_suffix, align 8, !dbg !10833
  br label %cond.end54, !dbg !10832

cond.false53:                                     ; preds = %cond.end
  %33 = load i8*, i8** %s2_pos, align 8, !dbg !10834
  br label %cond.end54, !dbg !10832

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %32, %cond.true52 ], [ %33, %cond.false53 ], !dbg !10832
  %34 = load i8*, i8** %s2.addr, align 8, !dbg !10835
  %sub.ptr.lhs.cast56 = ptrtoint i8* %cond55 to i64, !dbg !10836
  %sub.ptr.rhs.cast57 = ptrtoint i8* %34 to i64, !dbg !10836
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57, !dbg !10836
  store i64 %sub.ptr.sub58, i64* %s2_len, align 8, !dbg !10837
  %35 = load i8*, i8** %s1_suffix, align 8, !dbg !10838
  %tobool59 = icmp ne i8* %35, null, !dbg !10838
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false, !dbg !10840

lor.lhs.false:                                    ; preds = %cond.end54
  %36 = load i8*, i8** %s2_suffix, align 8, !dbg !10841
  %tobool60 = icmp ne i8* %36, null, !dbg !10841
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !10842

land.lhs.true61:                                  ; preds = %lor.lhs.false, %cond.end54
  %37 = load i64, i64* %s1_len, align 8, !dbg !10843
  %38 = load i64, i64* %s2_len, align 8, !dbg !10844
  %cmp62 = icmp eq i64 %37, %38, !dbg !10845
  br i1 %cmp62, label %land.lhs.true64, label %if.end75, !dbg !10846

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !10847
  %40 = load i8*, i8** %s2.addr, align 8, !dbg !10848
  %41 = load i64, i64* %s1_len, align 8, !dbg !10849
  %call65 = call i32 @strncmp(i8* %39, i8* %40, i64 %41) #16, !dbg !10850
  %cmp66 = icmp eq i32 0, %call65, !dbg !10851
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !10852

if.then68:                                        ; preds = %land.lhs.true64
  %42 = load i8*, i8** %s1_pos, align 8, !dbg !10853
  %43 = load i8*, i8** %s1.addr, align 8, !dbg !10855
  %sub.ptr.lhs.cast69 = ptrtoint i8* %42 to i64, !dbg !10856
  %sub.ptr.rhs.cast70 = ptrtoint i8* %43 to i64, !dbg !10856
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !10856
  store i64 %sub.ptr.sub71, i64* %s1_len, align 8, !dbg !10857
  %44 = load i8*, i8** %s2_pos, align 8, !dbg !10858
  %45 = load i8*, i8** %s2.addr, align 8, !dbg !10859
  %sub.ptr.lhs.cast72 = ptrtoint i8* %44 to i64, !dbg !10860
  %sub.ptr.rhs.cast73 = ptrtoint i8* %45 to i64, !dbg !10860
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !10860
  store i64 %sub.ptr.sub74, i64* %s2_len, align 8, !dbg !10861
  br label %if.end75, !dbg !10862

if.end75:                                         ; preds = %if.then68, %land.lhs.true64, %land.lhs.true61, %lor.lhs.false
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !10863
  %47 = load i64, i64* %s1_len, align 8, !dbg !10864
  %48 = load i8*, i8** %s2.addr, align 8, !dbg !10865
  %49 = load i64, i64* %s2_len, align 8, !dbg !10866
  %call76 = call i32 @verrevcmp(i8* %46, i64 %47, i8* %48, i64 %49) #16, !dbg !10867
  store i32 %call76, i32* %result, align 4, !dbg !10868
  %50 = load i32, i32* %result, align 4, !dbg !10869
  %cmp77 = icmp eq i32 %50, 0, !dbg !10870
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !10869

cond.true79:                                      ; preds = %if.end75
  %51 = load i32, i32* %simple_cmp, align 4, !dbg !10871
  br label %cond.end81, !dbg !10869

cond.false80:                                     ; preds = %if.end75
  %52 = load i32, i32* %result, align 4, !dbg !10872
  br label %cond.end81, !dbg !10869

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ %51, %cond.true79 ], [ %52, %cond.false80 ], !dbg !10869
  store i32 %cond82, i32* %retval, align 4, !dbg !10873
  br label %return, !dbg !10873

return:                                           ; preds = %cond.end81, %if.then36, %if.then27, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !10874
  ret i32 %53, !dbg !10874
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @match_suffix(i8** %str) #0 !dbg !10875 {
entry:
  %str.addr = alloca i8**, align 8
  %match = alloca i8*, align 8, !ctir !146
  %read_alpha = alloca i8, align 1, !ctir !141
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata i8** %match, metadata !10880, metadata !DIExpression()), !dbg !10881
  store i8* null, i8** %match, align 8, !dbg !10881
  call void @llvm.dbg.declare(metadata i8* %read_alpha, metadata !10882, metadata !DIExpression()), !dbg !10883
  store i8 0, i8* %read_alpha, align 1, !dbg !10883
  br label %while.cond, !dbg !10884

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !10885
  %1 = load i8*, i8** %0, align 8, !dbg !10886, !ctir !146
  %2 = load i8, i8* %1, align 1, !dbg !10887, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !10884
  br i1 %tobool, label %while.body, label %while.end, !dbg !10884

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %read_alpha, align 1, !dbg !10888
  %tobool1 = trunc i8 %3 to i1, !dbg !10888
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10891

if.then:                                          ; preds = %while.body
  store i8 0, i8* %read_alpha, align 1, !dbg !10892
  %4 = load i8**, i8*** %str.addr, align 8, !dbg !10894
  %5 = load i8*, i8** %4, align 8, !dbg !10896, !ctir !146
  %6 = load i8, i8* %5, align 1, !dbg !10897, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !10897
  %call = call zeroext i1 @c_isalpha(i32 %conv), !dbg !10898
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !10899

land.lhs.true:                                    ; preds = %if.then
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !10900
  %8 = load i8*, i8** %7, align 8, !dbg !10901, !ctir !146
  %9 = load i8, i8* %8, align 1, !dbg !10902, !ctir !147
  %conv2 = sext i8 %9 to i32, !dbg !10902
  %cmp = icmp ne i32 126, %conv2, !dbg !10903
  br i1 %cmp, label %if.then4, label %if.end, !dbg !10904

if.then4:                                         ; preds = %land.lhs.true
  store i8* null, i8** %match, align 8, !dbg !10905
  br label %if.end, !dbg !10906

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end22, !dbg !10907

if.else:                                          ; preds = %while.body
  %10 = load i8**, i8*** %str.addr, align 8, !dbg !10908
  %11 = load i8*, i8** %10, align 8, !dbg !10910, !ctir !146
  %12 = load i8, i8* %11, align 1, !dbg !10911, !ctir !147
  %conv5 = sext i8 %12 to i32, !dbg !10911
  %cmp6 = icmp eq i32 46, %conv5, !dbg !10912
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !10913

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %read_alpha, align 1, !dbg !10914
  %13 = load i8*, i8** %match, align 8, !dbg !10916
  %tobool9 = icmp ne i8* %13, null, !dbg !10916
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10918

if.then10:                                        ; preds = %if.then8
  %14 = load i8**, i8*** %str.addr, align 8, !dbg !10919
  %15 = load i8*, i8** %14, align 8, !dbg !10920, !ctir !146
  store i8* %15, i8** %match, align 8, !dbg !10921
  br label %if.end11, !dbg !10922

if.end11:                                         ; preds = %if.then10, %if.then8
  br label %if.end21, !dbg !10923

if.else12:                                        ; preds = %if.else
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !10924
  %17 = load i8*, i8** %16, align 8, !dbg !10926, !ctir !146
  %18 = load i8, i8* %17, align 1, !dbg !10927, !ctir !147
  %conv13 = sext i8 %18 to i32, !dbg !10927
  %call14 = call zeroext i1 @c_isalnum(i32 %conv13), !dbg !10928
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !10929

land.lhs.true15:                                  ; preds = %if.else12
  %19 = load i8**, i8*** %str.addr, align 8, !dbg !10930
  %20 = load i8*, i8** %19, align 8, !dbg !10931, !ctir !146
  %21 = load i8, i8* %20, align 1, !dbg !10932, !ctir !147
  %conv16 = sext i8 %21 to i32, !dbg !10932
  %cmp17 = icmp ne i32 126, %conv16, !dbg !10933
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10934

if.then19:                                        ; preds = %land.lhs.true15
  store i8* null, i8** %match, align 8, !dbg !10935
  br label %if.end20, !dbg !10936

if.end20:                                         ; preds = %if.then19, %land.lhs.true15, %if.else12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !10937
  %23 = load i8*, i8** %22, align 8, !dbg !10938, !ctir !146
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !10938, !ctir !147
  store i8* %incdec.ptr, i8** %22, align 8, !dbg !10938, !ctir !146
  br label %while.cond, !dbg !10884, !llvm.loop !10939

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %match, align 8, !dbg !10941
  ret i8* %24, !dbg !10942
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @verrevcmp(i8* %s1, i64 %s1_len, i8* %s2, i64 %s2_len) #9 !dbg !10943 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1_len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2_len.addr = alloca i64, align 8
  %s1_pos = alloca i64, align 8, !ctir !149
  %s2_pos = alloca i64, align 8, !ctir !149
  %first_diff = alloca i32, align 4, !ctir !27
  %s1_c = alloca i32, align 4, !ctir !27
  %s2_c = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !10946, metadata !DIExpression()), !dbg !10947
  store i64 %s1_len, i64* %s1_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s1_len.addr, metadata !10948, metadata !DIExpression()), !dbg !10949
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !10950, metadata !DIExpression()), !dbg !10951
  store i64 %s2_len, i64* %s2_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s2_len.addr, metadata !10952, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.declare(metadata i64* %s1_pos, metadata !10954, metadata !DIExpression()), !dbg !10955
  store i64 0, i64* %s1_pos, align 8, !dbg !10955
  call void @llvm.dbg.declare(metadata i64* %s2_pos, metadata !10956, metadata !DIExpression()), !dbg !10957
  store i64 0, i64* %s2_pos, align 8, !dbg !10957
  br label %while.cond, !dbg !10958

while.cond:                                       ; preds = %if.end77, %entry
  %0 = load i64, i64* %s1_pos, align 8, !dbg !10959
  %1 = load i64, i64* %s1_len.addr, align 8, !dbg !10960
  %cmp = icmp ult i64 %0, %1, !dbg !10961
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10962

lor.rhs:                                          ; preds = %while.cond
  %2 = load i64, i64* %s2_pos, align 8, !dbg !10963
  %3 = load i64, i64* %s2_len.addr, align 8, !dbg !10964
  %cmp1 = icmp ult i64 %2, %3, !dbg !10965
  br label %lor.end, !dbg !10962

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end78, !dbg !10958

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %first_diff, metadata !10966, metadata !DIExpression()), !dbg !10968
  store i32 0, i32* %first_diff, align 4, !dbg !10968
  br label %while.cond2, !dbg !10969

while.cond2:                                      ; preds = %if.end, %while.body
  %5 = load i64, i64* %s1_pos, align 8, !dbg !10970
  %6 = load i64, i64* %s1_len.addr, align 8, !dbg !10971
  %cmp3 = icmp ult i64 %5, %6, !dbg !10972
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs4, !dbg !10973

land.lhs.true:                                    ; preds = %while.cond2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !10974
  %8 = load i64, i64* %s1_pos, align 8, !dbg !10975
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !10974, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10974
  %conv = sext i8 %9 to i32, !dbg !10974
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !10976
  br i1 %call, label %lor.rhs4, label %lor.end10, !dbg !10977

lor.rhs4:                                         ; preds = %land.lhs.true, %while.cond2
  %10 = load i64, i64* %s2_pos, align 8, !dbg !10978
  %11 = load i64, i64* %s2_len.addr, align 8, !dbg !10979
  %cmp5 = icmp ult i64 %10, %11, !dbg !10980
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !10981

land.rhs:                                         ; preds = %lor.rhs4
  %12 = load i8*, i8** %s2.addr, align 8, !dbg !10982
  %13 = load i64, i64* %s2_pos, align 8, !dbg !10983
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10982, !ctir !146
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !10982
  %conv8 = sext i8 %14 to i32, !dbg !10982
  %call9 = call zeroext i1 @c_isdigit(i32 %conv8), !dbg !10984
  %lnot = xor i1 %call9, true, !dbg !10985
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs4
  %15 = phi i1 [ false, %lor.rhs4 ], [ %lnot, %land.rhs ], !dbg !10986
  br label %lor.end10, !dbg !10977

lor.end10:                                        ; preds = %land.end, %land.lhs.true
  %16 = phi i1 [ true, %land.lhs.true ], [ %15, %land.end ]
  br i1 %16, label %while.body11, label %while.end, !dbg !10969

while.body11:                                     ; preds = %lor.end10
  call void @llvm.dbg.declare(metadata i32* %s1_c, metadata !10987, metadata !DIExpression()), !dbg !10989
  %17 = load i64, i64* %s1_pos, align 8, !dbg !10990
  %18 = load i64, i64* %s1_len.addr, align 8, !dbg !10991
  %cmp12 = icmp eq i64 %17, %18, !dbg !10992
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !10993

cond.true:                                        ; preds = %while.body11
  br label %cond.end, !dbg !10993

cond.false:                                       ; preds = %while.body11
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !10994
  %20 = load i64, i64* %s1_pos, align 8, !dbg !10995
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !10994, !ctir !146
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !10994
  %call15 = call i32 @order(i8 zeroext %21), !dbg !10996
  br label %cond.end, !dbg !10993

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call15, %cond.false ], !dbg !10993
  store i32 %cond, i32* %s1_c, align 4, !dbg !10989
  call void @llvm.dbg.declare(metadata i32* %s2_c, metadata !10997, metadata !DIExpression()), !dbg !10998
  %22 = load i64, i64* %s2_pos, align 8, !dbg !10999
  %23 = load i64, i64* %s2_len.addr, align 8, !dbg !11000
  %cmp16 = icmp eq i64 %22, %23, !dbg !11001
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !11002

cond.true18:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !11002

cond.false19:                                     ; preds = %cond.end
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11003
  %25 = load i64, i64* %s2_pos, align 8, !dbg !11004
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !11003, !ctir !146
  %26 = load i8, i8* %arrayidx20, align 1, !dbg !11003
  %call21 = call i32 @order(i8 zeroext %26), !dbg !11005
  br label %cond.end22, !dbg !11002

cond.end22:                                       ; preds = %cond.false19, %cond.true18
  %cond23 = phi i32 [ 0, %cond.true18 ], [ %call21, %cond.false19 ], !dbg !11002
  store i32 %cond23, i32* %s2_c, align 4, !dbg !10998
  %27 = load i32, i32* %s1_c, align 4, !dbg !11006
  %28 = load i32, i32* %s2_c, align 4, !dbg !11008
  %cmp24 = icmp ne i32 %27, %28, !dbg !11009
  br i1 %cmp24, label %if.then, label %if.end, !dbg !11010

if.then:                                          ; preds = %cond.end22
  %29 = load i32, i32* %s1_c, align 4, !dbg !11011
  %30 = load i32, i32* %s2_c, align 4, !dbg !11012
  %sub = sub nsw i32 %29, %30, !dbg !11013
  store i32 %sub, i32* %retval, align 4, !dbg !11014
  br label %return, !dbg !11014

if.end:                                           ; preds = %cond.end22
  %31 = load i64, i64* %s1_pos, align 8, !dbg !11015
  %inc = add i64 %31, 1, !dbg !11015
  store i64 %inc, i64* %s1_pos, align 8, !dbg !11015
  %32 = load i64, i64* %s2_pos, align 8, !dbg !11016
  %inc26 = add i64 %32, 1, !dbg !11016
  store i64 %inc26, i64* %s2_pos, align 8, !dbg !11016
  br label %while.cond2, !dbg !10969, !llvm.loop !11017

while.end:                                        ; preds = %lor.end10
  br label %while.cond27, !dbg !11019

while.cond27:                                     ; preds = %while.body32, %while.end
  %33 = load i8*, i8** %s1.addr, align 8, !dbg !11020
  %34 = load i64, i64* %s1_pos, align 8, !dbg !11021
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11020, !ctir !146
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !11020
  %conv29 = sext i8 %35 to i32, !dbg !11020
  %cmp30 = icmp eq i32 %conv29, 48, !dbg !11022
  br i1 %cmp30, label %while.body32, label %while.end34, !dbg !11019

while.body32:                                     ; preds = %while.cond27
  %36 = load i64, i64* %s1_pos, align 8, !dbg !11023
  %inc33 = add i64 %36, 1, !dbg !11023
  store i64 %inc33, i64* %s1_pos, align 8, !dbg !11023
  br label %while.cond27, !dbg !11019, !llvm.loop !11024

while.end34:                                      ; preds = %while.cond27
  br label %while.cond35, !dbg !11025

while.cond35:                                     ; preds = %while.body40, %while.end34
  %37 = load i8*, i8** %s2.addr, align 8, !dbg !11026
  %38 = load i64, i64* %s2_pos, align 8, !dbg !11027
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !11026, !ctir !146
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !11026
  %conv37 = sext i8 %39 to i32, !dbg !11026
  %cmp38 = icmp eq i32 %conv37, 48, !dbg !11028
  br i1 %cmp38, label %while.body40, label %while.end42, !dbg !11025

while.body40:                                     ; preds = %while.cond35
  %40 = load i64, i64* %s2_pos, align 8, !dbg !11029
  %inc41 = add i64 %40, 1, !dbg !11029
  store i64 %inc41, i64* %s2_pos, align 8, !dbg !11029
  br label %while.cond35, !dbg !11025, !llvm.loop !11030

while.end42:                                      ; preds = %while.cond35
  br label %while.cond43, !dbg !11031

while.cond43:                                     ; preds = %if.end61, %while.end42
  %41 = load i8*, i8** %s1.addr, align 8, !dbg !11032
  %42 = load i64, i64* %s1_pos, align 8, !dbg !11033
  %arrayidx44 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !11032, !ctir !146
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !11032
  %conv45 = sext i8 %43 to i32, !dbg !11032
  %call46 = call zeroext i1 @c_isdigit(i32 %conv45), !dbg !11034
  br i1 %call46, label %land.rhs48, label %land.end53, !dbg !11035

land.rhs48:                                       ; preds = %while.cond43
  %44 = load i8*, i8** %s2.addr, align 8, !dbg !11036
  %45 = load i64, i64* %s2_pos, align 8, !dbg !11037
  %arrayidx49 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !11036, !ctir !146
  %46 = load i8, i8* %arrayidx49, align 1, !dbg !11036
  %conv50 = sext i8 %46 to i32, !dbg !11036
  %call51 = call zeroext i1 @c_isdigit(i32 %conv50), !dbg !11038
  br label %land.end53

land.end53:                                       ; preds = %land.rhs48, %while.cond43
  %47 = phi i1 [ false, %while.cond43 ], [ %call51, %land.rhs48 ], !dbg !10986
  br i1 %47, label %while.body54, label %while.end64, !dbg !11031

while.body54:                                     ; preds = %land.end53
  %48 = load i32, i32* %first_diff, align 4, !dbg !11039
  %tobool = icmp ne i32 %48, 0, !dbg !11039
  br i1 %tobool, label %if.end61, label %if.then55, !dbg !11042

if.then55:                                        ; preds = %while.body54
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !11043
  %50 = load i64, i64* %s1_pos, align 8, !dbg !11044
  %arrayidx56 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !11043, !ctir !146
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !11043
  %conv57 = sext i8 %51 to i32, !dbg !11043
  %52 = load i8*, i8** %s2.addr, align 8, !dbg !11045
  %53 = load i64, i64* %s2_pos, align 8, !dbg !11046
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !11045, !ctir !146
  %54 = load i8, i8* %arrayidx58, align 1, !dbg !11045
  %conv59 = sext i8 %54 to i32, !dbg !11045
  %sub60 = sub nsw i32 %conv57, %conv59, !dbg !11047
  store i32 %sub60, i32* %first_diff, align 4, !dbg !11048
  br label %if.end61, !dbg !11049

if.end61:                                         ; preds = %if.then55, %while.body54
  %55 = load i64, i64* %s1_pos, align 8, !dbg !11050
  %inc62 = add i64 %55, 1, !dbg !11050
  store i64 %inc62, i64* %s1_pos, align 8, !dbg !11050
  %56 = load i64, i64* %s2_pos, align 8, !dbg !11051
  %inc63 = add i64 %56, 1, !dbg !11051
  store i64 %inc63, i64* %s2_pos, align 8, !dbg !11051
  br label %while.cond43, !dbg !11031, !llvm.loop !11052

while.end64:                                      ; preds = %land.end53
  %57 = load i8*, i8** %s1.addr, align 8, !dbg !11054
  %58 = load i64, i64* %s1_pos, align 8, !dbg !11056
  %arrayidx65 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11054, !ctir !146
  %59 = load i8, i8* %arrayidx65, align 1, !dbg !11054
  %conv66 = sext i8 %59 to i32, !dbg !11054
  %call67 = call zeroext i1 @c_isdigit(i32 %conv66), !dbg !11057
  br i1 %call67, label %if.then68, label %if.end69, !dbg !11058

if.then68:                                        ; preds = %while.end64
  store i32 1, i32* %retval, align 4, !dbg !11059
  br label %return, !dbg !11059

if.end69:                                         ; preds = %while.end64
  %60 = load i8*, i8** %s2.addr, align 8, !dbg !11060
  %61 = load i64, i64* %s2_pos, align 8, !dbg !11062
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !11060, !ctir !146
  %62 = load i8, i8* %arrayidx70, align 1, !dbg !11060
  %conv71 = sext i8 %62 to i32, !dbg !11060
  %call72 = call zeroext i1 @c_isdigit(i32 %conv71), !dbg !11063
  br i1 %call72, label %if.then73, label %if.end74, !dbg !11064

if.then73:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !11065
  br label %return, !dbg !11065

if.end74:                                         ; preds = %if.end69
  %63 = load i32, i32* %first_diff, align 4, !dbg !11066
  %tobool75 = icmp ne i32 %63, 0, !dbg !11066
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11068

if.then76:                                        ; preds = %if.end74
  %64 = load i32, i32* %first_diff, align 4, !dbg !11069
  store i32 %64, i32* %retval, align 4, !dbg !11070
  br label %return, !dbg !11070

if.end77:                                         ; preds = %if.end74
  br label %while.cond, !dbg !10958, !llvm.loop !11071

while.end78:                                      ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !11073
  br label %return, !dbg !11073

return:                                           ; preds = %while.end78, %if.then76, %if.then73, %if.then68, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11074
  ret i32 %65, !dbg !11074
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @order(i8 zeroext %c) #0 !dbg !11075 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  %0 = load i8, i8* %c.addr, align 1, !dbg !11080
  %conv = zext i8 %0 to i32, !dbg !11080
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11082
  br i1 %call, label %if.then, label %if.else, !dbg !11083

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11084
  br label %return, !dbg !11084

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !11085
  %conv1 = zext i8 %1 to i32, !dbg !11085
  %call2 = call zeroext i1 @c_isalpha(i32 %conv1), !dbg !11087
  br i1 %call2, label %if.then3, label %if.else5, !dbg !11088

if.then3:                                         ; preds = %if.else
  %2 = load i8, i8* %c.addr, align 1, !dbg !11089
  %conv4 = zext i8 %2 to i32, !dbg !11089
  store i32 %conv4, i32* %retval, align 4, !dbg !11090
  br label %return, !dbg !11090

if.else5:                                         ; preds = %if.else
  %3 = load i8, i8* %c.addr, align 1, !dbg !11091
  %conv6 = zext i8 %3 to i32, !dbg !11091
  %cmp = icmp eq i32 %conv6, 126, !dbg !11093
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !11094

if.then8:                                         ; preds = %if.else5
  store i32 -1, i32* %retval, align 4, !dbg !11095
  br label %return, !dbg !11095

if.else9:                                         ; preds = %if.else5
  %4 = load i8, i8* %c.addr, align 1, !dbg !11096
  %conv10 = zext i8 %4 to i32, !dbg !11097
  %add = add nsw i32 %conv10, 255, !dbg !11098
  %add11 = add nsw i32 %add, 1, !dbg !11099
  store i32 %add11, i32* %retval, align 4, !dbg !11100
  br label %return, !dbg !11100

return:                                           ; preds = %if.else9, %if.then8, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11101
  ret i32 %5, !dbg !11101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.dev_ino* nonnull %ts) #0 !dbg !11102 {
entry:
  %ts.addr = alloca %struct.dev_ino*, align 8
  store %struct.dev_ino* %ts, %struct.dev_ino** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ts.addr, metadata !11111, metadata !DIExpression()), !dbg !11112
  %0 = load %struct.dev_ino*, %struct.dev_ino** %ts.addr, align 8, !dbg !11113
  %call = call i32 @clock_gettime(i32 0, %struct.dev_ino* %0) #13, !dbg !11114
  ret void, !dbg !11115
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.dev_ino*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #0 !dbg !11116 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !11119, metadata !DIExpression()), !dbg !11120
  call void @gettime(%struct.dev_ino* %retval), !dbg !11121
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !11122
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !11122
  ret { i64, i64 } %1, !dbg !11122
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #0 !dbg !11123 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !11125, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !11127, metadata !DIExpression()), !dbg !11128
  store i8 1, i8* %hard, align 1, !dbg !11128
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11129, metadata !DIExpression()), !dbg !11130
  %0 = load i32, i32* %category.addr, align 4, !dbg !11131
  %call = call i8* @setlocale(i32 %0, i8* null) #13, !dbg !11132
  store i8* %call, i8** %p, align 8, !dbg !11130
  %1 = load i8*, i8** %p, align 8, !dbg !11133
  %tobool = icmp ne i8* %1, null, !dbg !11133
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11135

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !11136
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.302, i64 0, i64 0)) #16, !dbg !11141
  %cmp = icmp eq i32 %call1, 0, !dbg !11142
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !11143

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !11144
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i64 0, i64 0)) #16, !dbg !11145
  %cmp3 = icmp eq i32 %call2, 0, !dbg !11146
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11147

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !11148
  br label %if.end, !dbg !11149

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !11150

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !11151
  %tobool6 = trunc i8 %4 to i1, !dbg !11151
  ret i1 %tobool6, !dbg !11152
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11157, metadata !DIExpression()), !dbg !11158
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11159
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11160, !ctir !1186
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11160, !ctir !149
  ret i64 %1, !dbg !11161
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11162 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11163, metadata !DIExpression()), !dbg !11164
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11165
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11166, !ctir !1186
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11166, !ctir !149
  ret i64 %1, !dbg !11167
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11168 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11169, metadata !DIExpression()), !dbg !11170
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11171
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11172, !ctir !1186
  %1 = load i64, i64* %n_entries, align 8, !dbg !11172, !ctir !149
  ret i64 %1, !dbg !11173
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11174 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  %max_bucket_length = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1198
  %bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11177, metadata !DIExpression()), !dbg !11178
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11179, metadata !DIExpression()), !dbg !11180
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11180
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11181
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11183, !ctir !1186
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11183, !ctir !1192
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11184
  br label %for.cond, !dbg !11185

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11186
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11188
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11189, !ctir !1186
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11189, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11190
  br i1 %cmp, label %for.body, label %for.end, !dbg !11191

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11192
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11195, !ctir !1199
  %6 = load i8*, i8** %data, align 8, !dbg !11195, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11192
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11196

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11197, metadata !DIExpression()), !dbg !11199
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11200
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11199
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11201, metadata !DIExpression()), !dbg !11202
  store i64 1, i64* %bucket_length, align 8, !dbg !11202
  br label %while.cond, !dbg !11203

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11204
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11205, !ctir !1199
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11205, !ctir !1192
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11206
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11207
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11203
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11203

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11208
  %inc = add i64 %11, 1, !dbg !11208
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11208
  br label %while.cond, !dbg !11203, !llvm.loop !11209

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11210
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11212
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11213
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11214

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11215
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11216
  br label %if.end, !dbg !11217

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11218

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11219

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11220
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11220, !ctir !1199
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11220
  br label %for.cond, !dbg !11221, !llvm.loop !11222

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11224
  ret i64 %16, !dbg !11225
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11226 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %n_entries = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1198
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11229, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11233, metadata !DIExpression()), !dbg !11234
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11234
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11235, metadata !DIExpression()), !dbg !11236
  store i64 0, i64* %n_entries, align 8, !dbg !11236
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11237
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11239, !ctir !1186
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11239, !ctir !1192
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11240
  br label %for.cond, !dbg !11241

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11242
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11244
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11245, !ctir !1186
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11245, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11246
  br i1 %cmp, label %for.body, label %for.end, !dbg !11247

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11248
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11251, !ctir !1199
  %6 = load i8*, i8** %data, align 8, !dbg !11251, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11248
  br i1 %tobool, label %if.then, label %if.end, !dbg !11252

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11253, metadata !DIExpression()), !dbg !11255
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11256
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11255
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11257
  %inc = add i64 %8, 1, !dbg !11257
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11257
  %9 = load i64, i64* %n_entries, align 8, !dbg !11258
  %inc2 = add i64 %9, 1, !dbg !11258
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11258
  br label %while.cond, !dbg !11259

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11260
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11261, !ctir !1199
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11261, !ctir !1192
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11262
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11263
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11259
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11259

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11264
  %inc4 = add i64 %13, 1, !dbg !11264
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11264
  br label %while.cond, !dbg !11259, !llvm.loop !11265

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11266

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11267

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11268
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11268, !ctir !1199
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11268
  br label %for.cond, !dbg !11269, !llvm.loop !11270

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11272
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11274
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11275, !ctir !1186
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11275, !ctir !149
  %cmp6 = icmp eq i64 %15, %17, !dbg !11276
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11277

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11278
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11279
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11280, !ctir !1186
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11280, !ctir !149
  %cmp8 = icmp eq i64 %18, %20, !dbg !11281
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11282

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11283
  br label %return, !dbg !11283

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11284
  br label %return, !dbg !11284

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11285
  ret i1 %21, !dbg !11285
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #0 !dbg !11286 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !149
  %n_buckets = alloca i64, align 8, !ctir !149
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %max_bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11329, metadata !DIExpression()), !dbg !11330
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11331, metadata !DIExpression()), !dbg !11332
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11333, metadata !DIExpression()), !dbg !11334
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11335
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #16, !dbg !11336
  store i64 %call, i64* %n_entries, align 8, !dbg !11334
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11337, metadata !DIExpression()), !dbg !11338
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11339
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #16, !dbg !11340
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11338
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11341, metadata !DIExpression()), !dbg !11342
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11343
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #16, !dbg !11344
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11342
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11345, metadata !DIExpression()), !dbg !11346
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11347
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #16, !dbg !11348
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11346
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11349
  %5 = load i64, i64* %n_entries, align 8, !dbg !11350
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.306, i64 0, i64 0), i64 %5), !dbg !11351
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11352
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11353
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.307, i64 0, i64 0), i64 %7), !dbg !11354
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11355
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11356
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11357
  %conv = uitofp i64 %10 to double, !dbg !11357
  %mul = fmul double 1.000000e+02, %conv, !dbg !11358
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11359
  %conv6 = uitofp i64 %11 to double, !dbg !11359
  %div = fdiv double %mul, %conv6, !dbg !11360
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.308, i64 0, i64 0), i64 %9, double %div), !dbg !11361
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11362
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11363
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.309, i64 0, i64 0), i64 %13), !dbg !11364
  ret void, !dbg !11365
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11366 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1198
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11369, metadata !DIExpression()), !dbg !11370
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11371, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11373, metadata !DIExpression()), !dbg !11374
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11375
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11376
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11377
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11374
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11378, metadata !DIExpression()), !dbg !11379
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11380
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11382, !ctir !1199
  %3 = load i8*, i8** %data, align 8, !dbg !11382, !ctir !167
  %cmp = icmp eq i8* %3, null, !dbg !11383
  br i1 %cmp, label %if.then, label %if.end, !dbg !11384

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11385
  br label %return, !dbg !11385

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11386
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11388
  br label %for.cond, !dbg !11389

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11390
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11392
  br i1 %tobool, label %for.body, label %for.end, !dbg !11392

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11393
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11395
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11396, !ctir !1199
  %8 = load i8*, i8** %data2, align 8, !dbg !11396, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !11397
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11398

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11399
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11400, !ctir !1186
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11400, !ctir !1221
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11401
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11402
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11403, !ctir !1199
  %13 = load i8*, i8** %data4, align 8, !dbg !11403, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11399
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11404

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11405
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11406, !ctir !1199
  %15 = load i8*, i8** %data7, align 8, !dbg !11406, !ctir !167
  store i8* %15, i8** %retval, align 8, !dbg !11407
  br label %return, !dbg !11407

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11408

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11409
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11410, !ctir !1199
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11410, !ctir !1192
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11411
  br label %for.cond, !dbg !11412, !llvm.loop !11413

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11415
  br label %return, !dbg !11415

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11416
  ret i8* %18, !dbg !11416
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #0 !dbg !11417 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11420, metadata !DIExpression()), !dbg !11421
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11422, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11424, metadata !DIExpression()), !dbg !11425
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11426
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11427, !ctir !1186
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11427, !ctir !1216
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11428
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11429
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11430, !ctir !1186
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11430, !ctir !149
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11426
  store i64 %call, i64* %n, align 8, !dbg !11425
  %5 = load i64, i64* %n, align 8, !dbg !11431
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11433
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11434, !ctir !1186
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11434, !ctir !149
  %cmp = icmp ult i64 %5, %7, !dbg !11435
  br i1 %cmp, label %if.end, label %if.then, !dbg !11436

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !11437
  unreachable, !dbg !11437

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11438
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11439, !ctir !1186
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11439, !ctir !1192
  %10 = load i64, i64* %n, align 8, !dbg !11440
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11441, !ctir !1193
  ret %struct.hash_entry* %add.ptr, !dbg !11442
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11443 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11448, metadata !DIExpression()), !dbg !11449
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11450
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11452, !ctir !1186
  %1 = load i64, i64* %n_entries, align 8, !dbg !11452, !ctir !149
  %cmp = icmp eq i64 %1, 0, !dbg !11453
  br i1 %cmp, label %if.then, label %if.end, !dbg !11454

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11455
  br label %return, !dbg !11455

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11456
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11458, !ctir !1186
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11458, !ctir !1192
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11459
  br label %for.cond, !dbg !11460

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11461
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11464
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11465, !ctir !1186
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11465, !ctir !1198
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11466
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11467

if.then3:                                         ; preds = %for.cond
  call void @abort() #15, !dbg !11468
  unreachable, !dbg !11468

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11469
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11471, !ctir !1199
  %8 = load i8*, i8** %data, align 8, !dbg !11471, !ctir !167
  %tobool = icmp ne i8* %8, null, !dbg !11469
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11472

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11473
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11474, !ctir !1199
  %10 = load i8*, i8** %data5, align 8, !dbg !11474, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11475
  br label %return, !dbg !11475

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11476

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11477
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11477, !ctir !1199
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11477
  br label %for.cond, !dbg !11478, !llvm.loop !11479

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11482
  ret i8* %12, !dbg !11482
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11483 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1198
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11484, metadata !DIExpression()), !dbg !11485
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11488, metadata !DIExpression()), !dbg !11489
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11490
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11491
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11492
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11489
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11493, metadata !DIExpression()), !dbg !11494
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11495
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11496
  br label %do.body, !dbg !11497

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11498
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11501, !ctir !1199
  %4 = load i8*, i8** %data, align 8, !dbg !11501, !ctir !167
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11502
  %cmp = icmp eq i8* %4, %5, !dbg !11503
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11504

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11505
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11506, !ctir !1199
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11506, !ctir !1192
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11505
  br i1 %tobool, label %if.then, label %if.end, !dbg !11507

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11508
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11509, !ctir !1199
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11509, !ctir !1192
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11510, !ctir !1193
  %10 = load i8*, i8** %data3, align 8, !dbg !11510, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11511
  br label %return, !dbg !11511

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11512
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11513, !ctir !1199
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11513, !ctir !1192
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11514
  br label %do.cond, !dbg !11515

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11516
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11517
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11515, !llvm.loop !11518

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11520

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11521
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11521, !ctir !1199
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11521
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11522
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11523, !ctir !1186
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11523, !ctir !1198
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11524
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11520

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11525
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11527, !ctir !1199
  %18 = load i8*, i8** %data7, align 8, !dbg !11527, !ctir !167
  %tobool8 = icmp ne i8* %18, null, !dbg !11525
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11528

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11529
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11530, !ctir !1199
  %20 = load i8*, i8** %data10, align 8, !dbg !11530, !ctir !167
  store i8* %20, i8** %retval, align 8, !dbg !11531
  br label %return, !dbg !11531

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11520, !llvm.loop !11532

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11534
  br label %return, !dbg !11534

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11535
  ret i8* %21, !dbg !11535
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #0 !dbg !11536 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1198
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11541, metadata !DIExpression()), !dbg !11542
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11545, metadata !DIExpression()), !dbg !11546
  store i64 0, i64* %counter, align 8, !dbg !11546
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11547, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11549, metadata !DIExpression()), !dbg !11550
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11551
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11553, !ctir !1186
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11553, !ctir !1192
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11554
  br label %for.cond, !dbg !11555

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11556
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11558
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11559, !ctir !1186
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11559, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11560
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11561

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11562
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11565, !ctir !1199
  %6 = load i8*, i8** %data, align 8, !dbg !11565, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11562
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11566

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11567
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11570
  br label %for.cond2, !dbg !11571

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11572
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11574
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11574

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11575
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11578
  %cmp5 = icmp uge i64 %9, %10, !dbg !11579
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11580

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11581
  store i64 %11, i64* %retval, align 8, !dbg !11582
  br label %return, !dbg !11582

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11583
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11584, !ctir !1199
  %13 = load i8*, i8** %data7, align 8, !dbg !11584, !ctir !167
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11585
  %15 = load i64, i64* %counter, align 8, !dbg !11586
  %inc = add i64 %15, 1, !dbg !11586
  store i64 %inc, i64* %counter, align 8, !dbg !11586
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11585, !ctir !754
  store i8* %13, i8** %arrayidx, align 8, !dbg !11587
  br label %for.inc, !dbg !11588

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11589
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11590, !ctir !1199
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11590, !ctir !1192
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11591
  br label %for.cond2, !dbg !11592, !llvm.loop !11593

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11595

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11596

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11597
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11597, !ctir !1199
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11597
  br label %for.cond, !dbg !11598, !llvm.loop !11599

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11601
  store i64 %19, i64* %retval, align 8, !dbg !11602
  br label %return, !dbg !11602

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11603
  ret i64 %20, !dbg !11603
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #0 !dbg !11604 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1198
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1198
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11611, metadata !DIExpression()), !dbg !11612
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11613, metadata !DIExpression()), !dbg !11614
  store i8* %processor_data, i8** %processor_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11615, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11617, metadata !DIExpression()), !dbg !11618
  store i64 0, i64* %counter, align 8, !dbg !11618
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11621, metadata !DIExpression()), !dbg !11622
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11623
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11625, !ctir !1186
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11625, !ctir !1192
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11626
  br label %for.cond, !dbg !11627

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11628
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11630
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11631, !ctir !1186
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11631, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11632
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11633

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11634
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11637, !ctir !1199
  %6 = load i8*, i8** %data, align 8, !dbg !11637, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11634
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11638

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11639
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11642
  br label %for.cond2, !dbg !11643

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11644
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11646
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11646

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11647
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11650
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11651, !ctir !1199
  %11 = load i8*, i8** %data5, align 8, !dbg !11651, !ctir !167
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11652
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11647
  br i1 %call, label %if.end, label %if.then6, !dbg !11653

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11654
  store i64 %13, i64* %retval, align 8, !dbg !11655
  br label %return, !dbg !11655

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11656
  %inc = add i64 %14, 1, !dbg !11656
  store i64 %inc, i64* %counter, align 8, !dbg !11656
  br label %for.inc, !dbg !11657

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11658
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11659, !ctir !1199
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11659, !ctir !1192
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11660
  br label %for.cond2, !dbg !11661, !llvm.loop !11662

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11664

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11665

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11666
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11666, !ctir !1199
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11666
  br label %for.cond, !dbg !11667, !llvm.loop !11668

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11670
  store i64 %18, i64* %retval, align 8, !dbg !11671
  br label %return, !dbg !11671

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11672
  ret i64 %19, !dbg !11672
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !11673 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !149
  %ch = alloca i8, align 1, !ctir !725
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11680, metadata !DIExpression()), !dbg !11681
  store i64 0, i64* %value, align 8, !dbg !11681
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11682, metadata !DIExpression()), !dbg !11683
  br label %for.cond, !dbg !11684

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11685
  %1 = load i8, i8* %0, align 1, !dbg !11688, !ctir !147
  store i8 %1, i8* %ch, align 1, !dbg !11689
  %tobool = icmp ne i8 %1, 0, !dbg !11690
  br i1 %tobool, label %for.body, label %for.end, !dbg !11690

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11691
  %mul = mul i64 %2, 31, !dbg !11692
  %3 = load i8, i8* %ch, align 1, !dbg !11693
  %conv = zext i8 %3 to i64, !dbg !11693
  %add = add i64 %mul, %conv, !dbg !11694
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11695
  %rem = urem i64 %add, %4, !dbg !11696
  store i64 %rem, i64* %value, align 8, !dbg !11697
  br label %for.inc, !dbg !11698

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11699
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11699, !ctir !147
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11699
  br label %for.cond, !dbg !11700, !llvm.loop !11701

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11703
  ret i64 %6, !dbg !11704
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #0 !dbg !11705 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11711
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11712
  ret void, !dbg !11713
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #0 !dbg !11714 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !1228
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11719, metadata !DIExpression()), !dbg !11720
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11723, metadata !DIExpression()), !dbg !11724
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11725, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11727, metadata !DIExpression()), !dbg !11728
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11729
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11731
  br i1 %cmp, label %if.then, label %if.end, !dbg !11732

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11733
  br label %if.end, !dbg !11734

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11735
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11737
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11738

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11739
  br label %if.end3, !dbg !11740

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #13, !dbg !11741
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11741
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11742
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11743
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11745
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11746

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11747
  br label %return, !dbg !11747

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11748
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11748
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11750

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11751
  br label %if.end8, !dbg !11752

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11753
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11754
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11755, !ctir !1187
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11756, !ctir !1204
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11757
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11759
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11760

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11761

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11763
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11764
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #16, !dbg !11765
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11766
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11767, !ctir !1187
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11768, !ctir !149
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11769
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11771, !ctir !1187
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11771, !ctir !149
  %tobool15 = icmp ne i64 %12, 0, !dbg !11769
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11772

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11773

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11774
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11775, !ctir !1187
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11775, !ctir !149
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #13, !dbg !11776
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11776
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11777
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11778, !ctir !1187
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11779, !ctir !1192
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11780
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11782, !ctir !1187
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11782, !ctir !1192
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11783
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11784

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11785

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11786
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11787, !ctir !1187
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11787, !ctir !1192
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11788
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11789, !ctir !1187
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11789, !ctir !149
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11790, !ctir !1193
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11791
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11792, !ctir !1187
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11793, !ctir !1198
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11794
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11795, !ctir !1187
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11796, !ctir !149
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11797
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11798, !ctir !1187
  store i64 0, i64* %n_entries, align 8, !dbg !11799, !ctir !149
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11800
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11801
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11802, !ctir !1187
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11803, !ctir !1216
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11804
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11805
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11806, !ctir !1187
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11807, !ctir !1221
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11808
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11809
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11810, !ctir !1187
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11811, !ctir !1226
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11812
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11813, !ctir !1187
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11814, !ctir !1192
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11815
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11816
  br label %return, !dbg !11816

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11817), !dbg !11818
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11819
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11819
  call void @free(i8* %35) #13, !dbg !11820
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11821
  br label %return, !dbg !11821

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11822
  ret %struct.hash_table* %36, !dbg !11822
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #0 !dbg !11823 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !149
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11824, metadata !DIExpression()), !dbg !11825
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11826, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11828, metadata !DIExpression()), !dbg !11829
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11830
  %1 = ptrtoint i8* %0 to i64, !dbg !11831
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11832
  store i64 %call, i64* %val, align 8, !dbg !11829
  %2 = load i64, i64* %val, align 8, !dbg !11833
  %3 = load i64, i64* %n.addr, align 8, !dbg !11834
  %rem = urem i64 %2, %3, !dbg !11835
  ret i64 %rem, !dbg !11836
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #0 !dbg !11837 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11840, metadata !DIExpression()), !dbg !11841
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11842
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11843
  %cmp = icmp eq i8* %0, %1, !dbg !11844
  ret i1 %cmp, !dbg !11845
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #0 !dbg !11846 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !1204
  %epsilon = alloca float, align 4, !ctir !1210
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11851, metadata !DIExpression()), !dbg !11852
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11853
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11854, !ctir !1187
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11854, !ctir !1204
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11852
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11855, metadata !DIExpression()), !dbg !11856
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11857
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11859
  br i1 %cmp, label %if.then, label %if.end, !dbg !11860

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11861
  br label %return, !dbg !11861

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11862
  %3 = load float, float* %epsilon, align 4, !dbg !11863
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11865
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11866, !ctir !1205
  %5 = load float, float* %growth_threshold, align 4, !dbg !11866, !ctir !1210
  %cmp2 = fcmp olt float %3, %5, !dbg !11867
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11868

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11869
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11870, !ctir !1205
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11870, !ctir !1210
  %8 = load float, float* %epsilon, align 4, !dbg !11871
  %sub = fsub float 1.000000e+00, %8, !dbg !11872
  %cmp4 = fcmp olt float %7, %sub, !dbg !11873
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11874

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11875
  %add = fadd float 1.000000e+00, %9, !dbg !11876
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11877
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11878, !ctir !1205
  %11 = load float, float* %growth_factor, align 4, !dbg !11878, !ctir !1210
  %cmp6 = fcmp olt float %add, %11, !dbg !11879
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11880

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11881
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11882, !ctir !1205
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11882, !ctir !1210
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11883
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11884

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11885
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11886, !ctir !1205
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11886, !ctir !1210
  %16 = load float, float* %epsilon, align 4, !dbg !11887
  %add11 = fadd float %15, %16, !dbg !11888
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11889
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11890, !ctir !1205
  %18 = load float, float* %shrink_factor, align 4, !dbg !11890, !ctir !1210
  %cmp12 = fcmp olt float %add11, %18, !dbg !11891
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11892

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11893
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11894, !ctir !1205
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11894, !ctir !1210
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11895
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11896

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11897
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11898, !ctir !1205
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11898, !ctir !1210
  %23 = load float, float* %epsilon, align 4, !dbg !11899
  %add18 = fadd float %22, %23, !dbg !11900
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11901
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11902, !ctir !1205
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11902, !ctir !1210
  %cmp20 = fcmp olt float %add18, %25, !dbg !11903
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11904

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11905
  br label %return, !dbg !11905

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11906
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11907, !ctir !1187
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11908, !ctir !1204
  store i1 false, i1* %retval, align 1, !dbg !11909
  br label %return, !dbg !11909

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11910
  ret i1 %27, !dbg !11910
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !11911 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !1210
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11914, metadata !DIExpression()), !dbg !11915
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11916, metadata !DIExpression()), !dbg !11917
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11918
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11920, !ctir !1205
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11920
  %tobool = trunc i8 %1 to i1, !dbg !11920, !ctir !141
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11921

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11922, metadata !DIExpression()), !dbg !11924
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11925
  %conv = uitofp i64 %2 to float, !dbg !11925
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11926
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11927, !ctir !1205
  %4 = load float, float* %growth_threshold, align 4, !dbg !11927, !ctir !1210
  %div = fdiv float %conv, %4, !dbg !11928
  store float %div, float* %new_candidate, align 4, !dbg !11924
  %5 = load float, float* %new_candidate, align 4, !dbg !11929
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11931
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11932

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11933
  br label %return, !dbg !11933

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11934
  %conv3 = fptoui float %6 to i64, !dbg !11934
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11935
  br label %if.end4, !dbg !11936

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11937
  %call = call i64 @next_prime(i64 %7) #17, !dbg !11938
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11939
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11940
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11940
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11942

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11943
  br label %return, !dbg !11943

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11944
  store i64 %9, i64* %retval, align 8, !dbg !11945
  br label %return, !dbg !11945

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11946
  ret i64 %10, !dbg !11946
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #12 !dbg !11947 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11950, metadata !DIExpression()), !dbg !11951
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11952
  %cmp = icmp ult i64 %0, 10, !dbg !11954
  br i1 %cmp, label %if.then, label %if.end, !dbg !11955

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11956
  br label %if.end, !dbg !11957

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11958
  %or = or i64 %1, 1, !dbg !11958
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11958
  br label %while.cond, !dbg !11959

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11960
  %cmp1 = icmp ne i64 -1, %2, !dbg !11961
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11962

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11963
  %call = call zeroext i1 @is_prime(i64 %3) #17, !dbg !11964
  %lnot = xor i1 %call, true, !dbg !11965
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11966
  br i1 %4, label %while.body, label %while.end, !dbg !11959

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11967
  %add = add i64 %5, 2, !dbg !11967
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11967
  br label %while.cond, !dbg !11959, !llvm.loop !11968

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11970
  ret i64 %6, !dbg !11971
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #12 !dbg !11972 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !149
  %square = alloca i64, align 8, !ctir !149
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11975, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11977, metadata !DIExpression()), !dbg !11978
  store i64 3, i64* %divisor, align 8, !dbg !11978
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11979, metadata !DIExpression()), !dbg !11980
  %0 = load i64, i64* %divisor, align 8, !dbg !11981
  %1 = load i64, i64* %divisor, align 8, !dbg !11982
  %mul = mul i64 %0, %1, !dbg !11983
  store i64 %mul, i64* %square, align 8, !dbg !11980
  br label %while.cond, !dbg !11984

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11985
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11986
  %cmp = icmp ult i64 %2, %3, !dbg !11987
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11988

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11989
  %5 = load i64, i64* %divisor, align 8, !dbg !11990
  %rem = urem i64 %4, %5, !dbg !11991
  %tobool = icmp ne i64 %rem, 0, !dbg !11988
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11992
  br i1 %6, label %while.body, label %while.end, !dbg !11984

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11993
  %inc = add i64 %7, 1, !dbg !11993
  store i64 %inc, i64* %divisor, align 8, !dbg !11993
  %8 = load i64, i64* %divisor, align 8, !dbg !11995
  %mul1 = mul i64 4, %8, !dbg !11996
  %9 = load i64, i64* %square, align 8, !dbg !11997
  %add = add i64 %9, %mul1, !dbg !11997
  store i64 %add, i64* %square, align 8, !dbg !11997
  %10 = load i64, i64* %divisor, align 8, !dbg !11998
  %inc2 = add i64 %10, 1, !dbg !11998
  store i64 %inc2, i64* %divisor, align 8, !dbg !11998
  br label %while.cond, !dbg !11984, !llvm.loop !11999

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12001
  %12 = load i64, i64* %divisor, align 8, !dbg !12002
  %rem3 = urem i64 %11, %12, !dbg !12003
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12001
  %13 = zext i1 %tobool4 to i64, !dbg !12001
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12001
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12004
  ret i1 %tobool5, !dbg !12005
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #0 !dbg !12006 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1192
  %next = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12011, metadata !DIExpression()), !dbg !12012
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12013
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12015, !ctir !1187
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12015, !ctir !1192
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12016
  br label %for.cond, !dbg !12017

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12018
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12020
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12021, !ctir !1187
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12021, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12022
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12023

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12024
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12027, !ctir !1193
  %6 = load i8*, i8** %data, align 8, !dbg !12027, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12024
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12028

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12029, metadata !DIExpression()), !dbg !12031
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12032, metadata !DIExpression()), !dbg !12033
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12034
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12036, !ctir !1193
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12036, !ctir !1192
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12037
  br label %for.cond3, !dbg !12038

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12039
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12041
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12041

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12042
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12045, !ctir !1187
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12045, !ctir !1226
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12042
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12046

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12047
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12048, !ctir !1187
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12048, !ctir !1226
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12049
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12050, !ctir !1193
  %15 = load i8*, i8** %data9, align 8, !dbg !12050, !ctir !167
  call void %13(i8* %15), !dbg !12047
  br label %if.end, !dbg !12047

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12051
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12052, !ctir !1193
  store i8* null, i8** %data10, align 8, !dbg !12053, !ctir !167
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12054
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12055, !ctir !1193
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12055, !ctir !1192
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12056
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12057
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12058, !ctir !1187
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12058, !ctir !1192
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12059
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12060, !ctir !1193
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12061, !ctir !1192
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12062
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12063
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12064, !ctir !1187
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12065, !ctir !1192
  br label %for.inc, !dbg !12066

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12067
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12068
  br label %for.cond3, !dbg !12069, !llvm.loop !12070

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12072
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12074, !ctir !1187
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12074, !ctir !1226
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12072
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12075

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12076
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12077, !ctir !1187
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12077, !ctir !1226
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12078
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12079, !ctir !1193
  %30 = load i8*, i8** %data18, align 8, !dbg !12079, !ctir !167
  call void %28(i8* %30), !dbg !12076
  br label %if.end19, !dbg !12076

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12080
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12081, !ctir !1193
  store i8* null, i8** %data20, align 8, !dbg !12082, !ctir !167
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12083
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12084, !ctir !1193
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12085, !ctir !1192
  br label %if.end22, !dbg !12086

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12087

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12088
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12088, !ctir !1193
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12088
  br label %for.cond, !dbg !12089, !llvm.loop !12090

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12092
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12093, !ctir !1187
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12094, !ctir !149
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12095
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12096, !ctir !1187
  store i64 0, i64* %n_entries, align 8, !dbg !12097, !ctir !149
  ret void, !dbg !12098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #0 !dbg !12099 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1192
  %next = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12100, metadata !DIExpression()), !dbg !12101
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12102, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12104, metadata !DIExpression()), !dbg !12105
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12106, metadata !DIExpression()), !dbg !12107
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12108
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12110, !ctir !1187
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12110, !ctir !1226
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12108
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12111

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12112
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12113, !ctir !1187
  %3 = load i64, i64* %n_entries, align 8, !dbg !12113, !ctir !149
  %tobool1 = icmp ne i64 %3, 0, !dbg !12112
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12114

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12115
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12118, !ctir !1187
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12118, !ctir !1192
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12119
  br label %for.cond, !dbg !12120

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12121
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12123
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12124, !ctir !1187
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12124, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12125
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12126

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12127
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12130, !ctir !1193
  %10 = load i8*, i8** %data, align 8, !dbg !12130, !ctir !167
  %tobool3 = icmp ne i8* %10, null, !dbg !12127
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12131

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12132
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12135
  br label %for.cond5, !dbg !12136

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12137
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12139
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12139

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12140
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12141, !ctir !1187
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12141, !ctir !1226
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12142
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12143, !ctir !1193
  %16 = load i8*, i8** %data9, align 8, !dbg !12143, !ctir !167
  call void %14(i8* %16), !dbg !12140
  br label %for.inc, !dbg !12140

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12144
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12145, !ctir !1193
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12145, !ctir !1192
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12146
  br label %for.cond5, !dbg !12147, !llvm.loop !12148

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12150

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12151

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12152
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12152, !ctir !1193
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12152
  br label %for.cond, !dbg !12153, !llvm.loop !12154

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12156

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12157
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12159, !ctir !1187
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12159, !ctir !1192
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12160
  br label %for.cond15, !dbg !12161

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12162
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12164
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12165, !ctir !1187
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12165, !ctir !1198
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12166
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12167

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12168
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12171, !ctir !1193
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12171, !ctir !1192
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12172
  br label %for.cond20, !dbg !12173

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12174
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12176
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12176

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12177
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12179, !ctir !1193
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12179, !ctir !1192
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12180
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12181
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12181
  call void @free(i8* %31) #13, !dbg !12182
  br label %for.inc24, !dbg !12183

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12184
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12185
  br label %for.cond20, !dbg !12186, !llvm.loop !12187

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12189

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12190
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12190, !ctir !1193
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12190
  br label %for.cond15, !dbg !12191, !llvm.loop !12192

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12194
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12196, !ctir !1187
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12196, !ctir !1192
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12197
  br label %for.cond29, !dbg !12198

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12199
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12201
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12201

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12202
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12204, !ctir !1193
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12204, !ctir !1192
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12205
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12206
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12206
  call void @free(i8* %40) #13, !dbg !12207
  br label %for.inc33, !dbg !12208

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12209
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12210
  br label %for.cond29, !dbg !12211, !llvm.loop !12212

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12214
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12215, !ctir !1187
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12215, !ctir !1192
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12214
  call void @free(i8* %44) #13, !dbg !12216
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12217
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12217
  call void @free(i8* %46) #13, !dbg !12218
  ret void, !dbg !12219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #0 !dbg !12220 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !1187
  %new_table = alloca %struct.hash_table*, align 8, !ctir !1228
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12223, metadata !DIExpression()), !dbg !12224
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12225, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12227, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12229, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12231, metadata !DIExpression()), !dbg !12232
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12233
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12234
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12235, !ctir !1187
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12235, !ctir !1204
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #16, !dbg !12236
  store i64 %call, i64* %new_size, align 8, !dbg !12232
  %3 = load i64, i64* %new_size, align 8, !dbg !12237
  %tobool = icmp ne i64 %3, 0, !dbg !12237
  br i1 %tobool, label %if.end, label %if.then, !dbg !12239

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12240
  br label %return, !dbg !12240

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12241
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12243
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12244, !ctir !1187
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12244, !ctir !149
  %cmp = icmp eq i64 %4, %6, !dbg !12245
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12246

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12247
  br label %return, !dbg !12247

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12248
  %7 = load i64, i64* %new_size, align 8, !dbg !12249
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #13, !dbg !12250
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12250
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12251
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12252, !ctir !1187
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12253, !ctir !1192
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12254
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12256, !ctir !1187
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12256, !ctir !1192
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12257
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12258

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12259
  br label %return, !dbg !12259

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12260
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12261
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12262, !ctir !1187
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12263, !ctir !149
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12264
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12265, !ctir !1187
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12265, !ctir !1192
  %16 = load i64, i64* %new_size, align 8, !dbg !12266
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12267, !ctir !1193
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12268
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12269, !ctir !1187
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12270, !ctir !1198
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12271
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12272, !ctir !1187
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12273, !ctir !149
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12274
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12275, !ctir !1187
  store i64 0, i64* %n_entries, align 8, !dbg !12276, !ctir !149
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12277
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12278, !ctir !1187
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12278, !ctir !1204
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12279
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12280, !ctir !1187
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12281, !ctir !1204
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12282
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12283, !ctir !1187
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12283, !ctir !1216
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12284
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12285, !ctir !1187
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12286, !ctir !1216
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12287
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12288, !ctir !1187
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12288, !ctir !1221
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12289
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12290, !ctir !1187
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12291, !ctir !1221
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12292
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12293, !ctir !1187
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12293, !ctir !1226
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12294
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12295, !ctir !1187
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12296, !ctir !1226
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12297
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12298, !ctir !1187
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12298, !ctir !1192
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12299
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12300, !ctir !1187
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12301, !ctir !1192
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12302
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12304
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12305
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12306

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12307
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12309, !ctir !1187
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12309, !ctir !1192
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12307
  call void @free(i8* %39) #13, !dbg !12310
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12311
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12312, !ctir !1187
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12312, !ctir !1192
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12313
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12314, !ctir !1187
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12315, !ctir !1192
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12316
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12317, !ctir !1187
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12317, !ctir !1198
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12318
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12319, !ctir !1187
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12320, !ctir !1198
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12321
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12322, !ctir !1187
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12322, !ctir !149
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12323
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12324, !ctir !1187
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12325, !ctir !149
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12326
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12327, !ctir !1187
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12327, !ctir !149
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12328
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12329, !ctir !1187
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12330, !ctir !149
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12331
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12332, !ctir !1187
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12332, !ctir !1192
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12333
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12334, !ctir !1187
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12335, !ctir !1192
  store i1 true, i1* %retval, align 1, !dbg !12336
  br label %return, !dbg !12336

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12337
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12338, !ctir !1187
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12338, !ctir !1192
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12339
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12340, !ctir !1187
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12341, !ctir !1192
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12342
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12344
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12345
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12346

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12347
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12348
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12349
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12350

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #15, !dbg !12351
  unreachable, !dbg !12351

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12352
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12353, !ctir !1187
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12353, !ctir !1192
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12352
  call void @free(i8* %64) #13, !dbg !12354
  store i1 false, i1* %retval, align 1, !dbg !12355
  br label %return, !dbg !12355

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12356
  ret i1 %65, !dbg !12356
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #0 !dbg !12357 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1192
  %next = alloca %struct.hash_entry*, align 8, !ctir !1192
  %data2 = alloca i8*, align 8, !ctir !167
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12362, metadata !DIExpression()), !dbg !12363
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12364, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12366, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12368, metadata !DIExpression()), !dbg !12369
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12370, metadata !DIExpression()), !dbg !12371
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12372
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12374, !ctir !1187
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12374, !ctir !1192
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12375
  br label %for.cond, !dbg !12376

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12377
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12379
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12380, !ctir !1187
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12380, !ctir !1198
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12381
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12382

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12383
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12385, !ctir !1193
  %6 = load i8*, i8** %data, align 8, !dbg !12385, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12383
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12386

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12387, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12390, metadata !DIExpression()), !dbg !12391
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12392
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12394, !ctir !1193
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12394, !ctir !1192
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12395
  br label %for.cond4, !dbg !12396

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12397
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12399
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12399

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12400
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12402, !ctir !1193
  %11 = load i8*, i8** %data7, align 8, !dbg !12402, !ctir !167
  store i8* %11, i8** %data2, align 8, !dbg !12403
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12404
  %13 = load i8*, i8** %data2, align 8, !dbg !12405
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12406
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12407
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12408
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12409, !ctir !1193
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12409, !ctir !1192
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12410
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12411
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12413, !ctir !1193
  %17 = load i8*, i8** %data9, align 8, !dbg !12413, !ctir !167
  %tobool10 = icmp ne i8* %17, null, !dbg !12411
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12414

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12415
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12417, !ctir !1193
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12417, !ctir !1192
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12418
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12419, !ctir !1193
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12420, !ctir !1192
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12421
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12422
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12423, !ctir !1193
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12424, !ctir !1192
  br label %if.end, !dbg !12425

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12426
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12428
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12429, !ctir !1193
  store i8* %23, i8** %data15, align 8, !dbg !12430, !ctir !167
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12431
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12432, !ctir !1187
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12433, !ctir !149
  %inc = add i64 %26, 1, !dbg !12433
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12433, !ctir !149
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12434
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12435
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12436
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12437

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12438
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12439
  br label %for.cond4, !dbg !12440, !llvm.loop !12441

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12443
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12444, !ctir !1193
  %31 = load i8*, i8** %data16, align 8, !dbg !12444, !ctir !167
  store i8* %31, i8** %data2, align 8, !dbg !12445
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12446
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12447, !ctir !1193
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12448, !ctir !1192
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12449
  %tobool18 = trunc i8 %33 to i1, !dbg !12449
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12451

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12452

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12453
  %35 = load i8*, i8** %data2, align 8, !dbg !12454
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12455
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12456
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12457
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12459, !ctir !1193
  %37 = load i8*, i8** %data22, align 8, !dbg !12459, !ctir !167
  %tobool23 = icmp ne i8* %37, null, !dbg !12457
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12460

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12461, metadata !DIExpression()), !dbg !12463
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12464
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12465
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12463
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12466
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12468
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12469

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12470
  br label %return, !dbg !12470

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12471
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12472
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12473, !ctir !1193
  store i8* %40, i8** %data29, align 8, !dbg !12474, !ctir !167
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12475
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12476, !ctir !1193
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12476, !ctir !1192
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12477
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12478, !ctir !1193
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12479, !ctir !1192
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12480
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12481
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12482, !ctir !1193
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12483, !ctir !1192
  br label %if.end37, !dbg !12484

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12485
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12487
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12488, !ctir !1193
  store i8* %47, i8** %data34, align 8, !dbg !12489, !ctir !167
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12490
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12491, !ctir !1187
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12492, !ctir !149
  %inc36 = add i64 %50, 1, !dbg !12492
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12492, !ctir !149
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12493
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12494, !ctir !1193
  store i8* null, i8** %data38, align 8, !dbg !12495, !ctir !167
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12496
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12497, !ctir !1187
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12498, !ctir !149
  %dec = add i64 %53, -1, !dbg !12498
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12498, !ctir !149
  br label %if.end40, !dbg !12499

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12385

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12500
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12500, !ctir !1193
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12500
  br label %for.cond, !dbg !12501, !llvm.loop !12502

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12504
  br label %return, !dbg !12504

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12505
  ret i1 %55, !dbg !12505
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #0 !dbg !12506 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12509, metadata !DIExpression()), !dbg !12510
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12511, metadata !DIExpression()), !dbg !12512
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12513
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12514, !ctir !1193
  store i8* null, i8** %data, align 8, !dbg !12515, !ctir !167
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12516
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12517, !ctir !1187
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12517, !ctir !1192
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12518
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12519, !ctir !1193
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12520, !ctir !1192
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12521
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12522
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12523, !ctir !1187
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12524, !ctir !1192
  ret void, !dbg !12525
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #0 !dbg !12526 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12529, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12531, metadata !DIExpression()), !dbg !12532
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12533
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12535, !ctir !1187
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12535, !ctir !1192
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12533
  br i1 %tobool, label %if.then, label %if.else, !dbg !12536

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12537
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12539, !ctir !1187
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12539, !ctir !1192
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12540
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12541
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12542, !ctir !1193
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12542, !ctir !1192
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12543
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12544, !ctir !1187
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12545, !ctir !1192
  br label %if.end, !dbg !12546

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #13, !dbg !12547
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12547
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12549
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12550
  ret %struct.hash_entry* %8, !dbg !12551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #0 !dbg !12552 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !1204
  %candidate = alloca float, align 4, !ctir !1210
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12555, metadata !DIExpression()), !dbg !12556
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12557, metadata !DIExpression()), !dbg !12558
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12559, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12561, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12563, metadata !DIExpression()), !dbg !12564
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12565
  %tobool = icmp ne i8* %0, null, !dbg !12565
  br i1 %tobool, label %if.end, label %if.then, !dbg !12567

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !12568
  unreachable, !dbg !12568

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12569
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12571
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12572
  store i8* %call, i8** %data, align 8, !dbg !12573
  %cmp = icmp ne i8* %call, null, !dbg !12574
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12575

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12576
  %tobool3 = icmp ne i8** %3, null, !dbg !12576
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12579

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12580
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12581
  store i8* %4, i8** %5, align 8, !dbg !12582, !ctir !175
  br label %if.end5, !dbg !12583

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12584
  br label %return, !dbg !12584

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12585
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12587, !ctir !1187
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12587, !ctir !149
  %conv = uitofp i64 %7 to float, !dbg !12585
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12588
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12589, !ctir !1187
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12589, !ctir !1204
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12590, !ctir !1205
  %10 = load float, float* %growth_threshold, align 4, !dbg !12590, !ctir !1210
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12591
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12592, !ctir !1187
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12592, !ctir !149
  %conv7 = uitofp i64 %12 to float, !dbg !12591
  %mul = fmul float %10, %conv7, !dbg !12593
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12594
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12595

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12596
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12598
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12599
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12601, !ctir !1187
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12601, !ctir !149
  %conv13 = uitofp i64 %15 to float, !dbg !12599
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12602
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12603, !ctir !1187
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12603, !ctir !1204
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12604, !ctir !1205
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12604, !ctir !1210
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12605
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12606, !ctir !1187
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12606, !ctir !149
  %conv17 = uitofp i64 %20 to float, !dbg !12605
  %mul18 = fmul float %18, %conv17, !dbg !12607
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12608
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12609

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12610, metadata !DIExpression()), !dbg !12612
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12613
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12614, !ctir !1187
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12614, !ctir !1204
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12612
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12615, metadata !DIExpression()), !dbg !12616
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12617
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12618, !ctir !1205
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12618
  %tobool24 = trunc i8 %24 to i1, !dbg !12618, !ctir !141
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12617

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12619
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12620, !ctir !1187
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12620, !ctir !149
  %conv27 = uitofp i64 %26 to float, !dbg !12619
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12621
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12622, !ctir !1205
  %28 = load float, float* %growth_factor, align 4, !dbg !12622, !ctir !1210
  %mul28 = fmul float %conv27, %28, !dbg !12623
  br label %cond.end, !dbg !12617

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12624
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12625, !ctir !1187
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12625, !ctir !149
  %conv30 = uitofp i64 %30 to float, !dbg !12624
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12626
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12627, !ctir !1205
  %32 = load float, float* %growth_factor31, align 4, !dbg !12627, !ctir !1210
  %mul32 = fmul float %conv30, %32, !dbg !12628
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12629
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12630, !ctir !1205
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12630, !ctir !1210
  %mul34 = fmul float %mul32, %34, !dbg !12631
  br label %cond.end, !dbg !12617

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12617
  store float %cond, float* %candidate, align 4, !dbg !12616
  %35 = load float, float* %candidate, align 4, !dbg !12632
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12634
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12635

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12636
  br label %return, !dbg !12636

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12637
  %37 = load float, float* %candidate, align 4, !dbg !12639
  %conv39 = fptoui float %37 to i64, !dbg !12639
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12640
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12641

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12642
  br label %return, !dbg !12642

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12643
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12645
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12646
  %cmp44 = icmp ne i8* %call43, null, !dbg !12647
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12648

if.then46:                                        ; preds = %if.end42
  call void @abort() #15, !dbg !12649
  unreachable, !dbg !12649

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12650

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12651

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12652
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12654, !ctir !1193
  %41 = load i8*, i8** %data50, align 8, !dbg !12654, !ctir !167
  %tobool51 = icmp ne i8* %41, null, !dbg !12652
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12655

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12656, metadata !DIExpression()), !dbg !12658
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12659
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12660
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12658
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12661
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12663
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12664

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12665
  br label %return, !dbg !12665

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12666
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12667
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12668, !ctir !1193
  store i8* %44, i8** %data58, align 8, !dbg !12669, !ctir !167
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12670
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12671, !ctir !1193
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12671, !ctir !1192
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12672
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12673, !ctir !1193
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12674, !ctir !1192
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12675
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12676
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12677, !ctir !1193
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12678, !ctir !1192
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12679
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12680, !ctir !1187
  %52 = load i64, i64* %n_entries, align 8, !dbg !12681, !ctir !149
  %inc = add i64 %52, 1, !dbg !12681
  store i64 %inc, i64* %n_entries, align 8, !dbg !12681, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !12682
  br label %return, !dbg !12682

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12683
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12684
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12685, !ctir !1193
  store i8* %53, i8** %data62, align 8, !dbg !12686, !ctir !167
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12687
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12688, !ctir !1187
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12689, !ctir !149
  %inc64 = add i64 %56, 1, !dbg !12689
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12689, !ctir !149
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12690
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12691, !ctir !1187
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12692, !ctir !149
  %inc66 = add i64 %58, 1, !dbg !12692
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12692, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !12693
  br label %return, !dbg !12693

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12694
  ret i32 %59, !dbg !12694
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #0 !dbg !12695 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1192
  %data7 = alloca i8*, align 8, !ctir !167
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !1192
  %data29 = alloca i8*, align 8, !ctir !167
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12699, metadata !DIExpression()), !dbg !12700
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12701, metadata !DIExpression()), !dbg !12702
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12703, metadata !DIExpression()), !dbg !12704
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12705, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12707, metadata !DIExpression()), !dbg !12708
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12709
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12710
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12711
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12708
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12712, metadata !DIExpression()), !dbg !12713
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12714
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12715
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12716, !ctir !1192
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12717
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12719, !ctir !1193
  %5 = load i8*, i8** %data, align 8, !dbg !12719, !ctir !167
  %cmp = icmp eq i8* %5, null, !dbg !12720
  br i1 %cmp, label %if.then, label %if.end, !dbg !12721

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12722
  br label %return, !dbg !12722

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12723
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12725
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12726, !ctir !1193
  %8 = load i8*, i8** %data2, align 8, !dbg !12726, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !12727
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12728

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12729
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12730, !ctir !1187
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12730, !ctir !1221
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12731
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12732
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12733, !ctir !1193
  %13 = load i8*, i8** %data4, align 8, !dbg !12733, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12729
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12734

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12735, metadata !DIExpression()), !dbg !12737
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12738
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12739, !ctir !1193
  %15 = load i8*, i8** %data8, align 8, !dbg !12739, !ctir !167
  store i8* %15, i8** %data7, align 8, !dbg !12737
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12740
  %tobool = trunc i8 %16 to i1, !dbg !12740
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12742

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12743
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12746, !ctir !1193
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12746, !ctir !1192
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12743
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12747

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12748, metadata !DIExpression()), !dbg !12750
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12751
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12752, !ctir !1193
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12752, !ctir !1192
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12750
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12753
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12754
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12755
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12755
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12756
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12757
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12758
  br label %if.end15, !dbg !12759

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12760
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12762, !ctir !1193
  store i8* null, i8** %data14, align 8, !dbg !12763, !ctir !167
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12764

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12765
  store i8* %28, i8** %retval, align 8, !dbg !12766
  br label %return, !dbg !12766

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12767
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12769
  br label %for.cond, !dbg !12770

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12771
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12773, !ctir !1193
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12773, !ctir !1192
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12774
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12774

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12775
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12778
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12779, !ctir !1193
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12779, !ctir !1192
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12780, !ctir !1193
  %35 = load i8*, i8** %data21, align 8, !dbg !12780, !ctir !167
  %cmp22 = icmp eq i8* %32, %35, !dbg !12781
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12782

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12783
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12784, !ctir !1187
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12784, !ctir !1221
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12785
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12786
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12787, !ctir !1193
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12787, !ctir !1192
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12788, !ctir !1193
  %41 = load i8*, i8** %data26, align 8, !dbg !12788, !ctir !167
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12783
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12789

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12790, metadata !DIExpression()), !dbg !12792
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12793
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12794, !ctir !1193
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12794, !ctir !1192
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12795, !ctir !1193
  %44 = load i8*, i8** %data31, align 8, !dbg !12795, !ctir !167
  store i8* %44, i8** %data29, align 8, !dbg !12792
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12796
  %tobool32 = trunc i8 %45 to i1, !dbg !12796
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12798

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12799, metadata !DIExpression()), !dbg !12801
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12802
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12803, !ctir !1193
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12803, !ctir !1192
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12801
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12804
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12805, !ctir !1193
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12805, !ctir !1192
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12806
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12807, !ctir !1193
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12808, !ctir !1192
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12809
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12810
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12811
  br label %if.end38, !dbg !12812

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12813
  store i8* %53, i8** %retval, align 8, !dbg !12814
  br label %return, !dbg !12814

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12815

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12816
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12817, !ctir !1193
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12817, !ctir !1192
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12818
  br label %for.cond, !dbg !12819, !llvm.loop !12820

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12822
  br label %return, !dbg !12822

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12823
  ret i8* %56, !dbg !12823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #0 !dbg !12824 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !175
  %err = alloca i32, align 4, !ctir !27
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12827, metadata !DIExpression()), !dbg !12828
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12831, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12833, metadata !DIExpression()), !dbg !12834
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12835
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12836
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12837
  store i32 %call, i32* %err, align 4, !dbg !12834
  %2 = load i32, i32* %err, align 4, !dbg !12838
  %cmp = icmp eq i32 %2, -1, !dbg !12839
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12838

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12838

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12840
  %cmp2 = icmp eq i32 %3, 0, !dbg !12841
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12840

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12842
  br label %cond.end, !dbg !12840

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12843
  br label %cond.end, !dbg !12840

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12840
  br label %cond.end5, !dbg !12838

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12838
  ret i8* %cond6, !dbg !12844
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #0 !dbg !12845 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1192
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !1204
  %candidate = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1192
  %next = alloca %struct.hash_entry*, align 8, !ctir !1192
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12846, metadata !DIExpression()), !dbg !12847
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12848, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12850, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12852, metadata !DIExpression()), !dbg !12853
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12854
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12855
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12856
  store i8* %call, i8** %data, align 8, !dbg !12857
  %2 = load i8*, i8** %data, align 8, !dbg !12858
  %tobool = icmp ne i8* %2, null, !dbg !12858
  br i1 %tobool, label %if.end, label %if.then, !dbg !12860

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12861
  br label %return, !dbg !12861

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12862
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12863, !ctir !1187
  %4 = load i64, i64* %n_entries, align 8, !dbg !12864, !ctir !149
  %dec = add i64 %4, -1, !dbg !12864
  store i64 %dec, i64* %n_entries, align 8, !dbg !12864, !ctir !149
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12865
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12867, !ctir !1193
  %6 = load i8*, i8** %data2, align 8, !dbg !12867, !ctir !167
  %tobool3 = icmp ne i8* %6, null, !dbg !12865
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12868

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12869
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12871, !ctir !1187
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12872, !ctir !149
  %dec5 = add i64 %8, -1, !dbg !12872
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12872, !ctir !149
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12873
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12875, !ctir !1187
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12875, !ctir !149
  %conv = uitofp i64 %10 to float, !dbg !12873
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12876
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12877, !ctir !1187
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12877, !ctir !1204
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12878, !ctir !1205
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12878, !ctir !1210
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12879
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12880, !ctir !1187
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12880, !ctir !149
  %conv7 = uitofp i64 %15 to float, !dbg !12879
  %mul = fmul float %13, %conv7, !dbg !12881
  %cmp = fcmp olt float %conv, %mul, !dbg !12882
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12883

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12884
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12886
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12887
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12889, !ctir !1187
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12889, !ctir !149
  %conv12 = uitofp i64 %18 to float, !dbg !12887
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12890
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12891, !ctir !1187
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12891, !ctir !1204
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12892, !ctir !1205
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12892, !ctir !1210
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12893
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12894, !ctir !1187
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12894, !ctir !149
  %conv16 = uitofp i64 %23 to float, !dbg !12893
  %mul17 = fmul float %21, %conv16, !dbg !12895
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12896
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12897

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12898, metadata !DIExpression()), !dbg !12900
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12901
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12902, !ctir !1187
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12902, !ctir !1204
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12900
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12903, metadata !DIExpression()), !dbg !12904
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12905
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12906, !ctir !1205
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12906
  %tobool23 = trunc i8 %27 to i1, !dbg !12906, !ctir !141
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12905

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12907
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12908, !ctir !1187
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12908, !ctir !149
  %conv26 = uitofp i64 %29 to float, !dbg !12907
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12909
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12910, !ctir !1205
  %31 = load float, float* %shrink_factor, align 4, !dbg !12910, !ctir !1210
  %mul27 = fmul float %conv26, %31, !dbg !12911
  br label %cond.end, !dbg !12905

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12912
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12913, !ctir !1187
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12913, !ctir !149
  %conv29 = uitofp i64 %33 to float, !dbg !12912
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12914
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12915, !ctir !1205
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12915, !ctir !1210
  %mul31 = fmul float %conv29, %35, !dbg !12916
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12917
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12918, !ctir !1205
  %37 = load float, float* %growth_threshold, align 4, !dbg !12918, !ctir !1210
  %mul32 = fmul float %mul31, %37, !dbg !12919
  br label %cond.end, !dbg !12905

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12905
  %conv33 = fptoui float %cond to i64, !dbg !12920
  store i64 %conv33, i64* %candidate, align 8, !dbg !12904
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12921
  %39 = load i64, i64* %candidate, align 8, !dbg !12923
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12924
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12925

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12926, metadata !DIExpression()), !dbg !12928
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12929
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12930, !ctir !1187
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12930, !ctir !1192
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12928
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12931, metadata !DIExpression()), !dbg !12932
  br label %while.cond, !dbg !12933

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12934
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12933
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12933

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12935
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12937, !ctir !1193
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12937, !ctir !1192
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12938
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12939
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12939
  call void @free(i8* %46) #13, !dbg !12940
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12941
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12942
  br label %while.cond, !dbg !12933, !llvm.loop !12943

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12945
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12946, !ctir !1187
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12947, !ctir !1192
  br label %if.end39, !dbg !12948

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12949

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12950

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12951

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12952
  store i8* %49, i8** %retval, align 8, !dbg !12953
  br label %return, !dbg !12953

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12954
  ret i8* %50, !dbg !12954
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !12955 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1571
  %tmp = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12957, metadata !DIExpression()), !dbg !12958
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12959, metadata !DIExpression()), !dbg !12960
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12961, metadata !DIExpression()), !dbg !12962
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12963
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12963
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12962
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12964, metadata !DIExpression()), !dbg !12965
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12966
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12967, !ctir !1572
  %3 = load i8*, i8** %name, align 8, !dbg !12967, !ctir !143
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12968
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #16, !dbg !12969
  store i64 %call, i64* %tmp, align 8, !dbg !12965
  %5 = load i64, i64* %tmp, align 8, !dbg !12970
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12971
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12972, !ctir !1572
  %7 = load i64, i64* %st_ino, align 8, !dbg !12972, !ctir !267
  %xor = xor i64 %5, %7, !dbg !12973
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12974
  %rem = urem i64 %xor, %8, !dbg !12975
  ret i64 %rem, !dbg !12976
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !12977 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1571
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12978, metadata !DIExpression()), !dbg !12979
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12980, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12982, metadata !DIExpression()), !dbg !12983
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12984
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12984
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12983
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12985
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12986, !ctir !1572
  %3 = load i64, i64* %st_ino, align 8, !dbg !12986, !ctir !267
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12987
  %rem = urem i64 %3, %4, !dbg !12988
  ret i64 %rem, !dbg !12989
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #0 !dbg !12990 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1571
  %b = alloca %struct.F_triple*, align 8, !ctir !1571
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12991, metadata !DIExpression()), !dbg !12992
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12993, metadata !DIExpression()), !dbg !12994
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12995, metadata !DIExpression()), !dbg !12996
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12997
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12997
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12996
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12998, metadata !DIExpression()), !dbg !12999
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13000
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13000
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12999
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13001
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13001, !ctir !1572
  %5 = load i64, i64* %st_ino, align 8, !dbg !13001, !ctir !267
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13001
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13001, !ctir !1572
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13001, !ctir !267
  %cmp = icmp eq i64 %5, %7, !dbg !13001
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13001

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13001
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13001, !ctir !1572
  %9 = load i64, i64* %st_dev, align 8, !dbg !13001, !ctir !269
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13001
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13001, !ctir !1572
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13001, !ctir !269
  %cmp3 = icmp eq i64 %9, %11, !dbg !13001
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13002

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13003
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13004, !ctir !1572
  %13 = load i8*, i8** %name, align 8, !dbg !13004, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13005
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13006, !ctir !1572
  %15 = load i8*, i8** %name4, align 8, !dbg !13006, !ctir !143
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13007
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13008
  %17 = zext i1 %16 to i64, !dbg !13009
  %cond = select i1 %16, i32 1, i32 0, !dbg !13009
  %tobool = icmp ne i32 %cond, 0, !dbg !13009
  ret i1 %tobool, !dbg !13010
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13011 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1571
  %b = alloca %struct.F_triple*, align 8, !ctir !1571
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13012, metadata !DIExpression()), !dbg !13013
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13014, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13016, metadata !DIExpression()), !dbg !13017
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13018
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13018
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13017
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13019, metadata !DIExpression()), !dbg !13020
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13021
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13021
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13020
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13022
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13022, !ctir !1572
  %5 = load i64, i64* %st_ino, align 8, !dbg !13022, !ctir !267
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13022
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13022, !ctir !1572
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13022, !ctir !267
  %cmp = icmp eq i64 %5, %7, !dbg !13022
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13022

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13022
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13022, !ctir !1572
  %9 = load i64, i64* %st_dev, align 8, !dbg !13022, !ctir !269
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13022
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13022, !ctir !1572
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13022, !ctir !269
  %cmp3 = icmp eq i64 %9, %11, !dbg !13022
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13023

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13024
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13024, !ctir !1572
  %13 = load i8*, i8** %name, align 8, !dbg !13024, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13024
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13024, !ctir !1572
  %15 = load i8*, i8** %name4, align 8, !dbg !13024, !ctir !143
  %call = call i32 @strcmp(i8* %13, i8* %15) #16, !dbg !13024
  %cmp5 = icmp eq i32 %call, 0, !dbg !13024
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13025
  %17 = zext i1 %16 to i64, !dbg !13026
  %cond = select i1 %16, i32 1, i32 0, !dbg !13026
  %tobool = icmp ne i32 %cond, 0, !dbg !13026
  ret i1 %tobool, !dbg !13027
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #0 !dbg !13028 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1578
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13031, metadata !DIExpression()), !dbg !13032
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13033
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13033
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13032
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13034
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13035, !ctir !1573
  %3 = load i8*, i8** %name, align 8, !dbg !13035, !ctir !143
  call void @free(i8* %3) #13, !dbg !13036
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13037
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13037
  call void @free(i8* %5) #13, !dbg !13038
  ret void, !dbg !13039
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @human_readable(i64 %n, i8* %buf, i32 %opts, i64 %from_block_size, i64 %to_block_size) #0 !dbg !13040 {
entry:
  %n.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %opts.addr = alloca i32, align 4
  %from_block_size.addr = alloca i64, align 8
  %to_block_size.addr = alloca i64, align 8
  %inexact_style = alloca i32, align 4, !ctir !27
  %base = alloca i32, align 4, !ctir !6
  %amt = alloca i64, align 8, !ctir !168
  %tenths = alloca i32, align 4, !ctir !27
  %exponent = alloca i32, align 4, !ctir !27
  %exponent_max = alloca i32, align 4, !ctir !27
  %p = alloca i8*, align 8, !ctir !143
  %psuffix = alloca i8*, align 8, !ctir !143
  %integerlim = alloca i8*, align 8, !ctir !146
  %rounding = alloca i32, align 4, !ctir !27
  %decimal_point = alloca i8*, align 8, !ctir !146
  %decimal_pointlen = alloca i64, align 8, !ctir !149
  %grouping = alloca i8*, align 8, !ctir !146
  %thousands_sep = alloca i8*, align 8, !ctir !146
  %l = alloca %struct.lconv*, align 8, !ctir !1236
  %pointlen = alloca i64, align 8, !ctir !149
  %multiplier = alloca i64, align 8, !ctir !168
  %divisor = alloca i64, align 8, !ctir !168
  %r10 = alloca i64, align 8, !ctir !168
  %r2 = alloca i64, align 8, !ctir !168
  %dto_block_size = alloca x86_fp80, align 16, !ctir !1265
  %damt = alloca x86_fp80, align 16, !ctir !1265
  %buflen = alloca i64, align 8, !ctir !149
  %nonintegerlen = alloca i64, align 8, !ctir !149
  %e = alloca x86_fp80, align 16, !ctir !1265
  %r10103 = alloca i32, align 4, !ctir !6
  %r2110 = alloca i32, align 4, !ctir !6
  %digit = alloca i32, align 4, !ctir !27
  %power = alloca i64, align 8, !ctir !168
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13043, metadata !DIExpression()), !dbg !13044
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13045, metadata !DIExpression()), !dbg !13046
  store i32 %opts, i32* %opts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opts.addr, metadata !13047, metadata !DIExpression()), !dbg !13048
  store i64 %from_block_size, i64* %from_block_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from_block_size.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  store i64 %to_block_size, i64* %to_block_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %to_block_size.addr, metadata !13051, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.declare(metadata i32* %inexact_style, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = load i32, i32* %opts.addr, align 4, !dbg !13055
  %and = and i32 %0, 3, !dbg !13056
  store i32 %and, i32* %inexact_style, align 4, !dbg !13054
  call void @llvm.dbg.declare(metadata i32* %base, metadata !13057, metadata !DIExpression()), !dbg !13058
  %1 = load i32, i32* %opts.addr, align 4, !dbg !13059
  %and1 = and i32 %1, 32, !dbg !13060
  %tobool = icmp ne i32 %and1, 0, !dbg !13059
  %2 = zext i1 %tobool to i64, !dbg !13059
  %cond = select i1 %tobool, i32 1024, i32 1000, !dbg !13059
  store i32 %cond, i32* %base, align 4, !dbg !13058
  call void @llvm.dbg.declare(metadata i64* %amt, metadata !13061, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.declare(metadata i32* %tenths, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !13065, metadata !DIExpression()), !dbg !13066
  store i32 -1, i32* %exponent, align 4, !dbg !13066
  call void @llvm.dbg.declare(metadata i32* %exponent_max, metadata !13067, metadata !DIExpression()), !dbg !13068
  store i32 8, i32* %exponent_max, align 4, !dbg !13068
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13069, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.declare(metadata i8** %psuffix, metadata !13071, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.declare(metadata i8** %integerlim, metadata !13073, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.declare(metadata i32* %rounding, metadata !13075, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.declare(metadata i8** %decimal_point, metadata !13077, metadata !DIExpression()), !dbg !13078
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.328, i64 0, i64 0), i8** %decimal_point, align 8, !dbg !13078
  call void @llvm.dbg.declare(metadata i64* %decimal_pointlen, metadata !13079, metadata !DIExpression()), !dbg !13080
  store i64 1, i64* %decimal_pointlen, align 8, !dbg !13080
  call void @llvm.dbg.declare(metadata i8** %grouping, metadata !13081, metadata !DIExpression()), !dbg !13082
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.329, i64 0, i64 0), i8** %grouping, align 8, !dbg !13082
  call void @llvm.dbg.declare(metadata i8** %thousands_sep, metadata !13083, metadata !DIExpression()), !dbg !13084
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.329, i64 0, i64 0), i8** %thousands_sep, align 8, !dbg !13084
  call void @llvm.dbg.declare(metadata %struct.lconv** %l, metadata !13085, metadata !DIExpression()), !dbg !13086
  %call = call %struct.lconv* @localeconv() #13, !dbg !13087
  store %struct.lconv* %call, %struct.lconv** %l, align 8, !dbg !13086
  call void @llvm.dbg.declare(metadata i64* %pointlen, metadata !13088, metadata !DIExpression()), !dbg !13089
  %3 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13090
  %decimal_point2 = getelementptr inbounds %struct.lconv, %struct.lconv* %3, i32 0, i32 0, !dbg !13091, !ctir !1237
  %4 = load i8*, i8** %decimal_point2, align 8, !dbg !13091, !ctir !143
  %call3 = call i64 @strlen(i8* %4) #16, !dbg !13092
  store i64 %call3, i64* %pointlen, align 8, !dbg !13089
  %5 = load i64, i64* %pointlen, align 8, !dbg !13093
  %cmp = icmp ult i64 0, %5, !dbg !13095
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13096

land.lhs.true:                                    ; preds = %entry
  %6 = load i64, i64* %pointlen, align 8, !dbg !13097
  %cmp4 = icmp ule i64 %6, 16, !dbg !13098
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13099

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13100
  %decimal_point5 = getelementptr inbounds %struct.lconv, %struct.lconv* %7, i32 0, i32 0, !dbg !13102, !ctir !1237
  %8 = load i8*, i8** %decimal_point5, align 8, !dbg !13102, !ctir !143
  store i8* %8, i8** %decimal_point, align 8, !dbg !13103
  %9 = load i64, i64* %pointlen, align 8, !dbg !13104
  store i64 %9, i64* %decimal_pointlen, align 8, !dbg !13105
  br label %if.end, !dbg !13106

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13107
  %grouping6 = getelementptr inbounds %struct.lconv, %struct.lconv* %10, i32 0, i32 2, !dbg !13108, !ctir !1237
  %11 = load i8*, i8** %grouping6, align 8, !dbg !13108, !ctir !143
  store i8* %11, i8** %grouping, align 8, !dbg !13109
  %12 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13110
  %thousands_sep7 = getelementptr inbounds %struct.lconv, %struct.lconv* %12, i32 0, i32 1, !dbg !13112, !ctir !1237
  %13 = load i8*, i8** %thousands_sep7, align 8, !dbg !13112, !ctir !143
  %call8 = call i64 @strlen(i8* %13) #16, !dbg !13113
  %cmp9 = icmp ule i64 %call8, 16, !dbg !13114
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13115

if.then10:                                        ; preds = %if.end
  %14 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13116
  %thousands_sep11 = getelementptr inbounds %struct.lconv, %struct.lconv* %14, i32 0, i32 1, !dbg !13117, !ctir !1237
  %15 = load i8*, i8** %thousands_sep11, align 8, !dbg !13117, !ctir !143
  store i8* %15, i8** %thousands_sep, align 8, !dbg !13118
  br label %if.end12, !dbg !13119

if.end12:                                         ; preds = %if.then10, %if.end
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !13120
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 651, !dbg !13121, !ctir !144
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !13122, !ctir !144
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr13, i64 -3, !dbg !13123, !ctir !144
  store i8* %add.ptr14, i8** %psuffix, align 8, !dbg !13124
  %17 = load i8*, i8** %psuffix, align 8, !dbg !13125
  store i8* %17, i8** %p, align 8, !dbg !13126
  %18 = load i64, i64* %to_block_size.addr, align 8, !dbg !13127
  %19 = load i64, i64* %from_block_size.addr, align 8, !dbg !13129
  %cmp15 = icmp ule i64 %18, %19, !dbg !13130
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !13131

if.then16:                                        ; preds = %if.end12
  %20 = load i64, i64* %from_block_size.addr, align 8, !dbg !13132
  %21 = load i64, i64* %to_block_size.addr, align 8, !dbg !13135
  %rem = urem i64 %20, %21, !dbg !13136
  %cmp17 = icmp eq i64 %rem, 0, !dbg !13137
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !13138

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i64* %multiplier, metadata !13139, metadata !DIExpression()), !dbg !13141
  %22 = load i64, i64* %from_block_size.addr, align 8, !dbg !13142
  %23 = load i64, i64* %to_block_size.addr, align 8, !dbg !13143
  %div = udiv i64 %22, %23, !dbg !13144
  store i64 %div, i64* %multiplier, align 8, !dbg !13141
  %24 = load i64, i64* %n.addr, align 8, !dbg !13145
  %25 = load i64, i64* %multiplier, align 8, !dbg !13146
  %mul = mul i64 %24, %25, !dbg !13147
  store i64 %mul, i64* %amt, align 8, !dbg !13148
  %26 = load i64, i64* %amt, align 8, !dbg !13149
  %27 = load i64, i64* %multiplier, align 8, !dbg !13151
  %div19 = udiv i64 %26, %27, !dbg !13152
  %28 = load i64, i64* %n.addr, align 8, !dbg !13153
  %cmp20 = icmp eq i64 %div19, %28, !dbg !13154
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !13155

if.then21:                                        ; preds = %if.then18
  store i32 0, i32* %tenths, align 4, !dbg !13156
  store i32 0, i32* %rounding, align 4, !dbg !13158
  br label %use_integer_arithmetic, !dbg !13159

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !13160

if.end23:                                         ; preds = %if.end22, %if.then16
  br label %if.end44, !dbg !13161

if.else:                                          ; preds = %if.end12
  %29 = load i64, i64* %from_block_size.addr, align 8, !dbg !13162
  %cmp24 = icmp ne i64 %29, 0, !dbg !13164
  br i1 %cmp24, label %land.lhs.true25, label %if.end43, !dbg !13165

land.lhs.true25:                                  ; preds = %if.else
  %30 = load i64, i64* %to_block_size.addr, align 8, !dbg !13166
  %31 = load i64, i64* %from_block_size.addr, align 8, !dbg !13167
  %rem26 = urem i64 %30, %31, !dbg !13168
  %cmp27 = icmp eq i64 %rem26, 0, !dbg !13169
  br i1 %cmp27, label %if.then28, label %if.end43, !dbg !13170

if.then28:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !13171, metadata !DIExpression()), !dbg !13173
  %32 = load i64, i64* %to_block_size.addr, align 8, !dbg !13174
  %33 = load i64, i64* %from_block_size.addr, align 8, !dbg !13175
  %div29 = udiv i64 %32, %33, !dbg !13176
  store i64 %div29, i64* %divisor, align 8, !dbg !13173
  call void @llvm.dbg.declare(metadata i64* %r10, metadata !13177, metadata !DIExpression()), !dbg !13178
  %34 = load i64, i64* %n.addr, align 8, !dbg !13179
  %35 = load i64, i64* %divisor, align 8, !dbg !13180
  %rem30 = urem i64 %34, %35, !dbg !13181
  %mul31 = mul i64 %rem30, 10, !dbg !13182
  store i64 %mul31, i64* %r10, align 8, !dbg !13178
  call void @llvm.dbg.declare(metadata i64* %r2, metadata !13183, metadata !DIExpression()), !dbg !13184
  %36 = load i64, i64* %r10, align 8, !dbg !13185
  %37 = load i64, i64* %divisor, align 8, !dbg !13186
  %rem32 = urem i64 %36, %37, !dbg !13187
  %mul33 = mul i64 %rem32, 2, !dbg !13188
  store i64 %mul33, i64* %r2, align 8, !dbg !13184
  %38 = load i64, i64* %n.addr, align 8, !dbg !13189
  %39 = load i64, i64* %divisor, align 8, !dbg !13190
  %div34 = udiv i64 %38, %39, !dbg !13191
  store i64 %div34, i64* %amt, align 8, !dbg !13192
  %40 = load i64, i64* %r10, align 8, !dbg !13193
  %41 = load i64, i64* %divisor, align 8, !dbg !13194
  %div35 = udiv i64 %40, %41, !dbg !13195
  %conv = trunc i64 %div35 to i32, !dbg !13193
  store i32 %conv, i32* %tenths, align 4, !dbg !13196
  %42 = load i64, i64* %r2, align 8, !dbg !13197
  %43 = load i64, i64* %divisor, align 8, !dbg !13198
  %cmp36 = icmp ult i64 %42, %43, !dbg !13199
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !13197

cond.true:                                        ; preds = %if.then28
  %44 = load i64, i64* %r2, align 8, !dbg !13200
  %cmp38 = icmp ult i64 0, %44, !dbg !13201
  %conv39 = zext i1 %cmp38 to i32, !dbg !13201
  br label %cond.end, !dbg !13197

cond.false:                                       ; preds = %if.then28
  %45 = load i64, i64* %divisor, align 8, !dbg !13202
  %46 = load i64, i64* %r2, align 8, !dbg !13203
  %cmp40 = icmp ult i64 %45, %46, !dbg !13204
  %conv41 = zext i1 %cmp40 to i32, !dbg !13204
  %add = add nsw i32 2, %conv41, !dbg !13205
  br label %cond.end, !dbg !13197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond42 = phi i32 [ %conv39, %cond.true ], [ %add, %cond.false ], !dbg !13197
  store i32 %cond42, i32* %rounding, align 4, !dbg !13206
  br label %use_integer_arithmetic, !dbg !13207

if.end43:                                         ; preds = %land.lhs.true25, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end23
  call void @llvm.dbg.declare(metadata x86_fp80* %dto_block_size, metadata !13208, metadata !DIExpression()), !dbg !13210
  %47 = load i64, i64* %to_block_size.addr, align 8, !dbg !13211
  %conv45 = uitofp i64 %47 to x86_fp80, !dbg !13211
  store x86_fp80 %conv45, x86_fp80* %dto_block_size, align 16, !dbg !13210
  call void @llvm.dbg.declare(metadata x86_fp80* %damt, metadata !13212, metadata !DIExpression()), !dbg !13213
  %48 = load i64, i64* %n.addr, align 8, !dbg !13214
  %conv46 = uitofp i64 %48 to x86_fp80, !dbg !13214
  %49 = load i64, i64* %from_block_size.addr, align 8, !dbg !13215
  %conv47 = uitofp i64 %49 to x86_fp80, !dbg !13215
  %50 = load x86_fp80, x86_fp80* %dto_block_size, align 16, !dbg !13216
  %div48 = fdiv x86_fp80 %conv47, %50, !dbg !13217
  %mul49 = fmul x86_fp80 %conv46, %div48, !dbg !13218
  store x86_fp80 %mul49, x86_fp80* %damt, align 16, !dbg !13213
  call void @llvm.dbg.declare(metadata i64* %buflen, metadata !13219, metadata !DIExpression()), !dbg !13220
  call void @llvm.dbg.declare(metadata i64* %nonintegerlen, metadata !13221, metadata !DIExpression()), !dbg !13222
  %51 = load i32, i32* %opts.addr, align 4, !dbg !13223
  %and50 = and i32 %51, 16, !dbg !13225
  %tobool51 = icmp ne i32 %and50, 0, !dbg !13225
  br i1 %tobool51, label %if.else56, label %if.then52, !dbg !13226

if.then52:                                        ; preds = %if.end44
  %52 = load i8*, i8** %buf.addr, align 8, !dbg !13227
  %53 = load i32, i32* %inexact_style, align 4, !dbg !13229
  %54 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13230
  %call53 = call x86_fp80 @adjust_value(i32 %53, x86_fp80 %54), !dbg !13231
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.330, i64 0, i64 0), x86_fp80 %call53) #13, !dbg !13232
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !13233
  %call55 = call i64 @strlen(i8* %55) #16, !dbg !13234
  store i64 %call55, i64* %buflen, align 8, !dbg !13235
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13236
  br label %if.end90, !dbg !13237

if.else56:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata x86_fp80* %e, metadata !13238, metadata !DIExpression()), !dbg !13240
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %e, align 16, !dbg !13240
  store i32 0, i32* %exponent, align 4, !dbg !13241
  br label %do.body, !dbg !13242

do.body:                                          ; preds = %land.end, %if.else56
  %56 = load i32, i32* %base, align 4, !dbg !13243
  %conv57 = uitofp i32 %56 to x86_fp80, !dbg !13243
  %57 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13245
  %mul58 = fmul x86_fp80 %57, %conv57, !dbg !13245
  store x86_fp80 %mul58, x86_fp80* %e, align 16, !dbg !13245
  %58 = load i32, i32* %exponent, align 4, !dbg !13246
  %inc = add nsw i32 %58, 1, !dbg !13246
  store i32 %inc, i32* %exponent, align 4, !dbg !13246
  br label %do.cond, !dbg !13247

do.cond:                                          ; preds = %do.body
  %59 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13248
  %60 = load i32, i32* %base, align 4, !dbg !13249
  %conv59 = uitofp i32 %60 to x86_fp80, !dbg !13249
  %mul60 = fmul x86_fp80 %59, %conv59, !dbg !13250
  %61 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13251
  %cmp61 = fcmp ole x86_fp80 %mul60, %61, !dbg !13252
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !13253

land.rhs:                                         ; preds = %do.cond
  %62 = load i32, i32* %exponent, align 4, !dbg !13254
  %63 = load i32, i32* %exponent_max, align 4, !dbg !13255
  %cmp63 = icmp slt i32 %62, %63, !dbg !13256
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %64 = phi i1 [ false, %do.cond ], [ %cmp63, %land.rhs ], !dbg !13257
  br i1 %64, label %do.body, label %do.end, !dbg !13247, !llvm.loop !13258

do.end:                                           ; preds = %land.end
  %65 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13260
  %66 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13261
  %div65 = fdiv x86_fp80 %66, %65, !dbg !13261
  store x86_fp80 %div65, x86_fp80* %damt, align 16, !dbg !13261
  %67 = load i8*, i8** %buf.addr, align 8, !dbg !13262
  %68 = load i32, i32* %inexact_style, align 4, !dbg !13263
  %69 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13264
  %call66 = call x86_fp80 @adjust_value(i32 %68, x86_fp80 %69), !dbg !13265
  %call67 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.331, i64 0, i64 0), x86_fp80 %call66) #13, !dbg !13266
  %70 = load i8*, i8** %buf.addr, align 8, !dbg !13267
  %call68 = call i64 @strlen(i8* %70) #16, !dbg !13268
  store i64 %call68, i64* %buflen, align 8, !dbg !13269
  %71 = load i64, i64* %decimal_pointlen, align 8, !dbg !13270
  %add69 = add i64 %71, 1, !dbg !13271
  store i64 %add69, i64* %nonintegerlen, align 8, !dbg !13272
  %72 = load i64, i64* %nonintegerlen, align 8, !dbg !13273
  %add70 = add i64 1, %72, !dbg !13275
  %73 = load i32, i32* %opts.addr, align 4, !dbg !13276
  %and71 = and i32 %73, 32, !dbg !13277
  %tobool72 = icmp ne i32 %and71, 0, !dbg !13278
  %lnot = xor i1 %tobool72, true, !dbg !13278
  %lnot.ext = zext i1 %lnot to i32, !dbg !13278
  %conv73 = sext i32 %lnot.ext to i64, !dbg !13278
  %add74 = add i64 %add70, %conv73, !dbg !13279
  %74 = load i64, i64* %buflen, align 8, !dbg !13280
  %cmp75 = icmp ult i64 %add74, %74, !dbg !13281
  br i1 %cmp75, label %if.then83, label %lor.lhs.false, !dbg !13282

lor.lhs.false:                                    ; preds = %do.end
  %75 = load i32, i32* %opts.addr, align 4, !dbg !13283
  %and77 = and i32 %75, 8, !dbg !13284
  %tobool78 = icmp ne i32 %and77, 0, !dbg !13284
  br i1 %tobool78, label %land.lhs.true79, label %if.end89, !dbg !13285

land.lhs.true79:                                  ; preds = %lor.lhs.false
  %76 = load i8*, i8** %buf.addr, align 8, !dbg !13286
  %77 = load i64, i64* %buflen, align 8, !dbg !13287
  %sub = sub i64 %77, 1, !dbg !13288
  %arrayidx = getelementptr inbounds i8, i8* %76, i64 %sub, !dbg !13286, !ctir !143
  %78 = load i8, i8* %arrayidx, align 1, !dbg !13286
  %conv80 = sext i8 %78 to i32, !dbg !13286
  %cmp81 = icmp eq i32 %conv80, 48, !dbg !13289
  br i1 %cmp81, label %if.then83, label %if.end89, !dbg !13290

if.then83:                                        ; preds = %land.lhs.true79, %do.end
  %79 = load i8*, i8** %buf.addr, align 8, !dbg !13291
  %80 = load i32, i32* %inexact_style, align 4, !dbg !13293
  %81 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13294
  %mul84 = fmul x86_fp80 %81, 0xK4002A000000000000000, !dbg !13295
  %call85 = call x86_fp80 @adjust_value(i32 %80, x86_fp80 %mul84), !dbg !13296
  %div86 = fdiv x86_fp80 %call85, 0xK4002A000000000000000, !dbg !13297
  %call87 = call i32 (i8*, i8*, ...) @sprintf(i8* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.330, i64 0, i64 0), x86_fp80 %div86) #13, !dbg !13298
  %82 = load i8*, i8** %buf.addr, align 8, !dbg !13299
  %call88 = call i64 @strlen(i8* %82) #16, !dbg !13300
  store i64 %call88, i64* %buflen, align 8, !dbg !13301
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13302
  br label %if.end89, !dbg !13303

if.end89:                                         ; preds = %if.then83, %land.lhs.true79, %lor.lhs.false
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then52
  %83 = load i8*, i8** %psuffix, align 8, !dbg !13304
  %84 = load i64, i64* %buflen, align 8, !dbg !13305
  %idx.neg = sub i64 0, %84, !dbg !13306
  %add.ptr91 = getelementptr inbounds i8, i8* %83, i64 %idx.neg, !dbg !13306, !ctir !144
  store i8* %add.ptr91, i8** %p, align 8, !dbg !13307
  %85 = load i8*, i8** %p, align 8, !dbg !13308
  %86 = load i8*, i8** %buf.addr, align 8, !dbg !13309
  %87 = load i64, i64* %buflen, align 8, !dbg !13310
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 %87, i1 false), !dbg !13311
  %88 = load i8*, i8** %p, align 8, !dbg !13312
  %89 = load i64, i64* %buflen, align 8, !dbg !13313
  %add.ptr92 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !13314, !ctir !144
  %90 = load i64, i64* %nonintegerlen, align 8, !dbg !13315
  %idx.neg93 = sub i64 0, %90, !dbg !13316
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr92, i64 %idx.neg93, !dbg !13316, !ctir !144
  store i8* %add.ptr94, i8** %integerlim, align 8, !dbg !13317
  br label %do_grouping, !dbg !13318

use_integer_arithmetic:                           ; preds = %cond.end, %if.then21
  call void @llvm.dbg.label(metadata !13319), !dbg !13320
  %91 = load i32, i32* %opts.addr, align 4, !dbg !13321
  %and95 = and i32 %91, 16, !dbg !13324
  %tobool96 = icmp ne i32 %and95, 0, !dbg !13324
  br i1 %tobool96, label %if.then97, label %if.end179, !dbg !13325

if.then97:                                        ; preds = %use_integer_arithmetic
  store i32 0, i32* %exponent, align 4, !dbg !13326
  %92 = load i32, i32* %base, align 4, !dbg !13328
  %conv98 = zext i32 %92 to i64, !dbg !13328
  %93 = load i64, i64* %amt, align 8, !dbg !13330
  %cmp99 = icmp ule i64 %conv98, %93, !dbg !13331
  br i1 %cmp99, label %if.then101, label %if.end178, !dbg !13332

if.then101:                                       ; preds = %if.then97
  br label %do.body102, !dbg !13333

do.body102:                                       ; preds = %land.end138, %if.then101
  call void @llvm.dbg.declare(metadata i32* %r10103, metadata !13335, metadata !DIExpression()), !dbg !13337
  %94 = load i64, i64* %amt, align 8, !dbg !13338
  %95 = load i32, i32* %base, align 4, !dbg !13339
  %conv104 = zext i32 %95 to i64, !dbg !13339
  %rem105 = urem i64 %94, %conv104, !dbg !13340
  %mul106 = mul i64 %rem105, 10, !dbg !13341
  %96 = load i32, i32* %tenths, align 4, !dbg !13342
  %conv107 = sext i32 %96 to i64, !dbg !13342
  %add108 = add i64 %mul106, %conv107, !dbg !13343
  %conv109 = trunc i64 %add108 to i32, !dbg !13344
  store i32 %conv109, i32* %r10103, align 4, !dbg !13337
  call void @llvm.dbg.declare(metadata i32* %r2110, metadata !13345, metadata !DIExpression()), !dbg !13346
  %97 = load i32, i32* %r10103, align 4, !dbg !13347
  %98 = load i32, i32* %base, align 4, !dbg !13348
  %rem111 = urem i32 %97, %98, !dbg !13349
  %mul112 = mul i32 %rem111, 2, !dbg !13350
  %99 = load i32, i32* %rounding, align 4, !dbg !13351
  %shr = ashr i32 %99, 1, !dbg !13352
  %add113 = add i32 %mul112, %shr, !dbg !13353
  store i32 %add113, i32* %r2110, align 4, !dbg !13346
  %100 = load i32, i32* %base, align 4, !dbg !13354
  %conv114 = zext i32 %100 to i64, !dbg !13354
  %101 = load i64, i64* %amt, align 8, !dbg !13355
  %div115 = udiv i64 %101, %conv114, !dbg !13355
  store i64 %div115, i64* %amt, align 8, !dbg !13355
  %102 = load i32, i32* %r10103, align 4, !dbg !13356
  %103 = load i32, i32* %base, align 4, !dbg !13357
  %div116 = udiv i32 %102, %103, !dbg !13358
  store i32 %div116, i32* %tenths, align 4, !dbg !13359
  %104 = load i32, i32* %r2110, align 4, !dbg !13360
  %105 = load i32, i32* %base, align 4, !dbg !13361
  %cmp117 = icmp ult i32 %104, %105, !dbg !13362
  br i1 %cmp117, label %cond.true119, label %cond.false123, !dbg !13360

cond.true119:                                     ; preds = %do.body102
  %106 = load i32, i32* %r2110, align 4, !dbg !13363
  %107 = load i32, i32* %rounding, align 4, !dbg !13364
  %add120 = add i32 %106, %107, !dbg !13365
  %cmp121 = icmp ne i32 %add120, 0, !dbg !13366
  %conv122 = zext i1 %cmp121 to i32, !dbg !13366
  br label %cond.end128, !dbg !13360

cond.false123:                                    ; preds = %do.body102
  %108 = load i32, i32* %base, align 4, !dbg !13367
  %109 = load i32, i32* %r2110, align 4, !dbg !13368
  %110 = load i32, i32* %rounding, align 4, !dbg !13369
  %add124 = add i32 %109, %110, !dbg !13370
  %cmp125 = icmp ult i32 %108, %add124, !dbg !13371
  %conv126 = zext i1 %cmp125 to i32, !dbg !13371
  %add127 = add nsw i32 2, %conv126, !dbg !13372
  br label %cond.end128, !dbg !13360

cond.end128:                                      ; preds = %cond.false123, %cond.true119
  %cond129 = phi i32 [ %conv122, %cond.true119 ], [ %add127, %cond.false123 ], !dbg !13360
  store i32 %cond129, i32* %rounding, align 4, !dbg !13373
  %111 = load i32, i32* %exponent, align 4, !dbg !13374
  %inc130 = add nsw i32 %111, 1, !dbg !13374
  store i32 %inc130, i32* %exponent, align 4, !dbg !13374
  br label %do.cond131, !dbg !13375

do.cond131:                                       ; preds = %cond.end128
  %112 = load i32, i32* %base, align 4, !dbg !13376
  %conv132 = zext i32 %112 to i64, !dbg !13376
  %113 = load i64, i64* %amt, align 8, !dbg !13377
  %cmp133 = icmp ule i64 %conv132, %113, !dbg !13378
  br i1 %cmp133, label %land.rhs135, label %land.end138, !dbg !13379

land.rhs135:                                      ; preds = %do.cond131
  %114 = load i32, i32* %exponent, align 4, !dbg !13380
  %115 = load i32, i32* %exponent_max, align 4, !dbg !13381
  %cmp136 = icmp slt i32 %114, %115, !dbg !13382
  br label %land.end138

land.end138:                                      ; preds = %land.rhs135, %do.cond131
  %116 = phi i1 [ false, %do.cond131 ], [ %cmp136, %land.rhs135 ], !dbg !13383
  br i1 %116, label %do.body102, label %do.end139, !dbg !13375, !llvm.loop !13384

do.end139:                                        ; preds = %land.end138
  %117 = load i64, i64* %amt, align 8, !dbg !13386
  %cmp140 = icmp ult i64 %117, 10, !dbg !13388
  br i1 %cmp140, label %if.then142, label %if.end177, !dbg !13389

if.then142:                                       ; preds = %do.end139
  %118 = load i32, i32* %inexact_style, align 4, !dbg !13390
  %cmp143 = icmp eq i32 %118, 1, !dbg !13393
  br i1 %cmp143, label %cond.true145, label %cond.false150, !dbg !13394

cond.true145:                                     ; preds = %if.then142
  %119 = load i32, i32* %rounding, align 4, !dbg !13395
  %120 = load i32, i32* %tenths, align 4, !dbg !13396
  %and146 = and i32 %120, 1, !dbg !13397
  %add147 = add nsw i32 %119, %and146, !dbg !13398
  %cmp148 = icmp slt i32 2, %add147, !dbg !13399
  br i1 %cmp148, label %if.then156, label %if.end163, !dbg !13390

cond.false150:                                    ; preds = %if.then142
  %121 = load i32, i32* %inexact_style, align 4, !dbg !13400
  %cmp151 = icmp eq i32 %121, 0, !dbg !13401
  br i1 %cmp151, label %land.lhs.true153, label %if.end163, !dbg !13402

land.lhs.true153:                                 ; preds = %cond.false150
  %122 = load i32, i32* %rounding, align 4, !dbg !13403
  %cmp154 = icmp slt i32 0, %122, !dbg !13404
  br i1 %cmp154, label %if.then156, label %if.end163, !dbg !13394

if.then156:                                       ; preds = %land.lhs.true153, %cond.true145
  %123 = load i32, i32* %tenths, align 4, !dbg !13405
  %inc157 = add nsw i32 %123, 1, !dbg !13405
  store i32 %inc157, i32* %tenths, align 4, !dbg !13405
  store i32 0, i32* %rounding, align 4, !dbg !13407
  %124 = load i32, i32* %tenths, align 4, !dbg !13408
  %cmp158 = icmp eq i32 %124, 10, !dbg !13410
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !13411

if.then160:                                       ; preds = %if.then156
  %125 = load i64, i64* %amt, align 8, !dbg !13412
  %inc161 = add i64 %125, 1, !dbg !13412
  store i64 %inc161, i64* %amt, align 8, !dbg !13412
  store i32 0, i32* %tenths, align 4, !dbg !13414
  br label %if.end162, !dbg !13415

if.end162:                                        ; preds = %if.then160, %if.then156
  br label %if.end163, !dbg !13416

if.end163:                                        ; preds = %if.end162, %land.lhs.true153, %cond.false150, %cond.true145
  %126 = load i64, i64* %amt, align 8, !dbg !13417
  %cmp164 = icmp ult i64 %126, 10, !dbg !13419
  br i1 %cmp164, label %land.lhs.true166, label %if.end176, !dbg !13420

land.lhs.true166:                                 ; preds = %if.end163
  %127 = load i32, i32* %tenths, align 4, !dbg !13421
  %tobool167 = icmp ne i32 %127, 0, !dbg !13421
  br i1 %tobool167, label %if.then171, label %lor.lhs.false168, !dbg !13422

lor.lhs.false168:                                 ; preds = %land.lhs.true166
  %128 = load i32, i32* %opts.addr, align 4, !dbg !13423
  %and169 = and i32 %128, 8, !dbg !13424
  %tobool170 = icmp ne i32 %and169, 0, !dbg !13424
  br i1 %tobool170, label %if.end176, label %if.then171, !dbg !13425

if.then171:                                       ; preds = %lor.lhs.false168, %land.lhs.true166
  %129 = load i32, i32* %tenths, align 4, !dbg !13426
  %add172 = add nsw i32 48, %129, !dbg !13428
  %conv173 = trunc i32 %add172 to i8, !dbg !13429
  %130 = load i8*, i8** %p, align 8, !dbg !13430
  %incdec.ptr = getelementptr inbounds i8, i8* %130, i32 -1, !dbg !13430, !ctir !144
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13430
  store i8 %conv173, i8* %incdec.ptr, align 1, !dbg !13431, !ctir !144
  %131 = load i64, i64* %decimal_pointlen, align 8, !dbg !13432
  %132 = load i8*, i8** %p, align 8, !dbg !13433
  %idx.neg174 = sub i64 0, %131, !dbg !13433
  %add.ptr175 = getelementptr inbounds i8, i8* %132, i64 %idx.neg174, !dbg !13433, !ctir !144
  store i8* %add.ptr175, i8** %p, align 8, !dbg !13433
  %133 = load i8*, i8** %p, align 8, !dbg !13434
  %134 = load i8*, i8** %decimal_point, align 8, !dbg !13435
  %135 = load i64, i64* %decimal_pointlen, align 8, !dbg !13436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %133, i8* align 1 %134, i64 %135, i1 false), !dbg !13437
  store i32 0, i32* %rounding, align 4, !dbg !13438
  store i32 0, i32* %tenths, align 4, !dbg !13439
  br label %if.end176, !dbg !13440

if.end176:                                        ; preds = %if.then171, %lor.lhs.false168, %if.end163
  br label %if.end177, !dbg !13441

if.end177:                                        ; preds = %if.end176, %do.end139
  br label %if.end178, !dbg !13442

if.end178:                                        ; preds = %if.end177, %if.then97
  br label %if.end179, !dbg !13443

if.end179:                                        ; preds = %if.end178, %use_integer_arithmetic
  %136 = load i32, i32* %inexact_style, align 4, !dbg !13444
  %cmp180 = icmp eq i32 %136, 1, !dbg !13446
  br i1 %cmp180, label %cond.true182, label %cond.false191, !dbg !13447

cond.true182:                                     ; preds = %if.end179
  %137 = load i32, i32* %tenths, align 4, !dbg !13448
  %138 = load i32, i32* %rounding, align 4, !dbg !13449
  %conv183 = sext i32 %138 to i64, !dbg !13449
  %139 = load i64, i64* %amt, align 8, !dbg !13450
  %and184 = and i64 %139, 1, !dbg !13451
  %add185 = add i64 %conv183, %and184, !dbg !13452
  %cmp186 = icmp ult i64 0, %add185, !dbg !13453
  %conv187 = zext i1 %cmp186 to i32, !dbg !13453
  %add188 = add nsw i32 %137, %conv187, !dbg !13454
  %cmp189 = icmp slt i32 5, %add188, !dbg !13455
  br i1 %cmp189, label %if.then198, label %if.end219, !dbg !13444

cond.false191:                                    ; preds = %if.end179
  %140 = load i32, i32* %inexact_style, align 4, !dbg !13456
  %cmp192 = icmp eq i32 %140, 0, !dbg !13457
  br i1 %cmp192, label %land.lhs.true194, label %if.end219, !dbg !13458

land.lhs.true194:                                 ; preds = %cond.false191
  %141 = load i32, i32* %tenths, align 4, !dbg !13459
  %142 = load i32, i32* %rounding, align 4, !dbg !13460
  %add195 = add nsw i32 %141, %142, !dbg !13461
  %cmp196 = icmp slt i32 0, %add195, !dbg !13462
  br i1 %cmp196, label %if.then198, label %if.end219, !dbg !13447

if.then198:                                       ; preds = %land.lhs.true194, %cond.true182
  %143 = load i64, i64* %amt, align 8, !dbg !13463
  %inc199 = add i64 %143, 1, !dbg !13463
  store i64 %inc199, i64* %amt, align 8, !dbg !13463
  %144 = load i32, i32* %opts.addr, align 4, !dbg !13465
  %and200 = and i32 %144, 16, !dbg !13467
  %tobool201 = icmp ne i32 %and200, 0, !dbg !13467
  br i1 %tobool201, label %land.lhs.true202, label %if.end218, !dbg !13468

land.lhs.true202:                                 ; preds = %if.then198
  %145 = load i64, i64* %amt, align 8, !dbg !13469
  %146 = load i32, i32* %base, align 4, !dbg !13470
  %conv203 = zext i32 %146 to i64, !dbg !13470
  %cmp204 = icmp eq i64 %145, %conv203, !dbg !13471
  br i1 %cmp204, label %land.lhs.true206, label %if.end218, !dbg !13472

land.lhs.true206:                                 ; preds = %land.lhs.true202
  %147 = load i32, i32* %exponent, align 4, !dbg !13473
  %148 = load i32, i32* %exponent_max, align 4, !dbg !13474
  %cmp207 = icmp slt i32 %147, %148, !dbg !13475
  br i1 %cmp207, label %if.then209, label %if.end218, !dbg !13476

if.then209:                                       ; preds = %land.lhs.true206
  %149 = load i32, i32* %exponent, align 4, !dbg !13477
  %inc210 = add nsw i32 %149, 1, !dbg !13477
  store i32 %inc210, i32* %exponent, align 4, !dbg !13477
  %150 = load i32, i32* %opts.addr, align 4, !dbg !13479
  %and211 = and i32 %150, 8, !dbg !13481
  %tobool212 = icmp ne i32 %and211, 0, !dbg !13481
  br i1 %tobool212, label %if.end217, label %if.then213, !dbg !13482

if.then213:                                       ; preds = %if.then209
  %151 = load i8*, i8** %p, align 8, !dbg !13483
  %incdec.ptr214 = getelementptr inbounds i8, i8* %151, i32 -1, !dbg !13483, !ctir !144
  store i8* %incdec.ptr214, i8** %p, align 8, !dbg !13483
  store i8 48, i8* %incdec.ptr214, align 1, !dbg !13485, !ctir !144
  %152 = load i64, i64* %decimal_pointlen, align 8, !dbg !13486
  %153 = load i8*, i8** %p, align 8, !dbg !13487
  %idx.neg215 = sub i64 0, %152, !dbg !13487
  %add.ptr216 = getelementptr inbounds i8, i8* %153, i64 %idx.neg215, !dbg !13487, !ctir !144
  store i8* %add.ptr216, i8** %p, align 8, !dbg !13487
  %154 = load i8*, i8** %p, align 8, !dbg !13488
  %155 = load i8*, i8** %decimal_point, align 8, !dbg !13489
  %156 = load i64, i64* %decimal_pointlen, align 8, !dbg !13490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %155, i64 %156, i1 false), !dbg !13491
  br label %if.end217, !dbg !13492

if.end217:                                        ; preds = %if.then213, %if.then209
  store i64 1, i64* %amt, align 8, !dbg !13493
  br label %if.end218, !dbg !13494

if.end218:                                        ; preds = %if.end217, %land.lhs.true206, %land.lhs.true202, %if.then198
  br label %if.end219, !dbg !13495

if.end219:                                        ; preds = %if.end218, %land.lhs.true194, %cond.false191, %cond.true182
  %157 = load i8*, i8** %p, align 8, !dbg !13496
  store i8* %157, i8** %integerlim, align 8, !dbg !13497
  br label %do.body220, !dbg !13498

do.body220:                                       ; preds = %do.cond226, %if.end219
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !13499, metadata !DIExpression()), !dbg !13501
  %158 = load i64, i64* %amt, align 8, !dbg !13502
  %rem221 = urem i64 %158, 10, !dbg !13503
  %conv222 = trunc i64 %rem221 to i32, !dbg !13502
  store i32 %conv222, i32* %digit, align 4, !dbg !13501
  %159 = load i32, i32* %digit, align 4, !dbg !13504
  %add223 = add nsw i32 %159, 48, !dbg !13505
  %conv224 = trunc i32 %add223 to i8, !dbg !13504
  %160 = load i8*, i8** %p, align 8, !dbg !13506
  %incdec.ptr225 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !13506, !ctir !144
  store i8* %incdec.ptr225, i8** %p, align 8, !dbg !13506
  store i8 %conv224, i8* %incdec.ptr225, align 1, !dbg !13507, !ctir !144
  br label %do.cond226, !dbg !13508

do.cond226:                                       ; preds = %do.body220
  %161 = load i64, i64* %amt, align 8, !dbg !13509
  %div227 = udiv i64 %161, 10, !dbg !13509
  store i64 %div227, i64* %amt, align 8, !dbg !13509
  %cmp228 = icmp ne i64 %div227, 0, !dbg !13510
  br i1 %cmp228, label %do.body220, label %do.end230, !dbg !13508, !llvm.loop !13511

do.end230:                                        ; preds = %do.cond226
  br label %do_grouping, !dbg !13513

do_grouping:                                      ; preds = %do.end230, %if.end90
  call void @llvm.dbg.label(metadata !13514), !dbg !13515
  %162 = load i32, i32* %opts.addr, align 4, !dbg !13516
  %and231 = and i32 %162, 4, !dbg !13518
  %tobool232 = icmp ne i32 %and231, 0, !dbg !13518
  br i1 %tobool232, label %if.then233, label %if.end235, !dbg !13519

if.then233:                                       ; preds = %do_grouping
  %163 = load i8*, i8** %p, align 8, !dbg !13520
  %164 = load i8*, i8** %integerlim, align 8, !dbg !13521
  %165 = load i8*, i8** %p, align 8, !dbg !13522
  %sub.ptr.lhs.cast = ptrtoint i8* %164 to i64, !dbg !13523
  %sub.ptr.rhs.cast = ptrtoint i8* %165 to i64, !dbg !13523
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13523
  %166 = load i8*, i8** %grouping, align 8, !dbg !13524
  %167 = load i8*, i8** %thousands_sep, align 8, !dbg !13525
  %call234 = call i8* @group_number(i8* %163, i64 %sub.ptr.sub, i8* %166, i8* %167), !dbg !13526
  store i8* %call234, i8** %p, align 8, !dbg !13527
  br label %if.end235, !dbg !13528

if.end235:                                        ; preds = %if.then233, %do_grouping
  %168 = load i32, i32* %opts.addr, align 4, !dbg !13529
  %and236 = and i32 %168, 128, !dbg !13531
  %tobool237 = icmp ne i32 %and236, 0, !dbg !13531
  br i1 %tobool237, label %if.then238, label %if.end288, !dbg !13532

if.then238:                                       ; preds = %if.end235
  %169 = load i32, i32* %exponent, align 4, !dbg !13533
  %cmp239 = icmp slt i32 %169, 0, !dbg !13536
  br i1 %cmp239, label %if.then241, label %if.end251, !dbg !13537

if.then241:                                       ; preds = %if.then238
  call void @llvm.dbg.declare(metadata i64* %power, metadata !13538, metadata !DIExpression()), !dbg !13540
  store i32 0, i32* %exponent, align 4, !dbg !13541
  store i64 1, i64* %power, align 8, !dbg !13542
  br label %for.cond, !dbg !13544

for.cond:                                         ; preds = %for.inc, %if.then241
  %170 = load i64, i64* %power, align 8, !dbg !13545
  %171 = load i64, i64* %to_block_size.addr, align 8, !dbg !13547
  %cmp242 = icmp ult i64 %170, %171, !dbg !13548
  br i1 %cmp242, label %for.body, label %for.end, !dbg !13549

for.body:                                         ; preds = %for.cond
  %172 = load i32, i32* %exponent, align 4, !dbg !13550
  %inc244 = add nsw i32 %172, 1, !dbg !13550
  store i32 %inc244, i32* %exponent, align 4, !dbg !13550
  %173 = load i32, i32* %exponent_max, align 4, !dbg !13552
  %cmp245 = icmp eq i32 %inc244, %173, !dbg !13553
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !13554

if.then247:                                       ; preds = %for.body
  br label %for.end, !dbg !13555

if.end248:                                        ; preds = %for.body
  br label %for.inc, !dbg !13552

for.inc:                                          ; preds = %if.end248
  %174 = load i32, i32* %base, align 4, !dbg !13556
  %conv249 = zext i32 %174 to i64, !dbg !13556
  %175 = load i64, i64* %power, align 8, !dbg !13557
  %mul250 = mul i64 %175, %conv249, !dbg !13557
  store i64 %mul250, i64* %power, align 8, !dbg !13557
  br label %for.cond, !dbg !13558, !llvm.loop !13559

for.end:                                          ; preds = %if.then247, %for.cond
  br label %if.end251, !dbg !13561

if.end251:                                        ; preds = %for.end, %if.then238
  %176 = load i32, i32* %exponent, align 4, !dbg !13562
  %177 = load i32, i32* %opts.addr, align 4, !dbg !13564
  %and252 = and i32 %177, 256, !dbg !13565
  %or = or i32 %176, %and252, !dbg !13566
  %tobool253 = icmp ne i32 %or, 0, !dbg !13566
  br i1 %tobool253, label %land.lhs.true254, label %if.end259, !dbg !13567

land.lhs.true254:                                 ; preds = %if.end251
  %178 = load i32, i32* %opts.addr, align 4, !dbg !13568
  %and255 = and i32 %178, 64, !dbg !13569
  %tobool256 = icmp ne i32 %and255, 0, !dbg !13569
  br i1 %tobool256, label %if.then257, label %if.end259, !dbg !13570

if.then257:                                       ; preds = %land.lhs.true254
  %179 = load i8*, i8** %psuffix, align 8, !dbg !13571
  %incdec.ptr258 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !13571, !ctir !144
  store i8* %incdec.ptr258, i8** %psuffix, align 8, !dbg !13571
  store i8 32, i8* %179, align 1, !dbg !13572, !ctir !144
  br label %if.end259, !dbg !13573

if.end259:                                        ; preds = %if.then257, %land.lhs.true254, %if.end251
  %180 = load i32, i32* %exponent, align 4, !dbg !13574
  %tobool260 = icmp ne i32 %180, 0, !dbg !13574
  br i1 %tobool260, label %if.then261, label %if.end275, !dbg !13576

if.then261:                                       ; preds = %if.end259
  %181 = load i32, i32* %opts.addr, align 4, !dbg !13577
  %and262 = and i32 %181, 32, !dbg !13578
  %tobool263 = icmp ne i32 %and262, 0, !dbg !13578
  br i1 %tobool263, label %cond.false268, label %land.lhs.true264, !dbg !13579

land.lhs.true264:                                 ; preds = %if.then261
  %182 = load i32, i32* %exponent, align 4, !dbg !13580
  %cmp265 = icmp eq i32 %182, 1, !dbg !13581
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !13582

cond.true267:                                     ; preds = %land.lhs.true264
  br label %cond.end271, !dbg !13582

cond.false268:                                    ; preds = %land.lhs.true264, %if.then261
  %183 = load i32, i32* %exponent, align 4, !dbg !13583
  %idxprom = sext i32 %183 to i64, !dbg !13584
  %arrayidx269 = getelementptr inbounds [9 x i8], [9 x i8]* @power_letter, i64 0, i64 %idxprom, !dbg !13584, !ctir !1266
  %184 = load i8, i8* %arrayidx269, align 1, !dbg !13584
  %conv270 = sext i8 %184 to i32, !dbg !13584
  br label %cond.end271, !dbg !13582

cond.end271:                                      ; preds = %cond.false268, %cond.true267
  %cond272 = phi i32 [ 107, %cond.true267 ], [ %conv270, %cond.false268 ], !dbg !13582
  %conv273 = trunc i32 %cond272 to i8, !dbg !13585
  %185 = load i8*, i8** %psuffix, align 8, !dbg !13586
  %incdec.ptr274 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !13586, !ctir !144
  store i8* %incdec.ptr274, i8** %psuffix, align 8, !dbg !13586
  store i8 %conv273, i8* %185, align 1, !dbg !13587, !ctir !144
  br label %if.end275, !dbg !13588

if.end275:                                        ; preds = %cond.end271, %if.end259
  %186 = load i32, i32* %opts.addr, align 4, !dbg !13589
  %and276 = and i32 %186, 256, !dbg !13591
  %tobool277 = icmp ne i32 %and276, 0, !dbg !13591
  br i1 %tobool277, label %if.then278, label %if.end287, !dbg !13592

if.then278:                                       ; preds = %if.end275
  %187 = load i32, i32* %opts.addr, align 4, !dbg !13593
  %and279 = and i32 %187, 32, !dbg !13596
  %tobool280 = icmp ne i32 %and279, 0, !dbg !13596
  br i1 %tobool280, label %land.lhs.true281, label %if.end285, !dbg !13597

land.lhs.true281:                                 ; preds = %if.then278
  %188 = load i32, i32* %exponent, align 4, !dbg !13598
  %tobool282 = icmp ne i32 %188, 0, !dbg !13598
  br i1 %tobool282, label %if.then283, label %if.end285, !dbg !13599

if.then283:                                       ; preds = %land.lhs.true281
  %189 = load i8*, i8** %psuffix, align 8, !dbg !13600
  %incdec.ptr284 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !13600, !ctir !144
  store i8* %incdec.ptr284, i8** %psuffix, align 8, !dbg !13600
  store i8 105, i8* %189, align 1, !dbg !13601, !ctir !144
  br label %if.end285, !dbg !13602

if.end285:                                        ; preds = %if.then283, %land.lhs.true281, %if.then278
  %190 = load i8*, i8** %psuffix, align 8, !dbg !13603
  %incdec.ptr286 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !13603, !ctir !144
  store i8* %incdec.ptr286, i8** %psuffix, align 8, !dbg !13603
  store i8 66, i8* %190, align 1, !dbg !13604, !ctir !144
  br label %if.end287, !dbg !13605

if.end287:                                        ; preds = %if.end285, %if.end275
  br label %if.end288, !dbg !13606

if.end288:                                        ; preds = %if.end287, %if.end235
  %191 = load i8*, i8** %psuffix, align 8, !dbg !13607
  store i8 0, i8* %191, align 1, !dbg !13608, !ctir !144
  %192 = load i8*, i8** %p, align 8, !dbg !13609
  ret i8* %192, !dbg !13610
}

; Function Attrs: nounwind
declare dso_local %struct.lconv* @localeconv() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal x86_fp80 @adjust_value(i32 %inexact_style, x86_fp80 %value) #0 !dbg !13611 {
entry:
  %inexact_style.addr = alloca i32, align 4
  %value.addr = alloca x86_fp80, align 16
  %u = alloca i64, align 8, !ctir !168
  store i32 %inexact_style, i32* %inexact_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inexact_style.addr, metadata !13614, metadata !DIExpression()), !dbg !13615
  store x86_fp80 %value, x86_fp80* %value.addr, align 16
  call void @llvm.dbg.declare(metadata x86_fp80* %value.addr, metadata !13616, metadata !DIExpression()), !dbg !13617
  %0 = load i32, i32* %inexact_style.addr, align 4, !dbg !13618
  %cmp = icmp ne i32 %0, 1, !dbg !13620
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13621

land.lhs.true:                                    ; preds = %entry
  %1 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13622
  %cmp1 = fcmp olt x86_fp80 %1, 0xK403EFFFFFFFFFFFFFFFF, !dbg !13623
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13624

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %u, metadata !13625, metadata !DIExpression()), !dbg !13627
  %2 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13628
  %conv = fptoui x86_fp80 %2 to i64, !dbg !13628
  store i64 %conv, i64* %u, align 8, !dbg !13627
  %3 = load i64, i64* %u, align 8, !dbg !13629
  %4 = load i32, i32* %inexact_style.addr, align 4, !dbg !13630
  %cmp2 = icmp eq i32 %4, 0, !dbg !13631
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !13632

land.rhs:                                         ; preds = %if.then
  %5 = load i64, i64* %u, align 8, !dbg !13633
  %conv4 = uitofp i64 %5 to x86_fp80, !dbg !13633
  %6 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13634
  %cmp5 = fcmp une x86_fp80 %conv4, %6, !dbg !13635
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %cmp5, %land.rhs ], !dbg !13636
  %land.ext = zext i1 %7 to i32, !dbg !13632
  %conv7 = sext i32 %land.ext to i64, !dbg !13637
  %add = add i64 %3, %conv7, !dbg !13638
  %conv8 = uitofp i64 %add to x86_fp80, !dbg !13629
  store x86_fp80 %conv8, x86_fp80* %value.addr, align 16, !dbg !13639
  br label %if.end, !dbg !13640

if.end:                                           ; preds = %land.end, %land.lhs.true, %entry
  %8 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13641
  ret x86_fp80 %8, !dbg !13642
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @group_number(i8* %number, i64 %numberlen, i8* %grouping, i8* %thousands_sep) #0 !dbg !13643 {
entry:
  %number.addr = alloca i8*, align 8
  %numberlen.addr = alloca i64, align 8
  %grouping.addr = alloca i8*, align 8
  %thousands_sep.addr = alloca i8*, align 8
  %d = alloca i8*, align 8, !ctir !143
  %grouplen = alloca i64, align 8, !ctir !149
  %thousands_seplen = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %buf = alloca [41 x i8], align 16, !ctir !346
  %g = alloca i8, align 1, !ctir !725
  store i8* %number, i8** %number.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %number.addr, metadata !13646, metadata !DIExpression()), !dbg !13647
  store i64 %numberlen, i64* %numberlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %numberlen.addr, metadata !13648, metadata !DIExpression()), !dbg !13649
  store i8* %grouping, i8** %grouping.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %grouping.addr, metadata !13650, metadata !DIExpression()), !dbg !13651
  store i8* %thousands_sep, i8** %thousands_sep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thousands_sep.addr, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.declare(metadata i8** %d, metadata !13654, metadata !DIExpression()), !dbg !13655
  call void @llvm.dbg.declare(metadata i64* %grouplen, metadata !13656, metadata !DIExpression()), !dbg !13657
  store i64 -1, i64* %grouplen, align 8, !dbg !13657
  call void @llvm.dbg.declare(metadata i64* %thousands_seplen, metadata !13658, metadata !DIExpression()), !dbg !13659
  %0 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !13660
  %call = call i64 @strlen(i8* %0) #16, !dbg !13661
  store i64 %call, i64* %thousands_seplen, align 8, !dbg !13659
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13662, metadata !DIExpression()), !dbg !13663
  %1 = load i64, i64* %numberlen.addr, align 8, !dbg !13664
  store i64 %1, i64* %i, align 8, !dbg !13663
  call void @llvm.dbg.declare(metadata [41 x i8]* %buf, metadata !13665, metadata !DIExpression()), !dbg !13666
  %arraydecay = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !13667, !ctir !346
  %2 = load i8*, i8** %number.addr, align 8, !dbg !13668
  %3 = load i64, i64* %numberlen.addr, align 8, !dbg !13669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %2, i64 %3, i1 false), !dbg !13667
  %4 = load i8*, i8** %number.addr, align 8, !dbg !13670
  %5 = load i64, i64* %numberlen.addr, align 8, !dbg !13671
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !13672, !ctir !144
  store i8* %add.ptr, i8** %d, align 8, !dbg !13673
  br label %for.cond, !dbg !13674

for.cond:                                         ; preds = %if.end13, %entry
  call void @llvm.dbg.declare(metadata i8* %g, metadata !13675, metadata !DIExpression()), !dbg !13679
  %6 = load i8*, i8** %grouping.addr, align 8, !dbg !13680
  %7 = load i8, i8* %6, align 1, !dbg !13681, !ctir !147
  store i8 %7, i8* %g, align 1, !dbg !13679
  %8 = load i8, i8* %g, align 1, !dbg !13682
  %tobool = icmp ne i8 %8, 0, !dbg !13682
  br i1 %tobool, label %if.then, label %if.end, !dbg !13684

if.then:                                          ; preds = %for.cond
  %9 = load i8, i8* %g, align 1, !dbg !13685
  %conv = zext i8 %9 to i32, !dbg !13685
  %cmp = icmp slt i32 %conv, 127, !dbg !13687
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13685

cond.true:                                        ; preds = %if.then
  %10 = load i8, i8* %g, align 1, !dbg !13688
  %conv2 = zext i8 %10 to i64, !dbg !13688
  br label %cond.end, !dbg !13685

cond.false:                                       ; preds = %if.then
  %11 = load i64, i64* %i, align 8, !dbg !13689
  br label %cond.end, !dbg !13685

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv2, %cond.true ], [ %11, %cond.false ], !dbg !13685
  store i64 %cond, i64* %grouplen, align 8, !dbg !13690
  %12 = load i8*, i8** %grouping.addr, align 8, !dbg !13691
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !13691, !ctir !147
  store i8* %incdec.ptr, i8** %grouping.addr, align 8, !dbg !13691
  br label %if.end, !dbg !13692

if.end:                                           ; preds = %cond.end, %for.cond
  %13 = load i64, i64* %i, align 8, !dbg !13693
  %14 = load i64, i64* %grouplen, align 8, !dbg !13695
  %cmp3 = icmp ult i64 %13, %14, !dbg !13696
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !13697

if.then5:                                         ; preds = %if.end
  %15 = load i64, i64* %i, align 8, !dbg !13698
  store i64 %15, i64* %grouplen, align 8, !dbg !13699
  br label %if.end6, !dbg !13700

if.end6:                                          ; preds = %if.then5, %if.end
  %16 = load i64, i64* %grouplen, align 8, !dbg !13701
  %17 = load i8*, i8** %d, align 8, !dbg !13702
  %idx.neg = sub i64 0, %16, !dbg !13702
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %idx.neg, !dbg !13702, !ctir !144
  store i8* %add.ptr7, i8** %d, align 8, !dbg !13702
  %18 = load i64, i64* %grouplen, align 8, !dbg !13703
  %19 = load i64, i64* %i, align 8, !dbg !13704
  %sub = sub i64 %19, %18, !dbg !13704
  store i64 %sub, i64* %i, align 8, !dbg !13704
  %20 = load i8*, i8** %d, align 8, !dbg !13705
  %arraydecay8 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !13706, !ctir !346
  %21 = load i64, i64* %i, align 8, !dbg !13707
  %add.ptr9 = getelementptr inbounds i8, i8* %arraydecay8, i64 %21, !dbg !13708, !ctir !144
  %22 = load i64, i64* %grouplen, align 8, !dbg !13709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %add.ptr9, i64 %22, i1 false), !dbg !13710
  %23 = load i64, i64* %i, align 8, !dbg !13711
  %cmp10 = icmp eq i64 %23, 0, !dbg !13713
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !13714

if.then12:                                        ; preds = %if.end6
  %24 = load i8*, i8** %d, align 8, !dbg !13715
  ret i8* %24, !dbg !13716

if.end13:                                         ; preds = %if.end6
  %25 = load i64, i64* %thousands_seplen, align 8, !dbg !13717
  %26 = load i8*, i8** %d, align 8, !dbg !13718
  %idx.neg14 = sub i64 0, %25, !dbg !13718
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %idx.neg14, !dbg !13718, !ctir !144
  store i8* %add.ptr15, i8** %d, align 8, !dbg !13718
  %27 = load i8*, i8** %d, align 8, !dbg !13719
  %28 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !13720
  %29 = load i64, i64* %thousands_seplen, align 8, !dbg !13721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false), !dbg !13722
  br label %for.cond, !dbg !13723, !llvm.loop !13724
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @human_options(i8* %spec, i32* %opts, i64* %block_size) #0 !dbg !13727 {
entry:
  %spec.addr = alloca i8*, align 8
  %opts.addr = alloca i32*, align 8
  %block_size.addr = alloca i64*, align 8
  %e = alloca i32, align 4, !ctir !1267
  store i8* %spec, i8** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !13731, metadata !DIExpression()), !dbg !13732
  store i32* %opts, i32** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %opts.addr, metadata !13733, metadata !DIExpression()), !dbg !13734
  store i64* %block_size, i64** %block_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !13735, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13737, metadata !DIExpression()), !dbg !13738
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !13739
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !13740
  %2 = load i32*, i32** %opts.addr, align 8, !dbg !13741
  %call = call i32 @humblock(i8* %0, i64* %1, i32* %2), !dbg !13742
  store i32 %call, i32* %e, align 4, !dbg !13738
  %3 = load i64*, i64** %block_size.addr, align 8, !dbg !13743
  %4 = load i64, i64* %3, align 8, !dbg !13745, !ctir !168
  %cmp = icmp eq i64 %4, 0, !dbg !13746
  br i1 %cmp, label %if.then, label %if.end, !dbg !13747

if.then:                                          ; preds = %entry
  %call1 = call i64 @default_block_size(), !dbg !13748
  %5 = load i64*, i64** %block_size.addr, align 8, !dbg !13750
  store i64 %call1, i64* %5, align 8, !dbg !13751, !ctir !168
  store i32 4, i32* %e, align 4, !dbg !13752
  br label %if.end, !dbg !13753

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %e, align 4, !dbg !13754
  ret i32 %6, !dbg !13755
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @humblock(i8* %spec, i64* %block_size, i32* %options) #0 !dbg !13756 {
entry:
  %retval = alloca i32, align 4
  %spec.addr = alloca i8*, align 8
  %block_size.addr = alloca i64*, align 8
  %options.addr = alloca i32*, align 8
  %i = alloca i32, align 4, !ctir !27
  %opts = alloca i32, align 4, !ctir !27
  %ptr = alloca i8*, align 8, !ctir !143
  %e = alloca i32, align 4, !ctir !1267
  store i8* %spec, i8** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !13759, metadata !DIExpression()), !dbg !13760
  store i64* %block_size, i64** %block_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !13761, metadata !DIExpression()), !dbg !13762
  store i32* %options, i32** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %options.addr, metadata !13763, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13765, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.declare(metadata i32* %opts, metadata !13767, metadata !DIExpression()), !dbg !13768
  store i32 0, i32* %opts, align 4, !dbg !13768
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !13769
  %tobool = icmp ne i8* %0, null, !dbg !13769
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !13771

land.lhs.true:                                    ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.335, i64 0, i64 0)) #13, !dbg !13772
  store i8* %call, i8** %spec.addr, align 8, !dbg !13773
  %tobool1 = icmp ne i8* %call, null, !dbg !13773
  br i1 %tobool1, label %if.else, label %land.lhs.true2, !dbg !13774

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.336, i64 0, i64 0)) #13, !dbg !13775
  store i8* %call3, i8** %spec.addr, align 8, !dbg !13776
  %tobool4 = icmp ne i8* %call3, null, !dbg !13776
  br i1 %tobool4, label %if.else, label %if.then, !dbg !13777

if.then:                                          ; preds = %land.lhs.true2
  %call5 = call i64 @default_block_size(), !dbg !13778
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !13779
  store i64 %call5, i64* %1, align 8, !dbg !13780, !ctir !168
  br label %if.end51, !dbg !13781

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %2 = load i8*, i8** %spec.addr, align 8, !dbg !13782
  %3 = load i8, i8* %2, align 1, !dbg !13785, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !13785
  %cmp = icmp eq i32 %conv, 39, !dbg !13786
  br i1 %cmp, label %if.then7, label %if.end, !dbg !13787

if.then7:                                         ; preds = %if.else
  %4 = load i32, i32* %opts, align 4, !dbg !13788
  %or = or i32 %4, 4, !dbg !13788
  store i32 %or, i32* %opts, align 4, !dbg !13788
  %5 = load i8*, i8** %spec.addr, align 8, !dbg !13790
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !13790, !ctir !147
  store i8* %incdec.ptr, i8** %spec.addr, align 8, !dbg !13790
  br label %if.end, !dbg !13791

if.end:                                           ; preds = %if.then7, %if.else
  %6 = load i8*, i8** %spec.addr, align 8, !dbg !13792
  %call8 = call i64 @argmatch(i8* %6, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @block_size_args, i64 0, i64 0), i8* bitcast ([2 x i32]* @block_size_opts to i8*), i64 4) #16, !dbg !13792
  %conv9 = trunc i64 %call8 to i32, !dbg !13792
  store i32 %conv9, i32* %i, align 4, !dbg !13794
  %cmp10 = icmp sle i32 0, %conv9, !dbg !13795
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !13796

if.then12:                                        ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !13797
  %idxprom = sext i32 %7 to i64, !dbg !13799
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @block_size_opts, i64 0, i64 %idxprom, !dbg !13799, !ctir !1269
  %8 = load i32, i32* %arrayidx, align 4, !dbg !13799
  %9 = load i32, i32* %opts, align 4, !dbg !13800
  %or13 = or i32 %9, %8, !dbg !13800
  store i32 %or13, i32* %opts, align 4, !dbg !13800
  %10 = load i64*, i64** %block_size.addr, align 8, !dbg !13801
  store i64 1, i64* %10, align 8, !dbg !13802, !ctir !168
  br label %if.end50, !dbg !13803

if.else14:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !13804, metadata !DIExpression()), !dbg !13806
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13807, metadata !DIExpression()), !dbg !13808
  %11 = load i8*, i8** %spec.addr, align 8, !dbg !13809
  %12 = load i64*, i64** %block_size.addr, align 8, !dbg !13810
  %call15 = call i32 @xstrtoumax(i8* %11, i8** %ptr, i32 0, i64* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.337, i64 0, i64 0)), !dbg !13811
  store i32 %call15, i32* %e, align 4, !dbg !13808
  %13 = load i32, i32* %e, align 4, !dbg !13812
  %cmp16 = icmp ne i32 %13, 0, !dbg !13814
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !13815

if.then18:                                        ; preds = %if.else14
  %14 = load i32*, i32** %options.addr, align 8, !dbg !13816
  store i32 0, i32* %14, align 4, !dbg !13818, !ctir !27
  %15 = load i32, i32* %e, align 4, !dbg !13819
  store i32 %15, i32* %retval, align 4, !dbg !13820
  br label %return, !dbg !13820

if.end19:                                         ; preds = %if.else14
  br label %for.cond, !dbg !13821

for.cond:                                         ; preds = %for.inc, %if.end19
  %16 = load i8*, i8** %spec.addr, align 8, !dbg !13822
  %17 = load i8, i8* %16, align 1, !dbg !13825, !ctir !147
  %conv20 = sext i8 %17 to i32, !dbg !13825
  %cmp21 = icmp sle i32 48, %conv20, !dbg !13826
  br i1 %cmp21, label %land.rhs, label %land.end, !dbg !13827

land.rhs:                                         ; preds = %for.cond
  %18 = load i8*, i8** %spec.addr, align 8, !dbg !13828
  %19 = load i8, i8* %18, align 1, !dbg !13829, !ctir !147
  %conv23 = sext i8 %19 to i32, !dbg !13829
  %cmp24 = icmp sle i32 %conv23, 57, !dbg !13830
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp24, %land.rhs ], !dbg !13831
  %lnot = xor i1 %20, true, !dbg !13832
  br i1 %lnot, label %for.body, label %for.end, !dbg !13833

for.body:                                         ; preds = %land.end
  %21 = load i8*, i8** %spec.addr, align 8, !dbg !13834
  %22 = load i8*, i8** %ptr, align 8, !dbg !13836
  %cmp26 = icmp eq i8* %21, %22, !dbg !13837
  br i1 %cmp26, label %if.then28, label %if.end48, !dbg !13838

if.then28:                                        ; preds = %for.body
  %23 = load i32, i32* %opts, align 4, !dbg !13839
  %or29 = or i32 %23, 128, !dbg !13839
  store i32 %or29, i32* %opts, align 4, !dbg !13839
  %24 = load i8*, i8** %ptr, align 8, !dbg !13841
  %arrayidx30 = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !13841, !ctir !143
  %25 = load i8, i8* %arrayidx30, align 1, !dbg !13841
  %conv31 = sext i8 %25 to i32, !dbg !13841
  %cmp32 = icmp eq i32 %conv31, 66, !dbg !13843
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !13844

if.then34:                                        ; preds = %if.then28
  %26 = load i32, i32* %opts, align 4, !dbg !13845
  %or35 = or i32 %26, 256, !dbg !13845
  store i32 %or35, i32* %opts, align 4, !dbg !13845
  br label %if.end36, !dbg !13846

if.end36:                                         ; preds = %if.then34, %if.then28
  %27 = load i8*, i8** %ptr, align 8, !dbg !13847
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !13847, !ctir !143
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !13847
  %conv38 = sext i8 %28 to i32, !dbg !13847
  %cmp39 = icmp ne i32 %conv38, 66, !dbg !13849
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !13850

lor.lhs.false:                                    ; preds = %if.end36
  %29 = load i8*, i8** %ptr, align 8, !dbg !13851
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i64 -2, !dbg !13851, !ctir !143
  %30 = load i8, i8* %arrayidx41, align 1, !dbg !13851
  %conv42 = sext i8 %30 to i32, !dbg !13851
  %cmp43 = icmp eq i32 %conv42, 105, !dbg !13852
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !13853

if.then45:                                        ; preds = %lor.lhs.false, %if.end36
  %31 = load i32, i32* %opts, align 4, !dbg !13854
  %or46 = or i32 %31, 32, !dbg !13854
  store i32 %or46, i32* %opts, align 4, !dbg !13854
  br label %if.end47, !dbg !13855

if.end47:                                         ; preds = %if.then45, %lor.lhs.false
  br label %for.end, !dbg !13856

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !13836

for.inc:                                          ; preds = %if.end48
  %32 = load i8*, i8** %spec.addr, align 8, !dbg !13857
  %incdec.ptr49 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !13857, !ctir !147
  store i8* %incdec.ptr49, i8** %spec.addr, align 8, !dbg !13857
  br label %for.cond, !dbg !13858, !llvm.loop !13859

for.end:                                          ; preds = %if.end47, %land.end
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.then12
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %33 = load i32, i32* %opts, align 4, !dbg !13861
  %34 = load i32*, i32** %options.addr, align 8, !dbg !13862
  store i32 %33, i32* %34, align 4, !dbg !13863, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !13864
  br label %return, !dbg !13864

return:                                           ; preds = %if.end51, %if.then18
  %35 = load i32, i32* %retval, align 4, !dbg !13865
  ret i32 %35, !dbg !13865
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @default_block_size() #0 !dbg !13866 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.334, i64 0, i64 0)) #13, !dbg !13869
  %tobool = icmp ne i8* %call, null, !dbg !13869
  %0 = zext i1 %tobool to i64, !dbg !13869
  %cond = select i1 %tobool, i32 512, i32 1024, !dbg !13869
  %conv = sext i32 %cond to i64, !dbg !13869
  ret i64 %conv, !dbg !13870
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getuser(i32 %uid) #0 !dbg !13871 {
entry:
  %uid.addr = alloca i32, align 4
  %tail = alloca %struct.userid*, align 8, !ctir !1281
  %match = alloca %struct.userid*, align 8, !ctir !1281
  %pwent = alloca %struct.passwd*, align 8, !ctir !1294
  %name = alloca i8*, align 8, !ctir !146
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !13874, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !13876, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !13878, metadata !DIExpression()), !dbg !13879
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !13879
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !13880
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !13882
  br label %for.cond, !dbg !13883

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13884
  %tobool = icmp ne %struct.userid* %1, null, !dbg !13886
  br i1 %tobool, label %for.body, label %for.end, !dbg !13886

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13887
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !13890, !ctir !1282
  %u = bitcast %union.anon.11* %id to i32*, !dbg !13891
  %3 = load i32, i32* %u, align 8, !dbg !13891, !ctir !1286
  %4 = load i32, i32* %uid.addr, align 4, !dbg !13892
  %cmp = icmp eq i32 %3, %4, !dbg !13893
  br i1 %cmp, label %if.then, label %if.end, !dbg !13894

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13895
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !13897
  br label %for.end, !dbg !13898

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13899

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13900
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !13901, !ctir !1282
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !13901, !ctir !1281
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !13902
  br label %for.cond, !dbg !13903, !llvm.loop !13904

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13906
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !13908
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !13909

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !13910, metadata !DIExpression()), !dbg !13912
  %9 = load i32, i32* %uid.addr, align 4, !dbg !13913
  %call = call %struct.passwd* @getpwuid(i32 %9), !dbg !13914
  store %struct.passwd* %call, %struct.passwd** %pwent, align 8, !dbg !13912
  call void @llvm.dbg.declare(metadata i8** %name, metadata !13915, metadata !DIExpression()), !dbg !13916
  %10 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !13917
  %tobool3 = icmp ne %struct.passwd* %10, null, !dbg !13917
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !13917

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !13918
  %pw_name = getelementptr inbounds %struct.passwd, %struct.passwd* %11, i32 0, i32 0, !dbg !13919, !ctir !1295
  %12 = load i8*, i8** %pw_name, align 8, !dbg !13919, !ctir !143
  br label %cond.end, !dbg !13917

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !13917

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.342, i64 0, i64 0), %cond.false ], !dbg !13917
  store i8* %cond, i8** %name, align 8, !dbg !13916
  %13 = load i8*, i8** %name, align 8, !dbg !13920
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !13920
  %add = add i64 %call4, 1, !dbg !13920
  %add5 = add i64 23, %add, !dbg !13920
  %and = and i64 %add5, -8, !dbg !13920
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !13921
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !13921
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !13922
  %15 = load i32, i32* %uid.addr, align 4, !dbg !13923
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13924
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !13925, !ctir !1282
  %u8 = bitcast %union.anon.11* %id7 to i32*, !dbg !13926
  store i32 %15, i32* %u8, align 8, !dbg !13927, !ctir !1286
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13928
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !13929, !ctir !1282
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !13928, !ctir !464
  %18 = load i8*, i8** %name, align 8, !dbg !13930
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !13931
  %19 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !13932
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13933
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !13934, !ctir !1282
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !13935, !ctir !1281
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13936
  store %struct.userid* %21, %struct.userid** @user_alist, align 8, !dbg !13937
  br label %if.end12, !dbg !13938

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13939
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !13940, !ctir !1282
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !13939, !ctir !464
  %23 = load i8, i8* %arrayidx, align 8, !dbg !13939
  %conv = sext i8 %23 to i32, !dbg !13939
  %tobool14 = icmp ne i32 %conv, 0, !dbg !13939
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !13939

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !13941
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !13942, !ctir !1282
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !13941, !ctir !464
  br label %cond.end19, !dbg !13939

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !13939

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !13939
  ret i8* %cond20, !dbg !13943
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getuidbyname(i8* %user) #0 !dbg !13944 {
entry:
  %retval = alloca i32*, align 8
  %user.addr = alloca i8*, align 8
  %tail = alloca %struct.userid*, align 8, !ctir !1281
  %pwent = alloca %struct.passwd*, align 8, !ctir !1294
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !13950, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !13952, metadata !DIExpression()), !dbg !13953
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !13954
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !13956
  br label %for.cond, !dbg !13957

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13958
  %tobool = icmp ne %struct.userid* %1, null, !dbg !13960
  br i1 %tobool, label %for.body, label %for.end, !dbg !13960

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13961
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !13963, !ctir !1282
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !13964, !ctir !464
  %3 = load i8, i8* %arraydecay, align 8, !dbg !13964, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !13964
  %4 = load i8*, i8** %user.addr, align 8, !dbg !13965
  %5 = load i8, i8* %4, align 1, !dbg !13966, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !13966
  %cmp = icmp eq i32 %conv, %conv1, !dbg !13967
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13968

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13969
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !13970, !ctir !1282
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !13969, !ctir !464
  %7 = load i8*, i8** %user.addr, align 8, !dbg !13971
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !13972
  %tobool5 = icmp ne i32 %call, 0, !dbg !13972
  br i1 %tobool5, label %if.end, label %if.then, !dbg !13973

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13974
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !13975, !ctir !1282
  %u = bitcast %union.anon.11* %id to i32*, !dbg !13976
  store i32* %u, i32** %retval, align 8, !dbg !13977
  br label %return, !dbg !13977

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !13978

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13979
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !13980, !ctir !1282
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !13980, !ctir !1281
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !13981
  br label %for.cond, !dbg !13982, !llvm.loop !13983

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !13985
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !13987
  br label %for.cond6, !dbg !13988

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13989
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !13991
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !13991

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !13992
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !13994, !ctir !1282
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !13995, !ctir !464
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !13995, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !13995
  %15 = load i8*, i8** %user.addr, align 8, !dbg !13996
  %16 = load i8, i8* %15, align 1, !dbg !13997, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !13997
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !13998
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !13999

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14000
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14001, !ctir !1282
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14000, !ctir !464
  %18 = load i8*, i8** %user.addr, align 8, !dbg !14002
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14003
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14003
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14004

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14005
  br label %return, !dbg !14005

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14006

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14007
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14008, !ctir !1282
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14008, !ctir !1281
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14009
  br label %for.cond6, !dbg !14010, !llvm.loop !14011

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %user.addr, align 8, !dbg !14013
  %call25 = call %struct.passwd* @getpwnam(i8* %21), !dbg !14014
  store %struct.passwd* %call25, %struct.passwd** %pwent, align 8, !dbg !14015
  %22 = load i8*, i8** %user.addr, align 8, !dbg !14016
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14016
  %add = add i64 %call26, 1, !dbg !14016
  %add27 = add i64 23, %add, !dbg !14016
  %and = and i64 %add27, -8, !dbg !14016
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14017
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14017
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14018
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14019
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14020, !ctir !1282
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14019, !ctir !464
  %25 = load i8*, i8** %user.addr, align 8, !dbg !14021
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14022
  %26 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14023
  %tobool32 = icmp ne %struct.passwd* %26, null, !dbg !14023
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14025

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14026
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %27, i32 0, i32 2, !dbg !14028, !ctir !1295
  %28 = load i32, i32* %pw_uid, align 8, !dbg !14028, !ctir !202
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14029
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14030, !ctir !1282
  %u35 = bitcast %union.anon.11* %id34 to i32*, !dbg !14031
  store i32 %28, i32* %u35, align 8, !dbg !14032, !ctir !1286
  %30 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14033
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14034
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14035, !ctir !1282
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14036, !ctir !1281
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14037
  store %struct.userid* %32, %struct.userid** @user_alist, align 8, !dbg !14038
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14039
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14040, !ctir !1282
  %u38 = bitcast %union.anon.11* %id37 to i32*, !dbg !14041
  store i32* %u38, i32** %retval, align 8, !dbg !14042
  br label %return, !dbg !14042

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14043
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14044
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14045, !ctir !1282
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14046, !ctir !1281
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14047
  store %struct.userid* %36, %struct.userid** @nouser_alist, align 8, !dbg !14048
  store i32* null, i32** %retval, align 8, !dbg !14049
  br label %return, !dbg !14049

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14050
  ret i32* %37, !dbg !14050
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getgroup(i32 %gid) #0 !dbg !14051 {
entry:
  %gid.addr = alloca i32, align 4
  %tail = alloca %struct.userid*, align 8, !ctir !1281
  %match = alloca %struct.userid*, align 8, !ctir !1281
  %grent = alloca %struct.group*, align 8, !ctir !1305
  %name = alloca i8*, align 8, !ctir !146
  store i32 %gid, i32* %gid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14058, metadata !DIExpression()), !dbg !14059
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14059
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14060
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14062
  br label %for.cond, !dbg !14063

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14064
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14066
  br i1 %tobool, label %for.body, label %for.end, !dbg !14066

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14067
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14070, !ctir !1282
  %g = bitcast %union.anon.11* %id to i32*, !dbg !14071
  %3 = load i32, i32* %g, align 8, !dbg !14071, !ctir !1286
  %4 = load i32, i32* %gid.addr, align 4, !dbg !14072
  %cmp = icmp eq i32 %3, %4, !dbg !14073
  br i1 %cmp, label %if.then, label %if.end, !dbg !14074

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14075
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14077
  br label %for.end, !dbg !14078

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14079

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14080
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14081, !ctir !1282
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14081, !ctir !1281
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14082
  br label %for.cond, !dbg !14083, !llvm.loop !14084

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14086
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14088
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14089

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14090, metadata !DIExpression()), !dbg !14092
  %9 = load i32, i32* %gid.addr, align 4, !dbg !14093
  %call = call %struct.group* @getgrgid(i32 %9), !dbg !14094
  store %struct.group* %call, %struct.group** %grent, align 8, !dbg !14092
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14095, metadata !DIExpression()), !dbg !14096
  %10 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14097
  %tobool3 = icmp ne %struct.group* %10, null, !dbg !14097
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14097

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14098
  %gr_name = getelementptr inbounds %struct.group, %struct.group* %11, i32 0, i32 0, !dbg !14099, !ctir !1306
  %12 = load i8*, i8** %gr_name, align 8, !dbg !14099, !ctir !143
  br label %cond.end, !dbg !14097

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14097

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.342, i64 0, i64 0), %cond.false ], !dbg !14097
  store i8* %cond, i8** %name, align 8, !dbg !14096
  %13 = load i8*, i8** %name, align 8, !dbg !14100
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14100
  %add = add i64 %call4, 1, !dbg !14100
  %add5 = add i64 23, %add, !dbg !14100
  %and = and i64 %add5, -8, !dbg !14100
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14101
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14101
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14102
  %15 = load i32, i32* %gid.addr, align 4, !dbg !14103
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14104
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14105, !ctir !1282
  %g8 = bitcast %union.anon.11* %id7 to i32*, !dbg !14106
  store i32 %15, i32* %g8, align 8, !dbg !14107, !ctir !1286
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14108
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14109, !ctir !1282
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14108, !ctir !464
  %18 = load i8*, i8** %name, align 8, !dbg !14110
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14111
  %19 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14112
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14113
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14114, !ctir !1282
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14115, !ctir !1281
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14116
  store %struct.userid* %21, %struct.userid** @group_alist, align 8, !dbg !14117
  br label %if.end12, !dbg !14118

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14119
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14120, !ctir !1282
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14119, !ctir !464
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14119
  %conv = sext i8 %23 to i32, !dbg !14119
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14119
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14119

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14121
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14122, !ctir !1282
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14121, !ctir !464
  br label %cond.end19, !dbg !14119

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14119

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14119
  ret i8* %cond20, !dbg !14123
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getgidbyname(i8* %group) #0 !dbg !14124 {
entry:
  %retval = alloca i32*, align 8
  %group.addr = alloca i8*, align 8
  %tail = alloca %struct.userid*, align 8, !ctir !1281
  %grent = alloca %struct.group*, align 8, !ctir !1305
  store i8* %group, i8** %group.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %group.addr, metadata !14128, metadata !DIExpression()), !dbg !14129
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14130, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14132, metadata !DIExpression()), !dbg !14133
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14134
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14136
  br label %for.cond, !dbg !14137

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14138
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14140
  br i1 %tobool, label %for.body, label %for.end, !dbg !14140

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14141
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14143, !ctir !1282
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14144, !ctir !464
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14144, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14144
  %4 = load i8*, i8** %group.addr, align 8, !dbg !14145
  %5 = load i8, i8* %4, align 1, !dbg !14146, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14146
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14147
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14148

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14149
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14150, !ctir !1282
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14149, !ctir !464
  %7 = load i8*, i8** %group.addr, align 8, !dbg !14151
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14152
  %tobool5 = icmp ne i32 %call, 0, !dbg !14152
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14153

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14154
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14155, !ctir !1282
  %g = bitcast %union.anon.11* %id to i32*, !dbg !14156
  store i32* %g, i32** %retval, align 8, !dbg !14157
  br label %return, !dbg !14157

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14158

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14159
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14160, !ctir !1282
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14160, !ctir !1281
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14161
  br label %for.cond, !dbg !14162, !llvm.loop !14163

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14165
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14167
  br label %for.cond6, !dbg !14168

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14169
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14171
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14171

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14172
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14174, !ctir !1282
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14175, !ctir !464
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14175, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14175
  %15 = load i8*, i8** %group.addr, align 8, !dbg !14176
  %16 = load i8, i8* %15, align 1, !dbg !14177, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14177
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14178
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14179

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14180
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14181, !ctir !1282
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14180, !ctir !464
  %18 = load i8*, i8** %group.addr, align 8, !dbg !14182
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14183
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14183
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14184

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14185
  br label %return, !dbg !14185

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14186

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14187
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14188, !ctir !1282
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14188, !ctir !1281
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14189
  br label %for.cond6, !dbg !14190, !llvm.loop !14191

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %group.addr, align 8, !dbg !14193
  %call25 = call %struct.group* @getgrnam(i8* %21), !dbg !14194
  store %struct.group* %call25, %struct.group** %grent, align 8, !dbg !14195
  %22 = load i8*, i8** %group.addr, align 8, !dbg !14196
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14196
  %add = add i64 %call26, 1, !dbg !14196
  %add27 = add i64 23, %add, !dbg !14196
  %and = and i64 %add27, -8, !dbg !14196
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14197
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14197
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14198
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14199
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14200, !ctir !1282
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14199, !ctir !464
  %25 = load i8*, i8** %group.addr, align 8, !dbg !14201
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14202
  %26 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14203
  %tobool32 = icmp ne %struct.group* %26, null, !dbg !14203
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14205

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14206
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %27, i32 0, i32 2, !dbg !14208, !ctir !1306
  %28 = load i32, i32* %gr_gid, align 8, !dbg !14208, !ctir !204
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14209
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14210, !ctir !1282
  %g35 = bitcast %union.anon.11* %id34 to i32*, !dbg !14211
  store i32 %28, i32* %g35, align 8, !dbg !14212, !ctir !1286
  %30 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14213
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14214
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14215, !ctir !1282
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14216, !ctir !1281
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14217
  store %struct.userid* %32, %struct.userid** @group_alist, align 8, !dbg !14218
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14219
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14220, !ctir !1282
  %g38 = bitcast %union.anon.11* %id37 to i32*, !dbg !14221
  store i32* %g38, i32** %retval, align 8, !dbg !14222
  br label %return, !dbg !14222

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14223
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14224
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14225, !ctir !1282
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14226, !ctir !1281
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14227
  store %struct.userid* %36, %struct.userid** @nogroup_alist, align 8, !dbg !14228
  store i32* null, i32** %retval, align 8, !dbg !14229
  br label %return, !dbg !14229

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14230
  ret i32* %37, !dbg !14230
}

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @imaxtostr(i64 %i, i8* %buf) #0 !dbg !14231 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14235, metadata !DIExpression()), !dbg !14236
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14237, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14239, metadata !DIExpression()), !dbg !14240
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14241
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14242, !ctir !144
  store i8* %add.ptr, i8** %p, align 8, !dbg !14240
  %1 = load i8*, i8** %p, align 8, !dbg !14243
  store i8 0, i8* %1, align 1, !dbg !14244, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14245
  %cmp = icmp slt i64 %2, 0, !dbg !14247
  br i1 %cmp, label %if.then, label %if.else, !dbg !14248

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14249

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14251
  %rem = srem i64 %3, 10, !dbg !14252
  %sub = sub nsw i64 48, %rem, !dbg !14253
  %conv = trunc i64 %sub to i8, !dbg !14254
  %4 = load i8*, i8** %p, align 8, !dbg !14255
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14255, !ctir !144
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14255
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14256, !ctir !144
  br label %do.cond, !dbg !14257

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14258
  %div = sdiv i64 %5, 10, !dbg !14258
  store i64 %div, i64* %i.addr, align 8, !dbg !14258
  %cmp1 = icmp ne i64 %div, 0, !dbg !14259
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14257, !llvm.loop !14260

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14262
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14262, !ctir !144
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14262
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14263, !ctir !144
  br label %if.end, !dbg !14264

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14265

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14267
  %rem5 = srem i64 %7, 10, !dbg !14268
  %add = add nsw i64 48, %rem5, !dbg !14269
  %conv6 = trunc i64 %add to i8, !dbg !14270
  %8 = load i8*, i8** %p, align 8, !dbg !14271
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14271, !ctir !144
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14271
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14272, !ctir !144
  br label %do.cond8, !dbg !14273

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14274
  %div9 = sdiv i64 %9, 10, !dbg !14274
  store i64 %div9, i64* %i.addr, align 8, !dbg !14274
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14275
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14273, !llvm.loop !14276

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14278
  ret i8* %10, !dbg !14279
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %i, i8* %buf) #0 !dbg !14280 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14283, metadata !DIExpression()), !dbg !14284
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14285, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14287, metadata !DIExpression()), !dbg !14288
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14289
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14290, !ctir !144
  store i8* %add.ptr, i8** %p, align 8, !dbg !14288
  %1 = load i8*, i8** %p, align 8, !dbg !14291
  store i8 0, i8* %1, align 1, !dbg !14292, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14293
  %cmp = icmp ult i64 %2, 0, !dbg !14295
  br i1 %cmp, label %if.then, label %if.else, !dbg !14296

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14297

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14299
  %rem = urem i64 %3, 10, !dbg !14300
  %sub = sub i64 48, %rem, !dbg !14301
  %conv = trunc i64 %sub to i8, !dbg !14302
  %4 = load i8*, i8** %p, align 8, !dbg !14303
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14303, !ctir !144
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14303
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14304, !ctir !144
  br label %do.cond, !dbg !14305

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14306
  %div = udiv i64 %5, 10, !dbg !14306
  store i64 %div, i64* %i.addr, align 8, !dbg !14306
  %cmp1 = icmp ne i64 %div, 0, !dbg !14307
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14305, !llvm.loop !14308

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14310
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14310, !ctir !144
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14310
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14311, !ctir !144
  br label %if.end, !dbg !14312

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14313

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14315
  %rem5 = urem i64 %7, 10, !dbg !14316
  %add = add i64 48, %rem5, !dbg !14317
  %conv6 = trunc i64 %add to i8, !dbg !14318
  %8 = load i8*, i8** %p, align 8, !dbg !14319
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14319, !ctir !144
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14319
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14320, !ctir !144
  br label %do.cond8, !dbg !14321

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14322
  %div9 = udiv i64 %9, 10, !dbg !14322
  store i64 %div9, i64* %i.addr, align 8, !dbg !14322
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14323
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14321, !llvm.loop !14324

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14326
  ret i8* %10, !dbg !14327
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mbsalign(i8* %src, i8* %dest, i64 %dest_size, i64* %width, i32 %align, i32 %flags) #0 !dbg !14328 {
entry:
  %src.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_size.addr = alloca i64, align 8
  %width.addr = alloca i64*, align 8
  %align.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %ret = alloca i64, align 8, !ctir !149
  %src_size = alloca i64, align 8, !ctir !149
  %newstr = alloca i8*, align 8, !ctir !143
  %str_wc = alloca i32*, align 8, !ctir !1591
  %str_to_print = alloca i8*, align 8, !ctir !146
  %n_cols = alloca i64, align 8, !ctir !149
  %n_used_bytes = alloca i64, align 8, !ctir !149
  %n_spaces = alloca i64, align 8, !ctir !149
  %conversion = alloca i8, align 1, !ctir !141
  %wc_enabled = alloca i8, align 1, !ctir !141
  %src_chars = alloca i64, align 8, !ctir !149
  %start_spaces = alloca i64, align 8, !ctir !149
  %end_spaces = alloca i64, align 8, !ctir !149
  %space_left = alloca i64, align 8, !ctir !149
  %dest_end = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14332, metadata !DIExpression()), !dbg !14333
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14334, metadata !DIExpression()), !dbg !14335
  store i64 %dest_size, i64* %dest_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dest_size.addr, metadata !14336, metadata !DIExpression()), !dbg !14337
  store i64* %width, i64** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !14338, metadata !DIExpression()), !dbg !14339
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !14340, metadata !DIExpression()), !dbg !14341
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14342, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !14344, metadata !DIExpression()), !dbg !14345
  store i64 -1, i64* %ret, align 8, !dbg !14345
  call void @llvm.dbg.declare(metadata i64* %src_size, metadata !14346, metadata !DIExpression()), !dbg !14347
  %0 = load i8*, i8** %src.addr, align 8, !dbg !14348
  %call = call i64 @strlen(i8* %0) #16, !dbg !14349
  %add = add i64 %call, 1, !dbg !14350
  store i64 %add, i64* %src_size, align 8, !dbg !14347
  call void @llvm.dbg.declare(metadata i8** %newstr, metadata !14351, metadata !DIExpression()), !dbg !14352
  store i8* null, i8** %newstr, align 8, !dbg !14352
  call void @llvm.dbg.declare(metadata i32** %str_wc, metadata !14353, metadata !DIExpression()), !dbg !14354
  store i32* null, i32** %str_wc, align 8, !dbg !14354
  call void @llvm.dbg.declare(metadata i8** %str_to_print, metadata !14355, metadata !DIExpression()), !dbg !14356
  %1 = load i8*, i8** %src.addr, align 8, !dbg !14357
  store i8* %1, i8** %str_to_print, align 8, !dbg !14356
  call void @llvm.dbg.declare(metadata i64* %n_cols, metadata !14358, metadata !DIExpression()), !dbg !14359
  %2 = load i64, i64* %src_size, align 8, !dbg !14360
  %sub = sub i64 %2, 1, !dbg !14361
  store i64 %sub, i64* %n_cols, align 8, !dbg !14359
  call void @llvm.dbg.declare(metadata i64* %n_used_bytes, metadata !14362, metadata !DIExpression()), !dbg !14363
  %3 = load i64, i64* %n_cols, align 8, !dbg !14364
  store i64 %3, i64* %n_used_bytes, align 8, !dbg !14363
  call void @llvm.dbg.declare(metadata i64* %n_spaces, metadata !14365, metadata !DIExpression()), !dbg !14366
  store i64 0, i64* %n_spaces, align 8, !dbg !14366
  call void @llvm.dbg.declare(metadata i8* %conversion, metadata !14367, metadata !DIExpression()), !dbg !14368
  store i8 0, i8* %conversion, align 1, !dbg !14368
  call void @llvm.dbg.declare(metadata i8* %wc_enabled, metadata !14369, metadata !DIExpression()), !dbg !14370
  store i8 0, i8* %wc_enabled, align 1, !dbg !14370
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14371
  %and = and i32 %4, 2, !dbg !14373
  %tobool = icmp ne i32 %and, 0, !dbg !14373
  br i1 %tobool, label %if.end24, label %land.lhs.true, !dbg !14374

land.lhs.true:                                    ; preds = %entry
  %call1 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !14375
  %cmp = icmp ugt i64 %call1, 1, !dbg !14376
  br i1 %cmp, label %if.then, label %if.end24, !dbg !14377

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_chars, metadata !14378, metadata !DIExpression()), !dbg !14380
  %5 = load i8*, i8** %src.addr, align 8, !dbg !14381
  %call2 = call i64 @mbstowcs(i32* null, i8* %5, i64 0) #13, !dbg !14382
  store i64 %call2, i64* %src_chars, align 8, !dbg !14380
  %6 = load i64, i64* %src_chars, align 8, !dbg !14383
  %cmp3 = icmp eq i64 %6, -1, !dbg !14385
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !14386

if.then4:                                         ; preds = %if.then
  %7 = load i32, i32* %flags.addr, align 4, !dbg !14387
  %and5 = and i32 %7, 1, !dbg !14390
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14390
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !14391

if.then7:                                         ; preds = %if.then4
  br label %mbsalign_unibyte, !dbg !14392

if.else:                                          ; preds = %if.then4
  br label %mbsalign_cleanup, !dbg !14393

if.end:                                           ; preds = %if.then
  %8 = load i64, i64* %src_chars, align 8, !dbg !14394
  %add8 = add i64 %8, 1, !dbg !14394
  store i64 %add8, i64* %src_chars, align 8, !dbg !14394
  %9 = load i64, i64* %src_chars, align 8, !dbg !14395
  %mul = mul i64 %9, 4, !dbg !14396
  %call9 = call noalias i8* @malloc(i64 %mul) #13, !dbg !14397
  %10 = bitcast i8* %call9 to i32*, !dbg !14397
  store i32* %10, i32** %str_wc, align 8, !dbg !14398
  %11 = load i32*, i32** %str_wc, align 8, !dbg !14399
  %cmp10 = icmp eq i32* %11, null, !dbg !14401
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !14402

if.then11:                                        ; preds = %if.end
  %12 = load i32, i32* %flags.addr, align 4, !dbg !14403
  %and12 = and i32 %12, 1, !dbg !14406
  %tobool13 = icmp ne i32 %and12, 0, !dbg !14406
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !14407

if.then14:                                        ; preds = %if.then11
  br label %mbsalign_unibyte, !dbg !14408

if.else15:                                        ; preds = %if.then11
  br label %mbsalign_cleanup, !dbg !14409

if.end16:                                         ; preds = %if.end
  %13 = load i32*, i32** %str_wc, align 8, !dbg !14410
  %14 = load i8*, i8** %src.addr, align 8, !dbg !14412
  %15 = load i64, i64* %src_chars, align 8, !dbg !14413
  %call17 = call i64 @mbstowcs(i32* %13, i8* %14, i64 %15) #13, !dbg !14414
  %cmp18 = icmp ne i64 %call17, 0, !dbg !14415
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !14416

if.then19:                                        ; preds = %if.end16
  %16 = load i32*, i32** %str_wc, align 8, !dbg !14417
  %17 = load i64, i64* %src_chars, align 8, !dbg !14419
  %sub20 = sub i64 %17, 1, !dbg !14420
  %arrayidx = getelementptr inbounds i32, i32* %16, i64 %sub20, !dbg !14417, !ctir !1591
  store i32 0, i32* %arrayidx, align 4, !dbg !14421
  store i8 1, i8* %wc_enabled, align 1, !dbg !14422
  %18 = load i32*, i32** %str_wc, align 8, !dbg !14423
  %call21 = call zeroext i1 @wc_ensure_printable(i32* %18), !dbg !14424
  %frombool = zext i1 %call21 to i8, !dbg !14425
  store i8 %frombool, i8* %conversion, align 1, !dbg !14425
  %19 = load i32*, i32** %str_wc, align 8, !dbg !14426
  %20 = load i64, i64* %src_chars, align 8, !dbg !14427
  %call22 = call i32 @wcswidth(i32* %19, i64 %20) #13, !dbg !14428
  %conv = sext i32 %call22 to i64, !dbg !14428
  store i64 %conv, i64* %n_cols, align 8, !dbg !14429
  br label %if.end23, !dbg !14430

if.end23:                                         ; preds = %if.then19, %if.end16
  br label %if.end24, !dbg !14431

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %entry
  %21 = load i8, i8* %wc_enabled, align 1, !dbg !14432
  %tobool25 = trunc i8 %21 to i1, !dbg !14432
  br i1 %tobool25, label %land.lhs.true27, label %if.end49, !dbg !14434

land.lhs.true27:                                  ; preds = %if.end24
  %22 = load i8, i8* %conversion, align 1, !dbg !14435
  %tobool28 = trunc i8 %22 to i1, !dbg !14435
  br i1 %tobool28, label %if.then32, label %lor.lhs.false, !dbg !14436

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %23 = load i64, i64* %n_cols, align 8, !dbg !14437
  %24 = load i64*, i64** %width.addr, align 8, !dbg !14438
  %25 = load i64, i64* %24, align 8, !dbg !14439, !ctir !149
  %cmp30 = icmp ugt i64 %23, %25, !dbg !14440
  br i1 %cmp30, label %if.then32, label %if.end49, !dbg !14441

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %26 = load i8, i8* %conversion, align 1, !dbg !14442
  %tobool33 = trunc i8 %26 to i1, !dbg !14442
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !14445

if.then34:                                        ; preds = %if.then32
  %27 = load i32*, i32** %str_wc, align 8, !dbg !14446
  %call35 = call i64 @wcstombs(i8* null, i32* %27, i64 0) #13, !dbg !14448
  %add36 = add i64 %call35, 1, !dbg !14449
  store i64 %add36, i64* %src_size, align 8, !dbg !14450
  br label %if.end37, !dbg !14451

if.end37:                                         ; preds = %if.then34, %if.then32
  %28 = load i64, i64* %src_size, align 8, !dbg !14452
  %call38 = call noalias i8* @malloc(i64 %28) #13, !dbg !14453
  store i8* %call38, i8** %newstr, align 8, !dbg !14454
  %29 = load i8*, i8** %newstr, align 8, !dbg !14455
  %cmp39 = icmp eq i8* %29, null, !dbg !14457
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !14458

if.then41:                                        ; preds = %if.end37
  %30 = load i32, i32* %flags.addr, align 4, !dbg !14459
  %and42 = and i32 %30, 1, !dbg !14462
  %tobool43 = icmp ne i32 %and42, 0, !dbg !14462
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !14463

if.then44:                                        ; preds = %if.then41
  br label %mbsalign_unibyte, !dbg !14464

if.else45:                                        ; preds = %if.then41
  br label %mbsalign_cleanup, !dbg !14465

if.end46:                                         ; preds = %if.end37
  %31 = load i8*, i8** %newstr, align 8, !dbg !14466
  store i8* %31, i8** %str_to_print, align 8, !dbg !14467
  %32 = load i32*, i32** %str_wc, align 8, !dbg !14468
  %33 = load i64*, i64** %width.addr, align 8, !dbg !14469
  %34 = load i64, i64* %33, align 8, !dbg !14470, !ctir !149
  %call47 = call i64 @wc_truncate(i32* %32, i64 %34), !dbg !14471
  store i64 %call47, i64* %n_cols, align 8, !dbg !14472
  %35 = load i8*, i8** %newstr, align 8, !dbg !14473
  %36 = load i32*, i32** %str_wc, align 8, !dbg !14474
  %37 = load i64, i64* %src_size, align 8, !dbg !14475
  %call48 = call i64 @wcstombs(i8* %35, i32* %36, i64 %37) #13, !dbg !14476
  store i64 %call48, i64* %n_used_bytes, align 8, !dbg !14477
  br label %if.end49, !dbg !14478

if.end49:                                         ; preds = %if.end46, %lor.lhs.false, %if.end24
  br label %mbsalign_unibyte, !dbg !14479

mbsalign_unibyte:                                 ; preds = %if.end49, %if.then44, %if.then14, %if.then7
  call void @llvm.dbg.label(metadata !14480), !dbg !14481
  %38 = load i64, i64* %n_cols, align 8, !dbg !14482
  %39 = load i64*, i64** %width.addr, align 8, !dbg !14484
  %40 = load i64, i64* %39, align 8, !dbg !14485, !ctir !149
  %cmp50 = icmp ugt i64 %38, %40, !dbg !14486
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !14487

if.then52:                                        ; preds = %mbsalign_unibyte
  %41 = load i64*, i64** %width.addr, align 8, !dbg !14488
  %42 = load i64, i64* %41, align 8, !dbg !14490, !ctir !149
  store i64 %42, i64* %n_cols, align 8, !dbg !14491
  %43 = load i64, i64* %n_cols, align 8, !dbg !14492
  store i64 %43, i64* %n_used_bytes, align 8, !dbg !14493
  br label %if.end53, !dbg !14494

if.end53:                                         ; preds = %if.then52, %mbsalign_unibyte
  %44 = load i64*, i64** %width.addr, align 8, !dbg !14495
  %45 = load i64, i64* %44, align 8, !dbg !14497, !ctir !149
  %46 = load i64, i64* %n_cols, align 8, !dbg !14498
  %cmp54 = icmp ugt i64 %45, %46, !dbg !14499
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !14500

if.then56:                                        ; preds = %if.end53
  %47 = load i64*, i64** %width.addr, align 8, !dbg !14501
  %48 = load i64, i64* %47, align 8, !dbg !14502, !ctir !149
  %49 = load i64, i64* %n_cols, align 8, !dbg !14503
  %sub57 = sub i64 %48, %49, !dbg !14504
  store i64 %sub57, i64* %n_spaces, align 8, !dbg !14505
  br label %if.end58, !dbg !14506

if.end58:                                         ; preds = %if.then56, %if.end53
  %50 = load i64, i64* %n_cols, align 8, !dbg !14507
  %51 = load i64*, i64** %width.addr, align 8, !dbg !14508
  store i64 %50, i64* %51, align 8, !dbg !14509, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %start_spaces, metadata !14510, metadata !DIExpression()), !dbg !14512
  call void @llvm.dbg.declare(metadata i64* %end_spaces, metadata !14513, metadata !DIExpression()), !dbg !14514
  %52 = load i32, i32* %align.addr, align 4, !dbg !14515
  switch i32 %52, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb59
    i32 2, label %sw.bb60
  ], !dbg !14516

sw.bb:                                            ; preds = %if.end58
  store i64 0, i64* %start_spaces, align 8, !dbg !14517
  %53 = load i64, i64* %n_spaces, align 8, !dbg !14519
  store i64 %53, i64* %end_spaces, align 8, !dbg !14520
  br label %sw.epilog, !dbg !14521

sw.bb59:                                          ; preds = %if.end58
  %54 = load i64, i64* %n_spaces, align 8, !dbg !14522
  store i64 %54, i64* %start_spaces, align 8, !dbg !14523
  store i64 0, i64* %end_spaces, align 8, !dbg !14524
  br label %sw.epilog, !dbg !14525

sw.bb60:                                          ; preds = %if.end58
  br label %sw.default, !dbg !14525

sw.default:                                       ; preds = %if.end58, %sw.bb60
  %55 = load i64, i64* %n_spaces, align 8, !dbg !14526
  %div = udiv i64 %55, 2, !dbg !14527
  %56 = load i64, i64* %n_spaces, align 8, !dbg !14528
  %rem = urem i64 %56, 2, !dbg !14529
  %add61 = add i64 %div, %rem, !dbg !14530
  store i64 %add61, i64* %start_spaces, align 8, !dbg !14531
  %57 = load i64, i64* %n_spaces, align 8, !dbg !14532
  %div62 = udiv i64 %57, 2, !dbg !14533
  store i64 %div62, i64* %end_spaces, align 8, !dbg !14534
  br label %sw.epilog, !dbg !14535

sw.epilog:                                        ; preds = %sw.default, %sw.bb59, %sw.bb
  %58 = load i32, i32* %flags.addr, align 4, !dbg !14536
  %and63 = and i32 %58, 4, !dbg !14538
  %tobool64 = icmp ne i32 %and63, 0, !dbg !14538
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !14539

if.then65:                                        ; preds = %sw.epilog
  store i64 0, i64* %start_spaces, align 8, !dbg !14540
  br label %if.end66, !dbg !14541

if.end66:                                         ; preds = %if.then65, %sw.epilog
  %59 = load i32, i32* %flags.addr, align 4, !dbg !14542
  %and67 = and i32 %59, 8, !dbg !14544
  %tobool68 = icmp ne i32 %and67, 0, !dbg !14544
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !14545

if.then69:                                        ; preds = %if.end66
  store i64 0, i64* %end_spaces, align 8, !dbg !14546
  br label %if.end70, !dbg !14547

if.end70:                                         ; preds = %if.then69, %if.end66
  %60 = load i64, i64* %dest_size.addr, align 8, !dbg !14548
  %cmp71 = icmp ne i64 %60, 0, !dbg !14550
  br i1 %cmp71, label %if.then73, label %if.end80, !dbg !14551

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i64* %space_left, metadata !14552, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.declare(metadata i8** %dest_end, metadata !14555, metadata !DIExpression()), !dbg !14556
  %61 = load i8*, i8** %dest.addr, align 8, !dbg !14557
  %62 = load i64, i64* %dest_size.addr, align 8, !dbg !14558
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !14559, !ctir !144
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !14560, !ctir !144
  store i8* %add.ptr74, i8** %dest_end, align 8, !dbg !14556
  %63 = load i8*, i8** %dest.addr, align 8, !dbg !14561
  %64 = load i8*, i8** %dest_end, align 8, !dbg !14562
  %65 = load i64, i64* %start_spaces, align 8, !dbg !14563
  %call75 = call i8* @mbs_align_pad(i8* %63, i8* %64, i64 %65), !dbg !14564
  store i8* %call75, i8** %dest.addr, align 8, !dbg !14565
  %66 = load i8*, i8** %dest_end, align 8, !dbg !14566
  %67 = load i8*, i8** %dest.addr, align 8, !dbg !14567
  %sub.ptr.lhs.cast = ptrtoint i8* %66 to i64, !dbg !14568
  %sub.ptr.rhs.cast = ptrtoint i8* %67 to i64, !dbg !14568
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14568
  store i64 %sub.ptr.sub, i64* %space_left, align 8, !dbg !14569
  %68 = load i8*, i8** %dest.addr, align 8, !dbg !14570
  %69 = load i8*, i8** %str_to_print, align 8, !dbg !14571
  %70 = load i64, i64* %n_used_bytes, align 8, !dbg !14572
  %71 = load i64, i64* %space_left, align 8, !dbg !14572
  %cmp76 = icmp ult i64 %70, %71, !dbg !14572
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !14572

cond.true:                                        ; preds = %if.then73
  %72 = load i64, i64* %n_used_bytes, align 8, !dbg !14572
  br label %cond.end, !dbg !14572

cond.false:                                       ; preds = %if.then73
  %73 = load i64, i64* %space_left, align 8, !dbg !14572
  br label %cond.end, !dbg !14572

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %72, %cond.true ], [ %73, %cond.false ], !dbg !14572
  %call78 = call i8* @mempcpy(i8* %68, i8* %69, i64 %cond) #13, !dbg !14573
  store i8* %call78, i8** %dest.addr, align 8, !dbg !14574
  %74 = load i8*, i8** %dest.addr, align 8, !dbg !14575
  %75 = load i8*, i8** %dest_end, align 8, !dbg !14576
  %76 = load i64, i64* %end_spaces, align 8, !dbg !14577
  %call79 = call i8* @mbs_align_pad(i8* %74, i8* %75, i64 %76), !dbg !14578
  br label %if.end80, !dbg !14579

if.end80:                                         ; preds = %cond.end, %if.end70
  %77 = load i64, i64* %n_used_bytes, align 8, !dbg !14580
  %78 = load i64, i64* %start_spaces, align 8, !dbg !14581
  %79 = load i64, i64* %end_spaces, align 8, !dbg !14582
  %add81 = add i64 %78, %79, !dbg !14583
  %mul82 = mul i64 %add81, 1, !dbg !14584
  %add83 = add i64 %77, %mul82, !dbg !14585
  store i64 %add83, i64* %ret, align 8, !dbg !14586
  br label %mbsalign_cleanup, !dbg !14587

mbsalign_cleanup:                                 ; preds = %if.end80, %if.else45, %if.else15, %if.else
  call void @llvm.dbg.label(metadata !14588), !dbg !14589
  %80 = load i32*, i32** %str_wc, align 8, !dbg !14590
  %81 = bitcast i32* %80 to i8*, !dbg !14590
  call void @free(i8* %81) #13, !dbg !14591
  %82 = load i8*, i8** %newstr, align 8, !dbg !14592
  call void @free(i8* %82) #13, !dbg !14593
  %83 = load i64, i64* %ret, align 8, !dbg !14594
  ret i64 %83, !dbg !14595
}

; Function Attrs: nounwind
declare dso_local i64 @mbstowcs(i32*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @wc_ensure_printable(i32* %wchars) #0 !dbg !14596 {
entry:
  %wchars.addr = alloca i32*, align 8
  %replaced = alloca i8, align 1, !ctir !141
  %wc = alloca i32*, align 8, !ctir !1591
  store i32* %wchars, i32** %wchars.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %wchars.addr, metadata !14599, metadata !DIExpression()), !dbg !14600
  call void @llvm.dbg.declare(metadata i8* %replaced, metadata !14601, metadata !DIExpression()), !dbg !14602
  store i8 0, i8* %replaced, align 1, !dbg !14602
  call void @llvm.dbg.declare(metadata i32** %wc, metadata !14603, metadata !DIExpression()), !dbg !14604
  %0 = load i32*, i32** %wchars.addr, align 8, !dbg !14605
  store i32* %0, i32** %wc, align 8, !dbg !14604
  br label %while.cond, !dbg !14606

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32*, i32** %wc, align 8, !dbg !14607
  %2 = load i32, i32* %1, align 4, !dbg !14608, !ctir !751
  %tobool = icmp ne i32 %2, 0, !dbg !14606
  br i1 %tobool, label %while.body, label %while.end, !dbg !14606

while.body:                                       ; preds = %while.cond
  %3 = load i32*, i32** %wc, align 8, !dbg !14609
  %4 = load i32, i32* %3, align 4, !dbg !14612, !ctir !751
  %call = call i32 @iswprint(i32 %4) #13, !dbg !14613
  %tobool1 = icmp ne i32 %call, 0, !dbg !14613
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14614

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc, align 8, !dbg !14615
  store i32 65533, i32* %5, align 4, !dbg !14617, !ctir !751
  store i8 1, i8* %replaced, align 1, !dbg !14618
  br label %if.end, !dbg !14619

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i32*, i32** %wc, align 8, !dbg !14620
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1, !dbg !14620, !ctir !751
  store i32* %incdec.ptr, i32** %wc, align 8, !dbg !14620
  br label %while.cond, !dbg !14606, !llvm.loop !14621

while.end:                                        ; preds = %while.cond
  %7 = load i8, i8* %replaced, align 1, !dbg !14623
  %tobool2 = trunc i8 %7 to i1, !dbg !14623
  ret i1 %tobool2, !dbg !14624
}

; Function Attrs: nounwind
declare dso_local i32 @wcswidth(i32*, i64) #2

; Function Attrs: nounwind
declare dso_local i64 @wcstombs(i8*, i32*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @wc_truncate(i32* %wc, i64 %width) #0 !dbg !14625 {
entry:
  %wc.addr = alloca i32*, align 8
  %width.addr = alloca i64, align 8
  %cells = alloca i64, align 8, !ctir !149
  %next_cells = alloca i32, align 4, !ctir !27
  store i32* %wc, i32** %wc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %wc.addr, metadata !14628, metadata !DIExpression()), !dbg !14629
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14630, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.declare(metadata i64* %cells, metadata !14632, metadata !DIExpression()), !dbg !14633
  store i64 0, i64* %cells, align 8, !dbg !14633
  call void @llvm.dbg.declare(metadata i32* %next_cells, metadata !14634, metadata !DIExpression()), !dbg !14635
  store i32 0, i32* %next_cells, align 4, !dbg !14635
  br label %while.cond, !dbg !14636

while.cond:                                       ; preds = %if.end4, %entry
  %0 = load i32*, i32** %wc.addr, align 8, !dbg !14637
  %1 = load i32, i32* %0, align 4, !dbg !14638, !ctir !751
  %tobool = icmp ne i32 %1, 0, !dbg !14636
  br i1 %tobool, label %while.body, label %while.end, !dbg !14636

while.body:                                       ; preds = %while.cond
  %2 = load i32*, i32** %wc.addr, align 8, !dbg !14639
  %3 = load i32, i32* %2, align 4, !dbg !14641, !ctir !751
  %call = call i32 @wcwidth(i32 %3) #13, !dbg !14642
  store i32 %call, i32* %next_cells, align 4, !dbg !14643
  %4 = load i32, i32* %next_cells, align 4, !dbg !14644
  %cmp = icmp eq i32 %4, -1, !dbg !14646
  br i1 %cmp, label %if.then, label %if.end, !dbg !14647

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc.addr, align 8, !dbg !14648
  store i32 65533, i32* %5, align 4, !dbg !14650, !ctir !751
  store i32 1, i32* %next_cells, align 4, !dbg !14651
  br label %if.end, !dbg !14652

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i64, i64* %cells, align 8, !dbg !14653
  %7 = load i32, i32* %next_cells, align 4, !dbg !14655
  %conv = sext i32 %7 to i64, !dbg !14655
  %add = add i64 %6, %conv, !dbg !14656
  %8 = load i64, i64* %width.addr, align 8, !dbg !14657
  %cmp1 = icmp ugt i64 %add, %8, !dbg !14658
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !14659

if.then3:                                         ; preds = %if.end
  br label %while.end, !dbg !14660

if.end4:                                          ; preds = %if.end
  %9 = load i32, i32* %next_cells, align 4, !dbg !14661
  %conv5 = sext i32 %9 to i64, !dbg !14661
  %10 = load i64, i64* %cells, align 8, !dbg !14662
  %add6 = add i64 %10, %conv5, !dbg !14662
  store i64 %add6, i64* %cells, align 8, !dbg !14662
  %11 = load i32*, i32** %wc.addr, align 8, !dbg !14663
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1, !dbg !14663, !ctir !751
  store i32* %incdec.ptr, i32** %wc.addr, align 8, !dbg !14663
  br label %while.cond, !dbg !14636, !llvm.loop !14664

while.end:                                        ; preds = %if.then3, %while.cond
  %12 = load i32*, i32** %wc.addr, align 8, !dbg !14666
  store i32 0, i32* %12, align 4, !dbg !14667, !ctir !751
  %13 = load i64, i64* %cells, align 8, !dbg !14668
  ret i64 %13, !dbg !14669
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @mbs_align_pad(i8* %dest, i8* %dest_end, i64 %n_spaces) #0 !dbg !14670 {
entry:
  %dest.addr = alloca i8*, align 8
  %dest_end.addr = alloca i8*, align 8
  %n_spaces.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14673, metadata !DIExpression()), !dbg !14674
  store i8* %dest_end, i8** %dest_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest_end.addr, metadata !14675, metadata !DIExpression()), !dbg !14676
  store i64 %n_spaces, i64* %n_spaces.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_spaces.addr, metadata !14677, metadata !DIExpression()), !dbg !14678
  br label %while.cond, !dbg !14679

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %n_spaces.addr, align 8, !dbg !14680
  %dec = add i64 %0, -1, !dbg !14680
  store i64 %dec, i64* %n_spaces.addr, align 8, !dbg !14680
  %tobool = icmp ne i64 %0, 0, !dbg !14680
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14681

land.rhs:                                         ; preds = %while.cond
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !14682
  %2 = load i8*, i8** %dest_end.addr, align 8, !dbg !14683
  %cmp = icmp ult i8* %1, %2, !dbg !14684
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !14685
  br i1 %3, label %while.body, label %while.end, !dbg !14679

while.body:                                       ; preds = %land.end
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !14686
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !14686, !ctir !144
  store i8* %incdec.ptr, i8** %dest.addr, align 8, !dbg !14686
  store i8 32, i8* %4, align 1, !dbg !14687, !ctir !144
  br label %while.cond, !dbg !14679, !llvm.loop !14688

while.end:                                        ; preds = %land.end
  %5 = load i8*, i8** %dest.addr, align 8, !dbg !14690
  store i8 0, i8* %5, align 1, !dbg !14691, !ctir !144
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !14692
  ret i8* %6, !dbg !14693
}

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @ambsalign(i8* %src, i64* %width, i32 %align, i32 %flags) #0 !dbg !14694 {
entry:
  %src.addr = alloca i8*, align 8
  %width.addr = alloca i64*, align 8
  %align.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %orig_width = alloca i64, align 8, !ctir !149
  %size = alloca i64, align 8, !ctir !149
  %req = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %nbuf = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14697, metadata !DIExpression()), !dbg !14698
  store i64* %width, i64** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14703, metadata !DIExpression()), !dbg !14704
  call void @llvm.dbg.declare(metadata i64* %orig_width, metadata !14705, metadata !DIExpression()), !dbg !14706
  %0 = load i64*, i64** %width.addr, align 8, !dbg !14707
  %1 = load i64, i64* %0, align 8, !dbg !14708, !ctir !149
  store i64 %1, i64* %orig_width, align 8, !dbg !14706
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14709, metadata !DIExpression()), !dbg !14710
  %2 = load i64*, i64** %width.addr, align 8, !dbg !14711
  %3 = load i64, i64* %2, align 8, !dbg !14712, !ctir !149
  store i64 %3, i64* %size, align 8, !dbg !14710
  call void @llvm.dbg.declare(metadata i64* %req, metadata !14713, metadata !DIExpression()), !dbg !14714
  %4 = load i64, i64* %size, align 8, !dbg !14715
  store i64 %4, i64* %req, align 8, !dbg !14714
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14716, metadata !DIExpression()), !dbg !14717
  store i8* null, i8** %buf, align 8, !dbg !14717
  br label %while.cond, !dbg !14718

while.cond:                                       ; preds = %if.end5, %entry
  %5 = load i64, i64* %req, align 8, !dbg !14719
  %6 = load i64, i64* %size, align 8, !dbg !14720
  %cmp = icmp uge i64 %5, %6, !dbg !14721
  br i1 %cmp, label %while.body, label %while.end, !dbg !14718

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %nbuf, metadata !14722, metadata !DIExpression()), !dbg !14724
  %7 = load i64, i64* %req, align 8, !dbg !14725
  %add = add i64 %7, 1, !dbg !14726
  store i64 %add, i64* %size, align 8, !dbg !14727
  %8 = load i8*, i8** %buf, align 8, !dbg !14728
  %9 = load i64, i64* %size, align 8, !dbg !14729
  %call = call i8* @realloc(i8* %8, i64 %9) #13, !dbg !14730
  store i8* %call, i8** %nbuf, align 8, !dbg !14731
  %10 = load i8*, i8** %nbuf, align 8, !dbg !14732
  %cmp1 = icmp eq i8* %10, null, !dbg !14734
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14735

if.then:                                          ; preds = %while.body
  %11 = load i8*, i8** %buf, align 8, !dbg !14736
  call void @free(i8* %11) #13, !dbg !14738
  store i8* null, i8** %buf, align 8, !dbg !14739
  br label %while.end, !dbg !14740

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %nbuf, align 8, !dbg !14741
  store i8* %12, i8** %buf, align 8, !dbg !14742
  %13 = load i64, i64* %orig_width, align 8, !dbg !14743
  %14 = load i64*, i64** %width.addr, align 8, !dbg !14744
  store i64 %13, i64* %14, align 8, !dbg !14745, !ctir !149
  %15 = load i8*, i8** %src.addr, align 8, !dbg !14746
  %16 = load i8*, i8** %buf, align 8, !dbg !14747
  %17 = load i64, i64* %size, align 8, !dbg !14748
  %18 = load i64*, i64** %width.addr, align 8, !dbg !14749
  %19 = load i32, i32* %align.addr, align 4, !dbg !14750
  %20 = load i32, i32* %flags.addr, align 4, !dbg !14751
  %call2 = call i64 @mbsalign(i8* %15, i8* %16, i64 %17, i64* %18, i32 %19, i32 %20), !dbg !14752
  store i64 %call2, i64* %req, align 8, !dbg !14753
  %21 = load i64, i64* %req, align 8, !dbg !14754
  %cmp3 = icmp eq i64 %21, -1, !dbg !14756
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !14757

if.then4:                                         ; preds = %if.end
  %22 = load i8*, i8** %buf, align 8, !dbg !14758
  call void @free(i8* %22) #13, !dbg !14760
  store i8* null, i8** %buf, align 8, !dbg !14761
  br label %while.end, !dbg !14762

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !14718, !llvm.loop !14763

while.end:                                        ; preds = %if.then4, %if.then, %while.cond
  %23 = load i8*, i8** %buf, align 8, !dbg !14765
  ret i8* %23, !dbg !14766
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gnu_mbswidth(i8* %string, i32 %flags) #0 !dbg !14767 {
entry:
  %string.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !14771, metadata !DIExpression()), !dbg !14772
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14773, metadata !DIExpression()), !dbg !14774
  %0 = load i8*, i8** %string.addr, align 8, !dbg !14775
  %1 = load i8*, i8** %string.addr, align 8, !dbg !14776
  %call = call i64 @strlen(i8* %1) #16, !dbg !14777
  %2 = load i32, i32* %flags.addr, align 4, !dbg !14778
  %call1 = call i32 @mbsnwidth(i8* %0, i64 %call, i32 %2), !dbg !14779
  ret i32 %call1, !dbg !14780
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) #0 !dbg !14781 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %width = alloca i32, align 4, !ctir !27
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1595
  %wc = alloca i32, align 4, !ctir !751
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %c = alloca i8, align 1, !ctir !725
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !14784, metadata !DIExpression()), !dbg !14785
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !14786, metadata !DIExpression()), !dbg !14787
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14788, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14790, metadata !DIExpression()), !dbg !14791
  %0 = load i8*, i8** %string.addr, align 8, !dbg !14792
  store i8* %0, i8** %p, align 8, !dbg !14791
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !14793, metadata !DIExpression()), !dbg !14794
  %1 = load i8*, i8** %p, align 8, !dbg !14795
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !14796
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !14797, !ctir !147
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !14794
  call void @llvm.dbg.declare(metadata i32* %width, metadata !14798, metadata !DIExpression()), !dbg !14799
  store i32 0, i32* %width, align 4, !dbg !14800
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !14801
  %cmp = icmp ugt i64 %call, 1, !dbg !14803
  br i1 %cmp, label %if.then, label %if.end49, !dbg !14804

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !14805

while.cond:                                       ; preds = %sw.epilog, %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !14807
  %4 = load i8*, i8** %plimit, align 8, !dbg !14808
  %cmp1 = icmp ult i8* %3, %4, !dbg !14809
  br i1 %cmp1, label %while.body, label %while.end, !dbg !14805

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8, !dbg !14810
  %6 = load i8, i8* %5, align 1, !dbg !14811, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !14811
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !14812

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !14813
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !14813, !ctir !147
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14813
  %8 = load i32, i32* %width, align 4, !dbg !14815
  %inc = add nsw i32 %8, 1, !dbg !14815
  store i32 %inc, i32* %width, align 4, !dbg !14815
  br label %sw.epilog, !dbg !14816

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !14817, metadata !DIExpression()), !dbg !14819
  %9 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !14820
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !14820
  br label %do.body, !dbg !14821

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !14822, metadata !DIExpression()), !dbg !14824
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14825, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14827, metadata !DIExpression()), !dbg !14828
  %10 = load i8*, i8** %p, align 8, !dbg !14829
  %11 = load i8*, i8** %plimit, align 8, !dbg !14830
  %12 = load i8*, i8** %p, align 8, !dbg !14831
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !14832
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !14832
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14832
  %call2 = call i64 @rpl_mbrtowc(i32* %wc, i8* %10, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !14833
  store i64 %call2, i64* %bytes, align 8, !dbg !14834
  %13 = load i64, i64* %bytes, align 8, !dbg !14835
  %cmp3 = icmp eq i64 %13, -1, !dbg !14837
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !14838

if.then5:                                         ; preds = %do.body
  %14 = load i32, i32* %flags.addr, align 4, !dbg !14839
  %and = and i32 %14, 1, !dbg !14842
  %tobool = icmp ne i32 %and, 0, !dbg !14842
  br i1 %tobool, label %if.else, label %if.then6, !dbg !14843

if.then6:                                         ; preds = %if.then5
  %15 = load i8*, i8** %p, align 8, !dbg !14844
  %incdec.ptr7 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !14844, !ctir !147
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14844
  %16 = load i32, i32* %width, align 4, !dbg !14846
  %inc8 = add nsw i32 %16, 1, !dbg !14846
  store i32 %inc8, i32* %width, align 4, !dbg !14846
  br label %do.end, !dbg !14847

if.else:                                          ; preds = %if.then5
  store i32 -1, i32* %retval, align 4, !dbg !14848
  br label %return, !dbg !14848

if.end:                                           ; preds = %do.body
  %17 = load i64, i64* %bytes, align 8, !dbg !14849
  %cmp9 = icmp eq i64 %17, -2, !dbg !14851
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14852

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !14853
  %and12 = and i32 %18, 1, !dbg !14856
  %tobool13 = icmp ne i32 %and12, 0, !dbg !14856
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !14857

if.then14:                                        ; preds = %if.then11
  %19 = load i8*, i8** %plimit, align 8, !dbg !14858
  store i8* %19, i8** %p, align 8, !dbg !14860
  %20 = load i32, i32* %width, align 4, !dbg !14861
  %inc15 = add nsw i32 %20, 1, !dbg !14861
  store i32 %inc15, i32* %width, align 4, !dbg !14861
  br label %do.end, !dbg !14862

if.else16:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !14863
  br label %return, !dbg !14863

if.end17:                                         ; preds = %if.end
  %21 = load i64, i64* %bytes, align 8, !dbg !14864
  %cmp18 = icmp eq i64 %21, 0, !dbg !14866
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !14867

if.then20:                                        ; preds = %if.end17
  store i64 1, i64* %bytes, align 8, !dbg !14868
  br label %if.end21, !dbg !14869

if.end21:                                         ; preds = %if.then20, %if.end17
  %22 = load i32, i32* %wc, align 4, !dbg !14870
  %call22 = call i32 @wcwidth(i32 %22) #13, !dbg !14871
  store i32 %call22, i32* %w, align 4, !dbg !14872
  %23 = load i32, i32* %w, align 4, !dbg !14873
  %cmp23 = icmp sge i32 %23, 0, !dbg !14875
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !14876

if.then25:                                        ; preds = %if.end21
  %24 = load i32, i32* %w, align 4, !dbg !14877
  %25 = load i32, i32* %width, align 4, !dbg !14880
  %sub = sub nsw i32 2147483647, %25, !dbg !14881
  %cmp26 = icmp sgt i32 %24, %sub, !dbg !14882
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !14883

if.then28:                                        ; preds = %if.then25
  br label %overflow, !dbg !14884

if.end29:                                         ; preds = %if.then25
  %26 = load i32, i32* %w, align 4, !dbg !14885
  %27 = load i32, i32* %width, align 4, !dbg !14886
  %add = add nsw i32 %27, %26, !dbg !14886
  store i32 %add, i32* %width, align 4, !dbg !14886
  br label %if.end45, !dbg !14887

if.else30:                                        ; preds = %if.end21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !14888
  %and31 = and i32 %28, 2, !dbg !14890
  %tobool32 = icmp ne i32 %and31, 0, !dbg !14890
  br i1 %tobool32, label %if.else43, label %if.then33, !dbg !14891

if.then33:                                        ; preds = %if.else30
  %29 = load i32, i32* %wc, align 4, !dbg !14892
  %call34 = call i32 @iswcntrl(i32 %29) #13, !dbg !14895
  %tobool35 = icmp ne i32 %call34, 0, !dbg !14895
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !14896

if.then36:                                        ; preds = %if.then33
  %30 = load i32, i32* %width, align 4, !dbg !14897
  %cmp37 = icmp eq i32 %30, 2147483647, !dbg !14900
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !14901

if.then39:                                        ; preds = %if.then36
  br label %overflow, !dbg !14902

if.end40:                                         ; preds = %if.then36
  %31 = load i32, i32* %width, align 4, !dbg !14903
  %inc41 = add nsw i32 %31, 1, !dbg !14903
  store i32 %inc41, i32* %width, align 4, !dbg !14903
  br label %if.end42, !dbg !14904

if.end42:                                         ; preds = %if.end40, %if.then33
  br label %if.end44, !dbg !14905

if.else43:                                        ; preds = %if.else30
  store i32 -1, i32* %retval, align 4, !dbg !14906
  br label %return, !dbg !14906

if.end44:                                         ; preds = %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end29
  %32 = load i64, i64* %bytes, align 8, !dbg !14907
  %33 = load i8*, i8** %p, align 8, !dbg !14908
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !14908, !ctir !147
  store i8* %add.ptr46, i8** %p, align 8, !dbg !14908
  br label %do.cond, !dbg !14909

do.cond:                                          ; preds = %if.end45
  %call47 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !14910
  %tobool48 = icmp ne i32 %call47, 0, !dbg !14911
  %lnot = xor i1 %tobool48, true, !dbg !14911
  br i1 %lnot, label %do.body, label %do.end, !dbg !14909, !llvm.loop !14912

do.end:                                           ; preds = %do.cond, %if.then14, %if.then6
  br label %sw.epilog, !dbg !14914

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !14805, !llvm.loop !14915

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %width, align 4, !dbg !14917
  store i32 %34, i32* %retval, align 4, !dbg !14918
  br label %return, !dbg !14918

if.end49:                                         ; preds = %entry
  br label %while.cond50, !dbg !14919

while.cond50:                                     ; preds = %if.end86, %if.end49
  %35 = load i8*, i8** %p, align 8, !dbg !14920
  %36 = load i8*, i8** %plimit, align 8, !dbg !14921
  %cmp51 = icmp ult i8* %35, %36, !dbg !14922
  br i1 %cmp51, label %while.body53, label %while.end87, !dbg !14919

while.body53:                                     ; preds = %while.cond50
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14923, metadata !DIExpression()), !dbg !14925
  %37 = load i8*, i8** %p, align 8, !dbg !14926
  %incdec.ptr54 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !14926, !ctir !147
  store i8* %incdec.ptr54, i8** %p, align 8, !dbg !14926
  %38 = load i8, i8* %37, align 1, !dbg !14927, !ctir !147
  store i8 %38, i8* %c, align 1, !dbg !14925
  %call55 = call i16** @__ctype_b_loc() #17, !dbg !14928
  %39 = load i16*, i16** %call55, align 8, !dbg !14928, !ctir !696
  %40 = load i8, i8* %c, align 1, !dbg !14928
  %conv56 = zext i8 %40 to i32, !dbg !14928
  %idxprom = sext i32 %conv56 to i64, !dbg !14928
  %arrayidx = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !14928, !ctir !696
  %41 = load i16, i16* %arrayidx, align 2, !dbg !14928
  %conv57 = zext i16 %41 to i32, !dbg !14928
  %and58 = and i32 %conv57, 16384, !dbg !14928
  %tobool59 = icmp ne i32 %and58, 0, !dbg !14928
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !14930

if.then60:                                        ; preds = %while.body53
  %42 = load i32, i32* %width, align 4, !dbg !14931
  %cmp61 = icmp eq i32 %42, 2147483647, !dbg !14934
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !14935

if.then63:                                        ; preds = %if.then60
  br label %overflow, !dbg !14936

if.end64:                                         ; preds = %if.then60
  %43 = load i32, i32* %width, align 4, !dbg !14937
  %inc65 = add nsw i32 %43, 1, !dbg !14937
  store i32 %inc65, i32* %width, align 4, !dbg !14937
  br label %if.end86, !dbg !14938

if.else66:                                        ; preds = %while.body53
  %44 = load i32, i32* %flags.addr, align 4, !dbg !14939
  %and67 = and i32 %44, 2, !dbg !14941
  %tobool68 = icmp ne i32 %and67, 0, !dbg !14941
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !14942

if.then69:                                        ; preds = %if.else66
  %call70 = call i16** @__ctype_b_loc() #17, !dbg !14943
  %45 = load i16*, i16** %call70, align 8, !dbg !14943, !ctir !696
  %46 = load i8, i8* %c, align 1, !dbg !14943
  %conv71 = zext i8 %46 to i32, !dbg !14943
  %idxprom72 = sext i32 %conv71 to i64, !dbg !14943
  %arrayidx73 = getelementptr inbounds i16, i16* %45, i64 %idxprom72, !dbg !14943, !ctir !696
  %47 = load i16, i16* %arrayidx73, align 2, !dbg !14943
  %conv74 = zext i16 %47 to i32, !dbg !14943
  %and75 = and i32 %conv74, 2, !dbg !14943
  %tobool76 = icmp ne i32 %and75, 0, !dbg !14943
  br i1 %tobool76, label %if.end83, label %if.then77, !dbg !14946

if.then77:                                        ; preds = %if.then69
  %48 = load i32, i32* %width, align 4, !dbg !14947
  %cmp78 = icmp eq i32 %48, 2147483647, !dbg !14950
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !14951

if.then80:                                        ; preds = %if.then77
  br label %overflow, !dbg !14952

if.end81:                                         ; preds = %if.then77
  %49 = load i32, i32* %width, align 4, !dbg !14953
  %inc82 = add nsw i32 %49, 1, !dbg !14953
  store i32 %inc82, i32* %width, align 4, !dbg !14953
  br label %if.end83, !dbg !14954

if.end83:                                         ; preds = %if.end81, %if.then69
  br label %if.end85, !dbg !14955

if.else84:                                        ; preds = %if.else66
  store i32 -1, i32* %retval, align 4, !dbg !14956
  br label %return, !dbg !14956

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end64
  br label %while.cond50, !dbg !14919, !llvm.loop !14957

while.end87:                                      ; preds = %while.cond50
  %50 = load i32, i32* %width, align 4, !dbg !14959
  store i32 %50, i32* %retval, align 4, !dbg !14960
  br label %return, !dbg !14960

overflow:                                         ; preds = %if.then80, %if.then63, %if.then39, %if.then28
  call void @llvm.dbg.label(metadata !14961), !dbg !14962
  store i32 2147483647, i32* %retval, align 4, !dbg !14963
  br label %return, !dbg !14963

return:                                           ; preds = %overflow, %while.end87, %if.else84, %while.end, %if.else43, %if.else16, %if.else
  %51 = load i32, i32* %retval, align 4, !dbg !14964
  ret i32 %51, !dbg !14964
}

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mpsort(i8** %base, i64 %n, i32 (i8*, i8*)* %cmp) #0 !dbg !14965 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  store i8** %base, i8*** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !14973, metadata !DIExpression()), !dbg !14974
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14975, metadata !DIExpression()), !dbg !14976
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !14977, metadata !DIExpression()), !dbg !14978
  %0 = load i8**, i8*** %base.addr, align 8, !dbg !14979
  %1 = load i64, i64* %n.addr, align 8, !dbg !14980
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !14981
  %3 = load i64, i64* %n.addr, align 8, !dbg !14982
  %add.ptr = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !14983, !ctir !175
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !14984
  call void @mpsort_with_tmp(i8** %0, i64 %1, i8** %add.ptr, i32 (i8*, i8*)* %4), !dbg !14985
  ret void, !dbg !14986
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_with_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !14987 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %tmp.addr = alloca i8**, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %p0 = alloca i8*, align 8, !ctir !175
  %p1 = alloca i8*, align 8, !ctir !175
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %tlim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %bb = alloca i8*, align 8, !ctir !175
  %tt = alloca i8*, align 8, !ctir !175
  store i8** %base, i8*** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !14991, metadata !DIExpression()), !dbg !14992
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14993, metadata !DIExpression()), !dbg !14994
  store i8** %tmp, i8*** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !14995, metadata !DIExpression()), !dbg !14996
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !14997, metadata !DIExpression()), !dbg !14998
  %0 = load i64, i64* %n.addr, align 8, !dbg !14999
  %cmp1 = icmp ule i64 %0, 2, !dbg !15001
  br i1 %cmp1, label %if.then, label %if.else, !dbg !15002

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !15003
  %cmp2 = icmp eq i64 %1, 2, !dbg !15006
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !15007

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !15008, metadata !DIExpression()), !dbg !15010
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15011
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !15011, !ctir !181
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !15011
  store i8* %3, i8** %p0, align 8, !dbg !15010
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !15012, metadata !DIExpression()), !dbg !15013
  %4 = load i8**, i8*** %base.addr, align 8, !dbg !15014
  %arrayidx4 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !15014, !ctir !181
  %5 = load i8*, i8** %arrayidx4, align 8, !dbg !15014
  store i8* %5, i8** %p1, align 8, !dbg !15013
  %6 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15015
  %7 = load i8*, i8** %p0, align 8, !dbg !15017
  %8 = load i8*, i8** %p1, align 8, !dbg !15018
  %call = call i32 %6(i8* %7, i8* %8), !dbg !15015
  %cmp5 = icmp sle i32 %call, 0, !dbg !15019
  br i1 %cmp5, label %if.end, label %if.then6, !dbg !15020

if.then6:                                         ; preds = %if.then3
  %9 = load i8*, i8** %p1, align 8, !dbg !15021
  %10 = load i8**, i8*** %base.addr, align 8, !dbg !15023
  %arrayidx7 = getelementptr inbounds i8*, i8** %10, i64 0, !dbg !15023, !ctir !181
  store i8* %9, i8** %arrayidx7, align 8, !dbg !15024
  %11 = load i8*, i8** %p0, align 8, !dbg !15025
  %12 = load i8**, i8*** %base.addr, align 8, !dbg !15026
  %arrayidx8 = getelementptr inbounds i8*, i8** %12, i64 1, !dbg !15026, !ctir !181
  store i8* %11, i8** %arrayidx8, align 8, !dbg !15027
  br label %if.end, !dbg !15028

if.end:                                           ; preds = %if.then6, %if.then3
  br label %if.end9, !dbg !15029

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end39, !dbg !15030

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15031, metadata !DIExpression()), !dbg !15033
  %13 = load i64, i64* %n.addr, align 8, !dbg !15034
  %div = udiv i64 %13, 2, !dbg !15035
  store i64 %div, i64* %n1, align 8, !dbg !15033
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15036, metadata !DIExpression()), !dbg !15037
  %14 = load i64, i64* %n.addr, align 8, !dbg !15038
  %15 = load i64, i64* %n1, align 8, !dbg !15039
  %sub = sub i64 %14, %15, !dbg !15040
  store i64 %sub, i64* %n2, align 8, !dbg !15037
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i64* %t, metadata !15043, metadata !DIExpression()), !dbg !15044
  store i64 0, i64* %t, align 8, !dbg !15044
  call void @llvm.dbg.declare(metadata i64* %tlim, metadata !15045, metadata !DIExpression()), !dbg !15046
  %16 = load i64, i64* %n1, align 8, !dbg !15047
  store i64 %16, i64* %tlim, align 8, !dbg !15046
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15048, metadata !DIExpression()), !dbg !15049
  %17 = load i64, i64* %n1, align 8, !dbg !15050
  store i64 %17, i64* %b, align 8, !dbg !15049
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15051, metadata !DIExpression()), !dbg !15052
  %18 = load i64, i64* %n.addr, align 8, !dbg !15053
  store i64 %18, i64* %blim, align 8, !dbg !15052
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15054, metadata !DIExpression()), !dbg !15055
  call void @llvm.dbg.declare(metadata i8** %tt, metadata !15056, metadata !DIExpression()), !dbg !15057
  %19 = load i8**, i8*** %base.addr, align 8, !dbg !15058
  %20 = load i64, i64* %n1, align 8, !dbg !15059
  %add.ptr = getelementptr inbounds i8*, i8** %19, i64 %20, !dbg !15060, !ctir !175
  %21 = load i64, i64* %n2, align 8, !dbg !15061
  %22 = load i8**, i8*** %tmp.addr, align 8, !dbg !15062
  %23 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15063
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %21, i8** %22, i32 (i8*, i8*)* %23), !dbg !15064
  %24 = load i64, i64* %n1, align 8, !dbg !15065
  %cmp10 = icmp ult i64 %24, 2, !dbg !15067
  br i1 %cmp10, label %if.then11, label %if.else14, !dbg !15068

if.then11:                                        ; preds = %if.else
  %25 = load i8**, i8*** %base.addr, align 8, !dbg !15069
  %arrayidx12 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !15069, !ctir !181
  %26 = load i8*, i8** %arrayidx12, align 8, !dbg !15069
  %27 = load i8**, i8*** %tmp.addr, align 8, !dbg !15070
  %arrayidx13 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !15070, !ctir !181
  store i8* %26, i8** %arrayidx13, align 8, !dbg !15071
  br label %if.end15, !dbg !15070

if.else14:                                        ; preds = %if.else
  %28 = load i8**, i8*** %base.addr, align 8, !dbg !15072
  %29 = load i64, i64* %n1, align 8, !dbg !15073
  %30 = load i8**, i8*** %tmp.addr, align 8, !dbg !15074
  %31 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15075
  call void @mpsort_into_tmp(i8** %28, i64 %29, i8** %30, i32 (i8*, i8*)* %31), !dbg !15076
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then11
  %32 = load i8**, i8*** %tmp.addr, align 8, !dbg !15077
  %33 = load i64, i64* %t, align 8, !dbg !15078
  %arrayidx16 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !15077, !ctir !181
  %34 = load i8*, i8** %arrayidx16, align 8, !dbg !15077
  store i8* %34, i8** %tt, align 8, !dbg !15079
  %35 = load i8**, i8*** %base.addr, align 8, !dbg !15080
  %36 = load i64, i64* %b, align 8, !dbg !15081
  %arrayidx17 = getelementptr inbounds i8*, i8** %35, i64 %36, !dbg !15080, !ctir !181
  %37 = load i8*, i8** %arrayidx17, align 8, !dbg !15080
  store i8* %37, i8** %bb, align 8, !dbg !15082
  store i64 0, i64* %i, align 8, !dbg !15083
  br label %for.cond, !dbg !15085

for.cond:                                         ; preds = %if.end38, %if.end15
  %38 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15086
  %39 = load i8*, i8** %tt, align 8, !dbg !15089
  %40 = load i8*, i8** %bb, align 8, !dbg !15090
  %call18 = call i32 %38(i8* %39, i8* %40), !dbg !15086
  %cmp19 = icmp sle i32 %call18, 0, !dbg !15091
  br i1 %cmp19, label %if.then20, label %if.else27, !dbg !15092

if.then20:                                        ; preds = %for.cond
  %41 = load i8*, i8** %tt, align 8, !dbg !15093
  %42 = load i8**, i8*** %base.addr, align 8, !dbg !15095
  %43 = load i64, i64* %i, align 8, !dbg !15096
  %inc = add i64 %43, 1, !dbg !15096
  store i64 %inc, i64* %i, align 8, !dbg !15096
  %arrayidx21 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !15095, !ctir !181
  store i8* %41, i8** %arrayidx21, align 8, !dbg !15097
  %44 = load i64, i64* %t, align 8, !dbg !15098
  %inc22 = add i64 %44, 1, !dbg !15098
  store i64 %inc22, i64* %t, align 8, !dbg !15098
  %45 = load i64, i64* %t, align 8, !dbg !15099
  %46 = load i64, i64* %tlim, align 8, !dbg !15101
  %cmp23 = icmp eq i64 %45, %46, !dbg !15102
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !15103

if.then24:                                        ; preds = %if.then20
  br label %for.end, !dbg !15104

if.end25:                                         ; preds = %if.then20
  %47 = load i8**, i8*** %tmp.addr, align 8, !dbg !15105
  %48 = load i64, i64* %t, align 8, !dbg !15106
  %arrayidx26 = getelementptr inbounds i8*, i8** %47, i64 %48, !dbg !15105, !ctir !181
  %49 = load i8*, i8** %arrayidx26, align 8, !dbg !15105
  store i8* %49, i8** %tt, align 8, !dbg !15107
  br label %if.end38, !dbg !15108

if.else27:                                        ; preds = %for.cond
  %50 = load i8*, i8** %bb, align 8, !dbg !15109
  %51 = load i8**, i8*** %base.addr, align 8, !dbg !15111
  %52 = load i64, i64* %i, align 8, !dbg !15112
  %inc28 = add i64 %52, 1, !dbg !15112
  store i64 %inc28, i64* %i, align 8, !dbg !15112
  %arrayidx29 = getelementptr inbounds i8*, i8** %51, i64 %52, !dbg !15111, !ctir !181
  store i8* %50, i8** %arrayidx29, align 8, !dbg !15113
  %53 = load i64, i64* %b, align 8, !dbg !15114
  %inc30 = add i64 %53, 1, !dbg !15114
  store i64 %inc30, i64* %b, align 8, !dbg !15114
  %54 = load i64, i64* %b, align 8, !dbg !15115
  %55 = load i64, i64* %blim, align 8, !dbg !15117
  %cmp31 = icmp eq i64 %54, %55, !dbg !15118
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !15119

if.then32:                                        ; preds = %if.else27
  %56 = load i8**, i8*** %base.addr, align 8, !dbg !15120
  %57 = load i64, i64* %i, align 8, !dbg !15122
  %add.ptr33 = getelementptr inbounds i8*, i8** %56, i64 %57, !dbg !15123, !ctir !175
  %58 = bitcast i8** %add.ptr33 to i8*, !dbg !15124
  %59 = load i8**, i8*** %tmp.addr, align 8, !dbg !15125
  %60 = load i64, i64* %t, align 8, !dbg !15126
  %add.ptr34 = getelementptr inbounds i8*, i8** %59, i64 %60, !dbg !15127, !ctir !175
  %61 = bitcast i8** %add.ptr34 to i8*, !dbg !15124
  %62 = load i64, i64* %tlim, align 8, !dbg !15128
  %63 = load i64, i64* %t, align 8, !dbg !15129
  %sub35 = sub i64 %62, %63, !dbg !15130
  %mul = mul i64 %sub35, 8, !dbg !15131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %61, i64 %mul, i1 false), !dbg !15124
  br label %for.end, !dbg !15132

if.end36:                                         ; preds = %if.else27
  %64 = load i8**, i8*** %base.addr, align 8, !dbg !15133
  %65 = load i64, i64* %b, align 8, !dbg !15134
  %arrayidx37 = getelementptr inbounds i8*, i8** %64, i64 %65, !dbg !15133, !ctir !181
  %66 = load i8*, i8** %arrayidx37, align 8, !dbg !15133
  store i8* %66, i8** %bb, align 8, !dbg !15135
  br label %if.end38

if.end38:                                         ; preds = %if.end36, %if.end25
  br label %for.cond, !dbg !15136, !llvm.loop !15137

for.end:                                          ; preds = %if.then32, %if.then24
  br label %if.end39

if.end39:                                         ; preds = %for.end, %if.end9
  ret void, !dbg !15140
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_into_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15141 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %tmp.addr = alloca i8**, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %a = alloca i64, align 8, !ctir !149
  %alim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %ba = alloca i8*, align 8, !ctir !175
  %bb = alloca i8*, align 8, !ctir !175
  store i8** %base, i8*** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15142, metadata !DIExpression()), !dbg !15143
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15144, metadata !DIExpression()), !dbg !15145
  store i8** %tmp, i8*** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15146, metadata !DIExpression()), !dbg !15147
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15148, metadata !DIExpression()), !dbg !15149
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15150, metadata !DIExpression()), !dbg !15151
  %0 = load i64, i64* %n.addr, align 8, !dbg !15152
  %div = udiv i64 %0, 2, !dbg !15153
  store i64 %div, i64* %n1, align 8, !dbg !15151
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15154, metadata !DIExpression()), !dbg !15155
  %1 = load i64, i64* %n.addr, align 8, !dbg !15156
  %2 = load i64, i64* %n1, align 8, !dbg !15157
  %sub = sub i64 %1, %2, !dbg !15158
  store i64 %sub, i64* %n2, align 8, !dbg !15155
  call void @llvm.dbg.declare(metadata i64* %a, metadata !15159, metadata !DIExpression()), !dbg !15160
  store i64 0, i64* %a, align 8, !dbg !15160
  call void @llvm.dbg.declare(metadata i64* %alim, metadata !15161, metadata !DIExpression()), !dbg !15162
  %3 = load i64, i64* %n1, align 8, !dbg !15163
  store i64 %3, i64* %alim, align 8, !dbg !15162
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15164, metadata !DIExpression()), !dbg !15165
  %4 = load i64, i64* %n1, align 8, !dbg !15166
  store i64 %4, i64* %b, align 8, !dbg !15165
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15167, metadata !DIExpression()), !dbg !15168
  %5 = load i64, i64* %n.addr, align 8, !dbg !15169
  store i64 %5, i64* %blim, align 8, !dbg !15168
  call void @llvm.dbg.declare(metadata i8** %ba, metadata !15170, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15172, metadata !DIExpression()), !dbg !15173
  %6 = load i8**, i8*** %base.addr, align 8, !dbg !15174
  %7 = load i64, i64* %n1, align 8, !dbg !15175
  %add.ptr = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !15176, !ctir !175
  %8 = load i64, i64* %n2, align 8, !dbg !15177
  %9 = load i8**, i8*** %tmp.addr, align 8, !dbg !15178
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15179
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %8, i8** %9, i32 (i8*, i8*)* %10), !dbg !15180
  %11 = load i8**, i8*** %base.addr, align 8, !dbg !15181
  %12 = load i64, i64* %n1, align 8, !dbg !15182
  %13 = load i8**, i8*** %tmp.addr, align 8, !dbg !15183
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15184
  call void @mpsort_with_tmp(i8** %11, i64 %12, i8** %13, i32 (i8*, i8*)* %14), !dbg !15185
  %15 = load i8**, i8*** %base.addr, align 8, !dbg !15186
  %16 = load i64, i64* %a, align 8, !dbg !15187
  %arrayidx = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !15186, !ctir !181
  %17 = load i8*, i8** %arrayidx, align 8, !dbg !15186
  store i8* %17, i8** %ba, align 8, !dbg !15188
  %18 = load i8**, i8*** %base.addr, align 8, !dbg !15189
  %19 = load i64, i64* %b, align 8, !dbg !15190
  %arrayidx1 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !15189, !ctir !181
  %20 = load i8*, i8** %arrayidx1, align 8, !dbg !15189
  store i8* %20, i8** %bb, align 8, !dbg !15191
  br label %for.cond, !dbg !15192

for.cond:                                         ; preds = %if.end12, %entry
  %21 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15193
  %22 = load i8*, i8** %ba, align 8, !dbg !15197
  %23 = load i8*, i8** %bb, align 8, !dbg !15198
  %call = call i32 %21(i8* %22, i8* %23), !dbg !15193
  %cmp2 = icmp sle i32 %call, 0, !dbg !15199
  br i1 %cmp2, label %if.then, label %if.else, !dbg !15200

if.then:                                          ; preds = %for.cond
  %24 = load i8*, i8** %ba, align 8, !dbg !15201
  %25 = load i8**, i8*** %tmp.addr, align 8, !dbg !15203
  %incdec.ptr = getelementptr inbounds i8*, i8** %25, i32 1, !dbg !15203, !ctir !175
  store i8** %incdec.ptr, i8*** %tmp.addr, align 8, !dbg !15203
  store i8* %24, i8** %25, align 8, !dbg !15204, !ctir !175
  %26 = load i64, i64* %a, align 8, !dbg !15205
  %inc = add i64 %26, 1, !dbg !15205
  store i64 %inc, i64* %a, align 8, !dbg !15205
  %27 = load i64, i64* %a, align 8, !dbg !15206
  %28 = load i64, i64* %alim, align 8, !dbg !15208
  %cmp3 = icmp eq i64 %27, %28, !dbg !15209
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !15210

if.then4:                                         ; preds = %if.then
  %29 = load i64, i64* %b, align 8, !dbg !15211
  store i64 %29, i64* %a, align 8, !dbg !15213
  %30 = load i64, i64* %blim, align 8, !dbg !15214
  store i64 %30, i64* %alim, align 8, !dbg !15215
  br label %for.end, !dbg !15216

if.end:                                           ; preds = %if.then
  %31 = load i8**, i8*** %base.addr, align 8, !dbg !15217
  %32 = load i64, i64* %a, align 8, !dbg !15218
  %arrayidx5 = getelementptr inbounds i8*, i8** %31, i64 %32, !dbg !15217, !ctir !181
  %33 = load i8*, i8** %arrayidx5, align 8, !dbg !15217
  store i8* %33, i8** %ba, align 8, !dbg !15219
  br label %if.end12, !dbg !15220

if.else:                                          ; preds = %for.cond
  %34 = load i8*, i8** %bb, align 8, !dbg !15221
  %35 = load i8**, i8*** %tmp.addr, align 8, !dbg !15223
  %incdec.ptr6 = getelementptr inbounds i8*, i8** %35, i32 1, !dbg !15223, !ctir !175
  store i8** %incdec.ptr6, i8*** %tmp.addr, align 8, !dbg !15223
  store i8* %34, i8** %35, align 8, !dbg !15224, !ctir !175
  %36 = load i64, i64* %b, align 8, !dbg !15225
  %inc7 = add i64 %36, 1, !dbg !15225
  store i64 %inc7, i64* %b, align 8, !dbg !15225
  %37 = load i64, i64* %b, align 8, !dbg !15226
  %38 = load i64, i64* %blim, align 8, !dbg !15228
  %cmp8 = icmp eq i64 %37, %38, !dbg !15229
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !15230

if.then9:                                         ; preds = %if.else
  br label %for.end, !dbg !15231

if.end10:                                         ; preds = %if.else
  %39 = load i8**, i8*** %base.addr, align 8, !dbg !15232
  %40 = load i64, i64* %b, align 8, !dbg !15233
  %arrayidx11 = getelementptr inbounds i8*, i8** %39, i64 %40, !dbg !15232, !ctir !181
  %41 = load i8*, i8** %arrayidx11, align 8, !dbg !15232
  store i8* %41, i8** %bb, align 8, !dbg !15234
  br label %if.end12

if.end12:                                         ; preds = %if.end10, %if.end
  br label %for.cond, !dbg !15235, !llvm.loop !15236

for.end:                                          ; preds = %if.then9, %if.then4
  %42 = load i8**, i8*** %tmp.addr, align 8, !dbg !15239
  %43 = bitcast i8** %42 to i8*, !dbg !15240
  %44 = load i8**, i8*** %base.addr, align 8, !dbg !15241
  %45 = load i64, i64* %a, align 8, !dbg !15242
  %add.ptr13 = getelementptr inbounds i8*, i8** %44, i64 %45, !dbg !15243, !ctir !175
  %46 = bitcast i8** %add.ptr13 to i8*, !dbg !15240
  %47 = load i64, i64* %alim, align 8, !dbg !15244
  %48 = load i64, i64* %a, align 8, !dbg !15245
  %sub14 = sub i64 %47, %48, !dbg !15246
  %mul = mul i64 %sub14, 8, !dbg !15247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %46, i64 %mul, i1 false), !dbg !15240
  ret void, !dbg !15248
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @nstrftime(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15249 {
entry:
  %s.addr = alloca i8*, align 8
  %maxsize.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %tp.addr = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %tzset_called = alloca i8, align 1, !ctir !141
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15275, metadata !DIExpression()), !dbg !15276
  store i64 %maxsize, i64* %maxsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15277, metadata !DIExpression()), !dbg !15278
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15279, metadata !DIExpression()), !dbg !15280
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15281, metadata !DIExpression()), !dbg !15282
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15283, metadata !DIExpression()), !dbg !15284
  store i32 %ns, i32* %ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15285, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.declare(metadata i8* %tzset_called, metadata !15286, metadata !DIExpression()), !dbg !15287
  store i8 0, i8* %tzset_called, align 1, !dbg !15287
  %0 = load i8*, i8** %s.addr, align 8, !dbg !15288
  %1 = load i64, i64* %maxsize.addr, align 8, !dbg !15289
  %2 = load i8*, i8** %format.addr, align 8, !dbg !15290
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15291
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15292
  %5 = load i32, i32* %ns.addr, align 4, !dbg !15292
  %call = call i64 @__strftime_internal(i8* %0, i64 %1, i8* %2, %struct.tm* %3, i1 zeroext false, i32 0, i32 -1, i8* %tzset_called, %struct.tm_zone* %4, i32 %5), !dbg !15293
  ret i64 %call, !dbg !15294
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__strftime_internal(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, i1 zeroext %upcase, i32 %yr_spec, i32 %width, i8* %tzset_called, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15295 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca i8*, align 8
  %maxsize.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %tp.addr = alloca %struct.tm*, align 8
  %upcase.addr = alloca i8, align 1
  %yr_spec.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %tzset_called.addr = alloca i8*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %hour12 = alloca i32, align 4, !ctir !27
  %zone = alloca i8*, align 8, !ctir !146
  %i = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %f = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %modifier = alloca i32, align 4, !ctir !27
  %digits = alloca i32, align 4, !ctir !27
  %number_value = alloca i32, align 4, !ctir !27
  %u_number_value = alloca i32, align 4, !ctir !6
  %negative_number = alloca i8, align 1, !ctir !141
  %always_output_a_sign = alloca i8, align 1, !ctir !141
  %tz_colon_mask = alloca i32, align 4, !ctir !27
  %subfmt = alloca i8*, align 8, !ctir !146
  %sign_char = alloca i8, align 1, !ctir !144
  %bufp = alloca i8*, align 8, !ctir !143
  %buf = alloca [23 x i8], align 16, !ctir !829
  %to_lowcase = alloca i8, align 1, !ctir !141
  %to_uppcase = alloca i8, align 1, !ctir !141
  %colons = alloca i64, align 8, !ctir !149
  %change_case = alloca i8, align 1, !ctir !141
  %format_char = alloca i32, align 4, !ctir !27
  %subwidth = alloca i32, align 4, !ctir !27
  %_n = alloca i64, align 8, !ctir !149
  %_w = alloca i64, align 8, !ctir !149
  %_incr = alloca i64, align 8, !ctir !149
  %_delta = alloca i64, align 8, !ctir !149
  %_n95 = alloca i64, align 8, !ctir !149
  %_w96 = alloca i64, align 8, !ctir !149
  %_incr104 = alloca i64, align 8, !ctir !149
  %_delta124 = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %_n182 = alloca i64, align 8, !ctir !149
  %_w183 = alloca i64, align 8, !ctir !149
  %_incr191 = alloca i64, align 8, !ctir !149
  %_delta211 = alloca i64, align 8, !ctir !149
  %ufmt = alloca [5 x i8], align 1, !ctir !442
  %u = alloca i8*, align 8, !ctir !143
  %ubuf = alloca [1024 x i8], align 16, !ctir !1611
  %len233 = alloca i64, align 8, !ctir !149
  %_n251 = alloca i64, align 8, !ctir !149
  %_w253 = alloca i64, align 8, !ctir !149
  %_incr261 = alloca i64, align 8, !ctir !149
  %_delta281 = alloca i64, align 8, !ctir !149
  %century = alloca i32, align 4, !ctir !27
  %_n437 = alloca i64, align 8, !ctir !149
  %_w438 = alloca i64, align 8, !ctir !149
  %_incr446 = alloca i64, align 8, !ctir !149
  %_delta466 = alloca i64, align 8, !ctir !149
  %padding = alloca i32, align 4, !ctir !27
  %_n525 = alloca i64, align 8, !ctir !149
  %_w526 = alloca i64, align 8, !ctir !149
  %_incr534 = alloca i64, align 8, !ctir !149
  %_delta554 = alloca i64, align 8, !ctir !149
  %_n584 = alloca i64, align 8, !ctir !149
  %_w585 = alloca i64, align 8, !ctir !149
  %_incr593 = alloca i64, align 8, !ctir !149
  %_delta613 = alloca i64, align 8, !ctir !149
  %_n646 = alloca i64, align 8, !ctir !149
  %_w647 = alloca i64, align 8, !ctir !149
  %_incr655 = alloca i64, align 8, !ctir !149
  %_delta675 = alloca i64, align 8, !ctir !149
  %_n698 = alloca i64, align 8, !ctir !149
  %_w704 = alloca i64, align 8, !ctir !149
  %_incr712 = alloca i64, align 8, !ctir !149
  %_delta732 = alloca i64, align 8, !ctir !149
  %j = alloca i32, align 4, !ctir !27
  %_n867 = alloca i64, align 8, !ctir !149
  %_w868 = alloca i64, align 8, !ctir !149
  %_incr876 = alloca i64, align 8, !ctir !149
  %_delta896 = alloca i64, align 8, !ctir !149
  %ltm = alloca %struct.tm, align 8, !ctir !15255
  %t = alloca i64, align 8, !ctir !162
  %d = alloca i32, align 4, !ctir !27
  %_n971 = alloca i64, align 8, !ctir !149
  %_w972 = alloca i64, align 8, !ctir !149
  %_incr980 = alloca i64, align 8, !ctir !149
  %_delta1000 = alloca i64, align 8, !ctir !149
  %year = alloca i32, align 4, !ctir !27
  %year_adjust = alloca i32, align 4, !ctir !27
  %days = alloca i32, align 4, !ctir !27
  %d1080 = alloca i32, align 4, !ctir !27
  %yy = alloca i32, align 4, !ctir !27
  %yy1197 = alloca i32, align 4, !ctir !27
  %_n1221 = alloca i64, align 8, !ctir !149
  %_w1223 = alloca i64, align 8, !ctir !149
  %_incr1231 = alloca i64, align 8, !ctir !149
  %_delta1251 = alloca i64, align 8, !ctir !149
  %diff = alloca i32, align 4, !ctir !27
  %hour_diff = alloca i32, align 4, !ctir !27
  %min_diff = alloca i32, align 4, !ctir !27
  %sec_diff = alloca i32, align 4, !ctir !27
  %flen = alloca i32, align 4, !ctir !27
  %_n1367 = alloca i64, align 8, !ctir !149
  %_w1369 = alloca i64, align 8, !ctir !149
  %_incr1377 = alloca i64, align 8, !ctir !149
  %_delta1397 = alloca i64, align 8, !ctir !149
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  store i64 %maxsize, i64* %maxsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15300, metadata !DIExpression()), !dbg !15301
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15302, metadata !DIExpression()), !dbg !15303
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15304, metadata !DIExpression()), !dbg !15305
  %frombool = zext i1 %upcase to i8
  store i8 %frombool, i8* %upcase.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %upcase.addr, metadata !15306, metadata !DIExpression()), !dbg !15307
  store i32 %yr_spec, i32* %yr_spec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yr_spec.addr, metadata !15308, metadata !DIExpression()), !dbg !15309
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !15310, metadata !DIExpression()), !dbg !15311
  store i8* %tzset_called, i8** %tzset_called.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tzset_called.addr, metadata !15312, metadata !DIExpression()), !dbg !15313
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15314, metadata !DIExpression()), !dbg !15315
  store i32 %ns, i32* %ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15316, metadata !DIExpression()), !dbg !15315
  call void @llvm.dbg.declare(metadata i32* %hour12, metadata !15317, metadata !DIExpression()), !dbg !15318
  %0 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15319
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 2, !dbg !15320, !ctir !15254
  %1 = load i32, i32* %tm_hour, align 8, !dbg !15320, !ctir !27
  store i32 %1, i32* %hour12, align 4, !dbg !15318
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !15321, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15323, metadata !DIExpression()), !dbg !15324
  store i64 0, i64* %i, align 8, !dbg !15324
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15325, metadata !DIExpression()), !dbg !15326
  %2 = load i8*, i8** %s.addr, align 8, !dbg !15327
  store i8* %2, i8** %p, align 8, !dbg !15326
  call void @llvm.dbg.declare(metadata i8** %f, metadata !15328, metadata !DIExpression()), !dbg !15329
  store i8* null, i8** %zone, align 8, !dbg !15330
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15331
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 10, !dbg !15332, !ctir !15254
  %4 = load i8*, i8** %tm_zone, align 8, !dbg !15332, !ctir !146
  store i8* %4, i8** %zone, align 8, !dbg !15333
  %5 = load i8*, i8** %zone, align 8, !dbg !15334
  %tobool = icmp ne i8* %5, null, !dbg !15334
  br i1 %tobool, label %if.end, label %if.then, !dbg !15336

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.359, i64 0, i64 0), i8** %zone, align 8, !dbg !15337
  br label %if.end, !dbg !15338

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %hour12, align 4, !dbg !15339
  %cmp = icmp sgt i32 %6, 12, !dbg !15341
  br i1 %cmp, label %if.then1, label %if.else, !dbg !15342

if.then1:                                         ; preds = %if.end
  %7 = load i32, i32* %hour12, align 4, !dbg !15343
  %sub = sub nsw i32 %7, 12, !dbg !15343
  store i32 %sub, i32* %hour12, align 4, !dbg !15343
  br label %if.end5, !dbg !15344

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %hour12, align 4, !dbg !15345
  %cmp2 = icmp eq i32 %8, 0, !dbg !15347
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !15348

if.then3:                                         ; preds = %if.else
  store i32 12, i32* %hour12, align 4, !dbg !15349
  br label %if.end4, !dbg !15350

if.end4:                                          ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end4, %if.then1
  %9 = load i8*, i8** %format.addr, align 8, !dbg !15351
  store i8* %9, i8** %f, align 8, !dbg !15353
  br label %for.cond, !dbg !15354

for.cond:                                         ; preds = %for.inc1436, %if.end5
  %10 = load i8*, i8** %f, align 8, !dbg !15355
  %11 = load i8, i8* %10, align 1, !dbg !15357, !ctir !147
  %conv = sext i8 %11 to i32, !dbg !15357
  %cmp6 = icmp ne i32 %conv, 0, !dbg !15358
  br i1 %cmp6, label %for.body, label %for.end1438, !dbg !15359

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !15360, metadata !DIExpression()), !dbg !15362
  store i32 0, i32* %pad, align 4, !dbg !15362
  call void @llvm.dbg.declare(metadata i32* %modifier, metadata !15363, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !15365, metadata !DIExpression()), !dbg !15366
  store i32 0, i32* %digits, align 4, !dbg !15366
  call void @llvm.dbg.declare(metadata i32* %number_value, metadata !15367, metadata !DIExpression()), !dbg !15368
  call void @llvm.dbg.declare(metadata i32* %u_number_value, metadata !15369, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.declare(metadata i8* %negative_number, metadata !15371, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.declare(metadata i8* %always_output_a_sign, metadata !15373, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.declare(metadata i32* %tz_colon_mask, metadata !15375, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.declare(metadata i8** %subfmt, metadata !15377, metadata !DIExpression()), !dbg !15378
  call void @llvm.dbg.declare(metadata i8* %sign_char, metadata !15379, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.declare(metadata i8** %bufp, metadata !15381, metadata !DIExpression()), !dbg !15382
  call void @llvm.dbg.declare(metadata [23 x i8]* %buf, metadata !15383, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.declare(metadata i8* %to_lowcase, metadata !15385, metadata !DIExpression()), !dbg !15386
  store i8 0, i8* %to_lowcase, align 1, !dbg !15386
  call void @llvm.dbg.declare(metadata i8* %to_uppcase, metadata !15387, metadata !DIExpression()), !dbg !15388
  %12 = load i8, i8* %upcase.addr, align 1, !dbg !15389
  %tobool8 = trunc i8 %12 to i1, !dbg !15389
  %frombool9 = zext i1 %tobool8 to i8, !dbg !15388
  store i8 %frombool9, i8* %to_uppcase, align 1, !dbg !15388
  call void @llvm.dbg.declare(metadata i64* %colons, metadata !15390, metadata !DIExpression()), !dbg !15391
  call void @llvm.dbg.declare(metadata i8* %change_case, metadata !15392, metadata !DIExpression()), !dbg !15393
  store i8 0, i8* %change_case, align 1, !dbg !15393
  call void @llvm.dbg.declare(metadata i32* %format_char, metadata !15394, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.declare(metadata i32* %subwidth, metadata !15396, metadata !DIExpression()), !dbg !15397
  %13 = load i8*, i8** %f, align 8, !dbg !15398
  %14 = load i8, i8* %13, align 1, !dbg !15400, !ctir !147
  %conv10 = sext i8 %14 to i32, !dbg !15400
  %cmp11 = icmp ne i32 %conv10, 37, !dbg !15401
  br i1 %cmp11, label %if.then13, label %if.end48, !dbg !15402

if.then13:                                        ; preds = %for.body
  br label %do.body, !dbg !15403

do.body:                                          ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i64* %_n, metadata !15405, metadata !DIExpression()), !dbg !15407
  store i64 1, i64* %_n, align 8, !dbg !15407
  call void @llvm.dbg.declare(metadata i64* %_w, metadata !15408, metadata !DIExpression()), !dbg !15407
  %15 = load i32, i32* %width.addr, align 4, !dbg !15407
  %cmp14 = icmp slt i32 %15, 0, !dbg !15407
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !15407

cond.true:                                        ; preds = %do.body
  br label %cond.end, !dbg !15407

cond.false:                                       ; preds = %do.body
  %16 = load i32, i32* %width.addr, align 4, !dbg !15407
  br label %cond.end, !dbg !15407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %16, %cond.false ], !dbg !15407
  %conv16 = sext i32 %cond to i64, !dbg !15407
  store i64 %conv16, i64* %_w, align 8, !dbg !15407
  call void @llvm.dbg.declare(metadata i64* %_incr, metadata !15409, metadata !DIExpression()), !dbg !15407
  %17 = load i64, i64* %_n, align 8, !dbg !15407
  %18 = load i64, i64* %_w, align 8, !dbg !15407
  %cmp17 = icmp ult i64 %17, %18, !dbg !15407
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !15407

cond.true19:                                      ; preds = %cond.end
  %19 = load i64, i64* %_w, align 8, !dbg !15407
  br label %cond.end21, !dbg !15407

cond.false20:                                     ; preds = %cond.end
  %20 = load i64, i64* %_n, align 8, !dbg !15407
  br label %cond.end21, !dbg !15407

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i64 [ %19, %cond.true19 ], [ %20, %cond.false20 ], !dbg !15407
  store i64 %cond22, i64* %_incr, align 8, !dbg !15407
  %21 = load i64, i64* %_incr, align 8, !dbg !15410
  %22 = load i64, i64* %maxsize.addr, align 8, !dbg !15410
  %23 = load i64, i64* %i, align 8, !dbg !15410
  %sub23 = sub i64 %22, %23, !dbg !15410
  %cmp24 = icmp uge i64 %21, %sub23, !dbg !15410
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !15407

if.then26:                                        ; preds = %cond.end21
  store i64 0, i64* %retval, align 8, !dbg !15410
  br label %return, !dbg !15410

if.end27:                                         ; preds = %cond.end21
  %24 = load i8*, i8** %p, align 8, !dbg !15412
  %tobool28 = icmp ne i8* %24, null, !dbg !15412
  br i1 %tobool28, label %if.then29, label %if.end47, !dbg !15407

if.then29:                                        ; preds = %if.end27
  %25 = load i32, i32* %digits, align 4, !dbg !15414
  %cmp30 = icmp eq i32 %25, 0, !dbg !15414
  br i1 %cmp30, label %land.lhs.true, label %if.end45, !dbg !15414

land.lhs.true:                                    ; preds = %if.then29
  %26 = load i64, i64* %_n, align 8, !dbg !15414
  %27 = load i64, i64* %_w, align 8, !dbg !15414
  %cmp32 = icmp ult i64 %26, %27, !dbg !15414
  br i1 %cmp32, label %if.then34, label %if.end45, !dbg !15417

if.then34:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %_delta, metadata !15418, metadata !DIExpression()), !dbg !15420
  %28 = load i32, i32* %width.addr, align 4, !dbg !15420
  %conv35 = sext i32 %28 to i64, !dbg !15420
  %29 = load i64, i64* %_n, align 8, !dbg !15420
  %sub36 = sub i64 %conv35, %29, !dbg !15420
  store i64 %sub36, i64* %_delta, align 8, !dbg !15420
  %30 = load i32, i32* %pad, align 4, !dbg !15421
  %cmp37 = icmp eq i32 %30, 48, !dbg !15421
  br i1 %cmp37, label %if.then41, label %lor.lhs.false, !dbg !15421

lor.lhs.false:                                    ; preds = %if.then34
  %31 = load i32, i32* %pad, align 4, !dbg !15421
  %cmp39 = icmp eq i32 %31, 43, !dbg !15421
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !15420

if.then41:                                        ; preds = %lor.lhs.false, %if.then34
  %32 = load i8*, i8** %p, align 8, !dbg !15421
  %33 = load i64, i64* %_delta, align 8, !dbg !15421
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 48, i64 %33, i1 false), !dbg !15421
  %34 = load i64, i64* %_delta, align 8, !dbg !15421
  %35 = load i8*, i8** %p, align 8, !dbg !15421
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !15421, !ctir !144
  store i8* %add.ptr, i8** %p, align 8, !dbg !15421
  br label %if.end44, !dbg !15421

if.else42:                                        ; preds = %lor.lhs.false
  %36 = load i8*, i8** %p, align 8, !dbg !15421
  %37 = load i64, i64* %_delta, align 8, !dbg !15421
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 32, i64 %37, i1 false), !dbg !15421
  %38 = load i64, i64* %_delta, align 8, !dbg !15421
  %39 = load i8*, i8** %p, align 8, !dbg !15421
  %add.ptr43 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !15421, !ctir !144
  store i8* %add.ptr43, i8** %p, align 8, !dbg !15421
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then41
  br label %if.end45, !dbg !15420

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.then29
  %40 = load i8*, i8** %f, align 8, !dbg !15417
  %41 = load i8, i8* %40, align 1, !dbg !15417, !ctir !147
  %42 = load i8*, i8** %p, align 8, !dbg !15417
  store i8 %41, i8* %42, align 1, !dbg !15417, !ctir !144
  %43 = load i64, i64* %_n, align 8, !dbg !15417
  %44 = load i8*, i8** %p, align 8, !dbg !15417
  %add.ptr46 = getelementptr inbounds i8, i8* %44, i64 %43, !dbg !15417, !ctir !144
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15417
  br label %if.end47, !dbg !15417

if.end47:                                         ; preds = %if.end45, %if.end27
  %45 = load i64, i64* %_incr, align 8, !dbg !15407
  %46 = load i64, i64* %i, align 8, !dbg !15407
  %add = add i64 %46, %45, !dbg !15407
  store i64 %add, i64* %i, align 8, !dbg !15407
  br label %do.end, !dbg !15407

do.end:                                           ; preds = %if.end47
  br label %for.inc1436, !dbg !15423

if.end48:                                         ; preds = %for.body
  br label %while.body, !dbg !15424

while.body:                                       ; preds = %if.end48, %sw.bb, %sw.bb51, %sw.bb52
  %47 = load i8*, i8** %f, align 8, !dbg !15425
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !15425, !ctir !147
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !15425
  %48 = load i8, i8* %incdec.ptr, align 1, !dbg !15427, !ctir !147
  %conv49 = sext i8 %48 to i32, !dbg !15427
  switch i32 %conv49, label %sw.default [
    i32 95, label %sw.bb
    i32 45, label %sw.bb
    i32 43, label %sw.bb
    i32 48, label %sw.bb
    i32 94, label %sw.bb51
    i32 35, label %sw.bb52
  ], !dbg !15428

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body
  %49 = load i8*, i8** %f, align 8, !dbg !15429
  %50 = load i8, i8* %49, align 1, !dbg !15431, !ctir !147
  %conv50 = sext i8 %50 to i32, !dbg !15431
  store i32 %conv50, i32* %pad, align 4, !dbg !15432
  br label %while.body, !dbg !15433, !llvm.loop !15434

sw.bb51:                                          ; preds = %while.body
  store i8 1, i8* %to_uppcase, align 1, !dbg !15436
  br label %while.body, !dbg !15437, !llvm.loop !15434

sw.bb52:                                          ; preds = %while.body
  store i8 1, i8* %change_case, align 1, !dbg !15438
  br label %while.body, !dbg !15439, !llvm.loop !15434

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15440

sw.epilog:                                        ; preds = %sw.default
  br label %while.end, !dbg !15441

while.end:                                        ; preds = %sw.epilog
  %51 = load i8*, i8** %f, align 8, !dbg !15442
  %52 = load i8, i8* %51, align 1, !dbg !15442, !ctir !147
  %conv53 = sext i8 %52 to i32, !dbg !15442
  %sub54 = sub i32 %conv53, 48, !dbg !15442
  %cmp55 = icmp ule i32 %sub54, 9, !dbg !15442
  br i1 %cmp55, label %if.then57, label %if.end81, !dbg !15444

if.then57:                                        ; preds = %while.end
  store i32 0, i32* %width.addr, align 4, !dbg !15445
  br label %do.body58, !dbg !15447

do.body58:                                        ; preds = %do.cond, %if.then57
  %53 = load i32, i32* %width.addr, align 4, !dbg !15448
  %cmp59 = icmp sgt i32 %53, 214748364, !dbg !15451
  br i1 %cmp59, label %if.then69, label %lor.lhs.false61, !dbg !15452

lor.lhs.false61:                                  ; preds = %do.body58
  %54 = load i32, i32* %width.addr, align 4, !dbg !15453
  %cmp62 = icmp eq i32 %54, 214748364, !dbg !15454
  br i1 %cmp62, label %land.lhs.true64, label %if.else70, !dbg !15455

land.lhs.true64:                                  ; preds = %lor.lhs.false61
  %55 = load i8*, i8** %f, align 8, !dbg !15456
  %56 = load i8, i8* %55, align 1, !dbg !15457, !ctir !147
  %conv65 = sext i8 %56 to i32, !dbg !15457
  %sub66 = sub nsw i32 %conv65, 48, !dbg !15458
  %cmp67 = icmp sgt i32 %sub66, 7, !dbg !15459
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !15460

if.then69:                                        ; preds = %land.lhs.true64, %do.body58
  store i32 2147483647, i32* %width.addr, align 4, !dbg !15461
  br label %if.end74, !dbg !15462

if.else70:                                        ; preds = %land.lhs.true64, %lor.lhs.false61
  %57 = load i32, i32* %width.addr, align 4, !dbg !15463
  %mul = mul nsw i32 %57, 10, !dbg !15463
  store i32 %mul, i32* %width.addr, align 4, !dbg !15463
  %58 = load i8*, i8** %f, align 8, !dbg !15465
  %59 = load i8, i8* %58, align 1, !dbg !15466, !ctir !147
  %conv71 = sext i8 %59 to i32, !dbg !15466
  %sub72 = sub nsw i32 %conv71, 48, !dbg !15467
  %60 = load i32, i32* %width.addr, align 4, !dbg !15468
  %add73 = add nsw i32 %60, %sub72, !dbg !15468
  store i32 %add73, i32* %width.addr, align 4, !dbg !15468
  br label %if.end74

if.end74:                                         ; preds = %if.else70, %if.then69
  %61 = load i8*, i8** %f, align 8, !dbg !15469
  %incdec.ptr75 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !15469, !ctir !147
  store i8* %incdec.ptr75, i8** %f, align 8, !dbg !15469
  br label %do.cond, !dbg !15470

do.cond:                                          ; preds = %if.end74
  %62 = load i8*, i8** %f, align 8, !dbg !15471
  %63 = load i8, i8* %62, align 1, !dbg !15471, !ctir !147
  %conv76 = sext i8 %63 to i32, !dbg !15471
  %sub77 = sub i32 %conv76, 48, !dbg !15471
  %cmp78 = icmp ule i32 %sub77, 9, !dbg !15471
  br i1 %cmp78, label %do.body58, label %do.end80, !dbg !15470, !llvm.loop !15472

do.end80:                                         ; preds = %do.cond
  br label %if.end81, !dbg !15474

if.end81:                                         ; preds = %do.end80, %while.end
  %64 = load i8*, i8** %f, align 8, !dbg !15475
  %65 = load i8, i8* %64, align 1, !dbg !15476, !ctir !147
  %conv82 = sext i8 %65 to i32, !dbg !15476
  switch i32 %conv82, label %sw.default86 [
    i32 69, label %sw.bb83
    i32 79, label %sw.bb83
  ], !dbg !15477

sw.bb83:                                          ; preds = %if.end81, %if.end81
  %66 = load i8*, i8** %f, align 8, !dbg !15478
  %incdec.ptr84 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !15478, !ctir !147
  store i8* %incdec.ptr84, i8** %f, align 8, !dbg !15478
  %67 = load i8, i8* %66, align 1, !dbg !15480, !ctir !147
  %conv85 = sext i8 %67 to i32, !dbg !15480
  store i32 %conv85, i32* %modifier, align 4, !dbg !15481
  br label %sw.epilog87, !dbg !15482

sw.default86:                                     ; preds = %if.end81
  store i32 0, i32* %modifier, align 4, !dbg !15483
  br label %sw.epilog87, !dbg !15484

sw.epilog87:                                      ; preds = %sw.default86, %sw.bb83
  %68 = load i8*, i8** %f, align 8, !dbg !15485
  %69 = load i8, i8* %68, align 1, !dbg !15486, !ctir !147
  %conv88 = sext i8 %69 to i32, !dbg !15486
  store i32 %conv88, i32* %format_char, align 4, !dbg !15487
  %70 = load i32, i32* %format_char, align 4, !dbg !15488
  switch i32 %70, label %sw.default1355 [
    i32 37, label %sw.bb89
    i32 97, label %sw.bb143
    i32 65, label %sw.bb151
    i32 98, label %sw.bb159
    i32 104, label %sw.bb159
    i32 66, label %sw.bb167
    i32 99, label %sw.bb175
    i32 67, label %sw.bb317
    i32 120, label %sw.bb336
    i32 68, label %sw.bb341
    i32 100, label %sw.bb346
    i32 101, label %sw.bb354
    i32 70, label %sw.bb761
    i32 72, label %sw.bb779
    i32 73, label %sw.bb788
    i32 107, label %sw.bb796
    i32 108, label %sw.bb805
    i32 106, label %sw.bb813
    i32 77, label %sw.bb826
    i32 109, label %sw.bb834
    i32 78, label %sw.bb847
    i32 110, label %sw.bb865
    i32 80, label %sw.bb915
    i32 112, label %sw.bb916
    i32 113, label %sw.bb920
    i32 82, label %sw.bb928
    i32 114, label %sw.bb929
    i32 83, label %sw.bb930
    i32 115, label %sw.bb938
    i32 88, label %sw.bb963
    i32 84, label %sw.bb968
    i32 116, label %sw.bb969
    i32 117, label %sw.bb1019
    i32 85, label %sw.bb1027
    i32 86, label %sw.bb1040
    i32 103, label %sw.bb1040
    i32 71, label %sw.bb1040
    i32 87, label %sw.bb1149
    i32 119, label %sw.bb1165
    i32 89, label %sw.bb1174
    i32 121, label %sw.bb1192
    i32 90, label %sw.bb1216
    i32 58, label %sw.bb1280
    i32 122, label %sw.bb1296
    i32 0, label %sw.bb1353
  ], !dbg !15489

sw.bb89:                                          ; preds = %sw.epilog87
  %71 = load i32, i32* %modifier, align 4, !dbg !15490
  %cmp90 = icmp ne i32 %71, 0, !dbg !15493
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !15494

if.then92:                                        ; preds = %sw.bb89
  br label %bad_format, !dbg !15495

if.end93:                                         ; preds = %sw.bb89
  br label %do.body94, !dbg !15496

do.body94:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata i64* %_n95, metadata !15497, metadata !DIExpression()), !dbg !15499
  store i64 1, i64* %_n95, align 8, !dbg !15499
  call void @llvm.dbg.declare(metadata i64* %_w96, metadata !15500, metadata !DIExpression()), !dbg !15499
  %72 = load i32, i32* %width.addr, align 4, !dbg !15499
  %cmp97 = icmp slt i32 %72, 0, !dbg !15499
  br i1 %cmp97, label %cond.true99, label %cond.false100, !dbg !15499

cond.true99:                                      ; preds = %do.body94
  br label %cond.end101, !dbg !15499

cond.false100:                                    ; preds = %do.body94
  %73 = load i32, i32* %width.addr, align 4, !dbg !15499
  br label %cond.end101, !dbg !15499

cond.end101:                                      ; preds = %cond.false100, %cond.true99
  %cond102 = phi i32 [ 0, %cond.true99 ], [ %73, %cond.false100 ], !dbg !15499
  %conv103 = sext i32 %cond102 to i64, !dbg !15499
  store i64 %conv103, i64* %_w96, align 8, !dbg !15499
  call void @llvm.dbg.declare(metadata i64* %_incr104, metadata !15501, metadata !DIExpression()), !dbg !15499
  %74 = load i64, i64* %_n95, align 8, !dbg !15499
  %75 = load i64, i64* %_w96, align 8, !dbg !15499
  %cmp105 = icmp ult i64 %74, %75, !dbg !15499
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !15499

cond.true107:                                     ; preds = %cond.end101
  %76 = load i64, i64* %_w96, align 8, !dbg !15499
  br label %cond.end109, !dbg !15499

cond.false108:                                    ; preds = %cond.end101
  %77 = load i64, i64* %_n95, align 8, !dbg !15499
  br label %cond.end109, !dbg !15499

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i64 [ %76, %cond.true107 ], [ %77, %cond.false108 ], !dbg !15499
  store i64 %cond110, i64* %_incr104, align 8, !dbg !15499
  %78 = load i64, i64* %_incr104, align 8, !dbg !15502
  %79 = load i64, i64* %maxsize.addr, align 8, !dbg !15502
  %80 = load i64, i64* %i, align 8, !dbg !15502
  %sub111 = sub i64 %79, %80, !dbg !15502
  %cmp112 = icmp uge i64 %78, %sub111, !dbg !15502
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !15499

if.then114:                                       ; preds = %cond.end109
  store i64 0, i64* %retval, align 8, !dbg !15502
  br label %return, !dbg !15502

if.end115:                                        ; preds = %cond.end109
  %81 = load i8*, i8** %p, align 8, !dbg !15504
  %tobool116 = icmp ne i8* %81, null, !dbg !15504
  br i1 %tobool116, label %if.then117, label %if.end139, !dbg !15499

if.then117:                                       ; preds = %if.end115
  %82 = load i32, i32* %digits, align 4, !dbg !15506
  %cmp118 = icmp eq i32 %82, 0, !dbg !15506
  br i1 %cmp118, label %land.lhs.true120, label %if.end137, !dbg !15506

land.lhs.true120:                                 ; preds = %if.then117
  %83 = load i64, i64* %_n95, align 8, !dbg !15506
  %84 = load i64, i64* %_w96, align 8, !dbg !15506
  %cmp121 = icmp ult i64 %83, %84, !dbg !15506
  br i1 %cmp121, label %if.then123, label %if.end137, !dbg !15509

if.then123:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i64* %_delta124, metadata !15510, metadata !DIExpression()), !dbg !15512
  %85 = load i32, i32* %width.addr, align 4, !dbg !15512
  %conv125 = sext i32 %85 to i64, !dbg !15512
  %86 = load i64, i64* %_n95, align 8, !dbg !15512
  %sub126 = sub i64 %conv125, %86, !dbg !15512
  store i64 %sub126, i64* %_delta124, align 8, !dbg !15512
  %87 = load i32, i32* %pad, align 4, !dbg !15513
  %cmp127 = icmp eq i32 %87, 48, !dbg !15513
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129, !dbg !15513

lor.lhs.false129:                                 ; preds = %if.then123
  %88 = load i32, i32* %pad, align 4, !dbg !15513
  %cmp130 = icmp eq i32 %88, 43, !dbg !15513
  br i1 %cmp130, label %if.then132, label %if.else134, !dbg !15512

if.then132:                                       ; preds = %lor.lhs.false129, %if.then123
  %89 = load i8*, i8** %p, align 8, !dbg !15513
  %90 = load i64, i64* %_delta124, align 8, !dbg !15513
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 48, i64 %90, i1 false), !dbg !15513
  %91 = load i64, i64* %_delta124, align 8, !dbg !15513
  %92 = load i8*, i8** %p, align 8, !dbg !15513
  %add.ptr133 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !15513, !ctir !144
  store i8* %add.ptr133, i8** %p, align 8, !dbg !15513
  br label %if.end136, !dbg !15513

if.else134:                                       ; preds = %lor.lhs.false129
  %93 = load i8*, i8** %p, align 8, !dbg !15513
  %94 = load i64, i64* %_delta124, align 8, !dbg !15513
  call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 32, i64 %94, i1 false), !dbg !15513
  %95 = load i64, i64* %_delta124, align 8, !dbg !15513
  %96 = load i8*, i8** %p, align 8, !dbg !15513
  %add.ptr135 = getelementptr inbounds i8, i8* %96, i64 %95, !dbg !15513, !ctir !144
  store i8* %add.ptr135, i8** %p, align 8, !dbg !15513
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then132
  br label %if.end137, !dbg !15512

if.end137:                                        ; preds = %if.end136, %land.lhs.true120, %if.then117
  %97 = load i8*, i8** %f, align 8, !dbg !15509
  %98 = load i8, i8* %97, align 1, !dbg !15509, !ctir !147
  %99 = load i8*, i8** %p, align 8, !dbg !15509
  store i8 %98, i8* %99, align 1, !dbg !15509, !ctir !144
  %100 = load i64, i64* %_n95, align 8, !dbg !15509
  %101 = load i8*, i8** %p, align 8, !dbg !15509
  %add.ptr138 = getelementptr inbounds i8, i8* %101, i64 %100, !dbg !15509, !ctir !144
  store i8* %add.ptr138, i8** %p, align 8, !dbg !15509
  br label %if.end139, !dbg !15509

if.end139:                                        ; preds = %if.end137, %if.end115
  %102 = load i64, i64* %_incr104, align 8, !dbg !15499
  %103 = load i64, i64* %i, align 8, !dbg !15499
  %add140 = add i64 %103, %102, !dbg !15499
  store i64 %add140, i64* %i, align 8, !dbg !15499
  br label %do.end142, !dbg !15499

do.end142:                                        ; preds = %if.end139
  br label %sw.epilog1435, !dbg !15515

sw.bb143:                                         ; preds = %sw.epilog87
  %104 = load i32, i32* %modifier, align 4, !dbg !15516
  %cmp144 = icmp ne i32 %104, 0, !dbg !15518
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !15519

if.then146:                                       ; preds = %sw.bb143
  br label %bad_format, !dbg !15520

if.end147:                                        ; preds = %sw.bb143
  %105 = load i8, i8* %change_case, align 1, !dbg !15521
  %tobool148 = trunc i8 %105 to i1, !dbg !15521
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !15523

if.then149:                                       ; preds = %if.end147
  store i8 1, i8* %to_uppcase, align 1, !dbg !15524
  store i8 0, i8* %to_lowcase, align 1, !dbg !15526
  br label %if.end150, !dbg !15527

if.end150:                                        ; preds = %if.then149, %if.end147
  br label %underlying_strftime, !dbg !15528

sw.bb151:                                         ; preds = %sw.epilog87
  %106 = load i32, i32* %modifier, align 4, !dbg !15529
  %cmp152 = icmp ne i32 %106, 0, !dbg !15531
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !15532

if.then154:                                       ; preds = %sw.bb151
  br label %bad_format, !dbg !15533

if.end155:                                        ; preds = %sw.bb151
  %107 = load i8, i8* %change_case, align 1, !dbg !15534
  %tobool156 = trunc i8 %107 to i1, !dbg !15534
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !15536

if.then157:                                       ; preds = %if.end155
  store i8 1, i8* %to_uppcase, align 1, !dbg !15537
  store i8 0, i8* %to_lowcase, align 1, !dbg !15539
  br label %if.end158, !dbg !15540

if.end158:                                        ; preds = %if.then157, %if.end155
  br label %underlying_strftime, !dbg !15541

sw.bb159:                                         ; preds = %sw.epilog87, %sw.epilog87
  %108 = load i8, i8* %change_case, align 1, !dbg !15542
  %tobool160 = trunc i8 %108 to i1, !dbg !15542
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !15544

if.then161:                                       ; preds = %sw.bb159
  store i8 1, i8* %to_uppcase, align 1, !dbg !15545
  store i8 0, i8* %to_lowcase, align 1, !dbg !15547
  br label %if.end162, !dbg !15548

if.end162:                                        ; preds = %if.then161, %sw.bb159
  %109 = load i32, i32* %modifier, align 4, !dbg !15549
  %cmp163 = icmp eq i32 %109, 69, !dbg !15551
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !15552

if.then165:                                       ; preds = %if.end162
  br label %bad_format, !dbg !15553

if.end166:                                        ; preds = %if.end162
  br label %underlying_strftime, !dbg !15554

sw.bb167:                                         ; preds = %sw.epilog87
  %110 = load i32, i32* %modifier, align 4, !dbg !15555
  %cmp168 = icmp eq i32 %110, 69, !dbg !15557
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !15558

if.then170:                                       ; preds = %sw.bb167
  br label %bad_format, !dbg !15559

if.end171:                                        ; preds = %sw.bb167
  %111 = load i8, i8* %change_case, align 1, !dbg !15560
  %tobool172 = trunc i8 %111 to i1, !dbg !15560
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !15562

if.then173:                                       ; preds = %if.end171
  store i8 1, i8* %to_uppcase, align 1, !dbg !15563
  store i8 0, i8* %to_lowcase, align 1, !dbg !15565
  br label %if.end174, !dbg !15566

if.end174:                                        ; preds = %if.then173, %if.end171
  br label %underlying_strftime, !dbg !15567

sw.bb175:                                         ; preds = %sw.epilog87
  %112 = load i32, i32* %modifier, align 4, !dbg !15568
  %cmp176 = icmp eq i32 %112, 79, !dbg !15570
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !15571

if.then178:                                       ; preds = %sw.bb175
  br label %bad_format, !dbg !15572

if.end179:                                        ; preds = %sw.bb175
  br label %underlying_strftime, !dbg !15573

subformat:                                        ; preds = %sw.bb968, %sw.bb928, %if.end345
  call void @llvm.dbg.label(metadata !15574), !dbg !15575
  store i32 -1, i32* %subwidth, align 4, !dbg !15576
  br label %subformat_width, !dbg !15577

subformat_width:                                  ; preds = %if.end778, %subformat
  call void @llvm.dbg.label(metadata !15578), !dbg !15579
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15580, metadata !DIExpression()), !dbg !15582
  %113 = load i8*, i8** %subfmt, align 8, !dbg !15583
  %114 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15584
  %115 = load i8, i8* %to_uppcase, align 1, !dbg !15585
  %tobool180 = trunc i8 %115 to i1, !dbg !15585
  %116 = load i32, i32* %pad, align 4, !dbg !15586
  %117 = load i32, i32* %subwidth, align 4, !dbg !15587
  %118 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15588
  %119 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15589
  %120 = load i32, i32* %ns.addr, align 4, !dbg !15589
  %call = call i64 @__strftime_internal(i8* null, i64 -1, i8* %113, %struct.tm* %114, i1 zeroext %tobool180, i32 %116, i32 %117, i8* %118, %struct.tm_zone* %119, i32 %120), !dbg !15590
  store i64 %call, i64* %len, align 8, !dbg !15582
  br label %do.body181, !dbg !15591

do.body181:                                       ; preds = %subformat_width
  call void @llvm.dbg.declare(metadata i64* %_n182, metadata !15592, metadata !DIExpression()), !dbg !15594
  %121 = load i64, i64* %len, align 8, !dbg !15594
  store i64 %121, i64* %_n182, align 8, !dbg !15594
  call void @llvm.dbg.declare(metadata i64* %_w183, metadata !15595, metadata !DIExpression()), !dbg !15594
  %122 = load i32, i32* %width.addr, align 4, !dbg !15594
  %cmp184 = icmp slt i32 %122, 0, !dbg !15594
  br i1 %cmp184, label %cond.true186, label %cond.false187, !dbg !15594

cond.true186:                                     ; preds = %do.body181
  br label %cond.end188, !dbg !15594

cond.false187:                                    ; preds = %do.body181
  %123 = load i32, i32* %width.addr, align 4, !dbg !15594
  br label %cond.end188, !dbg !15594

cond.end188:                                      ; preds = %cond.false187, %cond.true186
  %cond189 = phi i32 [ 0, %cond.true186 ], [ %123, %cond.false187 ], !dbg !15594
  %conv190 = sext i32 %cond189 to i64, !dbg !15594
  store i64 %conv190, i64* %_w183, align 8, !dbg !15594
  call void @llvm.dbg.declare(metadata i64* %_incr191, metadata !15596, metadata !DIExpression()), !dbg !15594
  %124 = load i64, i64* %_n182, align 8, !dbg !15594
  %125 = load i64, i64* %_w183, align 8, !dbg !15594
  %cmp192 = icmp ult i64 %124, %125, !dbg !15594
  br i1 %cmp192, label %cond.true194, label %cond.false195, !dbg !15594

cond.true194:                                     ; preds = %cond.end188
  %126 = load i64, i64* %_w183, align 8, !dbg !15594
  br label %cond.end196, !dbg !15594

cond.false195:                                    ; preds = %cond.end188
  %127 = load i64, i64* %_n182, align 8, !dbg !15594
  br label %cond.end196, !dbg !15594

cond.end196:                                      ; preds = %cond.false195, %cond.true194
  %cond197 = phi i64 [ %126, %cond.true194 ], [ %127, %cond.false195 ], !dbg !15594
  store i64 %cond197, i64* %_incr191, align 8, !dbg !15594
  %128 = load i64, i64* %_incr191, align 8, !dbg !15597
  %129 = load i64, i64* %maxsize.addr, align 8, !dbg !15597
  %130 = load i64, i64* %i, align 8, !dbg !15597
  %sub198 = sub i64 %129, %130, !dbg !15597
  %cmp199 = icmp uge i64 %128, %sub198, !dbg !15597
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !15594

if.then201:                                       ; preds = %cond.end196
  store i64 0, i64* %retval, align 8, !dbg !15597
  br label %return, !dbg !15597

if.end202:                                        ; preds = %cond.end196
  %131 = load i8*, i8** %p, align 8, !dbg !15599
  %tobool203 = icmp ne i8* %131, null, !dbg !15599
  br i1 %tobool203, label %if.then204, label %if.end229, !dbg !15594

if.then204:                                       ; preds = %if.end202
  %132 = load i32, i32* %digits, align 4, !dbg !15601
  %cmp205 = icmp eq i32 %132, 0, !dbg !15601
  br i1 %cmp205, label %land.lhs.true207, label %if.end224, !dbg !15601

land.lhs.true207:                                 ; preds = %if.then204
  %133 = load i64, i64* %_n182, align 8, !dbg !15601
  %134 = load i64, i64* %_w183, align 8, !dbg !15601
  %cmp208 = icmp ult i64 %133, %134, !dbg !15601
  br i1 %cmp208, label %if.then210, label %if.end224, !dbg !15604

if.then210:                                       ; preds = %land.lhs.true207
  call void @llvm.dbg.declare(metadata i64* %_delta211, metadata !15605, metadata !DIExpression()), !dbg !15607
  %135 = load i32, i32* %width.addr, align 4, !dbg !15607
  %conv212 = sext i32 %135 to i64, !dbg !15607
  %136 = load i64, i64* %_n182, align 8, !dbg !15607
  %sub213 = sub i64 %conv212, %136, !dbg !15607
  store i64 %sub213, i64* %_delta211, align 8, !dbg !15607
  %137 = load i32, i32* %pad, align 4, !dbg !15608
  %cmp214 = icmp eq i32 %137, 48, !dbg !15608
  br i1 %cmp214, label %if.then219, label %lor.lhs.false216, !dbg !15608

lor.lhs.false216:                                 ; preds = %if.then210
  %138 = load i32, i32* %pad, align 4, !dbg !15608
  %cmp217 = icmp eq i32 %138, 43, !dbg !15608
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !15607

if.then219:                                       ; preds = %lor.lhs.false216, %if.then210
  %139 = load i8*, i8** %p, align 8, !dbg !15608
  %140 = load i64, i64* %_delta211, align 8, !dbg !15608
  call void @llvm.memset.p0i8.i64(i8* align 1 %139, i8 48, i64 %140, i1 false), !dbg !15608
  %141 = load i64, i64* %_delta211, align 8, !dbg !15608
  %142 = load i8*, i8** %p, align 8, !dbg !15608
  %add.ptr220 = getelementptr inbounds i8, i8* %142, i64 %141, !dbg !15608, !ctir !144
  store i8* %add.ptr220, i8** %p, align 8, !dbg !15608
  br label %if.end223, !dbg !15608

if.else221:                                       ; preds = %lor.lhs.false216
  %143 = load i8*, i8** %p, align 8, !dbg !15608
  %144 = load i64, i64* %_delta211, align 8, !dbg !15608
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 32, i64 %144, i1 false), !dbg !15608
  %145 = load i64, i64* %_delta211, align 8, !dbg !15608
  %146 = load i8*, i8** %p, align 8, !dbg !15608
  %add.ptr222 = getelementptr inbounds i8, i8* %146, i64 %145, !dbg !15608, !ctir !144
  store i8* %add.ptr222, i8** %p, align 8, !dbg !15608
  br label %if.end223

if.end223:                                        ; preds = %if.else221, %if.then219
  br label %if.end224, !dbg !15607

if.end224:                                        ; preds = %if.end223, %land.lhs.true207, %if.then204
  %147 = load i8*, i8** %p, align 8, !dbg !15604
  %148 = load i64, i64* %maxsize.addr, align 8, !dbg !15604
  %149 = load i64, i64* %i, align 8, !dbg !15604
  %sub225 = sub i64 %148, %149, !dbg !15604
  %150 = load i8*, i8** %subfmt, align 8, !dbg !15604
  %151 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15604
  %152 = load i8, i8* %to_uppcase, align 1, !dbg !15604
  %tobool226 = trunc i8 %152 to i1, !dbg !15604
  %153 = load i32, i32* %pad, align 4, !dbg !15604
  %154 = load i32, i32* %subwidth, align 4, !dbg !15604
  %155 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15604
  %156 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15604
  %157 = load i32, i32* %ns.addr, align 4, !dbg !15604
  %call227 = call i64 @__strftime_internal(i8* %147, i64 %sub225, i8* %150, %struct.tm* %151, i1 zeroext %tobool226, i32 %153, i32 %154, i8* %155, %struct.tm_zone* %156, i32 %157), !dbg !15604
  %158 = load i64, i64* %_n182, align 8, !dbg !15604
  %159 = load i8*, i8** %p, align 8, !dbg !15604
  %add.ptr228 = getelementptr inbounds i8, i8* %159, i64 %158, !dbg !15604, !ctir !144
  store i8* %add.ptr228, i8** %p, align 8, !dbg !15604
  br label %if.end229, !dbg !15604

if.end229:                                        ; preds = %if.end224, %if.end202
  %160 = load i64, i64* %_incr191, align 8, !dbg !15594
  %161 = load i64, i64* %i, align 8, !dbg !15594
  %add230 = add i64 %161, %160, !dbg !15594
  store i64 %add230, i64* %i, align 8, !dbg !15594
  br label %do.end232, !dbg !15594

do.end232:                                        ; preds = %if.end229
  br label %sw.epilog1435, !dbg !15610

underlying_strftime:                              ; preds = %if.then1195, %if.then1177, %if.end967, %sw.bb929, %if.end919, %if.then391, %if.end340, %if.then320, %if.end179, %if.end174, %if.end166, %if.end158, %if.end150
  call void @llvm.dbg.label(metadata !15611), !dbg !15612
  call void @llvm.dbg.declare(metadata [5 x i8]* %ufmt, metadata !15613, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.declare(metadata i8** %u, metadata !15616, metadata !DIExpression()), !dbg !15617
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15618, !ctir !442
  store i8* %arraydecay, i8** %u, align 8, !dbg !15617
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ubuf, metadata !15619, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.declare(metadata i64* %len233, metadata !15621, metadata !DIExpression()), !dbg !15622
  %162 = load i8*, i8** %u, align 8, !dbg !15623
  %incdec.ptr234 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !15623, !ctir !144
  store i8* %incdec.ptr234, i8** %u, align 8, !dbg !15623
  store i8 32, i8* %162, align 1, !dbg !15624, !ctir !144
  %163 = load i8*, i8** %u, align 8, !dbg !15625
  %incdec.ptr235 = getelementptr inbounds i8, i8* %163, i32 1, !dbg !15625, !ctir !144
  store i8* %incdec.ptr235, i8** %u, align 8, !dbg !15625
  store i8 37, i8* %163, align 1, !dbg !15626, !ctir !144
  %164 = load i32, i32* %modifier, align 4, !dbg !15627
  %cmp236 = icmp ne i32 %164, 0, !dbg !15629
  br i1 %cmp236, label %if.then238, label %if.end241, !dbg !15630

if.then238:                                       ; preds = %underlying_strftime
  %165 = load i32, i32* %modifier, align 4, !dbg !15631
  %conv239 = trunc i32 %165 to i8, !dbg !15631
  %166 = load i8*, i8** %u, align 8, !dbg !15632
  %incdec.ptr240 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !15632, !ctir !144
  store i8* %incdec.ptr240, i8** %u, align 8, !dbg !15632
  store i8 %conv239, i8* %166, align 1, !dbg !15633, !ctir !144
  br label %if.end241, !dbg !15634

if.end241:                                        ; preds = %if.then238, %underlying_strftime
  %167 = load i32, i32* %format_char, align 4, !dbg !15635
  %conv242 = trunc i32 %167 to i8, !dbg !15635
  %168 = load i8*, i8** %u, align 8, !dbg !15636
  %incdec.ptr243 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !15636, !ctir !144
  store i8* %incdec.ptr243, i8** %u, align 8, !dbg !15636
  store i8 %conv242, i8* %168, align 1, !dbg !15637, !ctir !144
  %169 = load i8*, i8** %u, align 8, !dbg !15638
  store i8 0, i8* %169, align 1, !dbg !15639, !ctir !144
  %arraydecay244 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15640, !ctir !1611
  %arraydecay245 = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15641, !ctir !442
  %170 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15642
  %call246 = call i64 @strftime(i8* %arraydecay244, i64 1024, i8* %arraydecay245, %struct.tm* %170) #13, !dbg !15643
  store i64 %call246, i64* %len233, align 8, !dbg !15644
  %171 = load i64, i64* %len233, align 8, !dbg !15645
  %cmp247 = icmp ne i64 %171, 0, !dbg !15647
  br i1 %cmp247, label %if.then249, label %if.end316, !dbg !15648

if.then249:                                       ; preds = %if.end241
  br label %do.body250, !dbg !15649

do.body250:                                       ; preds = %if.then249
  call void @llvm.dbg.declare(metadata i64* %_n251, metadata !15650, metadata !DIExpression()), !dbg !15652
  %172 = load i64, i64* %len233, align 8, !dbg !15652
  %sub252 = sub i64 %172, 1, !dbg !15652
  store i64 %sub252, i64* %_n251, align 8, !dbg !15652
  call void @llvm.dbg.declare(metadata i64* %_w253, metadata !15653, metadata !DIExpression()), !dbg !15652
  %173 = load i32, i32* %width.addr, align 4, !dbg !15652
  %cmp254 = icmp slt i32 %173, 0, !dbg !15652
  br i1 %cmp254, label %cond.true256, label %cond.false257, !dbg !15652

cond.true256:                                     ; preds = %do.body250
  br label %cond.end258, !dbg !15652

cond.false257:                                    ; preds = %do.body250
  %174 = load i32, i32* %width.addr, align 4, !dbg !15652
  br label %cond.end258, !dbg !15652

cond.end258:                                      ; preds = %cond.false257, %cond.true256
  %cond259 = phi i32 [ 0, %cond.true256 ], [ %174, %cond.false257 ], !dbg !15652
  %conv260 = sext i32 %cond259 to i64, !dbg !15652
  store i64 %conv260, i64* %_w253, align 8, !dbg !15652
  call void @llvm.dbg.declare(metadata i64* %_incr261, metadata !15654, metadata !DIExpression()), !dbg !15652
  %175 = load i64, i64* %_n251, align 8, !dbg !15652
  %176 = load i64, i64* %_w253, align 8, !dbg !15652
  %cmp262 = icmp ult i64 %175, %176, !dbg !15652
  br i1 %cmp262, label %cond.true264, label %cond.false265, !dbg !15652

cond.true264:                                     ; preds = %cond.end258
  %177 = load i64, i64* %_w253, align 8, !dbg !15652
  br label %cond.end266, !dbg !15652

cond.false265:                                    ; preds = %cond.end258
  %178 = load i64, i64* %_n251, align 8, !dbg !15652
  br label %cond.end266, !dbg !15652

cond.end266:                                      ; preds = %cond.false265, %cond.true264
  %cond267 = phi i64 [ %177, %cond.true264 ], [ %178, %cond.false265 ], !dbg !15652
  store i64 %cond267, i64* %_incr261, align 8, !dbg !15652
  %179 = load i64, i64* %_incr261, align 8, !dbg !15655
  %180 = load i64, i64* %maxsize.addr, align 8, !dbg !15655
  %181 = load i64, i64* %i, align 8, !dbg !15655
  %sub268 = sub i64 %180, %181, !dbg !15655
  %cmp269 = icmp uge i64 %179, %sub268, !dbg !15655
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !15652

if.then271:                                       ; preds = %cond.end266
  store i64 0, i64* %retval, align 8, !dbg !15655
  br label %return, !dbg !15655

if.end272:                                        ; preds = %cond.end266
  %182 = load i8*, i8** %p, align 8, !dbg !15657
  %tobool273 = icmp ne i8* %182, null, !dbg !15657
  br i1 %tobool273, label %if.then274, label %if.end312, !dbg !15652

if.then274:                                       ; preds = %if.end272
  %183 = load i32, i32* %digits, align 4, !dbg !15659
  %cmp275 = icmp eq i32 %183, 0, !dbg !15659
  br i1 %cmp275, label %land.lhs.true277, label %if.end294, !dbg !15659

land.lhs.true277:                                 ; preds = %if.then274
  %184 = load i64, i64* %_n251, align 8, !dbg !15659
  %185 = load i64, i64* %_w253, align 8, !dbg !15659
  %cmp278 = icmp ult i64 %184, %185, !dbg !15659
  br i1 %cmp278, label %if.then280, label %if.end294, !dbg !15662

if.then280:                                       ; preds = %land.lhs.true277
  call void @llvm.dbg.declare(metadata i64* %_delta281, metadata !15663, metadata !DIExpression()), !dbg !15665
  %186 = load i32, i32* %width.addr, align 4, !dbg !15665
  %conv282 = sext i32 %186 to i64, !dbg !15665
  %187 = load i64, i64* %_n251, align 8, !dbg !15665
  %sub283 = sub i64 %conv282, %187, !dbg !15665
  store i64 %sub283, i64* %_delta281, align 8, !dbg !15665
  %188 = load i32, i32* %pad, align 4, !dbg !15666
  %cmp284 = icmp eq i32 %188, 48, !dbg !15666
  br i1 %cmp284, label %if.then289, label %lor.lhs.false286, !dbg !15666

lor.lhs.false286:                                 ; preds = %if.then280
  %189 = load i32, i32* %pad, align 4, !dbg !15666
  %cmp287 = icmp eq i32 %189, 43, !dbg !15666
  br i1 %cmp287, label %if.then289, label %if.else291, !dbg !15665

if.then289:                                       ; preds = %lor.lhs.false286, %if.then280
  %190 = load i8*, i8** %p, align 8, !dbg !15666
  %191 = load i64, i64* %_delta281, align 8, !dbg !15666
  call void @llvm.memset.p0i8.i64(i8* align 1 %190, i8 48, i64 %191, i1 false), !dbg !15666
  %192 = load i64, i64* %_delta281, align 8, !dbg !15666
  %193 = load i8*, i8** %p, align 8, !dbg !15666
  %add.ptr290 = getelementptr inbounds i8, i8* %193, i64 %192, !dbg !15666, !ctir !144
  store i8* %add.ptr290, i8** %p, align 8, !dbg !15666
  br label %if.end293, !dbg !15666

if.else291:                                       ; preds = %lor.lhs.false286
  %194 = load i8*, i8** %p, align 8, !dbg !15666
  %195 = load i64, i64* %_delta281, align 8, !dbg !15666
  call void @llvm.memset.p0i8.i64(i8* align 1 %194, i8 32, i64 %195, i1 false), !dbg !15666
  %196 = load i64, i64* %_delta281, align 8, !dbg !15666
  %197 = load i8*, i8** %p, align 8, !dbg !15666
  %add.ptr292 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !15666, !ctir !144
  store i8* %add.ptr292, i8** %p, align 8, !dbg !15666
  br label %if.end293

if.end293:                                        ; preds = %if.else291, %if.then289
  br label %if.end294, !dbg !15665

if.end294:                                        ; preds = %if.end293, %land.lhs.true277, %if.then274
  %198 = load i8, i8* %to_lowcase, align 1, !dbg !15668
  %tobool295 = trunc i8 %198 to i1, !dbg !15668
  br i1 %tobool295, label %if.then296, label %if.else300, !dbg !15662

if.then296:                                       ; preds = %if.end294
  %199 = load i8*, i8** %p, align 8, !dbg !15668
  %arraydecay297 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15668, !ctir !1611
  %add.ptr298 = getelementptr inbounds i8, i8* %arraydecay297, i64 1, !dbg !15668, !ctir !144
  %200 = load i64, i64* %_n251, align 8, !dbg !15668
  %call299 = call i8* @memcpy_lowcase(i8* %199, i8* %add.ptr298, i64 %200), !dbg !15668
  br label %if.end310, !dbg !15668

if.else300:                                       ; preds = %if.end294
  %201 = load i8, i8* %to_uppcase, align 1, !dbg !15670
  %tobool301 = trunc i8 %201 to i1, !dbg !15670
  br i1 %tobool301, label %if.then302, label %if.else306, !dbg !15668

if.then302:                                       ; preds = %if.else300
  %202 = load i8*, i8** %p, align 8, !dbg !15670
  %arraydecay303 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15670, !ctir !1611
  %add.ptr304 = getelementptr inbounds i8, i8* %arraydecay303, i64 1, !dbg !15670, !ctir !144
  %203 = load i64, i64* %_n251, align 8, !dbg !15670
  %call305 = call i8* @memcpy_uppcase(i8* %202, i8* %add.ptr304, i64 %203), !dbg !15670
  br label %if.end309, !dbg !15670

if.else306:                                       ; preds = %if.else300
  %204 = load i8*, i8** %p, align 8, !dbg !15670
  %arraydecay307 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15670, !ctir !1611
  %add.ptr308 = getelementptr inbounds i8, i8* %arraydecay307, i64 1, !dbg !15670, !ctir !144
  %205 = load i64, i64* %_n251, align 8, !dbg !15670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %204, i8* align 1 %add.ptr308, i64 %205, i1 false), !dbg !15670
  br label %if.end309

if.end309:                                        ; preds = %if.else306, %if.then302
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then296
  %206 = load i64, i64* %_n251, align 8, !dbg !15662
  %207 = load i8*, i8** %p, align 8, !dbg !15662
  %add.ptr311 = getelementptr inbounds i8, i8* %207, i64 %206, !dbg !15662, !ctir !144
  store i8* %add.ptr311, i8** %p, align 8, !dbg !15662
  br label %if.end312, !dbg !15662

if.end312:                                        ; preds = %if.end310, %if.end272
  %208 = load i64, i64* %_incr261, align 8, !dbg !15652
  %209 = load i64, i64* %i, align 8, !dbg !15652
  %add313 = add i64 %209, %208, !dbg !15652
  store i64 %add313, i64* %i, align 8, !dbg !15652
  br label %do.end315, !dbg !15652

do.end315:                                        ; preds = %if.end312
  br label %if.end316, !dbg !15652

if.end316:                                        ; preds = %do.end315, %if.end241
  br label %sw.epilog1435, !dbg !15672

sw.bb317:                                         ; preds = %sw.epilog87
  %210 = load i32, i32* %modifier, align 4, !dbg !15673
  %cmp318 = icmp eq i32 %210, 69, !dbg !15675
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !15676

if.then320:                                       ; preds = %sw.bb317
  br label %underlying_strftime, !dbg !15677

if.end321:                                        ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %century, metadata !15679, metadata !DIExpression()), !dbg !15681
  %211 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15682
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %211, i32 0, i32 5, !dbg !15683, !ctir !15254
  %212 = load i32, i32* %tm_year, align 4, !dbg !15683, !ctir !27
  %div = sdiv i32 %212, 100, !dbg !15684
  %add322 = add nsw i32 %div, 19, !dbg !15685
  store i32 %add322, i32* %century, align 4, !dbg !15681
  %213 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15686
  %tm_year323 = getelementptr inbounds %struct.tm, %struct.tm* %213, i32 0, i32 5, !dbg !15687, !ctir !15254
  %214 = load i32, i32* %tm_year323, align 4, !dbg !15687, !ctir !27
  %rem = srem i32 %214, 100, !dbg !15688
  %cmp324 = icmp slt i32 %rem, 0, !dbg !15689
  br i1 %cmp324, label %land.rhs, label %land.end, !dbg !15690

land.rhs:                                         ; preds = %if.end321
  %215 = load i32, i32* %century, align 4, !dbg !15691
  %cmp326 = icmp slt i32 0, %215, !dbg !15692
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end321
  %216 = phi i1 [ false, %if.end321 ], [ %cmp326, %land.rhs ], !dbg !15693
  %land.ext = zext i1 %216 to i32, !dbg !15690
  %217 = load i32, i32* %century, align 4, !dbg !15694
  %sub328 = sub nsw i32 %217, %land.ext, !dbg !15694
  store i32 %sub328, i32* %century, align 4, !dbg !15694
  br label %do.body329, !dbg !15695

do.body329:                                       ; preds = %land.end
  store i32 2, i32* %digits, align 4, !dbg !15696
  %218 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15696
  %tm_year330 = getelementptr inbounds %struct.tm, %struct.tm* %218, i32 0, i32 5, !dbg !15696, !ctir !15254
  %219 = load i32, i32* %tm_year330, align 4, !dbg !15696, !ctir !27
  %cmp331 = icmp slt i32 %219, -1900, !dbg !15696
  %frombool333 = zext i1 %cmp331 to i8, !dbg !15696
  store i8 %frombool333, i8* %negative_number, align 1, !dbg !15696
  %220 = load i32, i32* %century, align 4, !dbg !15696
  store i32 %220, i32* %u_number_value, align 4, !dbg !15696
  br label %do_yearish, !dbg !15696

do.end335:                                        ; No predecessors!
  br label %sw.bb336, !dbg !15698

sw.bb336:                                         ; preds = %sw.epilog87, %do.end335
  %221 = load i32, i32* %modifier, align 4, !dbg !15699
  %cmp337 = icmp eq i32 %221, 79, !dbg !15701
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !15702

if.then339:                                       ; preds = %sw.bb336
  br label %bad_format, !dbg !15703

if.end340:                                        ; preds = %sw.bb336
  br label %underlying_strftime, !dbg !15704

sw.bb341:                                         ; preds = %sw.epilog87
  %222 = load i32, i32* %modifier, align 4, !dbg !15705
  %cmp342 = icmp ne i32 %222, 0, !dbg !15707
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !15708

if.then344:                                       ; preds = %sw.bb341
  br label %bad_format, !dbg !15709

if.end345:                                        ; preds = %sw.bb341
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.360, i64 0, i64 0), i8** %subfmt, align 8, !dbg !15710
  br label %subformat, !dbg !15711

sw.bb346:                                         ; preds = %sw.epilog87
  %223 = load i32, i32* %modifier, align 4, !dbg !15712
  %cmp347 = icmp eq i32 %223, 69, !dbg !15714
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !15715

if.then349:                                       ; preds = %sw.bb346
  br label %bad_format, !dbg !15716

if.end350:                                        ; preds = %sw.bb346
  br label %do.body351, !dbg !15717

do.body351:                                       ; preds = %if.end350
  store i32 2, i32* %digits, align 4, !dbg !15718
  %224 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15718
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %224, i32 0, i32 3, !dbg !15718, !ctir !15254
  %225 = load i32, i32* %tm_mday, align 4, !dbg !15718, !ctir !27
  store i32 %225, i32* %number_value, align 4, !dbg !15718
  br label %do_number, !dbg !15718

do.end353:                                        ; No predecessors!
  br label %sw.bb354, !dbg !15718

sw.bb354:                                         ; preds = %sw.epilog87, %do.end353
  %226 = load i32, i32* %modifier, align 4, !dbg !15720
  %cmp355 = icmp eq i32 %226, 69, !dbg !15722
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !15723

if.then357:                                       ; preds = %sw.bb354
  br label %bad_format, !dbg !15724

if.end358:                                        ; preds = %sw.bb354
  br label %do.body359, !dbg !15725

do.body359:                                       ; preds = %if.end358
  store i32 2, i32* %digits, align 4, !dbg !15726
  %227 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15726
  %tm_mday360 = getelementptr inbounds %struct.tm, %struct.tm* %227, i32 0, i32 3, !dbg !15726, !ctir !15254
  %228 = load i32, i32* %tm_mday360, align 4, !dbg !15726, !ctir !27
  store i32 %228, i32* %number_value, align 4, !dbg !15726
  br label %do_number_spacepad, !dbg !15726

do.end362:                                        ; No predecessors!
  br label %do_tz_offset, !dbg !15726

do_tz_offset:                                     ; preds = %do.body1349, %do.body1333, %do.body1327, %do.body1321, %do.end362
  call void @llvm.dbg.label(metadata !15728), !dbg !15729
  store i8 1, i8* %always_output_a_sign, align 1, !dbg !15730
  br label %do_number_body, !dbg !15731

do_yearish:                                       ; preds = %do.body1213, %do.body1183, %do.body1131, %cond.end1126, %do.body329
  call void @llvm.dbg.label(metadata !15732), !dbg !15733
  %229 = load i32, i32* %pad, align 4, !dbg !15734
  %cmp363 = icmp eq i32 %229, 0, !dbg !15736
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !15737

if.then365:                                       ; preds = %do_yearish
  %230 = load i32, i32* %yr_spec.addr, align 4, !dbg !15738
  store i32 %230, i32* %pad, align 4, !dbg !15739
  br label %if.end366, !dbg !15740

if.end366:                                        ; preds = %if.then365, %do_yearish
  %231 = load i32, i32* %pad, align 4, !dbg !15741
  %cmp367 = icmp eq i32 %231, 43, !dbg !15742
  br i1 %cmp367, label %land.rhs369, label %land.end377, !dbg !15743

land.rhs369:                                      ; preds = %if.end366
  %232 = load i32, i32* %digits, align 4, !dbg !15744
  %cmp370 = icmp eq i32 %232, 2, !dbg !15745
  %233 = zext i1 %cmp370 to i64, !dbg !15744
  %cond372 = select i1 %cmp370, i32 99, i32 9999, !dbg !15744
  %234 = load i32, i32* %u_number_value, align 4, !dbg !15746
  %cmp373 = icmp ult i32 %cond372, %234, !dbg !15747
  br i1 %cmp373, label %lor.end, label %lor.rhs, !dbg !15748

lor.rhs:                                          ; preds = %land.rhs369
  %235 = load i32, i32* %digits, align 4, !dbg !15749
  %236 = load i32, i32* %width.addr, align 4, !dbg !15750
  %cmp375 = icmp slt i32 %235, %236, !dbg !15751
  br label %lor.end, !dbg !15748

lor.end:                                          ; preds = %lor.rhs, %land.rhs369
  %237 = phi i1 [ true, %land.rhs369 ], [ %cmp375, %lor.rhs ]
  br label %land.end377

land.end377:                                      ; preds = %lor.end, %if.end366
  %238 = phi i1 [ false, %if.end366 ], [ %237, %lor.end ], !dbg !15752
  %frombool379 = zext i1 %238 to i8, !dbg !15753
  store i8 %frombool379, i8* %always_output_a_sign, align 1, !dbg !15753
  br label %do_maybe_signed_number, !dbg !15754

do_number_spacepad:                               ; preds = %do.body810, %do.body801, %do.body359
  call void @llvm.dbg.label(metadata !15755), !dbg !15756
  %239 = load i32, i32* %pad, align 4, !dbg !15757
  %cmp380 = icmp eq i32 %239, 0, !dbg !15759
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !15760

if.then382:                                       ; preds = %do_number_spacepad
  store i32 95, i32* %pad, align 4, !dbg !15761
  br label %if.end383, !dbg !15762

if.end383:                                        ; preds = %if.then382, %do_number_spacepad
  br label %do_number, !dbg !15763

do_number:                                        ; preds = %do.body1170, %do.body1154, %do.body1143, %do.body1032, %do.body1020, %do.body935, %do.body862, %do.body831, %do.body793, %do.body784, %if.end383, %do.body351
  call void @llvm.dbg.label(metadata !15764), !dbg !15765
  %240 = load i32, i32* %number_value, align 4, !dbg !15766
  %cmp384 = icmp slt i32 %240, 0, !dbg !15767
  %frombool386 = zext i1 %cmp384 to i8, !dbg !15768
  store i8 %frombool386, i8* %negative_number, align 1, !dbg !15768
  %241 = load i32, i32* %number_value, align 4, !dbg !15769
  store i32 %241, i32* %u_number_value, align 4, !dbg !15770
  br label %do_signed_number, !dbg !15771

do_signed_number:                                 ; preds = %do.body921, %do.body839, %do.body818, %do_number
  call void @llvm.dbg.label(metadata !15772), !dbg !15773
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !15774
  br label %do_maybe_signed_number, !dbg !15775

do_maybe_signed_number:                           ; preds = %do_signed_number, %land.end377
  call void @llvm.dbg.label(metadata !15776), !dbg !15777
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !15778
  br label %do_number_body, !dbg !15779

do_number_body:                                   ; preds = %do_maybe_signed_number, %do_tz_offset
  call void @llvm.dbg.label(metadata !15780), !dbg !15781
  %242 = load i32, i32* %modifier, align 4, !dbg !15782
  %cmp387 = icmp eq i32 %242, 79, !dbg !15784
  br i1 %cmp387, label %land.lhs.true389, label %if.end392, !dbg !15785

land.lhs.true389:                                 ; preds = %do_number_body
  %243 = load i8, i8* %negative_number, align 1, !dbg !15786
  %tobool390 = trunc i8 %243 to i1, !dbg !15786
  br i1 %tobool390, label %if.end392, label %if.then391, !dbg !15787

if.then391:                                       ; preds = %land.lhs.true389
  br label %underlying_strftime, !dbg !15788

if.end392:                                        ; preds = %land.lhs.true389, %do_number_body
  %arraydecay393 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !15790, !ctir !829
  %add.ptr394 = getelementptr inbounds i8, i8* %arraydecay393, i64 23, !dbg !15791, !ctir !144
  store i8* %add.ptr394, i8** %bufp, align 8, !dbg !15792
  %244 = load i8, i8* %negative_number, align 1, !dbg !15793
  %tobool395 = trunc i8 %244 to i1, !dbg !15793
  br i1 %tobool395, label %if.then396, label %if.end398, !dbg !15795

if.then396:                                       ; preds = %if.end392
  %245 = load i32, i32* %u_number_value, align 4, !dbg !15796
  %sub397 = sub i32 0, %245, !dbg !15797
  store i32 %sub397, i32* %u_number_value, align 4, !dbg !15798
  br label %if.end398, !dbg !15799

if.end398:                                        ; preds = %if.then396, %if.end392
  br label %do.body399, !dbg !15800

do.body399:                                       ; preds = %lor.end415, %if.end398
  %246 = load i32, i32* %tz_colon_mask, align 4, !dbg !15801
  %and = and i32 %246, 1, !dbg !15804
  %tobool400 = icmp ne i32 %and, 0, !dbg !15804
  br i1 %tobool400, label %if.then401, label %if.end403, !dbg !15805

if.then401:                                       ; preds = %do.body399
  %247 = load i8*, i8** %bufp, align 8, !dbg !15806
  %incdec.ptr402 = getelementptr inbounds i8, i8* %247, i32 -1, !dbg !15806, !ctir !144
  store i8* %incdec.ptr402, i8** %bufp, align 8, !dbg !15806
  store i8 58, i8* %incdec.ptr402, align 1, !dbg !15807, !ctir !144
  br label %if.end403, !dbg !15808

if.end403:                                        ; preds = %if.then401, %do.body399
  %248 = load i32, i32* %tz_colon_mask, align 4, !dbg !15809
  %shr = ashr i32 %248, 1, !dbg !15809
  store i32 %shr, i32* %tz_colon_mask, align 4, !dbg !15809
  %249 = load i32, i32* %u_number_value, align 4, !dbg !15810
  %rem404 = urem i32 %249, 10, !dbg !15811
  %add405 = add i32 %rem404, 48, !dbg !15812
  %conv406 = trunc i32 %add405 to i8, !dbg !15810
  %250 = load i8*, i8** %bufp, align 8, !dbg !15813
  %incdec.ptr407 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !15813, !ctir !144
  store i8* %incdec.ptr407, i8** %bufp, align 8, !dbg !15813
  store i8 %conv406, i8* %incdec.ptr407, align 1, !dbg !15814, !ctir !144
  %251 = load i32, i32* %u_number_value, align 4, !dbg !15815
  %div408 = udiv i32 %251, 10, !dbg !15815
  store i32 %div408, i32* %u_number_value, align 4, !dbg !15815
  br label %do.cond409, !dbg !15816

do.cond409:                                       ; preds = %if.end403
  %252 = load i32, i32* %u_number_value, align 4, !dbg !15817
  %cmp410 = icmp ne i32 %252, 0, !dbg !15818
  br i1 %cmp410, label %lor.end415, label %lor.rhs412, !dbg !15819

lor.rhs412:                                       ; preds = %do.cond409
  %253 = load i32, i32* %tz_colon_mask, align 4, !dbg !15820
  %cmp413 = icmp ne i32 %253, 0, !dbg !15821
  br label %lor.end415, !dbg !15819

lor.end415:                                       ; preds = %lor.rhs412, %do.cond409
  %254 = phi i1 [ true, %do.cond409 ], [ %cmp413, %lor.rhs412 ]
  br i1 %254, label %do.body399, label %do.end416, !dbg !15816, !llvm.loop !15822

do.end416:                                        ; preds = %lor.end415
  br label %do_number_sign_and_padding, !dbg !15816

do_number_sign_and_padding:                       ; preds = %do.end962, %do.end416
  call void @llvm.dbg.label(metadata !15824), !dbg !15825
  %255 = load i32, i32* %digits, align 4, !dbg !15826
  %256 = load i32, i32* %width.addr, align 4, !dbg !15828
  %cmp417 = icmp slt i32 %255, %256, !dbg !15829
  br i1 %cmp417, label %if.then419, label %if.end420, !dbg !15830

if.then419:                                       ; preds = %do_number_sign_and_padding
  %257 = load i32, i32* %width.addr, align 4, !dbg !15831
  store i32 %257, i32* %digits, align 4, !dbg !15832
  br label %if.end420, !dbg !15833

if.end420:                                        ; preds = %if.then419, %do_number_sign_and_padding
  %258 = load i8, i8* %negative_number, align 1, !dbg !15834
  %tobool421 = trunc i8 %258 to i1, !dbg !15834
  br i1 %tobool421, label %cond.true423, label %cond.false424, !dbg !15834

cond.true423:                                     ; preds = %if.end420
  br label %cond.end428, !dbg !15834

cond.false424:                                    ; preds = %if.end420
  %259 = load i8, i8* %always_output_a_sign, align 1, !dbg !15835
  %tobool425 = trunc i8 %259 to i1, !dbg !15835
  %260 = zext i1 %tobool425 to i64, !dbg !15835
  %cond427 = select i1 %tobool425, i32 43, i32 0, !dbg !15835
  br label %cond.end428, !dbg !15834

cond.end428:                                      ; preds = %cond.false424, %cond.true423
  %cond429 = phi i32 [ 45, %cond.true423 ], [ %cond427, %cond.false424 ], !dbg !15834
  %conv430 = trunc i32 %cond429 to i8, !dbg !15836
  store i8 %conv430, i8* %sign_char, align 1, !dbg !15837
  %261 = load i32, i32* %pad, align 4, !dbg !15838
  %cmp431 = icmp eq i32 %261, 45, !dbg !15840
  br i1 %cmp431, label %if.then433, label %if.else486, !dbg !15841

if.then433:                                       ; preds = %cond.end428
  %262 = load i8, i8* %sign_char, align 1, !dbg !15842
  %tobool434 = icmp ne i8 %262, 0, !dbg !15842
  br i1 %tobool434, label %if.then435, label %if.end485, !dbg !15845

if.then435:                                       ; preds = %if.then433
  br label %do.body436, !dbg !15846

do.body436:                                       ; preds = %if.then435
  call void @llvm.dbg.declare(metadata i64* %_n437, metadata !15847, metadata !DIExpression()), !dbg !15849
  store i64 1, i64* %_n437, align 8, !dbg !15849
  call void @llvm.dbg.declare(metadata i64* %_w438, metadata !15850, metadata !DIExpression()), !dbg !15849
  %263 = load i32, i32* %width.addr, align 4, !dbg !15849
  %cmp439 = icmp slt i32 %263, 0, !dbg !15849
  br i1 %cmp439, label %cond.true441, label %cond.false442, !dbg !15849

cond.true441:                                     ; preds = %do.body436
  br label %cond.end443, !dbg !15849

cond.false442:                                    ; preds = %do.body436
  %264 = load i32, i32* %width.addr, align 4, !dbg !15849
  br label %cond.end443, !dbg !15849

cond.end443:                                      ; preds = %cond.false442, %cond.true441
  %cond444 = phi i32 [ 0, %cond.true441 ], [ %264, %cond.false442 ], !dbg !15849
  %conv445 = sext i32 %cond444 to i64, !dbg !15849
  store i64 %conv445, i64* %_w438, align 8, !dbg !15849
  call void @llvm.dbg.declare(metadata i64* %_incr446, metadata !15851, metadata !DIExpression()), !dbg !15849
  %265 = load i64, i64* %_n437, align 8, !dbg !15849
  %266 = load i64, i64* %_w438, align 8, !dbg !15849
  %cmp447 = icmp ult i64 %265, %266, !dbg !15849
  br i1 %cmp447, label %cond.true449, label %cond.false450, !dbg !15849

cond.true449:                                     ; preds = %cond.end443
  %267 = load i64, i64* %_w438, align 8, !dbg !15849
  br label %cond.end451, !dbg !15849

cond.false450:                                    ; preds = %cond.end443
  %268 = load i64, i64* %_n437, align 8, !dbg !15849
  br label %cond.end451, !dbg !15849

cond.end451:                                      ; preds = %cond.false450, %cond.true449
  %cond452 = phi i64 [ %267, %cond.true449 ], [ %268, %cond.false450 ], !dbg !15849
  store i64 %cond452, i64* %_incr446, align 8, !dbg !15849
  %269 = load i64, i64* %_incr446, align 8, !dbg !15852
  %270 = load i64, i64* %maxsize.addr, align 8, !dbg !15852
  %271 = load i64, i64* %i, align 8, !dbg !15852
  %sub453 = sub i64 %270, %271, !dbg !15852
  %cmp454 = icmp uge i64 %269, %sub453, !dbg !15852
  br i1 %cmp454, label %if.then456, label %if.end457, !dbg !15849

if.then456:                                       ; preds = %cond.end451
  store i64 0, i64* %retval, align 8, !dbg !15852
  br label %return, !dbg !15852

if.end457:                                        ; preds = %cond.end451
  %272 = load i8*, i8** %p, align 8, !dbg !15854
  %tobool458 = icmp ne i8* %272, null, !dbg !15854
  br i1 %tobool458, label %if.then459, label %if.end481, !dbg !15849

if.then459:                                       ; preds = %if.end457
  %273 = load i32, i32* %digits, align 4, !dbg !15856
  %cmp460 = icmp eq i32 %273, 0, !dbg !15856
  br i1 %cmp460, label %land.lhs.true462, label %if.end479, !dbg !15856

land.lhs.true462:                                 ; preds = %if.then459
  %274 = load i64, i64* %_n437, align 8, !dbg !15856
  %275 = load i64, i64* %_w438, align 8, !dbg !15856
  %cmp463 = icmp ult i64 %274, %275, !dbg !15856
  br i1 %cmp463, label %if.then465, label %if.end479, !dbg !15859

if.then465:                                       ; preds = %land.lhs.true462
  call void @llvm.dbg.declare(metadata i64* %_delta466, metadata !15860, metadata !DIExpression()), !dbg !15862
  %276 = load i32, i32* %width.addr, align 4, !dbg !15862
  %conv467 = sext i32 %276 to i64, !dbg !15862
  %277 = load i64, i64* %_n437, align 8, !dbg !15862
  %sub468 = sub i64 %conv467, %277, !dbg !15862
  store i64 %sub468, i64* %_delta466, align 8, !dbg !15862
  %278 = load i32, i32* %pad, align 4, !dbg !15863
  %cmp469 = icmp eq i32 %278, 48, !dbg !15863
  br i1 %cmp469, label %if.then474, label %lor.lhs.false471, !dbg !15863

lor.lhs.false471:                                 ; preds = %if.then465
  %279 = load i32, i32* %pad, align 4, !dbg !15863
  %cmp472 = icmp eq i32 %279, 43, !dbg !15863
  br i1 %cmp472, label %if.then474, label %if.else476, !dbg !15862

if.then474:                                       ; preds = %lor.lhs.false471, %if.then465
  %280 = load i8*, i8** %p, align 8, !dbg !15863
  %281 = load i64, i64* %_delta466, align 8, !dbg !15863
  call void @llvm.memset.p0i8.i64(i8* align 1 %280, i8 48, i64 %281, i1 false), !dbg !15863
  %282 = load i64, i64* %_delta466, align 8, !dbg !15863
  %283 = load i8*, i8** %p, align 8, !dbg !15863
  %add.ptr475 = getelementptr inbounds i8, i8* %283, i64 %282, !dbg !15863, !ctir !144
  store i8* %add.ptr475, i8** %p, align 8, !dbg !15863
  br label %if.end478, !dbg !15863

if.else476:                                       ; preds = %lor.lhs.false471
  %284 = load i8*, i8** %p, align 8, !dbg !15863
  %285 = load i64, i64* %_delta466, align 8, !dbg !15863
  call void @llvm.memset.p0i8.i64(i8* align 1 %284, i8 32, i64 %285, i1 false), !dbg !15863
  %286 = load i64, i64* %_delta466, align 8, !dbg !15863
  %287 = load i8*, i8** %p, align 8, !dbg !15863
  %add.ptr477 = getelementptr inbounds i8, i8* %287, i64 %286, !dbg !15863, !ctir !144
  store i8* %add.ptr477, i8** %p, align 8, !dbg !15863
  br label %if.end478

if.end478:                                        ; preds = %if.else476, %if.then474
  br label %if.end479, !dbg !15862

if.end479:                                        ; preds = %if.end478, %land.lhs.true462, %if.then459
  %288 = load i8, i8* %sign_char, align 1, !dbg !15859
  %289 = load i8*, i8** %p, align 8, !dbg !15859
  store i8 %288, i8* %289, align 1, !dbg !15859, !ctir !144
  %290 = load i64, i64* %_n437, align 8, !dbg !15859
  %291 = load i8*, i8** %p, align 8, !dbg !15859
  %add.ptr480 = getelementptr inbounds i8, i8* %291, i64 %290, !dbg !15859, !ctir !144
  store i8* %add.ptr480, i8** %p, align 8, !dbg !15859
  br label %if.end481, !dbg !15859

if.end481:                                        ; preds = %if.end479, %if.end457
  %292 = load i64, i64* %_incr446, align 8, !dbg !15849
  %293 = load i64, i64* %i, align 8, !dbg !15849
  %add482 = add i64 %293, %292, !dbg !15849
  store i64 %add482, i64* %i, align 8, !dbg !15849
  br label %do.end484, !dbg !15849

do.end484:                                        ; preds = %if.end481
  br label %if.end485, !dbg !15849

if.end485:                                        ; preds = %do.end484, %if.then433
  br label %if.end696, !dbg !15865

if.else486:                                       ; preds = %cond.end428
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !15866, metadata !DIExpression()), !dbg !15868
  %294 = load i32, i32* %digits, align 4, !dbg !15869
  %conv487 = sext i32 %294 to i64, !dbg !15869
  %arraydecay488 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !15870, !ctir !829
  %add.ptr489 = getelementptr inbounds i8, i8* %arraydecay488, i64 23, !dbg !15871, !ctir !144
  %295 = load i8*, i8** %bufp, align 8, !dbg !15872
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr489 to i64, !dbg !15873
  %sub.ptr.rhs.cast = ptrtoint i8* %295 to i64, !dbg !15873
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15873
  %sub490 = sub nsw i64 %conv487, %sub.ptr.sub, !dbg !15874
  %296 = load i8, i8* %sign_char, align 1, !dbg !15875
  %tobool491 = icmp ne i8 %296, 0, !dbg !15876
  %lnot = xor i1 %tobool491, true, !dbg !15876
  %lnot492 = xor i1 %lnot, true, !dbg !15877
  %lnot.ext = zext i1 %lnot492 to i32, !dbg !15877
  %conv493 = sext i32 %lnot.ext to i64, !dbg !15877
  %sub494 = sub nsw i64 %sub490, %conv493, !dbg !15878
  %conv495 = trunc i64 %sub494 to i32, !dbg !15869
  store i32 %conv495, i32* %padding, align 4, !dbg !15868
  %297 = load i32, i32* %padding, align 4, !dbg !15879
  %cmp496 = icmp sgt i32 %297, 0, !dbg !15881
  br i1 %cmp496, label %if.then498, label %if.else642, !dbg !15882

if.then498:                                       ; preds = %if.else486
  %298 = load i32, i32* %pad, align 4, !dbg !15883
  %cmp499 = icmp eq i32 %298, 95, !dbg !15886
  br i1 %cmp499, label %if.then501, label %if.else574, !dbg !15887

if.then501:                                       ; preds = %if.then498
  %299 = load i32, i32* %padding, align 4, !dbg !15888
  %conv502 = sext i32 %299 to i64, !dbg !15891
  %300 = load i64, i64* %maxsize.addr, align 8, !dbg !15892
  %301 = load i64, i64* %i, align 8, !dbg !15893
  %sub503 = sub i64 %300, %301, !dbg !15894
  %cmp504 = icmp uge i64 %conv502, %sub503, !dbg !15895
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !15896

if.then506:                                       ; preds = %if.then501
  store i64 0, i64* %retval, align 8, !dbg !15897
  br label %return, !dbg !15897

if.end507:                                        ; preds = %if.then501
  %302 = load i8*, i8** %p, align 8, !dbg !15898
  %tobool508 = icmp ne i8* %302, null, !dbg !15898
  br i1 %tobool508, label %if.then509, label %if.end512, !dbg !15900

if.then509:                                       ; preds = %if.end507
  %303 = load i8*, i8** %p, align 8, !dbg !15901
  %304 = load i32, i32* %padding, align 4, !dbg !15901
  %conv510 = sext i32 %304 to i64, !dbg !15901
  call void @llvm.memset.p0i8.i64(i8* align 1 %303, i8 32, i64 %conv510, i1 false), !dbg !15901
  %305 = load i32, i32* %padding, align 4, !dbg !15901
  %306 = load i8*, i8** %p, align 8, !dbg !15901
  %idx.ext = sext i32 %305 to i64, !dbg !15901
  %add.ptr511 = getelementptr inbounds i8, i8* %306, i64 %idx.ext, !dbg !15901, !ctir !144
  store i8* %add.ptr511, i8** %p, align 8, !dbg !15901
  br label %if.end512, !dbg !15901

if.end512:                                        ; preds = %if.then509, %if.end507
  %307 = load i32, i32* %padding, align 4, !dbg !15902
  %conv513 = sext i32 %307 to i64, !dbg !15902
  %308 = load i64, i64* %i, align 8, !dbg !15903
  %add514 = add i64 %308, %conv513, !dbg !15903
  store i64 %add514, i64* %i, align 8, !dbg !15903
  %309 = load i32, i32* %width.addr, align 4, !dbg !15904
  %310 = load i32, i32* %padding, align 4, !dbg !15905
  %cmp515 = icmp sgt i32 %309, %310, !dbg !15906
  br i1 %cmp515, label %cond.true517, label %cond.false519, !dbg !15904

cond.true517:                                     ; preds = %if.end512
  %311 = load i32, i32* %width.addr, align 4, !dbg !15907
  %312 = load i32, i32* %padding, align 4, !dbg !15908
  %sub518 = sub nsw i32 %311, %312, !dbg !15909
  br label %cond.end520, !dbg !15904

cond.false519:                                    ; preds = %if.end512
  br label %cond.end520, !dbg !15904

cond.end520:                                      ; preds = %cond.false519, %cond.true517
  %cond521 = phi i32 [ %sub518, %cond.true517 ], [ 0, %cond.false519 ], !dbg !15904
  store i32 %cond521, i32* %width.addr, align 4, !dbg !15910
  %313 = load i8, i8* %sign_char, align 1, !dbg !15911
  %tobool522 = icmp ne i8 %313, 0, !dbg !15911
  br i1 %tobool522, label %if.then523, label %if.end573, !dbg !15913

if.then523:                                       ; preds = %cond.end520
  br label %do.body524, !dbg !15914

do.body524:                                       ; preds = %if.then523
  call void @llvm.dbg.declare(metadata i64* %_n525, metadata !15915, metadata !DIExpression()), !dbg !15917
  store i64 1, i64* %_n525, align 8, !dbg !15917
  call void @llvm.dbg.declare(metadata i64* %_w526, metadata !15918, metadata !DIExpression()), !dbg !15917
  %314 = load i32, i32* %width.addr, align 4, !dbg !15917
  %cmp527 = icmp slt i32 %314, 0, !dbg !15917
  br i1 %cmp527, label %cond.true529, label %cond.false530, !dbg !15917

cond.true529:                                     ; preds = %do.body524
  br label %cond.end531, !dbg !15917

cond.false530:                                    ; preds = %do.body524
  %315 = load i32, i32* %width.addr, align 4, !dbg !15917
  br label %cond.end531, !dbg !15917

cond.end531:                                      ; preds = %cond.false530, %cond.true529
  %cond532 = phi i32 [ 0, %cond.true529 ], [ %315, %cond.false530 ], !dbg !15917
  %conv533 = sext i32 %cond532 to i64, !dbg !15917
  store i64 %conv533, i64* %_w526, align 8, !dbg !15917
  call void @llvm.dbg.declare(metadata i64* %_incr534, metadata !15919, metadata !DIExpression()), !dbg !15917
  %316 = load i64, i64* %_n525, align 8, !dbg !15917
  %317 = load i64, i64* %_w526, align 8, !dbg !15917
  %cmp535 = icmp ult i64 %316, %317, !dbg !15917
  br i1 %cmp535, label %cond.true537, label %cond.false538, !dbg !15917

cond.true537:                                     ; preds = %cond.end531
  %318 = load i64, i64* %_w526, align 8, !dbg !15917
  br label %cond.end539, !dbg !15917

cond.false538:                                    ; preds = %cond.end531
  %319 = load i64, i64* %_n525, align 8, !dbg !15917
  br label %cond.end539, !dbg !15917

cond.end539:                                      ; preds = %cond.false538, %cond.true537
  %cond540 = phi i64 [ %318, %cond.true537 ], [ %319, %cond.false538 ], !dbg !15917
  store i64 %cond540, i64* %_incr534, align 8, !dbg !15917
  %320 = load i64, i64* %_incr534, align 8, !dbg !15920
  %321 = load i64, i64* %maxsize.addr, align 8, !dbg !15920
  %322 = load i64, i64* %i, align 8, !dbg !15920
  %sub541 = sub i64 %321, %322, !dbg !15920
  %cmp542 = icmp uge i64 %320, %sub541, !dbg !15920
  br i1 %cmp542, label %if.then544, label %if.end545, !dbg !15917

if.then544:                                       ; preds = %cond.end539
  store i64 0, i64* %retval, align 8, !dbg !15920
  br label %return, !dbg !15920

if.end545:                                        ; preds = %cond.end539
  %323 = load i8*, i8** %p, align 8, !dbg !15922
  %tobool546 = icmp ne i8* %323, null, !dbg !15922
  br i1 %tobool546, label %if.then547, label %if.end569, !dbg !15917

if.then547:                                       ; preds = %if.end545
  %324 = load i32, i32* %digits, align 4, !dbg !15924
  %cmp548 = icmp eq i32 %324, 0, !dbg !15924
  br i1 %cmp548, label %land.lhs.true550, label %if.end567, !dbg !15924

land.lhs.true550:                                 ; preds = %if.then547
  %325 = load i64, i64* %_n525, align 8, !dbg !15924
  %326 = load i64, i64* %_w526, align 8, !dbg !15924
  %cmp551 = icmp ult i64 %325, %326, !dbg !15924
  br i1 %cmp551, label %if.then553, label %if.end567, !dbg !15927

if.then553:                                       ; preds = %land.lhs.true550
  call void @llvm.dbg.declare(metadata i64* %_delta554, metadata !15928, metadata !DIExpression()), !dbg !15930
  %327 = load i32, i32* %width.addr, align 4, !dbg !15930
  %conv555 = sext i32 %327 to i64, !dbg !15930
  %328 = load i64, i64* %_n525, align 8, !dbg !15930
  %sub556 = sub i64 %conv555, %328, !dbg !15930
  store i64 %sub556, i64* %_delta554, align 8, !dbg !15930
  %329 = load i32, i32* %pad, align 4, !dbg !15931
  %cmp557 = icmp eq i32 %329, 48, !dbg !15931
  br i1 %cmp557, label %if.then562, label %lor.lhs.false559, !dbg !15931

lor.lhs.false559:                                 ; preds = %if.then553
  %330 = load i32, i32* %pad, align 4, !dbg !15931
  %cmp560 = icmp eq i32 %330, 43, !dbg !15931
  br i1 %cmp560, label %if.then562, label %if.else564, !dbg !15930

if.then562:                                       ; preds = %lor.lhs.false559, %if.then553
  %331 = load i8*, i8** %p, align 8, !dbg !15931
  %332 = load i64, i64* %_delta554, align 8, !dbg !15931
  call void @llvm.memset.p0i8.i64(i8* align 1 %331, i8 48, i64 %332, i1 false), !dbg !15931
  %333 = load i64, i64* %_delta554, align 8, !dbg !15931
  %334 = load i8*, i8** %p, align 8, !dbg !15931
  %add.ptr563 = getelementptr inbounds i8, i8* %334, i64 %333, !dbg !15931, !ctir !144
  store i8* %add.ptr563, i8** %p, align 8, !dbg !15931
  br label %if.end566, !dbg !15931

if.else564:                                       ; preds = %lor.lhs.false559
  %335 = load i8*, i8** %p, align 8, !dbg !15931
  %336 = load i64, i64* %_delta554, align 8, !dbg !15931
  call void @llvm.memset.p0i8.i64(i8* align 1 %335, i8 32, i64 %336, i1 false), !dbg !15931
  %337 = load i64, i64* %_delta554, align 8, !dbg !15931
  %338 = load i8*, i8** %p, align 8, !dbg !15931
  %add.ptr565 = getelementptr inbounds i8, i8* %338, i64 %337, !dbg !15931, !ctir !144
  store i8* %add.ptr565, i8** %p, align 8, !dbg !15931
  br label %if.end566

if.end566:                                        ; preds = %if.else564, %if.then562
  br label %if.end567, !dbg !15930

if.end567:                                        ; preds = %if.end566, %land.lhs.true550, %if.then547
  %339 = load i8, i8* %sign_char, align 1, !dbg !15927
  %340 = load i8*, i8** %p, align 8, !dbg !15927
  store i8 %339, i8* %340, align 1, !dbg !15927, !ctir !144
  %341 = load i64, i64* %_n525, align 8, !dbg !15927
  %342 = load i8*, i8** %p, align 8, !dbg !15927
  %add.ptr568 = getelementptr inbounds i8, i8* %342, i64 %341, !dbg !15927, !ctir !144
  store i8* %add.ptr568, i8** %p, align 8, !dbg !15927
  br label %if.end569, !dbg !15927

if.end569:                                        ; preds = %if.end567, %if.end545
  %343 = load i64, i64* %_incr534, align 8, !dbg !15917
  %344 = load i64, i64* %i, align 8, !dbg !15917
  %add570 = add i64 %344, %343, !dbg !15917
  store i64 %add570, i64* %i, align 8, !dbg !15917
  br label %do.end572, !dbg !15917

do.end572:                                        ; preds = %if.end569
  br label %if.end573, !dbg !15917

if.end573:                                        ; preds = %do.end572, %cond.end520
  br label %if.end641, !dbg !15933

if.else574:                                       ; preds = %if.then498
  %345 = load i32, i32* %digits, align 4, !dbg !15934
  %conv575 = sext i32 %345 to i64, !dbg !15937
  %346 = load i64, i64* %maxsize.addr, align 8, !dbg !15938
  %347 = load i64, i64* %i, align 8, !dbg !15939
  %sub576 = sub i64 %346, %347, !dbg !15940
  %cmp577 = icmp uge i64 %conv575, %sub576, !dbg !15941
  br i1 %cmp577, label %if.then579, label %if.end580, !dbg !15942

if.then579:                                       ; preds = %if.else574
  store i64 0, i64* %retval, align 8, !dbg !15943
  br label %return, !dbg !15943

if.end580:                                        ; preds = %if.else574
  %348 = load i8, i8* %sign_char, align 1, !dbg !15944
  %tobool581 = icmp ne i8 %348, 0, !dbg !15944
  br i1 %tobool581, label %if.then582, label %if.end632, !dbg !15946

if.then582:                                       ; preds = %if.end580
  br label %do.body583, !dbg !15947

do.body583:                                       ; preds = %if.then582
  call void @llvm.dbg.declare(metadata i64* %_n584, metadata !15948, metadata !DIExpression()), !dbg !15950
  store i64 1, i64* %_n584, align 8, !dbg !15950
  call void @llvm.dbg.declare(metadata i64* %_w585, metadata !15951, metadata !DIExpression()), !dbg !15950
  %349 = load i32, i32* %width.addr, align 4, !dbg !15950
  %cmp586 = icmp slt i32 %349, 0, !dbg !15950
  br i1 %cmp586, label %cond.true588, label %cond.false589, !dbg !15950

cond.true588:                                     ; preds = %do.body583
  br label %cond.end590, !dbg !15950

cond.false589:                                    ; preds = %do.body583
  %350 = load i32, i32* %width.addr, align 4, !dbg !15950
  br label %cond.end590, !dbg !15950

cond.end590:                                      ; preds = %cond.false589, %cond.true588
  %cond591 = phi i32 [ 0, %cond.true588 ], [ %350, %cond.false589 ], !dbg !15950
  %conv592 = sext i32 %cond591 to i64, !dbg !15950
  store i64 %conv592, i64* %_w585, align 8, !dbg !15950
  call void @llvm.dbg.declare(metadata i64* %_incr593, metadata !15952, metadata !DIExpression()), !dbg !15950
  %351 = load i64, i64* %_n584, align 8, !dbg !15950
  %352 = load i64, i64* %_w585, align 8, !dbg !15950
  %cmp594 = icmp ult i64 %351, %352, !dbg !15950
  br i1 %cmp594, label %cond.true596, label %cond.false597, !dbg !15950

cond.true596:                                     ; preds = %cond.end590
  %353 = load i64, i64* %_w585, align 8, !dbg !15950
  br label %cond.end598, !dbg !15950

cond.false597:                                    ; preds = %cond.end590
  %354 = load i64, i64* %_n584, align 8, !dbg !15950
  br label %cond.end598, !dbg !15950

cond.end598:                                      ; preds = %cond.false597, %cond.true596
  %cond599 = phi i64 [ %353, %cond.true596 ], [ %354, %cond.false597 ], !dbg !15950
  store i64 %cond599, i64* %_incr593, align 8, !dbg !15950
  %355 = load i64, i64* %_incr593, align 8, !dbg !15953
  %356 = load i64, i64* %maxsize.addr, align 8, !dbg !15953
  %357 = load i64, i64* %i, align 8, !dbg !15953
  %sub600 = sub i64 %356, %357, !dbg !15953
  %cmp601 = icmp uge i64 %355, %sub600, !dbg !15953
  br i1 %cmp601, label %if.then603, label %if.end604, !dbg !15950

if.then603:                                       ; preds = %cond.end598
  store i64 0, i64* %retval, align 8, !dbg !15953
  br label %return, !dbg !15953

if.end604:                                        ; preds = %cond.end598
  %358 = load i8*, i8** %p, align 8, !dbg !15955
  %tobool605 = icmp ne i8* %358, null, !dbg !15955
  br i1 %tobool605, label %if.then606, label %if.end628, !dbg !15950

if.then606:                                       ; preds = %if.end604
  %359 = load i32, i32* %digits, align 4, !dbg !15957
  %cmp607 = icmp eq i32 %359, 0, !dbg !15957
  br i1 %cmp607, label %land.lhs.true609, label %if.end626, !dbg !15957

land.lhs.true609:                                 ; preds = %if.then606
  %360 = load i64, i64* %_n584, align 8, !dbg !15957
  %361 = load i64, i64* %_w585, align 8, !dbg !15957
  %cmp610 = icmp ult i64 %360, %361, !dbg !15957
  br i1 %cmp610, label %if.then612, label %if.end626, !dbg !15960

if.then612:                                       ; preds = %land.lhs.true609
  call void @llvm.dbg.declare(metadata i64* %_delta613, metadata !15961, metadata !DIExpression()), !dbg !15963
  %362 = load i32, i32* %width.addr, align 4, !dbg !15963
  %conv614 = sext i32 %362 to i64, !dbg !15963
  %363 = load i64, i64* %_n584, align 8, !dbg !15963
  %sub615 = sub i64 %conv614, %363, !dbg !15963
  store i64 %sub615, i64* %_delta613, align 8, !dbg !15963
  %364 = load i32, i32* %pad, align 4, !dbg !15964
  %cmp616 = icmp eq i32 %364, 48, !dbg !15964
  br i1 %cmp616, label %if.then621, label %lor.lhs.false618, !dbg !15964

lor.lhs.false618:                                 ; preds = %if.then612
  %365 = load i32, i32* %pad, align 4, !dbg !15964
  %cmp619 = icmp eq i32 %365, 43, !dbg !15964
  br i1 %cmp619, label %if.then621, label %if.else623, !dbg !15963

if.then621:                                       ; preds = %lor.lhs.false618, %if.then612
  %366 = load i8*, i8** %p, align 8, !dbg !15964
  %367 = load i64, i64* %_delta613, align 8, !dbg !15964
  call void @llvm.memset.p0i8.i64(i8* align 1 %366, i8 48, i64 %367, i1 false), !dbg !15964
  %368 = load i64, i64* %_delta613, align 8, !dbg !15964
  %369 = load i8*, i8** %p, align 8, !dbg !15964
  %add.ptr622 = getelementptr inbounds i8, i8* %369, i64 %368, !dbg !15964, !ctir !144
  store i8* %add.ptr622, i8** %p, align 8, !dbg !15964
  br label %if.end625, !dbg !15964

if.else623:                                       ; preds = %lor.lhs.false618
  %370 = load i8*, i8** %p, align 8, !dbg !15964
  %371 = load i64, i64* %_delta613, align 8, !dbg !15964
  call void @llvm.memset.p0i8.i64(i8* align 1 %370, i8 32, i64 %371, i1 false), !dbg !15964
  %372 = load i64, i64* %_delta613, align 8, !dbg !15964
  %373 = load i8*, i8** %p, align 8, !dbg !15964
  %add.ptr624 = getelementptr inbounds i8, i8* %373, i64 %372, !dbg !15964, !ctir !144
  store i8* %add.ptr624, i8** %p, align 8, !dbg !15964
  br label %if.end625

if.end625:                                        ; preds = %if.else623, %if.then621
  br label %if.end626, !dbg !15963

if.end626:                                        ; preds = %if.end625, %land.lhs.true609, %if.then606
  %374 = load i8, i8* %sign_char, align 1, !dbg !15960
  %375 = load i8*, i8** %p, align 8, !dbg !15960
  store i8 %374, i8* %375, align 1, !dbg !15960, !ctir !144
  %376 = load i64, i64* %_n584, align 8, !dbg !15960
  %377 = load i8*, i8** %p, align 8, !dbg !15960
  %add.ptr627 = getelementptr inbounds i8, i8* %377, i64 %376, !dbg !15960, !ctir !144
  store i8* %add.ptr627, i8** %p, align 8, !dbg !15960
  br label %if.end628, !dbg !15960

if.end628:                                        ; preds = %if.end626, %if.end604
  %378 = load i64, i64* %_incr593, align 8, !dbg !15950
  %379 = load i64, i64* %i, align 8, !dbg !15950
  %add629 = add i64 %379, %378, !dbg !15950
  store i64 %add629, i64* %i, align 8, !dbg !15950
  br label %do.end631, !dbg !15950

do.end631:                                        ; preds = %if.end628
  br label %if.end632, !dbg !15950

if.end632:                                        ; preds = %do.end631, %if.end580
  %380 = load i8*, i8** %p, align 8, !dbg !15966
  %tobool633 = icmp ne i8* %380, null, !dbg !15966
  br i1 %tobool633, label %if.then634, label %if.end638, !dbg !15968

if.then634:                                       ; preds = %if.end632
  %381 = load i8*, i8** %p, align 8, !dbg !15969
  %382 = load i32, i32* %padding, align 4, !dbg !15969
  %conv635 = sext i32 %382 to i64, !dbg !15969
  call void @llvm.memset.p0i8.i64(i8* align 1 %381, i8 48, i64 %conv635, i1 false), !dbg !15969
  %383 = load i32, i32* %padding, align 4, !dbg !15969
  %384 = load i8*, i8** %p, align 8, !dbg !15969
  %idx.ext636 = sext i32 %383 to i64, !dbg !15969
  %add.ptr637 = getelementptr inbounds i8, i8* %384, i64 %idx.ext636, !dbg !15969, !ctir !144
  store i8* %add.ptr637, i8** %p, align 8, !dbg !15969
  br label %if.end638, !dbg !15969

if.end638:                                        ; preds = %if.then634, %if.end632
  %385 = load i32, i32* %padding, align 4, !dbg !15970
  %conv639 = sext i32 %385 to i64, !dbg !15970
  %386 = load i64, i64* %i, align 8, !dbg !15971
  %add640 = add i64 %386, %conv639, !dbg !15971
  store i64 %add640, i64* %i, align 8, !dbg !15971
  store i32 0, i32* %width.addr, align 4, !dbg !15972
  br label %if.end641

if.end641:                                        ; preds = %if.end638, %if.end573
  br label %if.end695, !dbg !15973

if.else642:                                       ; preds = %if.else486
  %387 = load i8, i8* %sign_char, align 1, !dbg !15974
  %tobool643 = icmp ne i8 %387, 0, !dbg !15974
  br i1 %tobool643, label %if.then644, label %if.end694, !dbg !15977

if.then644:                                       ; preds = %if.else642
  br label %do.body645, !dbg !15978

do.body645:                                       ; preds = %if.then644
  call void @llvm.dbg.declare(metadata i64* %_n646, metadata !15979, metadata !DIExpression()), !dbg !15981
  store i64 1, i64* %_n646, align 8, !dbg !15981
  call void @llvm.dbg.declare(metadata i64* %_w647, metadata !15982, metadata !DIExpression()), !dbg !15981
  %388 = load i32, i32* %width.addr, align 4, !dbg !15981
  %cmp648 = icmp slt i32 %388, 0, !dbg !15981
  br i1 %cmp648, label %cond.true650, label %cond.false651, !dbg !15981

cond.true650:                                     ; preds = %do.body645
  br label %cond.end652, !dbg !15981

cond.false651:                                    ; preds = %do.body645
  %389 = load i32, i32* %width.addr, align 4, !dbg !15981
  br label %cond.end652, !dbg !15981

cond.end652:                                      ; preds = %cond.false651, %cond.true650
  %cond653 = phi i32 [ 0, %cond.true650 ], [ %389, %cond.false651 ], !dbg !15981
  %conv654 = sext i32 %cond653 to i64, !dbg !15981
  store i64 %conv654, i64* %_w647, align 8, !dbg !15981
  call void @llvm.dbg.declare(metadata i64* %_incr655, metadata !15983, metadata !DIExpression()), !dbg !15981
  %390 = load i64, i64* %_n646, align 8, !dbg !15981
  %391 = load i64, i64* %_w647, align 8, !dbg !15981
  %cmp656 = icmp ult i64 %390, %391, !dbg !15981
  br i1 %cmp656, label %cond.true658, label %cond.false659, !dbg !15981

cond.true658:                                     ; preds = %cond.end652
  %392 = load i64, i64* %_w647, align 8, !dbg !15981
  br label %cond.end660, !dbg !15981

cond.false659:                                    ; preds = %cond.end652
  %393 = load i64, i64* %_n646, align 8, !dbg !15981
  br label %cond.end660, !dbg !15981

cond.end660:                                      ; preds = %cond.false659, %cond.true658
  %cond661 = phi i64 [ %392, %cond.true658 ], [ %393, %cond.false659 ], !dbg !15981
  store i64 %cond661, i64* %_incr655, align 8, !dbg !15981
  %394 = load i64, i64* %_incr655, align 8, !dbg !15984
  %395 = load i64, i64* %maxsize.addr, align 8, !dbg !15984
  %396 = load i64, i64* %i, align 8, !dbg !15984
  %sub662 = sub i64 %395, %396, !dbg !15984
  %cmp663 = icmp uge i64 %394, %sub662, !dbg !15984
  br i1 %cmp663, label %if.then665, label %if.end666, !dbg !15981

if.then665:                                       ; preds = %cond.end660
  store i64 0, i64* %retval, align 8, !dbg !15984
  br label %return, !dbg !15984

if.end666:                                        ; preds = %cond.end660
  %397 = load i8*, i8** %p, align 8, !dbg !15986
  %tobool667 = icmp ne i8* %397, null, !dbg !15986
  br i1 %tobool667, label %if.then668, label %if.end690, !dbg !15981

if.then668:                                       ; preds = %if.end666
  %398 = load i32, i32* %digits, align 4, !dbg !15988
  %cmp669 = icmp eq i32 %398, 0, !dbg !15988
  br i1 %cmp669, label %land.lhs.true671, label %if.end688, !dbg !15988

land.lhs.true671:                                 ; preds = %if.then668
  %399 = load i64, i64* %_n646, align 8, !dbg !15988
  %400 = load i64, i64* %_w647, align 8, !dbg !15988
  %cmp672 = icmp ult i64 %399, %400, !dbg !15988
  br i1 %cmp672, label %if.then674, label %if.end688, !dbg !15991

if.then674:                                       ; preds = %land.lhs.true671
  call void @llvm.dbg.declare(metadata i64* %_delta675, metadata !15992, metadata !DIExpression()), !dbg !15994
  %401 = load i32, i32* %width.addr, align 4, !dbg !15994
  %conv676 = sext i32 %401 to i64, !dbg !15994
  %402 = load i64, i64* %_n646, align 8, !dbg !15994
  %sub677 = sub i64 %conv676, %402, !dbg !15994
  store i64 %sub677, i64* %_delta675, align 8, !dbg !15994
  %403 = load i32, i32* %pad, align 4, !dbg !15995
  %cmp678 = icmp eq i32 %403, 48, !dbg !15995
  br i1 %cmp678, label %if.then683, label %lor.lhs.false680, !dbg !15995

lor.lhs.false680:                                 ; preds = %if.then674
  %404 = load i32, i32* %pad, align 4, !dbg !15995
  %cmp681 = icmp eq i32 %404, 43, !dbg !15995
  br i1 %cmp681, label %if.then683, label %if.else685, !dbg !15994

if.then683:                                       ; preds = %lor.lhs.false680, %if.then674
  %405 = load i8*, i8** %p, align 8, !dbg !15995
  %406 = load i64, i64* %_delta675, align 8, !dbg !15995
  call void @llvm.memset.p0i8.i64(i8* align 1 %405, i8 48, i64 %406, i1 false), !dbg !15995
  %407 = load i64, i64* %_delta675, align 8, !dbg !15995
  %408 = load i8*, i8** %p, align 8, !dbg !15995
  %add.ptr684 = getelementptr inbounds i8, i8* %408, i64 %407, !dbg !15995, !ctir !144
  store i8* %add.ptr684, i8** %p, align 8, !dbg !15995
  br label %if.end687, !dbg !15995

if.else685:                                       ; preds = %lor.lhs.false680
  %409 = load i8*, i8** %p, align 8, !dbg !15995
  %410 = load i64, i64* %_delta675, align 8, !dbg !15995
  call void @llvm.memset.p0i8.i64(i8* align 1 %409, i8 32, i64 %410, i1 false), !dbg !15995
  %411 = load i64, i64* %_delta675, align 8, !dbg !15995
  %412 = load i8*, i8** %p, align 8, !dbg !15995
  %add.ptr686 = getelementptr inbounds i8, i8* %412, i64 %411, !dbg !15995, !ctir !144
  store i8* %add.ptr686, i8** %p, align 8, !dbg !15995
  br label %if.end687

if.end687:                                        ; preds = %if.else685, %if.then683
  br label %if.end688, !dbg !15994

if.end688:                                        ; preds = %if.end687, %land.lhs.true671, %if.then668
  %413 = load i8, i8* %sign_char, align 1, !dbg !15991
  %414 = load i8*, i8** %p, align 8, !dbg !15991
  store i8 %413, i8* %414, align 1, !dbg !15991, !ctir !144
  %415 = load i64, i64* %_n646, align 8, !dbg !15991
  %416 = load i8*, i8** %p, align 8, !dbg !15991
  %add.ptr689 = getelementptr inbounds i8, i8* %416, i64 %415, !dbg !15991, !ctir !144
  store i8* %add.ptr689, i8** %p, align 8, !dbg !15991
  br label %if.end690, !dbg !15991

if.end690:                                        ; preds = %if.end688, %if.end666
  %417 = load i64, i64* %_incr655, align 8, !dbg !15981
  %418 = load i64, i64* %i, align 8, !dbg !15981
  %add691 = add i64 %418, %417, !dbg !15981
  store i64 %add691, i64* %i, align 8, !dbg !15981
  br label %do.end693, !dbg !15981

do.end693:                                        ; preds = %if.end690
  br label %if.end694, !dbg !15981

if.end694:                                        ; preds = %do.end693, %if.else642
  br label %if.end695

if.end695:                                        ; preds = %if.end694, %if.end641
  br label %if.end696

if.end696:                                        ; preds = %if.end695, %if.end485
  br label %do.body697, !dbg !15997

do.body697:                                       ; preds = %if.end696
  call void @llvm.dbg.declare(metadata i64* %_n698, metadata !15998, metadata !DIExpression()), !dbg !16000
  %arraydecay699 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16000, !ctir !829
  %add.ptr700 = getelementptr inbounds i8, i8* %arraydecay699, i64 23, !dbg !16000, !ctir !144
  %419 = load i8*, i8** %bufp, align 8, !dbg !16000
  %sub.ptr.lhs.cast701 = ptrtoint i8* %add.ptr700 to i64, !dbg !16000
  %sub.ptr.rhs.cast702 = ptrtoint i8* %419 to i64, !dbg !16000
  %sub.ptr.sub703 = sub i64 %sub.ptr.lhs.cast701, %sub.ptr.rhs.cast702, !dbg !16000
  store i64 %sub.ptr.sub703, i64* %_n698, align 8, !dbg !16000
  call void @llvm.dbg.declare(metadata i64* %_w704, metadata !16001, metadata !DIExpression()), !dbg !16000
  %420 = load i32, i32* %width.addr, align 4, !dbg !16000
  %cmp705 = icmp slt i32 %420, 0, !dbg !16000
  br i1 %cmp705, label %cond.true707, label %cond.false708, !dbg !16000

cond.true707:                                     ; preds = %do.body697
  br label %cond.end709, !dbg !16000

cond.false708:                                    ; preds = %do.body697
  %421 = load i32, i32* %width.addr, align 4, !dbg !16000
  br label %cond.end709, !dbg !16000

cond.end709:                                      ; preds = %cond.false708, %cond.true707
  %cond710 = phi i32 [ 0, %cond.true707 ], [ %421, %cond.false708 ], !dbg !16000
  %conv711 = sext i32 %cond710 to i64, !dbg !16000
  store i64 %conv711, i64* %_w704, align 8, !dbg !16000
  call void @llvm.dbg.declare(metadata i64* %_incr712, metadata !16002, metadata !DIExpression()), !dbg !16000
  %422 = load i64, i64* %_n698, align 8, !dbg !16000
  %423 = load i64, i64* %_w704, align 8, !dbg !16000
  %cmp713 = icmp ult i64 %422, %423, !dbg !16000
  br i1 %cmp713, label %cond.true715, label %cond.false716, !dbg !16000

cond.true715:                                     ; preds = %cond.end709
  %424 = load i64, i64* %_w704, align 8, !dbg !16000
  br label %cond.end717, !dbg !16000

cond.false716:                                    ; preds = %cond.end709
  %425 = load i64, i64* %_n698, align 8, !dbg !16000
  br label %cond.end717, !dbg !16000

cond.end717:                                      ; preds = %cond.false716, %cond.true715
  %cond718 = phi i64 [ %424, %cond.true715 ], [ %425, %cond.false716 ], !dbg !16000
  store i64 %cond718, i64* %_incr712, align 8, !dbg !16000
  %426 = load i64, i64* %_incr712, align 8, !dbg !16003
  %427 = load i64, i64* %maxsize.addr, align 8, !dbg !16003
  %428 = load i64, i64* %i, align 8, !dbg !16003
  %sub719 = sub i64 %427, %428, !dbg !16003
  %cmp720 = icmp uge i64 %426, %sub719, !dbg !16003
  br i1 %cmp720, label %if.then722, label %if.end723, !dbg !16000

if.then722:                                       ; preds = %cond.end717
  store i64 0, i64* %retval, align 8, !dbg !16003
  br label %return, !dbg !16003

if.end723:                                        ; preds = %cond.end717
  %429 = load i8*, i8** %p, align 8, !dbg !16005
  %tobool724 = icmp ne i8* %429, null, !dbg !16005
  br i1 %tobool724, label %if.then725, label %if.end757, !dbg !16000

if.then725:                                       ; preds = %if.end723
  %430 = load i32, i32* %digits, align 4, !dbg !16007
  %cmp726 = icmp eq i32 %430, 0, !dbg !16007
  br i1 %cmp726, label %land.lhs.true728, label %if.end745, !dbg !16007

land.lhs.true728:                                 ; preds = %if.then725
  %431 = load i64, i64* %_n698, align 8, !dbg !16007
  %432 = load i64, i64* %_w704, align 8, !dbg !16007
  %cmp729 = icmp ult i64 %431, %432, !dbg !16007
  br i1 %cmp729, label %if.then731, label %if.end745, !dbg !16010

if.then731:                                       ; preds = %land.lhs.true728
  call void @llvm.dbg.declare(metadata i64* %_delta732, metadata !16011, metadata !DIExpression()), !dbg !16013
  %433 = load i32, i32* %width.addr, align 4, !dbg !16013
  %conv733 = sext i32 %433 to i64, !dbg !16013
  %434 = load i64, i64* %_n698, align 8, !dbg !16013
  %sub734 = sub i64 %conv733, %434, !dbg !16013
  store i64 %sub734, i64* %_delta732, align 8, !dbg !16013
  %435 = load i32, i32* %pad, align 4, !dbg !16014
  %cmp735 = icmp eq i32 %435, 48, !dbg !16014
  br i1 %cmp735, label %if.then740, label %lor.lhs.false737, !dbg !16014

lor.lhs.false737:                                 ; preds = %if.then731
  %436 = load i32, i32* %pad, align 4, !dbg !16014
  %cmp738 = icmp eq i32 %436, 43, !dbg !16014
  br i1 %cmp738, label %if.then740, label %if.else742, !dbg !16013

if.then740:                                       ; preds = %lor.lhs.false737, %if.then731
  %437 = load i8*, i8** %p, align 8, !dbg !16014
  %438 = load i64, i64* %_delta732, align 8, !dbg !16014
  call void @llvm.memset.p0i8.i64(i8* align 1 %437, i8 48, i64 %438, i1 false), !dbg !16014
  %439 = load i64, i64* %_delta732, align 8, !dbg !16014
  %440 = load i8*, i8** %p, align 8, !dbg !16014
  %add.ptr741 = getelementptr inbounds i8, i8* %440, i64 %439, !dbg !16014, !ctir !144
  store i8* %add.ptr741, i8** %p, align 8, !dbg !16014
  br label %if.end744, !dbg !16014

if.else742:                                       ; preds = %lor.lhs.false737
  %441 = load i8*, i8** %p, align 8, !dbg !16014
  %442 = load i64, i64* %_delta732, align 8, !dbg !16014
  call void @llvm.memset.p0i8.i64(i8* align 1 %441, i8 32, i64 %442, i1 false), !dbg !16014
  %443 = load i64, i64* %_delta732, align 8, !dbg !16014
  %444 = load i8*, i8** %p, align 8, !dbg !16014
  %add.ptr743 = getelementptr inbounds i8, i8* %444, i64 %443, !dbg !16014, !ctir !144
  store i8* %add.ptr743, i8** %p, align 8, !dbg !16014
  br label %if.end744

if.end744:                                        ; preds = %if.else742, %if.then740
  br label %if.end745, !dbg !16013

if.end745:                                        ; preds = %if.end744, %land.lhs.true728, %if.then725
  %445 = load i8, i8* %to_lowcase, align 1, !dbg !16016
  %tobool746 = trunc i8 %445 to i1, !dbg !16016
  br i1 %tobool746, label %if.then747, label %if.else749, !dbg !16010

if.then747:                                       ; preds = %if.end745
  %446 = load i8*, i8** %p, align 8, !dbg !16016
  %447 = load i8*, i8** %bufp, align 8, !dbg !16016
  %448 = load i64, i64* %_n698, align 8, !dbg !16016
  %call748 = call i8* @memcpy_lowcase(i8* %446, i8* %447, i64 %448), !dbg !16016
  br label %if.end755, !dbg !16016

if.else749:                                       ; preds = %if.end745
  %449 = load i8, i8* %to_uppcase, align 1, !dbg !16018
  %tobool750 = trunc i8 %449 to i1, !dbg !16018
  br i1 %tobool750, label %if.then751, label %if.else753, !dbg !16016

if.then751:                                       ; preds = %if.else749
  %450 = load i8*, i8** %p, align 8, !dbg !16018
  %451 = load i8*, i8** %bufp, align 8, !dbg !16018
  %452 = load i64, i64* %_n698, align 8, !dbg !16018
  %call752 = call i8* @memcpy_uppcase(i8* %450, i8* %451, i64 %452), !dbg !16018
  br label %if.end754, !dbg !16018

if.else753:                                       ; preds = %if.else749
  %453 = load i8*, i8** %p, align 8, !dbg !16018
  %454 = load i8*, i8** %bufp, align 8, !dbg !16018
  %455 = load i64, i64* %_n698, align 8, !dbg !16018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %453, i8* align 1 %454, i64 %455, i1 false), !dbg !16018
  br label %if.end754

if.end754:                                        ; preds = %if.else753, %if.then751
  br label %if.end755

if.end755:                                        ; preds = %if.end754, %if.then747
  %456 = load i64, i64* %_n698, align 8, !dbg !16010
  %457 = load i8*, i8** %p, align 8, !dbg !16010
  %add.ptr756 = getelementptr inbounds i8, i8* %457, i64 %456, !dbg !16010, !ctir !144
  store i8* %add.ptr756, i8** %p, align 8, !dbg !16010
  br label %if.end757, !dbg !16010

if.end757:                                        ; preds = %if.end755, %if.end723
  %458 = load i64, i64* %_incr712, align 8, !dbg !16000
  %459 = load i64, i64* %i, align 8, !dbg !16000
  %add758 = add i64 %459, %458, !dbg !16000
  store i64 %add758, i64* %i, align 8, !dbg !16000
  br label %do.end760, !dbg !16000

do.end760:                                        ; preds = %if.end757
  br label %sw.epilog1435, !dbg !16020

sw.bb761:                                         ; preds = %sw.epilog87
  %460 = load i32, i32* %modifier, align 4, !dbg !16021
  %cmp762 = icmp ne i32 %460, 0, !dbg !16023
  br i1 %cmp762, label %if.then764, label %if.end765, !dbg !16024

if.then764:                                       ; preds = %sw.bb761
  br label %bad_format, !dbg !16025

if.end765:                                        ; preds = %sw.bb761
  %461 = load i32, i32* %pad, align 4, !dbg !16026
  %cmp766 = icmp eq i32 %461, 0, !dbg !16028
  br i1 %cmp766, label %land.lhs.true768, label %if.else772, !dbg !16029

land.lhs.true768:                                 ; preds = %if.end765
  %462 = load i32, i32* %width.addr, align 4, !dbg !16030
  %cmp769 = icmp slt i32 %462, 0, !dbg !16031
  br i1 %cmp769, label %if.then771, label %if.else772, !dbg !16032

if.then771:                                       ; preds = %land.lhs.true768
  store i32 43, i32* %pad, align 4, !dbg !16033
  store i32 4, i32* %subwidth, align 4, !dbg !16035
  br label %if.end778, !dbg !16036

if.else772:                                       ; preds = %land.lhs.true768, %if.end765
  %463 = load i32, i32* %width.addr, align 4, !dbg !16037
  %sub773 = sub nsw i32 %463, 6, !dbg !16039
  store i32 %sub773, i32* %subwidth, align 4, !dbg !16040
  %464 = load i32, i32* %subwidth, align 4, !dbg !16041
  %cmp774 = icmp slt i32 %464, 0, !dbg !16043
  br i1 %cmp774, label %if.then776, label %if.end777, !dbg !16044

if.then776:                                       ; preds = %if.else772
  store i32 0, i32* %subwidth, align 4, !dbg !16045
  br label %if.end777, !dbg !16046

if.end777:                                        ; preds = %if.then776, %if.else772
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.then771
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.361, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16047
  br label %subformat_width, !dbg !16048

sw.bb779:                                         ; preds = %sw.epilog87
  %465 = load i32, i32* %modifier, align 4, !dbg !16049
  %cmp780 = icmp eq i32 %465, 69, !dbg !16051
  br i1 %cmp780, label %if.then782, label %if.end783, !dbg !16052

if.then782:                                       ; preds = %sw.bb779
  br label %bad_format, !dbg !16053

if.end783:                                        ; preds = %sw.bb779
  br label %do.body784, !dbg !16054

do.body784:                                       ; preds = %if.end783
  store i32 2, i32* %digits, align 4, !dbg !16055
  %466 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16055
  %tm_hour785 = getelementptr inbounds %struct.tm, %struct.tm* %466, i32 0, i32 2, !dbg !16055, !ctir !15254
  %467 = load i32, i32* %tm_hour785, align 8, !dbg !16055, !ctir !27
  store i32 %467, i32* %number_value, align 4, !dbg !16055
  br label %do_number, !dbg !16055

do.end787:                                        ; No predecessors!
  br label %sw.bb788, !dbg !16055

sw.bb788:                                         ; preds = %sw.epilog87, %do.end787
  %468 = load i32, i32* %modifier, align 4, !dbg !16057
  %cmp789 = icmp eq i32 %468, 69, !dbg !16059
  br i1 %cmp789, label %if.then791, label %if.end792, !dbg !16060

if.then791:                                       ; preds = %sw.bb788
  br label %bad_format, !dbg !16061

if.end792:                                        ; preds = %sw.bb788
  br label %do.body793, !dbg !16062

do.body793:                                       ; preds = %if.end792
  store i32 2, i32* %digits, align 4, !dbg !16063
  %469 = load i32, i32* %hour12, align 4, !dbg !16063
  store i32 %469, i32* %number_value, align 4, !dbg !16063
  br label %do_number, !dbg !16063

do.end795:                                        ; No predecessors!
  br label %sw.bb796, !dbg !16063

sw.bb796:                                         ; preds = %sw.epilog87, %do.end795
  %470 = load i32, i32* %modifier, align 4, !dbg !16065
  %cmp797 = icmp eq i32 %470, 69, !dbg !16067
  br i1 %cmp797, label %if.then799, label %if.end800, !dbg !16068

if.then799:                                       ; preds = %sw.bb796
  br label %bad_format, !dbg !16069

if.end800:                                        ; preds = %sw.bb796
  br label %do.body801, !dbg !16070

do.body801:                                       ; preds = %if.end800
  store i32 2, i32* %digits, align 4, !dbg !16071
  %471 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16071
  %tm_hour802 = getelementptr inbounds %struct.tm, %struct.tm* %471, i32 0, i32 2, !dbg !16071, !ctir !15254
  %472 = load i32, i32* %tm_hour802, align 8, !dbg !16071, !ctir !27
  store i32 %472, i32* %number_value, align 4, !dbg !16071
  br label %do_number_spacepad, !dbg !16071

do.end804:                                        ; No predecessors!
  br label %sw.bb805, !dbg !16071

sw.bb805:                                         ; preds = %sw.epilog87, %do.end804
  %473 = load i32, i32* %modifier, align 4, !dbg !16073
  %cmp806 = icmp eq i32 %473, 69, !dbg !16075
  br i1 %cmp806, label %if.then808, label %if.end809, !dbg !16076

if.then808:                                       ; preds = %sw.bb805
  br label %bad_format, !dbg !16077

if.end809:                                        ; preds = %sw.bb805
  br label %do.body810, !dbg !16078

do.body810:                                       ; preds = %if.end809
  store i32 2, i32* %digits, align 4, !dbg !16079
  %474 = load i32, i32* %hour12, align 4, !dbg !16079
  store i32 %474, i32* %number_value, align 4, !dbg !16079
  br label %do_number_spacepad, !dbg !16079

do.end812:                                        ; No predecessors!
  br label %sw.bb813, !dbg !16079

sw.bb813:                                         ; preds = %sw.epilog87, %do.end812
  %475 = load i32, i32* %modifier, align 4, !dbg !16081
  %cmp814 = icmp eq i32 %475, 69, !dbg !16083
  br i1 %cmp814, label %if.then816, label %if.end817, !dbg !16084

if.then816:                                       ; preds = %sw.bb813
  br label %bad_format, !dbg !16085

if.end817:                                        ; preds = %sw.bb813
  br label %do.body818, !dbg !16086

do.body818:                                       ; preds = %if.end817
  store i32 3, i32* %digits, align 4, !dbg !16087
  %476 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16087
  %tm_yday = getelementptr inbounds %struct.tm, %struct.tm* %476, i32 0, i32 7, !dbg !16087, !ctir !15254
  %477 = load i32, i32* %tm_yday, align 4, !dbg !16087, !ctir !27
  %cmp819 = icmp slt i32 %477, -1, !dbg !16087
  %frombool821 = zext i1 %cmp819 to i8, !dbg !16087
  store i8 %frombool821, i8* %negative_number, align 1, !dbg !16087
  %478 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16087
  %tm_yday822 = getelementptr inbounds %struct.tm, %struct.tm* %478, i32 0, i32 7, !dbg !16087, !ctir !15254
  %479 = load i32, i32* %tm_yday822, align 4, !dbg !16087, !ctir !27
  %add823 = add i32 %479, 1, !dbg !16087
  store i32 %add823, i32* %u_number_value, align 4, !dbg !16087
  br label %do_signed_number, !dbg !16087

do.end825:                                        ; No predecessors!
  br label %sw.bb826, !dbg !16087

sw.bb826:                                         ; preds = %sw.epilog87, %do.end825
  %480 = load i32, i32* %modifier, align 4, !dbg !16089
  %cmp827 = icmp eq i32 %480, 69, !dbg !16091
  br i1 %cmp827, label %if.then829, label %if.end830, !dbg !16092

if.then829:                                       ; preds = %sw.bb826
  br label %bad_format, !dbg !16093

if.end830:                                        ; preds = %sw.bb826
  br label %do.body831, !dbg !16094

do.body831:                                       ; preds = %if.end830
  store i32 2, i32* %digits, align 4, !dbg !16095
  %481 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16095
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %481, i32 0, i32 1, !dbg !16095, !ctir !15254
  %482 = load i32, i32* %tm_min, align 4, !dbg !16095, !ctir !27
  store i32 %482, i32* %number_value, align 4, !dbg !16095
  br label %do_number, !dbg !16095

do.end833:                                        ; No predecessors!
  br label %sw.bb834, !dbg !16095

sw.bb834:                                         ; preds = %sw.epilog87, %do.end833
  %483 = load i32, i32* %modifier, align 4, !dbg !16097
  %cmp835 = icmp eq i32 %483, 69, !dbg !16099
  br i1 %cmp835, label %if.then837, label %if.end838, !dbg !16100

if.then837:                                       ; preds = %sw.bb834
  br label %bad_format, !dbg !16101

if.end838:                                        ; preds = %sw.bb834
  br label %do.body839, !dbg !16102

do.body839:                                       ; preds = %if.end838
  store i32 2, i32* %digits, align 4, !dbg !16103
  %484 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16103
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %484, i32 0, i32 4, !dbg !16103, !ctir !15254
  %485 = load i32, i32* %tm_mon, align 8, !dbg !16103, !ctir !27
  %cmp840 = icmp slt i32 %485, -1, !dbg !16103
  %frombool842 = zext i1 %cmp840 to i8, !dbg !16103
  store i8 %frombool842, i8* %negative_number, align 1, !dbg !16103
  %486 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16103
  %tm_mon843 = getelementptr inbounds %struct.tm, %struct.tm* %486, i32 0, i32 4, !dbg !16103, !ctir !15254
  %487 = load i32, i32* %tm_mon843, align 8, !dbg !16103, !ctir !27
  %add844 = add i32 %487, 1, !dbg !16103
  store i32 %add844, i32* %u_number_value, align 4, !dbg !16103
  br label %do_signed_number, !dbg !16103

do.end846:                                        ; No predecessors!
  br label %sw.bb847, !dbg !16103

sw.bb847:                                         ; preds = %sw.epilog87, %do.end846
  %488 = load i32, i32* %modifier, align 4, !dbg !16105
  %cmp848 = icmp eq i32 %488, 69, !dbg !16107
  br i1 %cmp848, label %if.then850, label %if.end851, !dbg !16108

if.then850:                                       ; preds = %sw.bb847
  br label %bad_format, !dbg !16109

if.end851:                                        ; preds = %sw.bb847
  %489 = load i32, i32* %ns.addr, align 4, !dbg !16110
  store i32 %489, i32* %number_value, align 4, !dbg !16111
  %490 = load i32, i32* %width.addr, align 4, !dbg !16112
  %cmp852 = icmp eq i32 %490, -1, !dbg !16114
  br i1 %cmp852, label %if.then854, label %if.else855, !dbg !16115

if.then854:                                       ; preds = %if.end851
  store i32 9, i32* %width.addr, align 4, !dbg !16116
  br label %if.end861, !dbg !16117

if.else855:                                       ; preds = %if.end851
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16118, metadata !DIExpression()), !dbg !16120
  %491 = load i32, i32* %width.addr, align 4, !dbg !16121
  store i32 %491, i32* %j, align 4, !dbg !16123
  br label %for.cond856, !dbg !16124

for.cond856:                                      ; preds = %for.inc, %if.else855
  %492 = load i32, i32* %j, align 4, !dbg !16125
  %cmp857 = icmp slt i32 %492, 9, !dbg !16127
  br i1 %cmp857, label %for.body859, label %for.end, !dbg !16128

for.body859:                                      ; preds = %for.cond856
  %493 = load i32, i32* %number_value, align 4, !dbg !16129
  %div860 = sdiv i32 %493, 10, !dbg !16129
  store i32 %div860, i32* %number_value, align 4, !dbg !16129
  br label %for.inc, !dbg !16130

for.inc:                                          ; preds = %for.body859
  %494 = load i32, i32* %j, align 4, !dbg !16131
  %inc = add nsw i32 %494, 1, !dbg !16131
  store i32 %inc, i32* %j, align 4, !dbg !16131
  br label %for.cond856, !dbg !16132, !llvm.loop !16133

for.end:                                          ; preds = %for.cond856
  br label %if.end861

if.end861:                                        ; preds = %for.end, %if.then854
  br label %do.body862, !dbg !16135

do.body862:                                       ; preds = %if.end861
  %495 = load i32, i32* %width.addr, align 4, !dbg !16136
  store i32 %495, i32* %digits, align 4, !dbg !16136
  %496 = load i32, i32* %number_value, align 4, !dbg !16136
  store i32 %496, i32* %number_value, align 4, !dbg !16136
  br label %do_number, !dbg !16136

do.end864:                                        ; No predecessors!
  br label %sw.bb865, !dbg !16136

sw.bb865:                                         ; preds = %sw.epilog87, %do.end864
  br label %do.body866, !dbg !16138

do.body866:                                       ; preds = %sw.bb865
  call void @llvm.dbg.declare(metadata i64* %_n867, metadata !16139, metadata !DIExpression()), !dbg !16141
  store i64 1, i64* %_n867, align 8, !dbg !16141
  call void @llvm.dbg.declare(metadata i64* %_w868, metadata !16142, metadata !DIExpression()), !dbg !16141
  %497 = load i32, i32* %width.addr, align 4, !dbg !16141
  %cmp869 = icmp slt i32 %497, 0, !dbg !16141
  br i1 %cmp869, label %cond.true871, label %cond.false872, !dbg !16141

cond.true871:                                     ; preds = %do.body866
  br label %cond.end873, !dbg !16141

cond.false872:                                    ; preds = %do.body866
  %498 = load i32, i32* %width.addr, align 4, !dbg !16141
  br label %cond.end873, !dbg !16141

cond.end873:                                      ; preds = %cond.false872, %cond.true871
  %cond874 = phi i32 [ 0, %cond.true871 ], [ %498, %cond.false872 ], !dbg !16141
  %conv875 = sext i32 %cond874 to i64, !dbg !16141
  store i64 %conv875, i64* %_w868, align 8, !dbg !16141
  call void @llvm.dbg.declare(metadata i64* %_incr876, metadata !16143, metadata !DIExpression()), !dbg !16141
  %499 = load i64, i64* %_n867, align 8, !dbg !16141
  %500 = load i64, i64* %_w868, align 8, !dbg !16141
  %cmp877 = icmp ult i64 %499, %500, !dbg !16141
  br i1 %cmp877, label %cond.true879, label %cond.false880, !dbg !16141

cond.true879:                                     ; preds = %cond.end873
  %501 = load i64, i64* %_w868, align 8, !dbg !16141
  br label %cond.end881, !dbg !16141

cond.false880:                                    ; preds = %cond.end873
  %502 = load i64, i64* %_n867, align 8, !dbg !16141
  br label %cond.end881, !dbg !16141

cond.end881:                                      ; preds = %cond.false880, %cond.true879
  %cond882 = phi i64 [ %501, %cond.true879 ], [ %502, %cond.false880 ], !dbg !16141
  store i64 %cond882, i64* %_incr876, align 8, !dbg !16141
  %503 = load i64, i64* %_incr876, align 8, !dbg !16144
  %504 = load i64, i64* %maxsize.addr, align 8, !dbg !16144
  %505 = load i64, i64* %i, align 8, !dbg !16144
  %sub883 = sub i64 %504, %505, !dbg !16144
  %cmp884 = icmp uge i64 %503, %sub883, !dbg !16144
  br i1 %cmp884, label %if.then886, label %if.end887, !dbg !16141

if.then886:                                       ; preds = %cond.end881
  store i64 0, i64* %retval, align 8, !dbg !16144
  br label %return, !dbg !16144

if.end887:                                        ; preds = %cond.end881
  %506 = load i8*, i8** %p, align 8, !dbg !16146
  %tobool888 = icmp ne i8* %506, null, !dbg !16146
  br i1 %tobool888, label %if.then889, label %if.end911, !dbg !16141

if.then889:                                       ; preds = %if.end887
  %507 = load i32, i32* %digits, align 4, !dbg !16148
  %cmp890 = icmp eq i32 %507, 0, !dbg !16148
  br i1 %cmp890, label %land.lhs.true892, label %if.end909, !dbg !16148

land.lhs.true892:                                 ; preds = %if.then889
  %508 = load i64, i64* %_n867, align 8, !dbg !16148
  %509 = load i64, i64* %_w868, align 8, !dbg !16148
  %cmp893 = icmp ult i64 %508, %509, !dbg !16148
  br i1 %cmp893, label %if.then895, label %if.end909, !dbg !16151

if.then895:                                       ; preds = %land.lhs.true892
  call void @llvm.dbg.declare(metadata i64* %_delta896, metadata !16152, metadata !DIExpression()), !dbg !16154
  %510 = load i32, i32* %width.addr, align 4, !dbg !16154
  %conv897 = sext i32 %510 to i64, !dbg !16154
  %511 = load i64, i64* %_n867, align 8, !dbg !16154
  %sub898 = sub i64 %conv897, %511, !dbg !16154
  store i64 %sub898, i64* %_delta896, align 8, !dbg !16154
  %512 = load i32, i32* %pad, align 4, !dbg !16155
  %cmp899 = icmp eq i32 %512, 48, !dbg !16155
  br i1 %cmp899, label %if.then904, label %lor.lhs.false901, !dbg !16155

lor.lhs.false901:                                 ; preds = %if.then895
  %513 = load i32, i32* %pad, align 4, !dbg !16155
  %cmp902 = icmp eq i32 %513, 43, !dbg !16155
  br i1 %cmp902, label %if.then904, label %if.else906, !dbg !16154

if.then904:                                       ; preds = %lor.lhs.false901, %if.then895
  %514 = load i8*, i8** %p, align 8, !dbg !16155
  %515 = load i64, i64* %_delta896, align 8, !dbg !16155
  call void @llvm.memset.p0i8.i64(i8* align 1 %514, i8 48, i64 %515, i1 false), !dbg !16155
  %516 = load i64, i64* %_delta896, align 8, !dbg !16155
  %517 = load i8*, i8** %p, align 8, !dbg !16155
  %add.ptr905 = getelementptr inbounds i8, i8* %517, i64 %516, !dbg !16155, !ctir !144
  store i8* %add.ptr905, i8** %p, align 8, !dbg !16155
  br label %if.end908, !dbg !16155

if.else906:                                       ; preds = %lor.lhs.false901
  %518 = load i8*, i8** %p, align 8, !dbg !16155
  %519 = load i64, i64* %_delta896, align 8, !dbg !16155
  call void @llvm.memset.p0i8.i64(i8* align 1 %518, i8 32, i64 %519, i1 false), !dbg !16155
  %520 = load i64, i64* %_delta896, align 8, !dbg !16155
  %521 = load i8*, i8** %p, align 8, !dbg !16155
  %add.ptr907 = getelementptr inbounds i8, i8* %521, i64 %520, !dbg !16155, !ctir !144
  store i8* %add.ptr907, i8** %p, align 8, !dbg !16155
  br label %if.end908

if.end908:                                        ; preds = %if.else906, %if.then904
  br label %if.end909, !dbg !16154

if.end909:                                        ; preds = %if.end908, %land.lhs.true892, %if.then889
  %522 = load i8*, i8** %p, align 8, !dbg !16151
  store i8 10, i8* %522, align 1, !dbg !16151, !ctir !144
  %523 = load i64, i64* %_n867, align 8, !dbg !16151
  %524 = load i8*, i8** %p, align 8, !dbg !16151
  %add.ptr910 = getelementptr inbounds i8, i8* %524, i64 %523, !dbg !16151, !ctir !144
  store i8* %add.ptr910, i8** %p, align 8, !dbg !16151
  br label %if.end911, !dbg !16151

if.end911:                                        ; preds = %if.end909, %if.end887
  %525 = load i64, i64* %_incr876, align 8, !dbg !16141
  %526 = load i64, i64* %i, align 8, !dbg !16141
  %add912 = add i64 %526, %525, !dbg !16141
  store i64 %add912, i64* %i, align 8, !dbg !16141
  br label %do.end914, !dbg !16141

do.end914:                                        ; preds = %if.end911
  br label %sw.epilog1435, !dbg !16157

sw.bb915:                                         ; preds = %sw.epilog87
  store i8 1, i8* %to_lowcase, align 1, !dbg !16158
  store i32 112, i32* %format_char, align 4, !dbg !16159
  br label %sw.bb916, !dbg !16160

sw.bb916:                                         ; preds = %sw.epilog87, %sw.bb915
  %527 = load i8, i8* %change_case, align 1, !dbg !16161
  %tobool917 = trunc i8 %527 to i1, !dbg !16161
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !16163

if.then918:                                       ; preds = %sw.bb916
  store i8 0, i8* %to_uppcase, align 1, !dbg !16164
  store i8 1, i8* %to_lowcase, align 1, !dbg !16166
  br label %if.end919, !dbg !16167

if.end919:                                        ; preds = %if.then918, %sw.bb916
  br label %underlying_strftime, !dbg !16168

sw.bb920:                                         ; preds = %sw.epilog87
  br label %do.body921, !dbg !16169

do.body921:                                       ; preds = %sw.bb920
  store i32 1, i32* %digits, align 4, !dbg !16170
  store i8 0, i8* %negative_number, align 1, !dbg !16170
  %528 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16170
  %tm_mon922 = getelementptr inbounds %struct.tm, %struct.tm* %528, i32 0, i32 4, !dbg !16170, !ctir !15254
  %529 = load i32, i32* %tm_mon922, align 8, !dbg !16170, !ctir !27
  %mul923 = mul nsw i32 %529, 11, !dbg !16170
  %shr924 = ashr i32 %mul923, 5, !dbg !16170
  %add925 = add nsw i32 %shr924, 1, !dbg !16170
  store i32 %add925, i32* %u_number_value, align 4, !dbg !16170
  br label %do_signed_number, !dbg !16170

do.end927:                                        ; No predecessors!
  br label %sw.epilog1435, !dbg !16172

sw.bb928:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.362, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16173
  br label %subformat, !dbg !16174

sw.bb929:                                         ; preds = %sw.epilog87
  br label %underlying_strftime, !dbg !16175

sw.bb930:                                         ; preds = %sw.epilog87
  %530 = load i32, i32* %modifier, align 4, !dbg !16176
  %cmp931 = icmp eq i32 %530, 69, !dbg !16178
  br i1 %cmp931, label %if.then933, label %if.end934, !dbg !16179

if.then933:                                       ; preds = %sw.bb930
  br label %bad_format, !dbg !16180

if.end934:                                        ; preds = %sw.bb930
  br label %do.body935, !dbg !16181

do.body935:                                       ; preds = %if.end934
  store i32 2, i32* %digits, align 4, !dbg !16182
  %531 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16182
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %531, i32 0, i32 0, !dbg !16182, !ctir !15254
  %532 = load i32, i32* %tm_sec, align 8, !dbg !16182, !ctir !27
  store i32 %532, i32* %number_value, align 4, !dbg !16182
  br label %do_number, !dbg !16182

do.end937:                                        ; No predecessors!
  br label %sw.bb938, !dbg !16182

sw.bb938:                                         ; preds = %sw.epilog87, %do.end937
  call void @llvm.dbg.declare(metadata %struct.tm* %ltm, metadata !16184, metadata !DIExpression()), !dbg !16186
  call void @llvm.dbg.declare(metadata i64* %t, metadata !16187, metadata !DIExpression()), !dbg !16188
  %533 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16189
  %534 = bitcast %struct.tm* %ltm to i8*, !dbg !16190
  %535 = bitcast %struct.tm* %533 to i8*, !dbg !16190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %534, i8* align 8 %535, i64 56, i1 false), !dbg !16190
  %536 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !16191
  %call939 = call i64 @mktime_z(%struct.tm_zone* %536, %struct.tm* %ltm), !dbg !16192
  store i64 %call939, i64* %t, align 8, !dbg !16193
  %arraydecay940 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16194, !ctir !829
  %add.ptr941 = getelementptr inbounds i8, i8* %arraydecay940, i64 23, !dbg !16195, !ctir !144
  store i8* %add.ptr941, i8** %bufp, align 8, !dbg !16196
  %537 = load i64, i64* %t, align 8, !dbg !16197
  %cmp942 = icmp slt i64 %537, 0, !dbg !16198
  %frombool944 = zext i1 %cmp942 to i8, !dbg !16199
  store i8 %frombool944, i8* %negative_number, align 1, !dbg !16199
  br label %do.body945, !dbg !16200

do.body945:                                       ; preds = %do.cond959, %sw.bb938
  call void @llvm.dbg.declare(metadata i32* %d, metadata !16201, metadata !DIExpression()), !dbg !16203
  %538 = load i64, i64* %t, align 8, !dbg !16204
  %rem946 = srem i64 %538, 10, !dbg !16205
  %conv947 = trunc i64 %rem946 to i32, !dbg !16204
  store i32 %conv947, i32* %d, align 4, !dbg !16203
  %539 = load i64, i64* %t, align 8, !dbg !16206
  %div948 = sdiv i64 %539, 10, !dbg !16206
  store i64 %div948, i64* %t, align 8, !dbg !16206
  %540 = load i8, i8* %negative_number, align 1, !dbg !16207
  %tobool949 = trunc i8 %540 to i1, !dbg !16207
  br i1 %tobool949, label %cond.true951, label %cond.false953, !dbg !16207

cond.true951:                                     ; preds = %do.body945
  %541 = load i32, i32* %d, align 4, !dbg !16208
  %sub952 = sub nsw i32 0, %541, !dbg !16209
  br label %cond.end954, !dbg !16207

cond.false953:                                    ; preds = %do.body945
  %542 = load i32, i32* %d, align 4, !dbg !16210
  br label %cond.end954, !dbg !16207

cond.end954:                                      ; preds = %cond.false953, %cond.true951
  %cond955 = phi i32 [ %sub952, %cond.true951 ], [ %542, %cond.false953 ], !dbg !16207
  %add956 = add nsw i32 %cond955, 48, !dbg !16211
  %conv957 = trunc i32 %add956 to i8, !dbg !16212
  %543 = load i8*, i8** %bufp, align 8, !dbg !16213
  %incdec.ptr958 = getelementptr inbounds i8, i8* %543, i32 -1, !dbg !16213, !ctir !144
  store i8* %incdec.ptr958, i8** %bufp, align 8, !dbg !16213
  store i8 %conv957, i8* %incdec.ptr958, align 1, !dbg !16214, !ctir !144
  br label %do.cond959, !dbg !16215

do.cond959:                                       ; preds = %cond.end954
  %544 = load i64, i64* %t, align 8, !dbg !16216
  %cmp960 = icmp ne i64 %544, 0, !dbg !16217
  br i1 %cmp960, label %do.body945, label %do.end962, !dbg !16215, !llvm.loop !16218

do.end962:                                        ; preds = %do.cond959
  store i32 1, i32* %digits, align 4, !dbg !16220
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16221
  br label %do_number_sign_and_padding, !dbg !16222

sw.bb963:                                         ; preds = %sw.epilog87
  %545 = load i32, i32* %modifier, align 4, !dbg !16223
  %cmp964 = icmp eq i32 %545, 79, !dbg !16225
  br i1 %cmp964, label %if.then966, label %if.end967, !dbg !16226

if.then966:                                       ; preds = %sw.bb963
  br label %bad_format, !dbg !16227

if.end967:                                        ; preds = %sw.bb963
  br label %underlying_strftime, !dbg !16228

sw.bb968:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.363, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16229
  br label %subformat, !dbg !16230

sw.bb969:                                         ; preds = %sw.epilog87
  br label %do.body970, !dbg !16231

do.body970:                                       ; preds = %sw.bb969
  call void @llvm.dbg.declare(metadata i64* %_n971, metadata !16232, metadata !DIExpression()), !dbg !16234
  store i64 1, i64* %_n971, align 8, !dbg !16234
  call void @llvm.dbg.declare(metadata i64* %_w972, metadata !16235, metadata !DIExpression()), !dbg !16234
  %546 = load i32, i32* %width.addr, align 4, !dbg !16234
  %cmp973 = icmp slt i32 %546, 0, !dbg !16234
  br i1 %cmp973, label %cond.true975, label %cond.false976, !dbg !16234

cond.true975:                                     ; preds = %do.body970
  br label %cond.end977, !dbg !16234

cond.false976:                                    ; preds = %do.body970
  %547 = load i32, i32* %width.addr, align 4, !dbg !16234
  br label %cond.end977, !dbg !16234

cond.end977:                                      ; preds = %cond.false976, %cond.true975
  %cond978 = phi i32 [ 0, %cond.true975 ], [ %547, %cond.false976 ], !dbg !16234
  %conv979 = sext i32 %cond978 to i64, !dbg !16234
  store i64 %conv979, i64* %_w972, align 8, !dbg !16234
  call void @llvm.dbg.declare(metadata i64* %_incr980, metadata !16236, metadata !DIExpression()), !dbg !16234
  %548 = load i64, i64* %_n971, align 8, !dbg !16234
  %549 = load i64, i64* %_w972, align 8, !dbg !16234
  %cmp981 = icmp ult i64 %548, %549, !dbg !16234
  br i1 %cmp981, label %cond.true983, label %cond.false984, !dbg !16234

cond.true983:                                     ; preds = %cond.end977
  %550 = load i64, i64* %_w972, align 8, !dbg !16234
  br label %cond.end985, !dbg !16234

cond.false984:                                    ; preds = %cond.end977
  %551 = load i64, i64* %_n971, align 8, !dbg !16234
  br label %cond.end985, !dbg !16234

cond.end985:                                      ; preds = %cond.false984, %cond.true983
  %cond986 = phi i64 [ %550, %cond.true983 ], [ %551, %cond.false984 ], !dbg !16234
  store i64 %cond986, i64* %_incr980, align 8, !dbg !16234
  %552 = load i64, i64* %_incr980, align 8, !dbg !16237
  %553 = load i64, i64* %maxsize.addr, align 8, !dbg !16237
  %554 = load i64, i64* %i, align 8, !dbg !16237
  %sub987 = sub i64 %553, %554, !dbg !16237
  %cmp988 = icmp uge i64 %552, %sub987, !dbg !16237
  br i1 %cmp988, label %if.then990, label %if.end991, !dbg !16234

if.then990:                                       ; preds = %cond.end985
  store i64 0, i64* %retval, align 8, !dbg !16237
  br label %return, !dbg !16237

if.end991:                                        ; preds = %cond.end985
  %555 = load i8*, i8** %p, align 8, !dbg !16239
  %tobool992 = icmp ne i8* %555, null, !dbg !16239
  br i1 %tobool992, label %if.then993, label %if.end1015, !dbg !16234

if.then993:                                       ; preds = %if.end991
  %556 = load i32, i32* %digits, align 4, !dbg !16241
  %cmp994 = icmp eq i32 %556, 0, !dbg !16241
  br i1 %cmp994, label %land.lhs.true996, label %if.end1013, !dbg !16241

land.lhs.true996:                                 ; preds = %if.then993
  %557 = load i64, i64* %_n971, align 8, !dbg !16241
  %558 = load i64, i64* %_w972, align 8, !dbg !16241
  %cmp997 = icmp ult i64 %557, %558, !dbg !16241
  br i1 %cmp997, label %if.then999, label %if.end1013, !dbg !16244

if.then999:                                       ; preds = %land.lhs.true996
  call void @llvm.dbg.declare(metadata i64* %_delta1000, metadata !16245, metadata !DIExpression()), !dbg !16247
  %559 = load i32, i32* %width.addr, align 4, !dbg !16247
  %conv1001 = sext i32 %559 to i64, !dbg !16247
  %560 = load i64, i64* %_n971, align 8, !dbg !16247
  %sub1002 = sub i64 %conv1001, %560, !dbg !16247
  store i64 %sub1002, i64* %_delta1000, align 8, !dbg !16247
  %561 = load i32, i32* %pad, align 4, !dbg !16248
  %cmp1003 = icmp eq i32 %561, 48, !dbg !16248
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005, !dbg !16248

lor.lhs.false1005:                                ; preds = %if.then999
  %562 = load i32, i32* %pad, align 4, !dbg !16248
  %cmp1006 = icmp eq i32 %562, 43, !dbg !16248
  br i1 %cmp1006, label %if.then1008, label %if.else1010, !dbg !16247

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.then999
  %563 = load i8*, i8** %p, align 8, !dbg !16248
  %564 = load i64, i64* %_delta1000, align 8, !dbg !16248
  call void @llvm.memset.p0i8.i64(i8* align 1 %563, i8 48, i64 %564, i1 false), !dbg !16248
  %565 = load i64, i64* %_delta1000, align 8, !dbg !16248
  %566 = load i8*, i8** %p, align 8, !dbg !16248
  %add.ptr1009 = getelementptr inbounds i8, i8* %566, i64 %565, !dbg !16248, !ctir !144
  store i8* %add.ptr1009, i8** %p, align 8, !dbg !16248
  br label %if.end1012, !dbg !16248

if.else1010:                                      ; preds = %lor.lhs.false1005
  %567 = load i8*, i8** %p, align 8, !dbg !16248
  %568 = load i64, i64* %_delta1000, align 8, !dbg !16248
  call void @llvm.memset.p0i8.i64(i8* align 1 %567, i8 32, i64 %568, i1 false), !dbg !16248
  %569 = load i64, i64* %_delta1000, align 8, !dbg !16248
  %570 = load i8*, i8** %p, align 8, !dbg !16248
  %add.ptr1011 = getelementptr inbounds i8, i8* %570, i64 %569, !dbg !16248, !ctir !144
  store i8* %add.ptr1011, i8** %p, align 8, !dbg !16248
  br label %if.end1012

if.end1012:                                       ; preds = %if.else1010, %if.then1008
  br label %if.end1013, !dbg !16247

if.end1013:                                       ; preds = %if.end1012, %land.lhs.true996, %if.then993
  %571 = load i8*, i8** %p, align 8, !dbg !16244
  store i8 9, i8* %571, align 1, !dbg !16244, !ctir !144
  %572 = load i64, i64* %_n971, align 8, !dbg !16244
  %573 = load i8*, i8** %p, align 8, !dbg !16244
  %add.ptr1014 = getelementptr inbounds i8, i8* %573, i64 %572, !dbg !16244, !ctir !144
  store i8* %add.ptr1014, i8** %p, align 8, !dbg !16244
  br label %if.end1015, !dbg !16244

if.end1015:                                       ; preds = %if.end1013, %if.end991
  %574 = load i64, i64* %_incr980, align 8, !dbg !16234
  %575 = load i64, i64* %i, align 8, !dbg !16234
  %add1016 = add i64 %575, %574, !dbg !16234
  store i64 %add1016, i64* %i, align 8, !dbg !16234
  br label %do.end1018, !dbg !16234

do.end1018:                                       ; preds = %if.end1015
  br label %sw.epilog1435, !dbg !16250

sw.bb1019:                                        ; preds = %sw.epilog87
  br label %do.body1020, !dbg !16251

do.body1020:                                      ; preds = %sw.bb1019
  store i32 1, i32* %digits, align 4, !dbg !16252
  %576 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16252
  %tm_wday = getelementptr inbounds %struct.tm, %struct.tm* %576, i32 0, i32 6, !dbg !16252, !ctir !15254
  %577 = load i32, i32* %tm_wday, align 8, !dbg !16252, !ctir !27
  %sub1021 = sub nsw i32 %577, 1, !dbg !16252
  %add1022 = add nsw i32 %sub1021, 7, !dbg !16252
  %rem1023 = srem i32 %add1022, 7, !dbg !16252
  %add1024 = add nsw i32 %rem1023, 1, !dbg !16252
  store i32 %add1024, i32* %number_value, align 4, !dbg !16252
  br label %do_number, !dbg !16252

do.end1026:                                       ; No predecessors!
  br label %sw.bb1027, !dbg !16252

sw.bb1027:                                        ; preds = %sw.epilog87, %do.end1026
  %578 = load i32, i32* %modifier, align 4, !dbg !16254
  %cmp1028 = icmp eq i32 %578, 69, !dbg !16256
  br i1 %cmp1028, label %if.then1030, label %if.end1031, !dbg !16257

if.then1030:                                      ; preds = %sw.bb1027
  br label %bad_format, !dbg !16258

if.end1031:                                       ; preds = %sw.bb1027
  br label %do.body1032, !dbg !16259

do.body1032:                                      ; preds = %if.end1031
  store i32 2, i32* %digits, align 4, !dbg !16260
  %579 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16260
  %tm_yday1033 = getelementptr inbounds %struct.tm, %struct.tm* %579, i32 0, i32 7, !dbg !16260, !ctir !15254
  %580 = load i32, i32* %tm_yday1033, align 4, !dbg !16260, !ctir !27
  %581 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16260
  %tm_wday1034 = getelementptr inbounds %struct.tm, %struct.tm* %581, i32 0, i32 6, !dbg !16260, !ctir !15254
  %582 = load i32, i32* %tm_wday1034, align 8, !dbg !16260, !ctir !27
  %sub1035 = sub nsw i32 %580, %582, !dbg !16260
  %add1036 = add nsw i32 %sub1035, 7, !dbg !16260
  %div1037 = sdiv i32 %add1036, 7, !dbg !16260
  store i32 %div1037, i32* %number_value, align 4, !dbg !16260
  br label %do_number, !dbg !16260

do.end1039:                                       ; No predecessors!
  br label %sw.bb1040, !dbg !16260

sw.bb1040:                                        ; preds = %sw.epilog87, %sw.epilog87, %sw.epilog87, %do.end1039
  %583 = load i32, i32* %modifier, align 4, !dbg !16262
  %cmp1041 = icmp eq i32 %583, 69, !dbg !16264
  br i1 %cmp1041, label %if.then1043, label %if.end1044, !dbg !16265

if.then1043:                                      ; preds = %sw.bb1040
  br label %bad_format, !dbg !16266

if.end1044:                                       ; preds = %sw.bb1040
  call void @llvm.dbg.declare(metadata i32* %year, metadata !16267, metadata !DIExpression()), !dbg !16269
  %584 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16270
  %tm_year1045 = getelementptr inbounds %struct.tm, %struct.tm* %584, i32 0, i32 5, !dbg !16271, !ctir !15254
  %585 = load i32, i32* %tm_year1045, align 4, !dbg !16271, !ctir !27
  %586 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16272
  %tm_year1046 = getelementptr inbounds %struct.tm, %struct.tm* %586, i32 0, i32 5, !dbg !16273, !ctir !15254
  %587 = load i32, i32* %tm_year1046, align 4, !dbg !16273, !ctir !27
  %cmp1047 = icmp slt i32 %587, 0, !dbg !16274
  %588 = zext i1 %cmp1047 to i64, !dbg !16272
  %cond1049 = select i1 %cmp1047, i32 300, i32 -100, !dbg !16272
  %add1050 = add nsw i32 %585, %cond1049, !dbg !16275
  store i32 %add1050, i32* %year, align 4, !dbg !16269
  call void @llvm.dbg.declare(metadata i32* %year_adjust, metadata !16276, metadata !DIExpression()), !dbg !16277
  store i32 0, i32* %year_adjust, align 4, !dbg !16277
  call void @llvm.dbg.declare(metadata i32* %days, metadata !16278, metadata !DIExpression()), !dbg !16279
  %589 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16280
  %tm_yday1051 = getelementptr inbounds %struct.tm, %struct.tm* %589, i32 0, i32 7, !dbg !16281, !ctir !15254
  %590 = load i32, i32* %tm_yday1051, align 4, !dbg !16281, !ctir !27
  %591 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16282
  %tm_wday1052 = getelementptr inbounds %struct.tm, %struct.tm* %591, i32 0, i32 6, !dbg !16283, !ctir !15254
  %592 = load i32, i32* %tm_wday1052, align 8, !dbg !16283, !ctir !27
  %call1053 = call i32 @iso_week_days(i32 %590, i32 %592), !dbg !16284
  store i32 %call1053, i32* %days, align 4, !dbg !16279
  %593 = load i32, i32* %days, align 4, !dbg !16285
  %cmp1054 = icmp slt i32 %593, 0, !dbg !16287
  br i1 %cmp1054, label %if.then1056, label %if.else1079, !dbg !16288

if.then1056:                                      ; preds = %if.end1044
  store i32 -1, i32* %year_adjust, align 4, !dbg !16289
  %594 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16291
  %tm_yday1057 = getelementptr inbounds %struct.tm, %struct.tm* %594, i32 0, i32 7, !dbg !16292, !ctir !15254
  %595 = load i32, i32* %tm_yday1057, align 4, !dbg !16292, !ctir !27
  %596 = load i32, i32* %year, align 4, !dbg !16293
  %sub1058 = sub nsw i32 %596, 1, !dbg !16293
  %rem1059 = srem i32 %sub1058, 4, !dbg !16293
  %cmp1060 = icmp eq i32 %rem1059, 0, !dbg !16293
  br i1 %cmp1060, label %land.rhs1062, label %land.end1073, !dbg !16293

land.rhs1062:                                     ; preds = %if.then1056
  %597 = load i32, i32* %year, align 4, !dbg !16293
  %sub1063 = sub nsw i32 %597, 1, !dbg !16293
  %rem1064 = srem i32 %sub1063, 100, !dbg !16293
  %cmp1065 = icmp ne i32 %rem1064, 0, !dbg !16293
  br i1 %cmp1065, label %lor.end1072, label %lor.rhs1067, !dbg !16293

lor.rhs1067:                                      ; preds = %land.rhs1062
  %598 = load i32, i32* %year, align 4, !dbg !16293
  %sub1068 = sub nsw i32 %598, 1, !dbg !16293
  %rem1069 = srem i32 %sub1068, 400, !dbg !16293
  %cmp1070 = icmp eq i32 %rem1069, 0, !dbg !16293
  br label %lor.end1072, !dbg !16293

lor.end1072:                                      ; preds = %lor.rhs1067, %land.rhs1062
  %599 = phi i1 [ true, %land.rhs1062 ], [ %cmp1070, %lor.rhs1067 ]
  br label %land.end1073

land.end1073:                                     ; preds = %lor.end1072, %if.then1056
  %600 = phi i1 [ false, %if.then1056 ], [ %599, %lor.end1072 ], !dbg !16294
  %land.ext1074 = zext i1 %600 to i32, !dbg !16293
  %add1075 = add nsw i32 365, %land.ext1074, !dbg !16295
  %add1076 = add nsw i32 %595, %add1075, !dbg !16296
  %601 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16297
  %tm_wday1077 = getelementptr inbounds %struct.tm, %struct.tm* %601, i32 0, i32 6, !dbg !16298, !ctir !15254
  %602 = load i32, i32* %tm_wday1077, align 8, !dbg !16298, !ctir !27
  %call1078 = call i32 @iso_week_days(i32 %add1076, i32 %602), !dbg !16299
  store i32 %call1078, i32* %days, align 4, !dbg !16300
  br label %if.end1104, !dbg !16301

if.else1079:                                      ; preds = %if.end1044
  call void @llvm.dbg.declare(metadata i32* %d1080, metadata !16302, metadata !DIExpression()), !dbg !16304
  %603 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16305
  %tm_yday1081 = getelementptr inbounds %struct.tm, %struct.tm* %603, i32 0, i32 7, !dbg !16306, !ctir !15254
  %604 = load i32, i32* %tm_yday1081, align 4, !dbg !16306, !ctir !27
  %605 = load i32, i32* %year, align 4, !dbg !16307
  %rem1082 = srem i32 %605, 4, !dbg !16307
  %cmp1083 = icmp eq i32 %rem1082, 0, !dbg !16307
  br i1 %cmp1083, label %land.rhs1085, label %land.end1094, !dbg !16307

land.rhs1085:                                     ; preds = %if.else1079
  %606 = load i32, i32* %year, align 4, !dbg !16307
  %rem1086 = srem i32 %606, 100, !dbg !16307
  %cmp1087 = icmp ne i32 %rem1086, 0, !dbg !16307
  br i1 %cmp1087, label %lor.end1093, label %lor.rhs1089, !dbg !16307

lor.rhs1089:                                      ; preds = %land.rhs1085
  %607 = load i32, i32* %year, align 4, !dbg !16307
  %rem1090 = srem i32 %607, 400, !dbg !16307
  %cmp1091 = icmp eq i32 %rem1090, 0, !dbg !16307
  br label %lor.end1093, !dbg !16307

lor.end1093:                                      ; preds = %lor.rhs1089, %land.rhs1085
  %608 = phi i1 [ true, %land.rhs1085 ], [ %cmp1091, %lor.rhs1089 ]
  br label %land.end1094

land.end1094:                                     ; preds = %lor.end1093, %if.else1079
  %609 = phi i1 [ false, %if.else1079 ], [ %608, %lor.end1093 ], !dbg !16308
  %land.ext1095 = zext i1 %609 to i32, !dbg !16307
  %add1096 = add nsw i32 365, %land.ext1095, !dbg !16309
  %sub1097 = sub nsw i32 %604, %add1096, !dbg !16310
  %610 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16311
  %tm_wday1098 = getelementptr inbounds %struct.tm, %struct.tm* %610, i32 0, i32 6, !dbg !16312, !ctir !15254
  %611 = load i32, i32* %tm_wday1098, align 8, !dbg !16312, !ctir !27
  %call1099 = call i32 @iso_week_days(i32 %sub1097, i32 %611), !dbg !16313
  store i32 %call1099, i32* %d1080, align 4, !dbg !16304
  %612 = load i32, i32* %d1080, align 4, !dbg !16314
  %cmp1100 = icmp sle i32 0, %612, !dbg !16316
  br i1 %cmp1100, label %if.then1102, label %if.end1103, !dbg !16317

if.then1102:                                      ; preds = %land.end1094
  store i32 1, i32* %year_adjust, align 4, !dbg !16318
  %613 = load i32, i32* %d1080, align 4, !dbg !16320
  store i32 %613, i32* %days, align 4, !dbg !16321
  br label %if.end1103, !dbg !16322

if.end1103:                                       ; preds = %if.then1102, %land.end1094
  br label %if.end1104

if.end1104:                                       ; preds = %if.end1103, %land.end1073
  %614 = load i8*, i8** %f, align 8, !dbg !16323
  %615 = load i8, i8* %614, align 1, !dbg !16324, !ctir !147
  %conv1105 = sext i8 %615 to i32, !dbg !16324
  switch i32 %conv1105, label %sw.default1142 [
    i32 103, label %sw.bb1106
    i32 71, label %sw.bb1130
  ], !dbg !16325

sw.bb1106:                                        ; preds = %if.end1104
  call void @llvm.dbg.declare(metadata i32* %yy, metadata !16326, metadata !DIExpression()), !dbg !16329
  %616 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16330
  %tm_year1107 = getelementptr inbounds %struct.tm, %struct.tm* %616, i32 0, i32 5, !dbg !16331, !ctir !15254
  %617 = load i32, i32* %tm_year1107, align 4, !dbg !16331, !ctir !27
  %rem1108 = srem i32 %617, 100, !dbg !16332
  %618 = load i32, i32* %year_adjust, align 4, !dbg !16333
  %add1109 = add nsw i32 %rem1108, %618, !dbg !16334
  %rem1110 = srem i32 %add1109, 100, !dbg !16335
  store i32 %rem1110, i32* %yy, align 4, !dbg !16329
  br label %do.body1111, !dbg !16336

do.body1111:                                      ; preds = %sw.bb1106
  store i32 2, i32* %digits, align 4, !dbg !16337
  store i8 0, i8* %negative_number, align 1, !dbg !16337
  %619 = load i32, i32* %yy, align 4, !dbg !16337
  %cmp1112 = icmp sle i32 0, %619, !dbg !16337
  br i1 %cmp1112, label %cond.true1114, label %cond.false1115, !dbg !16337

cond.true1114:                                    ; preds = %do.body1111
  %620 = load i32, i32* %yy, align 4, !dbg !16337
  br label %cond.end1126, !dbg !16337

cond.false1115:                                   ; preds = %do.body1111
  %621 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16337
  %tm_year1116 = getelementptr inbounds %struct.tm, %struct.tm* %621, i32 0, i32 5, !dbg !16337, !ctir !15254
  %622 = load i32, i32* %tm_year1116, align 4, !dbg !16337, !ctir !27
  %623 = load i32, i32* %year_adjust, align 4, !dbg !16337
  %sub1117 = sub nsw i32 -1900, %623, !dbg !16337
  %cmp1118 = icmp slt i32 %622, %sub1117, !dbg !16337
  br i1 %cmp1118, label %cond.true1120, label %cond.false1122, !dbg !16337

cond.true1120:                                    ; preds = %cond.false1115
  %624 = load i32, i32* %yy, align 4, !dbg !16337
  %sub1121 = sub nsw i32 0, %624, !dbg !16337
  br label %cond.end1124, !dbg !16337

cond.false1122:                                   ; preds = %cond.false1115
  %625 = load i32, i32* %yy, align 4, !dbg !16337
  %add1123 = add nsw i32 %625, 100, !dbg !16337
  br label %cond.end1124, !dbg !16337

cond.end1124:                                     ; preds = %cond.false1122, %cond.true1120
  %cond1125 = phi i32 [ %sub1121, %cond.true1120 ], [ %add1123, %cond.false1122 ], !dbg !16337
  br label %cond.end1126, !dbg !16337

cond.end1126:                                     ; preds = %cond.end1124, %cond.true1114
  %cond1127 = phi i32 [ %620, %cond.true1114 ], [ %cond1125, %cond.end1124 ], !dbg !16337
  store i32 %cond1127, i32* %u_number_value, align 4, !dbg !16337
  br label %do_yearish, !dbg !16337

do.end1129:                                       ; No predecessors!
  br label %sw.bb1130, !dbg !16339

sw.bb1130:                                        ; preds = %if.end1104, %do.end1129
  br label %do.body1131, !dbg !16340

do.body1131:                                      ; preds = %sw.bb1130
  store i32 4, i32* %digits, align 4, !dbg !16341
  %626 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16341
  %tm_year1132 = getelementptr inbounds %struct.tm, %struct.tm* %626, i32 0, i32 5, !dbg !16341, !ctir !15254
  %627 = load i32, i32* %tm_year1132, align 4, !dbg !16341, !ctir !27
  %628 = load i32, i32* %year_adjust, align 4, !dbg !16341
  %sub1133 = sub nsw i32 -1900, %628, !dbg !16341
  %cmp1134 = icmp slt i32 %627, %sub1133, !dbg !16341
  %frombool1136 = zext i1 %cmp1134 to i8, !dbg !16341
  store i8 %frombool1136, i8* %negative_number, align 1, !dbg !16341
  %629 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16341
  %tm_year1137 = getelementptr inbounds %struct.tm, %struct.tm* %629, i32 0, i32 5, !dbg !16341, !ctir !15254
  %630 = load i32, i32* %tm_year1137, align 4, !dbg !16341, !ctir !27
  %add1138 = add i32 %630, 1900, !dbg !16341
  %631 = load i32, i32* %year_adjust, align 4, !dbg !16341
  %add1139 = add i32 %add1138, %631, !dbg !16341
  store i32 %add1139, i32* %u_number_value, align 4, !dbg !16341
  br label %do_yearish, !dbg !16341

do.end1141:                                       ; No predecessors!
  br label %sw.default1142, !dbg !16341

sw.default1142:                                   ; preds = %if.end1104, %do.end1141
  br label %do.body1143, !dbg !16343

do.body1143:                                      ; preds = %sw.default1142
  store i32 2, i32* %digits, align 4, !dbg !16344
  %632 = load i32, i32* %days, align 4, !dbg !16344
  %div1144 = sdiv i32 %632, 7, !dbg !16344
  %add1145 = add nsw i32 %div1144, 1, !dbg !16344
  store i32 %add1145, i32* %number_value, align 4, !dbg !16344
  br label %do_number, !dbg !16344

do.end1147:                                       ; No predecessors!
  br label %sw.epilog1148, !dbg !16346

sw.epilog1148:                                    ; preds = %do.end1147
  br label %sw.bb1149, !dbg !16347

sw.bb1149:                                        ; preds = %sw.epilog87, %sw.epilog1148
  %633 = load i32, i32* %modifier, align 4, !dbg !16348
  %cmp1150 = icmp eq i32 %633, 69, !dbg !16350
  br i1 %cmp1150, label %if.then1152, label %if.end1153, !dbg !16351

if.then1152:                                      ; preds = %sw.bb1149
  br label %bad_format, !dbg !16352

if.end1153:                                       ; preds = %sw.bb1149
  br label %do.body1154, !dbg !16353

do.body1154:                                      ; preds = %if.end1153
  store i32 2, i32* %digits, align 4, !dbg !16354
  %634 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16354
  %tm_yday1155 = getelementptr inbounds %struct.tm, %struct.tm* %634, i32 0, i32 7, !dbg !16354, !ctir !15254
  %635 = load i32, i32* %tm_yday1155, align 4, !dbg !16354, !ctir !27
  %636 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16354
  %tm_wday1156 = getelementptr inbounds %struct.tm, %struct.tm* %636, i32 0, i32 6, !dbg !16354, !ctir !15254
  %637 = load i32, i32* %tm_wday1156, align 8, !dbg !16354, !ctir !27
  %sub1157 = sub nsw i32 %637, 1, !dbg !16354
  %add1158 = add nsw i32 %sub1157, 7, !dbg !16354
  %rem1159 = srem i32 %add1158, 7, !dbg !16354
  %sub1160 = sub nsw i32 %635, %rem1159, !dbg !16354
  %add1161 = add nsw i32 %sub1160, 7, !dbg !16354
  %div1162 = sdiv i32 %add1161, 7, !dbg !16354
  store i32 %div1162, i32* %number_value, align 4, !dbg !16354
  br label %do_number, !dbg !16354

do.end1164:                                       ; No predecessors!
  br label %sw.bb1165, !dbg !16354

sw.bb1165:                                        ; preds = %sw.epilog87, %do.end1164
  %638 = load i32, i32* %modifier, align 4, !dbg !16356
  %cmp1166 = icmp eq i32 %638, 69, !dbg !16358
  br i1 %cmp1166, label %if.then1168, label %if.end1169, !dbg !16359

if.then1168:                                      ; preds = %sw.bb1165
  br label %bad_format, !dbg !16360

if.end1169:                                       ; preds = %sw.bb1165
  br label %do.body1170, !dbg !16361

do.body1170:                                      ; preds = %if.end1169
  store i32 1, i32* %digits, align 4, !dbg !16362
  %639 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16362
  %tm_wday1171 = getelementptr inbounds %struct.tm, %struct.tm* %639, i32 0, i32 6, !dbg !16362, !ctir !15254
  %640 = load i32, i32* %tm_wday1171, align 8, !dbg !16362, !ctir !27
  store i32 %640, i32* %number_value, align 4, !dbg !16362
  br label %do_number, !dbg !16362

do.end1173:                                       ; No predecessors!
  br label %sw.bb1174, !dbg !16362

sw.bb1174:                                        ; preds = %sw.epilog87, %do.end1173
  %641 = load i32, i32* %modifier, align 4, !dbg !16364
  %cmp1175 = icmp eq i32 %641, 69, !dbg !16366
  br i1 %cmp1175, label %if.then1177, label %if.end1178, !dbg !16367

if.then1177:                                      ; preds = %sw.bb1174
  br label %underlying_strftime, !dbg !16368

if.end1178:                                       ; preds = %sw.bb1174
  %642 = load i32, i32* %modifier, align 4, !dbg !16370
  %cmp1179 = icmp eq i32 %642, 79, !dbg !16372
  br i1 %cmp1179, label %if.then1181, label %if.end1182, !dbg !16373

if.then1181:                                      ; preds = %if.end1178
  br label %bad_format, !dbg !16374

if.end1182:                                       ; preds = %if.end1178
  br label %do.body1183, !dbg !16375

do.body1183:                                      ; preds = %if.end1182
  store i32 4, i32* %digits, align 4, !dbg !16376
  %643 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16376
  %tm_year1184 = getelementptr inbounds %struct.tm, %struct.tm* %643, i32 0, i32 5, !dbg !16376, !ctir !15254
  %644 = load i32, i32* %tm_year1184, align 4, !dbg !16376, !ctir !27
  %cmp1185 = icmp slt i32 %644, -1900, !dbg !16376
  %frombool1187 = zext i1 %cmp1185 to i8, !dbg !16376
  store i8 %frombool1187, i8* %negative_number, align 1, !dbg !16376
  %645 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16376
  %tm_year1188 = getelementptr inbounds %struct.tm, %struct.tm* %645, i32 0, i32 5, !dbg !16376, !ctir !15254
  %646 = load i32, i32* %tm_year1188, align 4, !dbg !16376, !ctir !27
  %add1189 = add i32 %646, 1900, !dbg !16376
  store i32 %add1189, i32* %u_number_value, align 4, !dbg !16376
  br label %do_yearish, !dbg !16376

do.end1191:                                       ; No predecessors!
  br label %sw.bb1192, !dbg !16376

sw.bb1192:                                        ; preds = %sw.epilog87, %do.end1191
  %647 = load i32, i32* %modifier, align 4, !dbg !16378
  %cmp1193 = icmp eq i32 %647, 69, !dbg !16380
  br i1 %cmp1193, label %if.then1195, label %if.end1196, !dbg !16381

if.then1195:                                      ; preds = %sw.bb1192
  br label %underlying_strftime, !dbg !16382

if.end1196:                                       ; preds = %sw.bb1192
  call void @llvm.dbg.declare(metadata i32* %yy1197, metadata !16384, metadata !DIExpression()), !dbg !16386
  %648 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16387
  %tm_year1198 = getelementptr inbounds %struct.tm, %struct.tm* %648, i32 0, i32 5, !dbg !16388, !ctir !15254
  %649 = load i32, i32* %tm_year1198, align 4, !dbg !16388, !ctir !27
  %rem1199 = srem i32 %649, 100, !dbg !16389
  store i32 %rem1199, i32* %yy1197, align 4, !dbg !16386
  %650 = load i32, i32* %yy1197, align 4, !dbg !16390
  %cmp1200 = icmp slt i32 %650, 0, !dbg !16392
  br i1 %cmp1200, label %if.then1202, label %if.end1212, !dbg !16393

if.then1202:                                      ; preds = %if.end1196
  %651 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16394
  %tm_year1203 = getelementptr inbounds %struct.tm, %struct.tm* %651, i32 0, i32 5, !dbg !16395, !ctir !15254
  %652 = load i32, i32* %tm_year1203, align 4, !dbg !16395, !ctir !27
  %cmp1204 = icmp slt i32 %652, -1900, !dbg !16396
  br i1 %cmp1204, label %cond.true1206, label %cond.false1208, !dbg !16394

cond.true1206:                                    ; preds = %if.then1202
  %653 = load i32, i32* %yy1197, align 4, !dbg !16397
  %sub1207 = sub nsw i32 0, %653, !dbg !16398
  br label %cond.end1210, !dbg !16394

cond.false1208:                                   ; preds = %if.then1202
  %654 = load i32, i32* %yy1197, align 4, !dbg !16399
  %add1209 = add nsw i32 %654, 100, !dbg !16400
  br label %cond.end1210, !dbg !16394

cond.end1210:                                     ; preds = %cond.false1208, %cond.true1206
  %cond1211 = phi i32 [ %sub1207, %cond.true1206 ], [ %add1209, %cond.false1208 ], !dbg !16394
  store i32 %cond1211, i32* %yy1197, align 4, !dbg !16401
  br label %if.end1212, !dbg !16402

if.end1212:                                       ; preds = %cond.end1210, %if.end1196
  br label %do.body1213, !dbg !16403

do.body1213:                                      ; preds = %if.end1212
  store i32 2, i32* %digits, align 4, !dbg !16404
  store i8 0, i8* %negative_number, align 1, !dbg !16404
  %655 = load i32, i32* %yy1197, align 4, !dbg !16404
  store i32 %655, i32* %u_number_value, align 4, !dbg !16404
  br label %do_yearish, !dbg !16404

do.end1215:                                       ; No predecessors!
  br label %sw.bb1216, !dbg !16406

sw.bb1216:                                        ; preds = %sw.epilog87, %do.end1215
  %656 = load i8, i8* %change_case, align 1, !dbg !16407
  %tobool1217 = trunc i8 %656 to i1, !dbg !16407
  br i1 %tobool1217, label %if.then1218, label %if.end1219, !dbg !16409

if.then1218:                                      ; preds = %sw.bb1216
  store i8 0, i8* %to_uppcase, align 1, !dbg !16410
  store i8 1, i8* %to_lowcase, align 1, !dbg !16412
  br label %if.end1219, !dbg !16413

if.end1219:                                       ; preds = %if.then1218, %sw.bb1216
  br label %do.body1220, !dbg !16414

do.body1220:                                      ; preds = %if.end1219
  call void @llvm.dbg.declare(metadata i64* %_n1221, metadata !16415, metadata !DIExpression()), !dbg !16417
  %657 = load i8*, i8** %zone, align 8, !dbg !16417
  %call1222 = call i64 @strlen(i8* %657) #16, !dbg !16417
  store i64 %call1222, i64* %_n1221, align 8, !dbg !16417
  call void @llvm.dbg.declare(metadata i64* %_w1223, metadata !16418, metadata !DIExpression()), !dbg !16417
  %658 = load i32, i32* %width.addr, align 4, !dbg !16417
  %cmp1224 = icmp slt i32 %658, 0, !dbg !16417
  br i1 %cmp1224, label %cond.true1226, label %cond.false1227, !dbg !16417

cond.true1226:                                    ; preds = %do.body1220
  br label %cond.end1228, !dbg !16417

cond.false1227:                                   ; preds = %do.body1220
  %659 = load i32, i32* %width.addr, align 4, !dbg !16417
  br label %cond.end1228, !dbg !16417

cond.end1228:                                     ; preds = %cond.false1227, %cond.true1226
  %cond1229 = phi i32 [ 0, %cond.true1226 ], [ %659, %cond.false1227 ], !dbg !16417
  %conv1230 = sext i32 %cond1229 to i64, !dbg !16417
  store i64 %conv1230, i64* %_w1223, align 8, !dbg !16417
  call void @llvm.dbg.declare(metadata i64* %_incr1231, metadata !16419, metadata !DIExpression()), !dbg !16417
  %660 = load i64, i64* %_n1221, align 8, !dbg !16417
  %661 = load i64, i64* %_w1223, align 8, !dbg !16417
  %cmp1232 = icmp ult i64 %660, %661, !dbg !16417
  br i1 %cmp1232, label %cond.true1234, label %cond.false1235, !dbg !16417

cond.true1234:                                    ; preds = %cond.end1228
  %662 = load i64, i64* %_w1223, align 8, !dbg !16417
  br label %cond.end1236, !dbg !16417

cond.false1235:                                   ; preds = %cond.end1228
  %663 = load i64, i64* %_n1221, align 8, !dbg !16417
  br label %cond.end1236, !dbg !16417

cond.end1236:                                     ; preds = %cond.false1235, %cond.true1234
  %cond1237 = phi i64 [ %662, %cond.true1234 ], [ %663, %cond.false1235 ], !dbg !16417
  store i64 %cond1237, i64* %_incr1231, align 8, !dbg !16417
  %664 = load i64, i64* %_incr1231, align 8, !dbg !16420
  %665 = load i64, i64* %maxsize.addr, align 8, !dbg !16420
  %666 = load i64, i64* %i, align 8, !dbg !16420
  %sub1238 = sub i64 %665, %666, !dbg !16420
  %cmp1239 = icmp uge i64 %664, %sub1238, !dbg !16420
  br i1 %cmp1239, label %if.then1241, label %if.end1242, !dbg !16417

if.then1241:                                      ; preds = %cond.end1236
  store i64 0, i64* %retval, align 8, !dbg !16420
  br label %return, !dbg !16420

if.end1242:                                       ; preds = %cond.end1236
  %667 = load i8*, i8** %p, align 8, !dbg !16422
  %tobool1243 = icmp ne i8* %667, null, !dbg !16422
  br i1 %tobool1243, label %if.then1244, label %if.end1276, !dbg !16417

if.then1244:                                      ; preds = %if.end1242
  %668 = load i32, i32* %digits, align 4, !dbg !16424
  %cmp1245 = icmp eq i32 %668, 0, !dbg !16424
  br i1 %cmp1245, label %land.lhs.true1247, label %if.end1264, !dbg !16424

land.lhs.true1247:                                ; preds = %if.then1244
  %669 = load i64, i64* %_n1221, align 8, !dbg !16424
  %670 = load i64, i64* %_w1223, align 8, !dbg !16424
  %cmp1248 = icmp ult i64 %669, %670, !dbg !16424
  br i1 %cmp1248, label %if.then1250, label %if.end1264, !dbg !16427

if.then1250:                                      ; preds = %land.lhs.true1247
  call void @llvm.dbg.declare(metadata i64* %_delta1251, metadata !16428, metadata !DIExpression()), !dbg !16430
  %671 = load i32, i32* %width.addr, align 4, !dbg !16430
  %conv1252 = sext i32 %671 to i64, !dbg !16430
  %672 = load i64, i64* %_n1221, align 8, !dbg !16430
  %sub1253 = sub i64 %conv1252, %672, !dbg !16430
  store i64 %sub1253, i64* %_delta1251, align 8, !dbg !16430
  %673 = load i32, i32* %pad, align 4, !dbg !16431
  %cmp1254 = icmp eq i32 %673, 48, !dbg !16431
  br i1 %cmp1254, label %if.then1259, label %lor.lhs.false1256, !dbg !16431

lor.lhs.false1256:                                ; preds = %if.then1250
  %674 = load i32, i32* %pad, align 4, !dbg !16431
  %cmp1257 = icmp eq i32 %674, 43, !dbg !16431
  br i1 %cmp1257, label %if.then1259, label %if.else1261, !dbg !16430

if.then1259:                                      ; preds = %lor.lhs.false1256, %if.then1250
  %675 = load i8*, i8** %p, align 8, !dbg !16431
  %676 = load i64, i64* %_delta1251, align 8, !dbg !16431
  call void @llvm.memset.p0i8.i64(i8* align 1 %675, i8 48, i64 %676, i1 false), !dbg !16431
  %677 = load i64, i64* %_delta1251, align 8, !dbg !16431
  %678 = load i8*, i8** %p, align 8, !dbg !16431
  %add.ptr1260 = getelementptr inbounds i8, i8* %678, i64 %677, !dbg !16431, !ctir !144
  store i8* %add.ptr1260, i8** %p, align 8, !dbg !16431
  br label %if.end1263, !dbg !16431

if.else1261:                                      ; preds = %lor.lhs.false1256
  %679 = load i8*, i8** %p, align 8, !dbg !16431
  %680 = load i64, i64* %_delta1251, align 8, !dbg !16431
  call void @llvm.memset.p0i8.i64(i8* align 1 %679, i8 32, i64 %680, i1 false), !dbg !16431
  %681 = load i64, i64* %_delta1251, align 8, !dbg !16431
  %682 = load i8*, i8** %p, align 8, !dbg !16431
  %add.ptr1262 = getelementptr inbounds i8, i8* %682, i64 %681, !dbg !16431, !ctir !144
  store i8* %add.ptr1262, i8** %p, align 8, !dbg !16431
  br label %if.end1263

if.end1263:                                       ; preds = %if.else1261, %if.then1259
  br label %if.end1264, !dbg !16430

if.end1264:                                       ; preds = %if.end1263, %land.lhs.true1247, %if.then1244
  %683 = load i8, i8* %to_lowcase, align 1, !dbg !16433
  %tobool1265 = trunc i8 %683 to i1, !dbg !16433
  br i1 %tobool1265, label %if.then1266, label %if.else1268, !dbg !16427

if.then1266:                                      ; preds = %if.end1264
  %684 = load i8*, i8** %p, align 8, !dbg !16433
  %685 = load i8*, i8** %zone, align 8, !dbg !16433
  %686 = load i64, i64* %_n1221, align 8, !dbg !16433
  %call1267 = call i8* @memcpy_lowcase(i8* %684, i8* %685, i64 %686), !dbg !16433
  br label %if.end1274, !dbg !16433

if.else1268:                                      ; preds = %if.end1264
  %687 = load i8, i8* %to_uppcase, align 1, !dbg !16435
  %tobool1269 = trunc i8 %687 to i1, !dbg !16435
  br i1 %tobool1269, label %if.then1270, label %if.else1272, !dbg !16433

if.then1270:                                      ; preds = %if.else1268
  %688 = load i8*, i8** %p, align 8, !dbg !16435
  %689 = load i8*, i8** %zone, align 8, !dbg !16435
  %690 = load i64, i64* %_n1221, align 8, !dbg !16435
  %call1271 = call i8* @memcpy_uppcase(i8* %688, i8* %689, i64 %690), !dbg !16435
  br label %if.end1273, !dbg !16435

if.else1272:                                      ; preds = %if.else1268
  %691 = load i8*, i8** %p, align 8, !dbg !16435
  %692 = load i8*, i8** %zone, align 8, !dbg !16435
  %693 = load i64, i64* %_n1221, align 8, !dbg !16435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %691, i8* align 1 %692, i64 %693, i1 false), !dbg !16435
  br label %if.end1273

if.end1273:                                       ; preds = %if.else1272, %if.then1270
  br label %if.end1274

if.end1274:                                       ; preds = %if.end1273, %if.then1266
  %694 = load i64, i64* %_n1221, align 8, !dbg !16427
  %695 = load i8*, i8** %p, align 8, !dbg !16427
  %add.ptr1275 = getelementptr inbounds i8, i8* %695, i64 %694, !dbg !16427, !ctir !144
  store i8* %add.ptr1275, i8** %p, align 8, !dbg !16427
  br label %if.end1276, !dbg !16427

if.end1276:                                       ; preds = %if.end1274, %if.end1242
  %696 = load i64, i64* %_incr1231, align 8, !dbg !16417
  %697 = load i64, i64* %i, align 8, !dbg !16417
  %add1277 = add i64 %697, %696, !dbg !16417
  store i64 %add1277, i64* %i, align 8, !dbg !16417
  br label %do.end1279, !dbg !16417

do.end1279:                                       ; preds = %if.end1276
  br label %sw.epilog1435, !dbg !16437

sw.bb1280:                                        ; preds = %sw.epilog87
  store i64 1, i64* %colons, align 8, !dbg !16438
  br label %for.cond1281, !dbg !16440

for.cond1281:                                     ; preds = %for.inc1286, %sw.bb1280
  %698 = load i8*, i8** %f, align 8, !dbg !16441
  %699 = load i64, i64* %colons, align 8, !dbg !16443
  %arrayidx = getelementptr inbounds i8, i8* %698, i64 %699, !dbg !16441, !ctir !146
  %700 = load i8, i8* %arrayidx, align 1, !dbg !16441
  %conv1282 = sext i8 %700 to i32, !dbg !16441
  %cmp1283 = icmp eq i32 %conv1282, 58, !dbg !16444
  br i1 %cmp1283, label %for.body1285, label %for.end1288, !dbg !16445

for.body1285:                                     ; preds = %for.cond1281
  br label %for.inc1286, !dbg !16446

for.inc1286:                                      ; preds = %for.body1285
  %701 = load i64, i64* %colons, align 8, !dbg !16447
  %inc1287 = add i64 %701, 1, !dbg !16447
  store i64 %inc1287, i64* %colons, align 8, !dbg !16447
  br label %for.cond1281, !dbg !16448, !llvm.loop !16449

for.end1288:                                      ; preds = %for.cond1281
  %702 = load i8*, i8** %f, align 8, !dbg !16451
  %703 = load i64, i64* %colons, align 8, !dbg !16453
  %arrayidx1289 = getelementptr inbounds i8, i8* %702, i64 %703, !dbg !16451, !ctir !146
  %704 = load i8, i8* %arrayidx1289, align 1, !dbg !16451
  %conv1290 = sext i8 %704 to i32, !dbg !16451
  %cmp1291 = icmp ne i32 %conv1290, 122, !dbg !16454
  br i1 %cmp1291, label %if.then1293, label %if.end1294, !dbg !16455

if.then1293:                                      ; preds = %for.end1288
  br label %bad_format, !dbg !16456

if.end1294:                                       ; preds = %for.end1288
  %705 = load i64, i64* %colons, align 8, !dbg !16457
  %706 = load i8*, i8** %f, align 8, !dbg !16458
  %add.ptr1295 = getelementptr inbounds i8, i8* %706, i64 %705, !dbg !16458, !ctir !147
  store i8* %add.ptr1295, i8** %f, align 8, !dbg !16458
  br label %do_z_conversion, !dbg !16459

sw.bb1296:                                        ; preds = %sw.epilog87
  store i64 0, i64* %colons, align 8, !dbg !16460
  br label %do_z_conversion, !dbg !16461

do_z_conversion:                                  ; preds = %sw.bb1296, %if.end1294
  call void @llvm.dbg.label(metadata !16462), !dbg !16463
  %707 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16464
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %707, i32 0, i32 8, !dbg !16466, !ctir !15254
  %708 = load i32, i32* %tm_isdst, align 8, !dbg !16466, !ctir !27
  %cmp1297 = icmp slt i32 %708, 0, !dbg !16467
  br i1 %cmp1297, label %if.then1299, label %if.end1300, !dbg !16468

if.then1299:                                      ; preds = %do_z_conversion
  br label %sw.epilog1435, !dbg !16469

if.end1300:                                       ; preds = %do_z_conversion
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !16470, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.declare(metadata i32* %hour_diff, metadata !16473, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.declare(metadata i32* %min_diff, metadata !16475, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.declare(metadata i32* %sec_diff, metadata !16477, metadata !DIExpression()), !dbg !16478
  %709 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16479
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %709, i32 0, i32 9, !dbg !16480, !ctir !15254
  %710 = load i64, i64* %tm_gmtoff, align 8, !dbg !16480, !ctir !166
  %conv1301 = trunc i64 %710 to i32, !dbg !16479
  store i32 %conv1301, i32* %diff, align 4, !dbg !16481
  %711 = load i32, i32* %diff, align 4, !dbg !16482
  %cmp1302 = icmp slt i32 %711, 0, !dbg !16483
  br i1 %cmp1302, label %lor.end1313, label %lor.rhs1304, !dbg !16484

lor.rhs1304:                                      ; preds = %if.end1300
  %712 = load i32, i32* %diff, align 4, !dbg !16485
  %cmp1305 = icmp eq i32 %712, 0, !dbg !16486
  br i1 %cmp1305, label %land.rhs1307, label %land.end1311, !dbg !16487

land.rhs1307:                                     ; preds = %lor.rhs1304
  %713 = load i8*, i8** %zone, align 8, !dbg !16488
  %714 = load i8, i8* %713, align 1, !dbg !16489, !ctir !147
  %conv1308 = sext i8 %714 to i32, !dbg !16489
  %cmp1309 = icmp eq i32 %conv1308, 45, !dbg !16490
  br label %land.end1311

land.end1311:                                     ; preds = %land.rhs1307, %lor.rhs1304
  %715 = phi i1 [ false, %lor.rhs1304 ], [ %cmp1309, %land.rhs1307 ], !dbg !16491
  br label %lor.end1313, !dbg !16484

lor.end1313:                                      ; preds = %land.end1311, %if.end1300
  %716 = phi i1 [ true, %if.end1300 ], [ %715, %land.end1311 ]
  %frombool1314 = zext i1 %716 to i8, !dbg !16492
  store i8 %frombool1314, i8* %negative_number, align 1, !dbg !16492
  %717 = load i32, i32* %diff, align 4, !dbg !16493
  %div1315 = sdiv i32 %717, 60, !dbg !16494
  %div1316 = sdiv i32 %div1315, 60, !dbg !16495
  store i32 %div1316, i32* %hour_diff, align 4, !dbg !16496
  %718 = load i32, i32* %diff, align 4, !dbg !16497
  %div1317 = sdiv i32 %718, 60, !dbg !16498
  %rem1318 = srem i32 %div1317, 60, !dbg !16499
  store i32 %rem1318, i32* %min_diff, align 4, !dbg !16500
  %719 = load i32, i32* %diff, align 4, !dbg !16501
  %rem1319 = srem i32 %719, 60, !dbg !16502
  store i32 %rem1319, i32* %sec_diff, align 4, !dbg !16503
  %720 = load i64, i64* %colons, align 8, !dbg !16504
  switch i64 %720, label %sw.default1352 [
    i64 0, label %sw.bb1320
    i64 1, label %sw.bb1326
    i64 2, label %sw.bb1332
    i64 3, label %sw.bb1340
  ], !dbg !16505

sw.bb1320:                                        ; preds = %lor.end1313
  br label %do.body1321, !dbg !16506

do.body1321:                                      ; preds = %sw.bb1320
  store i32 5, i32* %digits, align 4, !dbg !16508
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16508
  %721 = load i32, i32* %hour_diff, align 4, !dbg !16508
  %mul1322 = mul nsw i32 %721, 100, !dbg !16508
  %722 = load i32, i32* %min_diff, align 4, !dbg !16508
  %add1323 = add nsw i32 %mul1322, %722, !dbg !16508
  store i32 %add1323, i32* %u_number_value, align 4, !dbg !16508
  br label %do_tz_offset, !dbg !16508

do.end1325:                                       ; No predecessors!
  br label %sw.bb1326, !dbg !16508

sw.bb1326:                                        ; preds = %lor.end1313, %do.end1325
  br label %tz_hh_mm, !dbg !16508

tz_hh_mm:                                         ; preds = %if.then1347, %sw.bb1326
  call void @llvm.dbg.label(metadata !16510), !dbg !16511
  br label %do.body1327, !dbg !16512

do.body1327:                                      ; preds = %tz_hh_mm
  store i32 6, i32* %digits, align 4, !dbg !16513
  store i32 4, i32* %tz_colon_mask, align 4, !dbg !16513
  %723 = load i32, i32* %hour_diff, align 4, !dbg !16513
  %mul1328 = mul nsw i32 %723, 100, !dbg !16513
  %724 = load i32, i32* %min_diff, align 4, !dbg !16513
  %add1329 = add nsw i32 %mul1328, %724, !dbg !16513
  store i32 %add1329, i32* %u_number_value, align 4, !dbg !16513
  br label %do_tz_offset, !dbg !16513

do.end1331:                                       ; No predecessors!
  br label %sw.bb1332, !dbg !16513

sw.bb1332:                                        ; preds = %lor.end1313, %do.end1331
  br label %tz_hh_mm_ss, !dbg !16513

tz_hh_mm_ss:                                      ; preds = %if.then1343, %sw.bb1332
  call void @llvm.dbg.label(metadata !16515), !dbg !16516
  br label %do.body1333, !dbg !16517

do.body1333:                                      ; preds = %tz_hh_mm_ss
  store i32 9, i32* %digits, align 4, !dbg !16518
  store i32 20, i32* %tz_colon_mask, align 4, !dbg !16518
  %725 = load i32, i32* %hour_diff, align 4, !dbg !16518
  %mul1334 = mul nsw i32 %725, 10000, !dbg !16518
  %726 = load i32, i32* %min_diff, align 4, !dbg !16518
  %mul1335 = mul nsw i32 %726, 100, !dbg !16518
  %add1336 = add nsw i32 %mul1334, %mul1335, !dbg !16518
  %727 = load i32, i32* %sec_diff, align 4, !dbg !16518
  %add1337 = add nsw i32 %add1336, %727, !dbg !16518
  store i32 %add1337, i32* %u_number_value, align 4, !dbg !16518
  br label %do_tz_offset, !dbg !16518

do.end1339:                                       ; No predecessors!
  br label %sw.bb1340, !dbg !16518

sw.bb1340:                                        ; preds = %lor.end1313, %do.end1339
  %728 = load i32, i32* %sec_diff, align 4, !dbg !16520
  %cmp1341 = icmp ne i32 %728, 0, !dbg !16522
  br i1 %cmp1341, label %if.then1343, label %if.end1344, !dbg !16523

if.then1343:                                      ; preds = %sw.bb1340
  br label %tz_hh_mm_ss, !dbg !16524

if.end1344:                                       ; preds = %sw.bb1340
  %729 = load i32, i32* %min_diff, align 4, !dbg !16525
  %cmp1345 = icmp ne i32 %729, 0, !dbg !16527
  br i1 %cmp1345, label %if.then1347, label %if.end1348, !dbg !16528

if.then1347:                                      ; preds = %if.end1344
  br label %tz_hh_mm, !dbg !16529

if.end1348:                                       ; preds = %if.end1344
  br label %do.body1349, !dbg !16530

do.body1349:                                      ; preds = %if.end1348
  store i32 3, i32* %digits, align 4, !dbg !16531
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16531
  %730 = load i32, i32* %hour_diff, align 4, !dbg !16531
  store i32 %730, i32* %u_number_value, align 4, !dbg !16531
  br label %do_tz_offset, !dbg !16531

do.end1351:                                       ; No predecessors!
  br label %sw.default1352, !dbg !16531

sw.default1352:                                   ; preds = %lor.end1313, %do.end1351
  br label %bad_format, !dbg !16533

sw.bb1353:                                        ; preds = %sw.epilog87
  %731 = load i8*, i8** %f, align 8, !dbg !16534
  %incdec.ptr1354 = getelementptr inbounds i8, i8* %731, i32 -1, !dbg !16534, !ctir !147
  store i8* %incdec.ptr1354, i8** %f, align 8, !dbg !16534
  br label %sw.default1355, !dbg !16535

sw.default1355:                                   ; preds = %sw.epilog87, %sw.bb1353
  br label %bad_format, !dbg !16535

bad_format:                                       ; preds = %sw.default1355, %sw.default1352, %if.then1293, %if.then1181, %if.then1168, %if.then1152, %if.then1043, %if.then1030, %if.then966, %if.then933, %if.then850, %if.then837, %if.then829, %if.then816, %if.then808, %if.then799, %if.then791, %if.then782, %if.then764, %if.then357, %if.then349, %if.then344, %if.then339, %if.then178, %if.then170, %if.then165, %if.then154, %if.then146, %if.then92
  call void @llvm.dbg.label(metadata !16536), !dbg !16537
  call void @llvm.dbg.declare(metadata i32* %flen, metadata !16538, metadata !DIExpression()), !dbg !16540
  store i32 1, i32* %flen, align 4, !dbg !16541
  br label %for.cond1356, !dbg !16543

for.cond1356:                                     ; preds = %for.inc1363, %bad_format
  %732 = load i8*, i8** %f, align 8, !dbg !16544
  %733 = load i32, i32* %flen, align 4, !dbg !16546
  %sub1357 = sub nsw i32 1, %733, !dbg !16547
  %idxprom = sext i32 %sub1357 to i64, !dbg !16544
  %arrayidx1358 = getelementptr inbounds i8, i8* %732, i64 %idxprom, !dbg !16544, !ctir !146
  %734 = load i8, i8* %arrayidx1358, align 1, !dbg !16544
  %conv1359 = sext i8 %734 to i32, !dbg !16544
  %cmp1360 = icmp ne i32 %conv1359, 37, !dbg !16548
  br i1 %cmp1360, label %for.body1362, label %for.end1365, !dbg !16549

for.body1362:                                     ; preds = %for.cond1356
  br label %for.inc1363, !dbg !16550

for.inc1363:                                      ; preds = %for.body1362
  %735 = load i32, i32* %flen, align 4, !dbg !16551
  %inc1364 = add nsw i32 %735, 1, !dbg !16551
  store i32 %inc1364, i32* %flen, align 4, !dbg !16551
  br label %for.cond1356, !dbg !16552, !llvm.loop !16553

for.end1365:                                      ; preds = %for.cond1356
  br label %do.body1366, !dbg !16555

do.body1366:                                      ; preds = %for.end1365
  call void @llvm.dbg.declare(metadata i64* %_n1367, metadata !16556, metadata !DIExpression()), !dbg !16558
  %736 = load i32, i32* %flen, align 4, !dbg !16558
  %conv1368 = sext i32 %736 to i64, !dbg !16558
  store i64 %conv1368, i64* %_n1367, align 8, !dbg !16558
  call void @llvm.dbg.declare(metadata i64* %_w1369, metadata !16559, metadata !DIExpression()), !dbg !16558
  %737 = load i32, i32* %width.addr, align 4, !dbg !16558
  %cmp1370 = icmp slt i32 %737, 0, !dbg !16558
  br i1 %cmp1370, label %cond.true1372, label %cond.false1373, !dbg !16558

cond.true1372:                                    ; preds = %do.body1366
  br label %cond.end1374, !dbg !16558

cond.false1373:                                   ; preds = %do.body1366
  %738 = load i32, i32* %width.addr, align 4, !dbg !16558
  br label %cond.end1374, !dbg !16558

cond.end1374:                                     ; preds = %cond.false1373, %cond.true1372
  %cond1375 = phi i32 [ 0, %cond.true1372 ], [ %738, %cond.false1373 ], !dbg !16558
  %conv1376 = sext i32 %cond1375 to i64, !dbg !16558
  store i64 %conv1376, i64* %_w1369, align 8, !dbg !16558
  call void @llvm.dbg.declare(metadata i64* %_incr1377, metadata !16560, metadata !DIExpression()), !dbg !16558
  %739 = load i64, i64* %_n1367, align 8, !dbg !16558
  %740 = load i64, i64* %_w1369, align 8, !dbg !16558
  %cmp1378 = icmp ult i64 %739, %740, !dbg !16558
  br i1 %cmp1378, label %cond.true1380, label %cond.false1381, !dbg !16558

cond.true1380:                                    ; preds = %cond.end1374
  %741 = load i64, i64* %_w1369, align 8, !dbg !16558
  br label %cond.end1382, !dbg !16558

cond.false1381:                                   ; preds = %cond.end1374
  %742 = load i64, i64* %_n1367, align 8, !dbg !16558
  br label %cond.end1382, !dbg !16558

cond.end1382:                                     ; preds = %cond.false1381, %cond.true1380
  %cond1383 = phi i64 [ %741, %cond.true1380 ], [ %742, %cond.false1381 ], !dbg !16558
  store i64 %cond1383, i64* %_incr1377, align 8, !dbg !16558
  %743 = load i64, i64* %_incr1377, align 8, !dbg !16561
  %744 = load i64, i64* %maxsize.addr, align 8, !dbg !16561
  %745 = load i64, i64* %i, align 8, !dbg !16561
  %sub1384 = sub i64 %744, %745, !dbg !16561
  %cmp1385 = icmp uge i64 %743, %sub1384, !dbg !16561
  br i1 %cmp1385, label %if.then1387, label %if.end1388, !dbg !16558

if.then1387:                                      ; preds = %cond.end1382
  store i64 0, i64* %retval, align 8, !dbg !16561
  br label %return, !dbg !16561

if.end1388:                                       ; preds = %cond.end1382
  %746 = load i8*, i8** %p, align 8, !dbg !16563
  %tobool1389 = icmp ne i8* %746, null, !dbg !16563
  br i1 %tobool1389, label %if.then1390, label %if.end1431, !dbg !16558

if.then1390:                                      ; preds = %if.end1388
  %747 = load i32, i32* %digits, align 4, !dbg !16565
  %cmp1391 = icmp eq i32 %747, 0, !dbg !16565
  br i1 %cmp1391, label %land.lhs.true1393, label %if.end1410, !dbg !16565

land.lhs.true1393:                                ; preds = %if.then1390
  %748 = load i64, i64* %_n1367, align 8, !dbg !16565
  %749 = load i64, i64* %_w1369, align 8, !dbg !16565
  %cmp1394 = icmp ult i64 %748, %749, !dbg !16565
  br i1 %cmp1394, label %if.then1396, label %if.end1410, !dbg !16568

if.then1396:                                      ; preds = %land.lhs.true1393
  call void @llvm.dbg.declare(metadata i64* %_delta1397, metadata !16569, metadata !DIExpression()), !dbg !16571
  %750 = load i32, i32* %width.addr, align 4, !dbg !16571
  %conv1398 = sext i32 %750 to i64, !dbg !16571
  %751 = load i64, i64* %_n1367, align 8, !dbg !16571
  %sub1399 = sub i64 %conv1398, %751, !dbg !16571
  store i64 %sub1399, i64* %_delta1397, align 8, !dbg !16571
  %752 = load i32, i32* %pad, align 4, !dbg !16572
  %cmp1400 = icmp eq i32 %752, 48, !dbg !16572
  br i1 %cmp1400, label %if.then1405, label %lor.lhs.false1402, !dbg !16572

lor.lhs.false1402:                                ; preds = %if.then1396
  %753 = load i32, i32* %pad, align 4, !dbg !16572
  %cmp1403 = icmp eq i32 %753, 43, !dbg !16572
  br i1 %cmp1403, label %if.then1405, label %if.else1407, !dbg !16571

if.then1405:                                      ; preds = %lor.lhs.false1402, %if.then1396
  %754 = load i8*, i8** %p, align 8, !dbg !16572
  %755 = load i64, i64* %_delta1397, align 8, !dbg !16572
  call void @llvm.memset.p0i8.i64(i8* align 1 %754, i8 48, i64 %755, i1 false), !dbg !16572
  %756 = load i64, i64* %_delta1397, align 8, !dbg !16572
  %757 = load i8*, i8** %p, align 8, !dbg !16572
  %add.ptr1406 = getelementptr inbounds i8, i8* %757, i64 %756, !dbg !16572, !ctir !144
  store i8* %add.ptr1406, i8** %p, align 8, !dbg !16572
  br label %if.end1409, !dbg !16572

if.else1407:                                      ; preds = %lor.lhs.false1402
  %758 = load i8*, i8** %p, align 8, !dbg !16572
  %759 = load i64, i64* %_delta1397, align 8, !dbg !16572
  call void @llvm.memset.p0i8.i64(i8* align 1 %758, i8 32, i64 %759, i1 false), !dbg !16572
  %760 = load i64, i64* %_delta1397, align 8, !dbg !16572
  %761 = load i8*, i8** %p, align 8, !dbg !16572
  %add.ptr1408 = getelementptr inbounds i8, i8* %761, i64 %760, !dbg !16572, !ctir !144
  store i8* %add.ptr1408, i8** %p, align 8, !dbg !16572
  br label %if.end1409

if.end1409:                                       ; preds = %if.else1407, %if.then1405
  br label %if.end1410, !dbg !16571

if.end1410:                                       ; preds = %if.end1409, %land.lhs.true1393, %if.then1390
  %762 = load i8, i8* %to_lowcase, align 1, !dbg !16574
  %tobool1411 = trunc i8 %762 to i1, !dbg !16574
  br i1 %tobool1411, label %if.then1412, label %if.else1417, !dbg !16568

if.then1412:                                      ; preds = %if.end1410
  %763 = load i8*, i8** %p, align 8, !dbg !16574
  %764 = load i8*, i8** %f, align 8, !dbg !16574
  %765 = load i32, i32* %flen, align 4, !dbg !16574
  %sub1413 = sub nsw i32 1, %765, !dbg !16574
  %idxprom1414 = sext i32 %sub1413 to i64, !dbg !16574
  %arrayidx1415 = getelementptr inbounds i8, i8* %764, i64 %idxprom1414, !dbg !16574, !ctir !146
  %766 = load i64, i64* %_n1367, align 8, !dbg !16574
  %call1416 = call i8* @memcpy_lowcase(i8* %763, i8* %arrayidx1415, i64 %766), !dbg !16574
  br label %if.end1429, !dbg !16574

if.else1417:                                      ; preds = %if.end1410
  %767 = load i8, i8* %to_uppcase, align 1, !dbg !16576
  %tobool1418 = trunc i8 %767 to i1, !dbg !16576
  br i1 %tobool1418, label %if.then1419, label %if.else1424, !dbg !16574

if.then1419:                                      ; preds = %if.else1417
  %768 = load i8*, i8** %p, align 8, !dbg !16576
  %769 = load i8*, i8** %f, align 8, !dbg !16576
  %770 = load i32, i32* %flen, align 4, !dbg !16576
  %sub1420 = sub nsw i32 1, %770, !dbg !16576
  %idxprom1421 = sext i32 %sub1420 to i64, !dbg !16576
  %arrayidx1422 = getelementptr inbounds i8, i8* %769, i64 %idxprom1421, !dbg !16576, !ctir !146
  %771 = load i64, i64* %_n1367, align 8, !dbg !16576
  %call1423 = call i8* @memcpy_uppcase(i8* %768, i8* %arrayidx1422, i64 %771), !dbg !16576
  br label %if.end1428, !dbg !16576

if.else1424:                                      ; preds = %if.else1417
  %772 = load i8*, i8** %p, align 8, !dbg !16576
  %773 = load i8*, i8** %f, align 8, !dbg !16576
  %774 = load i32, i32* %flen, align 4, !dbg !16576
  %sub1425 = sub nsw i32 1, %774, !dbg !16576
  %idxprom1426 = sext i32 %sub1425 to i64, !dbg !16576
  %arrayidx1427 = getelementptr inbounds i8, i8* %773, i64 %idxprom1426, !dbg !16576, !ctir !146
  %775 = load i64, i64* %_n1367, align 8, !dbg !16576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %772, i8* align 1 %arrayidx1427, i64 %775, i1 false), !dbg !16576
  br label %if.end1428

if.end1428:                                       ; preds = %if.else1424, %if.then1419
  br label %if.end1429

if.end1429:                                       ; preds = %if.end1428, %if.then1412
  %776 = load i64, i64* %_n1367, align 8, !dbg !16568
  %777 = load i8*, i8** %p, align 8, !dbg !16568
  %add.ptr1430 = getelementptr inbounds i8, i8* %777, i64 %776, !dbg !16568, !ctir !144
  store i8* %add.ptr1430, i8** %p, align 8, !dbg !16568
  br label %if.end1431, !dbg !16568

if.end1431:                                       ; preds = %if.end1429, %if.end1388
  %778 = load i64, i64* %_incr1377, align 8, !dbg !16558
  %779 = load i64, i64* %i, align 8, !dbg !16558
  %add1432 = add i64 %779, %778, !dbg !16558
  store i64 %add1432, i64* %i, align 8, !dbg !16558
  br label %do.end1434, !dbg !16558

do.end1434:                                       ; preds = %if.end1431
  br label %sw.epilog1435, !dbg !16578

sw.epilog1435:                                    ; preds = %do.end1434, %if.then1299, %do.end1279, %do.end1018, %do.end927, %do.end914, %do.end760, %if.end316, %do.end232, %do.end142
  br label %for.inc1436, !dbg !16579

for.inc1436:                                      ; preds = %sw.epilog1435, %do.end
  store i32 -1, i32* %width.addr, align 4, !dbg !16580
  %780 = load i8*, i8** %f, align 8, !dbg !16581
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %780, i32 1, !dbg !16581, !ctir !147
  store i8* %incdec.ptr1437, i8** %f, align 8, !dbg !16581
  br label %for.cond, !dbg !16582, !llvm.loop !16583

for.end1438:                                      ; preds = %for.cond
  %781 = load i8*, i8** %p, align 8, !dbg !16585
  %tobool1439 = icmp ne i8* %781, null, !dbg !16585
  br i1 %tobool1439, label %land.lhs.true1440, label %if.end1444, !dbg !16587

land.lhs.true1440:                                ; preds = %for.end1438
  %782 = load i64, i64* %maxsize.addr, align 8, !dbg !16588
  %cmp1441 = icmp ne i64 %782, 0, !dbg !16589
  br i1 %cmp1441, label %if.then1443, label %if.end1444, !dbg !16590

if.then1443:                                      ; preds = %land.lhs.true1440
  %783 = load i8*, i8** %p, align 8, !dbg !16591
  store i8 0, i8* %783, align 1, !dbg !16592, !ctir !144
  br label %if.end1444, !dbg !16593

if.end1444:                                       ; preds = %if.then1443, %land.lhs.true1440, %for.end1438
  %784 = load i64, i64* %i, align 8, !dbg !16594
  store i64 %784, i64* %retval, align 8, !dbg !16595
  br label %return, !dbg !16595

return:                                           ; preds = %if.end1444, %if.then1387, %if.then1241, %if.then990, %if.then886, %if.then722, %if.then665, %if.then603, %if.then579, %if.then544, %if.then506, %if.then456, %if.then271, %if.then201, %if.then114, %if.then26
  %785 = load i64, i64* %retval, align 8, !dbg !16596
  ret i64 %785, !dbg !16596
}

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_lowcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16597 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16598, metadata !DIExpression()), !dbg !16599
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16600, metadata !DIExpression()), !dbg !16601
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16602, metadata !DIExpression()), !dbg !16603
  br label %while.cond, !dbg !16604

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16605
  %dec = add i64 %0, -1, !dbg !16605
  store i64 %dec, i64* %len.addr, align 8, !dbg !16605
  %cmp = icmp ugt i64 %0, 0, !dbg !16606
  br i1 %cmp, label %while.body, label %while.end, !dbg !16604

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16607
  %2 = load i64, i64* %len.addr, align 8, !dbg !16607
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16607, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16607
  %conv = zext i8 %3 to i32, !dbg !16607
  %call = call i32 @tolower(i32 %conv) #16, !dbg !16607
  %conv1 = trunc i32 %call to i8, !dbg !16607
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16608
  %5 = load i64, i64* %len.addr, align 8, !dbg !16609
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16608, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16610
  br label %while.cond, !dbg !16604, !llvm.loop !16611

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16612
  ret i8* %6, !dbg !16613
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_uppcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16614 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16615, metadata !DIExpression()), !dbg !16616
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16617, metadata !DIExpression()), !dbg !16618
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16619, metadata !DIExpression()), !dbg !16620
  br label %while.cond, !dbg !16621

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16622
  %dec = add i64 %0, -1, !dbg !16622
  store i64 %dec, i64* %len.addr, align 8, !dbg !16622
  %cmp = icmp ugt i64 %0, 0, !dbg !16623
  br i1 %cmp, label %while.body, label %while.end, !dbg !16621

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16624
  %2 = load i64, i64* %len.addr, align 8, !dbg !16624
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16624, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16624
  %conv = zext i8 %3 to i32, !dbg !16624
  %call = call i32 @toupper(i32 %conv) #16, !dbg !16624
  %conv1 = trunc i32 %call to i8, !dbg !16624
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16625
  %5 = load i64, i64* %len.addr, align 8, !dbg !16626
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16625, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16627
  br label %while.cond, !dbg !16621, !llvm.loop !16628

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16629
  ret i8* %6, !dbg !16630
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iso_week_days(i32 %yday, i32 %wday) #0 !dbg !16631 {
entry:
  %yday.addr = alloca i32, align 4
  %wday.addr = alloca i32, align 4
  %big_enough_multiple_of_7 = alloca i32, align 4, !ctir !27
  store i32 %yday, i32* %yday.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yday.addr, metadata !16634, metadata !DIExpression()), !dbg !16635
  store i32 %wday, i32* %wday.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wday.addr, metadata !16636, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.declare(metadata i32* %big_enough_multiple_of_7, metadata !16638, metadata !DIExpression()), !dbg !16639
  store i32 378, i32* %big_enough_multiple_of_7, align 4, !dbg !16639
  %0 = load i32, i32* %yday.addr, align 4, !dbg !16640
  %1 = load i32, i32* %yday.addr, align 4, !dbg !16641
  %2 = load i32, i32* %wday.addr, align 4, !dbg !16642
  %sub = sub nsw i32 %1, %2, !dbg !16643
  %add = add nsw i32 %sub, 4, !dbg !16644
  %3 = load i32, i32* %big_enough_multiple_of_7, align 4, !dbg !16645
  %add1 = add nsw i32 %add, %3, !dbg !16646
  %rem = srem i32 %add1, 7, !dbg !16647
  %sub2 = sub nsw i32 %0, %rem, !dbg !16648
  %add3 = add nsw i32 %sub2, 4, !dbg !16649
  %sub4 = sub nsw i32 %add3, 1, !dbg !16650
  ret i32 %sub4, !dbg !16651
}

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #5

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #0 !dbg !16652 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !146
  %base = alloca i8*, align 8, !ctir !146
  store i8* %argv0, i8** %argv0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !16653, metadata !DIExpression()), !dbg !16654
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !16655, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.declare(metadata i8** %base, metadata !16657, metadata !DIExpression()), !dbg !16658
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !16659
  %cmp = icmp eq i8* %0, null, !dbg !16661
  br i1 %cmp, label %if.then, label %if.end, !dbg !16662

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16663
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.368, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !16665
  call void @abort() #15, !dbg !16666
  unreachable, !dbg !16666

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !16667
  %call1 = call i8* @strrchr(i8* %2, i32 47) #16, !dbg !16668
  store i8* %call1, i8** %slash, align 8, !dbg !16669
  %3 = load i8*, i8** %slash, align 8, !dbg !16670
  %cmp2 = icmp ne i8* %3, null, !dbg !16671
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !16670

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !16672
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !16673, !ctir !147
  br label %cond.end, !dbg !16670

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !16674
  br label %cond.end, !dbg !16670

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !16670
  store i8* %cond, i8** %base, align 8, !dbg !16675
  %6 = load i8*, i8** %base, align 8, !dbg !16676
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !16678
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !16679
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !16679
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16679
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !16680
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !16681

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !16682
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !16683, !ctir !147
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.369, i64 0, i64 0), i64 7) #16, !dbg !16684
  %cmp6 = icmp eq i32 %call5, 0, !dbg !16685
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !16686

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !16687
  store i8* %9, i8** %argv0.addr, align 8, !dbg !16689
  %10 = load i8*, i8** %base, align 8, !dbg !16690
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.370, i64 0, i64 0), i64 3) #16, !dbg !16692
  %cmp9 = icmp eq i32 %call8, 0, !dbg !16693
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !16694

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !16695
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !16697, !ctir !147
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !16698
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !16699
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !16700
  br label %if.end12, !dbg !16701

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !16702

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !16703
  store i8* %13, i8** @program_name, align 8, !dbg !16704
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !16705
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !16706
  ret void, !dbg !16707
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #0 !dbg !16708 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !27
  %p = alloca %struct.quoting_options*, align 8, !ctir !1376
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16711, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16713, metadata !DIExpression()), !dbg !16714
  %call = call i32* @__errno_location() #17, !dbg !16715
  %0 = load i32, i32* %call, align 4, !dbg !16715, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !16714
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !16716, metadata !DIExpression()), !dbg !16717
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16718
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !16718
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16718

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16719
  br label %cond.end, !dbg !16718

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !16718
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !16718
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !16720
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !16720
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !16717
  %5 = load i32, i32* %e, align 4, !dbg !16721
  %call2 = call i32* @__errno_location() #17, !dbg !16722
  store i32 %5, i32* %call2, align 4, !dbg !16723, !ctir !27
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !16724
  ret %struct.quoting_options* %6, !dbg !16725
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #0 !dbg !16726 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16729, metadata !DIExpression()), !dbg !16730
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16731
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !16731
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16731

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16732
  br label %cond.end, !dbg !16731

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16731

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !16731
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !16733, !ctir !1388
  %2 = load i32, i32* %style, align 8, !dbg !16733, !ctir !95
  ret i32 %2, !dbg !16734
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #0 !dbg !16735 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16738, metadata !DIExpression()), !dbg !16739
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !16740, metadata !DIExpression()), !dbg !16741
  %0 = load i32, i32* %s.addr, align 4, !dbg !16742
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16743
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !16743
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16743

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16744
  br label %cond.end, !dbg !16743

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16743

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !16743
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !16745, !ctir !1377
  store i32 %0, i32* %style, align 8, !dbg !16746, !ctir !95
  ret void, !dbg !16747
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #0 !dbg !16748 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !725
  %p = alloca i32*, align 8, !ctir !1386
  %shift = alloca i32, align 4, !ctir !27
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16751, metadata !DIExpression()), !dbg !16752
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !16753, metadata !DIExpression()), !dbg !16754
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16755, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !16757, metadata !DIExpression()), !dbg !16758
  %0 = load i8, i8* %c.addr, align 1, !dbg !16759
  store i8 %0, i8* %uc, align 1, !dbg !16758
  call void @llvm.dbg.declare(metadata i32** %p, metadata !16760, metadata !DIExpression()), !dbg !16761
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16762
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !16762
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16762

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16763
  br label %cond.end, !dbg !16762

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !16762
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !16764, !ctir !1377
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !16765, !ctir !1383
  %3 = load i8, i8* %uc, align 1, !dbg !16766
  %conv = zext i8 %3 to i64, !dbg !16766
  %div = udiv i64 %conv, 32, !dbg !16767
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !16768, !ctir !6
  store i32* %add.ptr, i32** %p, align 8, !dbg !16761
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !16769, metadata !DIExpression()), !dbg !16770
  %4 = load i8, i8* %uc, align 1, !dbg !16771
  %conv1 = zext i8 %4 to i64, !dbg !16771
  %rem = urem i64 %conv1, 32, !dbg !16772
  %conv2 = trunc i64 %rem to i32, !dbg !16771
  store i32 %conv2, i32* %shift, align 4, !dbg !16770
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16773, metadata !DIExpression()), !dbg !16774
  %5 = load i32*, i32** %p, align 8, !dbg !16775
  %6 = load i32, i32* %5, align 4, !dbg !16776, !ctir !6
  %7 = load i32, i32* %shift, align 4, !dbg !16777
  %shr = lshr i32 %6, %7, !dbg !16778
  %and = and i32 %shr, 1, !dbg !16779
  store i32 %and, i32* %r, align 4, !dbg !16774
  %8 = load i32, i32* %i.addr, align 4, !dbg !16780
  %and3 = and i32 %8, 1, !dbg !16781
  %9 = load i32, i32* %r, align 4, !dbg !16782
  %xor = xor i32 %and3, %9, !dbg !16783
  %10 = load i32, i32* %shift, align 4, !dbg !16784
  %shl = shl i32 %xor, %10, !dbg !16785
  %11 = load i32*, i32** %p, align 8, !dbg !16786
  %12 = load i32, i32* %11, align 4, !dbg !16787, !ctir !6
  %xor4 = xor i32 %12, %shl, !dbg !16787
  store i32 %xor4, i32* %11, align 4, !dbg !16787, !ctir !6
  %13 = load i32, i32* %r, align 4, !dbg !16788
  ret i32 %13, !dbg !16789
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #0 !dbg !16790 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16793, metadata !DIExpression()), !dbg !16794
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16795, metadata !DIExpression()), !dbg !16796
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16797, metadata !DIExpression()), !dbg !16798
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16799
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !16799
  br i1 %tobool, label %if.end, label %if.then, !dbg !16801

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !16802
  br label %if.end, !dbg !16803

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16804
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !16805, !ctir !1377
  %2 = load i32, i32* %flags, align 4, !dbg !16805, !ctir !27
  store i32 %2, i32* %r, align 4, !dbg !16806
  %3 = load i32, i32* %i.addr, align 4, !dbg !16807
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16808
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !16809, !ctir !1377
  store i32 %3, i32* %flags1, align 4, !dbg !16810, !ctir !27
  %5 = load i32, i32* %r, align 4, !dbg !16811
  ret i32 %5, !dbg !16812
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #0 !dbg !16813 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16816, metadata !DIExpression()), !dbg !16817
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16818, metadata !DIExpression()), !dbg !16819
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16820, metadata !DIExpression()), !dbg !16821
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16822
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !16822
  br i1 %tobool, label %if.end, label %if.then, !dbg !16824

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !16825
  br label %if.end, !dbg !16826

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16827
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !16828, !ctir !1377
  store i32 10, i32* %style, align 8, !dbg !16829, !ctir !95
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !16830
  %tobool1 = icmp ne i8* %2, null, !dbg !16830
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !16832

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !16833
  %tobool2 = icmp ne i8* %3, null, !dbg !16833
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !16834

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #15, !dbg !16835
  unreachable, !dbg !16835

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !16836
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16837
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !16838, !ctir !1377
  store i8* %4, i8** %left_quote5, align 8, !dbg !16839, !ctir !146
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !16840
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16841
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !16842, !ctir !1377
  store i8* %6, i8** %right_quote6, align 8, !dbg !16843, !ctir !146
  ret void, !dbg !16844
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !16845 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1387
  %e = alloca i32, align 4, !ctir !27
  %r = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16848, metadata !DIExpression()), !dbg !16849
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !16850, metadata !DIExpression()), !dbg !16851
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16852, metadata !DIExpression()), !dbg !16853
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16854, metadata !DIExpression()), !dbg !16855
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !16856, metadata !DIExpression()), !dbg !16857
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !16858, metadata !DIExpression()), !dbg !16859
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16860
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !16860
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16860

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !16861
  br label %cond.end, !dbg !16860

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16860

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !16860
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !16859
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16862, metadata !DIExpression()), !dbg !16863
  %call = call i32* @__errno_location() #17, !dbg !16864
  %2 = load i32, i32* %call, align 4, !dbg !16864, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !16863
  call void @llvm.dbg.declare(metadata i64* %r, metadata !16865, metadata !DIExpression()), !dbg !16866
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !16867
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !16868
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !16869
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !16870
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !16871
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !16872, !ctir !1388
  %8 = load i32, i32* %style, align 8, !dbg !16872, !ctir !95
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !16873
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !16874, !ctir !1388
  %10 = load i32, i32* %flags, align 4, !dbg !16874, !ctir !27
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !16875
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !16876, !ctir !1388
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !16875, !ctir !1389
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !16877
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !16878, !ctir !1388
  %13 = load i8*, i8** %left_quote, align 8, !dbg !16878, !ctir !146
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !16879
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !16880, !ctir !1388
  %15 = load i8*, i8** %right_quote, align 8, !dbg !16880, !ctir !146
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !16881
  store i64 %call1, i64* %r, align 8, !dbg !16866
  %16 = load i32, i32* %e, align 4, !dbg !16882
  %call2 = call i32* @__errno_location() #17, !dbg !16883
  store i32 %16, i32* %call2, align 4, !dbg !16884, !ctir !27
  %17 = load i64, i64* %r, align 8, !dbg !16885
  ret i64 %17, !dbg !16886
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #0 !dbg !16887 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %orig_buffersize = alloca i64, align 8, !ctir !149
  %quote_string = alloca i8*, align 8, !ctir !146
  %quote_string_len = alloca i64, align 8, !ctir !149
  %backslash_escapes = alloca i8, align 1, !ctir !141
  %unibyte_locale = alloca i8, align 1, !ctir !141
  %elide_outer_quotes = alloca i8, align 1, !ctir !141
  %pending_shell_escape_end = alloca i8, align 1, !ctir !141
  %encountered_single_quote = alloca i8, align 1, !ctir !141
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %c = alloca i8, align 1, !ctir !725
  %esc = alloca i8, align 1, !ctir !725
  %is_right_quote = alloca i8, align 1, !ctir !141
  %escaping = alloca i8, align 1, !ctir !141
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %m = alloca i64, align 8, !ctir !149
  %printable = alloca i8, align 1, !ctir !141
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1395
  %w = alloca i32, align 4, !ctir !751
  %bytes = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ilim = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !16890, metadata !DIExpression()), !dbg !16891
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !16892, metadata !DIExpression()), !dbg !16893
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16894, metadata !DIExpression()), !dbg !16895
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !16896, metadata !DIExpression()), !dbg !16897
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !16898, metadata !DIExpression()), !dbg !16899
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16900, metadata !DIExpression()), !dbg !16901
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !16902, metadata !DIExpression()), !dbg !16903
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !16904, metadata !DIExpression()), !dbg !16905
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !16906, metadata !DIExpression()), !dbg !16907
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16908, metadata !DIExpression()), !dbg !16909
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16910, metadata !DIExpression()), !dbg !16911
  store i64 0, i64* %len, align 8, !dbg !16911
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !16912, metadata !DIExpression()), !dbg !16913
  store i64 0, i64* %orig_buffersize, align 8, !dbg !16913
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !16914, metadata !DIExpression()), !dbg !16915
  store i8* null, i8** %quote_string, align 8, !dbg !16915
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !16916, metadata !DIExpression()), !dbg !16917
  store i64 0, i64* %quote_string_len, align 8, !dbg !16917
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !16918, metadata !DIExpression()), !dbg !16919
  store i8 0, i8* %backslash_escapes, align 1, !dbg !16919
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !16920, metadata !DIExpression()), !dbg !16921
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !16922
  %cmp = icmp eq i64 %call, 1, !dbg !16923
  %frombool = zext i1 %cmp to i8, !dbg !16921
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !16921
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !16924, metadata !DIExpression()), !dbg !16925
  %0 = load i32, i32* %flags.addr, align 4, !dbg !16926
  %and = and i32 %0, 2, !dbg !16927
  %cmp1 = icmp ne i32 %and, 0, !dbg !16928
  %frombool2 = zext i1 %cmp1 to i8, !dbg !16925
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !16925
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !16929, metadata !DIExpression()), !dbg !16930
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !16930
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !16931, metadata !DIExpression()), !dbg !16932
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !16932
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !16933, metadata !DIExpression()), !dbg !16934
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !16934
  br label %process_input, !dbg !16935

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !16936), !dbg !16937
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !16938
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !16939

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !16940
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !16942
  br label %sw.bb3, !dbg !16943

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !16944
  %tobool = trunc i8 %2 to i1, !dbg !16944
  br i1 %tobool, label %if.end6, label %if.then, !dbg !16946

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !16947

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !16948
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !16948
  %cmp4 = icmp ult i64 %3, %4, !dbg !16948
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !16951

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !16948
  %6 = load i64, i64* %len, align 8, !dbg !16948
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !16948, !ctir !143
  store i8 34, i8* %arrayidx, align 1, !dbg !16948
  br label %if.end, !dbg !16948

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !16951
  %inc = add i64 %7, 1, !dbg !16951
  store i64 %inc, i64* %len, align 8, !dbg !16951
  br label %do.end, !dbg !16951

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !16951

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !16952
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.395, i64 0, i64 0), i8** %quote_string, align 8, !dbg !16953
  store i64 1, i64* %quote_string_len, align 8, !dbg !16954
  br label %sw.epilog, !dbg !16955

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !16956
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !16957
  br label %sw.epilog, !dbg !16958

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !16959
  %cmp9 = icmp ne i32 %8, 10, !dbg !16962
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !16963

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !16964
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.396, i64 0, i64 0), i32 %9), !dbg !16966
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !16967
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !16968
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.397, i64 0, i64 0), i32 %10), !dbg !16969
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !16970
  br label %if.end13, !dbg !16971

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !16972
  %tobool14 = trunc i8 %11 to i1, !dbg !16972
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !16974

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !16975
  store i8* %12, i8** %quote_string, align 8, !dbg !16977
  br label %for.cond, !dbg !16978

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !16979
  %14 = load i8, i8* %13, align 1, !dbg !16981, !ctir !147
  %tobool16 = icmp ne i8 %14, 0, !dbg !16982
  br i1 %tobool16, label %for.body, label %for.end, !dbg !16982

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !16983

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !16984
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !16984
  %cmp18 = icmp ult i64 %15, %16, !dbg !16984
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !16987

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !16984
  %18 = load i8, i8* %17, align 1, !dbg !16984, !ctir !147
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !16984
  %20 = load i64, i64* %len, align 8, !dbg !16984
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !16984, !ctir !143
  store i8 %18, i8* %arrayidx20, align 1, !dbg !16984
  br label %if.end21, !dbg !16984

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !16987
  %inc22 = add i64 %21, 1, !dbg !16987
  store i64 %inc22, i64* %len, align 8, !dbg !16987
  br label %do.end23, !dbg !16987

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !16987

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !16988
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !16988, !ctir !147
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !16988
  br label %for.cond, !dbg !16989, !llvm.loop !16990

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !16991

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !16992
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !16993
  store i8* %23, i8** %quote_string, align 8, !dbg !16994
  %24 = load i8*, i8** %quote_string, align 8, !dbg !16995
  %call25 = call i64 @strlen(i8* %24) #16, !dbg !16996
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !16997
  br label %sw.epilog, !dbg !16998

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !16999
  br label %sw.bb27, !dbg !17000

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17001
  br label %sw.bb28, !dbg !17002

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17003
  %tobool29 = trunc i8 %25 to i1, !dbg !17003
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !17005

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17006
  br label %if.end31, !dbg !17007

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !17008

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !17009
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17010
  %tobool33 = trunc i8 %26 to i1, !dbg !17010
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !17012

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !17013

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !17014
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !17014
  %cmp36 = icmp ult i64 %27, %28, !dbg !17014
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !17017

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !17014
  %30 = load i64, i64* %len, align 8, !dbg !17014
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !17014, !ctir !143
  store i8 39, i8* %arrayidx38, align 1, !dbg !17014
  br label %if.end39, !dbg !17014

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !17017
  %inc40 = add i64 %31, 1, !dbg !17017
  store i64 %inc40, i64* %len, align 8, !dbg !17017
  br label %do.end41, !dbg !17017

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !17017

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.397, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17018
  store i64 1, i64* %quote_string_len, align 8, !dbg !17019
  br label %sw.epilog, !dbg !17020

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17021
  br label %sw.epilog, !dbg !17022

sw.default:                                       ; preds = %process_input
  call void @abort() #15, !dbg !17023
  unreachable, !dbg !17023

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !17024
  br label %for.cond44, !dbg !17026

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !17027
  %cmp45 = icmp eq i64 %32, -1, !dbg !17029
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !17027

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !17030
  %34 = load i64, i64* %i, align 8, !dbg !17031
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !17030, !ctir !146
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !17030
  %conv = sext i8 %35 to i32, !dbg !17030
  %cmp47 = icmp eq i32 %conv, 0, !dbg !17032
  %conv48 = zext i1 %cmp47 to i32, !dbg !17032
  br label %cond.end, !dbg !17027

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !17033
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !17034
  %cmp49 = icmp eq i64 %36, %37, !dbg !17035
  %conv50 = zext i1 %cmp49 to i32, !dbg !17035
  br label %cond.end, !dbg !17027

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !17027
  %tobool51 = icmp ne i32 %cond, 0, !dbg !17036
  %lnot = xor i1 %tobool51, true, !dbg !17036
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !17037

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !17038, metadata !DIExpression()), !dbg !17040
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !17041, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !17043, metadata !DIExpression()), !dbg !17044
  store i8 0, i8* %is_right_quote, align 1, !dbg !17044
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !17045, metadata !DIExpression()), !dbg !17046
  store i8 0, i8* %escaping, align 1, !dbg !17046
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !17047, metadata !DIExpression()), !dbg !17048
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !17048
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !17049
  %tobool53 = trunc i8 %38 to i1, !dbg !17049
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !17051

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !17052
  %cmp55 = icmp ne i32 %39, 2, !dbg !17053
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !17054

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !17055
  %tobool58 = icmp ne i64 %40, 0, !dbg !17055
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !17056

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !17057
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !17058
  %add = add i64 %41, %42, !dbg !17059
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !17060
  %cmp60 = icmp eq i64 %43, -1, !dbg !17061
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !17062

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !17063
  %cmp63 = icmp ult i64 1, %44, !dbg !17064
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !17060

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !17065
  %call66 = call i64 @strlen(i8* %45) #16, !dbg !17066
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !17067
  br label %cond.end68, !dbg !17060

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !17068
  br label %cond.end68, !dbg !17060

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !17060
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !17069
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !17070

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !17071
  %48 = load i64, i64* %i, align 8, !dbg !17072
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !17073, !ctir !147
  %49 = load i8*, i8** %quote_string, align 8, !dbg !17074
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !17075
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #16, !dbg !17076
  %cmp74 = icmp eq i32 %call73, 0, !dbg !17077
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !17078

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17079
  %tobool77 = trunc i8 %51 to i1, !dbg !17079
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !17082

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !17083

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !17084
  br label %if.end80, !dbg !17085

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !17086
  %53 = load i64, i64* %i, align 8, !dbg !17087
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !17086, !ctir !146
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !17086
  store i8 %54, i8* %c, align 1, !dbg !17088
  %55 = load i8, i8* %c, align 1, !dbg !17089
  %conv82 = zext i8 %55 to i32, !dbg !17089
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !17090

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !17091
  %tobool84 = trunc i8 %56 to i1, !dbg !17091
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !17094

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !17095

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17097
  %tobool87 = trunc i8 %57 to i1, !dbg !17097
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !17100

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !17097

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !17100
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !17101
  %cmp90 = icmp eq i32 %58, 2, !dbg !17101
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !17101

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17101
  %tobool93 = trunc i8 %59 to i1, !dbg !17101
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !17100

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !17103

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !17105
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !17105
  %cmp96 = icmp ult i64 %60, %61, !dbg !17105
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !17108

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !17105
  %63 = load i64, i64* %len, align 8, !dbg !17105
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !17105, !ctir !143
  store i8 39, i8* %arrayidx99, align 1, !dbg !17105
  br label %if.end100, !dbg !17105

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !17108
  %inc101 = add i64 %64, 1, !dbg !17108
  store i64 %inc101, i64* %len, align 8, !dbg !17108
  br label %do.end102, !dbg !17108

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !17103

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !17109
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !17109
  %cmp104 = icmp ult i64 %65, %66, !dbg !17109
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !17112

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !17109
  %68 = load i64, i64* %len, align 8, !dbg !17109
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !17109, !ctir !143
  store i8 36, i8* %arrayidx107, align 1, !dbg !17109
  br label %if.end108, !dbg !17109

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !17112
  %inc109 = add i64 %69, 1, !dbg !17112
  store i64 %inc109, i64* %len, align 8, !dbg !17112
  br label %do.end110, !dbg !17112

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !17103

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !17113
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !17113
  %cmp112 = icmp ult i64 %70, %71, !dbg !17113
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !17116

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !17113
  %73 = load i64, i64* %len, align 8, !dbg !17113
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !17113, !ctir !143
  store i8 39, i8* %arrayidx115, align 1, !dbg !17113
  br label %if.end116, !dbg !17113

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !17116
  %inc117 = add i64 %74, 1, !dbg !17116
  store i64 %inc117, i64* %len, align 8, !dbg !17116
  br label %do.end118, !dbg !17116

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17103
  br label %if.end119, !dbg !17103

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !17100

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !17117
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !17117
  %cmp121 = icmp ult i64 %75, %76, !dbg !17117
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !17120

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !17117
  %78 = load i64, i64* %len, align 8, !dbg !17117
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !17117, !ctir !143
  store i8 92, i8* %arrayidx124, align 1, !dbg !17117
  br label %if.end125, !dbg !17117

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !17120
  %inc126 = add i64 %79, 1, !dbg !17120
  store i64 %inc126, i64* %len, align 8, !dbg !17120
  br label %do.end127, !dbg !17120

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !17100

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !17121
  %cmp129 = icmp ne i32 %80, 2, !dbg !17123
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !17124

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !17125
  %add132 = add i64 %81, 1, !dbg !17126
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !17127
  %cmp133 = icmp ult i64 %add132, %82, !dbg !17128
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !17129

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !17130
  %84 = load i64, i64* %i, align 8, !dbg !17131
  %add136 = add i64 %84, 1, !dbg !17132
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !17130, !ctir !146
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !17130
  %conv138 = sext i8 %85 to i32, !dbg !17130
  %cmp139 = icmp sle i32 48, %conv138, !dbg !17133
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !17134

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !17135
  %87 = load i64, i64* %i, align 8, !dbg !17136
  %add142 = add i64 %87, 1, !dbg !17137
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !17135, !ctir !146
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !17135
  %conv144 = sext i8 %88 to i32, !dbg !17135
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !17138
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !17139

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !17140

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !17142
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !17142
  %cmp149 = icmp ult i64 %89, %90, !dbg !17142
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !17145

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !17142
  %92 = load i64, i64* %len, align 8, !dbg !17142
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !17142, !ctir !143
  store i8 48, i8* %arrayidx152, align 1, !dbg !17142
  br label %if.end153, !dbg !17142

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !17145
  %inc154 = add i64 %93, 1, !dbg !17145
  store i64 %inc154, i64* %len, align 8, !dbg !17145
  br label %do.end155, !dbg !17145

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !17146

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !17147
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !17147
  %cmp157 = icmp ult i64 %94, %95, !dbg !17147
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !17150

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !17147
  %97 = load i64, i64* %len, align 8, !dbg !17147
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !17147, !ctir !143
  store i8 48, i8* %arrayidx160, align 1, !dbg !17147
  br label %if.end161, !dbg !17147

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !17150
  %inc162 = add i64 %98, 1, !dbg !17150
  store i64 %inc162, i64* %len, align 8, !dbg !17150
  br label %do.end163, !dbg !17150

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !17151

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !17152
  br label %if.end169, !dbg !17153

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !17154
  %and165 = and i32 %99, 1, !dbg !17156
  %tobool166 = icmp ne i32 %and165, 0, !dbg !17156
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !17157

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !17158

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !17159

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !17160
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !17161

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17162
  %tobool172 = trunc i8 %101 to i1, !dbg !17162
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !17165

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !17166

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !17167

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !17168
  %and176 = and i32 %102, 4, !dbg !17170
  %tobool177 = icmp ne i32 %and176, 0, !dbg !17170
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !17171

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !17172
  %add179 = add i64 %103, 2, !dbg !17173
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !17174
  %cmp180 = icmp ult i64 %add179, %104, !dbg !17175
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !17176

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !17177
  %106 = load i64, i64* %i, align 8, !dbg !17178
  %add183 = add i64 %106, 1, !dbg !17179
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !17177, !ctir !146
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !17177
  %conv185 = sext i8 %107 to i32, !dbg !17177
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !17180
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !17181

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !17182
  %109 = load i64, i64* %i, align 8, !dbg !17183
  %add189 = add i64 %109, 2, !dbg !17184
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !17182, !ctir !146
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !17182
  %conv191 = sext i8 %110 to i32, !dbg !17182
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !17185

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17186
  %tobool193 = trunc i8 %111 to i1, !dbg !17186
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !17189

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !17190

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !17191
  %113 = load i64, i64* %i, align 8, !dbg !17192
  %add196 = add i64 %113, 2, !dbg !17193
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !17191, !ctir !146
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !17191
  store i8 %114, i8* %c, align 1, !dbg !17194
  %115 = load i64, i64* %i, align 8, !dbg !17195
  %add198 = add i64 %115, 2, !dbg !17195
  store i64 %add198, i64* %i, align 8, !dbg !17195
  br label %do.body199, !dbg !17196

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !17197
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !17197
  %cmp200 = icmp ult i64 %116, %117, !dbg !17197
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !17200

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !17197
  %119 = load i64, i64* %len, align 8, !dbg !17197
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !17197, !ctir !143
  store i8 63, i8* %arrayidx203, align 1, !dbg !17197
  br label %if.end204, !dbg !17197

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !17200
  %inc205 = add i64 %120, 1, !dbg !17200
  store i64 %inc205, i64* %len, align 8, !dbg !17200
  br label %do.end206, !dbg !17200

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !17201

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !17202
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !17202
  %cmp208 = icmp ult i64 %121, %122, !dbg !17202
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !17205

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !17202
  %124 = load i64, i64* %len, align 8, !dbg !17202
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !17202, !ctir !143
  store i8 34, i8* %arrayidx211, align 1, !dbg !17202
  br label %if.end212, !dbg !17202

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !17205
  %inc213 = add i64 %125, 1, !dbg !17205
  store i64 %inc213, i64* %len, align 8, !dbg !17205
  br label %do.end214, !dbg !17205

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !17206

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !17207
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !17207
  %cmp216 = icmp ult i64 %126, %127, !dbg !17207
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !17210

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !17207
  %129 = load i64, i64* %len, align 8, !dbg !17207
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !17207, !ctir !143
  store i8 34, i8* %arrayidx219, align 1, !dbg !17207
  br label %if.end220, !dbg !17207

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !17210
  %inc221 = add i64 %130, 1, !dbg !17210
  store i64 %inc221, i64* %len, align 8, !dbg !17210
  br label %do.end222, !dbg !17210

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !17211

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !17212
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !17212
  %cmp224 = icmp ult i64 %131, %132, !dbg !17212
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !17215

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !17212
  %134 = load i64, i64* %len, align 8, !dbg !17212
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !17212, !ctir !143
  store i8 63, i8* %arrayidx227, align 1, !dbg !17212
  br label %if.end228, !dbg !17212

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !17215
  %inc229 = add i64 %135, 1, !dbg !17215
  store i64 %inc229, i64* %len, align 8, !dbg !17215
  br label %do.end230, !dbg !17215

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !17216

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !17217

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !17218

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !17219

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !17220

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !17221

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !17222
  br label %c_escape, !dbg !17223

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !17224
  br label %c_escape, !dbg !17225

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !17226
  br label %c_escape, !dbg !17227

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !17228
  br label %c_and_shell_escape, !dbg !17229

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !17230
  br label %c_and_shell_escape, !dbg !17231

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !17232
  br label %c_and_shell_escape, !dbg !17233

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !17234
  br label %c_escape, !dbg !17235

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !17236
  store i8 %136, i8* %esc, align 1, !dbg !17237
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !17238
  %cmp244 = icmp eq i32 %137, 2, !dbg !17240
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !17241

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17242
  %tobool247 = trunc i8 %138 to i1, !dbg !17242
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !17245

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !17246

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !17247

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !17248
  %tobool251 = trunc i8 %139 to i1, !dbg !17248
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !17250

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17251
  %tobool254 = trunc i8 %140 to i1, !dbg !17251
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !17252

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !17253
  %tobool257 = icmp ne i64 %141, 0, !dbg !17253
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !17254

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !17255

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !17253

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !17256), !dbg !17257
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !17258
  %cmp260 = icmp eq i32 %142, 2, !dbg !17260
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !17261

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17262
  %tobool263 = trunc i8 %143 to i1, !dbg !17262
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !17263

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !17264

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !17262

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !17265), !dbg !17266
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !17267
  %tobool267 = trunc i8 %144 to i1, !dbg !17267
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !17269

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !17270
  store i8 %145, i8* %c, align 1, !dbg !17272
  br label %store_escape, !dbg !17273

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !17274

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !17275
  %cmp271 = icmp eq i64 %146, -1, !dbg !17277
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !17278

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !17279
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !17279, !ctir !146
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !17279
  %conv275 = sext i8 %148 to i32, !dbg !17279
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !17280
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !17275

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !17281
  %cmp279 = icmp eq i64 %149, 1, !dbg !17282
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !17278

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !17283

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !17284

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !17285
  %cmp284 = icmp ne i64 %150, 0, !dbg !17287
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !17288

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !17289

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !17290

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17291
  br label %sw.bb289, !dbg !17292

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !17293
  %cmp290 = icmp eq i32 %151, 2, !dbg !17295
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !17296

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17297
  %tobool293 = trunc i8 %152 to i1, !dbg !17297
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !17298

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !17299

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !17300

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !17301
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17302
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !17303
  %cmp298 = icmp eq i32 %153, 2, !dbg !17305
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !17306

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17307
  %tobool301 = trunc i8 %154 to i1, !dbg !17307
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !17310

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !17311

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !17312
  %tobool304 = icmp ne i64 %155, 0, !dbg !17312
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !17314

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !17315
  %tobool306 = icmp ne i64 %156, 0, !dbg !17315
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !17316

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !17317
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !17319
  store i64 0, i64* %buffersize.addr, align 8, !dbg !17320
  br label %if.end308, !dbg !17321

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !17322

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !17323
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !17323
  %cmp310 = icmp ult i64 %158, %159, !dbg !17323
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !17326

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !17323
  %161 = load i64, i64* %len, align 8, !dbg !17323
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !17323, !ctir !143
  store i8 39, i8* %arrayidx313, align 1, !dbg !17323
  br label %if.end314, !dbg !17323

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !17326
  %inc315 = add i64 %162, 1, !dbg !17326
  store i64 %inc315, i64* %len, align 8, !dbg !17326
  br label %do.end316, !dbg !17326

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !17327

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !17328
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !17328
  %cmp318 = icmp ult i64 %163, %164, !dbg !17328
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !17331

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !17328
  %166 = load i64, i64* %len, align 8, !dbg !17328
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !17328, !ctir !143
  store i8 92, i8* %arrayidx321, align 1, !dbg !17328
  br label %if.end322, !dbg !17328

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !17331
  %inc323 = add i64 %167, 1, !dbg !17331
  store i64 %inc323, i64* %len, align 8, !dbg !17331
  br label %do.end324, !dbg !17331

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !17332

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !17333
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !17333
  %cmp326 = icmp ult i64 %168, %169, !dbg !17333
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !17336

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !17333
  %171 = load i64, i64* %len, align 8, !dbg !17333
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !17333, !ctir !143
  store i8 39, i8* %arrayidx329, align 1, !dbg !17333
  br label %if.end330, !dbg !17333

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !17336
  %inc331 = add i64 %172, 1, !dbg !17336
  store i64 %inc331, i64* %len, align 8, !dbg !17336
  br label %do.end332, !dbg !17336

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17337
  br label %if.end333, !dbg !17338

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !17339

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17340
  br label %sw.epilog564, !dbg !17341

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !17342, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !17345, metadata !DIExpression()), !dbg !17346
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !17347
  %tobool336 = trunc i8 %173 to i1, !dbg !17347
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !17349

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !17350
  %call338 = call i16** @__ctype_b_loc() #17, !dbg !17352
  %174 = load i16*, i16** %call338, align 8, !dbg !17352, !ctir !696
  %175 = load i8, i8* %c, align 1, !dbg !17352
  %conv339 = zext i8 %175 to i32, !dbg !17352
  %idxprom = sext i32 %conv339 to i64, !dbg !17352
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !17352, !ctir !696
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !17352
  %conv341 = zext i16 %176 to i32, !dbg !17352
  %and342 = and i32 %conv341, 16384, !dbg !17352
  %cmp343 = icmp ne i32 %and342, 0, !dbg !17353
  %frombool345 = zext i1 %cmp343 to i8, !dbg !17354
  store i8 %frombool345, i8* %printable, align 1, !dbg !17354
  br label %if.end410, !dbg !17355

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !17356, metadata !DIExpression()), !dbg !17358
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !17359
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !17359
  store i64 0, i64* %m, align 8, !dbg !17360
  store i8 1, i8* %printable, align 1, !dbg !17361
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !17362
  %cmp347 = icmp eq i64 %178, -1, !dbg !17364
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !17365

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !17366
  %call350 = call i64 @strlen(i8* %179) #16, !dbg !17367
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !17368
  br label %if.end351, !dbg !17369

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !17370

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !17371, metadata !DIExpression()), !dbg !17373
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !17374, metadata !DIExpression()), !dbg !17375
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !17376
  %181 = load i64, i64* %i, align 8, !dbg !17377
  %182 = load i64, i64* %m, align 8, !dbg !17378
  %add353 = add i64 %181, %182, !dbg !17379
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !17376, !ctir !146
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !17380
  %184 = load i64, i64* %i, align 8, !dbg !17381
  %185 = load i64, i64* %m, align 8, !dbg !17382
  %add355 = add i64 %184, %185, !dbg !17383
  %sub = sub i64 %183, %add355, !dbg !17384
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !17385
  store i64 %call356, i64* %bytes, align 8, !dbg !17375
  %186 = load i64, i64* %bytes, align 8, !dbg !17386
  %cmp357 = icmp eq i64 %186, 0, !dbg !17388
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !17389

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !17390

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !17391
  %cmp361 = icmp eq i64 %187, -1, !dbg !17393
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !17394

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !17395
  br label %do.end409, !dbg !17397

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !17398
  %cmp365 = icmp eq i64 %188, -2, !dbg !17400
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !17401

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !17402
  br label %while.cond, !dbg !17404

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !17405
  %190 = load i64, i64* %m, align 8, !dbg !17406
  %add368 = add i64 %189, %190, !dbg !17407
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !17408
  %cmp369 = icmp ult i64 %add368, %191, !dbg !17409
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !17410

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !17411
  %193 = load i64, i64* %i, align 8, !dbg !17412
  %194 = load i64, i64* %m, align 8, !dbg !17413
  %add371 = add i64 %193, %194, !dbg !17414
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !17411, !ctir !146
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !17411
  %conv373 = sext i8 %195 to i32, !dbg !17411
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !17410
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !17415
  br i1 %196, label %while.body, label %while.end, !dbg !17404

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !17416
  %inc375 = add i64 %197, 1, !dbg !17416
  store i64 %inc375, i64* %m, align 8, !dbg !17416
  br label %while.cond, !dbg !17404, !llvm.loop !17417

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !17418

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17419
  %tobool377 = trunc i8 %198 to i1, !dbg !17419
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !17422

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !17423
  %cmp380 = icmp eq i32 %199, 2, !dbg !17424
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !17425

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !17426, metadata !DIExpression()), !dbg !17428
  store i64 1, i64* %j, align 8, !dbg !17429
  br label %for.cond383, !dbg !17431

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !17432
  %201 = load i64, i64* %bytes, align 8, !dbg !17434
  %cmp384 = icmp ult i64 %200, %201, !dbg !17435
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !17436

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !17437
  %203 = load i64, i64* %i, align 8, !dbg !17438
  %204 = load i64, i64* %m, align 8, !dbg !17439
  %add387 = add i64 %203, %204, !dbg !17440
  %205 = load i64, i64* %j, align 8, !dbg !17441
  %add388 = add i64 %add387, %205, !dbg !17442
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !17437, !ctir !146
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !17437
  %conv390 = sext i8 %206 to i32, !dbg !17437
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !17443

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !17444

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !17446

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !17447

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !17448
  %inc395 = add i64 %207, 1, !dbg !17448
  store i64 %inc395, i64* %j, align 8, !dbg !17448
  br label %for.cond383, !dbg !17449, !llvm.loop !17450

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !17452

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !17453
  %call398 = call i32 @iswprint(i32 %208) #13, !dbg !17455
  %tobool399 = icmp ne i32 %call398, 0, !dbg !17455
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !17456

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !17457
  br label %if.end401, !dbg !17458

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !17459
  %210 = load i64, i64* %m, align 8, !dbg !17460
  %add402 = add i64 %210, %209, !dbg !17460
  store i64 %add402, i64* %m, align 8, !dbg !17460
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !17461

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !17462
  %tobool407 = icmp ne i32 %call406, 0, !dbg !17463
  %lnot408 = xor i1 %tobool407, true, !dbg !17463
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !17461, !llvm.loop !17464

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !17466
  %tobool411 = trunc i8 %211 to i1, !dbg !17466
  %frombool412 = zext i1 %tobool411 to i8, !dbg !17467
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !17467
  %212 = load i64, i64* %m, align 8, !dbg !17468
  %cmp413 = icmp ult i64 1, %212, !dbg !17470
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !17471

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !17472
  %tobool415 = trunc i8 %213 to i1, !dbg !17472
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !17473

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !17474
  %tobool418 = trunc i8 %214 to i1, !dbg !17474
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !17475

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !17476, metadata !DIExpression()), !dbg !17478
  %215 = load i64, i64* %i, align 8, !dbg !17479
  %216 = load i64, i64* %m, align 8, !dbg !17480
  %add420 = add i64 %215, %216, !dbg !17481
  store i64 %add420, i64* %ilim, align 8, !dbg !17478
  br label %for.cond421, !dbg !17482

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !17483
  %tobool422 = trunc i8 %217 to i1, !dbg !17483
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !17488

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !17489
  %tobool425 = trunc i8 %218 to i1, !dbg !17489
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !17490

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !17491

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17493
  %tobool428 = trunc i8 %219 to i1, !dbg !17493
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !17496

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !17493

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !17496
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !17497
  %cmp431 = icmp eq i32 %220, 2, !dbg !17497
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !17497

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17497
  %tobool434 = trunc i8 %221 to i1, !dbg !17497
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !17496

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !17499

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !17501
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !17501
  %cmp437 = icmp ult i64 %222, %223, !dbg !17501
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !17504

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !17501
  %225 = load i64, i64* %len, align 8, !dbg !17501
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !17501, !ctir !143
  store i8 39, i8* %arrayidx440, align 1, !dbg !17501
  br label %if.end441, !dbg !17501

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !17504
  %inc442 = add i64 %226, 1, !dbg !17504
  store i64 %inc442, i64* %len, align 8, !dbg !17504
  br label %do.end444, !dbg !17504

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !17499

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !17505
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !17505
  %cmp446 = icmp ult i64 %227, %228, !dbg !17505
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !17508

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !17505
  %230 = load i64, i64* %len, align 8, !dbg !17505
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !17505, !ctir !143
  store i8 36, i8* %arrayidx449, align 1, !dbg !17505
  br label %if.end450, !dbg !17505

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !17508
  %inc451 = add i64 %231, 1, !dbg !17508
  store i64 %inc451, i64* %len, align 8, !dbg !17508
  br label %do.end453, !dbg !17508

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !17499

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !17509
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !17509
  %cmp455 = icmp ult i64 %232, %233, !dbg !17509
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !17512

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !17509
  %235 = load i64, i64* %len, align 8, !dbg !17509
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !17509, !ctir !143
  store i8 39, i8* %arrayidx458, align 1, !dbg !17509
  br label %if.end459, !dbg !17509

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !17512
  %inc460 = add i64 %236, 1, !dbg !17512
  store i64 %inc460, i64* %len, align 8, !dbg !17512
  br label %do.end462, !dbg !17512

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17499
  br label %if.end463, !dbg !17499

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !17496

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !17513
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !17513
  %cmp465 = icmp ult i64 %237, %238, !dbg !17513
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !17516

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !17513
  %240 = load i64, i64* %len, align 8, !dbg !17513
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !17513, !ctir !143
  store i8 92, i8* %arrayidx468, align 1, !dbg !17513
  br label %if.end469, !dbg !17513

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !17516
  %inc470 = add i64 %241, 1, !dbg !17516
  store i64 %inc470, i64* %len, align 8, !dbg !17516
  br label %do.end472, !dbg !17516

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !17496

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !17517

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !17518
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !17518
  %cmp476 = icmp ult i64 %242, %243, !dbg !17518
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !17521

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !17518
  %conv479 = zext i8 %244 to i32, !dbg !17518
  %shr = ashr i32 %conv479, 6, !dbg !17518
  %add480 = add nsw i32 48, %shr, !dbg !17518
  %conv481 = trunc i32 %add480 to i8, !dbg !17518
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !17518
  %246 = load i64, i64* %len, align 8, !dbg !17518
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !17518, !ctir !143
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !17518
  br label %if.end483, !dbg !17518

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !17521
  %inc484 = add i64 %247, 1, !dbg !17521
  store i64 %inc484, i64* %len, align 8, !dbg !17521
  br label %do.end486, !dbg !17521

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !17522

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !17523
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !17523
  %cmp488 = icmp ult i64 %248, %249, !dbg !17523
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !17526

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !17523
  %conv491 = zext i8 %250 to i32, !dbg !17523
  %shr492 = ashr i32 %conv491, 3, !dbg !17523
  %and493 = and i32 %shr492, 7, !dbg !17523
  %add494 = add nsw i32 48, %and493, !dbg !17523
  %conv495 = trunc i32 %add494 to i8, !dbg !17523
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !17523
  %252 = load i64, i64* %len, align 8, !dbg !17523
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !17523, !ctir !143
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !17523
  br label %if.end497, !dbg !17523

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !17526
  %inc498 = add i64 %253, 1, !dbg !17526
  store i64 %inc498, i64* %len, align 8, !dbg !17526
  br label %do.end500, !dbg !17526

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !17527
  %conv501 = zext i8 %254 to i32, !dbg !17527
  %and502 = and i32 %conv501, 7, !dbg !17528
  %add503 = add nsw i32 48, %and502, !dbg !17529
  %conv504 = trunc i32 %add503 to i8, !dbg !17530
  store i8 %conv504, i8* %c, align 1, !dbg !17531
  br label %if.end518, !dbg !17532

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !17533
  %tobool506 = trunc i8 %255 to i1, !dbg !17533
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !17535

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !17536

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !17538
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !17538
  %cmp509 = icmp ult i64 %256, %257, !dbg !17538
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !17541

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !17538
  %259 = load i64, i64* %len, align 8, !dbg !17538
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !17538, !ctir !143
  store i8 92, i8* %arrayidx512, align 1, !dbg !17538
  br label %if.end513, !dbg !17538

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !17541
  %inc514 = add i64 %260, 1, !dbg !17541
  store i64 %inc514, i64* %len, align 8, !dbg !17541
  br label %do.end516, !dbg !17541

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !17542
  br label %if.end517, !dbg !17543

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !17544
  %262 = load i64, i64* %i, align 8, !dbg !17546
  %add519 = add i64 %262, 1, !dbg !17547
  %cmp520 = icmp ule i64 %261, %add519, !dbg !17548
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !17549

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !17550

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !17551

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17552
  %tobool525 = trunc i8 %263 to i1, !dbg !17552
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !17552

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !17552
  %tobool528 = trunc i8 %264 to i1, !dbg !17552
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !17555

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !17556

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !17558
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !17558
  %cmp531 = icmp ult i64 %265, %266, !dbg !17558
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !17561

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !17558
  %268 = load i64, i64* %len, align 8, !dbg !17558
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !17558, !ctir !143
  store i8 39, i8* %arrayidx534, align 1, !dbg !17558
  br label %if.end535, !dbg !17558

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !17561
  %inc536 = add i64 %269, 1, !dbg !17561
  store i64 %inc536, i64* %len, align 8, !dbg !17561
  br label %do.end538, !dbg !17561

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !17556

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !17562
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !17562
  %cmp540 = icmp ult i64 %270, %271, !dbg !17562
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !17565

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !17562
  %273 = load i64, i64* %len, align 8, !dbg !17562
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !17562, !ctir !143
  store i8 39, i8* %arrayidx543, align 1, !dbg !17562
  br label %if.end544, !dbg !17562

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !17565
  %inc545 = add i64 %274, 1, !dbg !17565
  store i64 %inc545, i64* %len, align 8, !dbg !17565
  br label %do.end547, !dbg !17565

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17556
  br label %if.end548, !dbg !17556

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !17555

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !17566

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !17567
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !17567
  %cmp552 = icmp ult i64 %275, %276, !dbg !17567
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !17570

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !17567
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !17567
  %279 = load i64, i64* %len, align 8, !dbg !17567
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !17567, !ctir !143
  store i8 %277, i8* %arrayidx555, align 1, !dbg !17567
  br label %if.end556, !dbg !17567

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !17570
  %inc557 = add i64 %280, 1, !dbg !17570
  store i64 %inc557, i64* %len, align 8, !dbg !17570
  br label %do.end559, !dbg !17570

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !17571
  %282 = load i64, i64* %i, align 8, !dbg !17572
  %inc560 = add i64 %282, 1, !dbg !17572
  store i64 %inc560, i64* %i, align 8, !dbg !17572
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !17571, !ctir !146
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !17571
  store i8 %283, i8* %c, align 1, !dbg !17573
  br label %for.cond421, !dbg !17574, !llvm.loop !17575

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !17578

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !17579

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !17580
  %tobool565 = trunc i8 %284 to i1, !dbg !17580
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !17582

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !17583
  %cmp568 = icmp ne i32 %285, 2, !dbg !17584
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !17585

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17586
  %tobool571 = trunc i8 %286 to i1, !dbg !17586
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !17587

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17588
  %tobool574 = icmp ne i32* %287, null, !dbg !17588
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !17589

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17590
  %289 = load i8, i8* %c, align 1, !dbg !17591
  %conv576 = zext i8 %289 to i64, !dbg !17591
  %div = udiv i64 %conv576, 32, !dbg !17592
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !17590, !ctir !1405
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !17590
  %291 = load i8, i8* %c, align 1, !dbg !17593
  %conv578 = zext i8 %291 to i64, !dbg !17593
  %rem = urem i64 %conv578, 32, !dbg !17594
  %sh_prom = trunc i64 %rem to i32, !dbg !17595
  %shr579 = lshr i32 %290, %sh_prom, !dbg !17595
  %and580 = and i32 %shr579, 1, !dbg !17596
  %tobool581 = icmp ne i32 %and580, 0, !dbg !17596
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !17597

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !17598
  %tobool583 = trunc i8 %292 to i1, !dbg !17598
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !17599

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !17600

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !17598

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !17601), !dbg !17602
  br label %do.body586, !dbg !17603

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17604
  %tobool587 = trunc i8 %293 to i1, !dbg !17604
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !17607

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !17604

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !17607
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !17608
  %cmp590 = icmp eq i32 %294, 2, !dbg !17608
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !17608

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17608
  %tobool593 = trunc i8 %295 to i1, !dbg !17608
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !17607

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !17610

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !17612
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !17612
  %cmp596 = icmp ult i64 %296, %297, !dbg !17612
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !17615

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !17612
  %299 = load i64, i64* %len, align 8, !dbg !17612
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !17612, !ctir !143
  store i8 39, i8* %arrayidx599, align 1, !dbg !17612
  br label %if.end600, !dbg !17612

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !17615
  %inc601 = add i64 %300, 1, !dbg !17615
  store i64 %inc601, i64* %len, align 8, !dbg !17615
  br label %do.end603, !dbg !17615

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !17610

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !17616
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !17616
  %cmp605 = icmp ult i64 %301, %302, !dbg !17616
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !17619

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !17616
  %304 = load i64, i64* %len, align 8, !dbg !17616
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !17616, !ctir !143
  store i8 36, i8* %arrayidx608, align 1, !dbg !17616
  br label %if.end609, !dbg !17616

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !17619
  %inc610 = add i64 %305, 1, !dbg !17619
  store i64 %inc610, i64* %len, align 8, !dbg !17619
  br label %do.end612, !dbg !17619

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !17610

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !17620
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !17620
  %cmp614 = icmp ult i64 %306, %307, !dbg !17620
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !17623

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !17620
  %309 = load i64, i64* %len, align 8, !dbg !17620
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !17620, !ctir !143
  store i8 39, i8* %arrayidx617, align 1, !dbg !17620
  br label %if.end618, !dbg !17620

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !17623
  %inc619 = add i64 %310, 1, !dbg !17623
  store i64 %inc619, i64* %len, align 8, !dbg !17623
  br label %do.end621, !dbg !17623

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17610
  br label %if.end622, !dbg !17610

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !17607

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !17624
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !17624
  %cmp624 = icmp ult i64 %311, %312, !dbg !17624
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !17627

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !17624
  %314 = load i64, i64* %len, align 8, !dbg !17624
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !17624, !ctir !143
  store i8 92, i8* %arrayidx627, align 1, !dbg !17624
  br label %if.end628, !dbg !17624

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !17627
  %inc629 = add i64 %315, 1, !dbg !17627
  store i64 %inc629, i64* %len, align 8, !dbg !17627
  br label %do.end631, !dbg !17627

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !17607

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !17607

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !17628), !dbg !17629
  br label %do.body634, !dbg !17630

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17631
  %tobool635 = trunc i8 %316 to i1, !dbg !17631
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !17631

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !17631
  %tobool638 = trunc i8 %317 to i1, !dbg !17631
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !17634

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !17635

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !17637
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !17637
  %cmp641 = icmp ult i64 %318, %319, !dbg !17637
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !17640

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !17637
  %321 = load i64, i64* %len, align 8, !dbg !17637
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !17637, !ctir !143
  store i8 39, i8* %arrayidx644, align 1, !dbg !17637
  br label %if.end645, !dbg !17637

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !17640
  %inc646 = add i64 %322, 1, !dbg !17640
  store i64 %inc646, i64* %len, align 8, !dbg !17640
  br label %do.end648, !dbg !17640

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !17635

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !17641
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !17641
  %cmp650 = icmp ult i64 %323, %324, !dbg !17641
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !17644

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !17641
  %326 = load i64, i64* %len, align 8, !dbg !17641
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !17641, !ctir !143
  store i8 39, i8* %arrayidx653, align 1, !dbg !17641
  br label %if.end654, !dbg !17641

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !17644
  %inc655 = add i64 %327, 1, !dbg !17644
  store i64 %inc655, i64* %len, align 8, !dbg !17644
  br label %do.end657, !dbg !17644

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17635
  br label %if.end658, !dbg !17635

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !17634

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !17645

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !17646
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !17646
  %cmp662 = icmp ult i64 %328, %329, !dbg !17646
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !17649

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !17646
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !17646
  %332 = load i64, i64* %len, align 8, !dbg !17646
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !17646, !ctir !143
  store i8 %330, i8* %arrayidx665, align 1, !dbg !17646
  br label %if.end666, !dbg !17646

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !17649
  %inc667 = add i64 %333, 1, !dbg !17649
  store i64 %inc667, i64* %len, align 8, !dbg !17649
  br label %do.end669, !dbg !17649

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !17650
  %tobool670 = trunc i8 %334 to i1, !dbg !17650
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !17652

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17653
  br label %if.end672, !dbg !17654

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !17655

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !17656
  %inc674 = add i64 %335, 1, !dbg !17656
  store i64 %inc674, i64* %i, align 8, !dbg !17656
  br label %for.cond44, !dbg !17657, !llvm.loop !17658

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !17660
  %cmp676 = icmp eq i64 %336, 0, !dbg !17662
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !17663

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !17664
  %cmp679 = icmp eq i32 %337, 2, !dbg !17665
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !17666

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17667
  %tobool682 = trunc i8 %338 to i1, !dbg !17667
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !17668

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !17669

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !17670
  %cmp686 = icmp eq i32 %339, 2, !dbg !17672
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !17673

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17674
  %tobool689 = trunc i8 %340 to i1, !dbg !17674
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !17675

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !17676
  %tobool691 = trunc i8 %341 to i1, !dbg !17676
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !17677

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17678
  %tobool694 = trunc i8 %342 to i1, !dbg !17678
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !17681

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !17682
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !17683
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !17684
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !17685
  %347 = load i32, i32* %flags.addr, align 4, !dbg !17686
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17687
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !17688
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !17689
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !17690
  store i64 %call696, i64* %retval, align 8, !dbg !17691
  br label %return, !dbg !17691

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !17692
  %tobool698 = icmp ne i64 %351, 0, !dbg !17692
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !17694

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !17695
  %tobool700 = icmp ne i64 %352, 0, !dbg !17695
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !17696

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !17697
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !17699
  store i64 0, i64* %len, align 8, !dbg !17700
  br label %process_input, !dbg !17701

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !17702

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !17703
  %tobool705 = icmp ne i8* %354, null, !dbg !17703
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !17705

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17706
  %tobool707 = trunc i8 %355 to i1, !dbg !17706
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !17707

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !17708

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !17709
  %357 = load i8, i8* %356, align 1, !dbg !17712, !ctir !147
  %tobool710 = icmp ne i8 %357, 0, !dbg !17713
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !17713

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !17714

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !17715
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !17715
  %cmp713 = icmp ult i64 %358, %359, !dbg !17715
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !17718

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !17715
  %361 = load i8, i8* %360, align 1, !dbg !17715, !ctir !147
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !17715
  %363 = load i64, i64* %len, align 8, !dbg !17715
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !17715, !ctir !143
  store i8 %361, i8* %arrayidx716, align 1, !dbg !17715
  br label %if.end717, !dbg !17715

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !17718
  %inc718 = add i64 %364, 1, !dbg !17718
  store i64 %inc718, i64* %len, align 8, !dbg !17718
  br label %do.end720, !dbg !17718

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !17718

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !17719
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !17719, !ctir !147
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !17719
  br label %for.cond709, !dbg !17720, !llvm.loop !17721

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !17722

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !17723
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !17725
  %cmp725 = icmp ult i64 %366, %367, !dbg !17726
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !17727

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !17728
  %369 = load i64, i64* %len, align 8, !dbg !17729
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !17728, !ctir !143
  store i8 0, i8* %arrayidx728, align 1, !dbg !17730
  br label %if.end729, !dbg !17728

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !17731
  store i64 %370, i64* %retval, align 8, !dbg !17732
  br label %return, !dbg !17732

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !17733), !dbg !17734
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !17735
  %cmp730 = icmp eq i32 %371, 2, !dbg !17737
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !17738

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !17739
  %tobool733 = trunc i8 %372 to i1, !dbg !17739
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !17740

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !17741
  br label %if.end736, !dbg !17742

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !17743
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !17744
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !17745
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !17746
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !17747
  %378 = load i32, i32* %flags.addr, align 4, !dbg !17748
  %and737 = and i32 %378, -3, !dbg !17749
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !17750
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !17751
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !17752
  store i64 %call738, i64* %retval, align 8, !dbg !17753
  br label %return, !dbg !17753

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !17754
  ret i64 %381, !dbg !17754
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #0 !dbg !17755 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !146
  %locale_code = alloca i8*, align 8, !ctir !146
  store i8* %msgid, i8** %msgid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !17758, metadata !DIExpression()), !dbg !17759
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !17760, metadata !DIExpression()), !dbg !17761
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !17762, metadata !DIExpression()), !dbg !17763
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !17764
  %call = call i8* @gettext(i8* %0) #13, !dbg !17764
  store i8* %call, i8** %translation, align 8, !dbg !17763
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !17765, metadata !DIExpression()), !dbg !17766
  %1 = load i8*, i8** %translation, align 8, !dbg !17767
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !17769
  %cmp = icmp ne i8* %1, %2, !dbg !17770
  br i1 %cmp, label %if.then, label %if.end, !dbg !17771

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !17772
  store i8* %3, i8** %retval, align 8, !dbg !17773
  br label %return, !dbg !17773

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !17774
  store i8* %call1, i8** %locale_code, align 8, !dbg !17775
  %4 = load i8*, i8** %locale_code, align 8, !dbg !17776
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.398, i64 0, i64 0)) #16, !dbg !17776
  %cmp3 = icmp eq i32 %call2, 0, !dbg !17776
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !17778

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !17779
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !17779, !ctir !146
  %6 = load i8, i8* %arrayidx, align 1, !dbg !17779
  %conv = sext i8 %6 to i32, !dbg !17779
  %cmp5 = icmp eq i32 %conv, 96, !dbg !17780
  %7 = zext i1 %cmp5 to i64, !dbg !17779
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.399, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.400, i64 0, i64 0), !dbg !17779
  store i8* %cond, i8** %retval, align 8, !dbg !17781
  br label %return, !dbg !17781

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !17782
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.401, i64 0, i64 0)) #16, !dbg !17782
  %cmp9 = icmp eq i32 %call8, 0, !dbg !17782
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !17784

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !17785
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !17785, !ctir !146
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !17785
  %conv13 = sext i8 %10 to i32, !dbg !17785
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !17786
  %11 = zext i1 %cmp14 to i64, !dbg !17785
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.402, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.403, i64 0, i64 0), !dbg !17785
  store i8* %cond16, i8** %retval, align 8, !dbg !17787
  br label %return, !dbg !17787

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !17788
  %cmp18 = icmp eq i32 %12, 9, !dbg !17789
  %13 = zext i1 %cmp18 to i64, !dbg !17788
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.395, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.397, i64 0, i64 0), !dbg !17788
  store i8* %cond20, i8** %retval, align 8, !dbg !17790
  br label %return, !dbg !17790

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !17791
  ret i8* %14, !dbg !17791
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !17792 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17795, metadata !DIExpression()), !dbg !17796
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17797, metadata !DIExpression()), !dbg !17798
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17799, metadata !DIExpression()), !dbg !17800
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !17801
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !17802
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17803
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !17804
  ret i8* %call, !dbg !17805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #0 !dbg !17806 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1387
  %e = alloca i32, align 4, !ctir !27
  %flags = alloca i32, align 4, !ctir !27
  %bufsize = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17809, metadata !DIExpression()), !dbg !17810
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17811, metadata !DIExpression()), !dbg !17812
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !17813, metadata !DIExpression()), !dbg !17814
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17815, metadata !DIExpression()), !dbg !17816
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17817, metadata !DIExpression()), !dbg !17818
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17819
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17819
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17819

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17820
  br label %cond.end, !dbg !17819

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17819
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !17818
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17821, metadata !DIExpression()), !dbg !17822
  %call = call i32* @__errno_location() #17, !dbg !17823
  %2 = load i32, i32* %call, align 4, !dbg !17823, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !17822
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !17824, metadata !DIExpression()), !dbg !17825
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17826
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !17827, !ctir !1388
  %4 = load i32, i32* %flags1, align 4, !dbg !17827, !ctir !27
  %5 = load i64*, i64** %size.addr, align 8, !dbg !17828
  %tobool2 = icmp ne i64* %5, null, !dbg !17828
  %6 = zext i1 %tobool2 to i64, !dbg !17828
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !17828
  %or = or i32 %4, %cond3, !dbg !17829
  store i32 %or, i32* %flags, align 4, !dbg !17825
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !17830, metadata !DIExpression()), !dbg !17831
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !17832
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !17833
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17834
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !17835, !ctir !1388
  %10 = load i32, i32* %style, align 8, !dbg !17835, !ctir !95
  %11 = load i32, i32* %flags, align 4, !dbg !17836
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17837
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !17838, !ctir !1388
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17837, !ctir !1389
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17839
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !17840, !ctir !1388
  %14 = load i8*, i8** %left_quote, align 8, !dbg !17840, !ctir !146
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17841
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !17842, !ctir !1388
  %16 = load i8*, i8** %right_quote, align 8, !dbg !17842, !ctir !146
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !17843
  %add = add i64 %call4, 1, !dbg !17844
  store i64 %add, i64* %bufsize, align 8, !dbg !17831
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !17845, metadata !DIExpression()), !dbg !17846
  %17 = load i64, i64* %bufsize, align 8, !dbg !17847
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !17848
  store i8* %call5, i8** %buf, align 8, !dbg !17846
  %18 = load i8*, i8** %buf, align 8, !dbg !17849
  %19 = load i64, i64* %bufsize, align 8, !dbg !17850
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !17851
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !17852
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17853
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !17854, !ctir !1388
  %23 = load i32, i32* %style6, align 8, !dbg !17854, !ctir !95
  %24 = load i32, i32* %flags, align 4, !dbg !17855
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17856
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !17857, !ctir !1388
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !17856, !ctir !1389
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17858
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !17859, !ctir !1388
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !17859, !ctir !146
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17860
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !17861, !ctir !1388
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !17861, !ctir !146
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !17862
  %30 = load i32, i32* %e, align 4, !dbg !17863
  %call12 = call i32* @__errno_location() #17, !dbg !17864
  store i32 %30, i32* %call12, align 4, !dbg !17865, !ctir !27
  %31 = load i64*, i64** %size.addr, align 8, !dbg !17866
  %tobool13 = icmp ne i64* %31, null, !dbg !17866
  br i1 %tobool13, label %if.then, label %if.end, !dbg !17868

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !17869
  %sub = sub i64 %32, 1, !dbg !17870
  %33 = load i64*, i64** %size.addr, align 8, !dbg !17871
  store i64 %sub, i64* %33, align 8, !dbg !17872, !ctir !149
  br label %if.end, !dbg !17873

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !17874
  ret i8* %34, !dbg !17875
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #0 !dbg !17876 {
entry:
  %sv = alloca %struct.bin_str*, align 8, !ctir !1390
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !17877, metadata !DIExpression()), !dbg !17878
  %0 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !17879
  store %struct.bin_str* %0, %struct.bin_str** %sv, align 8, !dbg !17878
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17880, metadata !DIExpression()), !dbg !17881
  store i32 1, i32* %i, align 4, !dbg !17882
  br label %for.cond, !dbg !17884

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !17885
  %2 = load i32, i32* @nslots, align 4, !dbg !17887
  %cmp = icmp slt i32 %1, %2, !dbg !17888
  br i1 %cmp, label %for.body, label %for.end, !dbg !17889

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17890
  %4 = load i32, i32* %i, align 4, !dbg !17891
  %idxprom = sext i32 %4 to i64, !dbg !17890
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i64 %idxprom, !dbg !17890, !ctir !1390
  %val = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 1, !dbg !17892, !ctir !1391
  %5 = load i8*, i8** %val, align 8, !dbg !17892, !ctir !143
  call void @free(i8* %5) #13, !dbg !17893
  br label %for.inc, !dbg !17893

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !17894
  %inc = add nsw i32 %6, 1, !dbg !17894
  store i32 %inc, i32* %i, align 4, !dbg !17894
  br label %for.cond, !dbg !17895, !llvm.loop !17896

for.end:                                          ; preds = %for.cond
  %7 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17898
  %arrayidx1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %7, i64 0, !dbg !17898, !ctir !1390
  %val2 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx1, i32 0, i32 1, !dbg !17900, !ctir !1391
  %8 = load i8*, i8** %val2, align 8, !dbg !17900, !ctir !143
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !17901
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17902

if.then:                                          ; preds = %for.end
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17903
  %arrayidx4 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %9, i64 0, !dbg !17903, !ctir !1390
  %val5 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx4, i32 0, i32 1, !dbg !17905, !ctir !1391
  %10 = load i8*, i8** %val5, align 8, !dbg !17905, !ctir !143
  call void @free(i8* %10) #13, !dbg !17906
  store i64 256, i64* getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 0), align 8, !dbg !17907, !ctir !149
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 1), align 8, !dbg !17908, !ctir !143
  br label %if.end, !dbg !17909

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17910
  %cmp6 = icmp ne %struct.bin_str* %11, @slotvec0, !dbg !17912
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !17913

if.then7:                                         ; preds = %if.end
  %12 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17914
  %13 = bitcast %struct.bin_str* %12 to i8*, !dbg !17914
  call void @free(i8* %13) #13, !dbg !17916
  store %struct.bin_str* @slotvec0, %struct.bin_str** @slotvec, align 8, !dbg !17917
  br label %if.end8, !dbg !17918

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !17919
  ret void, !dbg !17920
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #0 !dbg !17921 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !17924, metadata !DIExpression()), !dbg !17925
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17926, metadata !DIExpression()), !dbg !17927
  %0 = load i32, i32* %n.addr, align 4, !dbg !17928
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !17929
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !17930
  ret i8* %call, !dbg !17931
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #0 !dbg !17932 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !27
  %sv = alloca %struct.bin_str*, align 8, !ctir !1390
  %preallocated = alloca i8, align 1, !ctir !141
  %nmax = alloca i32, align 4, !ctir !27
  %size = alloca i64, align 8, !ctir !149
  %val = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %qsize = alloca i64, align 8, !ctir !149
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !17935, metadata !DIExpression()), !dbg !17936
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17937, metadata !DIExpression()), !dbg !17938
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17939, metadata !DIExpression()), !dbg !17940
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !17941, metadata !DIExpression()), !dbg !17942
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17943, metadata !DIExpression()), !dbg !17944
  %call = call i32* @__errno_location() #17, !dbg !17945
  %0 = load i32, i32* %call, align 4, !dbg !17945, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !17944
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !17946, metadata !DIExpression()), !dbg !17947
  %1 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !17948
  store %struct.bin_str* %1, %struct.bin_str** %sv, align 8, !dbg !17947
  %2 = load i32, i32* %n.addr, align 4, !dbg !17949
  %cmp = icmp slt i32 %2, 0, !dbg !17951
  br i1 %cmp, label %if.then, label %if.end, !dbg !17952

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !17953
  unreachable, !dbg !17953

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !17954
  %4 = load i32, i32* %n.addr, align 4, !dbg !17956
  %cmp1 = icmp sle i32 %3, %4, !dbg !17957
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !17958

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !17959, metadata !DIExpression()), !dbg !17961
  %5 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17962
  %cmp3 = icmp eq %struct.bin_str* %5, @slotvec0, !dbg !17963
  %frombool = zext i1 %cmp3 to i8, !dbg !17961
  store i8 %frombool, i8* %preallocated, align 1, !dbg !17961
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !17964, metadata !DIExpression()), !dbg !17965
  store i32 2147483646, i32* %nmax, align 4, !dbg !17965
  %6 = load i32, i32* %nmax, align 4, !dbg !17966
  %7 = load i32, i32* %n.addr, align 4, !dbg !17968
  %cmp4 = icmp slt i32 %6, %7, !dbg !17969
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17970

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #14, !dbg !17971
  unreachable, !dbg !17971

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !17972
  %tobool = trunc i8 %8 to i1, !dbg !17972
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17972

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !17972

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17973
  br label %cond.end, !dbg !17972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bin_str* [ null, %cond.true ], [ %9, %cond.false ], !dbg !17972
  %10 = bitcast %struct.bin_str* %cond to i8*, !dbg !17972
  %11 = load i32, i32* %n.addr, align 4, !dbg !17974
  %add = add nsw i32 %11, 1, !dbg !17975
  %conv = sext i32 %add to i64, !dbg !17976
  %mul = mul i64 %conv, 16, !dbg !17977
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !17978
  %12 = bitcast i8* %call7 to %struct.bin_str*, !dbg !17978
  store %struct.bin_str* %12, %struct.bin_str** %sv, align 8, !dbg !17979
  store %struct.bin_str* %12, %struct.bin_str** @slotvec, align 8, !dbg !17980
  %13 = load i8, i8* %preallocated, align 1, !dbg !17981
  %tobool8 = trunc i8 %13 to i1, !dbg !17981
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !17983

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17984
  %15 = bitcast %struct.bin_str* %14 to i8*, !dbg !17985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.bin_str* @slotvec0 to i8*), i64 16, i1 false), !dbg !17985
  br label %if.end10, !dbg !17986

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !17987
  %17 = load i32, i32* @nslots, align 4, !dbg !17988
  %idx.ext = sext i32 %17 to i64, !dbg !17989
  %add.ptr = getelementptr inbounds %struct.bin_str, %struct.bin_str* %16, i64 %idx.ext, !dbg !17989, !ctir !1391
  %18 = bitcast %struct.bin_str* %add.ptr to i8*, !dbg !17990
  %19 = load i32, i32* %n.addr, align 4, !dbg !17991
  %add11 = add nsw i32 %19, 1, !dbg !17992
  %20 = load i32, i32* @nslots, align 4, !dbg !17993
  %sub = sub nsw i32 %add11, %20, !dbg !17994
  %conv12 = sext i32 %sub to i64, !dbg !17995
  %mul13 = mul i64 %conv12, 16, !dbg !17996
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !17990
  %21 = load i32, i32* %n.addr, align 4, !dbg !17997
  %add14 = add nsw i32 %21, 1, !dbg !17998
  store i32 %add14, i32* @nslots, align 4, !dbg !17999
  br label %if.end15, !dbg !18000

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !18001, metadata !DIExpression()), !dbg !18003
  %22 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18004
  %23 = load i32, i32* %n.addr, align 4, !dbg !18005
  %idxprom = sext i32 %23 to i64, !dbg !18004
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %22, i64 %idxprom, !dbg !18004, !ctir !1390
  %size16 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !18006, !ctir !1391
  %24 = load i64, i64* %size16, align 8, !dbg !18006, !ctir !149
  store i64 %24, i64* %size, align 8, !dbg !18003
  call void @llvm.dbg.declare(metadata i8** %val, metadata !18007, metadata !DIExpression()), !dbg !18008
  %25 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18009
  %26 = load i32, i32* %n.addr, align 4, !dbg !18010
  %idxprom17 = sext i32 %26 to i64, !dbg !18009
  %arrayidx18 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %25, i64 %idxprom17, !dbg !18009, !ctir !1390
  %val19 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx18, i32 0, i32 1, !dbg !18011, !ctir !1391
  %27 = load i8*, i8** %val19, align 8, !dbg !18011, !ctir !143
  store i8* %27, i8** %val, align 8, !dbg !18008
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18012, metadata !DIExpression()), !dbg !18013
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18014
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !18015, !ctir !1388
  %29 = load i32, i32* %flags20, align 4, !dbg !18015, !ctir !27
  %or = or i32 %29, 1, !dbg !18016
  store i32 %or, i32* %flags, align 4, !dbg !18013
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !18017, metadata !DIExpression()), !dbg !18018
  %30 = load i8*, i8** %val, align 8, !dbg !18019
  %31 = load i64, i64* %size, align 8, !dbg !18020
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !18021
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !18022
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18023
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !18024, !ctir !1388
  %35 = load i32, i32* %style, align 8, !dbg !18024, !ctir !95
  %36 = load i32, i32* %flags, align 4, !dbg !18025
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18026
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !18027, !ctir !1388
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18026, !ctir !1389
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18028
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !18029, !ctir !1388
  %39 = load i8*, i8** %left_quote, align 8, !dbg !18029, !ctir !146
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18030
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !18031, !ctir !1388
  %41 = load i8*, i8** %right_quote, align 8, !dbg !18031, !ctir !146
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !18032
  store i64 %call21, i64* %qsize, align 8, !dbg !18018
  %42 = load i64, i64* %size, align 8, !dbg !18033
  %43 = load i64, i64* %qsize, align 8, !dbg !18035
  %cmp22 = icmp ule i64 %42, %43, !dbg !18036
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !18037

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !18038
  %add25 = add i64 %44, 1, !dbg !18040
  store i64 %add25, i64* %size, align 8, !dbg !18041
  %45 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18042
  %46 = load i32, i32* %n.addr, align 4, !dbg !18043
  %idxprom26 = sext i32 %46 to i64, !dbg !18042
  %arrayidx27 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %45, i64 %idxprom26, !dbg !18042, !ctir !1390
  %size28 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx27, i32 0, i32 0, !dbg !18044, !ctir !1391
  store i64 %add25, i64* %size28, align 8, !dbg !18045, !ctir !149
  %47 = load i8*, i8** %val, align 8, !dbg !18046
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18048
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !18049

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !18050
  call void @free(i8* %48) #13, !dbg !18051
  br label %if.end32, !dbg !18051

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !18052
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !18053
  store i8* %call33, i8** %val, align 8, !dbg !18054
  %50 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18055
  %51 = load i32, i32* %n.addr, align 4, !dbg !18056
  %idxprom34 = sext i32 %51 to i64, !dbg !18055
  %arrayidx35 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %50, i64 %idxprom34, !dbg !18055, !ctir !1390
  %val36 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx35, i32 0, i32 1, !dbg !18057, !ctir !1391
  store i8* %call33, i8** %val36, align 8, !dbg !18058, !ctir !143
  %52 = load i8*, i8** %val, align 8, !dbg !18059
  %53 = load i64, i64* %size, align 8, !dbg !18060
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !18061
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !18062
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18063
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !18064, !ctir !1388
  %57 = load i32, i32* %style37, align 8, !dbg !18064, !ctir !95
  %58 = load i32, i32* %flags, align 4, !dbg !18065
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18066
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !18067, !ctir !1388
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !18066, !ctir !1389
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18068
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !18069, !ctir !1388
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !18069, !ctir !146
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18070
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !18071, !ctir !1388
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !18071, !ctir !146
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !18072
  br label %if.end43, !dbg !18073

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !18074
  %call44 = call i32* @__errno_location() #17, !dbg !18075
  store i32 %64, i32* %call44, align 4, !dbg !18076, !ctir !27
  %65 = load i8*, i8** %val, align 8, !dbg !18077
  ret i8* %65, !dbg !18078
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18079 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18082, metadata !DIExpression()), !dbg !18083
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18084, metadata !DIExpression()), !dbg !18085
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18086, metadata !DIExpression()), !dbg !18087
  %0 = load i32, i32* %n.addr, align 4, !dbg !18088
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18089
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18090
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !18091
  ret i8* %call, !dbg !18092
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #0 !dbg !18093 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18094, metadata !DIExpression()), !dbg !18095
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18096
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !18097
  ret i8* %call, !dbg !18098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #0 !dbg !18099 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18100, metadata !DIExpression()), !dbg !18101
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18102, metadata !DIExpression()), !dbg !18103
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18104
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18105
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !18106
  ret i8* %call, !dbg !18107
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #0 !dbg !18108 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1388
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18111, metadata !DIExpression()), !dbg !18112
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18113, metadata !DIExpression()), !dbg !18114
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18115, metadata !DIExpression()), !dbg !18116
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18117, metadata !DIExpression()), !dbg !18118
  %0 = load i32, i32* %s.addr, align 4, !dbg !18119
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18120
  %1 = load i32, i32* %n.addr, align 4, !dbg !18121
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18122
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !18123
  ret i8* %call, !dbg !18124
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #0 !dbg !18125 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !18128, metadata !DIExpression()), !dbg !18129
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !18130, metadata !DIExpression()), !dbg !18131
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !18131
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !18131
  %1 = load i32, i32* %style.addr, align 4, !dbg !18132
  %cmp = icmp eq i32 %1, 10, !dbg !18134
  br i1 %cmp, label %if.then, label %if.end, !dbg !18135

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18136
  unreachable, !dbg !18136

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !18137
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !18138, !ctir !1377
  store i32 %2, i32* %style1, align 8, !dbg !18139, !ctir !95
  ret void, !dbg !18140
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18141 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1388
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18144, metadata !DIExpression()), !dbg !18145
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18146, metadata !DIExpression()), !dbg !18147
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18148, metadata !DIExpression()), !dbg !18149
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18150, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18152, metadata !DIExpression()), !dbg !18153
  %0 = load i32, i32* %s.addr, align 4, !dbg !18154
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18155
  %1 = load i32, i32* %n.addr, align 4, !dbg !18156
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18157
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18158
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !18159
  ret i8* %call, !dbg !18160
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #0 !dbg !18161 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18164, metadata !DIExpression()), !dbg !18165
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18166, metadata !DIExpression()), !dbg !18167
  %0 = load i32, i32* %s.addr, align 4, !dbg !18168
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18169
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !18170
  ret i8* %call, !dbg !18171
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18172 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18175, metadata !DIExpression()), !dbg !18176
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18177, metadata !DIExpression()), !dbg !18178
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18179, metadata !DIExpression()), !dbg !18180
  %0 = load i32, i32* %s.addr, align 4, !dbg !18181
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18182
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18183
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !18184
  ret i8* %call, !dbg !18185
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #0 !dbg !18186 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !1377
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18189, metadata !DIExpression()), !dbg !18190
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18191, metadata !DIExpression()), !dbg !18192
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18193, metadata !DIExpression()), !dbg !18194
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18195, metadata !DIExpression()), !dbg !18196
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !18197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18197
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18198
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !18199
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18200
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18201
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !18202
  ret i8* %call1, !dbg !18203
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #0 !dbg !18204 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18207, metadata !DIExpression()), !dbg !18208
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18209, metadata !DIExpression()), !dbg !18210
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18211
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18212
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !18213
  ret i8* %call, !dbg !18214
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #0 !dbg !18215 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18216, metadata !DIExpression()), !dbg !18217
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18218
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !18219
  ret i8* %call, !dbg !18220
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #0 !dbg !18221 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18222, metadata !DIExpression()), !dbg !18223
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18224, metadata !DIExpression()), !dbg !18225
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18226
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18227
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !18228
  ret i8* %call, !dbg !18229
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #0 !dbg !18230 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !1377
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18231, metadata !DIExpression()), !dbg !18232
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18233, metadata !DIExpression()), !dbg !18234
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18235, metadata !DIExpression()), !dbg !18236
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18237, metadata !DIExpression()), !dbg !18238
  %0 = load i32, i32* %s.addr, align 4, !dbg !18239
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !18240
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !18240
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !18240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !18240
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !18241
  %3 = load i32, i32* %n.addr, align 4, !dbg !18242
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18243
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !18244
  ret i8* %call1, !dbg !18245
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18246 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18249, metadata !DIExpression()), !dbg !18250
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18251, metadata !DIExpression()), !dbg !18252
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18253, metadata !DIExpression()), !dbg !18254
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18255, metadata !DIExpression()), !dbg !18256
  %0 = load i32, i32* %n.addr, align 4, !dbg !18257
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18258
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18259
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !18260
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !18261
  ret i8* %call, !dbg !18262
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18263 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1377
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18266, metadata !DIExpression()), !dbg !18267
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18268, metadata !DIExpression()), !dbg !18269
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18270, metadata !DIExpression()), !dbg !18271
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18272, metadata !DIExpression()), !dbg !18273
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18274, metadata !DIExpression()), !dbg !18275
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18276, metadata !DIExpression()), !dbg !18277
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !18278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18278
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18279
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18280
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !18281
  %3 = load i32, i32* %n.addr, align 4, !dbg !18282
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18283
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !18284
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !18285
  ret i8* %call, !dbg !18286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18287 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18290, metadata !DIExpression()), !dbg !18291
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18292, metadata !DIExpression()), !dbg !18293
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18294, metadata !DIExpression()), !dbg !18295
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18296
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18297
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18298
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !18299
  ret i8* %call, !dbg !18300
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18301 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18304, metadata !DIExpression()), !dbg !18305
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18306, metadata !DIExpression()), !dbg !18307
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18308, metadata !DIExpression()), !dbg !18309
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18310, metadata !DIExpression()), !dbg !18311
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18312
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18313
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18314
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18315
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !18316
  ret i8* %call, !dbg !18317
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18318 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18321, metadata !DIExpression()), !dbg !18322
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18323, metadata !DIExpression()), !dbg !18324
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18325, metadata !DIExpression()), !dbg !18326
  %0 = load i32, i32* %n.addr, align 4, !dbg !18327
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18328
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18329
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !18330
  ret i8* %call, !dbg !18331
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #0 !dbg !18332 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18335, metadata !DIExpression()), !dbg !18336
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18337, metadata !DIExpression()), !dbg !18338
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18339
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18340
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !18341
  ret i8* %call, !dbg !18342
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #0 !dbg !18343 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18346, metadata !DIExpression()), !dbg !18347
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18348, metadata !DIExpression()), !dbg !18349
  %0 = load i32, i32* %n.addr, align 4, !dbg !18350
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18351
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !18352
  ret i8* %call, !dbg !18353
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #0 !dbg !18354 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18355, metadata !DIExpression()), !dbg !18356
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18357
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !18358
  ret i8* %call, !dbg !18359
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #0 !dbg !18360 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18364, metadata !DIExpression()), !dbg !18365
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18366, metadata !DIExpression()), !dbg !18367
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18368
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18369
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !18370
  ret i1 %call, !dbg !18371
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #0 !dbg !18372 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !146
  %dest_basename = alloca i8*, align 8, !ctir !146
  %source_baselen = alloca i64, align 8, !ctir !149
  %dest_baselen = alloca i64, align 8, !ctir !149
  %identical_basenames = alloca i8, align 1, !ctir !141
  %compare_dirs = alloca i8, align 1, !ctir !141
  %same = alloca i8, align 1, !ctir !141
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !18375
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !18375
  %source_dirname = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %dest_dirname = alloca i8*, align 8, !ctir !143
  store i32 %source_dfd, i32* %source_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !18396, metadata !DIExpression()), !dbg !18397
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18398, metadata !DIExpression()), !dbg !18399
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !18400, metadata !DIExpression()), !dbg !18401
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18402, metadata !DIExpression()), !dbg !18403
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !18404, metadata !DIExpression()), !dbg !18405
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18406
  %call = call i8* @last_component(i8* %0) #16, !dbg !18407
  store i8* %call, i8** %source_basename, align 8, !dbg !18405
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !18408, metadata !DIExpression()), !dbg !18409
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18410
  %call1 = call i8* @last_component(i8* %1) #16, !dbg !18411
  store i8* %call1, i8** %dest_basename, align 8, !dbg !18409
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !18412, metadata !DIExpression()), !dbg !18413
  %2 = load i8*, i8** %source_basename, align 8, !dbg !18414
  %call2 = call i64 @base_len(i8* %2) #16, !dbg !18415
  store i64 %call2, i64* %source_baselen, align 8, !dbg !18413
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !18416, metadata !DIExpression()), !dbg !18417
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !18418
  %call3 = call i64 @base_len(i8* %3) #16, !dbg !18419
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !18417
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !18420, metadata !DIExpression()), !dbg !18421
  %4 = load i64, i64* %source_baselen, align 8, !dbg !18422
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !18423
  %cmp = icmp eq i64 %4, %5, !dbg !18424
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18425

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !18426
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !18427
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !18428
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #16, !dbg !18429
  %cmp5 = icmp eq i32 %call4, 0, !dbg !18430
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !18431
  %frombool = zext i1 %9 to i8, !dbg !18421
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !18421
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !18432, metadata !DIExpression()), !dbg !18433
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !18434
  %tobool = trunc i8 %10 to i1, !dbg !18434
  %frombool6 = zext i1 %tobool to i8, !dbg !18433
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !18433
  call void @llvm.dbg.declare(metadata i8* %same, metadata !18435, metadata !DIExpression()), !dbg !18436
  store i8 0, i8* %same, align 1, !dbg !18436
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !18437
  %tobool7 = trunc i8 %11 to i1, !dbg !18437
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !18439

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !18440, metadata !DIExpression()), !dbg !18442
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !18443, metadata !DIExpression()), !dbg !18444
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !18445, metadata !DIExpression()), !dbg !18446
  %12 = load i8*, i8** %source.addr, align 8, !dbg !18447
  %call8 = call i8* @dir_name(i8* %12), !dbg !18448
  store i8* %call8, i8** %source_dirname, align 8, !dbg !18446
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18449, metadata !DIExpression()), !dbg !18450
  store i32 256, i32* %flags, align 4, !dbg !18450
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !18451
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !18453
  %15 = load i32, i32* %flags, align 4, !dbg !18454
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #13, !dbg !18455
  %cmp10 = icmp ne i32 %call9, 0, !dbg !18456
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !18457

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #17, !dbg !18458
  %16 = load i32, i32* %call12, align 4, !dbg !18458, !ctir !27
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !18460
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.418, i64 0, i64 0), i8* %17), !dbg !18461
  br label %if.end, !dbg !18462

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !18463
  call void @free(i8* %18) #13, !dbg !18464
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !18465, metadata !DIExpression()), !dbg !18466
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !18467
  %call13 = call i8* @dir_name(i8* %19), !dbg !18468
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !18466
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !18469
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !18471
  %22 = load i32, i32* %flags, align 4, !dbg !18472
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #13, !dbg !18473
  %cmp15 = icmp ne i32 %call14, 0, !dbg !18474
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !18475

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #17, !dbg !18476
  %23 = load i32, i32* %call17, align 4, !dbg !18476, !ctir !27
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !18478
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.418, i64 0, i64 0), i8* %24), !dbg !18479
  br label %if.end18, !dbg !18480

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !18481, !ctir !18375
  %25 = load i64, i64* %st_ino, align 8, !dbg !18481, !ctir !196
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !18481, !ctir !18375
  %26 = load i64, i64* %st_ino19, align 8, !dbg !18481, !ctir !196
  %cmp20 = icmp eq i64 %25, %26, !dbg !18481
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !18481

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !18481, !ctir !18375
  %27 = load i64, i64* %st_dev, align 8, !dbg !18481, !ctir !194
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !18481, !ctir !18375
  %28 = load i64, i64* %st_dev22, align 8, !dbg !18481, !ctir !194
  %cmp23 = icmp eq i64 %27, %28, !dbg !18481
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !18482
  %frombool25 = zext i1 %29 to i8, !dbg !18483
  store i8 %frombool25, i8* %same, align 1, !dbg !18483
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !18484
  call void @free(i8* %30) #13, !dbg !18485
  br label %if.end26, !dbg !18486

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !18487
  %tobool27 = trunc i8 %31 to i1, !dbg !18487
  ret i1 %tobool27, !dbg !18488
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #0 !dbg !18489 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18495, metadata !DIExpression()), !dbg !18496
  %call = call i32* @__errno_location() #17, !dbg !18497
  store i32 95, i32* %call, align 4, !dbg !18498, !ctir !27
  ret i32 -1, !dbg !18499
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #0 !dbg !18500 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18503, metadata !DIExpression()), !dbg !18504
  ret void, !dbg !18505
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #0 !dbg !18506 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18507, metadata !DIExpression()), !dbg !18508
  %call = call i32* @__errno_location() #17, !dbg !18509
  store i32 95, i32* %call, align 4, !dbg !18510, !ctir !27
  ret i32 -1, !dbg !18511
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #0 !dbg !18512 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18515, metadata !DIExpression()), !dbg !18516
  %call = call i32* @__errno_location() #17, !dbg !18517
  store i32 95, i32* %call, align 4, !dbg !18518, !ctir !27
  ret i32 -1, !dbg !18519
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #0 !dbg !18520 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18523, metadata !DIExpression()), !dbg !18524
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !18525, metadata !DIExpression()), !dbg !18526
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  %call = call i32* @__errno_location() #17, !dbg !18529
  store i32 95, i32* %call, align 4, !dbg !18530, !ctir !27
  ret i32 -1, !dbg !18531
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #0 !dbg !18532 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18535, metadata !DIExpression()), !dbg !18536
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18537, metadata !DIExpression()), !dbg !18538
  %call = call i32* @__errno_location() #17, !dbg !18539
  store i32 95, i32* %call, align 4, !dbg !18540, !ctir !27
  ret i32 -1, !dbg !18541
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #0 !dbg !18542 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18543, metadata !DIExpression()), !dbg !18544
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18545, metadata !DIExpression()), !dbg !18546
  %call = call i32* @__errno_location() #17, !dbg !18547
  store i32 95, i32* %call, align 4, !dbg !18548, !ctir !27
  ret i32 -1, !dbg !18549
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #0 !dbg !18550 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18553, metadata !DIExpression()), !dbg !18554
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18555, metadata !DIExpression()), !dbg !18556
  %call = call i32* @__errno_location() #17, !dbg !18557
  store i32 95, i32* %call, align 4, !dbg !18558, !ctir !27
  ret i32 -1, !dbg !18559
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #0 !dbg !18560 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18563, metadata !DIExpression()), !dbg !18564
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18565, metadata !DIExpression()), !dbg !18566
  %call = call i32* @__errno_location() #17, !dbg !18567
  store i32 95, i32* %call, align 4, !dbg !18568, !ctir !27
  ret i32 -1, !dbg !18569
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #0 !dbg !18570 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18571, metadata !DIExpression()), !dbg !18572
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18573, metadata !DIExpression()), !dbg !18574
  %call = call i32* @__errno_location() #17, !dbg !18575
  store i32 95, i32* %call, align 4, !dbg !18576, !ctir !27
  ret i32 -1, !dbg !18577
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #0 !dbg !18578 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18581, metadata !DIExpression()), !dbg !18582
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18583, metadata !DIExpression()), !dbg !18584
  %call = call i32* @__errno_location() #17, !dbg !18585
  store i32 95, i32* %call, align 4, !dbg !18586, !ctir !27
  ret i32 -1, !dbg !18587
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #0 !dbg !18588 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18589, metadata !DIExpression()), !dbg !18590
  %call = call i32* @__errno_location() #17, !dbg !18591
  store i32 95, i32* %call, align 4, !dbg !18592, !ctir !27
  ret i32 -1, !dbg !18593
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #0 !dbg !18594 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18595, metadata !DIExpression()), !dbg !18596
  %call = call i32* @__errno_location() #17, !dbg !18597
  store i32 95, i32* %call, align 4, !dbg !18598, !ctir !27
  ret i32 -1, !dbg !18599
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #0 !dbg !18600 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18601, metadata !DIExpression()), !dbg !18602
  %call = call i32* @__errno_location() #17, !dbg !18603
  store i32 95, i32* %call, align 4, !dbg !18604, !ctir !27
  ret i32 -1, !dbg !18605
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #0 !dbg !18606 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !18610, metadata !DIExpression()), !dbg !18611
  store i8* %tcon, i8** %tcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !18612, metadata !DIExpression()), !dbg !18613
  store i16 %tclass, i16* %tclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !18614, metadata !DIExpression()), !dbg !18615
  store i8** %newcon, i8*** %newcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !18616, metadata !DIExpression()), !dbg !18617
  %call = call i32* @__errno_location() #17, !dbg !18618
  store i32 95, i32* %call, align 4, !dbg !18619, !ctir !27
  ret i32 -1, !dbg !18620
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #0 !dbg !18621 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18624, metadata !DIExpression()), !dbg !18625
  %call = call i32* @__errno_location() #17, !dbg !18626
  store i32 95, i32* %call, align 4, !dbg !18627, !ctir !27
  ret i16 0, !dbg !18628
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #0 !dbg !18629 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !18630, metadata !DIExpression()), !dbg !18631
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !18632, metadata !DIExpression()), !dbg !18633
  %call = call i32* @__errno_location() #17, !dbg !18634
  store i32 95, i32* %call, align 4, !dbg !18635, !ctir !27
  ret i32 -1, !dbg !18636
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !18637 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18664, metadata !DIExpression()), !dbg !18665
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18666
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18666, !ctir !18642
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_atim, i32 0, i32 1, !dbg !18667, !ctir !18657
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18667, !ctir !217
  ret i64 %1, !dbg !18668
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !18669 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18670, metadata !DIExpression()), !dbg !18671
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18672
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18672, !ctir !18642
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_ctim, i32 0, i32 1, !dbg !18673, !ctir !18657
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18673, !ctir !217
  ret i64 %1, !dbg !18674
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !18675 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18676, metadata !DIExpression()), !dbg !18677
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18678
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18678, !ctir !18642
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_mtim, i32 0, i32 1, !dbg !18679, !ctir !18657
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18679, !ctir !217
  ret i64 %1, !dbg !18680
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !18681 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18682, metadata !DIExpression()), !dbg !18683
  ret i64 0, !dbg !18684
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !18685 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18688, metadata !DIExpression()), !dbg !18689
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18690
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18690, !ctir !18642
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18690
  %2 = bitcast %struct.dev_ino* %st_atim to i8*, !dbg !18690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18690
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18691
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18691
  ret { i64, i64 } %4, !dbg !18691
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !18692 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18693, metadata !DIExpression()), !dbg !18694
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18695
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18695, !ctir !18642
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18695
  %2 = bitcast %struct.dev_ino* %st_ctim to i8*, !dbg !18695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18695
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18696
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18696
  ret { i64, i64 } %4, !dbg !18696
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !18697 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18698, metadata !DIExpression()), !dbg !18699
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18700
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18700, !ctir !18642
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18700
  %2 = bitcast %struct.dev_ino* %st_mtim to i8*, !dbg !18700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18700
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18701
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18701
  ret { i64, i64 } %4, !dbg !18701
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !18702 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18703, metadata !DIExpression()), !dbg !18704
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18705, metadata !DIExpression()), !dbg !18706
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18707, !ctir !18657
  store i64 -1, i64* %tv_sec, align 8, !dbg !18708, !ctir !164
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18709, !ctir !18657
  store i64 -1, i64* %tv_nsec, align 8, !dbg !18710, !ctir !217
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18711
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !18711
  ret { i64, i64 } %1, !dbg !18711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #0 !dbg !18712 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !18716, metadata !DIExpression()), !dbg !18717
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18718, metadata !DIExpression()), !dbg !18719
  %0 = load i32, i32* %result.addr, align 4, !dbg !18720
  ret i32 %0, !dbg !18721
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @make_timespec(i64 %s, i64 %ns) #0 !dbg !18722 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %s.addr = alloca i64, align 8
  %ns.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18730, metadata !DIExpression()), !dbg !18731
  store i64 %ns, i64* %ns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !18732, metadata !DIExpression()), !dbg !18733
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18734, metadata !DIExpression()), !dbg !18735
  %0 = load i64, i64* %s.addr, align 8, !dbg !18736
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18737, !ctir !18726
  store i64 %0, i64* %tv_sec, align 8, !dbg !18738, !ctir !164
  %1 = load i64, i64* %ns.addr, align 8, !dbg !18739
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18740, !ctir !18726
  store i64 %1, i64* %tv_nsec, align 8, !dbg !18741, !ctir !217
  %2 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18742
  %3 = load { i64, i64 }, { i64, i64 }* %2, align 8, !dbg !18742
  ret { i64, i64 } %3, !dbg !18742
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_cmp(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) #9 !dbg !18743 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.dev_ino, align 8
  %b = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  %3 = bitcast %struct.dev_ino* %b to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %b.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %b.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18746, metadata !DIExpression()), !dbg !18747
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %b, metadata !18748, metadata !DIExpression()), !dbg !18749
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18750, !ctir !18726
  %6 = load i64, i64* %tv_sec, align 8, !dbg !18750, !ctir !164
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !18752, !ctir !18726
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !18752, !ctir !164
  %cmp = icmp slt i64 %6, %7, !dbg !18753
  br i1 %cmp, label %if.then, label %if.end, !dbg !18754

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !18755
  br label %return, !dbg !18755

if.end:                                           ; preds = %entry
  %tv_sec2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18756, !ctir !18726
  %8 = load i64, i64* %tv_sec2, align 8, !dbg !18756, !ctir !164
  %tv_sec3 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !18758, !ctir !18726
  %9 = load i64, i64* %tv_sec3, align 8, !dbg !18758, !ctir !164
  %cmp4 = icmp sgt i64 %8, %9, !dbg !18759
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18760

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !18761
  br label %return, !dbg !18761

if.end6:                                          ; preds = %if.end
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18762, !ctir !18726
  %10 = load i64, i64* %tv_nsec, align 8, !dbg !18762, !ctir !217
  %cmp7 = icmp sle i64 -1, %10, !dbg !18762
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !18762

land.lhs.true:                                    ; preds = %if.end6
  %tv_nsec8 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18762, !ctir !18726
  %11 = load i64, i64* %tv_nsec8, align 8, !dbg !18762, !ctir !217
  %cmp9 = icmp sle i64 %11, 2000000000, !dbg !18762
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !18762

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !18762

cond.false:                                       ; preds = %land.lhs.true, %if.end6
  unreachable, !dbg !18762

unreachable.cont:                                 ; No predecessors!
  br label %cond.end, !dbg !18762

cond.end:                                         ; preds = %unreachable.cont, %cond.true
  %tv_nsec10 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18763, !ctir !18726
  %12 = load i64, i64* %tv_nsec10, align 8, !dbg !18763, !ctir !217
  %cmp11 = icmp sle i64 -1, %12, !dbg !18763
  br i1 %cmp11, label %land.lhs.true12, label %cond.false16, !dbg !18763

land.lhs.true12:                                  ; preds = %cond.end
  %tv_nsec13 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18763, !ctir !18726
  %13 = load i64, i64* %tv_nsec13, align 8, !dbg !18763, !ctir !217
  %cmp14 = icmp sle i64 %13, 2000000000, !dbg !18763
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !18763

cond.true15:                                      ; preds = %land.lhs.true12
  br label %cond.end18, !dbg !18763

cond.false16:                                     ; preds = %land.lhs.true12, %cond.end
  unreachable, !dbg !18763

unreachable.cont17:                               ; No predecessors!
  br label %cond.end18, !dbg !18763

cond.end18:                                       ; preds = %unreachable.cont17, %cond.true15
  %tv_nsec19 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18764, !ctir !18726
  %14 = load i64, i64* %tv_nsec19, align 8, !dbg !18764, !ctir !217
  %tv_nsec20 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18765, !ctir !18726
  %15 = load i64, i64* %tv_nsec20, align 8, !dbg !18765, !ctir !217
  %sub = sub nsw i64 %14, %15, !dbg !18766
  %conv = trunc i64 %sub to i32, !dbg !18767
  store i32 %conv, i32* %retval, align 4, !dbg !18768
  br label %return, !dbg !18768

return:                                           ; preds = %cond.end18, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !18769
  ret i32 %16, !dbg !18769
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_sign(i64 %a.coerce0, i64 %a.coerce1) #9 !dbg !18770 {
entry:
  %a = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18773, metadata !DIExpression()), !dbg !18774
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18775, !ctir !18726
  %3 = load i64, i64* %tv_sec, align 8, !dbg !18775, !ctir !164
  %cmp = icmp slt i64 %3, 0, !dbg !18776
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18777

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !18777

cond.false:                                       ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18778, !ctir !18726
  %4 = load i64, i64* %tv_sec1, align 8, !dbg !18778, !ctir !164
  %tobool = icmp ne i64 %4, 0, !dbg !18779
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !18780

lor.rhs:                                          ; preds = %cond.false
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18781, !ctir !18726
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !18781, !ctir !217
  %tobool2 = icmp ne i64 %5, 0, !dbg !18780
  br label %lor.end, !dbg !18780

lor.end:                                          ; preds = %lor.rhs, %cond.false
  %6 = phi i1 [ true, %cond.false ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !18780
  br label %cond.end, !dbg !18777

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %lor.ext, %lor.end ], !dbg !18777
  ret i32 %cond, !dbg !18782
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timespectod(i64 %a.coerce0, i64 %a.coerce1) #0 !dbg !18783 {
entry:
  %a = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18787, metadata !DIExpression()), !dbg !18788
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18789, !ctir !18726
  %3 = load i64, i64* %tv_sec, align 8, !dbg !18789, !ctir !164
  %conv = sitofp i64 %3 to double, !dbg !18790
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18791, !ctir !18726
  %4 = load i64, i64* %tv_nsec, align 8, !dbg !18791, !ctir !217
  %conv1 = sitofp i64 %4 to double, !dbg !18792
  %div = fdiv double %conv1, 1.000000e+09, !dbg !18793
  %add = fadd double %conv, %div, !dbg !18794
  ret double %add, !dbg !18795
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #0 !dbg !18796 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18802, metadata !DIExpression()), !dbg !18803
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18804, metadata !DIExpression()), !dbg !18805
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18806, metadata !DIExpression()), !dbg !18807
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18808, metadata !DIExpression()), !dbg !18809
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18810, metadata !DIExpression()), !dbg !18811
  store i64 %n_authors, i64* %n_authors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18812, metadata !DIExpression()), !dbg !18813
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18814
  %tobool = icmp ne i8* %0, null, !dbg !18814
  br i1 %tobool, label %if.then, label %if.else, !dbg !18816

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18817
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !18818
  %3 = load i8*, i8** %package.addr, align 8, !dbg !18819
  %4 = load i8*, i8** %version.addr, align 8, !dbg !18820
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.433, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !18821
  br label %if.end, !dbg !18821

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18822
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18823
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18824
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.434, i64 0, i64 0), i8* %6, i8* %7), !dbg !18825
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18826
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.435, i64 0, i64 0)) #13, !dbg !18827
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !18828
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18829
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.436, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !18829
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18830
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.437, i64 0, i64 0)) #13, !dbg !18831
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.438, i64 0, i64 0)), !dbg !18832
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18833
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.436, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !18833
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !18834
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !18835

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !18836

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18838
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.439, i64 0, i64 0)) #13, !dbg !18839
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !18840
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !18840, !ctir !681
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !18840
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !18841
  br label %sw.epilog, !dbg !18842

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18843
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.440, i64 0, i64 0)) #13, !dbg !18844
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !18845
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !18845, !ctir !681
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !18845
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !18846
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !18846, !ctir !681
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !18846
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !18847
  br label %sw.epilog, !dbg !18848

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18849
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.441, i64 0, i64 0)) #13, !dbg !18850
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !18851
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !18851, !ctir !681
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !18851
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !18852
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !18852, !ctir !681
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !18852
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !18853
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !18853, !ctir !681
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !18853
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !18854
  br label %sw.epilog, !dbg !18855

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18856
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.442, i64 0, i64 0)) #13, !dbg !18857
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !18858
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !18858, !ctir !681
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !18858
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !18859
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !18859, !ctir !681
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !18859
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !18860
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !18860, !ctir !681
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !18860
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !18861
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !18861, !ctir !681
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !18861
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !18862
  br label %sw.epilog, !dbg !18863

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18864
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.443, i64 0, i64 0)) #13, !dbg !18865
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !18866
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !18866, !ctir !681
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !18866
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !18867
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !18867, !ctir !681
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !18867
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !18868
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !18868, !ctir !681
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !18868
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !18869
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !18869, !ctir !681
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !18869
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !18870
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !18870, !ctir !681
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !18870
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !18871
  br label %sw.epilog, !dbg !18872

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18873
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.444, i64 0, i64 0)) #13, !dbg !18874
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !18875
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !18875, !ctir !681
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !18875
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !18876
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !18876, !ctir !681
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !18876
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !18877
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !18877, !ctir !681
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !18877
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !18878
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !18878, !ctir !681
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !18878
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !18879
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !18879, !ctir !681
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !18879
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !18880
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !18880, !ctir !681
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !18880
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !18881
  br label %sw.epilog, !dbg !18882

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18883
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.445, i64 0, i64 0)) #13, !dbg !18884
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !18885
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !18885, !ctir !681
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !18885
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !18886
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !18886, !ctir !681
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !18886
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !18887
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !18887, !ctir !681
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !18887
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !18888
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !18888, !ctir !681
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !18888
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !18889
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !18889, !ctir !681
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !18889
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !18890
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !18890, !ctir !681
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !18890
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !18891
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !18891, !ctir !681
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !18891
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !18892
  br label %sw.epilog, !dbg !18893

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18894
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.446, i64 0, i64 0)) #13, !dbg !18895
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !18896
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !18896, !ctir !681
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !18896
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !18897
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !18897, !ctir !681
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !18897
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !18898
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !18898, !ctir !681
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !18898
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !18899
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !18899, !ctir !681
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !18899
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !18900
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !18900, !ctir !681
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !18900
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !18901
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !18901, !ctir !681
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !18901
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !18902
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !18902, !ctir !681
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !18902
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !18903
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !18903, !ctir !681
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !18903
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !18904
  br label %sw.epilog, !dbg !18905

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18906
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.447, i64 0, i64 0)) #13, !dbg !18907
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !18908
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !18908, !ctir !681
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !18908
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !18909
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !18909, !ctir !681
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !18909
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !18910
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !18910, !ctir !681
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !18910
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !18911
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !18911, !ctir !681
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !18911
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !18912
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !18912, !ctir !681
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !18912
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !18913
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !18913, !ctir !681
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !18913
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !18914
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !18914, !ctir !681
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !18914
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !18915
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !18915, !ctir !681
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !18915
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !18916
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !18916, !ctir !681
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !18916
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !18917
  br label %sw.epilog, !dbg !18918

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18919
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.448, i64 0, i64 0)) #13, !dbg !18920
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !18921
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !18921, !ctir !681
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !18921
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !18922
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !18922, !ctir !681
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !18922
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !18923
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !18923, !ctir !681
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !18923
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !18924
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !18924, !ctir !681
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !18924
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !18925
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !18925, !ctir !681
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !18925
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !18926
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !18926, !ctir !681
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !18926
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !18927
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !18927, !ctir !681
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !18927
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !18928
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !18928, !ctir !681
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !18928
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !18929
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !18929, !ctir !681
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !18929
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !18930
  br label %sw.epilog, !dbg !18931

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !18932
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #0 !dbg !18933 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !149
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18936, metadata !DIExpression()), !dbg !18937
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18938, metadata !DIExpression()), !dbg !18939
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18940, metadata !DIExpression()), !dbg !18941
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18942, metadata !DIExpression()), !dbg !18943
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18944, metadata !DIExpression()), !dbg !18945
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18946, metadata !DIExpression()), !dbg !18947
  store i64 0, i64* %n_authors, align 8, !dbg !18948
  br label %for.cond, !dbg !18950

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !18951
  %1 = load i64, i64* %n_authors, align 8, !dbg !18953
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !18951, !ctir !681
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !18951
  %tobool = icmp ne i8* %2, null, !dbg !18954
  br i1 %tobool, label %for.body, label %for.end, !dbg !18954

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !18954

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !18955
  %inc = add i64 %3, 1, !dbg !18955
  store i64 %inc, i64* %n_authors, align 8, !dbg !18955
  br label %for.cond, !dbg !18956, !llvm.loop !18957

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18959
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !18960
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18961
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18962
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !18963
  %9 = load i64, i64* %n_authors, align 8, !dbg !18964
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !18965
  ret void, !dbg !18966
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #0 !dbg !18967 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !149
  %authtab = alloca [10 x i8*], align 16, !ctir !1643
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18971, metadata !DIExpression()), !dbg !18972
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18973, metadata !DIExpression()), !dbg !18974
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18975, metadata !DIExpression()), !dbg !18976
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18977, metadata !DIExpression()), !dbg !18978
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !18979, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18981, metadata !DIExpression()), !dbg !18982
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !18983, metadata !DIExpression()), !dbg !18984
  store i64 0, i64* %n_authors, align 8, !dbg !18985
  br label %for.cond, !dbg !18987

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !18988
  %cmp = icmp ult i64 %0, 10, !dbg !18990
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18991

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !18992
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !18992
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !18992
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18992
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18992

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !18992
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !18992
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18992
  %4 = bitcast i8* %3 to i8**, !dbg !18992
  %5 = add i32 %gp_offset, 8, !dbg !18992
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !18992
  br label %vaarg.end, !dbg !18992

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !18992
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18992
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !18992
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18992
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18992
  br label %vaarg.end, !dbg !18992

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !18992
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !18992
  %8 = load i64, i64* %n_authors, align 8, !dbg !18993
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !18994, !ctir !1643
  store i8* %7, i8** %arrayidx, align 8, !dbg !18995
  %cmp1 = icmp ne i8* %7, null, !dbg !18996
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !18997
  br i1 %9, label %for.body, label %for.end, !dbg !18998

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !18998

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !18999
  %inc = add i64 %10, 1, !dbg !18999
  store i64 %inc, i64* %n_authors, align 8, !dbg !18999
  br label %for.cond, !dbg !19000, !llvm.loop !19001

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19003
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !19004
  %13 = load i8*, i8** %package.addr, align 8, !dbg !19005
  %14 = load i8*, i8** %version.addr, align 8, !dbg !19006
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !19007, !ctir !1643
  %15 = load i64, i64* %n_authors, align 8, !dbg !19008
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !19009
  ret void, !dbg !19010
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #0 !dbg !19011 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1644
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19014, metadata !DIExpression()), !dbg !19015
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19016, metadata !DIExpression()), !dbg !19017
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19018, metadata !DIExpression()), !dbg !19019
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19020, metadata !DIExpression()), !dbg !19021
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !19022, metadata !DIExpression()), !dbg !19023
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19024, !ctir !1644
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19024
  call void @llvm.va_start(i8* %arraydecay1), !dbg !19024
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19025
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !19026
  %2 = load i8*, i8** %package.addr, align 8, !dbg !19027
  %3 = load i8*, i8** %version.addr, align 8, !dbg !19028
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19029, !ctir !1644
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !19030
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19031, !ctir !1644
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19031
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19031
  ret void, !dbg !19032
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #0 !dbg !19033 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !19034
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.436, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !19034
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.451, i64 0, i64 0)) #13, !dbg !19035
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.452, i64 0, i64 0)), !dbg !19036
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.453, i64 0, i64 0)) #13, !dbg !19037
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.454, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.455, i64 0, i64 0)), !dbg !19038
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.456, i64 0, i64 0)) #13, !dbg !19039
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.457, i64 0, i64 0)), !dbg !19040
  ret void, !dbg !19041
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #0 !dbg !19042 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19046, metadata !DIExpression()), !dbg !19047
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19048, metadata !DIExpression()), !dbg !19049
  %0 = load i64, i64* %s.addr, align 8, !dbg !19050
  %div = udiv i64 9223372036854775807, %0, !dbg !19050
  %1 = load i64, i64* %n.addr, align 8, !dbg !19050
  %cmp = icmp ult i64 %div, %1, !dbg !19050
  br i1 %cmp, label %if.then, label %if.end, !dbg !19052

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19053
  unreachable, !dbg !19053

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19054
  %3 = load i64, i64* %s.addr, align 8, !dbg !19055
  %mul = mul i64 %2, %3, !dbg !19056
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !19057
  ret i8* %call, !dbg !19058
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #0 !dbg !19059 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19061, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19063, metadata !DIExpression()), !dbg !19064
  %0 = load i64, i64* %n.addr, align 8, !dbg !19065
  %call = call noalias i8* @malloc(i64 %0) #13, !dbg !19066
  store i8* %call, i8** %p, align 8, !dbg !19064
  %1 = load i8*, i8** %p, align 8, !dbg !19067
  %tobool = icmp ne i8* %1, null, !dbg !19067
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19069

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19070
  %cmp = icmp ne i64 %2, 0, !dbg !19071
  br i1 %cmp, label %if.then, label %if.end, !dbg !19072

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19073
  unreachable, !dbg !19073

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !19074
  ret i8* %3, !dbg !19075
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #0 !dbg !19076 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19079, metadata !DIExpression()), !dbg !19080
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19081, metadata !DIExpression()), !dbg !19082
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19083, metadata !DIExpression()), !dbg !19084
  %0 = load i64, i64* %s.addr, align 8, !dbg !19085
  %div = udiv i64 9223372036854775807, %0, !dbg !19085
  %1 = load i64, i64* %n.addr, align 8, !dbg !19085
  %cmp = icmp ult i64 %div, %1, !dbg !19085
  br i1 %cmp, label %if.then, label %if.end, !dbg !19087

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19088
  unreachable, !dbg !19088

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19089
  %3 = load i64, i64* %n.addr, align 8, !dbg !19090
  %4 = load i64, i64* %s.addr, align 8, !dbg !19091
  %mul = mul i64 %3, %4, !dbg !19092
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !19093
  ret i8* %call, !dbg !19094
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #0 !dbg !19095 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19096, metadata !DIExpression()), !dbg !19097
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19098, metadata !DIExpression()), !dbg !19099
  %0 = load i64, i64* %n.addr, align 8, !dbg !19100
  %tobool = icmp ne i64 %0, 0, !dbg !19100
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19102

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19103
  %tobool1 = icmp ne i8* %1, null, !dbg !19103
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19104

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19105
  call void @free(i8* %2) #13, !dbg !19107
  store i8* null, i8** %retval, align 8, !dbg !19108
  br label %return, !dbg !19108

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !19109
  %4 = load i64, i64* %n.addr, align 8, !dbg !19110
  %call = call i8* @realloc(i8* %3, i64 %4) #13, !dbg !19111
  store i8* %call, i8** %p.addr, align 8, !dbg !19112
  %5 = load i8*, i8** %p.addr, align 8, !dbg !19113
  %tobool2 = icmp ne i8* %5, null, !dbg !19113
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !19115

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19116
  %tobool4 = icmp ne i64 %6, 0, !dbg !19116
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !19117

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #14, !dbg !19118
  unreachable, !dbg !19118

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !19119
  store i8* %7, i8** %retval, align 8, !dbg !19120
  br label %return, !dbg !19120

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !19121
  ret i8* %8, !dbg !19121
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #0 !dbg !19122 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19125, metadata !DIExpression()), !dbg !19126
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19127, metadata !DIExpression()), !dbg !19128
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19129, metadata !DIExpression()), !dbg !19130
  call void @llvm.dbg.declare(metadata i64* %n, metadata !19131, metadata !DIExpression()), !dbg !19132
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !19133
  %1 = load i64, i64* %0, align 8, !dbg !19134, !ctir !149
  store i64 %1, i64* %n, align 8, !dbg !19132
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19135
  %tobool = icmp ne i8* %2, null, !dbg !19135
  br i1 %tobool, label %if.else, label %if.then, !dbg !19137

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !19138
  %tobool1 = icmp ne i64 %3, 0, !dbg !19138
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19141

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !19142
  %div = udiv i64 128, %4, !dbg !19144
  store i64 %div, i64* %n, align 8, !dbg !19145
  %5 = load i64, i64* %n, align 8, !dbg !19146
  %tobool3 = icmp ne i64 %5, 0, !dbg !19147
  %lnot = xor i1 %tobool3, true, !dbg !19147
  %lnot.ext = zext i1 %lnot to i32, !dbg !19147
  %conv = sext i32 %lnot.ext to i64, !dbg !19147
  %6 = load i64, i64* %n, align 8, !dbg !19148
  %add = add i64 %6, %conv, !dbg !19148
  store i64 %add, i64* %n, align 8, !dbg !19148
  br label %if.end, !dbg !19149

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !19150
  %div4 = udiv i64 9223372036854775807, %7, !dbg !19150
  %8 = load i64, i64* %n, align 8, !dbg !19150
  %cmp = icmp ult i64 %div4, %8, !dbg !19150
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !19152

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !19153
  unreachable, !dbg !19153

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !19154

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !19155
  %div8 = udiv i64 6148914691236517204, %9, !dbg !19158
  %10 = load i64, i64* %n, align 8, !dbg !19159
  %cmp9 = icmp ule i64 %div8, %10, !dbg !19160
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !19161

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #14, !dbg !19162
  unreachable, !dbg !19162

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !19163
  %div13 = udiv i64 %11, 2, !dbg !19164
  %add14 = add i64 %div13, 1, !dbg !19165
  %12 = load i64, i64* %n, align 8, !dbg !19166
  %add15 = add i64 %12, %add14, !dbg !19166
  store i64 %add15, i64* %n, align 8, !dbg !19166
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !19167
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !19168
  store i64 %13, i64* %14, align 8, !dbg !19169, !ctir !149
  %15 = load i8*, i8** %p.addr, align 8, !dbg !19170
  %16 = load i64, i64* %n, align 8, !dbg !19171
  %17 = load i64, i64* %s.addr, align 8, !dbg !19172
  %mul = mul i64 %16, %17, !dbg !19173
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !19174
  ret i8* %call, !dbg !19175
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #0 !dbg !19176 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19179, metadata !DIExpression()), !dbg !19180
  %0 = load i64, i64* %n.addr, align 8, !dbg !19181
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19181
  ret i8* %call, !dbg !19182
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #0 !dbg !19183 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19186, metadata !DIExpression()), !dbg !19187
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19188, metadata !DIExpression()), !dbg !19189
  %0 = load i8*, i8** %p.addr, align 8, !dbg !19190
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !19191
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !19192
  ret i8* %call, !dbg !19193
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #0 !dbg !19194 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19195, metadata !DIExpression()), !dbg !19196
  %0 = load i64, i64* %s.addr, align 8, !dbg !19197
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19198
  %1 = load i64, i64* %s.addr, align 8, !dbg !19199
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !19200
  ret i8* %call, !dbg !19201
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #0 !dbg !19202 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19203, metadata !DIExpression()), !dbg !19204
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19205, metadata !DIExpression()), !dbg !19206
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19207, metadata !DIExpression()), !dbg !19208
  %0 = load i64, i64* %s.addr, align 8, !dbg !19209
  %div = udiv i64 9223372036854775807, %0, !dbg !19209
  %1 = load i64, i64* %n.addr, align 8, !dbg !19209
  %cmp = icmp ult i64 %div, %1, !dbg !19209
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19211

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19212
  %3 = load i64, i64* %s.addr, align 8, !dbg !19213
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #13, !dbg !19214
  store i8* %call, i8** %p, align 8, !dbg !19215
  %tobool = icmp ne i8* %call, null, !dbg !19215
  br i1 %tobool, label %if.end, label %if.then, !dbg !19216

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #14, !dbg !19217
  unreachable, !dbg !19217

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !19218
  ret i8* %4, !dbg !19219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #0 !dbg !19220 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19223, metadata !DIExpression()), !dbg !19224
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19225, metadata !DIExpression()), !dbg !19226
  %0 = load i64, i64* %s.addr, align 8, !dbg !19227
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19228
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19229
  %2 = load i64, i64* %s.addr, align 8, !dbg !19230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !19231
  ret i8* %call, !dbg !19232
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #0 !dbg !19233 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !19234, metadata !DIExpression()), !dbg !19235
  %0 = load i8*, i8** %string.addr, align 8, !dbg !19236
  %1 = load i8*, i8** %string.addr, align 8, !dbg !19237
  %call = call i64 @strlen(i8* %1) #16, !dbg !19238
  %add = add i64 %call, 1, !dbg !19239
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !19240
  ret i8* %call1, !dbg !19241
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #10 !dbg !19242 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !19244
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.476, i64 0, i64 0)) #13, !dbg !19245
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i64 0, i64 0), i8* %call), !dbg !19246
  call void @abort() #15, !dbg !19247
  unreachable, !dbg !19247
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xnumtoumax(i8* %n_str, i32 %base, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19248 {
entry:
  %n_str.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %suffixes.addr = alloca i8*, align 8
  %err.addr = alloca i8*, align 8
  %err_exit.addr = alloca i32, align 4
  %s_err = alloca i32, align 4, !ctir !1267
  %tnum = alloca i64, align 8, !ctir !168
  store i8* %n_str, i8** %n_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19252, metadata !DIExpression()), !dbg !19253
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19254, metadata !DIExpression()), !dbg !19255
  store i64 %min, i64* %min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19256, metadata !DIExpression()), !dbg !19257
  store i64 %max, i64* %max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19258, metadata !DIExpression()), !dbg !19259
  store i8* %suffixes, i8** %suffixes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19260, metadata !DIExpression()), !dbg !19261
  store i8* %err, i8** %err.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19262, metadata !DIExpression()), !dbg !19263
  store i32 %err_exit, i32* %err_exit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19264, metadata !DIExpression()), !dbg !19265
  call void @llvm.dbg.declare(metadata i32* %s_err, metadata !19266, metadata !DIExpression()), !dbg !19267
  call void @llvm.dbg.declare(metadata i64* %tnum, metadata !19268, metadata !DIExpression()), !dbg !19269
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19270
  %1 = load i32, i32* %base.addr, align 4, !dbg !19271
  %2 = load i8*, i8** %suffixes.addr, align 8, !dbg !19272
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 %1, i64* %tnum, i8* %2), !dbg !19273
  store i32 %call, i32* %s_err, align 4, !dbg !19274
  %3 = load i32, i32* %s_err, align 4, !dbg !19275
  %cmp = icmp eq i32 %3, 0, !dbg !19277
  br i1 %cmp, label %if.then, label %if.else9, !dbg !19278

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %tnum, align 8, !dbg !19279
  %5 = load i64, i64* %min.addr, align 8, !dbg !19282
  %cmp1 = icmp ult i64 %4, %5, !dbg !19283
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !19284

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i64, i64* %max.addr, align 8, !dbg !19285
  %7 = load i64, i64* %tnum, align 8, !dbg !19286
  %cmp2 = icmp ult i64 %6, %7, !dbg !19287
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !19288

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %s_err, align 4, !dbg !19289
  %8 = load i64, i64* %tnum, align 8, !dbg !19291
  %cmp4 = icmp ugt i64 %8, 1073741823, !dbg !19293
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !19294

if.then5:                                         ; preds = %if.then3
  %call6 = call i32* @__errno_location() #17, !dbg !19295
  store i32 75, i32* %call6, align 4, !dbg !19296, !ctir !27
  br label %if.end, !dbg !19295

if.else:                                          ; preds = %if.then3
  %call7 = call i32* @__errno_location() #17, !dbg !19297
  store i32 34, i32* %call7, align 4, !dbg !19298, !ctir !27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end8, !dbg !19299

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  br label %if.end19, !dbg !19300

if.else9:                                         ; preds = %entry
  %9 = load i32, i32* %s_err, align 4, !dbg !19301
  %cmp10 = icmp eq i32 %9, 1, !dbg !19303
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !19304

if.then11:                                        ; preds = %if.else9
  %call12 = call i32* @__errno_location() #17, !dbg !19305
  store i32 75, i32* %call12, align 4, !dbg !19306, !ctir !27
  br label %if.end18, !dbg !19305

if.else13:                                        ; preds = %if.else9
  %10 = load i32, i32* %s_err, align 4, !dbg !19307
  %cmp14 = icmp eq i32 %10, 3, !dbg !19309
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !19310

if.then15:                                        ; preds = %if.else13
  %call16 = call i32* @__errno_location() #17, !dbg !19311
  store i32 0, i32* %call16, align 4, !dbg !19312, !ctir !27
  br label %if.end17, !dbg !19311

if.end17:                                         ; preds = %if.then15, %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then11
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end8
  %11 = load i32, i32* %s_err, align 4, !dbg !19313
  %cmp20 = icmp ne i32 %11, 0, !dbg !19315
  br i1 %cmp20, label %if.then21, label %if.end30, !dbg !19316

if.then21:                                        ; preds = %if.end19
  %12 = load i32, i32* %err_exit.addr, align 4, !dbg !19317
  %tobool = icmp ne i32 %12, 0, !dbg !19317
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19317

cond.true:                                        ; preds = %if.then21
  %13 = load i32, i32* %err_exit.addr, align 4, !dbg !19319
  br label %cond.end, !dbg !19317

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !19317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 1, %cond.false ], !dbg !19317
  %call22 = call i32* @__errno_location() #17, !dbg !19320
  %14 = load i32, i32* %call22, align 4, !dbg !19320, !ctir !27
  %cmp23 = icmp eq i32 %14, 22, !dbg !19321
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !19320

cond.true24:                                      ; preds = %cond.end
  br label %cond.end27, !dbg !19320

cond.false25:                                     ; preds = %cond.end
  %call26 = call i32* @__errno_location() #17, !dbg !19322
  %15 = load i32, i32* %call26, align 4, !dbg !19322, !ctir !27
  br label %cond.end27, !dbg !19320

cond.end27:                                       ; preds = %cond.false25, %cond.true24
  %cond28 = phi i32 [ 0, %cond.true24 ], [ %15, %cond.false25 ], !dbg !19320
  %16 = load i8*, i8** %err.addr, align 8, !dbg !19323
  %17 = load i8*, i8** %n_str.addr, align 8, !dbg !19324
  %call29 = call i8* @quote(i8* %17), !dbg !19325
  call void (i32, i32, i8*, ...) @error(i32 %cond, i32 %cond28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.480, i64 0, i64 0), i8* %16, i8* %call29), !dbg !19326
  br label %if.end30, !dbg !19327

if.end30:                                         ; preds = %cond.end27, %if.end19
  %18 = load i64, i64* %tnum, align 8, !dbg !19328
  ret i64 %18, !dbg !19329
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xdectoumax(i8* %n_str, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19330 {
entry:
  %n_str.addr = alloca i8*, align 8
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %suffixes.addr = alloca i8*, align 8
  %err.addr = alloca i8*, align 8
  %err_exit.addr = alloca i32, align 4
  store i8* %n_str, i8** %n_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19333, metadata !DIExpression()), !dbg !19334
  store i64 %min, i64* %min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19335, metadata !DIExpression()), !dbg !19336
  store i64 %max, i64* %max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19337, metadata !DIExpression()), !dbg !19338
  store i8* %suffixes, i8** %suffixes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19339, metadata !DIExpression()), !dbg !19340
  store i8* %err, i8** %err.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19341, metadata !DIExpression()), !dbg !19342
  store i32 %err_exit, i32* %err_exit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19343, metadata !DIExpression()), !dbg !19344
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19345
  %1 = load i64, i64* %min.addr, align 8, !dbg !19346
  %2 = load i64, i64* %max.addr, align 8, !dbg !19347
  %3 = load i8*, i8** %suffixes.addr, align 8, !dbg !19348
  %4 = load i8*, i8** %err.addr, align 8, !dbg !19349
  %5 = load i32, i32* %err_exit.addr, align 4, !dbg !19350
  %call = call i64 @xnumtoumax(i8* %0, i32 10, i64 %1, i64 %2, i8* %3, i8* %4, i32 %5), !dbg !19351
  ret i64 %call, !dbg !19352
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgetcwd() #0 !dbg !19353 {
entry:
  %cwd = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %cwd, metadata !19356, metadata !DIExpression()), !dbg !19357
  %call = call i8* @getcwd(i8* null, i64 0) #13, !dbg !19358
  store i8* %call, i8** %cwd, align 8, !dbg !19357
  %0 = load i8*, i8** %cwd, align 8, !dbg !19359
  %tobool = icmp ne i8* %0, null, !dbg !19359
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19361

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !19362
  %1 = load i32, i32* %call1, align 4, !dbg !19362, !ctir !27
  %cmp = icmp eq i32 %1, 12, !dbg !19363
  br i1 %cmp, label %if.then, label %if.end, !dbg !19364

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19365
  unreachable, !dbg !19365

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %cwd, align 8, !dbg !19366
  ret i8* %2, !dbg !19367
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgethostname() #0 !dbg !19368 {
entry:
  %retval = alloca i8*, align 8
  %hostname = alloca i8*, align 8, !ctir !143
  %size = alloca i64, align 8, !ctir !149
  %size_1 = alloca i64, align 8, !ctir !149
  %saved_errno = alloca i32, align 4, !ctir !27
  %actual_size = alloca i64, align 8, !ctir !149
  %shrinked_hostname = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %hostname, metadata !19370, metadata !DIExpression()), !dbg !19371
  store i8* null, i8** %hostname, align 8, !dbg !19371
  call void @llvm.dbg.declare(metadata i64* %size, metadata !19372, metadata !DIExpression()), !dbg !19373
  store i64 34, i64* %size, align 8, !dbg !19373
  br label %while.body, !dbg !19374

while.body:                                       ; preds = %entry, %if.end21
  call void @llvm.dbg.declare(metadata i64* %size_1, metadata !19375, metadata !DIExpression()), !dbg !19377
  %0 = load i8*, i8** %hostname, align 8, !dbg !19378
  %call = call i8* @x2realloc(i8* %0, i64* %size), !dbg !19379
  store i8* %call, i8** %hostname, align 8, !dbg !19380
  %1 = load i64, i64* %size, align 8, !dbg !19381
  %sub = sub i64 %1, 1, !dbg !19382
  store i64 %sub, i64* %size_1, align 8, !dbg !19383
  %2 = load i8*, i8** %hostname, align 8, !dbg !19384
  %3 = load i64, i64* %size_1, align 8, !dbg !19385
  %sub1 = sub i64 %3, 1, !dbg !19386
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub1, !dbg !19384, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !19387
  %call2 = call i32* @__errno_location() #17, !dbg !19388
  store i32 0, i32* %call2, align 4, !dbg !19389, !ctir !27
  %4 = load i8*, i8** %hostname, align 8, !dbg !19390
  %5 = load i64, i64* %size_1, align 8, !dbg !19392
  %call3 = call i32 @gethostname(i8* %4, i64 %5) #13, !dbg !19393
  %cmp = icmp eq i32 %call3, 0, !dbg !19394
  br i1 %cmp, label %if.then, label %if.else, !dbg !19395

if.then:                                          ; preds = %while.body
  %6 = load i8*, i8** %hostname, align 8, !dbg !19396
  %7 = load i64, i64* %size_1, align 8, !dbg !19399
  %sub4 = sub i64 %7, 1, !dbg !19400
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %sub4, !dbg !19396, !ctir !143
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !19396
  %tobool = icmp ne i8 %8, 0, !dbg !19396
  br i1 %tobool, label %if.end, label %if.then6, !dbg !19401

if.then6:                                         ; preds = %if.then
  br label %while.end, !dbg !19402

if.end:                                           ; preds = %if.then
  br label %if.end21, !dbg !19403

if.else:                                          ; preds = %while.body
  %call7 = call i32* @__errno_location() #17, !dbg !19404
  %9 = load i32, i32* %call7, align 4, !dbg !19404, !ctir !27
  %cmp8 = icmp ne i32 %9, 0, !dbg !19406
  br i1 %cmp8, label %land.lhs.true, label %if.end20, !dbg !19407

land.lhs.true:                                    ; preds = %if.else
  %call9 = call i32* @__errno_location() #17, !dbg !19408
  %10 = load i32, i32* %call9, align 4, !dbg !19408, !ctir !27
  %cmp10 = icmp ne i32 %10, 36, !dbg !19409
  br i1 %cmp10, label %land.lhs.true11, label %if.end20, !dbg !19410

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call12 = call i32* @__errno_location() #17, !dbg !19411
  %11 = load i32, i32* %call12, align 4, !dbg !19411, !ctir !27
  %cmp13 = icmp ne i32 %11, 22, !dbg !19412
  br i1 %cmp13, label %land.lhs.true14, label %if.end20, !dbg !19413

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %call15 = call i32* @__errno_location() #17, !dbg !19414
  %12 = load i32, i32* %call15, align 4, !dbg !19414, !ctir !27
  %cmp16 = icmp ne i32 %12, 12, !dbg !19415
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !19416

if.then17:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19417, metadata !DIExpression()), !dbg !19419
  %call18 = call i32* @__errno_location() #17, !dbg !19420
  %13 = load i32, i32* %call18, align 4, !dbg !19420, !ctir !27
  store i32 %13, i32* %saved_errno, align 4, !dbg !19419
  %14 = load i8*, i8** %hostname, align 8, !dbg !19421
  call void @free(i8* %14) #13, !dbg !19422
  %15 = load i32, i32* %saved_errno, align 4, !dbg !19423
  %call19 = call i32* @__errno_location() #17, !dbg !19424
  store i32 %15, i32* %call19, align 4, !dbg !19425, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !19426
  br label %return, !dbg !19426

if.end20:                                         ; preds = %land.lhs.true14, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %while.body, !dbg !19374, !llvm.loop !19427

while.end:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i64* %actual_size, metadata !19429, metadata !DIExpression()), !dbg !19431
  %16 = load i8*, i8** %hostname, align 8, !dbg !19432
  %call22 = call i64 @strlen(i8* %16) #16, !dbg !19433
  %add = add i64 %call22, 1, !dbg !19434
  store i64 %add, i64* %actual_size, align 8, !dbg !19431
  %17 = load i64, i64* %actual_size, align 8, !dbg !19435
  %18 = load i64, i64* %size, align 8, !dbg !19437
  %cmp23 = icmp ult i64 %17, %18, !dbg !19438
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !19439

if.then24:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %shrinked_hostname, metadata !19440, metadata !DIExpression()), !dbg !19442
  %19 = load i8*, i8** %hostname, align 8, !dbg !19443
  %20 = load i64, i64* %actual_size, align 8, !dbg !19444
  %call25 = call i8* @realloc(i8* %19, i64 %20) #13, !dbg !19445
  store i8* %call25, i8** %shrinked_hostname, align 8, !dbg !19442
  %21 = load i8*, i8** %shrinked_hostname, align 8, !dbg !19446
  %cmp26 = icmp ne i8* %21, null, !dbg !19448
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !19449

if.then27:                                        ; preds = %if.then24
  %22 = load i8*, i8** %shrinked_hostname, align 8, !dbg !19450
  store i8* %22, i8** %hostname, align 8, !dbg !19451
  br label %if.end28, !dbg !19452

if.end28:                                         ; preds = %if.then27, %if.then24
  br label %if.end29, !dbg !19453

if.end29:                                         ; preds = %if.end28, %while.end
  %23 = load i8*, i8** %hostname, align 8, !dbg !19454
  store i8* %23, i8** %retval, align 8, !dbg !19455
  br label %return, !dbg !19455

return:                                           ; preds = %if.end29, %if.then17
  %24 = load i8*, i8** %retval, align 8, !dbg !19456
  ret i8* %24, !dbg !19456
}

; Function Attrs: nounwind
declare dso_local i32 @gethostname(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19457 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !151
  %err = alloca i32, align 4, !ctir !1267
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !725
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1267
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19462, metadata !DIExpression()), !dbg !19463
  store i8** %ptr, i8*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19464, metadata !DIExpression()), !dbg !19465
  store i32 %strtol_base, i32* %strtol_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19466, metadata !DIExpression()), !dbg !19467
  store i64* %val, i64** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19468, metadata !DIExpression()), !dbg !19469
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19470, metadata !DIExpression()), !dbg !19471
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19472, metadata !DIExpression()), !dbg !19473
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19474, metadata !DIExpression()), !dbg !19475
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19476, metadata !DIExpression()), !dbg !19477
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19478, metadata !DIExpression()), !dbg !19479
  store i32 0, i32* %err, align 4, !dbg !19479
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19480
  %cmp = icmp sle i32 0, %0, !dbg !19480
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !19480

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19480
  %cmp1 = icmp sle i32 %1, 36, !dbg !19480
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !19480

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !19480

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.487, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.488, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #15, !dbg !19480
  unreachable, !dbg !19480

2:                                                ; No predecessors!
  br label %cond.end, !dbg !19480

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19481
  %tobool = icmp ne i8** %3, null, !dbg !19481
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !19481

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !19482
  br label %cond.end4, !dbg !19481

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !19481

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !19481
  store i8** %cond, i8*** %p, align 8, !dbg !19483
  %call = call i32* @__errno_location() #17, !dbg !19484
  store i32 0, i32* %call, align 4, !dbg !19485, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19486, metadata !DIExpression()), !dbg !19489
  %5 = load i8*, i8** %s.addr, align 8, !dbg !19490
  store i8* %5, i8** %q, align 8, !dbg !19489
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19491, metadata !DIExpression()), !dbg !19492
  %6 = load i8*, i8** %q, align 8, !dbg !19493
  %7 = load i8, i8* %6, align 1, !dbg !19494, !ctir !147
  store i8 %7, i8* %ch, align 1, !dbg !19492
  br label %while.cond, !dbg !19495

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #17, !dbg !19496
  %8 = load i16*, i16** %call5, align 8, !dbg !19496, !ctir !696
  %9 = load i8, i8* %ch, align 1, !dbg !19496
  %conv = zext i8 %9 to i32, !dbg !19496
  %idxprom = sext i32 %conv to i64, !dbg !19496
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !19496, !ctir !696
  %10 = load i16, i16* %arrayidx, align 2, !dbg !19496
  %conv6 = zext i16 %10 to i32, !dbg !19496
  %and = and i32 %conv6, 8192, !dbg !19496
  %tobool7 = icmp ne i32 %and, 0, !dbg !19495
  br i1 %tobool7, label %while.body, label %while.end, !dbg !19495

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !19497
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !19497, !ctir !147
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19497
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !19498, !ctir !147
  store i8 %12, i8* %ch, align 1, !dbg !19499
  br label %while.cond, !dbg !19495, !llvm.loop !19500

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !19502
  %conv8 = zext i8 %13 to i32, !dbg !19502
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !19504
  br i1 %cmp9, label %if.then, label %if.end, !dbg !19505

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19506
  br label %return, !dbg !19506

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !19507
  %15 = load i8**, i8*** %p, align 8, !dbg !19508
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !19509
  %call11 = call i64 @strtoul(i8* %14, i8** %15, i32 %16) #13, !dbg !19510
  store i64 %call11, i64* %tmp, align 8, !dbg !19511
  %17 = load i8**, i8*** %p, align 8, !dbg !19512
  %18 = load i8*, i8** %17, align 8, !dbg !19514, !ctir !143
  %19 = load i8*, i8** %s.addr, align 8, !dbg !19515
  %cmp12 = icmp eq i8* %18, %19, !dbg !19516
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !19517

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19518
  %tobool15 = icmp ne i8* %20, null, !dbg !19518
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !19521

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !19522
  %22 = load i8*, i8** %21, align 8, !dbg !19523, !ctir !143
  %23 = load i8, i8* %22, align 1, !dbg !19524, !ctir !144
  %conv17 = sext i8 %23 to i32, !dbg !19524
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !19524
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !19525

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19526
  %25 = load i8**, i8*** %p, align 8, !dbg !19527
  %26 = load i8*, i8** %25, align 8, !dbg !19528, !ctir !143
  %27 = load i8, i8* %26, align 1, !dbg !19529, !ctir !144
  %conv20 = sext i8 %27 to i32, !dbg !19529
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #16, !dbg !19530
  %tobool22 = icmp ne i8* %call21, null, !dbg !19530
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !19531

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !19532
  br label %if.end24, !dbg !19533

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !19534
  br label %return, !dbg !19534

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !19535

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #17, !dbg !19536
  %28 = load i32, i32* %call26, align 4, !dbg !19536, !ctir !27
  %cmp27 = icmp ne i32 %28, 0, !dbg !19538
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19539

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !19540
  %29 = load i32, i32* %call30, align 4, !dbg !19540, !ctir !27
  %cmp31 = icmp ne i32 %29, 34, !dbg !19543
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19544

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19545
  br label %return, !dbg !19545

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19546
  br label %if.end35, !dbg !19547

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19548
  %tobool37 = icmp ne i8* %30, null, !dbg !19548
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19550

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !19551
  %32 = load i64*, i64** %val.addr, align 8, !dbg !19553
  store i64 %31, i64* %32, align 8, !dbg !19554, !ctir !151
  %33 = load i32, i32* %err, align 4, !dbg !19555
  store i32 %33, i32* %retval, align 4, !dbg !19556
  br label %return, !dbg !19556

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !19557
  %35 = load i8*, i8** %34, align 8, !dbg !19559, !ctir !143
  %36 = load i8, i8* %35, align 1, !dbg !19560, !ctir !144
  %conv40 = sext i8 %36 to i32, !dbg !19560
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19561
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19562

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19563, metadata !DIExpression()), !dbg !19565
  store i32 1024, i32* %base, align 4, !dbg !19565
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19566, metadata !DIExpression()), !dbg !19567
  store i32 1, i32* %suffixes, align 4, !dbg !19567
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19568, metadata !DIExpression()), !dbg !19569
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19570
  %38 = load i8**, i8*** %p, align 8, !dbg !19572
  %39 = load i8*, i8** %38, align 8, !dbg !19573, !ctir !143
  %40 = load i8, i8* %39, align 1, !dbg !19574, !ctir !144
  %conv44 = sext i8 %40 to i32, !dbg !19574
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #16, !dbg !19575
  %tobool46 = icmp ne i8* %call45, null, !dbg !19575
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19576

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !19577
  %42 = load i64*, i64** %val.addr, align 8, !dbg !19579
  store i64 %41, i64* %42, align 8, !dbg !19580, !ctir !151
  %43 = load i32, i32* %err, align 4, !dbg !19581
  %or = or i32 %43, 2, !dbg !19582
  store i32 %or, i32* %retval, align 4, !dbg !19583
  br label %return, !dbg !19583

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !19584
  %45 = load i8*, i8** %44, align 8, !dbg !19585, !ctir !143
  %46 = load i8, i8* %45, align 1, !dbg !19586, !ctir !144
  %conv49 = sext i8 %46 to i32, !dbg !19586
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19587

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19588
  %call50 = call i8* @strchr(i8* %47, i32 48) #16, !dbg !19591
  %tobool51 = icmp ne i8* %call50, null, !dbg !19591
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19592

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !19593
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !19593, !ctir !142
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !19593
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !19593, !ctir !143
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !19593
  %conv55 = sext i8 %50 to i32, !dbg !19593
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19594

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !19595
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !19595, !ctir !142
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !19595
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !19595, !ctir !143
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !19595
  %conv59 = sext i8 %53 to i32, !dbg !19595
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19598
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19599

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !19600
  %add = add nsw i32 %54, 2, !dbg !19600
  store i32 %add, i32* %suffixes, align 4, !dbg !19600
  br label %if.end63, !dbg !19601

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19602

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19603
  %55 = load i32, i32* %suffixes, align 4, !dbg !19604
  %inc = add nsw i32 %55, 1, !dbg !19604
  store i32 %inc, i32* %suffixes, align 4, !dbg !19604
  br label %sw.epilog, !dbg !19605

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19606

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19607

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !19608
  %57 = load i8*, i8** %56, align 8, !dbg !19609, !ctir !143
  %58 = load i8, i8* %57, align 1, !dbg !19610, !ctir !144
  %conv67 = sext i8 %58 to i32, !dbg !19610
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19611

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !19612
  store i32 %call69, i32* %overflow, align 4, !dbg !19614
  br label %sw.epilog92, !dbg !19615

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !19616
  store i32 %call71, i32* %overflow, align 4, !dbg !19617
  br label %sw.epilog92, !dbg !19618

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19619
  br label %sw.epilog92, !dbg !19620

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19621
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 6), !dbg !19622
  store i32 %call74, i32* %overflow, align 4, !dbg !19623
  br label %sw.epilog92, !dbg !19624

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19625
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 3), !dbg !19626
  store i32 %call76, i32* %overflow, align 4, !dbg !19627
  br label %sw.epilog92, !dbg !19628

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19629
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 1), !dbg !19630
  store i32 %call78, i32* %overflow, align 4, !dbg !19631
  br label %sw.epilog92, !dbg !19632

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19633
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 2), !dbg !19634
  store i32 %call80, i32* %overflow, align 4, !dbg !19635
  br label %sw.epilog92, !dbg !19636

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19637
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 5), !dbg !19638
  store i32 %call82, i32* %overflow, align 4, !dbg !19639
  br label %sw.epilog92, !dbg !19640

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19641
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 4), !dbg !19642
  store i32 %call84, i32* %overflow, align 4, !dbg !19643
  br label %sw.epilog92, !dbg !19644

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !19645
  store i32 %call86, i32* %overflow, align 4, !dbg !19646
  br label %sw.epilog92, !dbg !19647

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19648
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 8), !dbg !19649
  store i32 %call88, i32* %overflow, align 4, !dbg !19650
  br label %sw.epilog92, !dbg !19651

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !19652
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %66, i32 7), !dbg !19653
  store i32 %call90, i32* %overflow, align 4, !dbg !19654
  br label %sw.epilog92, !dbg !19655

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !19656
  %68 = load i64*, i64** %val.addr, align 8, !dbg !19657
  store i64 %67, i64* %68, align 8, !dbg !19658, !ctir !151
  %69 = load i32, i32* %err, align 4, !dbg !19659
  %or91 = or i32 %69, 2, !dbg !19660
  store i32 %or91, i32* %retval, align 4, !dbg !19661
  br label %return, !dbg !19661

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !19662
  %71 = load i32, i32* %err, align 4, !dbg !19663
  %or93 = or i32 %71, %70, !dbg !19663
  store i32 %or93, i32* %err, align 4, !dbg !19663
  %72 = load i32, i32* %suffixes, align 4, !dbg !19664
  %73 = load i8**, i8*** %p, align 8, !dbg !19665
  %74 = load i8*, i8** %73, align 8, !dbg !19666, !ctir !143
  %idx.ext = sext i32 %72 to i64, !dbg !19666
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !19666, !ctir !144
  store i8* %add.ptr, i8** %73, align 8, !dbg !19666, !ctir !143
  %75 = load i8**, i8*** %p, align 8, !dbg !19667
  %76 = load i8*, i8** %75, align 8, !dbg !19669, !ctir !143
  %77 = load i8, i8* %76, align 1, !dbg !19670, !ctir !144
  %tobool94 = icmp ne i8 %77, 0, !dbg !19670
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19671

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !19672
  %or96 = or i32 %78, 2, !dbg !19672
  store i32 %or96, i32* %err, align 4, !dbg !19672
  br label %if.end97, !dbg !19673

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19674

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !19675
  %80 = load i64*, i64** %val.addr, align 8, !dbg !19676
  store i64 %79, i64* %80, align 8, !dbg !19677, !ctir !151
  %81 = load i32, i32* %err, align 4, !dbg !19678
  store i32 %81, i32* %retval, align 4, !dbg !19679
  br label %return, !dbg !19679

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !19680
  ret i32 %82, !dbg !19680
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #0 !dbg !19681 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19684, metadata !DIExpression()), !dbg !19685
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19686, metadata !DIExpression()), !dbg !19687
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19688
  %conv = sext i32 %0 to i64, !dbg !19688
  %div = udiv i64 -1, %conv, !dbg !19690
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19691
  %2 = load i64, i64* %1, align 8, !dbg !19692, !ctir !151
  %cmp = icmp ult i64 %div, %2, !dbg !19693
  br i1 %cmp, label %if.then, label %if.end, !dbg !19694

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19695
  store i64 -1, i64* %3, align 8, !dbg !19697, !ctir !151
  store i32 1, i32* %retval, align 4, !dbg !19698
  br label %return, !dbg !19698

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19699
  %conv2 = sext i32 %4 to i64, !dbg !19699
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19700
  %6 = load i64, i64* %5, align 8, !dbg !19701, !ctir !151
  %mul = mul i64 %6, %conv2, !dbg !19701
  store i64 %mul, i64* %5, align 8, !dbg !19701, !ctir !151
  store i32 0, i32* %retval, align 4, !dbg !19702
  br label %return, !dbg !19702

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19703
  ret i32 %7, !dbg !19703
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #0 !dbg !19704 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1267
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19707, metadata !DIExpression()), !dbg !19708
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19709, metadata !DIExpression()), !dbg !19710
  store i32 %power, i32* %power.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19711, metadata !DIExpression()), !dbg !19712
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19713, metadata !DIExpression()), !dbg !19714
  store i32 0, i32* %err, align 4, !dbg !19714
  br label %while.cond, !dbg !19715

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19716
  %dec = add nsw i32 %0, -1, !dbg !19716
  store i32 %dec, i32* %power.addr, align 4, !dbg !19716
  %tobool = icmp ne i32 %0, 0, !dbg !19715
  br i1 %tobool, label %while.body, label %while.end, !dbg !19715

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19717
  %2 = load i32, i32* %base.addr, align 4, !dbg !19718
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19719
  %3 = load i32, i32* %err, align 4, !dbg !19720
  %or = or i32 %3, %call, !dbg !19720
  store i32 %or, i32* %err, align 4, !dbg !19720
  br label %while.cond, !dbg !19715, !llvm.loop !19721

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19723
  ret i32 %4, !dbg !19724
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) #10 !dbg !19725 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19729, metadata !DIExpression()), !dbg !19730
  store i32 %opt_idx, i32* %opt_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19731, metadata !DIExpression()), !dbg !19732
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19733, metadata !DIExpression()), !dbg !19734
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19735, metadata !DIExpression()), !dbg !19736
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19737, metadata !DIExpression()), !dbg !19738
  %0 = load i32, i32* %err.addr, align 4, !dbg !19739
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19740
  %2 = load i8, i8* %c.addr, align 1, !dbg !19741
  %3 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19742
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !19743
  %5 = load volatile i32, i32* @exit_failure, align 4, !dbg !19744
  call void @xstrtol_error(i32 %0, i32 %1, i8 signext %2, %struct.option* %3, i8* %4, i32 %5), !dbg !19745
  call void @abort() #15, !dbg !19746
  unreachable, !dbg !19746
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) #0 !dbg !19747 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  %exit_status.addr = alloca i32, align 4
  %hyphens = alloca i8*, align 8, !ctir !146
  %msgid = alloca i8*, align 8, !ctir !146
  %option = alloca i8*, align 8, !ctir !146
  %option_buffer = alloca [2 x i8], align 1, !ctir !259
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19750, metadata !DIExpression()), !dbg !19751
  store i32 %opt_idx, i32* %opt_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19752, metadata !DIExpression()), !dbg !19753
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19754, metadata !DIExpression()), !dbg !19755
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19756, metadata !DIExpression()), !dbg !19757
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19758, metadata !DIExpression()), !dbg !19759
  store i32 %exit_status, i32* %exit_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !19760, metadata !DIExpression()), !dbg !19761
  call void @llvm.dbg.declare(metadata i8** %hyphens, metadata !19762, metadata !DIExpression()), !dbg !19763
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.491, i64 0, i64 0), i8** %hyphens, align 8, !dbg !19763
  call void @llvm.dbg.declare(metadata i8** %msgid, metadata !19764, metadata !DIExpression()), !dbg !19765
  call void @llvm.dbg.declare(metadata i8** %option, metadata !19766, metadata !DIExpression()), !dbg !19767
  call void @llvm.dbg.declare(metadata [2 x i8]* %option_buffer, metadata !19768, metadata !DIExpression()), !dbg !19769
  %0 = load i32, i32* %err.addr, align 4, !dbg !19770
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !19771

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !19772
  unreachable, !dbg !19772

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.492, i64 0, i64 0), i8** %msgid, align 8, !dbg !19774
  br label %sw.epilog, !dbg !19775

sw.bb1:                                           ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.493, i64 0, i64 0), i8** %msgid, align 8, !dbg !19776
  br label %sw.epilog, !dbg !19777

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.494, i64 0, i64 0), i8** %msgid, align 8, !dbg !19778
  br label %sw.epilog, !dbg !19779

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19780
  %cmp = icmp slt i32 %1, 0, !dbg !19782
  br i1 %cmp, label %if.then, label %if.else, !dbg !19783

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %opt_idx.addr, align 4, !dbg !19784
  %3 = load i8*, i8** %hyphens, align 8, !dbg !19786
  %idx.ext = sext i32 %2 to i64, !dbg !19786
  %idx.neg = sub i64 0, %idx.ext, !dbg !19786
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !19786, !ctir !147
  store i8* %add.ptr, i8** %hyphens, align 8, !dbg !19786
  %4 = load i8, i8* %c.addr, align 1, !dbg !19787
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !19788, !ctir !259
  store i8 %4, i8* %arrayidx, align 1, !dbg !19789
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 1, !dbg !19790, !ctir !259
  store i8 0, i8* %arrayidx3, align 1, !dbg !19791
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !19792, !ctir !259
  store i8* %arraydecay, i8** %option, align 8, !dbg !19793
  br label %if.end, !dbg !19794

if.else:                                          ; preds = %sw.epilog
  %5 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19795
  %6 = load i32, i32* %opt_idx.addr, align 4, !dbg !19796
  %idxprom = sext i32 %6 to i64, !dbg !19795
  %arrayidx4 = getelementptr inbounds %struct.option, %struct.option* %5, i64 %idxprom, !dbg !19795, !ctir !1721
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx4, i32 0, i32 0, !dbg !19797, !ctir !1722
  %7 = load i8*, i8** %name, align 8, !dbg !19797, !ctir !146
  store i8* %7, i8** %option, align 8, !dbg !19798
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %exit_status.addr, align 4, !dbg !19799
  %9 = load i8*, i8** %msgid, align 8, !dbg !19800
  %call = call i8* @gettext(i8* %9) #13, !dbg !19801
  %10 = load i8*, i8** %hyphens, align 8, !dbg !19802
  %11 = load i8*, i8** %option, align 8, !dbg !19803
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !19804
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 0, i8* %call, i8* %10, i8* %11, i8* %12), !dbg !19805
  ret void, !dbg !19806
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19807 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !168
  %err = alloca i32, align 4, !ctir !1267
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !725
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1267
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19810, metadata !DIExpression()), !dbg !19811
  store i8** %ptr, i8*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19812, metadata !DIExpression()), !dbg !19813
  store i32 %strtol_base, i32* %strtol_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19814, metadata !DIExpression()), !dbg !19815
  store i64* %val, i64** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19816, metadata !DIExpression()), !dbg !19817
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19818, metadata !DIExpression()), !dbg !19819
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19820, metadata !DIExpression()), !dbg !19821
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19822, metadata !DIExpression()), !dbg !19823
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19824, metadata !DIExpression()), !dbg !19825
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19826, metadata !DIExpression()), !dbg !19827
  store i32 0, i32* %err, align 4, !dbg !19827
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19828
  %cmp = icmp sle i32 0, %0, !dbg !19828
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !19828

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19828
  %cmp1 = icmp sle i32 %1, 36, !dbg !19828
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !19828

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !19828

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.497, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.498, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.xstrtoumax, i64 0, i64 0)) #15, !dbg !19828
  unreachable, !dbg !19828

2:                                                ; No predecessors!
  br label %cond.end, !dbg !19828

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19829
  %tobool = icmp ne i8** %3, null, !dbg !19829
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !19829

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !19830
  br label %cond.end4, !dbg !19829

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !19829

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !19829
  store i8** %cond, i8*** %p, align 8, !dbg !19831
  %call = call i32* @__errno_location() #17, !dbg !19832
  store i32 0, i32* %call, align 4, !dbg !19833, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19834, metadata !DIExpression()), !dbg !19837
  %5 = load i8*, i8** %s.addr, align 8, !dbg !19838
  store i8* %5, i8** %q, align 8, !dbg !19837
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19839, metadata !DIExpression()), !dbg !19840
  %6 = load i8*, i8** %q, align 8, !dbg !19841
  %7 = load i8, i8* %6, align 1, !dbg !19842, !ctir !147
  store i8 %7, i8* %ch, align 1, !dbg !19840
  br label %while.cond, !dbg !19843

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #17, !dbg !19844
  %8 = load i16*, i16** %call5, align 8, !dbg !19844, !ctir !696
  %9 = load i8, i8* %ch, align 1, !dbg !19844
  %conv = zext i8 %9 to i32, !dbg !19844
  %idxprom = sext i32 %conv to i64, !dbg !19844
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !19844, !ctir !696
  %10 = load i16, i16* %arrayidx, align 2, !dbg !19844
  %conv6 = zext i16 %10 to i32, !dbg !19844
  %and = and i32 %conv6, 8192, !dbg !19844
  %tobool7 = icmp ne i32 %and, 0, !dbg !19843
  br i1 %tobool7, label %while.body, label %while.end, !dbg !19843

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !19845
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !19845, !ctir !147
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19845
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !19846, !ctir !147
  store i8 %12, i8* %ch, align 1, !dbg !19847
  br label %while.cond, !dbg !19843, !llvm.loop !19848

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !19850
  %conv8 = zext i8 %13 to i32, !dbg !19850
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !19852
  br i1 %cmp9, label %if.then, label %if.end, !dbg !19853

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19854
  br label %return, !dbg !19854

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !19855
  %15 = load i8**, i8*** %p, align 8, !dbg !19856
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !19857
  %call11 = call i64 @strtoumax(i8* %14, i8** %15, i32 %16) #13, !dbg !19858
  store i64 %call11, i64* %tmp, align 8, !dbg !19859
  %17 = load i8**, i8*** %p, align 8, !dbg !19860
  %18 = load i8*, i8** %17, align 8, !dbg !19862, !ctir !143
  %19 = load i8*, i8** %s.addr, align 8, !dbg !19863
  %cmp12 = icmp eq i8* %18, %19, !dbg !19864
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !19865

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19866
  %tobool15 = icmp ne i8* %20, null, !dbg !19866
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !19869

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !19870
  %22 = load i8*, i8** %21, align 8, !dbg !19871, !ctir !143
  %23 = load i8, i8* %22, align 1, !dbg !19872, !ctir !144
  %conv17 = sext i8 %23 to i32, !dbg !19872
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !19872
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !19873

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19874
  %25 = load i8**, i8*** %p, align 8, !dbg !19875
  %26 = load i8*, i8** %25, align 8, !dbg !19876, !ctir !143
  %27 = load i8, i8* %26, align 1, !dbg !19877, !ctir !144
  %conv20 = sext i8 %27 to i32, !dbg !19877
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #16, !dbg !19878
  %tobool22 = icmp ne i8* %call21, null, !dbg !19878
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !19879

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !19880
  br label %if.end24, !dbg !19881

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !19882
  br label %return, !dbg !19882

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !19883

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #17, !dbg !19884
  %28 = load i32, i32* %call26, align 4, !dbg !19884, !ctir !27
  %cmp27 = icmp ne i32 %28, 0, !dbg !19886
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19887

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !19888
  %29 = load i32, i32* %call30, align 4, !dbg !19888, !ctir !27
  %cmp31 = icmp ne i32 %29, 34, !dbg !19891
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19892

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19893
  br label %return, !dbg !19893

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19894
  br label %if.end35, !dbg !19895

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19896
  %tobool37 = icmp ne i8* %30, null, !dbg !19896
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19898

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !19899
  %32 = load i64*, i64** %val.addr, align 8, !dbg !19901
  store i64 %31, i64* %32, align 8, !dbg !19902, !ctir !168
  %33 = load i32, i32* %err, align 4, !dbg !19903
  store i32 %33, i32* %retval, align 4, !dbg !19904
  br label %return, !dbg !19904

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !19905
  %35 = load i8*, i8** %34, align 8, !dbg !19907, !ctir !143
  %36 = load i8, i8* %35, align 1, !dbg !19908, !ctir !144
  %conv40 = sext i8 %36 to i32, !dbg !19908
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19909
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19910

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19911, metadata !DIExpression()), !dbg !19913
  store i32 1024, i32* %base, align 4, !dbg !19913
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19914, metadata !DIExpression()), !dbg !19915
  store i32 1, i32* %suffixes, align 4, !dbg !19915
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19916, metadata !DIExpression()), !dbg !19917
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19918
  %38 = load i8**, i8*** %p, align 8, !dbg !19920
  %39 = load i8*, i8** %38, align 8, !dbg !19921, !ctir !143
  %40 = load i8, i8* %39, align 1, !dbg !19922, !ctir !144
  %conv44 = sext i8 %40 to i32, !dbg !19922
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #16, !dbg !19923
  %tobool46 = icmp ne i8* %call45, null, !dbg !19923
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19924

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !19925
  %42 = load i64*, i64** %val.addr, align 8, !dbg !19927
  store i64 %41, i64* %42, align 8, !dbg !19928, !ctir !168
  %43 = load i32, i32* %err, align 4, !dbg !19929
  %or = or i32 %43, 2, !dbg !19930
  store i32 %or, i32* %retval, align 4, !dbg !19931
  br label %return, !dbg !19931

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !19932
  %45 = load i8*, i8** %44, align 8, !dbg !19933, !ctir !143
  %46 = load i8, i8* %45, align 1, !dbg !19934, !ctir !144
  %conv49 = sext i8 %46 to i32, !dbg !19934
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19935

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19936
  %call50 = call i8* @strchr(i8* %47, i32 48) #16, !dbg !19939
  %tobool51 = icmp ne i8* %call50, null, !dbg !19939
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19940

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !19941
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !19941, !ctir !142
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !19941
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !19941, !ctir !143
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !19941
  %conv55 = sext i8 %50 to i32, !dbg !19941
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19942

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !19943
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !19943, !ctir !142
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !19943
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !19943, !ctir !143
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !19943
  %conv59 = sext i8 %53 to i32, !dbg !19943
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19946
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19947

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !19948
  %add = add nsw i32 %54, 2, !dbg !19948
  store i32 %add, i32* %suffixes, align 4, !dbg !19948
  br label %if.end63, !dbg !19949

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19950

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19951
  %55 = load i32, i32* %suffixes, align 4, !dbg !19952
  %inc = add nsw i32 %55, 1, !dbg !19952
  store i32 %inc, i32* %suffixes, align 4, !dbg !19952
  br label %sw.epilog, !dbg !19953

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19954

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19955

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !19956
  %57 = load i8*, i8** %56, align 8, !dbg !19957, !ctir !143
  %58 = load i8, i8* %57, align 1, !dbg !19958, !ctir !144
  %conv67 = sext i8 %58 to i32, !dbg !19958
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19959

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale.499(i64* %tmp, i32 512), !dbg !19960
  store i32 %call69, i32* %overflow, align 4, !dbg !19962
  br label %sw.epilog92, !dbg !19963

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale.499(i64* %tmp, i32 1024), !dbg !19964
  store i32 %call71, i32* %overflow, align 4, !dbg !19965
  br label %sw.epilog92, !dbg !19966

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19967
  br label %sw.epilog92, !dbg !19968

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19969
  %call74 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %59, i32 6), !dbg !19970
  store i32 %call74, i32* %overflow, align 4, !dbg !19971
  br label %sw.epilog92, !dbg !19972

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19973
  %call76 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %60, i32 3), !dbg !19974
  store i32 %call76, i32* %overflow, align 4, !dbg !19975
  br label %sw.epilog92, !dbg !19976

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19977
  %call78 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %61, i32 1), !dbg !19978
  store i32 %call78, i32* %overflow, align 4, !dbg !19979
  br label %sw.epilog92, !dbg !19980

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19981
  %call80 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %62, i32 2), !dbg !19982
  store i32 %call80, i32* %overflow, align 4, !dbg !19983
  br label %sw.epilog92, !dbg !19984

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19985
  %call82 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %63, i32 5), !dbg !19986
  store i32 %call82, i32* %overflow, align 4, !dbg !19987
  br label %sw.epilog92, !dbg !19988

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19989
  %call84 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %64, i32 4), !dbg !19990
  store i32 %call84, i32* %overflow, align 4, !dbg !19991
  br label %sw.epilog92, !dbg !19992

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale.499(i64* %tmp, i32 2), !dbg !19993
  store i32 %call86, i32* %overflow, align 4, !dbg !19994
  br label %sw.epilog92, !dbg !19995

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19996
  %call88 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %65, i32 8), !dbg !19997
  store i32 %call88, i32* %overflow, align 4, !dbg !19998
  br label %sw.epilog92, !dbg !19999

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !20000
  %call90 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %66, i32 7), !dbg !20001
  store i32 %call90, i32* %overflow, align 4, !dbg !20002
  br label %sw.epilog92, !dbg !20003

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !20004
  %68 = load i64*, i64** %val.addr, align 8, !dbg !20005
  store i64 %67, i64* %68, align 8, !dbg !20006, !ctir !168
  %69 = load i32, i32* %err, align 4, !dbg !20007
  %or91 = or i32 %69, 2, !dbg !20008
  store i32 %or91, i32* %retval, align 4, !dbg !20009
  br label %return, !dbg !20009

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !20010
  %71 = load i32, i32* %err, align 4, !dbg !20011
  %or93 = or i32 %71, %70, !dbg !20011
  store i32 %or93, i32* %err, align 4, !dbg !20011
  %72 = load i32, i32* %suffixes, align 4, !dbg !20012
  %73 = load i8**, i8*** %p, align 8, !dbg !20013
  %74 = load i8*, i8** %73, align 8, !dbg !20014, !ctir !143
  %idx.ext = sext i32 %72 to i64, !dbg !20014
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !20014, !ctir !144
  store i8* %add.ptr, i8** %73, align 8, !dbg !20014, !ctir !143
  %75 = load i8**, i8*** %p, align 8, !dbg !20015
  %76 = load i8*, i8** %75, align 8, !dbg !20017, !ctir !143
  %77 = load i8, i8* %76, align 1, !dbg !20018, !ctir !144
  %tobool94 = icmp ne i8 %77, 0, !dbg !20018
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !20019

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !20020
  %or96 = or i32 %78, 2, !dbg !20020
  store i32 %or96, i32* %err, align 4, !dbg !20020
  br label %if.end97, !dbg !20021

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !20022

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !20023
  %80 = load i64*, i64** %val.addr, align 8, !dbg !20024
  store i64 %79, i64* %80, align 8, !dbg !20025, !ctir !168
  %81 = load i32, i32* %err, align 4, !dbg !20026
  store i32 %81, i32* %retval, align 4, !dbg !20027
  br label %return, !dbg !20027

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !20028
  ret i32 %82, !dbg !20028
}

; Function Attrs: nounwind
declare dso_local i64 @strtoumax(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale.499(i64* %x, i32 %scale_factor) #0 !dbg !20029 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20032, metadata !DIExpression()), !dbg !20033
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !20034, metadata !DIExpression()), !dbg !20035
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !20036
  %conv = sext i32 %0 to i64, !dbg !20036
  %div = udiv i64 -1, %conv, !dbg !20038
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20039
  %2 = load i64, i64* %1, align 8, !dbg !20040, !ctir !168
  %cmp = icmp ult i64 %div, %2, !dbg !20041
  br i1 %cmp, label %if.then, label %if.end, !dbg !20042

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !20043
  store i64 -1, i64* %3, align 8, !dbg !20045, !ctir !168
  store i32 1, i32* %retval, align 4, !dbg !20046
  br label %return, !dbg !20046

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !20047
  %conv2 = sext i32 %4 to i64, !dbg !20047
  %5 = load i64*, i64** %x.addr, align 8, !dbg !20048
  %6 = load i64, i64* %5, align 8, !dbg !20049, !ctir !168
  %mul = mul i64 %6, %conv2, !dbg !20049
  store i64 %mul, i64* %5, align 8, !dbg !20049, !ctir !168
  store i32 0, i32* %retval, align 4, !dbg !20050
  br label %return, !dbg !20050

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !20051
  ret i32 %7, !dbg !20051
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power.500(i64* %x, i32 %base, i32 %power) #0 !dbg !20052 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1267
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20055, metadata !DIExpression()), !dbg !20056
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !20057, metadata !DIExpression()), !dbg !20058
  store i32 %power, i32* %power.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !20059, metadata !DIExpression()), !dbg !20060
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20061, metadata !DIExpression()), !dbg !20062
  store i32 0, i32* %err, align 4, !dbg !20062
  br label %while.cond, !dbg !20063

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !20064
  %dec = add nsw i32 %0, -1, !dbg !20064
  store i32 %dec, i32* %power.addr, align 4, !dbg !20064
  %tobool = icmp ne i32 %0, 0, !dbg !20063
  br i1 %tobool, label %while.body, label %while.end, !dbg !20063

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20065
  %2 = load i32, i32* %base.addr, align 4, !dbg !20066
  %call = call i32 @bkm_scale.499(i64* %1, i32 %2), !dbg !20067
  %3 = load i32, i32* %err, align 4, !dbg !20068
  %or = or i32 %3, %call, !dbg !20068
  store i32 %or, i32* %err, align 4, !dbg !20068
  br label %while.cond, !dbg !20063, !llvm.loop !20069

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !20071
  ret i32 %4, !dbg !20072
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #0 !dbg !20073 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !149
  %wc = alloca i32, align 4, !ctir !751
  %uc = alloca i8, align 1, !ctir !725
  store i32* %pwc, i32** %pwc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !20088, metadata !DIExpression()), !dbg !20089
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20090, metadata !DIExpression()), !dbg !20091
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20092, metadata !DIExpression()), !dbg !20093
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !20094, metadata !DIExpression()), !dbg !20095
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !20096, metadata !DIExpression()), !dbg !20097
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !20098, metadata !DIExpression()), !dbg !20099
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !20100
  %tobool = icmp ne i32* %0, null, !dbg !20100
  br i1 %tobool, label %if.end, label %if.then, !dbg !20102

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !20103
  br label %if.end, !dbg !20104

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !20105
  %2 = load i8*, i8** %s.addr, align 8, !dbg !20106
  %3 = load i64, i64* %n.addr, align 8, !dbg !20107
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !20108
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #13, !dbg !20109
  store i64 %call, i64* %ret, align 8, !dbg !20110
  %5 = load i64, i64* %ret, align 8, !dbg !20111
  %cmp = icmp ule i64 -2, %5, !dbg !20113
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !20114

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !20115
  %cmp1 = icmp ne i64 %6, 0, !dbg !20116
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !20117

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !20118
  br i1 %call3, label %if.end5, label %if.then4, !dbg !20119

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !20120, metadata !DIExpression()), !dbg !20122
  %7 = load i8*, i8** %s.addr, align 8, !dbg !20123
  %8 = load i8, i8* %7, align 1, !dbg !20124, !ctir !147
  store i8 %8, i8* %uc, align 1, !dbg !20122
  %9 = load i8, i8* %uc, align 1, !dbg !20125
  %conv = zext i8 %9 to i32, !dbg !20125
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !20126
  store i32 %conv, i32* %10, align 4, !dbg !20127, !ctir !751
  store i64 1, i64* %retval, align 8, !dbg !20128
  br label %return, !dbg !20128

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !20129
  store i64 %11, i64* %retval, align 8, !dbg !20130
  br label %return, !dbg !20130

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !20131
  ret i64 %12, !dbg !20131
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #0 !dbg !20132 {
entry:
  %item.addr = alloca i32, align 4
  store i32 %item, i32* %item.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !20138, metadata !DIExpression()), !dbg !20139
  %0 = load i32, i32* %item.addr, align 4, !dbg !20140
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !20141

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !20142
  %sub = sub nsw i32 %1, 10200, !dbg !20144
  %add = add nsw i32 %sub, 131098, !dbg !20145
  store i32 %add, i32* %item.addr, align 4, !dbg !20146
  br label %sw.epilog, !dbg !20147

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !20148

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !20149
  %call = call i8* @nl_langinfo(i32 %2) #13, !dbg !20150
  ret i8* %call, !dbg !20151
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #10 !dbg !20152 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20153
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.505, i64 0, i64 0)) #13, !dbg !20154
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.506, i64 0, i64 0), i8* %call), !dbg !20155
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !20156
  call void @exit(i32 %1) #15, !dbg !20157
  unreachable, !dbg !20157
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i64)* %chunkfun, void (i8*)* %freefun) #0 !dbg !20158 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i64)*, align 8
  %freefun.addr = alloca void (i8*)*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20162, metadata !DIExpression()), !dbg !20163
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20164, metadata !DIExpression()), !dbg !20165
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20166, metadata !DIExpression()), !dbg !20167
  store i8* (i64)* %chunkfun, i8* (i64)** %chunkfun.addr, align 8
  call void @llvm.dbg.declare(metadata i8* (i64)** %chunkfun.addr, metadata !20168, metadata !DIExpression()), !dbg !20169
  store void (i8*)* %freefun, void (i8*)** %freefun.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %freefun.addr, metadata !20170, metadata !DIExpression()), !dbg !20171
  %0 = load i8* (i64)*, i8* (i64)** %chunkfun.addr, align 8, !dbg !20172
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20173
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20174, !ctir !1438
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20175
  store i8* (i64)* %0, i8* (i64)** %plain, align 8, !dbg !20176, !ctir !1437
  %2 = load void (i8*)*, void (i8*)** %freefun.addr, align 8, !dbg !20177
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20178
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20179, !ctir !1438
  %plain3 = bitcast %union.anon.1* %freefun2 to void (i8*)**, !dbg !20180
  store void (i8*)* %2, void (i8*)** %plain3, align 8, !dbg !20181, !ctir !1459
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20182
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 10, !dbg !20183
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20184
  %bf.clear = and i8 %bf.load, -2, !dbg !20184
  store i8 %bf.clear, i8* %use_extra_arg, align 8, !dbg !20184
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20185
  %6 = load i64, i64* %size.addr, align 8, !dbg !20186
  %7 = load i64, i64* %alignment.addr, align 8, !dbg !20187
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %5, i64 %6, i64 %7), !dbg !20188
  ret i32 %call, !dbg !20189
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %h, i64 %size, i64 %alignment) #0 !dbg !20190 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  %extra = alloca i32, align 4, !ctir !27
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20193, metadata !DIExpression()), !dbg !20194
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20195, metadata !DIExpression()), !dbg !20196
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20197, metadata !DIExpression()), !dbg !20198
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %chunk, metadata !20199, metadata !DIExpression()), !dbg !20200
  %0 = load i64, i64* %alignment.addr, align 8, !dbg !20201
  %cmp = icmp eq i64 %0, 0, !dbg !20203
  br i1 %cmp, label %if.then, label %if.end, !dbg !20204

if.then:                                          ; preds = %entry
  store i64 16, i64* %alignment.addr, align 8, !dbg !20205
  br label %if.end, !dbg !20206

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !20207
  %cmp1 = icmp eq i64 %1, 0, !dbg !20209
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !20210

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !20211, metadata !DIExpression()), !dbg !20213
  store i32 32, i32* %extra, align 4, !dbg !20213
  %2 = load i32, i32* %extra, align 4, !dbg !20214
  %sub = sub nsw i32 4096, %2, !dbg !20215
  %conv = sext i32 %sub to i64, !dbg !20216
  store i64 %conv, i64* %size.addr, align 8, !dbg !20217
  br label %if.end3, !dbg !20218

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, i64* %size.addr, align 8, !dbg !20219
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20220
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 0, !dbg !20221, !ctir !1438
  store i64 %3, i64* %chunk_size, align 8, !dbg !20222, !ctir !149
  %5 = load i64, i64* %alignment.addr, align 8, !dbg !20223
  %sub4 = sub i64 %5, 1, !dbg !20224
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20225
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 6, !dbg !20226, !ctir !1438
  store i64 %sub4, i64* %alignment_mask, align 8, !dbg !20227, !ctir !149
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20228
  %8 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20229
  %chunk_size5 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 0, !dbg !20230, !ctir !1438
  %9 = load i64, i64* %chunk_size5, align 8, !dbg !20230, !ctir !149
  %call = call i8* @call_chunkfun(%struct.obstack* %7, i64 %9), !dbg !20231
  %10 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20231
  %11 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20232
  %chunk6 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 1, !dbg !20233, !ctir !1438
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk6, align 8, !dbg !20234, !ctir !1442
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk, align 8, !dbg !20235
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20236
  %tobool = icmp ne %struct._obstack_chunk* %12, null, !dbg !20236
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !20238

if.then7:                                         ; preds = %if.end3
  %13 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20239
  call void %13() #14, !dbg !20240
  unreachable, !dbg !20240

if.end8:                                          ; preds = %if.end3
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20241
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %14, i32 0, i32 2, !dbg !20241, !ctir !1443
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20241, !ctir !464
  %sub.ptr.lhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !20241
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !20241
  %15 = load i64, i64* %alignment.addr, align 8, !dbg !20241
  %sub9 = sub i64 %15, 1, !dbg !20241
  %add = add i64 %sub.ptr.sub, %sub9, !dbg !20241
  %16 = load i64, i64* %alignment.addr, align 8, !dbg !20241
  %sub10 = sub i64 %16, 1, !dbg !20241
  %neg = xor i64 %sub10, -1, !dbg !20241
  %and = and i64 %add, %neg, !dbg !20241
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20241, !ctir !144
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20242
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 2, !dbg !20243, !ctir !1438
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !20244, !ctir !143
  %18 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20245
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3, !dbg !20246, !ctir !1438
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !20247, !ctir !143
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20248
  %20 = bitcast %struct._obstack_chunk* %19 to i8*, !dbg !20249
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20250
  %chunk_size11 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !20251, !ctir !1438
  %22 = load i64, i64* %chunk_size11, align 8, !dbg !20251, !ctir !149
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !20252, !ctir !144
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20253
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 0, !dbg !20254, !ctir !1443
  store i8* %add.ptr12, i8** %limit, align 8, !dbg !20255, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20256
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20257, !ctir !1438
  store i8* %add.ptr12, i8** %chunk_limit, align 8, !dbg !20258, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20259
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %25, i32 0, i32 1, !dbg !20260, !ctir !1443
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %prev, align 8, !dbg !20261, !ctir !1442
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20262
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 10, !dbg !20263
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20264
  %bf.clear = and i8 %bf.load, -3, !dbg !20264
  store i8 %bf.clear, i8* %maybe_empty_object, align 8, !dbg !20264
  %27 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20265
  %alloc_failed = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 10, !dbg !20266
  %bf.load13 = load i8, i8* %alloc_failed, align 8, !dbg !20267
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !20267
  store i8 %bf.clear14, i8* %alloc_failed, align 8, !dbg !20267
  ret i32 1, !dbg !20268
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %h, i64 %size) #0 !dbg !20269 {
entry:
  %retval = alloca i8*, align 8
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20272, metadata !DIExpression()), !dbg !20273
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20274, metadata !DIExpression()), !dbg !20275
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20276
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20278
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20278
  %bf.clear = and i8 %bf.load, 1, !dbg !20278
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20278
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20276
  br i1 %tobool, label %if.then, label %if.else, !dbg !20279

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20280
  %chunkfun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20281, !ctir !1438
  %extra = bitcast %union.anon.0* %chunkfun to i8* (i8*, i64)**, !dbg !20282
  %2 = load i8* (i8*, i64)*, i8* (i8*, i64)** %extra, align 8, !dbg !20282, !ctir !1437
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20283
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20284, !ctir !1438
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20284, !ctir !167
  %5 = load i64, i64* %size.addr, align 8, !dbg !20285
  %call = call i8* %2(i8* %4, i64 %5), !dbg !20280
  store i8* %call, i8** %retval, align 8, !dbg !20286
  br label %return, !dbg !20286

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20287
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 7, !dbg !20288, !ctir !1438
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20289
  %7 = load i8* (i64)*, i8* (i64)** %plain, align 8, !dbg !20289, !ctir !1437
  %8 = load i64, i64* %size.addr, align 8, !dbg !20290
  %call2 = call i8* %7(i64 %8), !dbg !20287
  store i8* %call2, i8** %retval, align 8, !dbg !20291
  br label %return, !dbg !20291

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !20292
  ret i8* %9, !dbg !20292
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i8*, i64)* %chunkfun, void (i8*, i8*)* %freefun, i8* %arg) #0 !dbg !20293 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i8*, i64)*, align 8
  %freefun.addr = alloca void (i8*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20296, metadata !DIExpression()), !dbg !20297
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20298, metadata !DIExpression()), !dbg !20299
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20300, metadata !DIExpression()), !dbg !20301
  store i8* (i8*, i64)* %chunkfun, i8* (i8*, i64)** %chunkfun.addr, align 8
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %chunkfun.addr, metadata !20302, metadata !DIExpression()), !dbg !20303
  store void (i8*, i8*)* %freefun, void (i8*, i8*)** %freefun.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %freefun.addr, metadata !20304, metadata !DIExpression()), !dbg !20305
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20306, metadata !DIExpression()), !dbg !20307
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** %chunkfun.addr, align 8, !dbg !20308
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20309
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20310, !ctir !1438
  %extra = bitcast %union.anon.0* %chunkfun1 to i8* (i8*, i64)**, !dbg !20311
  store i8* (i8*, i64)* %0, i8* (i8*, i64)** %extra, align 8, !dbg !20312, !ctir !1437
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %freefun.addr, align 8, !dbg !20313
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20314
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20315, !ctir !1438
  %extra3 = bitcast %union.anon.1* %freefun2 to void (i8*, i8*)**, !dbg !20316
  store void (i8*, i8*)* %2, void (i8*, i8*)** %extra3, align 8, !dbg !20317, !ctir !1459
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !20318
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20319
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 9, !dbg !20320, !ctir !1438
  store i8* %4, i8** %extra_arg, align 8, !dbg !20321, !ctir !167
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20322
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !20323
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20324
  %bf.clear = and i8 %bf.load, -2, !dbg !20324
  %bf.set = or i8 %bf.clear, 1, !dbg !20324
  store i8 %bf.set, i8* %use_extra_arg, align 8, !dbg !20324
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20325
  %8 = load i64, i64* %size.addr, align 8, !dbg !20326
  %9 = load i64, i64* %alignment.addr, align 8, !dbg !20327
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %7, i64 %8, i64 %9), !dbg !20328
  ret i32 %call, !dbg !20329
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %h, i64 %length) #0 !dbg !20330 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %length.addr = alloca i64, align 8
  %old_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  %new_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  %obj_size = alloca i64, align 8, !ctir !149
  %object_base1 = alloca i8*, align 8, !ctir !143
  %sum1 = alloca i64, align 8, !ctir !149
  %sum2 = alloca i64, align 8, !ctir !149
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20333, metadata !DIExpression()), !dbg !20334
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !20335, metadata !DIExpression()), !dbg !20336
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %old_chunk, metadata !20337, metadata !DIExpression()), !dbg !20338
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20339
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20340, !ctir !1438
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20340, !ctir !1442
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20338
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %new_chunk, metadata !20341, metadata !DIExpression()), !dbg !20342
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20342
  call void @llvm.dbg.declare(metadata i64* %obj_size, metadata !20343, metadata !DIExpression()), !dbg !20344
  %2 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20345
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 3, !dbg !20346, !ctir !1438
  %3 = load i8*, i8** %next_free, align 8, !dbg !20346, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20347
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 2, !dbg !20348, !ctir !1438
  %5 = load i8*, i8** %object_base, align 8, !dbg !20348, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !20349
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !20349
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20349
  store i64 %sub.ptr.sub, i64* %obj_size, align 8, !dbg !20344
  call void @llvm.dbg.declare(metadata i8** %object_base1, metadata !20350, metadata !DIExpression()), !dbg !20351
  call void @llvm.dbg.declare(metadata i64* %sum1, metadata !20352, metadata !DIExpression()), !dbg !20353
  %6 = load i64, i64* %obj_size, align 8, !dbg !20354
  %7 = load i64, i64* %length.addr, align 8, !dbg !20355
  %add = add i64 %6, %7, !dbg !20356
  store i64 %add, i64* %sum1, align 8, !dbg !20353
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !20357, metadata !DIExpression()), !dbg !20358
  %8 = load i64, i64* %sum1, align 8, !dbg !20359
  %9 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20360
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 6, !dbg !20361, !ctir !1438
  %10 = load i64, i64* %alignment_mask, align 8, !dbg !20361, !ctir !149
  %add2 = add i64 %8, %10, !dbg !20362
  store i64 %add2, i64* %sum2, align 8, !dbg !20358
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !20363, metadata !DIExpression()), !dbg !20364
  %11 = load i64, i64* %sum2, align 8, !dbg !20365
  %12 = load i64, i64* %obj_size, align 8, !dbg !20366
  %shr = lshr i64 %12, 3, !dbg !20367
  %add3 = add i64 %11, %shr, !dbg !20368
  %add4 = add i64 %add3, 100, !dbg !20369
  store i64 %add4, i64* %new_size, align 8, !dbg !20364
  %13 = load i64, i64* %new_size, align 8, !dbg !20370
  %14 = load i64, i64* %sum2, align 8, !dbg !20372
  %cmp = icmp ult i64 %13, %14, !dbg !20373
  br i1 %cmp, label %if.then, label %if.end, !dbg !20374

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %sum2, align 8, !dbg !20375
  store i64 %15, i64* %new_size, align 8, !dbg !20376
  br label %if.end, !dbg !20377

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %new_size, align 8, !dbg !20378
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20380
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 0, !dbg !20381, !ctir !1438
  %18 = load i64, i64* %chunk_size, align 8, !dbg !20381, !ctir !149
  %cmp5 = icmp ult i64 %16, %18, !dbg !20382
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !20383

if.then6:                                         ; preds = %if.end
  %19 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20384
  %chunk_size7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 0, !dbg !20385, !ctir !1438
  %20 = load i64, i64* %chunk_size7, align 8, !dbg !20385, !ctir !149
  store i64 %20, i64* %new_size, align 8, !dbg !20386
  br label %if.end8, !dbg !20387

if.end8:                                          ; preds = %if.then6, %if.end
  %21 = load i64, i64* %obj_size, align 8, !dbg !20388
  %22 = load i64, i64* %sum1, align 8, !dbg !20390
  %cmp9 = icmp ule i64 %21, %22, !dbg !20391
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !20392

land.lhs.true:                                    ; preds = %if.end8
  %23 = load i64, i64* %sum1, align 8, !dbg !20393
  %24 = load i64, i64* %sum2, align 8, !dbg !20394
  %cmp10 = icmp ule i64 %23, %24, !dbg !20395
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !20396

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20397
  %26 = load i64, i64* %new_size, align 8, !dbg !20398
  %call = call i8* @call_chunkfun(%struct.obstack* %25, i64 %26), !dbg !20399
  %27 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20399
  store %struct._obstack_chunk* %27, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20400
  br label %if.end12, !dbg !20401

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20402
  %tobool = icmp ne %struct._obstack_chunk* %28, null, !dbg !20402
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !20404

if.then13:                                        ; preds = %if.end12
  %29 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20405
  call void %29() #14, !dbg !20406
  unreachable, !dbg !20406

if.end14:                                         ; preds = %if.end12
  %30 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20407
  %31 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20408
  %chunk15 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 1, !dbg !20409, !ctir !1438
  store %struct._obstack_chunk* %30, %struct._obstack_chunk** %chunk15, align 8, !dbg !20410, !ctir !1442
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20411
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20412
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %33, i32 0, i32 1, !dbg !20413, !ctir !1443
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %prev, align 8, !dbg !20414, !ctir !1442
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20415
  %35 = bitcast %struct._obstack_chunk* %34 to i8*, !dbg !20416
  %36 = load i64, i64* %new_size, align 8, !dbg !20417
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !20418, !ctir !144
  %37 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20419
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 4, !dbg !20420, !ctir !1438
  store i8* %add.ptr, i8** %chunk_limit, align 8, !dbg !20421, !ctir !143
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20422
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %38, i32 0, i32 0, !dbg !20423, !ctir !1443
  store i8* %add.ptr, i8** %limit, align 8, !dbg !20424, !ctir !143
  %39 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20425
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %39, i32 0, i32 2, !dbg !20425, !ctir !1443
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20425, !ctir !464
  %sub.ptr.lhs.cast16 = ptrtoint i8* %arraydecay to i64, !dbg !20425
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast16, 0, !dbg !20425
  %40 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20425
  %alignment_mask18 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6, !dbg !20425, !ctir !1438
  %41 = load i64, i64* %alignment_mask18, align 8, !dbg !20425, !ctir !149
  %add19 = add i64 %sub.ptr.sub17, %41, !dbg !20425
  %42 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20425
  %alignment_mask20 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 6, !dbg !20425, !ctir !1438
  %43 = load i64, i64* %alignment_mask20, align 8, !dbg !20425, !ctir !149
  %neg = xor i64 %43, -1, !dbg !20425
  %and = and i64 %add19, %neg, !dbg !20425
  %add.ptr21 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20425, !ctir !144
  store i8* %add.ptr21, i8** %object_base1, align 8, !dbg !20426
  %44 = load i8*, i8** %object_base1, align 8, !dbg !20427
  %45 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20428
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 2, !dbg !20429, !ctir !1438
  %46 = load i8*, i8** %object_base22, align 8, !dbg !20429, !ctir !143
  %47 = load i64, i64* %obj_size, align 8, !dbg !20430
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %46, i64 %47, i1 false), !dbg !20431
  %48 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20432
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 10, !dbg !20434
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20434
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !20434
  %bf.clear = and i8 %bf.lshr, 1, !dbg !20434
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20434
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !20432
  br i1 %tobool23, label %if.end40, label %land.lhs.true24, !dbg !20435

land.lhs.true24:                                  ; preds = %if.end14
  %49 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20436
  %object_base25 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !20437, !ctir !1438
  %50 = load i8*, i8** %object_base25, align 8, !dbg !20437, !ctir !143
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20438
  %contents26 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %51, i32 0, i32 2, !dbg !20438, !ctir !1443
  %arraydecay27 = getelementptr inbounds [0 x i8], [0 x i8]* %contents26, i64 0, i64 0, !dbg !20438, !ctir !464
  %sub.ptr.lhs.cast28 = ptrtoint i8* %arraydecay27 to i64, !dbg !20438
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast28, 0, !dbg !20438
  %52 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20438
  %alignment_mask30 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 6, !dbg !20438, !ctir !1438
  %53 = load i64, i64* %alignment_mask30, align 8, !dbg !20438, !ctir !149
  %add31 = add i64 %sub.ptr.sub29, %53, !dbg !20438
  %54 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20438
  %alignment_mask32 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !20438, !ctir !1438
  %55 = load i64, i64* %alignment_mask32, align 8, !dbg !20438, !ctir !149
  %neg33 = xor i64 %55, -1, !dbg !20438
  %and34 = and i64 %add31, %neg33, !dbg !20438
  %add.ptr35 = getelementptr inbounds i8, i8* null, i64 %and34, !dbg !20438, !ctir !144
  %cmp36 = icmp eq i8* %50, %add.ptr35, !dbg !20439
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !20440

if.then37:                                        ; preds = %land.lhs.true24
  %56 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20441
  %prev38 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %56, i32 0, i32 1, !dbg !20443, !ctir !1443
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev38, align 8, !dbg !20443, !ctir !1442
  %58 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20444
  %prev39 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %58, i32 0, i32 1, !dbg !20445, !ctir !1443
  store %struct._obstack_chunk* %57, %struct._obstack_chunk** %prev39, align 8, !dbg !20446, !ctir !1442
  %59 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20447
  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20448
  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !20448
  call void @call_freefun(%struct.obstack* %59, i8* %61), !dbg !20449
  br label %if.end40, !dbg !20450

if.end40:                                         ; preds = %if.then37, %land.lhs.true24, %if.end14
  %62 = load i8*, i8** %object_base1, align 8, !dbg !20451
  %63 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20452
  %object_base41 = getelementptr inbounds %struct.obstack, %struct.obstack* %63, i32 0, i32 2, !dbg !20453, !ctir !1438
  store i8* %62, i8** %object_base41, align 8, !dbg !20454, !ctir !143
  %64 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20455
  %object_base42 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 2, !dbg !20456, !ctir !1438
  %65 = load i8*, i8** %object_base42, align 8, !dbg !20456, !ctir !143
  %66 = load i64, i64* %obj_size, align 8, !dbg !20457
  %add.ptr43 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !20458, !ctir !144
  %67 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20459
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3, !dbg !20460, !ctir !1438
  store i8* %add.ptr43, i8** %next_free44, align 8, !dbg !20461, !ctir !143
  %68 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20462
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0, i32 10, !dbg !20463
  %bf.load46 = load i8, i8* %maybe_empty_object45, align 8, !dbg !20464
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !20464
  store i8 %bf.clear47, i8* %maybe_empty_object45, align 8, !dbg !20464
  ret void, !dbg !20465
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %h, i8* %old_chunk) #0 !dbg !20466 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %old_chunk.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20469, metadata !DIExpression()), !dbg !20470
  store i8* %old_chunk, i8** %old_chunk.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %old_chunk.addr, metadata !20471, metadata !DIExpression()), !dbg !20472
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20473
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20475
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20475
  %bf.clear = and i8 %bf.load, 1, !dbg !20475
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20475
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20473
  br i1 %tobool, label %if.then, label %if.else, !dbg !20476

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20477
  %freefun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 8, !dbg !20478, !ctir !1438
  %extra = bitcast %union.anon.1* %freefun to void (i8*, i8*)**, !dbg !20479
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %extra, align 8, !dbg !20479, !ctir !1459
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20480
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20481, !ctir !1438
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20481, !ctir !167
  %5 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20482
  call void %2(i8* %4, i8* %5), !dbg !20477
  br label %if.end, !dbg !20477

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20483
  %freefun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 8, !dbg !20484, !ctir !1438
  %plain = bitcast %union.anon.1* %freefun1 to void (i8*)**, !dbg !20485
  %7 = load void (i8*)*, void (i8*)** %plain, align 8, !dbg !20485, !ctir !1459
  %8 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20486
  call void %7(i8* %8), !dbg !20483
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20487
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %h, i8* %obj) #9 !dbg !20488 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20491, metadata !DIExpression()), !dbg !20492
  store i8* %obj, i8** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20493, metadata !DIExpression()), !dbg !20494
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20495, metadata !DIExpression()), !dbg !20496
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20497, metadata !DIExpression()), !dbg !20498
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20499
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20500, !ctir !1438
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20500, !ctir !1442
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20501
  br label %while.cond, !dbg !20502

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20503
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20504
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20505

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20506
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20507
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20508
  %cmp1 = icmp uge i8* %4, %5, !dbg !20509
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20510

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20511
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20512, !ctir !1443
  %7 = load i8*, i8** %limit, align 8, !dbg !20512, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20513
  %cmp2 = icmp ult i8* %7, %8, !dbg !20514
  br label %lor.end, !dbg !20510

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20515
  br i1 %10, label %while.body, label %while.end, !dbg !20502

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20516
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20518, !ctir !1443
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20518, !ctir !1442
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20519
  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20520
  store %struct._obstack_chunk* %13, %struct._obstack_chunk** %lp, align 8, !dbg !20521
  br label %while.cond, !dbg !20502, !llvm.loop !20522

while.end:                                        ; preds = %land.end
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20524
  %cmp3 = icmp ne %struct._obstack_chunk* %14, null, !dbg !20525
  %conv = zext i1 %cmp3 to i32, !dbg !20525
  ret i32 %conv, !dbg !20526
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %h, i8* %obj) #0 !dbg !20527 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20528, metadata !DIExpression()), !dbg !20529
  store i8* %obj, i8** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20530, metadata !DIExpression()), !dbg !20531
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20532, metadata !DIExpression()), !dbg !20533
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20534, metadata !DIExpression()), !dbg !20535
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20536
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20537, !ctir !1438
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20537, !ctir !1442
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20538
  br label %while.cond, !dbg !20539

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20540
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20541
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20542

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20543
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20544
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20545
  %cmp1 = icmp uge i8* %4, %5, !dbg !20546
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20547

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20548
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20549, !ctir !1443
  %7 = load i8*, i8** %limit, align 8, !dbg !20549, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20550
  %cmp2 = icmp ult i8* %7, %8, !dbg !20551
  br label %lor.end, !dbg !20547

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20552
  br i1 %10, label %while.body, label %while.end, !dbg !20539

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20553
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20555, !ctir !1443
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20555, !ctir !1442
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20556
  %13 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20557
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20558
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !20558
  call void @call_freefun(%struct.obstack* %13, i8* %15), !dbg !20559
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20560
  store %struct._obstack_chunk* %16, %struct._obstack_chunk** %lp, align 8, !dbg !20561
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20562
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10, !dbg !20563
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20564
  %bf.clear = and i8 %bf.load, -3, !dbg !20564
  %bf.set = or i8 %bf.clear, 2, !dbg !20564
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !20564
  br label %while.cond, !dbg !20539, !llvm.loop !20565

while.end:                                        ; preds = %land.end
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20567
  %tobool = icmp ne %struct._obstack_chunk* %18, null, !dbg !20567
  br i1 %tobool, label %if.then, label %if.else, !dbg !20569

if.then:                                          ; preds = %while.end
  %19 = load i8*, i8** %obj.addr, align 8, !dbg !20570
  %20 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20572
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !20573, !ctir !1438
  store i8* %19, i8** %next_free, align 8, !dbg !20574, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20575
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 2, !dbg !20576, !ctir !1438
  store i8* %19, i8** %object_base, align 8, !dbg !20577, !ctir !143
  %22 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20578
  %limit3 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %22, i32 0, i32 0, !dbg !20579, !ctir !1443
  %23 = load i8*, i8** %limit3, align 8, !dbg !20579, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20580
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20581, !ctir !1438
  store i8* %23, i8** %chunk_limit, align 8, !dbg !20582, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20583
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20584
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 1, !dbg !20585, !ctir !1438
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %chunk4, align 8, !dbg !20586, !ctir !1442
  br label %if.end7, !dbg !20587

if.else:                                          ; preds = %while.end
  %27 = load i8*, i8** %obj.addr, align 8, !dbg !20588
  %cmp5 = icmp ne i8* %27, null, !dbg !20590
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !20591

if.then6:                                         ; preds = %if.else
  call void @abort() #15, !dbg !20592
  unreachable, !dbg !20592

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !20593
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @_obstack_memory_used(%struct.obstack* %h) #9 !dbg !20594 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1442
  %nbytes = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20597, metadata !DIExpression()), !dbg !20598
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20599, metadata !DIExpression()), !dbg !20600
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !20601, metadata !DIExpression()), !dbg !20602
  store i64 0, i64* %nbytes, align 8, !dbg !20602
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20603
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20605, !ctir !1438
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20605, !ctir !1442
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20606
  br label %for.cond, !dbg !20607

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20608
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20610
  br i1 %cmp, label %for.body, label %for.end, !dbg !20611

for.body:                                         ; preds = %for.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20612
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %3, i32 0, i32 0, !dbg !20614, !ctir !1443
  %4 = load i8*, i8** %limit, align 8, !dbg !20614, !ctir !143
  %5 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20615
  %6 = bitcast %struct._obstack_chunk* %5 to i8*, !dbg !20616
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !20617
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !20617
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20617
  %7 = load i64, i64* %nbytes, align 8, !dbg !20618
  %add = add i64 %7, %sub.ptr.sub, !dbg !20618
  store i64 %add, i64* %nbytes, align 8, !dbg !20618
  br label %for.inc, !dbg !20619

for.inc:                                          ; preds = %for.body
  %8 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20620
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %8, i32 0, i32 1, !dbg !20621, !ctir !1443
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20621, !ctir !1442
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %lp, align 8, !dbg !20622
  br label %for.cond, !dbg !20623, !llvm.loop !20624

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %nbytes, align 8, !dbg !20626
  ret i64 %10, !dbg !20627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm_zone* @tzalloc(i8* %name) #0 !dbg !20628 {
entry:
  %name.addr = alloca i8*, align 8
  %name_size = alloca i64, align 8, !ctir !149
  %abbr_size = alloca i64, align 8, !ctir !149
  %tz = alloca %struct.tm_zone*, align 8, !ctir !1740
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20631, metadata !DIExpression()), !dbg !20632
  call void @llvm.dbg.declare(metadata i64* %name_size, metadata !20633, metadata !DIExpression()), !dbg !20634
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20635
  %tobool = icmp ne i8* %0, null, !dbg !20635
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20635

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20636
  %call = call i64 @strlen(i8* %1) #16, !dbg !20637
  %add = add i64 %call, 1, !dbg !20638
  br label %cond.end, !dbg !20635

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20635

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !20635
  store i64 %cond, i64* %name_size, align 8, !dbg !20634
  call void @llvm.dbg.declare(metadata i64* %abbr_size, metadata !20639, metadata !DIExpression()), !dbg !20640
  %2 = load i64, i64* %name_size, align 8, !dbg !20641
  %cmp = icmp ult i64 %2, 119, !dbg !20642
  br i1 %cmp, label %cond.true1, label %cond.false2, !dbg !20641

cond.true1:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !20641

cond.false2:                                      ; preds = %cond.end
  %3 = load i64, i64* %name_size, align 8, !dbg !20643
  %add3 = add i64 %3, 1, !dbg !20644
  br label %cond.end4, !dbg !20641

cond.end4:                                        ; preds = %cond.false2, %cond.true1
  %cond5 = phi i64 [ 119, %cond.true1 ], [ %add3, %cond.false2 ], !dbg !20641
  store i64 %cond5, i64* %abbr_size, align 8, !dbg !20640
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz, metadata !20645, metadata !DIExpression()), !dbg !20646
  %4 = load i64, i64* %abbr_size, align 8, !dbg !20647
  %add6 = add i64 16, %4, !dbg !20647
  %and = and i64 %add6, -8, !dbg !20647
  %call7 = call noalias i8* @malloc(i64 %and) #13, !dbg !20648
  %5 = bitcast i8* %call7 to %struct.tm_zone*, !dbg !20648
  store %struct.tm_zone* %5, %struct.tm_zone** %tz, align 8, !dbg !20646
  %6 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20649
  %tobool8 = icmp ne %struct.tm_zone* %6, null, !dbg !20649
  br i1 %tobool8, label %if.then, label %if.end14, !dbg !20651

if.then:                                          ; preds = %cond.end4
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20652
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %7, i32 0, i32 0, !dbg !20654, !ctir !1742
  store %struct.tm_zone* null, %struct.tm_zone** %next, align 8, !dbg !20655, !ctir !1741
  %8 = load i8*, i8** %name.addr, align 8, !dbg !20656
  %tobool9 = icmp ne i8* %8, null, !dbg !20657
  %lnot = xor i1 %tobool9, true, !dbg !20657
  %lnot10 = xor i1 %lnot, true, !dbg !20658
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !20658
  %conv = trunc i32 %lnot.ext to i8, !dbg !20658
  %9 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20659
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %9, i32 0, i32 1, !dbg !20660, !ctir !1742
  store i8 %conv, i8* %tz_is_set, align 8, !dbg !20661, !ctir !144
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20662
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %10, i32 0, i32 2, !dbg !20663, !ctir !1742
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20662, !ctir !464
  store i8 0, i8* %arrayidx, align 1, !dbg !20664
  %11 = load i8*, i8** %name.addr, align 8, !dbg !20665
  %tobool11 = icmp ne i8* %11, null, !dbg !20665
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !20667

if.then12:                                        ; preds = %if.then
  %12 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20668
  %abbrs13 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %12, i32 0, i32 2, !dbg !20669, !ctir !1742
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs13, i64 0, i64 0, !dbg !20668, !ctir !464
  %13 = load i8*, i8** %name.addr, align 8, !dbg !20670
  %14 = load i64, i64* %name_size, align 8, !dbg !20671
  call void @extend_abbrs(i8* %arraydecay, i8* %13, i64 %14), !dbg !20672
  br label %if.end, !dbg !20672

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end14, !dbg !20673

if.end14:                                         ; preds = %if.end, %cond.end4
  %15 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20674
  ret %struct.tm_zone* %15, !dbg !20675
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extend_abbrs(i8* %abbrs, i8* %abbr, i64 %abbr_size) #0 !dbg !20676 {
entry:
  %abbrs.addr = alloca i8*, align 8
  %abbr.addr = alloca i8*, align 8
  %abbr_size.addr = alloca i64, align 8
  store i8* %abbrs, i8** %abbrs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %abbrs.addr, metadata !20679, metadata !DIExpression()), !dbg !20680
  store i8* %abbr, i8** %abbr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %abbr.addr, metadata !20681, metadata !DIExpression()), !dbg !20682
  store i64 %abbr_size, i64* %abbr_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %abbr_size.addr, metadata !20683, metadata !DIExpression()), !dbg !20684
  %0 = load i8*, i8** %abbrs.addr, align 8, !dbg !20685
  %1 = load i8*, i8** %abbr.addr, align 8, !dbg !20686
  %2 = load i64, i64* %abbr_size.addr, align 8, !dbg !20687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false), !dbg !20688
  %3 = load i8*, i8** %abbrs.addr, align 8, !dbg !20689
  %4 = load i64, i64* %abbr_size.addr, align 8, !dbg !20690
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !20689, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !20691
  ret void, !dbg !20692
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @tzfree(%struct.tm_zone* %tz) #0 !dbg !20693 {
entry:
  %tz.addr = alloca %struct.tm_zone*, align 8
  %next = alloca %struct.tm_zone*, align 8, !ctir !1740
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20696, metadata !DIExpression()), !dbg !20697
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20698
  %cmp = icmp ne %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !20700
  br i1 %cmp, label %if.then, label %if.end, !dbg !20701

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !20702

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20703
  %tobool = icmp ne %struct.tm_zone* %1, null, !dbg !20702
  br i1 %tobool, label %while.body, label %while.end, !dbg !20702

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %next, metadata !20704, metadata !DIExpression()), !dbg !20706
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20707
  %next1 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 0, !dbg !20708, !ctir !1742
  %3 = load %struct.tm_zone*, %struct.tm_zone** %next1, align 8, !dbg !20708, !ctir !1741
  store %struct.tm_zone* %3, %struct.tm_zone** %next, align 8, !dbg !20706
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20709
  %5 = bitcast %struct.tm_zone* %4 to i8*, !dbg !20709
  call void @free(i8* %5) #13, !dbg !20710
  %6 = load %struct.tm_zone*, %struct.tm_zone** %next, align 8, !dbg !20711
  store %struct.tm_zone* %6, %struct.tm_zone** %tz.addr, align 8, !dbg !20712
  br label %while.cond, !dbg !20702, !llvm.loop !20713

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !20702

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !20715
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm* @localtime_rz(%struct.tm_zone* %tz, i64* nonnull %t, %struct.tm* nonnull %tm) #0 !dbg !20716 {
entry:
  %retval = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %t.addr = alloca i64*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !1740
  %abbr_saved = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20735, metadata !DIExpression()), !dbg !20736
  store i64* %t, i64** %t.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %t.addr, metadata !20737, metadata !DIExpression()), !dbg !20738
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20739, metadata !DIExpression()), !dbg !20740
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20741
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !20741
  br i1 %tobool, label %if.else, label %if.then, !dbg !20743

if.then:                                          ; preds = %entry
  %1 = load i64*, i64** %t.addr, align 8, !dbg !20744
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20745
  %call = call %struct.tm* @gmtime_r(i64* %1, %struct.tm* %2) #13, !dbg !20746
  store %struct.tm* %call, %struct.tm** %retval, align 8, !dbg !20747
  br label %return, !dbg !20747

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20748, metadata !DIExpression()), !dbg !20750
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20751
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %3), !dbg !20752
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !20750
  %4 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20753
  %tobool2 = icmp ne %struct.tm_zone* %4, null, !dbg !20753
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !20755

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %abbr_saved, metadata !20756, metadata !DIExpression()), !dbg !20758
  %5 = load i64*, i64** %t.addr, align 8, !dbg !20759
  %6 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20760
  %call4 = call %struct.tm* @localtime_r(i64* %5, %struct.tm* %6) #13, !dbg !20761
  %tobool5 = icmp ne %struct.tm* %call4, null, !dbg !20761
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !20762

land.rhs:                                         ; preds = %if.then3
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20763
  %8 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20764
  %call6 = call zeroext i1 @save_abbr(%struct.tm_zone* %7, %struct.tm* %8), !dbg !20765
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then3
  %9 = phi i1 [ false, %if.then3 ], [ %call6, %land.rhs ], !dbg !20766
  %frombool = zext i1 %9 to i8, !dbg !20758
  store i8 %frombool, i8* %abbr_saved, align 1, !dbg !20758
  %10 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20767
  %call7 = call zeroext i1 @revert_tz(%struct.tm_zone* %10), !dbg !20769
  br i1 %call7, label %land.lhs.true, label %if.end, !dbg !20770

land.lhs.true:                                    ; preds = %land.end
  %11 = load i8, i8* %abbr_saved, align 1, !dbg !20771
  %tobool8 = trunc i8 %11 to i1, !dbg !20771
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !20772

if.then9:                                         ; preds = %land.lhs.true
  %12 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20773
  store %struct.tm* %12, %struct.tm** %retval, align 8, !dbg !20774
  br label %return, !dbg !20774

if.end:                                           ; preds = %land.lhs.true, %land.end
  br label %if.end10, !dbg !20775

if.end10:                                         ; preds = %if.end, %if.else
  store %struct.tm* null, %struct.tm** %retval, align 8, !dbg !20776
  br label %return, !dbg !20776

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %13 = load %struct.tm*, %struct.tm** %retval, align 8, !dbg !20777
  ret %struct.tm* %13, !dbg !20777
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @gmtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm_zone* @set_tz(%struct.tm_zone* %tz) #0 !dbg !20778 {
entry:
  %retval = alloca %struct.tm_zone*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %env_tz = alloca i8*, align 8, !ctir !143
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !1740
  %saved_errno = alloca i32, align 4, !ctir !27
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20781, metadata !DIExpression()), !dbg !20782
  call void @llvm.dbg.declare(metadata i8** %env_tz, metadata !20783, metadata !DIExpression()), !dbg !20784
  %call = call i8* @getenv_TZ(), !dbg !20785
  store i8* %call, i8** %env_tz, align 8, !dbg !20784
  %0 = load i8*, i8** %env_tz, align 8, !dbg !20786
  %tobool = icmp ne i8* %0, null, !dbg !20786
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20788

cond.true:                                        ; preds = %entry
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20789
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %1, i32 0, i32 1, !dbg !20790, !ctir !1742
  %2 = load i8, i8* %tz_is_set, align 8, !dbg !20790, !ctir !144
  %conv = sext i8 %2 to i32, !dbg !20789
  %tobool1 = icmp ne i32 %conv, 0, !dbg !20789
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !20791

land.lhs.true:                                    ; preds = %cond.true
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20792
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %3, i32 0, i32 2, !dbg !20793, !ctir !1742
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20792, !ctir !464
  %4 = load i8*, i8** %env_tz, align 8, !dbg !20794
  %call2 = call i32 @strcmp(i8* %arraydecay, i8* %4) #16, !dbg !20795
  %cmp = icmp eq i32 %call2, 0, !dbg !20796
  br i1 %cmp, label %if.then, label %if.else, !dbg !20786

cond.false:                                       ; preds = %entry
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20797
  %tz_is_set4 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %5, i32 0, i32 1, !dbg !20798, !ctir !1742
  %6 = load i8, i8* %tz_is_set4, align 8, !dbg !20798, !ctir !144
  %tobool5 = icmp ne i8 %6, 0, !dbg !20797
  br i1 %tobool5, label %if.else, label %if.then, !dbg !20788

if.then:                                          ; preds = %cond.false, %land.lhs.true
  store %struct.tm_zone* inttoptr (i64 1 to %struct.tm_zone*), %struct.tm_zone** %retval, align 8, !dbg !20799
  br label %return, !dbg !20799

if.else:                                          ; preds = %cond.false, %land.lhs.true, %cond.true
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20800, metadata !DIExpression()), !dbg !20802
  %7 = load i8*, i8** %env_tz, align 8, !dbg !20803
  %call6 = call %struct.tm_zone* @tzalloc(i8* %7), !dbg !20804
  store %struct.tm_zone* %call6, %struct.tm_zone** %old_tz, align 8, !dbg !20802
  %8 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20805
  %tobool7 = icmp ne %struct.tm_zone* %8, null, !dbg !20805
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !20807

if.then8:                                         ; preds = %if.else
  %9 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20808
  store %struct.tm_zone* %9, %struct.tm_zone** %retval, align 8, !dbg !20809
  br label %return, !dbg !20809

if.end:                                           ; preds = %if.else
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20810
  %call9 = call zeroext i1 @change_env(%struct.tm_zone* %10), !dbg !20812
  br i1 %call9, label %if.end13, label %if.then10, !dbg !20813

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20814, metadata !DIExpression()), !dbg !20816
  %call11 = call i32* @__errno_location() #17, !dbg !20817
  %11 = load i32, i32* %call11, align 4, !dbg !20817, !ctir !27
  store i32 %11, i32* %saved_errno, align 4, !dbg !20816
  %12 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20818
  call void @tzfree(%struct.tm_zone* %12), !dbg !20819
  %13 = load i32, i32* %saved_errno, align 4, !dbg !20820
  %call12 = call i32* @__errno_location() #17, !dbg !20821
  store i32 %13, i32* %call12, align 4, !dbg !20822, !ctir !27
  store %struct.tm_zone* null, %struct.tm_zone** %retval, align 8, !dbg !20823
  br label %return, !dbg !20823

if.end13:                                         ; preds = %if.end
  %14 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20824
  store %struct.tm_zone* %14, %struct.tm_zone** %retval, align 8, !dbg !20825
  br label %return, !dbg !20825

return:                                           ; preds = %if.end13, %if.then10, %if.then8, %if.then
  %15 = load %struct.tm_zone*, %struct.tm_zone** %retval, align 8, !dbg !20826
  ret %struct.tm_zone* %15, !dbg !20826
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @save_abbr(%struct.tm_zone* %tz, %struct.tm* %tm) #0 !dbg !20827 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %zone = alloca i8*, align 8, !ctir !146
  %zone_copy = alloca i8*, align 8, !ctir !143
  %zone_size = alloca i64, align 8, !ctir !149
  %zone_used = alloca i64, align 8, !ctir !149
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20830, metadata !DIExpression()), !dbg !20831
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20832, metadata !DIExpression()), !dbg !20833
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !20834, metadata !DIExpression()), !dbg !20835
  store i8* null, i8** %zone, align 8, !dbg !20835
  call void @llvm.dbg.declare(metadata i8** %zone_copy, metadata !20836, metadata !DIExpression()), !dbg !20837
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.516, i64 0, i64 0), i8** %zone_copy, align 8, !dbg !20837
  %0 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20838
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 10, !dbg !20839, !ctir !20720
  %1 = load i8*, i8** %tm_zone, align 8, !dbg !20839, !ctir !146
  store i8* %1, i8** %zone, align 8, !dbg !20840
  %2 = load i8*, i8** %zone, align 8, !dbg !20841
  %tobool = icmp ne i8* %2, null, !dbg !20841
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !20843

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20844
  %4 = bitcast %struct.tm* %3 to i8*, !dbg !20845
  %5 = load i8*, i8** %zone, align 8, !dbg !20846
  %cmp = icmp ule i8* %4, %5, !dbg !20847
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20848

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %zone, align 8, !dbg !20849
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20850
  %add.ptr = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 1, !dbg !20851, !ctir !20720
  %8 = bitcast %struct.tm* %add.ptr to i8*, !dbg !20852
  %cmp1 = icmp ult i8* %6, %8, !dbg !20853
  br i1 %cmp1, label %if.then, label %if.end, !dbg !20854

if.then:                                          ; preds = %land.lhs.true, %entry
  store i1 true, i1* %retval, align 1, !dbg !20855
  br label %return, !dbg !20855

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load i8*, i8** %zone, align 8, !dbg !20856
  %10 = load i8, i8* %9, align 1, !dbg !20858, !ctir !147
  %tobool2 = icmp ne i8 %10, 0, !dbg !20858
  br i1 %tobool2, label %if.then3, label %if.end48, !dbg !20859

if.then3:                                         ; preds = %if.end
  %11 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20860
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %11, i32 0, i32 2, !dbg !20862, !ctir !1742
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20860, !ctir !464
  store i8* %arraydecay, i8** %zone_copy, align 8, !dbg !20863
  br label %while.cond, !dbg !20864

while.cond:                                       ; preds = %if.end47, %if.then3
  %12 = load i8*, i8** %zone_copy, align 8, !dbg !20865
  %13 = load i8*, i8** %zone, align 8, !dbg !20866
  %call = call i32 @strcmp(i8* %12, i8* %13) #16, !dbg !20867
  %cmp4 = icmp ne i32 %call, 0, !dbg !20868
  br i1 %cmp4, label %while.body, label %while.end, !dbg !20864

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %zone_copy, align 8, !dbg !20869
  %15 = load i8, i8* %14, align 1, !dbg !20872, !ctir !144
  %conv = sext i8 %15 to i32, !dbg !20872
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20872
  br i1 %tobool5, label %if.end35, label %lor.lhs.false6, !dbg !20873

lor.lhs.false6:                                   ; preds = %while.body
  %16 = load i8*, i8** %zone_copy, align 8, !dbg !20874
  %17 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20875
  %abbrs7 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %17, i32 0, i32 2, !dbg !20876, !ctir !1742
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs7, i64 0, i64 0, !dbg !20875, !ctir !464
  %cmp9 = icmp eq i8* %16, %arraydecay8, !dbg !20877
  br i1 %cmp9, label %land.lhs.true11, label %if.then14, !dbg !20878

land.lhs.true11:                                  ; preds = %lor.lhs.false6
  %18 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20879
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %18, i32 0, i32 1, !dbg !20880, !ctir !1742
  %19 = load i8, i8* %tz_is_set, align 8, !dbg !20880, !ctir !144
  %conv12 = sext i8 %19 to i32, !dbg !20879
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !20879
  br i1 %tobool13, label %if.end35, label %if.then14, !dbg !20881

if.then14:                                        ; preds = %land.lhs.true11, %lor.lhs.false6
  call void @llvm.dbg.declare(metadata i64* %zone_size, metadata !20882, metadata !DIExpression()), !dbg !20884
  %20 = load i8*, i8** %zone, align 8, !dbg !20885
  %call15 = call i64 @strlen(i8* %20) #16, !dbg !20886
  %add = add i64 %call15, 1, !dbg !20887
  store i64 %add, i64* %zone_size, align 8, !dbg !20884
  call void @llvm.dbg.declare(metadata i64* %zone_used, metadata !20888, metadata !DIExpression()), !dbg !20889
  %21 = load i8*, i8** %zone_copy, align 8, !dbg !20890
  %22 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20891
  %abbrs16 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %22, i32 0, i32 2, !dbg !20892, !ctir !1742
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs16, i64 0, i64 0, !dbg !20891, !ctir !464
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !20893
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay17 to i64, !dbg !20893
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20893
  store i64 %sub.ptr.sub, i64* %zone_used, align 8, !dbg !20889
  %23 = load i64, i64* %zone_used, align 8, !dbg !20894
  %sub = sub i64 -1, %23, !dbg !20896
  %24 = load i64, i64* %zone_size, align 8, !dbg !20897
  %cmp18 = icmp ult i64 %sub, %24, !dbg !20898
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !20899

if.then20:                                        ; preds = %if.then14
  %call21 = call i32* @__errno_location() #17, !dbg !20900
  store i32 12, i32* %call21, align 4, !dbg !20902, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !20903
  br label %return, !dbg !20903

if.end22:                                         ; preds = %if.then14
  %25 = load i64, i64* %zone_used, align 8, !dbg !20904
  %26 = load i64, i64* %zone_size, align 8, !dbg !20906
  %add23 = add i64 %25, %26, !dbg !20907
  %cmp24 = icmp ult i64 %add23, 119, !dbg !20908
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !20909

if.then26:                                        ; preds = %if.end22
  %27 = load i8*, i8** %zone_copy, align 8, !dbg !20910
  %28 = load i8*, i8** %zone, align 8, !dbg !20911
  %29 = load i64, i64* %zone_size, align 8, !dbg !20912
  call void @extend_abbrs(i8* %27, i8* %28, i64 %29), !dbg !20913
  br label %if.end34, !dbg !20913

if.else:                                          ; preds = %if.end22
  %30 = load i8*, i8** %zone, align 8, !dbg !20914
  %call27 = call %struct.tm_zone* @tzalloc(i8* %30), !dbg !20916
  %31 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20917
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %31, i32 0, i32 0, !dbg !20918, !ctir !1742
  store %struct.tm_zone* %call27, %struct.tm_zone** %next, align 8, !dbg !20919, !ctir !1741
  store %struct.tm_zone* %call27, %struct.tm_zone** %tz.addr, align 8, !dbg !20920
  %32 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20921
  %tobool28 = icmp ne %struct.tm_zone* %32, null, !dbg !20921
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !20923

if.then29:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !20924
  br label %return, !dbg !20924

if.end30:                                         ; preds = %if.else
  %33 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20925
  %tz_is_set31 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %33, i32 0, i32 1, !dbg !20926, !ctir !1742
  store i8 0, i8* %tz_is_set31, align 8, !dbg !20927, !ctir !144
  %34 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20928
  %abbrs32 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %34, i32 0, i32 2, !dbg !20929, !ctir !1742
  %arraydecay33 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs32, i64 0, i64 0, !dbg !20928, !ctir !464
  store i8* %arraydecay33, i8** %zone_copy, align 8, !dbg !20930
  br label %if.end34

if.end34:                                         ; preds = %if.end30, %if.then26
  br label %while.end, !dbg !20931

if.end35:                                         ; preds = %land.lhs.true11, %while.body
  %35 = load i8*, i8** %zone_copy, align 8, !dbg !20932
  %call36 = call i64 @strlen(i8* %35) #16, !dbg !20933
  %add37 = add i64 %call36, 1, !dbg !20934
  %36 = load i8*, i8** %zone_copy, align 8, !dbg !20935
  %add.ptr38 = getelementptr inbounds i8, i8* %36, i64 %add37, !dbg !20935, !ctir !144
  store i8* %add.ptr38, i8** %zone_copy, align 8, !dbg !20935
  %37 = load i8*, i8** %zone_copy, align 8, !dbg !20936
  %38 = load i8, i8* %37, align 1, !dbg !20938, !ctir !144
  %tobool39 = icmp ne i8 %38, 0, !dbg !20938
  br i1 %tobool39, label %if.end47, label %land.lhs.true40, !dbg !20939

land.lhs.true40:                                  ; preds = %if.end35
  %39 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20940
  %next41 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %39, i32 0, i32 0, !dbg !20941, !ctir !1742
  %40 = load %struct.tm_zone*, %struct.tm_zone** %next41, align 8, !dbg !20941, !ctir !1741
  %tobool42 = icmp ne %struct.tm_zone* %40, null, !dbg !20940
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !20942

if.then43:                                        ; preds = %land.lhs.true40
  %41 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20943
  %next44 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %41, i32 0, i32 0, !dbg !20945, !ctir !1742
  %42 = load %struct.tm_zone*, %struct.tm_zone** %next44, align 8, !dbg !20945, !ctir !1741
  store %struct.tm_zone* %42, %struct.tm_zone** %tz.addr, align 8, !dbg !20946
  %43 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20947
  %abbrs45 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %43, i32 0, i32 2, !dbg !20948, !ctir !1742
  %arraydecay46 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs45, i64 0, i64 0, !dbg !20947, !ctir !464
  store i8* %arraydecay46, i8** %zone_copy, align 8, !dbg !20949
  br label %if.end47, !dbg !20950

if.end47:                                         ; preds = %if.then43, %land.lhs.true40, %if.end35
  br label %while.cond, !dbg !20864, !llvm.loop !20951

while.end:                                        ; preds = %if.end34, %while.cond
  br label %if.end48, !dbg !20953

if.end48:                                         ; preds = %while.end, %if.end
  %44 = load i8*, i8** %zone_copy, align 8, !dbg !20954
  %45 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20955
  %tm_zone49 = getelementptr inbounds %struct.tm, %struct.tm* %45, i32 0, i32 10, !dbg !20956, !ctir !20720
  store i8* %44, i8** %tm_zone49, align 8, !dbg !20957, !ctir !146
  store i1 true, i1* %retval, align 1, !dbg !20958
  br label %return, !dbg !20958

return:                                           ; preds = %if.end48, %if.then29, %if.then20, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !20959
  ret i1 %46, !dbg !20959
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @revert_tz(%struct.tm_zone* %tz) #0 !dbg !20960 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  %saved_errno = alloca i32, align 4, !ctir !27
  %ok = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20963, metadata !DIExpression()), !dbg !20964
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20965
  %cmp = icmp eq %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !20967
  br i1 %cmp, label %if.then, label %if.else, !dbg !20968

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !20969
  br label %return, !dbg !20969

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20970, metadata !DIExpression()), !dbg !20972
  %call = call i32* @__errno_location() #17, !dbg !20973
  %1 = load i32, i32* %call, align 4, !dbg !20973, !ctir !27
  store i32 %1, i32* %saved_errno, align 4, !dbg !20972
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !20974, metadata !DIExpression()), !dbg !20975
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20976
  %call1 = call zeroext i1 @change_env(%struct.tm_zone* %2), !dbg !20977
  %frombool = zext i1 %call1 to i8, !dbg !20975
  store i8 %frombool, i8* %ok, align 1, !dbg !20975
  %3 = load i8, i8* %ok, align 1, !dbg !20978
  %tobool = trunc i8 %3 to i1, !dbg !20978
  br i1 %tobool, label %if.end, label %if.then2, !dbg !20980

if.then2:                                         ; preds = %if.else
  %call3 = call i32* @__errno_location() #17, !dbg !20981
  %4 = load i32, i32* %call3, align 4, !dbg !20981, !ctir !27
  store i32 %4, i32* %saved_errno, align 4, !dbg !20982
  br label %if.end, !dbg !20983

if.end:                                           ; preds = %if.then2, %if.else
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20984
  call void @tzfree(%struct.tm_zone* %5), !dbg !20985
  %6 = load i32, i32* %saved_errno, align 4, !dbg !20986
  %call4 = call i32* @__errno_location() #17, !dbg !20987
  store i32 %6, i32* %call4, align 4, !dbg !20988, !ctir !27
  %7 = load i8, i8* %ok, align 1, !dbg !20989
  %tobool5 = trunc i8 %7 to i1, !dbg !20989
  store i1 %tobool5, i1* %retval, align 1, !dbg !20990
  br label %return, !dbg !20990

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !20991
  ret i1 %8, !dbg !20991
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_env(%struct.tm_zone* %tz) #0 !dbg !20992 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20993, metadata !DIExpression()), !dbg !20994
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20995
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %0, i32 0, i32 1, !dbg !20997, !ctir !1742
  %1 = load i8, i8* %tz_is_set, align 8, !dbg !20997, !ctir !144
  %conv = sext i8 %1 to i32, !dbg !20995
  %tobool = icmp ne i32 %conv, 0, !dbg !20995
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20995

cond.true:                                        ; preds = %entry
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20998
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 2, !dbg !20999, !ctir !1742
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20998, !ctir !464
  br label %cond.end, !dbg !20995

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20995

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !20995
  %call = call i32 @setenv_TZ(i8* %cond), !dbg !21000
  %cmp = icmp ne i32 %call, 0, !dbg !21001
  br i1 %cmp, label %if.then, label %if.end, !dbg !21002

if.then:                                          ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !21003
  br label %return, !dbg !21003

if.end:                                           ; preds = %cond.end
  call void @tzset() #13, !dbg !21004
  store i1 true, i1* %retval, align 1, !dbg !21005
  br label %return, !dbg !21005

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !21006
  ret i1 %3, !dbg !21006
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setenv_TZ(i8* %tz) #0 !dbg !21007 {
entry:
  %tz.addr = alloca i8*, align 8
  store i8* %tz, i8** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tz.addr, metadata !21010, metadata !DIExpression()), !dbg !21011
  %0 = load i8*, i8** %tz.addr, align 8, !dbg !21012
  %tobool = icmp ne i8* %0, null, !dbg !21012
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21012

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %tz.addr, align 8, !dbg !21013
  %call = call i32 @setenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0), i8* %1, i32 1) #13, !dbg !21014
  br label %cond.end, !dbg !21012

cond.false:                                       ; preds = %entry
  %call1 = call i32 @unsetenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0)) #13, !dbg !21015
  br label %cond.end, !dbg !21012

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21012
  ret i32 %cond, !dbg !21016
}

; Function Attrs: nounwind
declare dso_local void @tzset() #2

; Function Attrs: nounwind
declare dso_local i32 @setenv(i8*, i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @unsetenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @getenv_TZ() #0 !dbg !21017 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0)) #13, !dbg !21018
  ret i8* %call, !dbg !21019
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mktime_z(%struct.tm_zone* %tz, %struct.tm* nonnull %tm) #0 !dbg !21020 {
entry:
  %retval = alloca i64, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !1740
  %t = alloca i64, align 8, !ctir !162
  %badtime = alloca i64, align 8, !ctir !162
  %tm_1 = alloca %struct.tm, align 8, !ctir !20720
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21023, metadata !DIExpression()), !dbg !21024
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !21025, metadata !DIExpression()), !dbg !21026
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21027
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !21027
  br i1 %tobool, label %if.else, label %if.then, !dbg !21029

if.then:                                          ; preds = %entry
  %1 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21030
  %call = call i64 @timegm(%struct.tm* %1) #13, !dbg !21031
  store i64 %call, i64* %retval, align 8, !dbg !21032
  br label %return, !dbg !21032

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !21033, metadata !DIExpression()), !dbg !21035
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21036
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %2), !dbg !21037
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !21035
  %3 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21038
  %tobool2 = icmp ne %struct.tm_zone* %3, null, !dbg !21038
  br i1 %tobool2, label %if.then3, label %if.end15, !dbg !21040

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %t, metadata !21041, metadata !DIExpression()), !dbg !21043
  %4 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21044
  %call4 = call i64 @mktime(%struct.tm* %4) #13, !dbg !21045
  store i64 %call4, i64* %t, align 8, !dbg !21043
  call void @llvm.dbg.declare(metadata i64* %badtime, metadata !21046, metadata !DIExpression()), !dbg !21047
  store i64 -1, i64* %badtime, align 8, !dbg !21047
  call void @llvm.dbg.declare(metadata %struct.tm* %tm_1, metadata !21048, metadata !DIExpression()), !dbg !21049
  %5 = load i64, i64* %t, align 8, !dbg !21050
  %6 = load i64, i64* %badtime, align 8, !dbg !21052
  %cmp = icmp ne i64 %5, %6, !dbg !21053
  br i1 %cmp, label %land.lhs.true9, label %lor.lhs.false, !dbg !21054

lor.lhs.false:                                    ; preds = %if.then3
  %call5 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tm_1) #13, !dbg !21055
  %tobool6 = icmp ne %struct.tm* %call5, null, !dbg !21055
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !21056

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21057
  %call7 = call i32 @equal_tm(%struct.tm* %7, %struct.tm* %tm_1), !dbg !21058
  %tobool8 = icmp ne i32 %call7, 0, !dbg !21058
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !21059

land.lhs.true9:                                   ; preds = %land.lhs.true, %if.then3
  %8 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21060
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21061
  %call10 = call zeroext i1 @save_abbr(%struct.tm_zone* %8, %struct.tm* %9), !dbg !21062
  br i1 %call10, label %if.end, label %if.then11, !dbg !21063

if.then11:                                        ; preds = %land.lhs.true9
  %10 = load i64, i64* %badtime, align 8, !dbg !21064
  store i64 %10, i64* %t, align 8, !dbg !21065
  br label %if.end, !dbg !21066

if.end:                                           ; preds = %if.then11, %land.lhs.true9, %land.lhs.true, %lor.lhs.false
  %11 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21067
  %call12 = call zeroext i1 @revert_tz(%struct.tm_zone* %11), !dbg !21069
  br i1 %call12, label %if.then13, label %if.end14, !dbg !21070

if.then13:                                        ; preds = %if.end
  %12 = load i64, i64* %t, align 8, !dbg !21071
  store i64 %12, i64* %retval, align 8, !dbg !21072
  br label %return, !dbg !21072

if.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !21073

if.end15:                                         ; preds = %if.end14, %if.else
  store i64 -1, i64* %retval, align 8, !dbg !21074
  br label %return, !dbg !21074

return:                                           ; preds = %if.end15, %if.then13, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21075
  ret i64 %13, !dbg !21075
}

; Function Attrs: nounwind
declare dso_local i64 @timegm(%struct.tm*) #2

; Function Attrs: nounwind
declare dso_local i64 @mktime(%struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @equal_tm(%struct.tm* %a, %struct.tm* %b) #0 !dbg !21076 {
entry:
  %a.addr = alloca %struct.tm*, align 8
  %b.addr = alloca %struct.tm*, align 8
  store %struct.tm* %a, %struct.tm** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %a.addr, metadata !21081, metadata !DIExpression()), !dbg !21082
  store %struct.tm* %b, %struct.tm** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %b.addr, metadata !21083, metadata !DIExpression()), !dbg !21084
  %0 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21085
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 0, !dbg !21086, !ctir !21080
  %1 = load i32, i32* %tm_sec, align 8, !dbg !21086, !ctir !27
  %2 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21087
  %tm_sec1 = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 0, !dbg !21088, !ctir !21080
  %3 = load i32, i32* %tm_sec1, align 8, !dbg !21088, !ctir !27
  %xor = xor i32 %1, %3, !dbg !21089
  %4 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21090
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %4, i32 0, i32 1, !dbg !21091, !ctir !21080
  %5 = load i32, i32* %tm_min, align 4, !dbg !21091, !ctir !27
  %6 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21092
  %tm_min2 = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 1, !dbg !21093, !ctir !21080
  %7 = load i32, i32* %tm_min2, align 4, !dbg !21093, !ctir !27
  %xor3 = xor i32 %5, %7, !dbg !21094
  %or = or i32 %xor, %xor3, !dbg !21095
  %8 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21096
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2, !dbg !21097, !ctir !21080
  %9 = load i32, i32* %tm_hour, align 8, !dbg !21097, !ctir !27
  %10 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21098
  %tm_hour4 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 2, !dbg !21099, !ctir !21080
  %11 = load i32, i32* %tm_hour4, align 8, !dbg !21099, !ctir !27
  %xor5 = xor i32 %9, %11, !dbg !21100
  %or6 = or i32 %or, %xor5, !dbg !21101
  %12 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21102
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 3, !dbg !21103, !ctir !21080
  %13 = load i32, i32* %tm_mday, align 4, !dbg !21103, !ctir !27
  %14 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21104
  %tm_mday7 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 3, !dbg !21105, !ctir !21080
  %15 = load i32, i32* %tm_mday7, align 4, !dbg !21105, !ctir !27
  %xor8 = xor i32 %13, %15, !dbg !21106
  %or9 = or i32 %or6, %xor8, !dbg !21107
  %16 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21108
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 4, !dbg !21109, !ctir !21080
  %17 = load i32, i32* %tm_mon, align 8, !dbg !21109, !ctir !27
  %18 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21110
  %tm_mon10 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 4, !dbg !21111, !ctir !21080
  %19 = load i32, i32* %tm_mon10, align 8, !dbg !21111, !ctir !27
  %xor11 = xor i32 %17, %19, !dbg !21112
  %or12 = or i32 %or9, %xor11, !dbg !21113
  %20 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21114
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 5, !dbg !21115, !ctir !21080
  %21 = load i32, i32* %tm_year, align 4, !dbg !21115, !ctir !27
  %22 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21116
  %tm_year13 = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 5, !dbg !21117, !ctir !21080
  %23 = load i32, i32* %tm_year13, align 4, !dbg !21117, !ctir !27
  %xor14 = xor i32 %21, %23, !dbg !21118
  %or15 = or i32 %or12, %xor14, !dbg !21119
  %24 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21120
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %24, i32 0, i32 8, !dbg !21121, !ctir !21080
  %25 = load i32, i32* %tm_isdst, align 8, !dbg !21121, !ctir !27
  %26 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21122
  %tm_isdst16 = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 8, !dbg !21123, !ctir !21080
  %27 = load i32, i32* %tm_isdst16, align 8, !dbg !21123, !ctir !27
  %call = call zeroext i1 @isdst_differ(i32 %25, i32 %27), !dbg !21124
  %conv = zext i1 %call to i32, !dbg !21124
  %or17 = or i32 %or15, %conv, !dbg !21125
  %tobool = icmp ne i32 %or17, 0, !dbg !21126
  %lnot = xor i1 %tobool, true, !dbg !21126
  %lnot.ext = zext i1 %lnot to i32, !dbg !21126
  ret i32 %lnot.ext, !dbg !21127
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isdst_differ(i32 %a, i32 %b) #0 !dbg !21128 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21131, metadata !DIExpression()), !dbg !21132
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !21133, metadata !DIExpression()), !dbg !21134
  %0 = load i32, i32* %a.addr, align 4, !dbg !21135
  %tobool = icmp ne i32 %0, 0, !dbg !21136
  %lnot = xor i1 %tobool, true, !dbg !21136
  %lnot.ext = zext i1 %lnot to i32, !dbg !21136
  %1 = load i32, i32* %b.addr, align 4, !dbg !21137
  %tobool1 = icmp ne i32 %1, 0, !dbg !21138
  %lnot2 = xor i1 %tobool1, true, !dbg !21138
  %lnot.ext3 = zext i1 %lnot2 to i32, !dbg !21138
  %cmp = icmp ne i32 %lnot.ext, %lnot.ext3, !dbg !21139
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !21140

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !21141
  %cmp4 = icmp sle i32 0, %2, !dbg !21142
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !21143

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %b.addr, align 4, !dbg !21144
  %cmp5 = icmp sle i32 0, %3, !dbg !21145
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %4 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !21146
  ret i1 %4, !dbg !21147
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #0 !dbg !21148 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21153, metadata !DIExpression()), !dbg !21154
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21155, metadata !DIExpression()), !dbg !21156
  %0 = load i64, i64* %x.addr, align 8, !dbg !21157
  %1 = load i32, i32* %n.addr, align 4, !dbg !21158
  %sh_prom = zext i32 %1 to i64, !dbg !21159
  %shl = shl i64 %0, %sh_prom, !dbg !21159
  %2 = load i64, i64* %x.addr, align 8, !dbg !21160
  %3 = load i32, i32* %n.addr, align 4, !dbg !21161
  %sub = sub nsw i32 64, %3, !dbg !21162
  %sh_prom1 = zext i32 %sub to i64, !dbg !21163
  %shr = lshr i64 %2, %sh_prom1, !dbg !21163
  %or = or i64 %shl, %shr, !dbg !21164
  ret i64 %or, !dbg !21165
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #0 !dbg !21166 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21167, metadata !DIExpression()), !dbg !21168
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21169, metadata !DIExpression()), !dbg !21170
  %0 = load i64, i64* %x.addr, align 8, !dbg !21171
  %1 = load i32, i32* %n.addr, align 4, !dbg !21172
  %sh_prom = zext i32 %1 to i64, !dbg !21173
  %shr = lshr i64 %0, %sh_prom, !dbg !21173
  %2 = load i64, i64* %x.addr, align 8, !dbg !21174
  %3 = load i32, i32* %n.addr, align 4, !dbg !21175
  %sub = sub nsw i32 64, %3, !dbg !21176
  %sh_prom1 = zext i32 %sub to i64, !dbg !21177
  %shl = shl i64 %2, %sh_prom1, !dbg !21177
  %or = or i64 %shr, %shl, !dbg !21178
  ret i64 %or, !dbg !21179
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #0 !dbg !21180 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21184, metadata !DIExpression()), !dbg !21185
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21186, metadata !DIExpression()), !dbg !21187
  %0 = load i32, i32* %x.addr, align 4, !dbg !21188
  %1 = load i32, i32* %n.addr, align 4, !dbg !21189
  %shl = shl i32 %0, %1, !dbg !21190
  %2 = load i32, i32* %x.addr, align 4, !dbg !21191
  %3 = load i32, i32* %n.addr, align 4, !dbg !21192
  %sub = sub nsw i32 32, %3, !dbg !21193
  %shr = lshr i32 %2, %sub, !dbg !21194
  %or = or i32 %shl, %shr, !dbg !21195
  ret i32 %or, !dbg !21196
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #0 !dbg !21197 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21198, metadata !DIExpression()), !dbg !21199
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21200, metadata !DIExpression()), !dbg !21201
  %0 = load i32, i32* %x.addr, align 4, !dbg !21202
  %1 = load i32, i32* %n.addr, align 4, !dbg !21203
  %shr = lshr i32 %0, %1, !dbg !21204
  %2 = load i32, i32* %x.addr, align 4, !dbg !21205
  %3 = load i32, i32* %n.addr, align 4, !dbg !21206
  %sub = sub nsw i32 32, %3, !dbg !21207
  %shl = shl i32 %2, %sub, !dbg !21208
  %or = or i32 %shr, %shl, !dbg !21209
  ret i32 %or, !dbg !21210
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #0 !dbg !21211 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21214, metadata !DIExpression()), !dbg !21215
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21216, metadata !DIExpression()), !dbg !21217
  %0 = load i64, i64* %x.addr, align 8, !dbg !21218
  %1 = load i32, i32* %n.addr, align 4, !dbg !21219
  %sh_prom = zext i32 %1 to i64, !dbg !21220
  %shl = shl i64 %0, %sh_prom, !dbg !21220
  %2 = load i64, i64* %x.addr, align 8, !dbg !21221
  %3 = load i32, i32* %n.addr, align 4, !dbg !21222
  %conv = sext i32 %3 to i64, !dbg !21222
  %sub = sub i64 64, %conv, !dbg !21223
  %shr = lshr i64 %2, %sub, !dbg !21224
  %or = or i64 %shl, %shr, !dbg !21225
  ret i64 %or, !dbg !21226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #0 !dbg !21227 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21228, metadata !DIExpression()), !dbg !21229
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21230, metadata !DIExpression()), !dbg !21231
  %0 = load i64, i64* %x.addr, align 8, !dbg !21232
  %1 = load i32, i32* %n.addr, align 4, !dbg !21233
  %sh_prom = zext i32 %1 to i64, !dbg !21234
  %shr = lshr i64 %0, %sh_prom, !dbg !21234
  %2 = load i64, i64* %x.addr, align 8, !dbg !21235
  %3 = load i32, i32* %n.addr, align 4, !dbg !21236
  %conv = sext i32 %3 to i64, !dbg !21236
  %sub = sub i64 64, %conv, !dbg !21237
  %shl = shl i64 %2, %sub, !dbg !21238
  %or = or i64 %shr, %shl, !dbg !21239
  ret i64 %or, !dbg !21240
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #0 !dbg !21241 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21245, metadata !DIExpression()), !dbg !21246
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21247, metadata !DIExpression()), !dbg !21248
  %0 = load i16, i16* %x.addr, align 2, !dbg !21249
  %conv = zext i16 %0 to i32, !dbg !21250
  %1 = load i32, i32* %n.addr, align 4, !dbg !21251
  %shl = shl i32 %conv, %1, !dbg !21252
  %2 = load i16, i16* %x.addr, align 2, !dbg !21253
  %conv1 = zext i16 %2 to i32, !dbg !21254
  %3 = load i32, i32* %n.addr, align 4, !dbg !21255
  %sub = sub nsw i32 16, %3, !dbg !21256
  %shr = lshr i32 %conv1, %sub, !dbg !21257
  %or = or i32 %shl, %shr, !dbg !21258
  %and = and i32 %or, 65535, !dbg !21259
  %conv2 = trunc i32 %and to i16, !dbg !21260
  ret i16 %conv2, !dbg !21261
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #0 !dbg !21262 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21263, metadata !DIExpression()), !dbg !21264
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21265, metadata !DIExpression()), !dbg !21266
  %0 = load i16, i16* %x.addr, align 2, !dbg !21267
  %conv = zext i16 %0 to i32, !dbg !21268
  %1 = load i32, i32* %n.addr, align 4, !dbg !21269
  %shr = lshr i32 %conv, %1, !dbg !21270
  %2 = load i16, i16* %x.addr, align 2, !dbg !21271
  %conv1 = zext i16 %2 to i32, !dbg !21272
  %3 = load i32, i32* %n.addr, align 4, !dbg !21273
  %sub = sub nsw i32 16, %3, !dbg !21274
  %shl = shl i32 %conv1, %sub, !dbg !21275
  %or = or i32 %shr, %shl, !dbg !21276
  %and = and i32 %or, 65535, !dbg !21277
  %conv2 = trunc i32 %and to i16, !dbg !21278
  ret i16 %conv2, !dbg !21279
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #0 !dbg !21280 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21284, metadata !DIExpression()), !dbg !21285
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21286, metadata !DIExpression()), !dbg !21287
  %0 = load i8, i8* %x.addr, align 1, !dbg !21288
  %conv = zext i8 %0 to i32, !dbg !21289
  %1 = load i32, i32* %n.addr, align 4, !dbg !21290
  %shl = shl i32 %conv, %1, !dbg !21291
  %2 = load i8, i8* %x.addr, align 1, !dbg !21292
  %conv1 = zext i8 %2 to i32, !dbg !21293
  %3 = load i32, i32* %n.addr, align 4, !dbg !21294
  %sub = sub nsw i32 8, %3, !dbg !21295
  %shr = lshr i32 %conv1, %sub, !dbg !21296
  %or = or i32 %shl, %shr, !dbg !21297
  %and = and i32 %or, 255, !dbg !21298
  %conv2 = trunc i32 %and to i8, !dbg !21299
  ret i8 %conv2, !dbg !21300
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #0 !dbg !21301 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21302, metadata !DIExpression()), !dbg !21303
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21304, metadata !DIExpression()), !dbg !21305
  %0 = load i8, i8* %x.addr, align 1, !dbg !21306
  %conv = zext i8 %0 to i32, !dbg !21307
  %1 = load i32, i32* %n.addr, align 4, !dbg !21308
  %shr = lshr i32 %conv, %1, !dbg !21309
  %2 = load i8, i8* %x.addr, align 1, !dbg !21310
  %conv1 = zext i8 %2 to i32, !dbg !21311
  %3 = load i32, i32* %n.addr, align 4, !dbg !21312
  %sub = sub nsw i32 8, %3, !dbg !21313
  %shl = shl i32 %conv1, %sub, !dbg !21314
  %or = or i32 %shr, %shl, !dbg !21315
  %and = and i32 %or, 255, !dbg !21316
  %conv2 = trunc i32 %and to i8, !dbg !21317
  ret i8 %conv2, !dbg !21318
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !21319 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !1520
  %p2 = alloca i8*, align 8, !ctir !1520
  %c1 = alloca i8, align 1, !ctir !725
  %c2 = alloca i8, align 1, !ctir !725
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !21321, metadata !DIExpression()), !dbg !21322
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !21323, metadata !DIExpression()), !dbg !21324
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !21325, metadata !DIExpression()), !dbg !21326
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !21327
  store i8* %0, i8** %p1, align 8, !dbg !21326
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !21328, metadata !DIExpression()), !dbg !21329
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !21330
  store i8* %1, i8** %p2, align 8, !dbg !21329
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !21331, metadata !DIExpression()), !dbg !21332
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !21333, metadata !DIExpression()), !dbg !21334
  %2 = load i8*, i8** %p1, align 8, !dbg !21335
  %3 = load i8*, i8** %p2, align 8, !dbg !21337
  %cmp = icmp eq i8* %2, %3, !dbg !21338
  br i1 %cmp, label %if.then, label %if.end, !dbg !21339

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21340
  br label %return, !dbg !21340

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !21341

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !21342
  %5 = load i8, i8* %4, align 1, !dbg !21344, !ctir !1521
  %conv = zext i8 %5 to i32, !dbg !21344
  %call = call i32 @c_tolower(i32 %conv), !dbg !21345
  %conv1 = trunc i32 %call to i8, !dbg !21345
  store i8 %conv1, i8* %c1, align 1, !dbg !21346
  %6 = load i8*, i8** %p2, align 8, !dbg !21347
  %7 = load i8, i8* %6, align 1, !dbg !21348, !ctir !1521
  %conv2 = zext i8 %7 to i32, !dbg !21348
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !21349
  %conv4 = trunc i32 %call3 to i8, !dbg !21349
  store i8 %conv4, i8* %c2, align 1, !dbg !21350
  %8 = load i8, i8* %c1, align 1, !dbg !21351
  %conv5 = zext i8 %8 to i32, !dbg !21351
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !21353
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !21354

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !21355

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !21356
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !21356, !ctir !1521
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !21356
  %10 = load i8*, i8** %p2, align 8, !dbg !21357
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !21357, !ctir !1521
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !21357
  br label %do.cond, !dbg !21358

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !21359
  %conv11 = zext i8 %11 to i32, !dbg !21359
  %12 = load i8, i8* %c2, align 1, !dbg !21360
  %conv12 = zext i8 %12 to i32, !dbg !21360
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !21361
  br i1 %cmp13, label %do.body, label %do.end, !dbg !21358, !llvm.loop !21362

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !21364
  %conv15 = zext i8 %13 to i32, !dbg !21364
  %14 = load i8, i8* %c2, align 1, !dbg !21366
  %conv16 = zext i8 %14 to i32, !dbg !21366
  %sub = sub nsw i32 %conv15, %conv16, !dbg !21367
  store i32 %sub, i32* %retval, align 4, !dbg !21368
  br label %return, !dbg !21368

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !21369
  ret i32 %15, !dbg !21369
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #0 !dbg !21370 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !1761
  %prev_fail = alloca i8, align 1, !ctir !1761
  %fclose_fail = alloca i8, align 1, !ctir !1761
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21414, metadata !DIExpression()), !dbg !21415
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !21416, metadata !DIExpression()), !dbg !21417
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21418
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #13, !dbg !21419
  %cmp = icmp ne i64 %call, 0, !dbg !21420
  %frombool = zext i1 %cmp to i8, !dbg !21417
  store i8 %frombool, i8* %some_pending, align 1, !dbg !21417
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !21421, metadata !DIExpression()), !dbg !21422
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21423
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #13, !dbg !21423
  %cmp2 = icmp ne i32 %call1, 0, !dbg !21424
  %frombool3 = zext i1 %cmp2 to i8, !dbg !21422
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !21422
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !21425, metadata !DIExpression()), !dbg !21426
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21427
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !21428
  %cmp5 = icmp ne i32 %call4, 0, !dbg !21429
  %frombool6 = zext i1 %cmp5 to i8, !dbg !21426
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !21426
  %3 = load i8, i8* %prev_fail, align 1, !dbg !21430
  %tobool = trunc i8 %3 to i1, !dbg !21430
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !21432

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !21433
  %tobool7 = trunc i8 %4 to i1, !dbg !21433
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !21434

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !21435
  %tobool8 = trunc i8 %5 to i1, !dbg !21435
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !21436

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #17, !dbg !21437
  %6 = load i32, i32* %call10, align 4, !dbg !21437, !ctir !27
  %cmp11 = icmp ne i32 %6, 9, !dbg !21438
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !21439

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !21440
  %tobool12 = trunc i8 %7 to i1, !dbg !21440
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !21443

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #17, !dbg !21444
  store i32 0, i32* %call14, align 4, !dbg !21445, !ctir !27
  br label %if.end, !dbg !21444

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21446
  br label %return, !dbg !21446

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !21447
  br label %return, !dbg !21447

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !21448
  ret i32 %8, !dbg !21448
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #0 !dbg !21449 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21451, metadata !DIExpression()), !dbg !21452
  call void @llvm.dbg.declare(metadata i8** %result, metadata !21453, metadata !DIExpression()), !dbg !21454
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21455
  %call = call i8* @mdir_name(i8* %0), !dbg !21456
  store i8* %call, i8** %result, align 8, !dbg !21454
  %1 = load i8*, i8** %result, align 8, !dbg !21457
  %tobool = icmp ne i8* %1, null, !dbg !21457
  br i1 %tobool, label %if.end, label %if.then, !dbg !21459

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !21460
  unreachable, !dbg !21460

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !21461
  ret i8* %2, !dbg !21462
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !21463 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !146
  %h = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21465, metadata !DIExpression()), !dbg !21466
  store i64 %tablesize, i64* %tablesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !21467, metadata !DIExpression()), !dbg !21468
  call void @llvm.dbg.declare(metadata i8** %s, metadata !21469, metadata !DIExpression()), !dbg !21470
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21471, metadata !DIExpression()), !dbg !21472
  store i64 0, i64* %h, align 8, !dbg !21472
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21473
  store i8* %0, i8** %s, align 8, !dbg !21475
  br label %for.cond, !dbg !21476

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !21477
  %2 = load i8, i8* %1, align 1, !dbg !21479, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !21480
  br i1 %tobool, label %for.body, label %for.end, !dbg !21480

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !21481
  %4 = load i8, i8* %3, align 1, !dbg !21482, !ctir !147
  %conv = sext i8 %4 to i64, !dbg !21482
  %5 = load i64, i64* %h, align 8, !dbg !21483
  %shl = shl i64 %5, 9, !dbg !21484
  %6 = load i64, i64* %h, align 8, !dbg !21485
  %shr = lshr i64 %6, 55, !dbg !21486
  %or = or i64 %shl, %shr, !dbg !21487
  %add = add i64 %conv, %or, !dbg !21488
  store i64 %add, i64* %h, align 8, !dbg !21489
  br label %for.inc, !dbg !21490

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !21491
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !21491, !ctir !147
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !21491
  br label %for.cond, !dbg !21492, !llvm.loop !21493

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !21495
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !21496
  %rem = urem i64 %8, %9, !dbg !21497
  ret i64 %rem, !dbg !21498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #0 !dbg !21499 {
entry:
  %codeset = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !21502, metadata !DIExpression()), !dbg !21503
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !21504
  store i8* %call, i8** %codeset, align 8, !dbg !21505
  %0 = load i8*, i8** %codeset, align 8, !dbg !21506
  %cmp = icmp eq i8* %0, null, !dbg !21508
  br i1 %cmp, label %if.then, label %if.end, !dbg !21509

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.531, i64 0, i64 0), i8** %codeset, align 8, !dbg !21510
  br label %if.end, !dbg !21511

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !21512
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !21512, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !21512
  %conv = sext i8 %2 to i32, !dbg !21512
  %cmp1 = icmp eq i32 %conv, 0, !dbg !21516
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !21517

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.532, i64 0, i64 0), i8** %codeset, align 8, !dbg !21518
  br label %if.end4, !dbg !21519

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !21520
  ret i8* %3, !dbg !21521
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #0 !dbg !21522 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !27
  %fd = alloca i32, align 4, !ctir !27
  %result = alloca i32, align 4, !ctir !27
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21566, metadata !DIExpression()), !dbg !21567
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21568, metadata !DIExpression()), !dbg !21569
  store i32 0, i32* %saved_errno, align 4, !dbg !21569
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21570, metadata !DIExpression()), !dbg !21571
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21572, metadata !DIExpression()), !dbg !21573
  store i32 0, i32* %result, align 4, !dbg !21573
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21574
  %call = call i32 @fileno(%struct._IO_FILE* %0) #13, !dbg !21575
  store i32 %call, i32* %fd, align 4, !dbg !21576
  %1 = load i32, i32* %fd, align 4, !dbg !21577
  %cmp = icmp slt i32 %1, 0, !dbg !21579
  br i1 %cmp, label %if.then, label %if.end, !dbg !21580

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21581
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21582
  store i32 %call1, i32* %retval, align 4, !dbg !21583
  br label %return, !dbg !21583

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21584
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #13, !dbg !21584
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21584
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21586

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21587
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #13, !dbg !21588
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #13, !dbg !21589
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21590
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21591

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21592
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21593
  %tobool = icmp ne i32 %call7, 0, !dbg !21593
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21594

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #17, !dbg !21595
  %6 = load i32, i32* %call9, align 4, !dbg !21595, !ctir !27
  store i32 %6, i32* %saved_errno, align 4, !dbg !21596
  br label %if.end10, !dbg !21597

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21598
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21599
  store i32 %call11, i32* %result, align 4, !dbg !21600
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21601
  %cmp12 = icmp ne i32 %8, 0, !dbg !21603
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21604

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21605
  %call14 = call i32* @__errno_location() #17, !dbg !21607
  store i32 %9, i32* %call14, align 4, !dbg !21608, !ctir !27
  store i32 -1, i32* %result, align 4, !dbg !21609
  br label %if.end15, !dbg !21610

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21611
  store i32 %10, i32* %retval, align 4, !dbg !21612
  br label %return, !dbg !21612

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21613
  ret i32 %11, !dbg !21613
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #0 !dbg !21614 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21619, metadata !DIExpression()), !dbg !21620
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21621
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !21623
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21624

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21625
  %call = call i32 @__freading(%struct._IO_FILE* %1) #13, !dbg !21625
  %cmp1 = icmp ne i32 %call, 0, !dbg !21625
  br i1 %cmp1, label %if.end, label %if.then, !dbg !21626

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21627
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !21628
  store i32 %call2, i32* %retval, align 4, !dbg !21629
  br label %return, !dbg !21629

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21630
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !21631
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21632
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !21633
  store i32 %call3, i32* %retval, align 4, !dbg !21634
  br label %return, !dbg !21634

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21635
  ret i32 %5, !dbg !21635
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #0 !dbg !21636 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21639, metadata !DIExpression()), !dbg !21640
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21641
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !21643, !ctir !1776
  %1 = load i32, i32* %_flags, align 8, !dbg !21643, !ctir !27
  %and = and i32 %1, 256, !dbg !21644
  %tobool = icmp ne i32 %and, 0, !dbg !21644
  br i1 %tobool, label %if.then, label %if.end, !dbg !21645

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21646
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !21647
  br label %if.end, !dbg !21647

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !21648
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #0 !dbg !21649 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !1857
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21654, metadata !DIExpression()), !dbg !21655
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !21656, metadata !DIExpression()), !dbg !21657
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !21658, metadata !DIExpression()), !dbg !21659
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21660
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !21662, !ctir !1818
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !21662, !ctir !143
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21663
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !21664, !ctir !1818
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !21664, !ctir !143
  %cmp = icmp eq i8* %1, %3, !dbg !21665
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !21666

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21667
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !21668, !ctir !1818
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !21668, !ctir !143
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21669
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !21670, !ctir !1818
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !21670, !ctir !143
  %cmp1 = icmp eq i8* %5, %7, !dbg !21671
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !21672

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21673
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !21674, !ctir !1818
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !21674, !ctir !143
  %cmp3 = icmp eq i8* %9, null, !dbg !21675
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !21676

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !21677, metadata !DIExpression()), !dbg !21679
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21680
  %call = call i32 @fileno(%struct._IO_FILE* %10) #13, !dbg !21681
  %11 = load i64, i64* %offset.addr, align 8, !dbg !21682
  %12 = load i32, i32* %whence.addr, align 4, !dbg !21683
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #13, !dbg !21684
  store i64 %call4, i64* %pos, align 8, !dbg !21679
  %13 = load i64, i64* %pos, align 8, !dbg !21685
  %cmp5 = icmp eq i64 %13, -1, !dbg !21687
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21688

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21689
  br label %return, !dbg !21689

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21691
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !21692, !ctir !1818
  %15 = load i32, i32* %_flags, align 8, !dbg !21693, !ctir !27
  %and = and i32 %15, -17, !dbg !21693
  store i32 %and, i32* %_flags, align 8, !dbg !21693, !ctir !27
  %16 = load i64, i64* %pos, align 8, !dbg !21694
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21695
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !21696, !ctir !1818
  store i64 %16, i64* %_offset, align 8, !dbg !21697, !ctir !319
  store i32 0, i32* %retval, align 4, !dbg !21698
  br label %return, !dbg !21698

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21699
  %19 = load i64, i64* %offset.addr, align 8, !dbg !21700
  %20 = load i32, i32* %whence.addr, align 4, !dbg !21701
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !21702
  store i32 %call8, i32* %retval, align 4, !dbg !21703
  br label %return, !dbg !21703

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !21704
  ret i32 %21, !dbg !21704
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind returns_twice }

!llvm.dbg.cu = !{!2, !1073, !1078, !1510, !1084, !1515, !1517, !1522, !1129, !1533, !1536, !1176, !1539, !1541, !1551, !1554, !1557, !1560, !1563, !1565, !1183, !1568, !1232, !1278, !1579, !1583, !1586, !1592, !1605, !1608, !1322, !1370, !1614, !1617, !1619, !1622, !1625, !1424, !1694, !1697, !1700, !1703, !1706, !1709, !1715, !1729, !1732, !1735, !1434, !1737, !1753, !1756, !1758, !1762, !1765, !1768, !1771, !1773, !1815}
!llvm.ident = !{!1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858, !1858}
!llvm.module.flags = !{!1859, !1860, !1861, !1862}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "exit_status", scope: !2, file: !3, line: 800, type: !27, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !161, globals: !836, nameTableKind: None)
!3 = !DIFile(filename: "src/ls.c", directory: "/home/mohamad/clone/coreutils")
!4 = !{!5, !13, !20, !26, !36, !48, !53, !79, !85, !90, !95, !109, !117, !123, !129, !137}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "format", file: !3, line: 419, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12}
!8 = !DIEnumerator(name: "long_format", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "one_per_line", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "many_per_line", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "horizontal", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "with_commas", value: 4, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !3, line: 576, baseType: !6, size: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19}
!15 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "DEREF_COMMAND_LINE_SYMLINK_TO_DIR", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "DEREF_ALWAYS", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_style", file: !3, line: 534, baseType: !6, size: 32, elements: !21)
!21 = !{!22, !23, !24, !25}
!22 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "slash", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "file_type", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "classify", value: 3, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sort_type", file: !3, line: 470, baseType: !27, size: 32, elements: !28)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !{!29, !30, !31, !32, !33, !34, !35}
!29 = !DIEnumerator(name: "sort_none", value: -1)
!30 = !DIEnumerator(name: "sort_name", value: 0)
!31 = !DIEnumerator(name: "sort_extension", value: 1)
!32 = !DIEnumerator(name: "sort_size", value: 2)
!33 = !DIEnumerator(name: "sort_version", value: 3)
!34 = !DIEnumerator(name: "sort_time", value: 4)
!35 = !DIEnumerator(name: "sort_numtypes", value: 5)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "filetype", file: !3, line: 164, baseType: !6, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47}
!38 = !DIEnumerator(name: "unknown", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "fifo", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "chardev", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "directory", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "blockdev", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "normal", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "symbolic_link", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "sock", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "whiteout", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "arg_directory", value: 9, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acl_type", file: !3, line: 192, baseType: !6, size: 32, elements: !49)
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "ACL_T_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "ACL_T_LSM_CONTEXT_ONLY", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "ACL_T_YES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_no", file: !3, line: 585, baseType: !6, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!55 = !DIEnumerator(name: "C_LEFT", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "C_RIGHT", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "C_END", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "C_RESET", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "C_NORM", value: 4, isUnsigned: true)
!60 = !DIEnumerator(name: "C_FILE", value: 5, isUnsigned: true)
!61 = !DIEnumerator(name: "C_DIR", value: 6, isUnsigned: true)
!62 = !DIEnumerator(name: "C_LINK", value: 7, isUnsigned: true)
!63 = !DIEnumerator(name: "C_FIFO", value: 8, isUnsigned: true)
!64 = !DIEnumerator(name: "C_SOCK", value: 9, isUnsigned: true)
!65 = !DIEnumerator(name: "C_BLK", value: 10, isUnsigned: true)
!66 = !DIEnumerator(name: "C_CHR", value: 11, isUnsigned: true)
!67 = !DIEnumerator(name: "C_MISSING", value: 12, isUnsigned: true)
!68 = !DIEnumerator(name: "C_ORPHAN", value: 13, isUnsigned: true)
!69 = !DIEnumerator(name: "C_EXEC", value: 14, isUnsigned: true)
!70 = !DIEnumerator(name: "C_DOOR", value: 15, isUnsigned: true)
!71 = !DIEnumerator(name: "C_SETUID", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "C_SETGID", value: 17, isUnsigned: true)
!73 = !DIEnumerator(name: "C_STICKY", value: 18, isUnsigned: true)
!74 = !DIEnumerator(name: "C_OTHER_WRITABLE", value: 19, isUnsigned: true)
!75 = !DIEnumerator(name: "C_STICKY_OTHER_WRITABLE", value: 20, isUnsigned: true)
!76 = !DIEnumerator(name: "C_CAP", value: 21, isUnsigned: true)
!77 = !DIEnumerator(name: "C_MULTIHARDLINK", value: 22, isUnsigned: true)
!78 = !DIEnumerator(name: "C_CLR_TO_EOL", value: 23, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_type", file: !3, line: 456, baseType: !6, size: 32, elements: !80)
!80 = !{!81, !82, !83, !84}
!81 = !DIEnumerator(name: "time_mtime", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "time_ctime", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "time_atime", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "time_numtypes", value: 3, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 672, baseType: !6, size: 32, elements: !86)
!86 = !{!87, !88, !89}
!87 = !DIEnumerator(name: "IGNORE_DEFAULT", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "IGNORE_DOT_AND_DOTDOT", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "IGNORE_MINIMAL", value: 2, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "when_type", file: !3, line: 569, baseType: !6, size: 32, elements: !91)
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "when_never", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "when_always", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "when_if_tty", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !96, line: 32, baseType: !6, size: 32, elements: !97)
!96 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!98 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !110, line: 26, baseType: !6, size: 32, elements: !111)
!110 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mohamad/clone/coreutils")
!111 = !{!112, !113, !114, !115, !116}
!112 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_style", file: !3, line: 433, baseType: !6, size: 32, elements: !118)
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "full_iso_time_style", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "long_iso_time_style", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "iso_time_style", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "locale_time_style", value: 3, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 19, baseType: !6, size: 32, elements: !125)
!124 = !DIFile(filename: "./lib/mbsalign.h", directory: "/home/mohamad/clone/coreutils")
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "MBS_ALIGN_LEFT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MBS_ALIGN_RIGHT", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "MBS_ALIGN_CENTER", value: 2, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "parse_state", file: !3, line: 2475, baseType: !6, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136}
!131 = !DIEnumerator(name: "PS_START", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "PS_2", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "PS_3", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "PS_4", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "PS_DONE", value: 5, isUnsigned: true)
!136 = !DIEnumerator(name: "PS_FAIL", value: 6, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !138, file: !3, line: 2286, baseType: !6, size: 32, elements: !153)
!138 = distinct !DISubprogram(name: "get_funky_string", scope: !3, file: !3, line: 2281, type: !139, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!139 = !DISubroutineType(types: !140)
!140 = !{!141, !142, !145, !141, !148}
!141 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !150, line: 46, baseType: !151)
!150 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!151 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!152 = !{}
!153 = !{!154, !155, !156, !157, !158, !159, !160}
!154 = !DIEnumerator(name: "ST_GND", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "ST_BACKSLASH", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "ST_OCTAL", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "ST_HEX", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "ST_CARET", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "ST_END", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "ST_ERROR", value: 6, isUnsigned: true)
!161 = !{!162, !167, !168, !149, !170, !148, !143, !151, !175, !146, !27, !177, !178, !181, !182, !233, !142, !240, !243, !246, !141, !164, !217, !249, !253, !254, !258, !259, !262, !270, !273, !276, !279, !284, !330, !334, !337, !340, !344, !346, !349, !352, !355, !358, !361, !364, !367, !370, !373, !376, !379, !382, !385, !388, !391, !394, !397, !400, !403, !406, !409, !412, !415, !418, !421, !424, !427, !430, !433, !436, !439, !442, !445, !446, !267, !269, !448, !451, !500, !503, !144, !504, !513, !517, !604, !458, !605, !610, !147, !613, !616, !619, !622, !632, !635, !638, !641, !643, !644, !646, !648, !650, !651, !653, !654, !655, !657, !660, !661, !663, !664, !327, !667, !670, !671, !674, !675, !676, !678, !681, !341, !682, !685, !688, !691, !693, !695, !696, !698, !704, !707, !710, !713, !717, !727, !728, !194, !196, !725, !731, !734, !737, !740, !751, !752, !754, !755, !758, !200, !226, !211, !202, !204, !198, !180, !759, !770, !773, !774, !782, !784, !786, !787, !790, !793, !795, !796, !797, !804, !805, !808, !809, !812, !815, !818, !828, !829, !830, !833}
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !163, line: 75, baseType: !164)
!163 = !DIFile(filename: "/usr/include/time.h", directory: "")
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !165, line: 139, baseType: !166)
!165 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!166 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !169, line: 135, baseType: !151)
!169 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !171, line: 85, baseType: !172)
!171 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DISubroutineType(types: !174)
!174 = !{null, !27}
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!177 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !179, line: 86, baseType: !180)
!179 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !165, line: 131, baseType: !166)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fileinfo", file: !3, line: 199, size: 1600, elements: !185)
!185 = !{!186, !187, !188, !189, !224, !225, !227, !228, !229, !230, !231, !232}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !184, file: !3, line: 202, baseType: !143, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "linkname", scope: !184, file: !3, line: 205, baseType: !143, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_name", scope: !184, file: !3, line: 208, baseType: !143, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !184, file: !3, line: 210, baseType: !190, size: 1152, offset: 192)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !192)
!191 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!192 = !{!193, !195, !197, !199, !201, !203, !205, !206, !207, !208, !210, !212, !218, !219, !220}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !190, file: !191, line: 48, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !165, line: 124, baseType: !151)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !190, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !165, line: 127, baseType: !151)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !190, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !165, line: 130, baseType: !151)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !190, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !165, line: 129, baseType: !6)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !190, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !165, line: 125, baseType: !6)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !190, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !165, line: 126, baseType: !6)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !190, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !190, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !190, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !190, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !165, line: 153, baseType: !166)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !190, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !165, line: 158, baseType: !166)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !190, file: !191, line: 91, baseType: !213, size: 128, offset: 576)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !213, file: !163, line: 122, baseType: !164, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !213, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !165, line: 175, baseType: !166)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !190, file: !191, line: 92, baseType: !213, size: 128, offset: 704)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !190, file: !191, line: 93, baseType: !213, size: 128, offset: 832)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !190, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 192, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 3)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "filetype", scope: !184, file: !3, line: 212, baseType: !36, size: 32, offset: 1344)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "linkmode", scope: !184, file: !3, line: 216, baseType: !226, size: 32, offset: 1376)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !179, line: 70, baseType: !200)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "scontext", scope: !184, file: !3, line: 219, baseType: !143, size: 64, offset: 1408)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stat_ok", scope: !184, file: !3, line: 221, baseType: !141, size: 8, offset: 1472)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "linkok", scope: !184, file: !3, line: 225, baseType: !141, size: 8, offset: 1480)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "acl_type", scope: !184, file: !3, line: 229, baseType: !48, size: 32, offset: 1504)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "has_capability", scope: !184, file: !3, line: 232, baseType: !141, size: 8, offset: 1536)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quoted", scope: !184, file: !3, line: 235, baseType: !27, size: 32, offset: 1568)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pending", file: !3, line: 367, size: 256, elements: !235)
!235 = !{!236, !237, !238, !239}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !234, file: !3, line: 369, baseType: !143, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "realname", scope: !234, file: !3, line: 373, baseType: !143, size: 64, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "command_line_arg", scope: !234, file: !3, line: 374, baseType: !141, size: 8, offset: 128)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !234, file: !3, line: 375, baseType: !233, size: 64, offset: 192)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8, elements: !241)
!241 = !{!242}
!242 = !DISubrange(count: 1)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 80, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 10)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 192, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 24)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !251, line: 69, baseType: !252)
!251 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!252 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !251, line: 67, flags: DIFlagFwdDecl)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24, elements: !222)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !255, line: 764, baseType: !256)
!255 = !DIFile(filename: "./lib/time.h", directory: "/home/mohamad/clone/coreutils")
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !255, line: 764, flags: DIFlagFwdDecl)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 16, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 2)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !264, line: 7, size: 128, elements: !265)
!264 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mohamad/clone/coreutils")
!265 = !{!266, !268}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !263, file: !264, line: 9, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !179, line: 48, baseType: !196)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !263, file: !264, line: 10, baseType: !269, size: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !179, line: 60, baseType: !194)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 48, elements: !271)
!271 = !{!272}
!272 = !DISubrange(count: 6)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 72, elements: !274)
!274 = !{!275}
!275 = !DISubrange(count: 9)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 184, elements: !277)
!277 = !{!278}
!278 = !DISubrange(count: 23)
!279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 3072, elements: !247)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_str", file: !3, line: 244, size: 128, elements: !281)
!281 = !{!282, !283}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !280, file: !3, line: 246, baseType: !149, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !280, file: !3, line: 247, baseType: !146, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !287)
!286 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!287 = !{!288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !307, !308, !309, !310, !311, !312, !314, !315, !318, !320, !321, !322, !323, !324, !325, !326}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !285, file: !286, line: 242, baseType: !27, size: 32)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !285, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !285, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !285, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !285, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !285, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !285, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !285, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !285, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !285, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !285, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !285, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !285, file: !286, line: 260, baseType: !301, size: 64, offset: 768)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !303)
!303 = !{!304, !305, !306}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !302, file: !286, line: 157, baseType: !301, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !302, file: !286, line: 158, baseType: !284, size: 64, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !302, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !285, file: !286, line: 262, baseType: !284, size: 64, offset: 832)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !285, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !285, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !285, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !285, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !285, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!313 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !285, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !285, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !286, line: 150, baseType: null)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !285, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !165, line: 132, baseType: !166)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !285, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !285, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !285, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !285, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !285, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !285, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !285, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 160, elements: !328)
!328 = !{!329}
!329 = !DISubrange(count: 20)
!330 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !171, line: 40, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !333, line: 22, baseType: !27)
!333 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigset.h", directory: "")
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 104, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 13)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 304, elements: !338)
!338 = !{!339}
!339 = !DISubrange(count: 38)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !342)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!342 = !{!343}
!343 = !DISubrange(count: -1)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !96, line: 270, flags: DIFlagFwdDecl)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 328, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 41)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 312, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 39)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 264, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 33)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1152, elements: !356)
!356 = !{!357}
!357 = !DISubrange(count: 144)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2168, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 271)
!361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1248, elements: !362)
!362 = !{!363}
!363 = !DISubrange(count: 156)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2896, elements: !365)
!365 = !{!366}
!366 = !DISubrange(count: 362)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2936, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 367)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 3352, elements: !371)
!371 = !{!372}
!372 = !DISubrange(count: 419)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 488, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: 61)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1960, elements: !377)
!377 = !{!378}
!378 = !DISubrange(count: 245)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 584, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 73)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1200, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 150)
!385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 3376, elements: !386)
!386 = !{!387}
!387 = !DISubrange(count: 422)
!388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1160, elements: !389)
!389 = !{!390}
!390 = !DISubrange(count: 145)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2832, elements: !392)
!392 = !{!393}
!393 = !DISubrange(count: 354)
!394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1184, elements: !395)
!395 = !{!396}
!396 = !DISubrange(count: 148)
!397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2872, elements: !398)
!398 = !{!399}
!399 = !DISubrange(count: 359)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2424, elements: !401)
!401 = !{!402}
!402 = !DISubrange(count: 303)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 4680, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 585)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1576, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 197)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 4152, elements: !410)
!410 = !{!411}
!411 = !DISubrange(count: 519)
!412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 632, elements: !413)
!413 = !{!414}
!414 = !DISubrange(count: 79)
!415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1136, elements: !416)
!416 = !{!417}
!417 = !DISubrange(count: 142)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2976, elements: !419)
!419 = !{!420}
!420 = !DISubrange(count: 372)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2904, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 363)
!424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 360, elements: !425)
!425 = !{!426}
!426 = !DISubrange(count: 45)
!427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 432, elements: !428)
!428 = !{!429}
!429 = !DISubrange(count: 54)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 3008, elements: !431)
!431 = !{!432}
!432 = !DISubrange(count: 376)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2288, elements: !434)
!434 = !{!435}
!435 = !DISubrange(count: 286)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1216, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 152)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 32, elements: !440)
!440 = !{!441}
!441 = !DISubrange(count: 4)
!442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 40, elements: !443)
!443 = !{!444}
!444 = !DISubrange(count: 5)
!445 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !27)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2048, elements: !449)
!449 = !{!450}
!450 = !DISubrange(count: 256)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !454, line: 174, size: 704, elements: !455)
!454 = !DIFile(filename: "./lib/obstack.h", directory: "/home/mohamad/clone/coreutils")
!455 = !{!456, !457, !465, !466, !467, !468, !473, !474, !485, !496, !497, !498, !499}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !453, file: !454, line: 176, baseType: !149, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !453, file: !454, line: 177, baseType: !458, size: 64, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !454, line: 167, size: 128, elements: !460)
!460 = !{!461, !462, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !459, file: !454, line: 169, baseType: !143, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !459, file: !454, line: 170, baseType: !458, size: 64, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !459, file: !454, line: 171, baseType: !464, offset: 128)
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, elements: !342)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !453, file: !454, line: 178, baseType: !143, size: 64, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !453, file: !454, line: 179, baseType: !143, size: 64, offset: 192)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !453, file: !454, line: 180, baseType: !143, size: 64, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !453, file: !454, line: 185, baseType: !469, size: 64, offset: 320)
!469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !453, file: !454, line: 181, size: 64, elements: !470)
!470 = !{!471, !472}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !469, file: !454, line: 183, baseType: !149, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !469, file: !454, line: 184, baseType: !167, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !453, file: !454, line: 186, baseType: !149, size: 64, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !453, file: !454, line: 193, baseType: !475, size: 64, offset: 448)
!475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !453, file: !454, line: 189, size: 64, elements: !476)
!476 = !{!477, !481}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !475, file: !454, line: 191, baseType: !478, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!167, !149}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !475, file: !454, line: 192, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!167, !167, !149}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !453, file: !454, line: 198, baseType: !486, size: 64, offset: 512)
!486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !453, file: !454, line: 194, size: 64, elements: !487)
!487 = !{!488, !492}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !486, file: !454, line: 196, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{null, !167}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !486, file: !454, line: 197, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{null, !167, !167}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !453, file: !454, line: 200, baseType: !167, size: 64, offset: 576)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !453, file: !454, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !453, file: !454, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !453, file: !454, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 440, elements: !501)
!501 = !{!502}
!502 = !DISubrange(count: 55)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 264, elements: !353)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !505, line: 37, baseType: !506)
!505 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !333, line: 30, baseType: !507)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 27, size: 1024, elements: !508)
!508 = !{!509}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !507, file: !333, line: 29, baseType: !510, size: 1024)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 1024, elements: !511)
!511 = !{!512}
!512 = !DISubrange(count: 16)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 384, elements: !515)
!514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!515 = !{!516}
!516 = !DISubrange(count: 12)
!517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !519, file: !518, line: 28, size: 64, elements: !528)
!518 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !518, line: 24, size: 1216, elements: !520)
!520 = !{!521, !522, !523, !524}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !519, file: !518, line: 35, baseType: !517, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !519, file: !518, line: 43, baseType: !506, size: 1024, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !519, file: !518, line: 46, baseType: !27, size: 32, offset: 1088)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !519, file: !518, line: 49, baseType: !525, size: 64, offset: 1152)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DISubroutineType(types: !527)
!527 = !{null}
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !517, file: !518, line: 31, baseType: !170, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !517, file: !518, line: 33, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{null, !27, !534, !167}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !536, line: 133, baseType: !537)
!536 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/siginfo.h", directory: "")
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 62, size: 1024, elements: !538)
!538 = !{!539, !540, !541, !542}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !537, file: !536, line: 64, baseType: !27, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !537, file: !536, line: 65, baseType: !27, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !537, file: !536, line: 67, baseType: !27, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !537, file: !536, line: 132, baseType: !543, size: 896, offset: 128)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !536, line: 69, size: 896, elements: !544)
!544 = !{!545, !549, !555, !566, !572, !582, !593, !598}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !543, file: !536, line: 71, baseType: !546, size: 896)
!546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 896, elements: !547)
!547 = !{!548}
!548 = !DISubrange(count: 28)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !543, file: !536, line: 78, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 74, size: 64, elements: !551)
!551 = !{!552, !554}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !550, file: !536, line: 76, baseType: !553, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !165, line: 133, baseType: !27)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !550, file: !536, line: 77, baseType: !202, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !543, file: !536, line: 86, baseType: !556, size: 128)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 81, size: 128, elements: !557)
!557 = !{!558, !559, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !556, file: !536, line: 83, baseType: !27, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !556, file: !536, line: 84, baseType: !27, size: 32, offset: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !556, file: !536, line: 85, baseType: !561, size: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !536, line: 36, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !536, line: 32, size: 64, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !562, file: !536, line: 34, baseType: !27, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !562, file: !536, line: 35, baseType: !167, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !543, file: !536, line: 94, baseType: !567, size: 128)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 89, size: 128, elements: !568)
!568 = !{!569, !570, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !567, file: !536, line: 91, baseType: !553, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !567, file: !536, line: 92, baseType: !202, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !567, file: !536, line: 93, baseType: !561, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !543, file: !536, line: 104, baseType: !573, size: 256)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 97, size: 256, elements: !574)
!574 = !{!575, !576, !577, !578, !581}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !573, file: !536, line: 99, baseType: !553, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !573, file: !536, line: 100, baseType: !202, size: 32, offset: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !573, file: !536, line: 101, baseType: !27, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !573, file: !536, line: 102, baseType: !579, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigchld_clock_t", file: !536, line: 58, baseType: !580)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !165, line: 135, baseType: !166)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !573, file: !536, line: 103, baseType: !579, size: 64, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !543, file: !536, line: 116, baseType: !583, size: 256)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 107, size: 256, elements: !584)
!584 = !{!585, !586, !588}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !583, file: !536, line: 109, baseType: !167, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !583, file: !536, line: 110, baseType: !587, size: 16, offset: 64)
!587 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_bnd", scope: !583, file: !536, line: 115, baseType: !589, size: 128, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !583, file: !536, line: 111, size: 128, elements: !590)
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !589, file: !536, line: 113, baseType: !167, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !589, file: !536, line: 114, baseType: !167, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !543, file: !536, line: 123, baseType: !594, size: 128)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 119, size: 128, elements: !595)
!595 = !{!596, !597}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !594, file: !536, line: 121, baseType: !166, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !594, file: !536, line: 122, baseType: !27, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !543, file: !536, line: 131, baseType: !599, size: 128)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !543, file: !536, line: 126, size: 128, elements: !600)
!600 = !{!601, !602, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !599, file: !536, line: 128, baseType: !167, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !599, file: !536, line: 129, baseType: !27, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !599, file: !536, line: 130, baseType: !6, size: 32, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ignore_pattern", file: !3, line: 690, size: 128, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !606, file: !3, line: 692, baseType: !146, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !606, file: !3, line: 693, baseType: !605, size: 64, offset: 64)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !611)
!611 = !{!612}
!612 = !DISubrange(count: 8)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 472, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 59)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 496, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 62)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 352, elements: !620)
!620 = !{!621}
!621 = !DISubrange(count: 44)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 11264, elements: !620)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !625, line: 104, size: 256, elements: !626)
!625 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!626 = !{!627, !628, !629, !631}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !624, file: !625, line: 106, baseType: !146, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !624, file: !625, line: 109, baseType: !27, size: 32, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !624, file: !625, line: 110, baseType: !630, size: 64, offset: 128)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !624, file: !625, line: 111, baseType: !27, size: 32, offset: 192)
!632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 56, elements: !633)
!633 = !{!634}
!634 = !DISubrange(count: 7)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 152, elements: !636)
!636 = !{!637}
!637 = !DISubrange(count: 19)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 136, elements: !639)
!639 = !{!640}
!640 = !DISubrange(count: 17)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 160, elements: !443)
!642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 384, elements: !271)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !645, line: 61, baseType: !525)
!645 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 160, elements: !443)
!647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 224, elements: !633)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 512, elements: !611)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 288, elements: !274)
!652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !90)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 640, elements: !244)
!654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 96, elements: !515)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !656, size: 128, elements: !440)
!656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 144, elements: !658)
!658 = !{!659}
!659 = !DISubrange(count: 18)
!660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 320, elements: !443)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, elements: !342)
!662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 128, elements: !511)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 112, elements: !665)
!665 = !{!666}
!666 = !DISubrange(count: 14)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 88, elements: !668)
!668 = !{!669}
!669 = !DISubrange(count: 11)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 56, elements: !633)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 232, elements: !672)
!672 = !{!673}
!673 = !DISubrange(count: 29)
!674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 128, elements: !260)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !150, line: 35, baseType: !166)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 128, elements: !440)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 176, elements: !679)
!679 = !{!680}
!680 = !DISubrange(count: 22)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 120, elements: !683)
!683 = !{!684}
!684 = !DISubrange(count: 15)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 520, elements: !686)
!686 = !{!687}
!687 = !DISubrange(count: 65)
!688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 12288, elements: !689)
!689 = !{!516, !690}
!690 = !DISubrange(count: 128)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24576, elements: !692)
!692 = !{!261, !516, !690}
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1024, elements: !694)
!694 = !{!690}
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbs_align_t", file: !124, line: 19, baseType: !123)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "color_ext_type", file: !3, line: 601, size: 320, elements: !700)
!700 = !{!701, !702, !703}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !699, file: !3, line: 603, baseType: !280, size: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !699, file: !3, line: 604, baseType: !280, size: 128, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !699, file: !3, line: 605, baseType: !698, size: 64, offset: 256)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 1600, elements: !705)
!705 = !{!706}
!706 = !DISubrange(count: 25)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 416, elements: !708)
!708 = !{!709}
!709 = !DISubrange(count: 52)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 34432, elements: !711)
!711 = !{!712}
!712 = !DISubrange(count: 4304)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !715, line: 127, baseType: !716)
!715 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !715, line: 127, flags: DIFlagFwdDecl)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !719, line: 22, size: 2240, elements: !720)
!719 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!720 = !{!721, !722, !723, !724, !726}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !718, file: !719, line: 25, baseType: !196, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !718, file: !719, line: 26, baseType: !180, size: 64, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !718, file: !719, line: 31, baseType: !177, size: 16, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !718, file: !719, line: 32, baseType: !725, size: 8, offset: 144)
!725 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !718, file: !719, line: 33, baseType: !448, size: 2048, offset: 152)
!727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 200, elements: !705)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 320, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 40)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 168, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 21)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 5216, elements: !735)
!735 = !{!736}
!736 = !DISubrange(count: 652)
!737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 65536, elements: !738)
!738 = !{!739}
!739 = !DISubrange(count: 8192)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !741, line: 106, baseType: !742)
!741 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !741, line: 94, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 82, size: 64, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !743, file: !741, line: 84, baseType: !27, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !743, file: !741, line: 93, baseType: !747, size: 32, offset: 32)
!747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !743, file: !741, line: 85, size: 32, elements: !748)
!748 = !{!749, !750}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !747, file: !741, line: 88, baseType: !6, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !747, file: !741, line: 92, baseType: !439, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !150, line: 74, baseType: !27)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !606)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 408, elements: !756)
!756 = !{!757}
!757 = !DISubrange(count: 51)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 632, elements: !413)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !760, line: 48, baseType: !761)
!760 = !DIFile(filename: "/usr/include/setjmp.h", directory: "")
!761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 1600, elements: !241)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !760, line: 34, size: 1600, elements: !763)
!763 = !{!764, !768, !769}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !762, file: !760, line: 40, baseType: !765, size: 512)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !766, line: 31, baseType: !767)
!766 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/setjmp.h", directory: "")
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 512, elements: !611)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !762, file: !760, line: 41, baseType: !27, size: 32, offset: 512)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !762, file: !760, line: 42, baseType: !506, size: 1024, offset: 576)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 208, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 26)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 176, elements: !679)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 3584, elements: !781)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsortFunc", file: !3, line: 3585, baseType: !777)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!27, !780, !780}
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "V", file: !3, line: 3584, baseType: !175)
!781 = !{!634, !261, !261, !261}
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 512, elements: !783)
!783 = !{!261, !261, !261}
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 256, elements: !785)
!785 = !{!261, !261}
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 128, elements: !260)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 288, elements: !788)
!788 = !{!789}
!789 = !DISubrange(count: 36)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 480, elements: !791)
!791 = !{!792}
!792 = !DISubrange(count: 60)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 320, elements: !244)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "column_info", file: !3, line: 937, size: 192, elements: !800)
!800 = !{!801, !802, !803}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "valid_len", scope: !799, file: !3, line: 939, baseType: !141, size: 8)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "line_len", scope: !799, file: !3, line: 940, baseType: !149, size: 64, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "col_arr", scope: !799, file: !3, line: 941, baseType: !148, size: 64, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 29144, elements: !806)
!806 = !{!807}
!807 = !DISubrange(count: 3643)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 88, elements: !668)
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8008, elements: !810)
!810 = !{!811}
!811 = !DISubrange(count: 1001)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 600, elements: !813)
!813 = !{!814}
!814 = !DISubrange(count: 75)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1696, elements: !816)
!816 = !{!817}
!817 = !DISubrange(count: 212)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !819, size: 896, elements: !633)
!819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !820)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !822, file: !821, line: 633, size: 128, elements: !825)
!821 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!822 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !821, file: !821, line: 631, type: !823, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!823 = !DISubroutineType(types: !824)
!824 = !{null, !146}
!825 = !{!826, !827}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !820, file: !821, line: 633, baseType: !146, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !820, file: !821, line: 633, baseType: !146, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 184, elements: !277)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 568, elements: !831)
!831 = !{!832}
!832 = !DISubrange(count: 71)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 216, elements: !834)
!834 = !{!835}
!835 = !DISubrange(count: 27)
!836 = !{!837, !839, !841, !843, !845, !847, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !0, !893, !895, !897, !899, !901, !903, !905, !907, !912, !914, !919, !921, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941, !943, !945, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977, !979, !981, !983, !985, !987, !989, !991, !994, !996, !998, !1000, !1005, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1038, !1043, !1048, !1050, !1052, !1054, !1059, !1062, !1064, !1066}
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "active_dir_set", scope: !2, file: !3, line: 319, type: !249, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "cwd_file", scope: !2, file: !3, line: 330, type: !258, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "cwd_n_alloc", scope: !2, file: !3, line: 333, type: !149, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "cwd_n_used", scope: !2, file: !3, line: 336, type: !149, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "color_symlink_as_referent", scope: !2, file: !3, line: 355, type: !141, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "hostname", scope: !2, file: !3, line: 357, type: !146, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "pending_dirs", scope: !2, file: !3, line: 378, type: !233, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "current_time", scope: !2, file: !3, line: 383, type: !213, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "print_scontext", scope: !2, file: !3, line: 385, type: !141, isLocal: true, isDefinition: true)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "format", scope: !2, file: !3, line: 428, type: !5, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "sort_type", scope: !2, file: !3, line: 481, type: !26, isLocal: true, isDefinition: true)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "print_block_size", scope: !2, file: !3, line: 510, type: !141, isLocal: true, isDefinition: true)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "dired", scope: !2, file: !3, line: 525, type: !141, isLocal: true, isDefinition: true)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "indicator_style", scope: !2, file: !3, line: 542, type: !20, isLocal: true, isDefinition: true)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "print_with_color", scope: !2, file: !3, line: 559, type: !141, isLocal: true, isDefinition: true)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "print_hyperlink", scope: !2, file: !3, line: 561, type: !141, isLocal: true, isDefinition: true)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "check_symlink_mode", scope: !2, file: !3, line: 645, type: !141, isLocal: true, isDefinition: true)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "dereference", scope: !2, file: !3, line: 654, type: !13, isLocal: true, isDefinition: true)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "recursive", scope: !2, file: !3, line: 659, type: !141, isLocal: true, isDefinition: true)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "immediate_dirs", scope: !2, file: !3, line: 664, type: !141, isLocal: true, isDefinition: true)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "directories_first", scope: !2, file: !3, line: 668, type: !141, isLocal: true, isDefinition: true)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "filename_quoting_options", scope: !2, file: !3, line: 715, type: !344, isLocal: true, isDefinition: true)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "print_dir_name", scope: !2, file: !3, line: 724, type: !141, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "localtz", scope: !2, file: !3, line: 733, type: !254, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "format_needs_stat", scope: !2, file: !3, line: 738, type: !141, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "format_needs_type", scope: !2, file: !3, line: 743, type: !141, isLocal: true, isDefinition: true)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "interrupt_signal", scope: !2, file: !3, line: 792, type: !330, isLocal: true, isDefinition: true)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "stop_signal_count", scope: !2, file: !3, line: 796, type: !330, isLocal: true, isDefinition: true)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "dired_pos", scope: !2, file: !3, line: 960, type: !149, isLocal: true, isDefinition: true)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "dired_obstack", scope: !2, file: !3, line: 981, type: !453, isLocal: true, isDefinition: true)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "subdired_obstack", scope: !2, file: !3, line: 988, type: !453, isLocal: true, isDefinition: true)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "dev_ino_obstack", scope: !2, file: !3, line: 1002, type: !453, isLocal: true, isDefinition: true)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "RFC3986", scope: !2, file: !3, line: 1083, type: !448, isLocal: true, isDefinition: true)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "used_color", scope: !2, file: !3, line: 567, type: !141, isLocal: true, isDefinition: true)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "color_indicator", scope: !2, file: !3, line: 608, type: !279, isLocal: true, isDefinition: true)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "sig", scope: !909, file: !3, line: 1358, type: !513, isLocal: true, isDefinition: true)
!909 = distinct !DISubprogram(name: "signal_setup", scope: !3, file: !3, line: 1355, type: !910, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !141}
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "caught_signals", scope: !2, file: !3, line: 788, type: !504, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "posix_prefix", scope: !916, file: !3, line: 2181, type: !670, isLocal: true, isDefinition: true)
!916 = distinct !DISubprogram(name: "decode_switches", scope: !3, file: !3, line: 1688, type: !917, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!917 = !DISubroutineType(types: !918)
!918 = !{!27, !27, !142}
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "qmark_funny_chars", scope: !2, file: !3, line: 711, type: !141, isLocal: true, isDefinition: true)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "time_type", scope: !2, file: !3, line: 464, type: !79, isLocal: true, isDefinition: true)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "sort_reverse", scope: !2, file: !3, line: 489, type: !141, isLocal: true, isDefinition: true)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "numeric_ids", scope: !2, file: !3, line: 506, type: !141, isLocal: true, isDefinition: true)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "print_inode", scope: !2, file: !3, line: 649, type: !141, isLocal: true, isDefinition: true)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "ignore_mode", scope: !2, file: !3, line: 683, type: !85, isLocal: true, isDefinition: true)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "ignore_patterns", scope: !2, file: !3, line: 696, type: !605, isLocal: true, isDefinition: true)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "hide_patterns", scope: !2, file: !3, line: 700, type: !605, isLocal: true, isDefinition: true)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "line_length", scope: !2, file: !3, line: 729, type: !149, isLocal: true, isDefinition: true)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "tabsize", scope: !2, file: !3, line: 720, type: !149, isLocal: true, isDefinition: true)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 839, type: !622, isLocal: true, isDefinition: true)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "print_owner", scope: !2, file: !3, line: 493, type: !141, isLocal: true, isDefinition: true)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "human_output_opts", scope: !2, file: !3, line: 513, type: !27, isLocal: true, isDefinition: true)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "file_human_output_opts", scope: !2, file: !3, line: 519, type: !27, isLocal: true, isDefinition: true)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "output_block_size", scope: !2, file: !3, line: 516, type: !168, isLocal: true, isDefinition: true)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "file_output_block_size", scope: !2, file: !3, line: 520, type: !168, isLocal: true, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "print_group", scope: !2, file: !3, line: 501, type: !141, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "print_author", scope: !2, file: !3, line: 497, type: !141, isLocal: true, isDefinition: true)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "sort_types", scope: !2, file: !3, line: 905, type: !641, isLocal: true, isDefinition: true)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "sort_args", scope: !2, file: !3, line: 901, type: !643, isLocal: true, isDefinition: true)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "time_types", scope: !2, file: !3, line: 915, type: !646, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "time_args", scope: !2, file: !3, line: 911, type: !643, isLocal: true, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "format_types", scope: !2, file: !3, line: 894, type: !648, isLocal: true, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "format_args", scope: !2, file: !3, line: 889, type: !650, isLocal: true, isDefinition: true)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "when_types", scope: !2, file: !3, line: 928, type: !651, isLocal: true, isDefinition: true)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "when_args", scope: !2, file: !3, line: 921, type: !653, isLocal: true, isDefinition: true)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "indicator_style_types", scope: !2, file: !3, line: 549, type: !655, isLocal: true, isDefinition: true)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "indicator_style_args", scope: !2, file: !3, line: 545, type: !660, isLocal: true, isDefinition: true)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "max_idx", scope: !2, file: !3, line: 948, type: !149, isLocal: true, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "align_variable_outer_quotes", scope: !2, file: !3, line: 343, type: !141, isLocal: true, isDefinition: true)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "dirname_quoting_options", scope: !2, file: !3, line: 716, type: !344, isLocal: true, isDefinition: true)
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "long_time_format", scope: !2, file: !3, line: 756, type: !674, isLocal: true, isDefinition: true)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "time_style_args", scope: !2, file: !3, line: 441, type: !660, isLocal: true, isDefinition: true)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "time_style_types", scope: !2, file: !3, line: 445, type: !676, isLocal: true, isDefinition: true)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "abformat", scope: !2, file: !3, line: 1107, type: !691, isLocal: true, isDefinition: true)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "use_abformat", scope: !2, file: !3, line: 1111, type: !141, isLocal: true, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(name: "G_line", scope: !2, file: !993, line: 1, type: !710, isLocal: true, isDefinition: true)
!993 = !DIFile(filename: "src/dircolors.h", directory: "/home/mohamad/clone/coreutils")
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "color_buf", scope: !2, file: !3, line: 640, type: !143, isLocal: true, isDefinition: true)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "color_ext_list", scope: !2, file: !3, line: 637, type: !698, isLocal: true, isDefinition: true)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "indicator_name", scope: !2, file: !3, line: 594, type: !704, isLocal: true, isDefinition: true)
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "first", scope: !1002, file: !3, line: 2725, type: !141, isLocal: true, isDefinition: true)
!1002 = distinct !DISubprogram(name: "print_dir", scope: !3, file: !3, line: 2720, type: !1003, scopeLine: 2721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !146, !146, !141}
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "cwd_some_quoted", scope: !2, file: !3, line: 339, type: !141, isLocal: true, isDefinition: true)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "sorted_file", scope: !2, file: !3, line: 347, type: !754, isLocal: true, isDefinition: true)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "UNKNOWN_SECURITY_CONTEXT", scope: !2, file: !3, line: 386, type: !259, isLocal: true, isDefinition: true)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "any_has_acl", scope: !2, file: !3, line: 391, type: !141, isLocal: true, isDefinition: true)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "inode_number_width", scope: !2, file: !3, line: 397, type: !27, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "block_size_width", scope: !2, file: !3, line: 398, type: !27, isLocal: true, isDefinition: true)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "nlink_width", scope: !2, file: !3, line: 399, type: !27, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "owner_width", scope: !2, file: !3, line: 401, type: !27, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "group_width", scope: !2, file: !3, line: 402, type: !27, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "author_width", scope: !2, file: !3, line: 403, type: !27, isLocal: true, isDefinition: true)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "scontext_width", scope: !2, file: !3, line: 400, type: !27, isLocal: true, isDefinition: true)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "major_device_number_width", scope: !2, file: !3, line: 404, type: !27, isLocal: true, isDefinition: true)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "minor_device_number_width", scope: !2, file: !3, line: 405, type: !27, isLocal: true, isDefinition: true)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "file_size_width", scope: !2, file: !3, line: 406, type: !27, isLocal: true, isDefinition: true)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1035, file: !3, line: 3084, type: !269, isLocal: true, isDefinition: true)
!1035 = distinct !DISubprogram(name: "has_capability_cache", scope: !3, file: !3, line: 3080, type: !1036, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!141, !146, !258}
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1040, file: !3, line: 3029, type: !269, isLocal: true, isDefinition: true)
!1040 = distinct !DISubprogram(name: "getfilecon_cache", scope: !3, file: !3, line: 3025, type: !1041, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!27, !146, !258, !141}
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1045, file: !3, line: 3059, type: !269, isLocal: true, isDefinition: true)
!1045 = distinct !DISubprogram(name: "file_has_acl_cache", scope: !3, file: !3, line: 3055, type: !1046, scopeLine: 3056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!27, !146, !258}
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "sorted_file_alloc", scope: !2, file: !3, line: 348, type: !149, isLocal: true, isDefinition: true)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "failed_strcoll", scope: !2, file: !3, line: 3564, type: !759, isLocal: true, isDefinition: true)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "sort_functions", scope: !2, file: !3, line: 3741, type: !774, isLocal: true, isDefinition: true)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "filetype_indicator", scope: !1056, file: !3, line: 4710, type: !795, isLocal: true, isDefinition: true)
!1056 = distinct !DISubprogram(name: "get_color_indicator", scope: !3, file: !3, line: 4682, type: !1057, scopeLine: 4683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!793, !182, !141}
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "column_info_alloc", scope: !1061, file: !3, line: 5015, type: !149, isLocal: true, isDefinition: true)
!1061 = distinct !DISubprogram(name: "init_column_info", scope: !3, file: !3, line: 5009, type: !526, scopeLine: 5010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "column_info", scope: !2, file: !3, line: 945, type: !804, isLocal: true, isDefinition: true)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "filetype_letter", scope: !2, file: !3, line: 180, type: !808, isLocal: true, isDefinition: true)
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "width", scope: !1068, file: !3, line: 3895, type: !27, isLocal: true, isDefinition: true)
!1068 = distinct !DISubprogram(name: "long_time_expected_width", scope: !3, file: !3, line: 3893, type: !1069, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!27}
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "ls_mode", scope: !1073, file: !1074, line: 2, type: !27, isLocal: false, isDefinition: true)
!1073 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1074, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1070, globals: !1075, nameTableKind: None)
!1074 = !DIFile(filename: "src/ls-ls.c", directory: "/home/mohamad/clone/coreutils")
!1075 = !{!1071}
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "Version", scope: !1078, file: !1079, line: 2, type: !146, isLocal: false, isDefinition: true)
!1078 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1079, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1080, globals: !1081, nameTableKind: None)
!1079 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!1080 = !{!146}
!1081 = !{!1076}
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1084, file: !1126, line: 67, type: !644, isLocal: false, isDefinition: true)
!1084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1085, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1086, globals: !1125, nameTableKind: None)
!1085 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1086 = !{!167, !146, !644, !149, !675, !141, !681, !147, !833, !671, !731, !1087, !610, !442}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1088, file: !286, line: 242, baseType: !27, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1088, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1088, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1088, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1088, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1088, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1088, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1088, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1088, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1088, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1088, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1088, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1088, file: !286, line: 260, baseType: !1103, size: 64, offset: 768)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1105)
!1105 = !{!1106, !1107, !1108}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1104, file: !286, line: 157, baseType: !1103, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1104, file: !286, line: 158, baseType: !1087, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1104, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1088, file: !286, line: 262, baseType: !1087, size: 64, offset: 832)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1088, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1088, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1088, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1088, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1088, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1088, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1088, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1088, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1088, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1088, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1088, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1088, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1088, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1088, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1088, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1125 = !{!1082}
!1126 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "file_name", scope: !1129, file: !1173, line: 46, type: !146, isLocal: true, isDefinition: true)
!1129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1130, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1131, globals: !1170, nameTableKind: None)
!1130 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!1131 = !{!146, !141, !1132, !27, !654, !632, !253, !445}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1133, file: !286, line: 242, baseType: !27, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1133, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1133, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1133, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1133, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1133, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1133, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1133, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1133, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1133, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1133, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1133, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1133, file: !286, line: 260, baseType: !1148, size: 64, offset: 768)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1150)
!1150 = !{!1151, !1152, !1153}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1149, file: !286, line: 157, baseType: !1148, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1149, file: !286, line: 158, baseType: !1132, size: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1149, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1133, file: !286, line: 262, baseType: !1132, size: 64, offset: 832)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1133, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1133, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1133, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1133, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1133, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1133, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1133, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1133, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1133, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1133, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1133, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1133, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1133, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1133, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1133, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1170 = !{!1127, !1171}
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !1129, file: !1173, line: 56, type: !141, isLocal: true, isDefinition: true)
!1173 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "exit_failure", scope: !1176, file: !1180, line: 24, type: !445, isLocal: false, isDefinition: true)
!1176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1177, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1178, globals: !1179, nameTableKind: None)
!1177 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!1178 = !{!445}
!1179 = !{!1174}
!1180 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "default_tuning", scope: !1183, file: !1189, line: 130, type: !1205, isLocal: true, isDefinition: true)
!1183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1184, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1185, globals: !1229, nameTableKind: None)
!1184 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!1185 = !{!151, !167, !149, !1186, !1198, !1192, !246, !352, !1221, !754, !725, !147, !1205, !1228, !1187, !1204, !1216, !1226, !175, !1210, !141, !27}
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !251, line: 69, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1189, line: 52, size: 640, elements: !1190)
!1189 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!1190 = !{!1191, !1197, !1200, !1201, !1202, !1203, !1215, !1220, !1225, !1227}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !1188, file: !1189, line: 57, baseType: !1192, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !1189, line: 46, size: 128, elements: !1194)
!1194 = !{!1195, !1196}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1193, file: !1189, line: 48, baseType: !167, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1193, file: !1189, line: 49, baseType: !1192, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !1188, file: !1189, line: 58, baseType: !1198, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !1188, file: !1189, line: 59, baseType: !149, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !1188, file: !1189, line: 60, baseType: !149, size: 64, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !1188, file: !1189, line: 61, baseType: !149, size: 64, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !1188, file: !1189, line: 64, baseType: !1204, size: 64, offset: 320)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !251, line: 65, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !251, line: 53, size: 160, elements: !1208)
!1208 = !{!1209, !1211, !1212, !1213, !1214}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !1207, file: !251, line: 58, baseType: !1210, size: 32)
!1210 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !1207, file: !251, line: 59, baseType: !1210, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !1207, file: !251, line: 60, baseType: !1210, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !1207, file: !251, line: 61, baseType: !1210, size: 32, offset: 96)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !1207, file: !251, line: 62, baseType: !141, size: 8, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !1188, file: !1189, line: 71, baseType: !1216, size: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !251, line: 48, baseType: !1217)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!149, !175, !149}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !1188, file: !1189, line: 72, baseType: !1221, size: 64, offset: 448)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !251, line: 49, baseType: !1222)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!141, !175, !175}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !1188, file: !1189, line: 73, baseType: !1226, size: 64, offset: 512)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !251, line: 50, baseType: !489)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !1188, file: !1189, line: 76, baseType: !1192, size: 64, offset: 576)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1229 = !{!1181}
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "power_letter", scope: !1232, file: !1273, line: 36, type: !1266, isLocal: true, isDefinition: true)
!1232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1233, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1235, globals: !1270, nameTableKind: None)
!1233 = !DIFile(filename: "./lib/human.c", directory: "/home/mohamad/clone/coreutils")
!1234 = !{!109}
!1235 = !{!175, !27, !6, !168, !143, !146, !259, !149, !240, !1236, !144, !1265, !270, !1266, !1267, !346, !725, !147, !667, !243, !1268, !1269, !657, !663}
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !1239, line: 53, size: 768, elements: !1240)
!1239 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!1240 = !{!1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !1238, file: !1239, line: 57, baseType: !143, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "thousands_sep", scope: !1238, file: !1239, line: 58, baseType: !143, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !1238, file: !1239, line: 64, baseType: !143, size: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "int_curr_symbol", scope: !1238, file: !1239, line: 70, baseType: !143, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "currency_symbol", scope: !1238, file: !1239, line: 71, baseType: !143, size: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "mon_decimal_point", scope: !1238, file: !1239, line: 72, baseType: !143, size: 64, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "mon_thousands_sep", scope: !1238, file: !1239, line: 73, baseType: !143, size: 64, offset: 384)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "mon_grouping", scope: !1238, file: !1239, line: 74, baseType: !143, size: 64, offset: 448)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "positive_sign", scope: !1238, file: !1239, line: 75, baseType: !143, size: 64, offset: 512)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sign", scope: !1238, file: !1239, line: 76, baseType: !143, size: 64, offset: 576)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "int_frac_digits", scope: !1238, file: !1239, line: 77, baseType: !144, size: 8, offset: 640)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "frac_digits", scope: !1238, file: !1239, line: 78, baseType: !144, size: 8, offset: 648)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "p_cs_precedes", scope: !1238, file: !1239, line: 80, baseType: !144, size: 8, offset: 656)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "p_sep_by_space", scope: !1238, file: !1239, line: 82, baseType: !144, size: 8, offset: 664)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "n_cs_precedes", scope: !1238, file: !1239, line: 84, baseType: !144, size: 8, offset: 672)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "n_sep_by_space", scope: !1238, file: !1239, line: 86, baseType: !144, size: 8, offset: 680)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "p_sign_posn", scope: !1238, file: !1239, line: 93, baseType: !144, size: 8, offset: 688)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "n_sign_posn", scope: !1238, file: !1239, line: 94, baseType: !144, size: 8, offset: 696)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_cs_precedes", scope: !1238, file: !1239, line: 97, baseType: !144, size: 8, offset: 704)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sep_by_space", scope: !1238, file: !1239, line: 99, baseType: !144, size: 8, offset: 712)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_cs_precedes", scope: !1238, file: !1239, line: 101, baseType: !144, size: 8, offset: 720)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sep_by_space", scope: !1238, file: !1239, line: 103, baseType: !144, size: 8, offset: 728)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sign_posn", scope: !1238, file: !1239, line: 110, baseType: !144, size: 8, offset: 736)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sign_posn", scope: !1238, file: !1239, line: 111, baseType: !144, size: 8, offset: 744)
!1265 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 72, elements: !274)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !110, line: 39, baseType: !109)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 192, elements: !222)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 64, elements: !260)
!1270 = !{!1230, !1271, !1274}
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "block_size_args", scope: !1232, file: !1273, line: 398, type: !1268, isLocal: true, isDefinition: true)
!1273 = !DIFile(filename: "lib/human.c", directory: "/home/mohamad/clone/coreutils")
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "block_size_opts", scope: !1232, file: !1273, line: 399, type: !1269, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "user_alist", scope: !1278, file: !1283, line: 55, type: !1281, isLocal: true, isDefinition: true)
!1278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1279, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1280, globals: !1313, nameTableKind: None)
!1279 = !DIFile(filename: "./lib/idcache.c", directory: "/home/mohamad/clone/coreutils")
!1280 = !{!167, !1281, !1286, !1294, !146, !143, !240, !464, !144, !147, !202, !1305, !204}
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "userid", file: !1283, line: 37, size: 128, elements: !1284)
!1283 = !DIFile(filename: "lib/idcache.c", directory: "/home/mohamad/clone/coreutils")
!1284 = !{!1285, !1292, !1293}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1282, file: !1283, line: 43, baseType: !1286, size: 32)
!1286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1282, file: !1283, line: 39, size: 32, elements: !1287)
!1287 = !{!1288, !1290}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1286, file: !1283, line: 41, baseType: !1289, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !179, line: 80, baseType: !202)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1286, file: !1283, line: 42, baseType: !1291, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !179, line: 65, baseType: !204)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1282, file: !1283, line: 44, baseType: !1281, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1282, file: !1283, line: 45, baseType: !464, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !1296, line: 49, size: 384, elements: !1297)
!1296 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!1297 = !{!1298, !1299, !1300, !1301, !1302, !1303, !1304}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1295, file: !1296, line: 51, baseType: !143, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1295, file: !1296, line: 52, baseType: !143, size: 64, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1295, file: !1296, line: 53, baseType: !202, size: 32, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1295, file: !1296, line: 54, baseType: !204, size: 32, offset: 160)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1295, file: !1296, line: 55, baseType: !143, size: 64, offset: 192)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1295, file: !1296, line: 56, baseType: !143, size: 64, offset: 256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1295, file: !1296, line: 57, baseType: !143, size: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1307, line: 42, size: 256, elements: !1308)
!1307 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1308 = !{!1309, !1310, !1311, !1312}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1306, file: !1307, line: 44, baseType: !143, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1306, file: !1307, line: 45, baseType: !143, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1306, file: !1307, line: 46, baseType: !204, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1306, file: !1307, line: 47, baseType: !142, size: 64, offset: 192)
!1313 = !{!1276, !1314, !1316, !1318}
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "nouser_alist", scope: !1278, file: !1283, line: 58, type: !1281, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "group_alist", scope: !1278, file: !1283, line: 61, type: !1281, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "nogroup_alist", scope: !1278, file: !1283, line: 64, type: !1281, isLocal: true, isDefinition: true)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "program_name", scope: !1322, file: !1367, line: 33, type: !146, isLocal: false, isDefinition: true)
!1322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1323, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1324, globals: !1366, nameTableKind: None)
!1323 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1324 = !{!167, !143, !146, !1325, !1328, !147, !610, !439}
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 448, elements: !1326)
!1326 = !{!1327}
!1327 = !DISubrange(count: 56)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1329, file: !286, line: 242, baseType: !27, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1329, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1329, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1329, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1329, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1329, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1329, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1329, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1329, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1329, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1329, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1329, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1329, file: !286, line: 260, baseType: !1344, size: 64, offset: 768)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1346)
!1346 = !{!1347, !1348, !1349}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1345, file: !286, line: 157, baseType: !1344, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1345, file: !286, line: 158, baseType: !1328, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1345, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1329, file: !286, line: 262, baseType: !1328, size: 64, offset: 832)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1329, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1329, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1329, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1329, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1329, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1329, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1329, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1329, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1329, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1329, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1329, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1329, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1329, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1329, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1329, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1366 = !{!1320}
!1367 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1370, file: !1378, line: 85, type: !1374, isLocal: false, isDefinition: true)
!1370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1371, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1372, retainedTypes: !1373, globals: !1407, nameTableKind: None)
!1371 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1372 = !{!95}
!1373 = !{!27, !177, !149, !1374, !1375, !1376, !725, !1386, !1383, !6, !146, !1387, !1389, !143, !1390, !448, !141, !259, !147, !696, !1395, !751, !1405, !270, !439, !610, !253}
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 704, elements: !668)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 320, elements: !244)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1378, line: 65, size: 448, elements: !1379)
!1378 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1379 = !{!1380, !1381, !1382, !1384, !1385}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1377, file: !1378, line: 68, baseType: !95, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1377, file: !1378, line: 71, baseType: !27, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1377, file: !1378, line: 75, baseType: !1383, size: 256, offset: 64)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 256, elements: !611)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1377, file: !1378, line: 78, baseType: !146, size: 64, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1377, file: !1378, line: 81, baseType: !146, size: 64, offset: 384)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1377)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1378, line: 834, size: 128, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1391, file: !1378, line: 836, baseType: !149, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1378, line: 837, baseType: !143, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !741, line: 106, baseType: !1396)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !741, line: 94, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 82, size: 64, elements: !1398)
!1398 = !{!1399, !1400}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1397, file: !741, line: 84, baseType: !27, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1397, file: !741, line: 93, baseType: !1401, size: 32, offset: 32)
!1401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1397, file: !741, line: 85, size: 32, elements: !1402)
!1402 = !{!1403, !1404}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1401, file: !741, line: 88, baseType: !6, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1401, file: !741, line: 92, baseType: !439, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!1407 = !{!1368, !1408, !1410, !1412, !1414, !1416, !1418, !1420}
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1370, file: !1378, line: 101, type: !1375, isLocal: false, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1370, file: !1378, line: 1052, type: !1377, isLocal: false, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1370, file: !1378, line: 116, type: !1377, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "slot0", scope: !1370, file: !1378, line: 842, type: !448, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "slotvec", scope: !1370, file: !1378, line: 845, type: !1390, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "nslots", scope: !1370, file: !1378, line: 843, type: !27, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1370, file: !1378, line: 844, type: !1391, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1424, file: !1431, line: 26, type: !1427, isLocal: false, isDefinition: true)
!1424 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1425, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1426, globals: !1430, nameTableKind: None)
!1425 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1426 = !{!1427}
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 376, elements: !1428)
!1428 = !{!1429}
!1429 = !DISubrange(count: 47)
!1430 = !{!1422}
!1431 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !1434, file: !1509, line: 351, type: !525, isLocal: false, isDefinition: true)
!1434 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1435, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1436, globals: !1508, nameTableKind: None)
!1435 = !DIFile(filename: "./lib/obstack.c", directory: "/home/mohamad/clone/coreutils")
!1436 = !{!143, !167, !1437, !1459, !1442, !149, !525, !144, !464, !27, !1470, !439, !638, !445}
!1437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1438, file: !454, line: 189, size: 64, elements: !1467)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !454, line: 174, size: 704, elements: !1439)
!1439 = !{!1440, !1441, !1448, !1449, !1450, !1451, !1456, !1457, !1458, !1463, !1464, !1465, !1466}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1438, file: !454, line: 176, baseType: !149, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1438, file: !454, line: 177, baseType: !1442, size: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !454, line: 167, size: 128, elements: !1444)
!1444 = !{!1445, !1446, !1447}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1443, file: !454, line: 169, baseType: !143, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1443, file: !454, line: 170, baseType: !1442, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1443, file: !454, line: 171, baseType: !464, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1438, file: !454, line: 178, baseType: !143, size: 64, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1438, file: !454, line: 179, baseType: !143, size: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1438, file: !454, line: 180, baseType: !143, size: 64, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1438, file: !454, line: 185, baseType: !1452, size: 64, offset: 320)
!1452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1438, file: !454, line: 181, size: 64, elements: !1453)
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1452, file: !454, line: 183, baseType: !149, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1452, file: !454, line: 184, baseType: !167, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1438, file: !454, line: 186, baseType: !149, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1438, file: !454, line: 193, baseType: !1437, size: 64, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1438, file: !454, line: 198, baseType: !1459, size: 64, offset: 512)
!1459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1438, file: !454, line: 194, size: 64, elements: !1460)
!1460 = !{!1461, !1462}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1459, file: !454, line: 196, baseType: !489, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1459, file: !454, line: 197, baseType: !493, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1438, file: !454, line: 200, baseType: !167, size: 64, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1438, file: !454, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1438, file: !454, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1438, file: !454, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1437, file: !454, line: 191, baseType: !478, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1437, file: !454, line: 192, baseType: !482, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1471, file: !286, line: 242, baseType: !27, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1471, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1471, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1471, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1471, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1471, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1471, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1471, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1471, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1471, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1471, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1471, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1471, file: !286, line: 260, baseType: !1486, size: 64, offset: 768)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1488)
!1488 = !{!1489, !1490, !1491}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1487, file: !286, line: 157, baseType: !1486, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1487, file: !286, line: 158, baseType: !1470, size: 64, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1487, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1471, file: !286, line: 262, baseType: !1470, size: 64, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1471, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1471, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1471, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1471, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1471, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1471, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1471, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1471, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1471, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1471, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1471, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1471, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1471, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1471, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1471, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1508 = !{!1432}
!1509 = !DIFile(filename: "lib/obstack.c", directory: "/home/mohamad/clone/coreutils")
!1510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1511, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1512, nameTableKind: None)
!1511 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!1512 = !{!167, !149, !1513, !693, !143, !27}
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !179, line: 109, baseType: !1514)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !165, line: 172, baseType: !166)
!1515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1516, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, nameTableKind: None)
!1516 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!1517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1518, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1519, nameTableKind: None)
!1518 = !DIFile(filename: "./lib/c-strncasecmp.c", directory: "/home/mohamad/clone/coreutils")
!1519 = !{!1520, !725, !1521}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !725)
!1522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1523, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1524, retainedTypes: !1532, nameTableKind: None)
!1523 = !DIFile(filename: "./lib/canonicalize.c", directory: "/home/mohamad/clone/coreutils")
!1524 = !{!1525}
!1525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "canonicalize_mode_t", file: !1526, line: 28, baseType: !6, size: 32, elements: !1527)
!1526 = !DIFile(filename: "./lib/canonicalize.h", directory: "/home/mohamad/clone/coreutils")
!1527 = !{!1528, !1529, !1530, !1531}
!1528 = !DIEnumerator(name: "CAN_EXISTING", value: 0, isUnsigned: true)
!1529 = !DIEnumerator(name: "CAN_ALL_BUT_LAST", value: 1, isUnsigned: true)
!1530 = !DIEnumerator(name: "CAN_MISSING", value: 2, isUnsigned: true)
!1531 = !DIEnumerator(name: "CAN_NOLINKS", value: 4, isUnsigned: true)
!1532 = !{!167, !143, !146, !149, !249, !27, !141, !144, !147, !675, !200, !259, !180}
!1533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1534, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1535, nameTableKind: None)
!1534 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1535 = !{!149, !146, !141, !143}
!1536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1537, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1538, nameTableKind: None)
!1537 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1538 = !{!143, !146, !147, !141, !149}
!1539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1540, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, nameTableKind: None)
!1540 = !DIFile(filename: "./lib/file-has-acl.c", directory: "/home/mohamad/clone/coreutils")
!1541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1542, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1543, nameTableKind: None)
!1542 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!1543 = !{!167, !143, !1544, !196, !267, !194, !269}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1546, line: 9, size: 192, elements: !1547)
!1546 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mohamad/clone/coreutils")
!1547 = !{!1548, !1549, !1550}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1545, file: !1546, line: 11, baseType: !143, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1545, file: !1546, line: 12, baseType: !267, size: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1545, file: !1546, line: 13, baseType: !269, size: 64, offset: 128)
!1551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1552, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1553, nameTableKind: None)
!1552 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!1553 = !{!143, !200}
!1554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1555, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1556, nameTableKind: None)
!1555 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!1556 = !{!167, !143}
!1557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1558, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1559, nameTableKind: None)
!1558 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1559 = !{!167, !146, !149, !144, !147, !143}
!1560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1561, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1562, nameTableKind: None)
!1561 = !DIFile(filename: "./lib/filevercmp.c", directory: "/home/mohamad/clone/coreutils")
!1562 = !{!27, !146, !149, !147, !259, !253, !141}
!1563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1564, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, nameTableKind: None)
!1564 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!1565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1566, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1567, nameTableKind: None)
!1566 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!1567 = !{!141, !146, !259, !270}
!1568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1569, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1570, nameTableKind: None)
!1569 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!1570 = !{!1571, !149, !143, !267, !269, !1578}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1546, line: 9, size: 192, elements: !1574)
!1574 = !{!1575, !1576, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1573, file: !1546, line: 11, baseType: !143, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1573, file: !1546, line: 12, baseType: !267, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1573, file: !1546, line: 13, baseType: !269, size: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1580, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1581, nameTableKind: None)
!1580 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/mohamad/clone/coreutils")
!1581 = !{!1582, !143, !144}
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !169, line: 134, baseType: !166)
!1583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1584, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1585, nameTableKind: None)
!1584 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/mohamad/clone/coreutils")
!1585 = !{!168, !143, !144}
!1586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1587, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1588, retainedTypes: !1589, nameTableKind: None)
!1587 = !DIFile(filename: "./lib/mbsalign.c", directory: "/home/mohamad/clone/coreutils")
!1588 = !{!123}
!1589 = !{!167, !1590, !149, !143, !1591, !146, !141, !144, !751, !27}
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !150, line: 116, baseType: !6)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!1592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1593, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1594, nameTableKind: None)
!1593 = !DIFile(filename: "./lib/mbswidth.c", directory: "/home/mohamad/clone/coreutils")
!1594 = !{!149, !725, !27, !177, !146, !147, !1595, !751, !696}
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !741, line: 106, baseType: !1596)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !741, line: 94, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 82, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1597, file: !741, line: 84, baseType: !27, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1597, file: !741, line: 93, baseType: !1601, size: 32, offset: 32)
!1601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1597, file: !741, line: 85, size: 32, elements: !1602)
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1601, file: !741, line: 88, baseType: !6, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1601, file: !741, line: 92, baseType: !439, size: 32)
!1605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1606, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1607, nameTableKind: None)
!1606 = !DIFile(filename: "./lib/mpsort.c", directory: "/home/mohamad/clone/coreutils")
!1607 = !{!175, !181, !149}
!1608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1609, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1610, nameTableKind: None)
!1609 = !DIFile(filename: "./lib/nstrftime.c", directory: "/home/mohamad/clone/coreutils")
!1610 = !{!146, !6, !149, !167, !175, !725, !141, !27, !143, !240, !147, !144, !829, !442, !1611, !273, !270, !162, !166}
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8192, elements: !1612)
!1612 = !{!1613}
!1613 = !DISubrange(count: 1024)
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1616, nameTableKind: None)
!1615 = !DIFile(filename: "./lib/same.c", directory: "/home/mohamad/clone/coreutils")
!1616 = !{!146, !149, !141, !143, !27, !253, !196, !194}
!1617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1618, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1070, nameTableKind: None)
!1618 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mohamad/clone/coreutils")
!1619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1620, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1621, nameTableKind: None)
!1620 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mohamad/clone/coreutils")
!1621 = !{!217, !164}
!1622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1623, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1624, nameTableKind: None)
!1623 = !DIFile(filename: "./lib/timespec.c", directory: "/home/mohamad/clone/coreutils")
!1624 = !{!164, !217}
!1625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1626, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1627, nameTableKind: None)
!1626 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!1627 = !{!167, !654, !632, !1628, !439, !259, !1629, !1632, !663, !681, !829, !1635, !1636, !787, !728, !619, !1639, !707, !1642, !149, !1643, !1644, !1656, !327, !678, !664, !349, !671}
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, elements: !342)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1368, elements: !1630)
!1630 = !{!1631}
!1631 = !DISubrange(count: 171)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 272, elements: !1633)
!1633 = !{!1634}
!1634 = !DISubrange(count: 34)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 224, elements: !547)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1637)
!1637 = !{!1638}
!1638 = !DISubrange(count: 32)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 384, elements: !1640)
!1640 = !{!1641}
!1641 = !DISubrange(count: 48)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 480, elements: !791)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 640, elements: !244)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1645, line: 79, baseType: !1646)
!1645 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1647, line: 32, baseType: !1648)
!1647 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1626, line: 234, baseType: !1649)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1650, size: 192, elements: !241)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1626, line: 192, size: 192, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1650, file: !1626, line: 192, baseType: !6, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1650, file: !1626, line: 192, baseType: !6, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1650, file: !1626, line: 192, baseType: !167, size: 64, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1650, file: !1626, line: 192, baseType: !167, size: 64, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1657, file: !286, line: 242, baseType: !27, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1657, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1657, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1657, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1657, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1657, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1657, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1657, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1657, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1657, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1657, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1657, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1657, file: !286, line: 260, baseType: !1672, size: 64, offset: 768)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1674)
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1673, file: !286, line: 157, baseType: !1672, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1673, file: !286, line: 158, baseType: !1656, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1673, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1657, file: !286, line: 262, baseType: !1656, size: 64, offset: 832)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1657, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1657, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1657, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1657, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1657, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1657, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1657, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1657, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1657, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1657, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1657, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1657, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1657, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1657, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1657, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1695, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1696, nameTableKind: None)
!1695 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!1696 = !{!149, !143, !167}
!1697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1698, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1699, nameTableKind: None)
!1698 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!1699 = !{!445, !253, !638}
!1700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1701, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1702, nameTableKind: None)
!1701 = !DIFile(filename: "./lib/xdectoumax.c", directory: "/home/mohamad/clone/coreutils")
!1702 = !{!1267, !168, !27, !632}
!1703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1704, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1705, nameTableKind: None)
!1704 = !DIFile(filename: "./lib/xgetcwd.c", directory: "/home/mohamad/clone/coreutils")
!1705 = !{!143, !27}
!1706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1707, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1708, nameTableKind: None)
!1707 = !DIFile(filename: "./lib/xgethostname.c", directory: "/home/mohamad/clone/coreutils")
!1708 = !{!167, !143, !149, !27}
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1711, nameTableKind: None)
!1710 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mohamad/clone/coreutils")
!1711 = !{!27, !177, !143, !142, !151, !1267, !337, !663, !1712, !146, !725, !147, !696, !144}
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 648, elements: !1713)
!1713 = !{!1714}
!1714 = !DISubrange(count: 81)
!1715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1716, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1717, nameTableKind: None)
!1716 = !DIFile(filename: "./lib/xstrtol-error.c", directory: "/home/mohamad/clone/coreutils")
!1717 = !{!445, !146, !253, !259, !833, !1718, !671, !147, !1721}
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 296, elements: !1719)
!1719 = !{!1720}
!1720 = !DISubrange(count: 37)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !625, line: 104, size: 256, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1723, file: !625, line: 106, baseType: !146, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1723, file: !625, line: 109, baseType: !27, size: 32, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1723, file: !625, line: 110, baseType: !630, size: 64, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1723, file: !625, line: 111, baseType: !27, size: 32, offset: 192)
!1729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1730, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1234, retainedTypes: !1731, nameTableKind: None)
!1730 = !DIFile(filename: "./lib/xstrtoumax.c", directory: "/home/mohamad/clone/coreutils")
!1731 = !{!27, !177, !143, !142, !168, !1267, !337, !663, !758, !146, !725, !147, !696, !144}
!1732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1733, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1734, nameTableKind: None)
!1733 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!1734 = !{!149, !751, !725, !147}
!1735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1736, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, nameTableKind: None)
!1736 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!1737 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1738, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1739, globals: !1748, nameTableKind: None)
!1738 = !DIFile(filename: "./lib/time_rz.c", directory: "/home/mohamad/clone/coreutils")
!1739 = !{!143, !149, !1740, !1741, !144, !464, !141, !162, !27, !253, !146, !240, !147}
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !255, line: 764, baseType: !1741)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1743, line: 21, size: 128, elements: !1744)
!1743 = !DIFile(filename: "./lib/time-internal.h", directory: "/home/mohamad/clone/coreutils")
!1744 = !{!1745, !1746, !1747}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1742, file: !1743, line: 25, baseType: !1741, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !1742, file: !1743, line: 36, baseType: !144, size: 8, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !1742, file: !1743, line: 48, baseType: !464, offset: 72)
!1748 = !{!1749}
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(name: "local_tz", scope: !1737, file: !1751, line: 55, type: !1752, isLocal: true, isDefinition: true)
!1751 = !DIFile(filename: "lib/time_rz.c", directory: "/home/mohamad/clone/coreutils")
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!1753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1754, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1755, nameTableKind: None)
!1754 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!1755 = !{!6}
!1756 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1757, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1519, nameTableKind: None)
!1757 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!1758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1759, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1760, nameTableKind: None)
!1759 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!1760 = !{!1761, !27}
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!1762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1763, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1764, nameTableKind: None)
!1763 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!1764 = !{!143}
!1765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1766, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1767, nameTableKind: None)
!1766 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!1767 = !{!146, !149, !147}
!1768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1769, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1770, nameTableKind: None)
!1769 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!1770 = !{!167, !146, !240, !270}
!1771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1772, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1070, nameTableKind: None)
!1772 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!1773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1774, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1775, nameTableKind: None)
!1774 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!1775 = !{!167, !1776, !27}
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1645, line: 48, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1777, file: !286, line: 242, baseType: !27, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1777, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1777, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1777, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1777, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1777, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1777, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1777, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1777, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1777, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1777, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1777, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1777, file: !286, line: 260, baseType: !1792, size: 64, offset: 768)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1794)
!1794 = !{!1795, !1796, !1798}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1793, file: !286, line: 157, baseType: !1792, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1793, file: !286, line: 158, baseType: !1797, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1793, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1777, file: !286, line: 262, baseType: !1797, size: 64, offset: 832)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1777, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1777, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1777, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1777, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1777, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1777, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1777, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1777, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1777, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1777, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1777, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1777, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1777, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1777, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1777, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1816, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1817, nameTableKind: None)
!1816 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!1817 = !{!167, !1818, !143, !1857, !27, !319}
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1645, line: 48, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1819, file: !286, line: 242, baseType: !27, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1819, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1819, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1819, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1819, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1819, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1819, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1819, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1819, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1819, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1819, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1819, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1819, file: !286, line: 260, baseType: !1834, size: 64, offset: 768)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !1836)
!1836 = !{!1837, !1838, !1840}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1835, file: !286, line: 157, baseType: !1834, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1835, file: !286, line: 158, baseType: !1839, size: 64, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1835, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1819, file: !286, line: 262, baseType: !1839, size: 64, offset: 832)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1819, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1819, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1819, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1819, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1819, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1819, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1819, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1819, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1819, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1819, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1819, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1819, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1819, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1819, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1819, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1645, line: 90, baseType: !180)
!1858 = !{!"clang version 9.0.0 (https://github.com/mbarbar/tir-clang 705b46f1517a61e41433abeac21f36fdcdd90bc1) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!1859 = !{i32 2, !"ctir", i32 1}
!1860 = !{i32 2, !"Dwarf Version", i32 4}
!1861 = !{i32 2, !"Debug Info Version", i32 3}
!1862 = !{i32 1, !"wchar_size", i32 4}
!1863 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 1450, type: !917, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1864 = !DILocalVariable(name: "argc", arg: 1, scope: !1863, file: !3, line: 1450, type: !27)
!1865 = !DILocation(line: 1450, column: 11, scope: !1863)
!1866 = !DILocalVariable(name: "argv", arg: 2, scope: !1863, file: !3, line: 1450, type: !142)
!1867 = !DILocation(line: 1450, column: 24, scope: !1863)
!1868 = !DILocalVariable(name: "i", scope: !1863, file: !3, line: 1452, type: !27)
!1869 = !DILocation(line: 1452, column: 7, scope: !1863)
!1870 = !DILocalVariable(name: "thispend", scope: !1863, file: !3, line: 1453, type: !233)
!1871 = !DILocation(line: 1453, column: 19, scope: !1863)
!1872 = !DILocalVariable(name: "n_files", scope: !1863, file: !3, line: 1454, type: !27)
!1873 = !DILocation(line: 1454, column: 7, scope: !1863)
!1874 = !DILocation(line: 1457, column: 21, scope: !1863)
!1875 = !DILocation(line: 1457, column: 3, scope: !1863)
!1876 = !DILocation(line: 1458, column: 3, scope: !1863)
!1877 = !DILocation(line: 1459, column: 3, scope: !1863)
!1878 = !DILocation(line: 1460, column: 3, scope: !1863)
!1879 = !DILocation(line: 1462, column: 3, scope: !1863)
!1880 = !DILocation(line: 1463, column: 3, scope: !1863)
!1881 = !DILocation(line: 1468, column: 15, scope: !1863)
!1882 = !DILocation(line: 1469, column: 18, scope: !1863)
!1883 = !DILocation(line: 1470, column: 16, scope: !1863)
!1884 = !DILocation(line: 1472, column: 23, scope: !1863)
!1885 = !DILocation(line: 1473, column: 24, scope: !1863)
!1886 = !DILocation(line: 1475, column: 24, scope: !1863)
!1887 = !DILocation(line: 1475, column: 30, scope: !1863)
!1888 = !DILocation(line: 1475, column: 7, scope: !1863)
!1889 = !DILocation(line: 1475, column: 5, scope: !1863)
!1890 = !DILocation(line: 1477, column: 7, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1477, column: 7)
!1892 = !DILocation(line: 1477, column: 7, scope: !1863)
!1893 = !DILocation(line: 1478, column: 5, scope: !1891)
!1894 = !DILocation(line: 1482, column: 7, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1482, column: 7)
!1896 = !DILocation(line: 1482, column: 7, scope: !1863)
!1897 = !DILocation(line: 1483, column: 24, scope: !1895)
!1898 = !DILocation(line: 1483, column: 5, scope: !1895)
!1899 = !DILocation(line: 1484, column: 12, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1895, file: !3, line: 1484, column: 12)
!1901 = !DILocation(line: 1484, column: 12, scope: !1895)
!1902 = !DILocation(line: 1487, column: 11, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 1487, column: 11)
!1904 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 1485, column: 5)
!1905 = !DILocation(line: 1488, column: 11, scope: !1903)
!1906 = !DILocation(line: 1488, column: 15, scope: !1903)
!1907 = !DILocation(line: 1488, column: 35, scope: !1903)
!1908 = !DILocation(line: 1488, column: 38, scope: !1903)
!1909 = !DILocation(line: 1489, column: 11, scope: !1903)
!1910 = !DILocation(line: 1489, column: 15, scope: !1903)
!1911 = !DILocation(line: 1489, column: 38, scope: !1903)
!1912 = !DILocation(line: 1489, column: 41, scope: !1903)
!1913 = !DILocation(line: 1489, column: 48, scope: !1903)
!1914 = !DILocation(line: 1487, column: 11, scope: !1904)
!1915 = !DILocation(line: 1490, column: 28, scope: !1903)
!1916 = !DILocation(line: 1490, column: 9, scope: !1903)
!1917 = !DILocation(line: 1491, column: 5, scope: !1904)
!1918 = !DILocation(line: 1493, column: 7, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1493, column: 7)
!1920 = !DILocation(line: 1493, column: 19, scope: !1919)
!1921 = !DILocation(line: 1493, column: 7, scope: !1863)
!1922 = !DILocation(line: 1494, column: 21, scope: !1919)
!1923 = !DILocation(line: 1495, column: 21, scope: !1919)
!1924 = !DILocation(line: 1495, column: 24, scope: !1919)
!1925 = !DILocation(line: 1495, column: 40, scope: !1919)
!1926 = !DILocation(line: 1496, column: 21, scope: !1919)
!1927 = !DILocation(line: 1496, column: 24, scope: !1919)
!1928 = !DILocation(line: 1496, column: 31, scope: !1919)
!1929 = !DILocation(line: 1494, column: 20, scope: !1919)
!1930 = !DILocation(line: 1494, column: 17, scope: !1919)
!1931 = !DILocation(line: 1494, column: 5, scope: !1919)
!1932 = !DILocation(line: 1502, column: 7, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1502, column: 7)
!1934 = !DILocation(line: 1502, column: 7, scope: !1863)
!1935 = !DILocation(line: 1504, column: 24, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1933, file: !3, line: 1503, column: 5)
!1937 = !DILocation(line: 1504, column: 22, scope: !1936)
!1938 = !DILocation(line: 1508, column: 11, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 1508, column: 11)
!1940 = !DILocation(line: 1508, column: 26, scope: !1939)
!1941 = !DILocation(line: 1508, column: 11, scope: !1936)
!1942 = !DILocation(line: 1509, column: 9, scope: !1939)
!1943 = !DILocation(line: 1511, column: 7, scope: !1936)
!1944 = !DILocation(line: 1512, column: 5, scope: !1936)
!1945 = !DILocation(line: 1514, column: 22, scope: !1863)
!1946 = !DILocation(line: 1514, column: 13, scope: !1863)
!1947 = !DILocation(line: 1514, column: 11, scope: !1863)
!1948 = !DILocation(line: 1516, column: 23, scope: !1863)
!1949 = !DILocation(line: 1516, column: 33, scope: !1863)
!1950 = !DILocation(line: 1516, column: 46, scope: !1863)
!1951 = !DILocation(line: 1516, column: 49, scope: !1863)
!1952 = !DILocation(line: 1516, column: 59, scope: !1863)
!1953 = !DILocation(line: 1517, column: 5, scope: !1863)
!1954 = !DILocation(line: 1517, column: 8, scope: !1863)
!1955 = !DILocation(line: 1517, column: 15, scope: !1863)
!1956 = !DILocation(line: 1518, column: 5, scope: !1863)
!1957 = !DILocation(line: 1518, column: 8, scope: !1863)
!1958 = !DILocation(line: 1519, column: 5, scope: !1863)
!1959 = !DILocation(line: 1519, column: 8, scope: !1863)
!1960 = !DILocation(line: 1516, column: 21, scope: !1863)
!1961 = !DILocation(line: 1520, column: 26, scope: !1863)
!1962 = !DILocation(line: 1521, column: 24, scope: !1863)
!1963 = !DILocation(line: 1521, column: 28, scope: !1863)
!1964 = !DILocation(line: 1522, column: 28, scope: !1863)
!1965 = !DILocation(line: 1522, column: 31, scope: !1863)
!1966 = !DILocation(line: 1523, column: 28, scope: !1863)
!1967 = !DILocation(line: 1523, column: 31, scope: !1863)
!1968 = !DILocation(line: 1523, column: 47, scope: !1863)
!1969 = !DILocation(line: 1524, column: 28, scope: !1863)
!1970 = !DILocation(line: 1524, column: 31, scope: !1863)
!1971 = !DILocation(line: 0, scope: !1863)
!1972 = !DILocation(line: 1520, column: 21, scope: !1863)
!1973 = !DILocation(line: 1526, column: 7, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1526, column: 7)
!1975 = !DILocation(line: 1526, column: 7, scope: !1863)
!1976 = !DILocation(line: 1528, column: 7, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 1527, column: 5)
!1978 = !DILocation(line: 1529, column: 7, scope: !1977)
!1979 = !DILocation(line: 1530, column: 5, scope: !1977)
!1980 = !DILocation(line: 1532, column: 7, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1532, column: 7)
!1982 = !DILocation(line: 1532, column: 7, scope: !1863)
!1983 = !DILocation(line: 1534, column: 7, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1981, file: !3, line: 1533, column: 5)
!1985 = !DILocation(line: 1536, column: 18, scope: !1984)
!1986 = !DILocation(line: 1536, column: 16, scope: !1984)
!1987 = !DILocation(line: 1539, column: 13, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 1539, column: 11)
!1989 = !DILocation(line: 1539, column: 11, scope: !1984)
!1990 = !DILocation(line: 1540, column: 18, scope: !1988)
!1991 = !DILocation(line: 1540, column: 9, scope: !1988)
!1992 = !DILocation(line: 1541, column: 5, scope: !1984)
!1993 = !DILocation(line: 1543, column: 15, scope: !1863)
!1994 = !DILocation(line: 1544, column: 24, scope: !1863)
!1995 = !DILocation(line: 1544, column: 14, scope: !1863)
!1996 = !DILocation(line: 1544, column: 12, scope: !1863)
!1997 = !DILocation(line: 1545, column: 14, scope: !1863)
!1998 = !DILocation(line: 1547, column: 3, scope: !1863)
!1999 = !DILocation(line: 1549, column: 13, scope: !1863)
!2000 = !DILocation(line: 1549, column: 20, scope: !1863)
!2001 = !DILocation(line: 1549, column: 18, scope: !1863)
!2002 = !DILocation(line: 1549, column: 11, scope: !1863)
!2003 = !DILocation(line: 1551, column: 7, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1551, column: 7)
!2005 = !DILocation(line: 1551, column: 15, scope: !2004)
!2006 = !DILocation(line: 1551, column: 7, scope: !1863)
!2007 = !DILocation(line: 1553, column: 11, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 1553, column: 11)
!2009 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 1552, column: 5)
!2010 = !DILocation(line: 1553, column: 11, scope: !2009)
!2011 = !DILocation(line: 1554, column: 9, scope: !2008)
!2012 = !DILocation(line: 1556, column: 9, scope: !2008)
!2013 = !DILocation(line: 1557, column: 5, scope: !2009)
!2014 = !DILocation(line: 1559, column: 5, scope: !2004)
!2015 = !DILocation(line: 1560, column: 20, scope: !2004)
!2016 = !DILocation(line: 1560, column: 26, scope: !2004)
!2017 = !DILocation(line: 1560, column: 7, scope: !2004)
!2018 = !DILocation(line: 1561, column: 12, scope: !2004)
!2019 = !DILocation(line: 1561, column: 16, scope: !2004)
!2020 = !DILocation(line: 1561, column: 14, scope: !2004)
!2021 = distinct !{!2021, !2014, !2022}
!2022 = !DILocation(line: 1561, column: 20, scope: !2004)
!2023 = !DILocation(line: 1563, column: 7, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1563, column: 7)
!2025 = !DILocation(line: 1563, column: 7, scope: !1863)
!2026 = !DILocation(line: 1565, column: 7, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2024, file: !3, line: 1564, column: 5)
!2028 = !DILocation(line: 1566, column: 12, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2027, file: !3, line: 1566, column: 11)
!2030 = !DILocation(line: 1566, column: 11, scope: !2027)
!2031 = !DILocation(line: 1567, column: 9, scope: !2029)
!2032 = !DILocation(line: 1569, column: 5, scope: !2027)
!2033 = !DILocation(line: 1575, column: 7, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1575, column: 7)
!2035 = !DILocation(line: 1575, column: 7, scope: !1863)
!2036 = !DILocation(line: 1577, column: 7, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 1576, column: 5)
!2038 = !DILocation(line: 1578, column: 11, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2037, file: !3, line: 1578, column: 11)
!2040 = !DILocation(line: 1578, column: 11, scope: !2037)
!2041 = !DILocation(line: 1579, column: 9, scope: !2039)
!2042 = !DILocation(line: 1579, column: 9, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 1579, column: 9)
!2044 = !DILocation(line: 1580, column: 5, scope: !2037)
!2045 = !DILocation(line: 1581, column: 12, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 1581, column: 12)
!2047 = !DILocation(line: 1581, column: 20, scope: !2046)
!2048 = !DILocation(line: 1581, column: 25, scope: !2046)
!2049 = !DILocation(line: 1581, column: 28, scope: !2046)
!2050 = !DILocation(line: 1581, column: 41, scope: !2046)
!2051 = !DILocation(line: 1581, column: 44, scope: !2046)
!2052 = !DILocation(line: 1581, column: 58, scope: !2046)
!2053 = !DILocation(line: 1581, column: 63, scope: !2046)
!2054 = !DILocation(line: 1581, column: 12, scope: !2034)
!2055 = !DILocation(line: 1582, column: 20, scope: !2046)
!2056 = !DILocation(line: 1582, column: 5, scope: !2046)
!2057 = !DILocation(line: 1584, column: 3, scope: !1863)
!2058 = !DILocation(line: 1584, column: 10, scope: !1863)
!2059 = !DILocation(line: 1586, column: 18, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1585, column: 5)
!2061 = !DILocation(line: 1586, column: 16, scope: !2060)
!2062 = !DILocation(line: 1587, column: 22, scope: !2060)
!2063 = !DILocation(line: 1587, column: 36, scope: !2060)
!2064 = !DILocation(line: 1587, column: 20, scope: !2060)
!2065 = !DILocation(line: 1589, column: 11, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2060, file: !3, line: 1589, column: 11)
!2067 = !DILocation(line: 1589, column: 11, scope: !2060)
!2068 = !DILocation(line: 1591, column: 15, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2070, file: !3, line: 1591, column: 15)
!2070 = distinct !DILexicalBlock(scope: !2066, file: !3, line: 1590, column: 9)
!2071 = !DILocation(line: 1591, column: 25, scope: !2069)
!2072 = !DILocation(line: 1591, column: 30, scope: !2069)
!2073 = !DILocation(line: 1591, column: 15, scope: !2070)
!2074 = !DILocalVariable(name: "di", scope: !2075, file: !3, line: 1597, type: !263)
!2075 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 1592, column: 13)
!2076 = !DILocation(line: 1597, column: 30, scope: !2075)
!2077 = !DILocation(line: 1597, column: 35, scope: !2075)
!2078 = !DILocalVariable(name: "found", scope: !2075, file: !3, line: 1598, type: !262)
!2079 = !DILocation(line: 1598, column: 31, scope: !2075)
!2080 = !DILocation(line: 1598, column: 52, scope: !2075)
!2081 = !DILocation(line: 1598, column: 68, scope: !2075)
!2082 = !DILocation(line: 1598, column: 39, scope: !2075)
!2083 = !DILocation(line: 1600, column: 15, scope: !2075)
!2084 = !DILocation(line: 1601, column: 29, scope: !2075)
!2085 = !DILocation(line: 1601, column: 15, scope: !2075)
!2086 = !DILocation(line: 1602, column: 33, scope: !2075)
!2087 = !DILocation(line: 1602, column: 15, scope: !2075)
!2088 = !DILocation(line: 1603, column: 15, scope: !2075)
!2089 = distinct !{!2089, !2057, !2090}
!2090 = !DILocation(line: 1612, column: 5, scope: !1863)
!2091 = !DILocation(line: 1605, column: 9, scope: !2070)
!2092 = !DILocation(line: 1607, column: 18, scope: !2060)
!2093 = !DILocation(line: 1607, column: 28, scope: !2060)
!2094 = !DILocation(line: 1607, column: 34, scope: !2060)
!2095 = !DILocation(line: 1607, column: 44, scope: !2060)
!2096 = !DILocation(line: 1608, column: 18, scope: !2060)
!2097 = !DILocation(line: 1608, column: 28, scope: !2060)
!2098 = !DILocation(line: 1607, column: 7, scope: !2060)
!2099 = !DILocation(line: 1610, column: 25, scope: !2060)
!2100 = !DILocation(line: 1610, column: 7, scope: !2060)
!2101 = !DILocation(line: 1611, column: 22, scope: !2060)
!2102 = !DILocation(line: 1614, column: 7, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1614, column: 7)
!2104 = !DILocation(line: 1614, column: 24, scope: !2103)
!2105 = !DILocation(line: 1614, column: 27, scope: !2103)
!2106 = !DILocation(line: 1614, column: 7, scope: !1863)
!2107 = !DILocalVariable(name: "j", scope: !2108, file: !3, line: 1616, type: !27)
!2108 = distinct !DILexicalBlock(scope: !2103, file: !3, line: 1615, column: 5)
!2109 = !DILocation(line: 1616, column: 11, scope: !2108)
!2110 = !DILocation(line: 1620, column: 37, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2108, file: !3, line: 1620, column: 11)
!2112 = !DILocation(line: 1620, column: 41, scope: !2111)
!2113 = !DILocation(line: 1621, column: 13, scope: !2111)
!2114 = !DILocation(line: 1621, column: 48, scope: !2111)
!2115 = !DILocation(line: 1621, column: 16, scope: !2111)
!2116 = !DILocation(line: 1621, column: 68, scope: !2111)
!2117 = !DILocation(line: 1622, column: 13, scope: !2111)
!2118 = !DILocation(line: 1622, column: 41, scope: !2111)
!2119 = !DILocation(line: 1622, column: 45, scope: !2111)
!2120 = !DILocation(line: 1623, column: 13, scope: !2111)
!2121 = !DILocation(line: 1623, column: 41, scope: !2111)
!2122 = !DILocation(line: 1623, column: 16, scope: !2111)
!2123 = !DILocation(line: 1623, column: 51, scope: !2111)
!2124 = !DILocation(line: 1620, column: 11, scope: !2108)
!2125 = !DILocation(line: 1624, column: 9, scope: !2111)
!2126 = !DILocation(line: 1626, column: 7, scope: !2108)
!2127 = !DILocation(line: 1628, column: 7, scope: !2108)
!2128 = !DILocation(line: 1634, column: 16, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2108, file: !3, line: 1634, column: 7)
!2130 = !DILocation(line: 1634, column: 14, scope: !2129)
!2131 = !DILocation(line: 1634, column: 12, scope: !2129)
!2132 = !DILocation(line: 1634, column: 35, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2129, file: !3, line: 1634, column: 7)
!2134 = !DILocation(line: 1634, column: 7, scope: !2129)
!2135 = !DILocation(line: 1635, column: 9, scope: !2133)
!2136 = !DILocation(line: 1634, column: 39, scope: !2133)
!2137 = !DILocation(line: 1634, column: 7, scope: !2133)
!2138 = distinct !{!2138, !2134, !2139}
!2139 = !DILocation(line: 1635, column: 23, scope: !2129)
!2140 = !DILocation(line: 1636, column: 11, scope: !2108)
!2141 = !DILocation(line: 1636, column: 9, scope: !2108)
!2142 = !DILocation(line: 1637, column: 11, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2108, file: !3, line: 1637, column: 11)
!2144 = !DILocation(line: 1637, column: 11, scope: !2108)
!2145 = !DILocation(line: 1638, column: 16, scope: !2143)
!2146 = !DILocation(line: 1638, column: 9, scope: !2143)
!2147 = !DILocation(line: 1639, column: 5, scope: !2108)
!2148 = !DILocation(line: 1641, column: 7, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1641, column: 7)
!2150 = !DILocation(line: 1641, column: 7, scope: !1863)
!2151 = !DILocation(line: 1644, column: 7, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 1642, column: 5)
!2153 = !DILocation(line: 1645, column: 7, scope: !2152)
!2154 = !DILocation(line: 1647, column: 53, scope: !2152)
!2155 = !DILocation(line: 1647, column: 34, scope: !2152)
!2156 = !DILocation(line: 1647, column: 15, scope: !2152)
!2157 = !DILocation(line: 1646, column: 7, scope: !2152)
!2158 = !DILocation(line: 1648, column: 5, scope: !2152)
!2159 = !DILocation(line: 1650, column: 7, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 1650, column: 7)
!2161 = !DILocation(line: 1650, column: 7, scope: !1863)
!2162 = !DILocation(line: 1652, column: 7, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 1651, column: 5)
!2164 = !DILocation(line: 1653, column: 18, scope: !2163)
!2165 = !DILocation(line: 1653, column: 7, scope: !2163)
!2166 = !DILocation(line: 1654, column: 5, scope: !2163)
!2167 = !DILocation(line: 1656, column: 10, scope: !1863)
!2168 = !DILocation(line: 1656, column: 3, scope: !1863)
!2169 = distinct !DISubprogram(name: "initialize_exit_failure", scope: !821, file: !821, line: 99, type: !173, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2170 = !DILocalVariable(name: "status", arg: 1, scope: !2169, file: !821, line: 99, type: !27)
!2171 = !DILocation(line: 99, column: 30, scope: !2169)
!2172 = !DILocation(line: 101, column: 7, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2169, file: !821, line: 101, column: 7)
!2174 = !DILocation(line: 101, column: 14, scope: !2173)
!2175 = !DILocation(line: 101, column: 7, scope: !2169)
!2176 = !DILocation(line: 102, column: 20, scope: !2173)
!2177 = !DILocation(line: 102, column: 18, scope: !2173)
!2178 = !DILocation(line: 102, column: 5, scope: !2173)
!2179 = !DILocation(line: 103, column: 1, scope: !2169)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2181, line: 27, size: 64, elements: !2182)
!2181 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/ioctl-types.h", directory: "")
!2182 = !{!2183, !2184, !2185, !2186}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2180, file: !2181, line: 29, baseType: !177, size: 16)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2180, file: !2181, line: 30, baseType: !177, size: 16, offset: 16)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2180, file: !2181, line: 31, baseType: !177, size: 16, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2180, file: !2181, line: 32, baseType: !177, size: 16, offset: 48)
!2187 = !DILocalVariable(name: "argc", arg: 1, scope: !916, file: !3, line: 1688, type: !27)
!2188 = !DILocation(line: 1688, column: 22, scope: !916)
!2189 = !DILocalVariable(name: "argv", arg: 2, scope: !916, file: !3, line: 1688, type: !142)
!2190 = !DILocation(line: 1688, column: 35, scope: !916)
!2191 = !DILocalVariable(name: "time_style_option", scope: !916, file: !3, line: 1690, type: !143)
!2192 = !DILocation(line: 1690, column: 9, scope: !916)
!2193 = !DILocalVariable(name: "sort_type_specified", scope: !916, file: !3, line: 1692, type: !141)
!2194 = !DILocation(line: 1692, column: 8, scope: !916)
!2195 = !DILocalVariable(name: "kibibytes_specified", scope: !916, file: !3, line: 1693, type: !141)
!2196 = !DILocation(line: 1693, column: 8, scope: !916)
!2197 = !DILocation(line: 1695, column: 21, scope: !916)
!2198 = !DILocation(line: 1699, column: 11, scope: !916)
!2199 = !DILocation(line: 1699, column: 3, scope: !916)
!2200 = !DILocation(line: 1703, column: 14, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !916, file: !3, line: 1700, column: 5)
!2202 = !DILocation(line: 1704, column: 7, scope: !2201)
!2203 = !DILocation(line: 1705, column: 7, scope: !2201)
!2204 = !DILocation(line: 1709, column: 14, scope: !2201)
!2205 = !DILocation(line: 1710, column: 7, scope: !2201)
!2206 = !DILocation(line: 1711, column: 7, scope: !2201)
!2207 = !DILocation(line: 1715, column: 11, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2201, file: !3, line: 1715, column: 11)
!2209 = !DILocation(line: 1715, column: 11, scope: !2201)
!2210 = !DILocation(line: 1717, column: 18, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2208, file: !3, line: 1716, column: 9)
!2212 = !DILocation(line: 1718, column: 11, scope: !2211)
!2213 = !DILocation(line: 1720, column: 29, scope: !2211)
!2214 = !DILocation(line: 1721, column: 9, scope: !2211)
!2215 = !DILocation(line: 1724, column: 18, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2208, file: !3, line: 1723, column: 9)
!2217 = !DILocation(line: 1725, column: 29, scope: !2216)
!2218 = !DILocation(line: 1727, column: 7, scope: !2201)
!2219 = !DILocation(line: 1730, column: 7, scope: !2201)
!2220 = !DILocation(line: 1733, column: 13, scope: !916)
!2221 = !DILocation(line: 1734, column: 13, scope: !916)
!2222 = !DILocation(line: 1735, column: 16, scope: !916)
!2223 = !DILocation(line: 1736, column: 15, scope: !916)
!2224 = !DILocation(line: 1737, column: 20, scope: !916)
!2225 = !DILocation(line: 1738, column: 19, scope: !916)
!2226 = !DILocation(line: 1739, column: 15, scope: !916)
!2227 = !DILocation(line: 1740, column: 15, scope: !916)
!2228 = !DILocation(line: 1741, column: 13, scope: !916)
!2229 = !DILocation(line: 1742, column: 18, scope: !916)
!2230 = !DILocation(line: 1743, column: 15, scope: !916)
!2231 = !DILocation(line: 1744, column: 19, scope: !916)
!2232 = !DILocation(line: 1745, column: 17, scope: !916)
!2233 = !DILocation(line: 1746, column: 18, scope: !916)
!2234 = !DILocation(line: 1748, column: 3, scope: !916)
!2235 = !DILocation(line: 1750, column: 15, scope: !916)
!2236 = !DILocalVariable(name: "p", scope: !2237, file: !3, line: 1752, type: !146)
!2237 = distinct !DILexicalBlock(scope: !916, file: !3, line: 1751, column: 3)
!2238 = !DILocation(line: 1752, column: 17, scope: !2237)
!2239 = !DILocation(line: 1752, column: 21, scope: !2237)
!2240 = !DILocation(line: 1753, column: 9, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 1753, column: 9)
!2242 = !DILocation(line: 1753, column: 11, scope: !2241)
!2243 = !DILocation(line: 1753, column: 15, scope: !2241)
!2244 = !DILocation(line: 1753, column: 14, scope: !2241)
!2245 = !DILocation(line: 1753, column: 17, scope: !2241)
!2246 = !DILocation(line: 1753, column: 39, scope: !2241)
!2247 = !DILocation(line: 1753, column: 22, scope: !2241)
!2248 = !DILocation(line: 1753, column: 9, scope: !2237)
!2249 = !DILocation(line: 1755, column: 14, scope: !2241)
!2250 = !DILocation(line: 1756, column: 21, scope: !2241)
!2251 = !DILocation(line: 1756, column: 14, scope: !2241)
!2252 = !DILocation(line: 1754, column: 7, scope: !2241)
!2253 = !DILocalVariable(name: "ws", scope: !2254, file: !3, line: 1761, type: !2180)
!2254 = distinct !DILexicalBlock(scope: !916, file: !3, line: 1760, column: 3)
!2255 = !DILocation(line: 1761, column: 20, scope: !2254)
!2256 = !DILocation(line: 1763, column: 9, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 1763, column: 9)
!2258 = !DILocation(line: 1763, column: 48, scope: !2257)
!2259 = !DILocation(line: 1764, column: 9, scope: !2257)
!2260 = !DILocation(line: 1764, column: 19, scope: !2257)
!2261 = !DILocation(line: 1764, column: 16, scope: !2257)
!2262 = !DILocation(line: 1764, column: 14, scope: !2257)
!2263 = !DILocation(line: 1764, column: 26, scope: !2257)
!2264 = !DILocation(line: 1764, column: 32, scope: !2257)
!2265 = !DILocation(line: 1764, column: 29, scope: !2257)
!2266 = !DILocation(line: 1764, column: 54, scope: !2257)
!2267 = !DILocation(line: 1764, column: 42, scope: !2257)
!2268 = !DILocation(line: 1764, column: 39, scope: !2257)
!2269 = !DILocation(line: 1763, column: 9, scope: !2254)
!2270 = !DILocation(line: 1765, column: 24, scope: !2257)
!2271 = !DILocation(line: 1765, column: 21, scope: !2257)
!2272 = !DILocation(line: 1765, column: 19, scope: !2257)
!2273 = !DILocation(line: 1765, column: 7, scope: !2257)
!2274 = !DILocalVariable(name: "p", scope: !2275, file: !3, line: 1770, type: !146)
!2275 = distinct !DILexicalBlock(scope: !916, file: !3, line: 1769, column: 3)
!2276 = !DILocation(line: 1770, column: 17, scope: !2275)
!2277 = !DILocation(line: 1770, column: 21, scope: !2275)
!2278 = !DILocation(line: 1771, column: 13, scope: !2275)
!2279 = !DILocation(line: 1772, column: 9, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2275, file: !3, line: 1772, column: 9)
!2281 = !DILocation(line: 1772, column: 9, scope: !2275)
!2282 = !DILocalVariable(name: "tmp_ulong", scope: !2283, file: !3, line: 1774, type: !151)
!2283 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 1773, column: 7)
!2284 = !DILocation(line: 1774, column: 27, scope: !2283)
!2285 = !DILocation(line: 1775, column: 23, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 1775, column: 13)
!2287 = !DILocation(line: 1775, column: 13, scope: !2286)
!2288 = !DILocation(line: 1775, column: 53, scope: !2286)
!2289 = !DILocation(line: 1776, column: 13, scope: !2286)
!2290 = !DILocation(line: 1776, column: 16, scope: !2286)
!2291 = !DILocation(line: 1776, column: 26, scope: !2286)
!2292 = !DILocation(line: 1775, column: 13, scope: !2283)
!2293 = !DILocation(line: 1778, column: 23, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 1777, column: 11)
!2295 = !DILocation(line: 1778, column: 21, scope: !2294)
!2296 = !DILocation(line: 1779, column: 11, scope: !2294)
!2297 = !DILocation(line: 1783, column: 14, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 1781, column: 11)
!2299 = !DILocation(line: 1784, column: 27, scope: !2298)
!2300 = !DILocation(line: 1784, column: 20, scope: !2298)
!2301 = !DILocation(line: 1782, column: 13, scope: !2298)
!2302 = !DILocation(line: 1786, column: 7, scope: !2283)
!2303 = !DILocation(line: 1789, column: 3, scope: !916)
!2304 = !DILocalVariable(name: "oi", scope: !2305, file: !3, line: 1791, type: !27)
!2305 = distinct !DILexicalBlock(scope: !916, file: !3, line: 1790, column: 5)
!2306 = !DILocation(line: 1791, column: 11, scope: !2305)
!2307 = !DILocalVariable(name: "c", scope: !2305, file: !3, line: 1792, type: !27)
!2308 = !DILocation(line: 1792, column: 11, scope: !2305)
!2309 = !DILocation(line: 1792, column: 28, scope: !2305)
!2310 = !DILocation(line: 1792, column: 34, scope: !2305)
!2311 = !DILocation(line: 1792, column: 15, scope: !2305)
!2312 = !DILocation(line: 1795, column: 11, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 1795, column: 11)
!2314 = !DILocation(line: 1795, column: 13, scope: !2313)
!2315 = !DILocation(line: 1795, column: 11, scope: !2305)
!2316 = !DILocation(line: 1796, column: 9, scope: !2313)
!2317 = !DILocation(line: 1798, column: 15, scope: !2305)
!2318 = !DILocation(line: 1798, column: 7, scope: !2305)
!2319 = !DILocation(line: 1801, column: 23, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 1799, column: 9)
!2321 = !DILocation(line: 1802, column: 11, scope: !2320)
!2322 = !DILocation(line: 1805, column: 11, scope: !2320)
!2323 = !DILocation(line: 1806, column: 11, scope: !2320)
!2324 = !DILocation(line: 1809, column: 21, scope: !2320)
!2325 = !DILocation(line: 1810, column: 11, scope: !2320)
!2326 = !DILocation(line: 1813, column: 26, scope: !2320)
!2327 = !DILocation(line: 1814, column: 11, scope: !2320)
!2328 = !DILocation(line: 1818, column: 23, scope: !2320)
!2329 = !DILocation(line: 1819, column: 21, scope: !2320)
!2330 = !DILocation(line: 1820, column: 31, scope: !2320)
!2331 = !DILocation(line: 1822, column: 15, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1822, column: 15)
!2333 = !DILocation(line: 1822, column: 22, scope: !2332)
!2334 = !DILocation(line: 1822, column: 15, scope: !2320)
!2335 = !DILocation(line: 1823, column: 23, scope: !2332)
!2336 = !DILocation(line: 1823, column: 20, scope: !2332)
!2337 = !DILocation(line: 1823, column: 13, scope: !2332)
!2338 = !DILocation(line: 1824, column: 28, scope: !2320)
!2339 = !DILocation(line: 1825, column: 28, scope: !2320)
!2340 = !DILocation(line: 1826, column: 27, scope: !2320)
!2341 = !DILocation(line: 1827, column: 11, scope: !2320)
!2342 = !DILocation(line: 1830, column: 27, scope: !2320)
!2343 = !DILocation(line: 1831, column: 11, scope: !2320)
!2344 = !DILocation(line: 1834, column: 18, scope: !2320)
!2345 = !DILocation(line: 1835, column: 23, scope: !2320)
!2346 = !DILocation(line: 1836, column: 11, scope: !2320)
!2347 = !DILocation(line: 1839, column: 54, scope: !2320)
!2348 = !DILocation(line: 1839, column: 34, scope: !2320)
!2349 = !DILocation(line: 1841, column: 54, scope: !2320)
!2350 = !DILocation(line: 1841, column: 34, scope: !2320)
!2351 = !DILocation(line: 1842, column: 11, scope: !2320)
!2352 = !DILocation(line: 1845, column: 23, scope: !2320)
!2353 = !DILocation(line: 1846, column: 11, scope: !2320)
!2354 = !DILocation(line: 1849, column: 31, scope: !2320)
!2355 = !DILocation(line: 1850, column: 11, scope: !2320)
!2356 = !DILocation(line: 1853, column: 18, scope: !2320)
!2357 = !DILocation(line: 1854, column: 11, scope: !2320)
!2358 = !DILocation(line: 1857, column: 18, scope: !2320)
!2359 = !DILocation(line: 1858, column: 11, scope: !2320)
!2360 = !DILocation(line: 1861, column: 23, scope: !2320)
!2361 = !DILocation(line: 1862, column: 18, scope: !2320)
!2362 = !DILocation(line: 1863, column: 11, scope: !2320)
!2363 = !DILocation(line: 1866, column: 18, scope: !2320)
!2364 = !DILocation(line: 1867, column: 23, scope: !2320)
!2365 = !DILocation(line: 1868, column: 11, scope: !2320)
!2366 = !DILocation(line: 1871, column: 27, scope: !2320)
!2367 = !DILocation(line: 1872, column: 11, scope: !2320)
!2368 = !DILocation(line: 1875, column: 29, scope: !2320)
!2369 = !DILocation(line: 1876, column: 11, scope: !2320)
!2370 = !DILocation(line: 1879, column: 24, scope: !2320)
!2371 = !DILocation(line: 1880, column: 11, scope: !2320)
!2372 = !DILocation(line: 1883, column: 28, scope: !2320)
!2373 = !DILocation(line: 1884, column: 11, scope: !2320)
!2374 = !DILocation(line: 1887, column: 21, scope: !2320)
!2375 = !DILocation(line: 1888, column: 31, scope: !2320)
!2376 = !DILocation(line: 1889, column: 11, scope: !2320)
!2377 = !DILocation(line: 1892, column: 21, scope: !2320)
!2378 = !DILocation(line: 1893, column: 11, scope: !2320)
!2379 = !DILocation(line: 1896, column: 21, scope: !2320)
!2380 = !DILocation(line: 1897, column: 31, scope: !2320)
!2381 = !DILocation(line: 1898, column: 11, scope: !2320)
!2382 = !DILocation(line: 1901, column: 34, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1901, column: 15)
!2384 = !DILocation(line: 1901, column: 17, scope: !2383)
!2385 = !DILocation(line: 1901, column: 15, scope: !2320)
!2386 = !DILocation(line: 1902, column: 13, scope: !2383)
!2387 = !DILocation(line: 1904, column: 11, scope: !2320)
!2388 = !DILocation(line: 1907, column: 18, scope: !2320)
!2389 = !DILocation(line: 1908, column: 11, scope: !2320)
!2390 = !DILocation(line: 1911, column: 23, scope: !2320)
!2391 = !DILocation(line: 1912, column: 11, scope: !2320)
!2392 = !DILocation(line: 1915, column: 11, scope: !2320)
!2393 = !DILocation(line: 1916, column: 11, scope: !2320)
!2394 = !DILocation(line: 1917, column: 11, scope: !2320)
!2395 = !DILocation(line: 1920, column: 18, scope: !2320)
!2396 = !DILocation(line: 1921, column: 11, scope: !2320)
!2397 = !DILocation(line: 1924, column: 17, scope: !2320)
!2398 = !DILocation(line: 1925, column: 11, scope: !2320)
!2399 = !DILocation(line: 1928, column: 27, scope: !2320)
!2400 = !DILocation(line: 1929, column: 11, scope: !2320)
!2401 = !DILocation(line: 1932, column: 23, scope: !2320)
!2402 = !DILocation(line: 1933, column: 11, scope: !2320)
!2403 = !DILocation(line: 1936, column: 23, scope: !2320)
!2404 = !DILocation(line: 1937, column: 11, scope: !2320)
!2405 = !DILocation(line: 1940, column: 23, scope: !2320)
!2406 = !DILocation(line: 1941, column: 11, scope: !2320)
!2407 = !DILocation(line: 1944, column: 31, scope: !2320)
!2408 = !DILocation(line: 1944, column: 11, scope: !2320)
!2409 = !DILocation(line: 1945, column: 11, scope: !2320)
!2410 = !DILocation(line: 1948, column: 23, scope: !2320)
!2411 = !DILocation(line: 1949, column: 11, scope: !2320)
!2412 = !DILocation(line: 1952, column: 11, scope: !2320)
!2413 = !DILocation(line: 1953, column: 11, scope: !2320)
!2414 = !DILocation(line: 1956, column: 11, scope: !2320)
!2415 = !DILocation(line: 1957, column: 11, scope: !2320)
!2416 = !DILocation(line: 1960, column: 21, scope: !2320)
!2417 = !DILocation(line: 1961, column: 11, scope: !2320)
!2418 = !DILocation(line: 1964, column: 21, scope: !2320)
!2419 = !DILocation(line: 1965, column: 31, scope: !2320)
!2420 = !DILocation(line: 1966, column: 11, scope: !2320)
!2421 = !DILocation(line: 1969, column: 33, scope: !2320)
!2422 = !DILocation(line: 1970, column: 33, scope: !2320)
!2423 = !DILocation(line: 1969, column: 21, scope: !2320)
!2424 = !DILocation(line: 1969, column: 19, scope: !2320)
!2425 = !DILocation(line: 1971, column: 11, scope: !2320)
!2426 = !DILocation(line: 1974, column: 21, scope: !2320)
!2427 = !DILocation(line: 1975, column: 31, scope: !2320)
!2428 = !DILocation(line: 1976, column: 11, scope: !2320)
!2429 = !DILocation(line: 1979, column: 21, scope: !2320)
!2430 = !DILocation(line: 1980, column: 31, scope: !2320)
!2431 = !DILocation(line: 1981, column: 11, scope: !2320)
!2432 = !DILocation(line: 1985, column: 15, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1985, column: 15)
!2434 = !DILocation(line: 1985, column: 22, scope: !2433)
!2435 = !DILocation(line: 1985, column: 15, scope: !2320)
!2436 = !DILocation(line: 1986, column: 20, scope: !2433)
!2437 = !DILocation(line: 1986, column: 13, scope: !2433)
!2438 = !DILocation(line: 1987, column: 11, scope: !2320)
!2439 = !DILocation(line: 1990, column: 24, scope: !2320)
!2440 = !DILocation(line: 1991, column: 11, scope: !2320)
!2441 = !DILocalVariable(name: "hide", scope: !2442, file: !3, line: 1995, type: !605)
!2442 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1994, column: 11)
!2443 = !DILocation(line: 1995, column: 36, scope: !2442)
!2444 = !DILocation(line: 1995, column: 43, scope: !2442)
!2445 = !DILocation(line: 1996, column: 29, scope: !2442)
!2446 = !DILocation(line: 1996, column: 13, scope: !2442)
!2447 = !DILocation(line: 1996, column: 19, scope: !2442)
!2448 = !DILocation(line: 1996, column: 27, scope: !2442)
!2449 = !DILocation(line: 1997, column: 26, scope: !2442)
!2450 = !DILocation(line: 1997, column: 13, scope: !2442)
!2451 = !DILocation(line: 1997, column: 19, scope: !2442)
!2452 = !DILocation(line: 1997, column: 24, scope: !2442)
!2453 = !DILocation(line: 1998, column: 29, scope: !2442)
!2454 = !DILocation(line: 1998, column: 27, scope: !2442)
!2455 = !DILocation(line: 2000, column: 11, scope: !2320)
!2456 = !DILocation(line: 2003, column: 23, scope: !2320)
!2457 = !DILocation(line: 2003, column: 21, scope: !2320)
!2458 = !DILocation(line: 2004, column: 31, scope: !2320)
!2459 = !DILocation(line: 2005, column: 11, scope: !2320)
!2460 = !DILocation(line: 2008, column: 29, scope: !2320)
!2461 = !DILocation(line: 2009, column: 11, scope: !2320)
!2462 = !DILocation(line: 2012, column: 23, scope: !2320)
!2463 = !DILocation(line: 2012, column: 21, scope: !2320)
!2464 = !DILocation(line: 2013, column: 11, scope: !2320)
!2465 = !DILocation(line: 2016, column: 20, scope: !2320)
!2466 = !DILocation(line: 2016, column: 18, scope: !2320)
!2467 = !DILocation(line: 2017, column: 11, scope: !2320)
!2468 = !DILocation(line: 2020, column: 18, scope: !2320)
!2469 = !DILocation(line: 2021, column: 31, scope: !2320)
!2470 = !DILocation(line: 2021, column: 29, scope: !2320)
!2471 = !DILocation(line: 2022, column: 11, scope: !2320)
!2472 = !DILocalVariable(name: "i", scope: !2473, file: !3, line: 2026, type: !27)
!2473 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 2025, column: 11)
!2474 = !DILocation(line: 2026, column: 17, scope: !2473)
!2475 = !DILocation(line: 2027, column: 17, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 2027, column: 17)
!2477 = !DILocation(line: 2027, column: 17, scope: !2473)
!2478 = !DILocation(line: 2028, column: 19, scope: !2476)
!2479 = !DILocation(line: 2028, column: 17, scope: !2476)
!2480 = !DILocation(line: 2028, column: 15, scope: !2476)
!2481 = !DILocation(line: 2032, column: 17, scope: !2476)
!2482 = !DILocation(line: 2034, column: 33, scope: !2473)
!2483 = !DILocation(line: 2034, column: 35, scope: !2473)
!2484 = !DILocation(line: 2035, column: 33, scope: !2473)
!2485 = !DILocation(line: 2035, column: 37, scope: !2473)
!2486 = !DILocation(line: 2035, column: 39, scope: !2473)
!2487 = !DILocation(line: 2036, column: 37, scope: !2473)
!2488 = !DILocation(line: 2036, column: 40, scope: !2473)
!2489 = !DILocation(line: 0, scope: !2473)
!2490 = !DILocation(line: 2034, column: 30, scope: !2473)
!2491 = !DILocation(line: 2038, column: 17, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 2038, column: 17)
!2493 = !DILocation(line: 2038, column: 17, scope: !2473)
!2494 = !DILocation(line: 2043, column: 25, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 2039, column: 15)
!2496 = !DILocation(line: 2044, column: 15, scope: !2495)
!2497 = !DILocation(line: 2045, column: 13, scope: !2473)
!2498 = !DILocalVariable(name: "i", scope: !2499, file: !3, line: 2050, type: !27)
!2499 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 2049, column: 11)
!2500 = !DILocation(line: 2050, column: 17, scope: !2499)
!2501 = !DILocation(line: 2051, column: 17, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 2051, column: 17)
!2503 = !DILocation(line: 2051, column: 17, scope: !2499)
!2504 = !DILocation(line: 2052, column: 19, scope: !2502)
!2505 = !DILocation(line: 2052, column: 17, scope: !2502)
!2506 = !DILocation(line: 2052, column: 15, scope: !2502)
!2507 = !DILocation(line: 2056, column: 17, scope: !2502)
!2508 = !DILocation(line: 2058, column: 32, scope: !2499)
!2509 = !DILocation(line: 2058, column: 34, scope: !2499)
!2510 = !DILocation(line: 2059, column: 32, scope: !2499)
!2511 = !DILocation(line: 2059, column: 36, scope: !2499)
!2512 = !DILocation(line: 2059, column: 38, scope: !2499)
!2513 = !DILocation(line: 2060, column: 36, scope: !2499)
!2514 = !DILocation(line: 2060, column: 39, scope: !2499)
!2515 = !DILocation(line: 0, scope: !2499)
!2516 = !DILocation(line: 2058, column: 29, scope: !2499)
!2517 = !DILocation(line: 2061, column: 13, scope: !2499)
!2518 = !DILocation(line: 2065, column: 29, scope: !2320)
!2519 = !DILocation(line: 2065, column: 27, scope: !2320)
!2520 = !DILocation(line: 2068, column: 11, scope: !2320)
!2521 = !DILocation(line: 2072, column: 30, scope: !2320)
!2522 = !DILocation(line: 2071, column: 11, scope: !2320)
!2523 = !DILocation(line: 2075, column: 11, scope: !2320)
!2524 = !DILocation(line: 2078, column: 31, scope: !2320)
!2525 = !DILocation(line: 2078, column: 29, scope: !2320)
!2526 = !DILocation(line: 2079, column: 11, scope: !2320)
!2527 = !DILocation(line: 2082, column: 29, scope: !2320)
!2528 = !DILocation(line: 2083, column: 11, scope: !2320)
!2529 = !DILocalVariable(name: "e", scope: !2530, file: !3, line: 2087, type: !109)
!2530 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 2086, column: 11)
!2531 = !DILocation(line: 2087, column: 31, scope: !2530)
!2532 = !DILocation(line: 2087, column: 50, scope: !2530)
!2533 = !DILocation(line: 2087, column: 35, scope: !2530)
!2534 = !DILocation(line: 2089, column: 17, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 2089, column: 17)
!2536 = !DILocation(line: 2089, column: 19, scope: !2535)
!2537 = !DILocation(line: 2089, column: 17, scope: !2530)
!2538 = !DILocation(line: 2090, column: 30, scope: !2535)
!2539 = !DILocation(line: 2090, column: 33, scope: !2535)
!2540 = !DILocation(line: 2090, column: 54, scope: !2535)
!2541 = !DILocation(line: 2090, column: 15, scope: !2535)
!2542 = !DILocation(line: 2091, column: 38, scope: !2530)
!2543 = !DILocation(line: 2091, column: 36, scope: !2530)
!2544 = !DILocation(line: 2092, column: 38, scope: !2530)
!2545 = !DILocation(line: 2092, column: 36, scope: !2530)
!2546 = !DILocation(line: 2094, column: 11, scope: !2320)
!2547 = !DILocation(line: 2097, column: 54, scope: !2320)
!2548 = !DILocation(line: 2097, column: 34, scope: !2320)
!2549 = !DILocation(line: 2099, column: 54, scope: !2320)
!2550 = !DILocation(line: 2099, column: 34, scope: !2320)
!2551 = !DILocation(line: 2100, column: 11, scope: !2320)
!2552 = !DILocation(line: 2103, column: 26, scope: !2320)
!2553 = !DILocation(line: 2104, column: 11, scope: !2320)
!2554 = !DILocation(line: 2106, column: 9, scope: !2320)
!2555 = !DILocation(line: 2108, column: 9, scope: !2320)
!2556 = !DILocation(line: 2111, column: 11, scope: !2320)
!2557 = distinct !{!2557, !2303, !2558}
!2558 = !DILocation(line: 2113, column: 5, scope: !916)
!2559 = !DILocation(line: 2115, column: 9, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !916, file: !3, line: 2115, column: 7)
!2561 = !DILocation(line: 2115, column: 7, scope: !916)
!2562 = !DILocalVariable(name: "ls_block_size", scope: !2563, file: !3, line: 2117, type: !146)
!2563 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 2116, column: 5)
!2564 = !DILocation(line: 2117, column: 19, scope: !2563)
!2565 = !DILocation(line: 2117, column: 35, scope: !2563)
!2566 = !DILocation(line: 2118, column: 22, scope: !2563)
!2567 = !DILocation(line: 2118, column: 7, scope: !2563)
!2568 = !DILocation(line: 2120, column: 11, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 2120, column: 11)
!2570 = !DILocation(line: 2120, column: 25, scope: !2569)
!2571 = !DILocation(line: 2120, column: 28, scope: !2569)
!2572 = !DILocation(line: 2120, column: 11, scope: !2563)
!2573 = !DILocation(line: 2122, column: 36, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 2121, column: 9)
!2575 = !DILocation(line: 2122, column: 34, scope: !2574)
!2576 = !DILocation(line: 2123, column: 36, scope: !2574)
!2577 = !DILocation(line: 2123, column: 34, scope: !2574)
!2578 = !DILocation(line: 2124, column: 9, scope: !2574)
!2579 = !DILocation(line: 2125, column: 11, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 2125, column: 11)
!2581 = !DILocation(line: 2125, column: 11, scope: !2563)
!2582 = !DILocation(line: 2127, column: 29, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 2126, column: 9)
!2584 = !DILocation(line: 2128, column: 29, scope: !2583)
!2585 = !DILocation(line: 2129, column: 9, scope: !2583)
!2586 = !DILocation(line: 2130, column: 5, scope: !2563)
!2587 = !DILocation(line: 2133, column: 13, scope: !916)
!2588 = !DILocation(line: 2133, column: 25, scope: !916)
!2589 = !DILocation(line: 2133, column: 11, scope: !916)
!2590 = !DILocation(line: 2136, column: 14, scope: !916)
!2591 = !DILocation(line: 2136, column: 26, scope: !916)
!2592 = !DILocation(line: 2136, column: 45, scope: !916)
!2593 = !DILocation(line: 2136, column: 11, scope: !916)
!2594 = !DILocalVariable(name: "qs", scope: !916, file: !3, line: 2138, type: !95)
!2595 = !DILocation(line: 2138, column: 22, scope: !916)
!2596 = !DILocation(line: 2138, column: 27, scope: !916)
!2597 = !DILocation(line: 2139, column: 33, scope: !916)
!2598 = !DILocation(line: 2139, column: 40, scope: !916)
!2599 = !DILocation(line: 2140, column: 33, scope: !916)
!2600 = !DILocation(line: 2140, column: 36, scope: !916)
!2601 = !DILocation(line: 2140, column: 43, scope: !916)
!2602 = !DILocation(line: 2141, column: 33, scope: !916)
!2603 = !DILocation(line: 2141, column: 37, scope: !916)
!2604 = !DILocation(line: 2141, column: 49, scope: !916)
!2605 = !DILocation(line: 2141, column: 52, scope: !916)
!2606 = !DILocation(line: 2141, column: 59, scope: !916)
!2607 = !DILocation(line: 2142, column: 33, scope: !916)
!2608 = !DILocation(line: 2142, column: 37, scope: !916)
!2609 = !DILocation(line: 2142, column: 40, scope: !916)
!2610 = !DILocation(line: 2143, column: 37, scope: !916)
!2611 = !DILocation(line: 2143, column: 40, scope: !916)
!2612 = !DILocation(line: 2143, column: 43, scope: !916)
!2613 = !DILocation(line: 2144, column: 37, scope: !916)
!2614 = !DILocation(line: 2144, column: 40, scope: !916)
!2615 = !DILocation(line: 2144, column: 43, scope: !916)
!2616 = !DILocation(line: 0, scope: !916)
!2617 = !DILocation(line: 2139, column: 31, scope: !916)
!2618 = !DILocation(line: 2145, column: 30, scope: !916)
!2619 = !DILocation(line: 2145, column: 28, scope: !916)
!2620 = !DILocation(line: 2146, column: 7, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !916, file: !3, line: 2146, column: 7)
!2622 = !DILocation(line: 2146, column: 10, scope: !2621)
!2623 = !DILocation(line: 2146, column: 7, scope: !916)
!2624 = !DILocation(line: 2147, column: 23, scope: !2621)
!2625 = !DILocation(line: 2147, column: 5, scope: !2621)
!2626 = !DILocation(line: 2148, column: 20, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !916, file: !3, line: 2148, column: 7)
!2628 = !DILocation(line: 2148, column: 17, scope: !2627)
!2629 = !DILocation(line: 2148, column: 7, scope: !916)
!2630 = !DILocalVariable(name: "p", scope: !2631, file: !3, line: 2150, type: !146)
!2631 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 2149, column: 5)
!2632 = !DILocation(line: 2150, column: 19, scope: !2631)
!2633 = !DILocation(line: 2151, column: 25, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 2151, column: 7)
!2635 = !DILocation(line: 2151, column: 41, scope: !2634)
!2636 = !DILocation(line: 2151, column: 17, scope: !2634)
!2637 = !DILocation(line: 2151, column: 14, scope: !2634)
!2638 = !DILocation(line: 2151, column: 12, scope: !2634)
!2639 = !DILocation(line: 2151, column: 56, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 2151, column: 7)
!2641 = !DILocation(line: 2151, column: 55, scope: !2640)
!2642 = !DILocation(line: 2151, column: 7, scope: !2634)
!2643 = !DILocation(line: 2152, column: 27, scope: !2640)
!2644 = !DILocation(line: 2152, column: 54, scope: !2640)
!2645 = !DILocation(line: 2152, column: 53, scope: !2640)
!2646 = !DILocation(line: 2152, column: 9, scope: !2640)
!2647 = !DILocation(line: 2151, column: 60, scope: !2640)
!2648 = !DILocation(line: 2151, column: 7, scope: !2640)
!2649 = distinct !{!2649, !2642, !2650}
!2650 = !DILocation(line: 2152, column: 58, scope: !2634)
!2651 = !DILocation(line: 2153, column: 5, scope: !2631)
!2652 = !DILocation(line: 2155, column: 29, scope: !916)
!2653 = !DILocation(line: 2155, column: 27, scope: !916)
!2654 = !DILocation(line: 2156, column: 21, scope: !916)
!2655 = !DILocation(line: 2156, column: 3, scope: !916)
!2656 = !DILocation(line: 2161, column: 7, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !916, file: !3, line: 2161, column: 7)
!2658 = !DILocation(line: 2161, column: 13, scope: !2657)
!2659 = !DILocation(line: 2161, column: 17, scope: !2657)
!2660 = !DILocation(line: 2161, column: 24, scope: !2657)
!2661 = !DILocation(line: 2161, column: 39, scope: !2657)
!2662 = !DILocation(line: 2161, column: 42, scope: !2657)
!2663 = !DILocation(line: 2161, column: 7, scope: !916)
!2664 = !DILocation(line: 2162, column: 11, scope: !2657)
!2665 = !DILocation(line: 2162, column: 5, scope: !2657)
!2666 = !DILocation(line: 2172, column: 8, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !916, file: !3, line: 2172, column: 7)
!2668 = !DILocation(line: 2172, column: 18, scope: !2667)
!2669 = !DILocation(line: 2172, column: 32, scope: !2667)
!2670 = !DILocation(line: 2172, column: 35, scope: !2667)
!2671 = !DILocation(line: 2172, column: 45, scope: !2667)
!2672 = !DILocation(line: 2173, column: 7, scope: !2667)
!2673 = !DILocation(line: 2173, column: 11, scope: !2667)
!2674 = !DILocation(line: 2173, column: 31, scope: !2667)
!2675 = !DILocation(line: 2173, column: 34, scope: !2667)
!2676 = !DILocation(line: 2173, column: 41, scope: !2667)
!2677 = !DILocation(line: 2172, column: 7, scope: !916)
!2678 = !DILocation(line: 2175, column: 17, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 2174, column: 5)
!2680 = !DILocation(line: 2176, column: 5, scope: !2679)
!2681 = !DILocation(line: 2178, column: 7, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !916, file: !3, line: 2178, column: 7)
!2683 = !DILocation(line: 2178, column: 14, scope: !2682)
!2684 = !DILocation(line: 2178, column: 7, scope: !916)
!2685 = !DILocalVariable(name: "style", scope: !2686, file: !3, line: 2180, type: !143)
!2686 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 2179, column: 5)
!2687 = !DILocation(line: 2180, column: 13, scope: !2686)
!2688 = !DILocation(line: 2180, column: 21, scope: !2686)
!2689 = !DILocation(line: 2183, column: 13, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 2183, column: 11)
!2691 = !DILocation(line: 2183, column: 11, scope: !2686)
!2692 = !DILocation(line: 2184, column: 24, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 2184, column: 13)
!2694 = !DILocation(line: 2184, column: 22, scope: !2693)
!2695 = !DILocation(line: 2184, column: 13, scope: !2690)
!2696 = !DILocation(line: 2185, column: 19, scope: !2693)
!2697 = !DILocation(line: 2185, column: 17, scope: !2693)
!2698 = !DILocation(line: 2185, column: 11, scope: !2693)
!2699 = !DILocation(line: 2184, column: 45, scope: !2693)
!2700 = !DILocation(line: 2187, column: 7, scope: !2686)
!2701 = !DILocation(line: 2187, column: 14, scope: !2686)
!2702 = !DILocation(line: 2189, column: 17, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 2189, column: 15)
!2704 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 2188, column: 9)
!2705 = !DILocation(line: 2189, column: 15, scope: !2704)
!2706 = !DILocation(line: 2190, column: 20, scope: !2703)
!2707 = !DILocation(line: 2190, column: 13, scope: !2703)
!2708 = !DILocation(line: 2191, column: 17, scope: !2704)
!2709 = distinct !{!2709, !2700, !2710}
!2710 = !DILocation(line: 2192, column: 9, scope: !2686)
!2711 = !DILocation(line: 2194, column: 12, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 2194, column: 11)
!2713 = !DILocation(line: 2194, column: 11, scope: !2712)
!2714 = !DILocation(line: 2194, column: 18, scope: !2712)
!2715 = !DILocation(line: 2194, column: 11, scope: !2686)
!2716 = !DILocalVariable(name: "p0", scope: !2717, file: !3, line: 2196, type: !143)
!2717 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 2195, column: 9)
!2718 = !DILocation(line: 2196, column: 17, scope: !2717)
!2719 = !DILocation(line: 2196, column: 22, scope: !2717)
!2720 = !DILocation(line: 2196, column: 28, scope: !2717)
!2721 = !DILocalVariable(name: "p1", scope: !2717, file: !3, line: 2197, type: !143)
!2722 = !DILocation(line: 2197, column: 17, scope: !2717)
!2723 = !DILocation(line: 2197, column: 30, scope: !2717)
!2724 = !DILocation(line: 2197, column: 22, scope: !2717)
!2725 = !DILocation(line: 2198, column: 17, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 2198, column: 15)
!2727 = !DILocation(line: 2198, column: 15, scope: !2717)
!2728 = !DILocation(line: 2199, column: 18, scope: !2726)
!2729 = !DILocation(line: 2199, column: 16, scope: !2726)
!2730 = !DILocation(line: 2199, column: 13, scope: !2726)
!2731 = !DILocation(line: 2202, column: 27, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 2202, column: 19)
!2733 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 2201, column: 13)
!2734 = !DILocation(line: 2202, column: 30, scope: !2732)
!2735 = !DILocation(line: 2202, column: 19, scope: !2732)
!2736 = !DILocation(line: 2202, column: 19, scope: !2733)
!2737 = !DILocation(line: 2203, column: 17, scope: !2732)
!2738 = !DILocation(line: 2205, column: 18, scope: !2733)
!2739 = !DILocation(line: 2205, column: 21, scope: !2733)
!2740 = !DILocation(line: 2207, column: 33, scope: !2717)
!2741 = !DILocation(line: 2207, column: 31, scope: !2717)
!2742 = !DILocation(line: 2208, column: 33, scope: !2717)
!2743 = !DILocation(line: 2208, column: 31, scope: !2717)
!2744 = !DILocation(line: 2209, column: 9, scope: !2717)
!2745 = !DILocalVariable(name: "res", scope: !2746, file: !3, line: 2212, type: !675)
!2746 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 2211, column: 9)
!2747 = !DILocation(line: 2212, column: 21, scope: !2746)
!2748 = !DILocation(line: 2212, column: 37, scope: !2746)
!2749 = !DILocation(line: 2212, column: 27, scope: !2746)
!2750 = !DILocation(line: 2215, column: 15, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 2215, column: 15)
!2752 = !DILocation(line: 2215, column: 19, scope: !2751)
!2753 = !DILocation(line: 2215, column: 15, scope: !2746)
!2754 = !DILocation(line: 2220, column: 47, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 2216, column: 13)
!2756 = !DILocation(line: 2220, column: 54, scope: !2755)
!2757 = !DILocation(line: 2220, column: 15, scope: !2755)
!2758 = !DILocation(line: 2227, column: 15, scope: !2755)
!2759 = !DILocalVariable(name: "p", scope: !2755, file: !3, line: 2228, type: !681)
!2760 = !DILocation(line: 2228, column: 34, scope: !2755)
!2761 = !DILocation(line: 2229, column: 15, scope: !2755)
!2762 = !DILocation(line: 2229, column: 23, scope: !2755)
!2763 = !DILocation(line: 2229, column: 22, scope: !2755)
!2764 = !DILocation(line: 2230, column: 26, scope: !2755)
!2765 = !DILocation(line: 2230, column: 56, scope: !2755)
!2766 = !DILocation(line: 2230, column: 54, scope: !2755)
!2767 = !DILocation(line: 2230, column: 17, scope: !2755)
!2768 = distinct !{!2768, !2761, !2769}
!2769 = !DILocation(line: 2230, column: 58, scope: !2755)
!2770 = !DILocation(line: 2231, column: 15, scope: !2755)
!2771 = !DILocation(line: 2233, column: 15, scope: !2755)
!2772 = !DILocation(line: 2235, column: 19, scope: !2746)
!2773 = !DILocation(line: 2235, column: 11, scope: !2746)
!2774 = !DILocation(line: 2238, column: 57, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 2236, column: 13)
!2776 = !DILocation(line: 2238, column: 35, scope: !2775)
!2777 = !DILocation(line: 2240, column: 15, scope: !2775)
!2778 = !DILocation(line: 2243, column: 57, scope: !2775)
!2779 = !DILocation(line: 2243, column: 35, scope: !2775)
!2780 = !DILocation(line: 2244, column: 15, scope: !2775)
!2781 = !DILocation(line: 2247, column: 35, scope: !2775)
!2782 = !DILocation(line: 2248, column: 35, scope: !2775)
!2783 = !DILocation(line: 2249, column: 15, scope: !2775)
!2784 = !DILocation(line: 2252, column: 19, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 2252, column: 19)
!2786 = !DILocation(line: 2252, column: 19, scope: !2775)
!2787 = !DILocalVariable(name: "i", scope: !2788, file: !3, line: 2254, type: !27)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 2254, column: 19)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 2253, column: 17)
!2790 = !DILocation(line: 2254, column: 28, scope: !2788)
!2791 = !DILocation(line: 2254, column: 24, scope: !2788)
!2792 = !DILocation(line: 2254, column: 35, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 2254, column: 19)
!2794 = !DILocation(line: 2254, column: 37, scope: !2793)
!2795 = !DILocation(line: 2254, column: 19, scope: !2788)
!2796 = !DILocation(line: 2256, column: 57, scope: !2793)
!2797 = !DILocation(line: 2256, column: 40, scope: !2793)
!2798 = !DILocation(line: 2256, column: 23, scope: !2793)
!2799 = !DILocation(line: 2255, column: 38, scope: !2793)
!2800 = !DILocation(line: 2255, column: 21, scope: !2793)
!2801 = !DILocation(line: 2255, column: 41, scope: !2793)
!2802 = !DILocation(line: 2254, column: 43, scope: !2793)
!2803 = !DILocation(line: 2254, column: 19, scope: !2793)
!2804 = distinct !{!2804, !2795, !2805}
!2805 = !DILocation(line: 2256, column: 68, scope: !2788)
!2806 = !DILocation(line: 2257, column: 17, scope: !2789)
!2807 = !DILocation(line: 2258, column: 13, scope: !2775)
!2808 = !DILocation(line: 2261, column: 7, scope: !2686)
!2809 = !DILocation(line: 2262, column: 5, scope: !2686)
!2810 = !DILocation(line: 2264, column: 10, scope: !916)
!2811 = !DILocation(line: 2264, column: 3, scope: !916)
!2812 = !DILocation(line: 2265, column: 1, scope: !916)
!2813 = distinct !DISubprogram(name: "parse_ls_color", scope: !3, file: !3, line: 2510, type: !526, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2814 = !DILocalVariable(name: "p", scope: !2813, file: !3, line: 2512, type: !146)
!2815 = !DILocation(line: 2512, column: 15, scope: !2813)
!2816 = !DILocalVariable(name: "buf", scope: !2813, file: !3, line: 2513, type: !143)
!2817 = !DILocation(line: 2513, column: 9, scope: !2813)
!2818 = !DILocalVariable(name: "ind_no", scope: !2813, file: !3, line: 2514, type: !27)
!2819 = !DILocation(line: 2514, column: 7, scope: !2813)
!2820 = !DILocalVariable(name: "label", scope: !2813, file: !3, line: 2515, type: !253)
!2821 = !DILocation(line: 2515, column: 8, scope: !2813)
!2822 = !DILocalVariable(name: "ext", scope: !2813, file: !3, line: 2516, type: !698)
!2823 = !DILocation(line: 2516, column: 26, scope: !2813)
!2824 = !DILocation(line: 2518, column: 12, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 2518, column: 7)
!2826 = !DILocation(line: 2518, column: 10, scope: !2825)
!2827 = !DILocation(line: 2518, column: 34, scope: !2825)
!2828 = !DILocation(line: 2518, column: 42, scope: !2825)
!2829 = !DILocation(line: 2518, column: 46, scope: !2825)
!2830 = !DILocation(line: 2518, column: 45, scope: !2825)
!2831 = !DILocation(line: 2518, column: 48, scope: !2825)
!2832 = !DILocation(line: 2518, column: 7, scope: !2813)
!2833 = !DILocalVariable(name: "colorterm", scope: !2834, file: !3, line: 2524, type: !146)
!2834 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 2519, column: 5)
!2835 = !DILocation(line: 2524, column: 19, scope: !2834)
!2836 = !DILocation(line: 2524, column: 31, scope: !2834)
!2837 = !DILocation(line: 2525, column: 14, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 2525, column: 11)
!2839 = !DILocation(line: 2525, column: 24, scope: !2838)
!2840 = !DILocation(line: 2525, column: 28, scope: !2838)
!2841 = !DILocation(line: 2525, column: 27, scope: !2838)
!2842 = !DILocation(line: 2525, column: 39, scope: !2838)
!2843 = !DILocation(line: 2525, column: 44, scope: !2838)
!2844 = !DILocation(line: 2525, column: 11, scope: !2834)
!2845 = !DILocation(line: 2526, column: 26, scope: !2838)
!2846 = !DILocation(line: 2526, column: 9, scope: !2838)
!2847 = !DILocation(line: 2527, column: 7, scope: !2834)
!2848 = !DILocation(line: 2530, column: 7, scope: !2813)
!2849 = !DILocation(line: 2531, column: 11, scope: !2813)
!2850 = !DILocation(line: 2531, column: 3, scope: !2813)
!2851 = !DILocation(line: 2537, column: 30, scope: !2813)
!2852 = !DILocation(line: 2537, column: 21, scope: !2813)
!2853 = !DILocation(line: 2537, column: 19, scope: !2813)
!2854 = !DILocation(line: 2537, column: 7, scope: !2813)
!2855 = !DILocalVariable(name: "state", scope: !2813, file: !3, line: 2539, type: !129)
!2856 = !DILocation(line: 2539, column: 20, scope: !2813)
!2857 = !DILocation(line: 2540, column: 3, scope: !2813)
!2858 = !DILocation(line: 2542, column: 15, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 2541, column: 5)
!2860 = !DILocation(line: 2542, column: 7, scope: !2859)
!2861 = !DILocation(line: 2545, column: 20, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 2543, column: 9)
!2863 = !DILocation(line: 2545, column: 19, scope: !2862)
!2864 = !DILocation(line: 2545, column: 11, scope: !2862)
!2865 = !DILocation(line: 2548, column: 15, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 2546, column: 13)
!2867 = !DILocation(line: 2549, column: 15, scope: !2866)
!2868 = !DILocation(line: 2557, column: 21, scope: !2866)
!2869 = !DILocation(line: 2557, column: 19, scope: !2866)
!2870 = !DILocation(line: 2558, column: 27, scope: !2866)
!2871 = !DILocation(line: 2558, column: 15, scope: !2866)
!2872 = !DILocation(line: 2558, column: 20, scope: !2866)
!2873 = !DILocation(line: 2558, column: 25, scope: !2866)
!2874 = !DILocation(line: 2559, column: 32, scope: !2866)
!2875 = !DILocation(line: 2559, column: 30, scope: !2866)
!2876 = !DILocation(line: 2561, column: 15, scope: !2866)
!2877 = !DILocation(line: 2562, column: 33, scope: !2866)
!2878 = !DILocation(line: 2562, column: 15, scope: !2866)
!2879 = !DILocation(line: 2562, column: 20, scope: !2866)
!2880 = !DILocation(line: 2562, column: 24, scope: !2866)
!2881 = !DILocation(line: 2562, column: 31, scope: !2866)
!2882 = !DILocation(line: 2564, column: 59, scope: !2866)
!2883 = !DILocation(line: 2564, column: 64, scope: !2866)
!2884 = !DILocation(line: 2564, column: 68, scope: !2866)
!2885 = !DILocation(line: 2564, column: 24, scope: !2866)
!2886 = !DILocation(line: 2564, column: 21, scope: !2866)
!2887 = !DILocation(line: 2566, column: 15, scope: !2866)
!2888 = !DILocation(line: 2569, column: 21, scope: !2866)
!2889 = !DILocation(line: 2570, column: 15, scope: !2866)
!2890 = !DILocation(line: 2573, column: 29, scope: !2866)
!2891 = !DILocation(line: 2573, column: 26, scope: !2866)
!2892 = !DILocation(line: 2573, column: 15, scope: !2866)
!2893 = !DILocation(line: 2573, column: 24, scope: !2866)
!2894 = !DILocation(line: 2574, column: 21, scope: !2866)
!2895 = !DILocation(line: 2575, column: 15, scope: !2866)
!2896 = !DILocation(line: 2577, column: 11, scope: !2862)
!2897 = !DILocation(line: 2580, column: 16, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 2580, column: 15)
!2899 = !DILocation(line: 2580, column: 15, scope: !2898)
!2900 = !DILocation(line: 2580, column: 15, scope: !2862)
!2901 = !DILocation(line: 2582, column: 29, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 2581, column: 13)
!2903 = !DILocation(line: 2582, column: 26, scope: !2902)
!2904 = !DILocation(line: 2582, column: 15, scope: !2902)
!2905 = !DILocation(line: 2582, column: 24, scope: !2902)
!2906 = !DILocation(line: 2583, column: 21, scope: !2902)
!2907 = !DILocation(line: 2584, column: 13, scope: !2902)
!2908 = !DILocation(line: 2586, column: 19, scope: !2898)
!2909 = !DILocation(line: 2587, column: 11, scope: !2862)
!2910 = !DILocation(line: 2590, column: 17, scope: !2862)
!2911 = !DILocation(line: 2591, column: 18, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 2591, column: 15)
!2913 = !DILocation(line: 2591, column: 15, scope: !2912)
!2914 = !DILocation(line: 2591, column: 22, scope: !2912)
!2915 = !DILocation(line: 2591, column: 15, scope: !2862)
!2916 = !DILocation(line: 2593, column: 27, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 2593, column: 15)
!2918 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 2592, column: 13)
!2919 = !DILocation(line: 2593, column: 20, scope: !2917)
!2920 = !DILocation(line: 2593, column: 47, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 2593, column: 15)
!2922 = !DILocation(line: 2593, column: 32, scope: !2921)
!2923 = !DILocation(line: 2593, column: 55, scope: !2921)
!2924 = !DILocation(line: 2593, column: 15, scope: !2917)
!2925 = !DILocation(line: 2595, column: 23, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 2595, column: 23)
!2927 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 2594, column: 17)
!2928 = !DILocation(line: 2595, column: 23, scope: !2927)
!2929 = !DILocation(line: 2597, column: 56, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 2596, column: 21)
!2931 = !DILocation(line: 2597, column: 39, scope: !2930)
!2932 = !DILocation(line: 2597, column: 23, scope: !2930)
!2933 = !DILocation(line: 2597, column: 47, scope: !2930)
!2934 = !DILocation(line: 2597, column: 54, scope: !2930)
!2935 = !DILocation(line: 2599, column: 67, scope: !2930)
!2936 = !DILocation(line: 2599, column: 51, scope: !2930)
!2937 = !DILocation(line: 2599, column: 75, scope: !2930)
!2938 = !DILocation(line: 2598, column: 32, scope: !2930)
!2939 = !DILocation(line: 2598, column: 29, scope: !2930)
!2940 = !DILocation(line: 2601, column: 23, scope: !2930)
!2941 = !DILocation(line: 2603, column: 17, scope: !2927)
!2942 = !DILocation(line: 2593, column: 64, scope: !2921)
!2943 = !DILocation(line: 2593, column: 15, scope: !2921)
!2944 = distinct !{!2944, !2924, !2945}
!2945 = !DILocation(line: 2603, column: 17, scope: !2917)
!2946 = !DILocation(line: 2604, column: 19, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 2604, column: 19)
!2948 = !DILocation(line: 2604, column: 25, scope: !2947)
!2949 = !DILocation(line: 2604, column: 19, scope: !2918)
!2950 = !DILocation(line: 2605, column: 30, scope: !2947)
!2951 = !DILocation(line: 2605, column: 67, scope: !2947)
!2952 = !DILocation(line: 2605, column: 60, scope: !2947)
!2953 = !DILocation(line: 2605, column: 17, scope: !2947)
!2954 = !DILocation(line: 2606, column: 13, scope: !2918)
!2955 = !DILocation(line: 2607, column: 11, scope: !2862)
!2956 = !DILocation(line: 2610, column: 18, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 2610, column: 15)
!2958 = !DILocation(line: 2610, column: 15, scope: !2957)
!2959 = !DILocation(line: 2610, column: 22, scope: !2957)
!2960 = !DILocation(line: 2610, column: 15, scope: !2862)
!2961 = !DILocation(line: 2612, column: 33, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 2611, column: 13)
!2963 = !DILocation(line: 2612, column: 15, scope: !2962)
!2964 = !DILocation(line: 2612, column: 20, scope: !2962)
!2965 = !DILocation(line: 2612, column: 24, scope: !2962)
!2966 = !DILocation(line: 2612, column: 31, scope: !2962)
!2967 = !DILocation(line: 2613, column: 60, scope: !2962)
!2968 = !DILocation(line: 2613, column: 65, scope: !2962)
!2969 = !DILocation(line: 2613, column: 69, scope: !2962)
!2970 = !DILocation(line: 2613, column: 24, scope: !2962)
!2971 = !DILocation(line: 2613, column: 21, scope: !2962)
!2972 = !DILocation(line: 2615, column: 13, scope: !2962)
!2973 = !DILocation(line: 2617, column: 19, scope: !2957)
!2974 = !DILocation(line: 2618, column: 11, scope: !2862)
!2975 = !DILocation(line: 2621, column: 11, scope: !2862)
!2976 = !DILocation(line: 2624, column: 11, scope: !2862)
!2977 = distinct !{!2977, !2857, !2978}
!2978 = !DILocation(line: 2626, column: 5, scope: !2813)
!2979 = !DILabel(scope: !2813, name: "done", file: !3, line: 2627)
!2980 = !DILocation(line: 2627, column: 2, scope: !2813)
!2981 = !DILocation(line: 2629, column: 7, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 2629, column: 7)
!2983 = !DILocation(line: 2629, column: 13, scope: !2982)
!2984 = !DILocation(line: 2629, column: 7, scope: !2813)
!2985 = !DILocalVariable(name: "e", scope: !2986, file: !3, line: 2631, type: !698)
!2986 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 2630, column: 5)
!2987 = !DILocation(line: 2631, column: 30, scope: !2986)
!2988 = !DILocalVariable(name: "e2", scope: !2986, file: !3, line: 2632, type: !698)
!2989 = !DILocation(line: 2632, column: 30, scope: !2986)
!2990 = !DILocation(line: 2635, column: 14, scope: !2986)
!2991 = !DILocation(line: 2634, column: 7, scope: !2986)
!2992 = !DILocation(line: 2636, column: 13, scope: !2986)
!2993 = !DILocation(line: 2636, column: 7, scope: !2986)
!2994 = !DILocation(line: 2637, column: 16, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 2637, column: 7)
!2996 = !DILocation(line: 2637, column: 14, scope: !2995)
!2997 = !DILocation(line: 2637, column: 12, scope: !2995)
!2998 = !DILocation(line: 2637, column: 32, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2637, column: 7)
!3000 = !DILocation(line: 2637, column: 34, scope: !2999)
!3001 = !DILocation(line: 2637, column: 7, scope: !2995)
!3002 = !DILocation(line: 2639, column: 16, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 2638, column: 9)
!3004 = !DILocation(line: 2639, column: 14, scope: !3003)
!3005 = !DILocation(line: 2640, column: 15, scope: !3003)
!3006 = !DILocation(line: 2640, column: 18, scope: !3003)
!3007 = !DILocation(line: 2640, column: 13, scope: !3003)
!3008 = !DILocation(line: 2641, column: 17, scope: !3003)
!3009 = !DILocation(line: 2641, column: 11, scope: !3003)
!3010 = !DILocation(line: 2637, column: 7, scope: !2999)
!3011 = distinct !{!3011, !3001, !3012}
!3012 = !DILocation(line: 2642, column: 9, scope: !2995)
!3013 = !DILocation(line: 2643, column: 24, scope: !2986)
!3014 = !DILocation(line: 2644, column: 5, scope: !2986)
!3015 = !DILocation(line: 2646, column: 31, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 2646, column: 7)
!3017 = !DILocation(line: 2646, column: 35, scope: !3016)
!3018 = !DILocation(line: 2647, column: 7, scope: !3016)
!3019 = !DILocation(line: 2647, column: 11, scope: !3016)
!3020 = !DILocation(line: 2646, column: 7, scope: !2813)
!3021 = !DILocation(line: 2648, column: 31, scope: !3016)
!3022 = !DILocation(line: 2648, column: 5, scope: !3016)
!3023 = !DILocation(line: 2649, column: 1, scope: !2813)
!3024 = distinct !DISubprogram(name: "is_colored", scope: !3, file: !3, line: 1256, type: !3025, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!141, !53}
!3027 = !DILocalVariable(name: "type", arg: 1, scope: !3024, file: !3, line: 1256, type: !53)
!3028 = !DILocation(line: 1256, column: 31, scope: !3024)
!3029 = !DILocalVariable(name: "len", scope: !3024, file: !3, line: 1258, type: !149)
!3030 = !DILocation(line: 1258, column: 10, scope: !3024)
!3031 = !DILocation(line: 1258, column: 32, scope: !3024)
!3032 = !DILocation(line: 1258, column: 16, scope: !3024)
!3033 = !DILocation(line: 1258, column: 38, scope: !3024)
!3034 = !DILocalVariable(name: "s", scope: !3024, file: !3, line: 1259, type: !146)
!3035 = !DILocation(line: 1259, column: 15, scope: !3024)
!3036 = !DILocation(line: 1259, column: 35, scope: !3024)
!3037 = !DILocation(line: 1259, column: 19, scope: !3024)
!3038 = !DILocation(line: 1259, column: 41, scope: !3024)
!3039 = !DILocation(line: 1260, column: 13, scope: !3024)
!3040 = !DILocation(line: 1260, column: 17, scope: !3024)
!3041 = !DILocation(line: 1261, column: 13, scope: !3024)
!3042 = !DILocation(line: 1261, column: 17, scope: !3024)
!3043 = !DILocation(line: 1261, column: 21, scope: !3024)
!3044 = !DILocation(line: 1261, column: 26, scope: !3024)
!3045 = !DILocation(line: 1261, column: 29, scope: !3024)
!3046 = !DILocation(line: 1261, column: 50, scope: !3024)
!3047 = !DILocation(line: 1262, column: 13, scope: !3024)
!3048 = !DILocation(line: 1262, column: 17, scope: !3024)
!3049 = !DILocation(line: 1262, column: 21, scope: !3024)
!3050 = !DILocation(line: 1262, column: 26, scope: !3024)
!3051 = !DILocation(line: 1262, column: 29, scope: !3024)
!3052 = !DILocation(line: 1262, column: 51, scope: !3024)
!3053 = !DILocation(line: 0, scope: !3024)
!3054 = !DILocation(line: 1260, column: 10, scope: !3024)
!3055 = !DILocation(line: 1260, column: 3, scope: !3024)
!3056 = distinct !DISubprogram(name: "dev_ino_hash", scope: !3, file: !3, line: 1192, type: !1218, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3057 = !DILocalVariable(name: "x", arg: 1, scope: !3056, file: !3, line: 1192, type: !175)
!3058 = !DILocation(line: 1192, column: 27, scope: !3056)
!3059 = !DILocalVariable(name: "table_size", arg: 2, scope: !3056, file: !3, line: 1192, type: !149)
!3060 = !DILocation(line: 1192, column: 37, scope: !3056)
!3061 = !DILocalVariable(name: "p", scope: !3056, file: !3, line: 1194, type: !446)
!3062 = !DILocation(line: 1194, column: 25, scope: !3056)
!3063 = !DILocation(line: 1194, column: 29, scope: !3056)
!3064 = !DILocation(line: 1195, column: 22, scope: !3056)
!3065 = !DILocation(line: 1195, column: 25, scope: !3056)
!3066 = !DILocation(line: 1195, column: 34, scope: !3056)
!3067 = !DILocation(line: 1195, column: 32, scope: !3056)
!3068 = !DILocation(line: 1195, column: 3, scope: !3056)
!3069 = distinct !DISubprogram(name: "dev_ino_compare", scope: !3, file: !3, line: 1199, type: !1223, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3070 = !DILocalVariable(name: "x", arg: 1, scope: !3069, file: !3, line: 1199, type: !175)
!3071 = !DILocation(line: 1199, column: 30, scope: !3069)
!3072 = !DILocalVariable(name: "y", arg: 2, scope: !3069, file: !3, line: 1199, type: !175)
!3073 = !DILocation(line: 1199, column: 45, scope: !3069)
!3074 = !DILocalVariable(name: "a", scope: !3069, file: !3, line: 1201, type: !446)
!3075 = !DILocation(line: 1201, column: 25, scope: !3069)
!3076 = !DILocation(line: 1201, column: 29, scope: !3069)
!3077 = !DILocalVariable(name: "b", scope: !3069, file: !3, line: 1202, type: !446)
!3078 = !DILocation(line: 1202, column: 25, scope: !3069)
!3079 = !DILocation(line: 1202, column: 29, scope: !3069)
!3080 = !DILocation(line: 1203, column: 10, scope: !3069)
!3081 = !DILocation(line: 0, scope: !3069)
!3082 = !DILocation(line: 1203, column: 3, scope: !3069)
!3083 = distinct !DISubprogram(name: "dev_ino_free", scope: !3, file: !3, line: 1207, type: !490, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3084 = !DILocalVariable(name: "x", arg: 1, scope: !3083, file: !3, line: 1207, type: !167)
!3085 = !DILocation(line: 1207, column: 21, scope: !3083)
!3086 = !DILocation(line: 1209, column: 9, scope: !3083)
!3087 = !DILocation(line: 1209, column: 3, scope: !3083)
!3088 = !DILocation(line: 1210, column: 1, scope: !3083)
!3089 = distinct !DISubprogram(name: "file_escape_init", scope: !3, file: !3, line: 1085, type: !526, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3090 = !DILocalVariable(name: "i", scope: !3091, file: !3, line: 1087, type: !27)
!3091 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1087, column: 3)
!3092 = !DILocation(line: 1087, column: 12, scope: !3091)
!3093 = !DILocation(line: 1087, column: 8, scope: !3091)
!3094 = !DILocation(line: 1087, column: 19, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1087, column: 3)
!3096 = !DILocation(line: 1087, column: 21, scope: !3095)
!3097 = !DILocation(line: 1087, column: 3, scope: !3091)
!3098 = !DILocation(line: 1088, column: 30, scope: !3095)
!3099 = !DILocation(line: 1088, column: 19, scope: !3095)
!3100 = !DILocation(line: 1088, column: 33, scope: !3095)
!3101 = !DILocation(line: 1088, column: 36, scope: !3095)
!3102 = !DILocation(line: 1088, column: 38, scope: !3095)
!3103 = !DILocation(line: 1088, column: 45, scope: !3095)
!3104 = !DILocation(line: 1088, column: 48, scope: !3095)
!3105 = !DILocation(line: 1088, column: 50, scope: !3095)
!3106 = !DILocation(line: 1088, column: 57, scope: !3095)
!3107 = !DILocation(line: 1088, column: 60, scope: !3095)
!3108 = !DILocation(line: 1088, column: 62, scope: !3095)
!3109 = !DILocation(line: 1088, column: 69, scope: !3095)
!3110 = !DILocation(line: 1088, column: 72, scope: !3095)
!3111 = !DILocation(line: 1088, column: 74, scope: !3095)
!3112 = !DILocation(line: 1088, column: 13, scope: !3095)
!3113 = !DILocation(line: 1088, column: 5, scope: !3095)
!3114 = !DILocation(line: 1088, column: 16, scope: !3095)
!3115 = !DILocation(line: 1087, column: 29, scope: !3095)
!3116 = !DILocation(line: 1087, column: 3, scope: !3095)
!3117 = distinct !{!3117, !3097, !3118}
!3118 = !DILocation(line: 1088, column: 77, scope: !3091)
!3119 = !DILocation(line: 1089, column: 1, scope: !3089)
!3120 = distinct !DISubprogram(name: "clear_files", scope: !3, file: !3, line: 2990, type: !526, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3121 = !DILocalVariable(name: "i", scope: !3122, file: !3, line: 2992, type: !149)
!3122 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 2992, column: 3)
!3123 = !DILocation(line: 2992, column: 15, scope: !3122)
!3124 = !DILocation(line: 2992, column: 8, scope: !3122)
!3125 = !DILocation(line: 2992, column: 22, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 2992, column: 3)
!3127 = !DILocation(line: 2992, column: 26, scope: !3126)
!3128 = !DILocation(line: 2992, column: 24, scope: !3126)
!3129 = !DILocation(line: 2992, column: 3, scope: !3122)
!3130 = !DILocalVariable(name: "f", scope: !3131, file: !3, line: 2994, type: !258)
!3131 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 2993, column: 5)
!3132 = !DILocation(line: 2994, column: 24, scope: !3131)
!3133 = !DILocation(line: 2994, column: 28, scope: !3131)
!3134 = !DILocation(line: 2994, column: 40, scope: !3131)
!3135 = !DILocation(line: 2995, column: 17, scope: !3131)
!3136 = !DILocation(line: 2995, column: 7, scope: !3131)
!3137 = !DILocation(line: 2996, column: 5, scope: !3131)
!3138 = !DILocation(line: 2992, column: 39, scope: !3126)
!3139 = !DILocation(line: 2992, column: 3, scope: !3126)
!3140 = distinct !{!3140, !3129, !3141}
!3141 = !DILocation(line: 2996, column: 5, scope: !3122)
!3142 = !DILocation(line: 2998, column: 14, scope: !3120)
!3143 = !DILocation(line: 2999, column: 19, scope: !3120)
!3144 = !DILocation(line: 3000, column: 15, scope: !3120)
!3145 = !DILocation(line: 3001, column: 22, scope: !3120)
!3146 = !DILocation(line: 3002, column: 20, scope: !3120)
!3147 = !DILocation(line: 3003, column: 15, scope: !3120)
!3148 = !DILocation(line: 3004, column: 15, scope: !3120)
!3149 = !DILocation(line: 3005, column: 15, scope: !3120)
!3150 = !DILocation(line: 3006, column: 16, scope: !3120)
!3151 = !DILocation(line: 3007, column: 18, scope: !3120)
!3152 = !DILocation(line: 3008, column: 29, scope: !3120)
!3153 = !DILocation(line: 3009, column: 29, scope: !3120)
!3154 = !DILocation(line: 3010, column: 19, scope: !3120)
!3155 = !DILocation(line: 3011, column: 1, scope: !3120)
!3156 = distinct !DISubprogram(name: "gobble_file", scope: !3, file: !3, line: 3111, type: !3157, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!168, !146, !36, !267, !141, !146}
!3159 = !DILocalVariable(name: "name", arg: 1, scope: !3156, file: !3, line: 3111, type: !146)
!3160 = !DILocation(line: 3111, column: 26, scope: !3156)
!3161 = !DILocalVariable(name: "type", arg: 2, scope: !3156, file: !3, line: 3111, type: !36)
!3162 = !DILocation(line: 3111, column: 46, scope: !3156)
!3163 = !DILocalVariable(name: "inode", arg: 3, scope: !3156, file: !3, line: 3111, type: !267)
!3164 = !DILocation(line: 3111, column: 58, scope: !3156)
!3165 = !DILocalVariable(name: "command_line_arg", arg: 4, scope: !3156, file: !3, line: 3112, type: !141)
!3166 = !DILocation(line: 3112, column: 19, scope: !3156)
!3167 = !DILocalVariable(name: "dirname", arg: 5, scope: !3156, file: !3, line: 3112, type: !146)
!3168 = !DILocation(line: 3112, column: 49, scope: !3156)
!3169 = !DILocalVariable(name: "blocks", scope: !3156, file: !3, line: 3114, type: !168)
!3170 = !DILocation(line: 3114, column: 13, scope: !3156)
!3171 = !DILocalVariable(name: "f", scope: !3156, file: !3, line: 3115, type: !258)
!3172 = !DILocation(line: 3115, column: 20, scope: !3156)
!3173 = !DILocation(line: 3119, column: 3, scope: !3156)
!3174 = !DILocation(line: 3121, column: 7, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 3121, column: 7)
!3176 = !DILocation(line: 3121, column: 21, scope: !3175)
!3177 = !DILocation(line: 3121, column: 18, scope: !3175)
!3178 = !DILocation(line: 3121, column: 7, scope: !3156)
!3179 = !DILocation(line: 3123, column: 29, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 3122, column: 5)
!3181 = !DILocation(line: 3123, column: 39, scope: !3180)
!3182 = !DILocation(line: 3123, column: 18, scope: !3180)
!3183 = !DILocation(line: 3123, column: 16, scope: !3180)
!3184 = !DILocation(line: 3124, column: 19, scope: !3180)
!3185 = !DILocation(line: 3125, column: 5, scope: !3180)
!3186 = !DILocation(line: 3127, column: 8, scope: !3156)
!3187 = !DILocation(line: 3127, column: 17, scope: !3156)
!3188 = !DILocation(line: 3127, column: 5, scope: !3156)
!3189 = !DILocation(line: 3128, column: 11, scope: !3156)
!3190 = !DILocation(line: 3128, column: 3, scope: !3156)
!3191 = !DILocation(line: 3129, column: 20, scope: !3156)
!3192 = !DILocation(line: 3129, column: 3, scope: !3156)
!3193 = !DILocation(line: 3129, column: 6, scope: !3156)
!3194 = !DILocation(line: 3129, column: 11, scope: !3156)
!3195 = !DILocation(line: 3129, column: 18, scope: !3156)
!3196 = !DILocation(line: 3130, column: 17, scope: !3156)
!3197 = !DILocation(line: 3130, column: 3, scope: !3156)
!3198 = !DILocation(line: 3130, column: 6, scope: !3156)
!3199 = !DILocation(line: 3130, column: 15, scope: !3156)
!3200 = !DILocation(line: 3132, column: 3, scope: !3156)
!3201 = !DILocation(line: 3132, column: 6, scope: !3156)
!3202 = !DILocation(line: 3132, column: 13, scope: !3156)
!3203 = !DILocation(line: 3133, column: 10, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 3133, column: 7)
!3205 = !DILocation(line: 3133, column: 27, scope: !3204)
!3206 = !DILocation(line: 3133, column: 30, scope: !3204)
!3207 = !DILocation(line: 3133, column: 7, scope: !3156)
!3208 = !DILocation(line: 3136, column: 34, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 3134, column: 5)
!3210 = !DILocation(line: 3136, column: 19, scope: !3209)
!3211 = !DILocation(line: 3136, column: 7, scope: !3209)
!3212 = !DILocation(line: 3136, column: 10, scope: !3209)
!3213 = !DILocation(line: 3136, column: 17, scope: !3209)
!3214 = !DILocation(line: 3137, column: 11, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 3137, column: 11)
!3216 = !DILocation(line: 3137, column: 14, scope: !3215)
!3217 = !DILocation(line: 3137, column: 11, scope: !3209)
!3218 = !DILocation(line: 3138, column: 25, scope: !3215)
!3219 = !DILocation(line: 3138, column: 9, scope: !3215)
!3220 = !DILocation(line: 3139, column: 5, scope: !3209)
!3221 = !DILocation(line: 3141, column: 7, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 3141, column: 7)
!3223 = !DILocation(line: 3142, column: 7, scope: !3222)
!3224 = !DILocation(line: 3142, column: 10, scope: !3222)
!3225 = !DILocation(line: 3143, column: 7, scope: !3222)
!3226 = !DILocation(line: 3143, column: 10, scope: !3222)
!3227 = !DILocation(line: 3147, column: 7, scope: !3222)
!3228 = !DILocation(line: 3147, column: 11, scope: !3222)
!3229 = !DILocation(line: 3147, column: 16, scope: !3222)
!3230 = !DILocation(line: 3147, column: 29, scope: !3222)
!3231 = !DILocation(line: 3147, column: 32, scope: !3222)
!3232 = !DILocation(line: 3148, column: 11, scope: !3222)
!3233 = !DILocation(line: 3148, column: 15, scope: !3222)
!3234 = !DILocation(line: 3149, column: 15, scope: !3222)
!3235 = !DILocation(line: 3149, column: 18, scope: !3222)
!3236 = !DILocation(line: 3150, column: 15, scope: !3222)
!3237 = !DILocation(line: 3150, column: 18, scope: !3222)
!3238 = !DILocation(line: 3153, column: 7, scope: !3222)
!3239 = !DILocation(line: 3153, column: 12, scope: !3222)
!3240 = !DILocation(line: 3153, column: 24, scope: !3222)
!3241 = !DILocation(line: 3153, column: 27, scope: !3222)
!3242 = !DILocation(line: 3154, column: 11, scope: !3222)
!3243 = !DILocation(line: 3154, column: 15, scope: !3222)
!3244 = !DILocation(line: 3154, column: 20, scope: !3222)
!3245 = !DILocation(line: 3154, column: 37, scope: !3222)
!3246 = !DILocation(line: 3154, column: 40, scope: !3222)
!3247 = !DILocation(line: 3154, column: 45, scope: !3222)
!3248 = !DILocation(line: 3155, column: 11, scope: !3222)
!3249 = !DILocation(line: 3155, column: 15, scope: !3222)
!3250 = !DILocation(line: 3155, column: 27, scope: !3222)
!3251 = !DILocation(line: 3156, column: 15, scope: !3222)
!3252 = !DILocation(line: 3156, column: 18, scope: !3222)
!3253 = !DILocation(line: 3156, column: 44, scope: !3222)
!3254 = !DILocation(line: 3156, column: 47, scope: !3222)
!3255 = !DILocation(line: 3159, column: 7, scope: !3222)
!3256 = !DILocation(line: 3159, column: 11, scope: !3222)
!3257 = !DILocation(line: 3159, column: 23, scope: !3222)
!3258 = !DILocation(line: 3159, column: 26, scope: !3222)
!3259 = !DILocation(line: 3159, column: 32, scope: !3222)
!3260 = !DILocation(line: 3160, column: 7, scope: !3222)
!3261 = !DILocation(line: 3160, column: 11, scope: !3222)
!3262 = !DILocation(line: 3161, column: 11, scope: !3222)
!3263 = !DILocation(line: 3161, column: 15, scope: !3222)
!3264 = !DILocation(line: 3161, column: 20, scope: !3222)
!3265 = !DILocation(line: 3161, column: 31, scope: !3222)
!3266 = !DILocation(line: 3161, column: 34, scope: !3222)
!3267 = !DILocation(line: 3165, column: 15, scope: !3222)
!3268 = !DILocation(line: 3165, column: 19, scope: !3222)
!3269 = !DILocation(line: 3165, column: 24, scope: !3222)
!3270 = !DILocation(line: 3165, column: 34, scope: !3222)
!3271 = !DILocation(line: 3165, column: 38, scope: !3222)
!3272 = !DILocation(line: 3165, column: 54, scope: !3222)
!3273 = !DILocation(line: 3172, column: 38, scope: !3222)
!3274 = !DILocation(line: 3172, column: 42, scope: !3222)
!3275 = !DILocation(line: 3173, column: 42, scope: !3222)
!3276 = !DILocation(line: 3173, column: 46, scope: !3222)
!3277 = !DILocation(line: 3174, column: 46, scope: !3222)
!3278 = !DILocation(line: 3174, column: 49, scope: !3222)
!3279 = !DILocation(line: 3175, column: 46, scope: !3222)
!3280 = !DILocation(line: 3175, column: 49, scope: !3222)
!3281 = !DILocation(line: 3176, column: 46, scope: !3222)
!3282 = !DILocation(line: 3176, column: 49, scope: !3222)
!3283 = !DILocation(line: 3141, column: 7, scope: !3156)
!3284 = !DILocalVariable(name: "full_name", scope: !3285, file: !3, line: 3181, type: !143)
!3285 = distinct !DILexicalBlock(scope: !3222, file: !3, line: 3179, column: 5)
!3286 = !DILocation(line: 3181, column: 13, scope: !3285)
!3287 = !DILocalVariable(name: "do_deref", scope: !3285, file: !3, line: 3182, type: !141)
!3288 = !DILocation(line: 3182, column: 12, scope: !3285)
!3289 = !DILocalVariable(name: "err", scope: !3285, file: !3, line: 3183, type: !27)
!3290 = !DILocation(line: 3183, column: 11, scope: !3285)
!3291 = !DILocation(line: 3185, column: 11, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3185, column: 11)
!3293 = !DILocation(line: 3185, column: 19, scope: !3292)
!3294 = !DILocation(line: 3185, column: 26, scope: !3292)
!3295 = !DILocation(line: 3185, column: 29, scope: !3292)
!3296 = !DILocation(line: 3185, column: 40, scope: !3292)
!3297 = !DILocation(line: 3185, column: 11, scope: !3285)
!3298 = !DILocation(line: 3186, column: 30, scope: !3292)
!3299 = !DILocation(line: 3186, column: 19, scope: !3292)
!3300 = !DILocation(line: 3186, column: 9, scope: !3292)
!3301 = !DILocation(line: 3189, column: 39, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 3188, column: 9)
!3303 = !DILocation(line: 3189, column: 31, scope: !3302)
!3304 = !DILocation(line: 3189, column: 55, scope: !3302)
!3305 = !DILocation(line: 3189, column: 47, scope: !3302)
!3306 = !DILocation(line: 3189, column: 45, scope: !3302)
!3307 = !DILocation(line: 3189, column: 64, scope: !3302)
!3308 = !DILocation(line: 3189, column: 23, scope: !3302)
!3309 = !DILocation(line: 3189, column: 21, scope: !3302)
!3310 = !DILocation(line: 3190, column: 19, scope: !3302)
!3311 = !DILocation(line: 3190, column: 30, scope: !3302)
!3312 = !DILocation(line: 3190, column: 39, scope: !3302)
!3313 = !DILocation(line: 3190, column: 11, scope: !3302)
!3314 = !DILocation(line: 3193, column: 11, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3193, column: 11)
!3316 = !DILocation(line: 3193, column: 11, scope: !3285)
!3317 = !DILocation(line: 3195, column: 58, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 3194, column: 9)
!3319 = !DILocation(line: 3195, column: 30, scope: !3318)
!3320 = !DILocation(line: 3195, column: 11, scope: !3318)
!3321 = !DILocation(line: 3195, column: 14, scope: !3318)
!3322 = !DILocation(line: 3195, column: 28, scope: !3318)
!3323 = !DILocation(line: 3197, column: 17, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 3197, column: 15)
!3325 = !DILocation(line: 3197, column: 20, scope: !3324)
!3326 = !DILocation(line: 3197, column: 15, scope: !3318)
!3327 = !DILocation(line: 3198, column: 27, scope: !3324)
!3328 = !DILocation(line: 3199, column: 27, scope: !3324)
!3329 = !DILocation(line: 3199, column: 57, scope: !3324)
!3330 = !DILocation(line: 3198, column: 13, scope: !3324)
!3331 = !DILocation(line: 3200, column: 9, scope: !3318)
!3332 = !DILocation(line: 3202, column: 15, scope: !3285)
!3333 = !DILocation(line: 3202, column: 7, scope: !3285)
!3334 = !DILocation(line: 3205, column: 23, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3203, column: 9)
!3336 = !DILocation(line: 3205, column: 35, scope: !3335)
!3337 = !DILocation(line: 3205, column: 38, scope: !3335)
!3338 = !DILocation(line: 3205, column: 17, scope: !3335)
!3339 = !DILocation(line: 3205, column: 15, scope: !3335)
!3340 = !DILocation(line: 3206, column: 20, scope: !3335)
!3341 = !DILocation(line: 3207, column: 11, scope: !3335)
!3342 = !DILocation(line: 3211, column: 15, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 3211, column: 15)
!3344 = !DILocation(line: 3211, column: 15, scope: !3335)
!3345 = !DILocalVariable(name: "need_lstat", scope: !3346, file: !3, line: 3213, type: !141)
!3346 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 3212, column: 13)
!3347 = !DILocation(line: 3213, column: 20, scope: !3346)
!3348 = !DILocation(line: 3214, column: 27, scope: !3346)
!3349 = !DILocation(line: 3214, column: 39, scope: !3346)
!3350 = !DILocation(line: 3214, column: 42, scope: !3346)
!3351 = !DILocation(line: 3214, column: 21, scope: !3346)
!3352 = !DILocation(line: 3214, column: 19, scope: !3346)
!3353 = !DILocation(line: 3215, column: 24, scope: !3346)
!3354 = !DILocation(line: 3217, column: 19, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 3217, column: 19)
!3356 = !DILocation(line: 3217, column: 31, scope: !3355)
!3357 = !DILocation(line: 3217, column: 19, scope: !3346)
!3358 = !DILocation(line: 3218, column: 17, scope: !3355)
!3359 = !DILocation(line: 3220, column: 29, scope: !3346)
!3360 = !DILocation(line: 3220, column: 33, scope: !3346)
!3361 = !DILocation(line: 3221, column: 31, scope: !3346)
!3362 = !DILocation(line: 3221, column: 37, scope: !3346)
!3363 = !DILocation(line: 3222, column: 33, scope: !3346)
!3364 = !DILocation(line: 3222, column: 31, scope: !3346)
!3365 = !DILocation(line: 3220, column: 28, scope: !3346)
!3366 = !DILocation(line: 3220, column: 26, scope: !3346)
!3367 = !DILocation(line: 3223, column: 20, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 3223, column: 19)
!3369 = !DILocation(line: 3223, column: 19, scope: !3346)
!3370 = !DILocation(line: 3224, column: 17, scope: !3368)
!3371 = !DILocation(line: 3230, column: 13, scope: !3346)
!3372 = !DILocation(line: 3231, column: 11, scope: !3335)
!3373 = !DILocation(line: 3234, column: 24, scope: !3335)
!3374 = !DILocation(line: 3234, column: 36, scope: !3335)
!3375 = !DILocation(line: 3234, column: 39, scope: !3335)
!3376 = !DILocation(line: 3234, column: 17, scope: !3335)
!3377 = !DILocation(line: 3234, column: 15, scope: !3335)
!3378 = !DILocation(line: 3235, column: 20, scope: !3335)
!3379 = !DILocation(line: 3236, column: 11, scope: !3335)
!3380 = !DILocation(line: 3239, column: 11, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3239, column: 11)
!3382 = !DILocation(line: 3239, column: 15, scope: !3381)
!3383 = !DILocation(line: 3239, column: 11, scope: !3285)
!3384 = !DILocation(line: 3244, column: 25, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 3240, column: 9)
!3386 = !DILocation(line: 3245, column: 25, scope: !3385)
!3387 = !DILocation(line: 3245, column: 48, scope: !3385)
!3388 = !DILocation(line: 3244, column: 11, scope: !3385)
!3389 = !DILocation(line: 3246, column: 15, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 3246, column: 15)
!3391 = !DILocation(line: 3246, column: 15, scope: !3385)
!3392 = !DILocation(line: 3247, column: 13, scope: !3390)
!3393 = !DILocation(line: 3249, column: 30, scope: !3385)
!3394 = !DILocation(line: 3249, column: 21, scope: !3385)
!3395 = !DILocation(line: 3249, column: 11, scope: !3385)
!3396 = !DILocation(line: 3249, column: 14, scope: !3385)
!3397 = !DILocation(line: 3249, column: 19, scope: !3385)
!3398 = !DILocation(line: 3250, column: 21, scope: !3385)
!3399 = !DILocation(line: 3252, column: 11, scope: !3385)
!3400 = !DILocation(line: 3255, column: 7, scope: !3285)
!3401 = !DILocation(line: 3255, column: 10, scope: !3285)
!3402 = !DILocation(line: 3255, column: 18, scope: !3285)
!3403 = !DILocation(line: 3258, column: 12, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3258, column: 11)
!3405 = !DILocation(line: 3258, column: 17, scope: !3404)
!3406 = !DILocation(line: 3258, column: 27, scope: !3404)
!3407 = !DILocation(line: 3258, column: 30, scope: !3404)
!3408 = !DILocation(line: 3259, column: 11, scope: !3404)
!3409 = !DILocation(line: 3259, column: 14, scope: !3404)
!3410 = !DILocation(line: 3259, column: 31, scope: !3404)
!3411 = !DILocation(line: 3259, column: 34, scope: !3404)
!3412 = !DILocation(line: 3258, column: 11, scope: !3285)
!3413 = !DILocation(line: 3260, column: 51, scope: !3404)
!3414 = !DILocation(line: 3260, column: 62, scope: !3404)
!3415 = !DILocation(line: 3260, column: 29, scope: !3404)
!3416 = !DILocation(line: 3260, column: 9, scope: !3404)
!3417 = !DILocation(line: 3260, column: 12, scope: !3404)
!3418 = !DILocation(line: 3260, column: 27, scope: !3404)
!3419 = !DILocation(line: 3262, column: 11, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3262, column: 11)
!3421 = !DILocation(line: 3262, column: 18, scope: !3420)
!3422 = !DILocation(line: 3262, column: 33, scope: !3420)
!3423 = !DILocation(line: 3262, column: 36, scope: !3420)
!3424 = !DILocation(line: 3262, column: 11, scope: !3285)
!3425 = !DILocalVariable(name: "have_scontext", scope: !3426, file: !3, line: 3264, type: !141)
!3426 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 3263, column: 9)
!3427 = !DILocation(line: 3264, column: 16, scope: !3426)
!3428 = !DILocalVariable(name: "have_acl", scope: !3426, file: !3, line: 3265, type: !141)
!3429 = !DILocation(line: 3265, column: 16, scope: !3426)
!3430 = !DILocalVariable(name: "attr_len", scope: !3426, file: !3, line: 3266, type: !27)
!3431 = !DILocation(line: 3266, column: 15, scope: !3426)
!3432 = !DILocation(line: 3266, column: 44, scope: !3426)
!3433 = !DILocation(line: 3266, column: 55, scope: !3426)
!3434 = !DILocation(line: 3266, column: 58, scope: !3426)
!3435 = !DILocation(line: 3266, column: 26, scope: !3426)
!3436 = !DILocation(line: 3267, column: 18, scope: !3426)
!3437 = !DILocation(line: 3267, column: 27, scope: !3426)
!3438 = !DILocation(line: 3267, column: 15, scope: !3426)
!3439 = !DILocation(line: 3269, column: 15, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 3269, column: 15)
!3441 = !DILocation(line: 3269, column: 19, scope: !3440)
!3442 = !DILocation(line: 3269, column: 15, scope: !3426)
!3443 = !DILocation(line: 3271, column: 19, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 3271, column: 19)
!3445 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 3270, column: 13)
!3446 = !DILocation(line: 3271, column: 19, scope: !3445)
!3447 = !DILocation(line: 3272, column: 35, scope: !3444)
!3448 = !DILocation(line: 3272, column: 33, scope: !3444)
!3449 = !DILocation(line: 3272, column: 31, scope: !3444)
!3450 = !DILocation(line: 3272, column: 17, scope: !3444)
!3451 = !DILocation(line: 3274, column: 35, scope: !3444)
!3452 = !DILocation(line: 3274, column: 33, scope: !3444)
!3453 = !DILocation(line: 3274, column: 31, scope: !3444)
!3454 = !DILocation(line: 3275, column: 13, scope: !3445)
!3455 = !DILocation(line: 3278, column: 15, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 3277, column: 13)
!3457 = !DILocation(line: 3278, column: 18, scope: !3456)
!3458 = !DILocation(line: 3278, column: 27, scope: !3456)
!3459 = !DILocation(line: 3284, column: 31, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 3284, column: 19)
!3461 = !DILocation(line: 3284, column: 19, scope: !3460)
!3462 = !DILocation(line: 3284, column: 38, scope: !3460)
!3463 = !DILocation(line: 3284, column: 41, scope: !3460)
!3464 = !DILocation(line: 3284, column: 47, scope: !3460)
!3465 = !DILocation(line: 3284, column: 19, scope: !3456)
!3466 = !DILocation(line: 3285, column: 21, scope: !3460)
!3467 = !DILocation(line: 3285, column: 17, scope: !3460)
!3468 = !DILocation(line: 3288, column: 15, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 3288, column: 15)
!3470 = !DILocation(line: 3288, column: 19, scope: !3469)
!3471 = !DILocation(line: 3288, column: 24, scope: !3469)
!3472 = !DILocation(line: 3288, column: 27, scope: !3469)
!3473 = !DILocation(line: 3288, column: 34, scope: !3469)
!3474 = !DILocation(line: 3288, column: 15, scope: !3426)
!3475 = !DILocalVariable(name: "n", scope: !3476, file: !3, line: 3290, type: !27)
!3476 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 3289, column: 13)
!3477 = !DILocation(line: 3290, column: 19, scope: !3476)
!3478 = !DILocation(line: 3290, column: 43, scope: !3476)
!3479 = !DILocation(line: 3290, column: 54, scope: !3476)
!3480 = !DILocation(line: 3290, column: 23, scope: !3476)
!3481 = !DILocation(line: 3291, column: 22, scope: !3476)
!3482 = !DILocation(line: 3291, column: 24, scope: !3476)
!3483 = !DILocation(line: 3291, column: 19, scope: !3476)
!3484 = !DILocation(line: 3292, column: 31, scope: !3476)
!3485 = !DILocation(line: 3292, column: 29, scope: !3476)
!3486 = !DILocation(line: 3292, column: 24, scope: !3476)
!3487 = !DILocation(line: 3293, column: 13, scope: !3476)
!3488 = !DILocation(line: 3295, column: 27, scope: !3426)
!3489 = !DILocation(line: 3295, column: 41, scope: !3426)
!3490 = !DILocation(line: 3295, column: 45, scope: !3426)
!3491 = !DILocation(line: 3295, column: 26, scope: !3426)
!3492 = !DILocation(line: 3297, column: 29, scope: !3426)
!3493 = !DILocation(line: 3297, column: 43, scope: !3426)
!3494 = !DILocation(line: 3297, column: 47, scope: !3426)
!3495 = !DILocation(line: 3297, column: 46, scope: !3426)
!3496 = !DILocation(line: 0, scope: !3426)
!3497 = !DILocation(line: 3295, column: 11, scope: !3426)
!3498 = !DILocation(line: 3295, column: 14, scope: !3426)
!3499 = !DILocation(line: 3295, column: 23, scope: !3426)
!3500 = !DILocation(line: 3300, column: 26, scope: !3426)
!3501 = !DILocation(line: 3300, column: 29, scope: !3426)
!3502 = !DILocation(line: 3300, column: 38, scope: !3426)
!3503 = !DILocation(line: 3300, column: 23, scope: !3426)
!3504 = !DILocation(line: 3302, column: 15, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 3302, column: 15)
!3506 = !DILocation(line: 3302, column: 15, scope: !3426)
!3507 = !DILocation(line: 3303, column: 23, scope: !3505)
!3508 = !DILocation(line: 3303, column: 36, scope: !3505)
!3509 = !DILocation(line: 3303, column: 13, scope: !3505)
!3510 = !DILocation(line: 3304, column: 9, scope: !3426)
!3511 = !DILocation(line: 3306, column: 11, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3306, column: 11)
!3513 = !DILocation(line: 3307, column: 11, scope: !3512)
!3514 = !DILocation(line: 3307, column: 15, scope: !3512)
!3515 = !DILocation(line: 3307, column: 22, scope: !3512)
!3516 = !DILocation(line: 3307, column: 37, scope: !3512)
!3517 = !DILocation(line: 3307, column: 40, scope: !3512)
!3518 = !DILocation(line: 3306, column: 11, scope: !3285)
!3519 = !DILocalVariable(name: "linkstats", scope: !3520, file: !3, line: 3309, type: !190)
!3520 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 3308, column: 9)
!3521 = !DILocation(line: 3309, column: 23, scope: !3520)
!3522 = !DILocation(line: 3311, column: 26, scope: !3520)
!3523 = !DILocation(line: 3311, column: 37, scope: !3520)
!3524 = !DILocation(line: 3311, column: 40, scope: !3520)
!3525 = !DILocation(line: 3311, column: 11, scope: !3520)
!3526 = !DILocalVariable(name: "linkname", scope: !3520, file: !3, line: 3312, type: !143)
!3527 = !DILocation(line: 3312, column: 17, scope: !3520)
!3528 = !DILocation(line: 3312, column: 44, scope: !3520)
!3529 = !DILocation(line: 3312, column: 55, scope: !3520)
!3530 = !DILocation(line: 3312, column: 58, scope: !3520)
!3531 = !DILocation(line: 3312, column: 28, scope: !3520)
!3532 = !DILocation(line: 3316, column: 15, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 3316, column: 15)
!3534 = !DILocation(line: 3316, column: 24, scope: !3533)
!3535 = !DILocation(line: 3316, column: 27, scope: !3533)
!3536 = !DILocation(line: 3316, column: 30, scope: !3533)
!3537 = !DILocation(line: 3316, column: 37, scope: !3533)
!3538 = !DILocation(line: 3316, column: 42, scope: !3533)
!3539 = !DILocation(line: 3316, column: 60, scope: !3533)
!3540 = !DILocation(line: 3316, column: 63, scope: !3533)
!3541 = !DILocation(line: 3316, column: 45, scope: !3533)
!3542 = !DILocation(line: 3316, column: 15, scope: !3520)
!3543 = !DILocation(line: 3317, column: 13, scope: !3533)
!3544 = !DILocation(line: 3317, column: 16, scope: !3533)
!3545 = !DILocation(line: 3317, column: 23, scope: !3533)
!3546 = !DILocation(line: 3321, column: 15, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 3321, column: 15)
!3548 = !DILocation(line: 3322, column: 15, scope: !3547)
!3549 = !DILocation(line: 3322, column: 32, scope: !3547)
!3550 = !DILocation(line: 3322, column: 29, scope: !3547)
!3551 = !DILocation(line: 3322, column: 48, scope: !3547)
!3552 = !DILocation(line: 3322, column: 51, scope: !3547)
!3553 = !DILocation(line: 3323, column: 15, scope: !3547)
!3554 = !DILocation(line: 3323, column: 24, scope: !3547)
!3555 = !DILocation(line: 3323, column: 18, scope: !3547)
!3556 = !DILocation(line: 3323, column: 46, scope: !3547)
!3557 = !DILocation(line: 3321, column: 15, scope: !3520)
!3558 = !DILocation(line: 3325, column: 15, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 3324, column: 13)
!3560 = !DILocation(line: 3325, column: 18, scope: !3559)
!3561 = !DILocation(line: 3325, column: 25, scope: !3559)
!3562 = !DILocation(line: 3326, column: 39, scope: !3559)
!3563 = !DILocation(line: 3326, column: 15, scope: !3559)
!3564 = !DILocation(line: 3326, column: 18, scope: !3559)
!3565 = !DILocation(line: 3326, column: 27, scope: !3559)
!3566 = !DILocation(line: 3327, column: 13, scope: !3559)
!3567 = !DILocation(line: 3328, column: 17, scope: !3520)
!3568 = !DILocation(line: 3328, column: 11, scope: !3520)
!3569 = !DILocation(line: 3329, column: 9, scope: !3520)
!3570 = !DILocation(line: 3331, column: 11, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3331, column: 11)
!3572 = !DILocation(line: 3331, column: 11, scope: !3285)
!3573 = !DILocation(line: 3332, column: 9, scope: !3571)
!3574 = !DILocation(line: 3332, column: 12, scope: !3571)
!3575 = !DILocation(line: 3332, column: 21, scope: !3571)
!3576 = !DILocation(line: 3333, column: 16, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 3333, column: 16)
!3578 = !DILocation(line: 3333, column: 16, scope: !3571)
!3579 = !DILocation(line: 3335, column: 15, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 3335, column: 15)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 3334, column: 9)
!3582 = !DILocation(line: 3335, column: 32, scope: !3580)
!3583 = !DILocation(line: 3335, column: 36, scope: !3580)
!3584 = !DILocation(line: 3335, column: 15, scope: !3581)
!3585 = !DILocation(line: 3336, column: 13, scope: !3580)
!3586 = !DILocation(line: 3336, column: 16, scope: !3580)
!3587 = !DILocation(line: 3336, column: 25, scope: !3580)
!3588 = !DILocation(line: 3338, column: 13, scope: !3580)
!3589 = !DILocation(line: 3338, column: 16, scope: !3580)
!3590 = !DILocation(line: 3338, column: 25, scope: !3580)
!3591 = !DILocation(line: 3339, column: 9, scope: !3581)
!3592 = !DILocation(line: 3341, column: 9, scope: !3577)
!3593 = !DILocation(line: 3341, column: 12, scope: !3577)
!3594 = !DILocation(line: 3341, column: 21, scope: !3577)
!3595 = !DILocation(line: 3343, column: 16, scope: !3285)
!3596 = !DILocation(line: 3343, column: 14, scope: !3285)
!3597 = !DILocation(line: 3344, column: 11, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3344, column: 11)
!3599 = !DILocation(line: 3344, column: 18, scope: !3598)
!3600 = !DILocation(line: 3344, column: 33, scope: !3598)
!3601 = !DILocation(line: 3344, column: 36, scope: !3598)
!3602 = !DILocation(line: 3344, column: 11, scope: !3285)
!3603 = !DILocalVariable(name: "buf", scope: !3604, file: !3, line: 3346, type: !734)
!3604 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 3345, column: 9)
!3605 = !DILocation(line: 3346, column: 16, scope: !3604)
!3606 = !DILocalVariable(name: "len", scope: !3604, file: !3, line: 3347, type: !27)
!3607 = !DILocation(line: 3347, column: 15, scope: !3604)
!3608 = !DILocation(line: 3347, column: 47, scope: !3604)
!3609 = !DILocation(line: 3347, column: 55, scope: !3604)
!3610 = !DILocation(line: 3347, column: 60, scope: !3604)
!3611 = !DILocation(line: 3348, column: 62, scope: !3604)
!3612 = !DILocation(line: 3347, column: 31, scope: !3604)
!3613 = !DILocation(line: 3347, column: 21, scope: !3604)
!3614 = !DILocation(line: 3350, column: 15, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 3350, column: 15)
!3616 = !DILocation(line: 3350, column: 34, scope: !3615)
!3617 = !DILocation(line: 3350, column: 32, scope: !3615)
!3618 = !DILocation(line: 3350, column: 15, scope: !3604)
!3619 = !DILocation(line: 3351, column: 32, scope: !3615)
!3620 = !DILocation(line: 3351, column: 30, scope: !3615)
!3621 = !DILocation(line: 3351, column: 13, scope: !3615)
!3622 = !DILocation(line: 3352, column: 9, scope: !3604)
!3623 = !DILocation(line: 3354, column: 11, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3354, column: 11)
!3625 = !DILocation(line: 3354, column: 18, scope: !3624)
!3626 = !DILocation(line: 3354, column: 11, scope: !3285)
!3627 = !DILocation(line: 3356, column: 15, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 3356, column: 15)
!3629 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 3355, column: 9)
!3630 = !DILocation(line: 3356, column: 15, scope: !3629)
!3631 = !DILocalVariable(name: "len", scope: !3632, file: !3, line: 3358, type: !27)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 3357, column: 13)
!3633 = !DILocation(line: 3358, column: 19, scope: !3632)
!3634 = !DILocation(line: 3358, column: 44, scope: !3632)
!3635 = !DILocation(line: 3358, column: 47, scope: !3632)
!3636 = !DILocation(line: 3358, column: 52, scope: !3632)
!3637 = !DILocation(line: 3358, column: 25, scope: !3632)
!3638 = !DILocation(line: 3359, column: 19, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 3359, column: 19)
!3640 = !DILocation(line: 3359, column: 33, scope: !3639)
!3641 = !DILocation(line: 3359, column: 31, scope: !3639)
!3642 = !DILocation(line: 3359, column: 19, scope: !3632)
!3643 = !DILocation(line: 3360, column: 31, scope: !3639)
!3644 = !DILocation(line: 3360, column: 29, scope: !3639)
!3645 = !DILocation(line: 3360, column: 17, scope: !3639)
!3646 = !DILocation(line: 3361, column: 13, scope: !3632)
!3647 = !DILocation(line: 3363, column: 15, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 3363, column: 15)
!3649 = !DILocation(line: 3363, column: 15, scope: !3629)
!3650 = !DILocalVariable(name: "len", scope: !3651, file: !3, line: 3365, type: !27)
!3651 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 3364, column: 13)
!3652 = !DILocation(line: 3365, column: 19, scope: !3651)
!3653 = !DILocation(line: 3365, column: 45, scope: !3651)
!3654 = !DILocation(line: 3365, column: 48, scope: !3651)
!3655 = !DILocation(line: 3365, column: 53, scope: !3651)
!3656 = !DILocation(line: 3365, column: 25, scope: !3651)
!3657 = !DILocation(line: 3366, column: 19, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 3366, column: 19)
!3659 = !DILocation(line: 3366, column: 33, scope: !3658)
!3660 = !DILocation(line: 3366, column: 31, scope: !3658)
!3661 = !DILocation(line: 3366, column: 19, scope: !3651)
!3662 = !DILocation(line: 3367, column: 31, scope: !3658)
!3663 = !DILocation(line: 3367, column: 29, scope: !3658)
!3664 = !DILocation(line: 3367, column: 17, scope: !3658)
!3665 = !DILocation(line: 3368, column: 13, scope: !3651)
!3666 = !DILocation(line: 3370, column: 15, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 3370, column: 15)
!3668 = !DILocation(line: 3370, column: 15, scope: !3629)
!3669 = !DILocalVariable(name: "len", scope: !3670, file: !3, line: 3372, type: !27)
!3670 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 3371, column: 13)
!3671 = !DILocation(line: 3372, column: 19, scope: !3670)
!3672 = !DILocation(line: 3372, column: 44, scope: !3670)
!3673 = !DILocation(line: 3372, column: 47, scope: !3670)
!3674 = !DILocation(line: 3372, column: 52, scope: !3670)
!3675 = !DILocation(line: 3372, column: 25, scope: !3670)
!3676 = !DILocation(line: 3373, column: 19, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 3373, column: 19)
!3678 = !DILocation(line: 3373, column: 34, scope: !3677)
!3679 = !DILocation(line: 3373, column: 32, scope: !3677)
!3680 = !DILocation(line: 3373, column: 19, scope: !3670)
!3681 = !DILocation(line: 3374, column: 32, scope: !3677)
!3682 = !DILocation(line: 3374, column: 30, scope: !3677)
!3683 = !DILocation(line: 3374, column: 17, scope: !3677)
!3684 = !DILocation(line: 3375, column: 13, scope: !3670)
!3685 = !DILocation(line: 3376, column: 9, scope: !3629)
!3686 = !DILocation(line: 3378, column: 11, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3378, column: 11)
!3688 = !DILocation(line: 3378, column: 11, scope: !3285)
!3689 = !DILocalVariable(name: "len", scope: !3690, file: !3, line: 3380, type: !27)
!3690 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 3379, column: 9)
!3691 = !DILocation(line: 3380, column: 15, scope: !3690)
!3692 = !DILocation(line: 3380, column: 29, scope: !3690)
!3693 = !DILocation(line: 3380, column: 32, scope: !3690)
!3694 = !DILocation(line: 3380, column: 21, scope: !3690)
!3695 = !DILocation(line: 3381, column: 15, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 3381, column: 15)
!3697 = !DILocation(line: 3381, column: 32, scope: !3696)
!3698 = !DILocation(line: 3381, column: 30, scope: !3696)
!3699 = !DILocation(line: 3381, column: 15, scope: !3690)
!3700 = !DILocation(line: 3382, column: 30, scope: !3696)
!3701 = !DILocation(line: 3382, column: 28, scope: !3696)
!3702 = !DILocation(line: 3382, column: 13, scope: !3696)
!3703 = !DILocation(line: 3383, column: 9, scope: !3690)
!3704 = !DILocation(line: 3385, column: 11, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 3385, column: 11)
!3706 = !DILocation(line: 3385, column: 18, scope: !3705)
!3707 = !DILocation(line: 3385, column: 11, scope: !3285)
!3708 = !DILocalVariable(name: "b", scope: !3709, file: !3, line: 3387, type: !731)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 3386, column: 9)
!3710 = !DILocation(line: 3387, column: 16, scope: !3709)
!3711 = !DILocalVariable(name: "b_len", scope: !3709, file: !3, line: 3388, type: !27)
!3712 = !DILocation(line: 3388, column: 15, scope: !3709)
!3713 = !DILocation(line: 3388, column: 42, scope: !3709)
!3714 = !DILocation(line: 3388, column: 45, scope: !3709)
!3715 = !DILocation(line: 3388, column: 50, scope: !3709)
!3716 = !DILocation(line: 3388, column: 60, scope: !3709)
!3717 = !DILocation(line: 3388, column: 31, scope: !3709)
!3718 = !DILocation(line: 3388, column: 23, scope: !3709)
!3719 = !DILocation(line: 3389, column: 15, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 3389, column: 15)
!3721 = !DILocation(line: 3389, column: 29, scope: !3720)
!3722 = !DILocation(line: 3389, column: 27, scope: !3720)
!3723 = !DILocation(line: 3389, column: 15, scope: !3709)
!3724 = !DILocation(line: 3390, column: 27, scope: !3720)
!3725 = !DILocation(line: 3390, column: 25, scope: !3720)
!3726 = !DILocation(line: 3390, column: 13, scope: !3720)
!3727 = !DILocation(line: 3392, column: 15, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 3392, column: 15)
!3729 = !DILocation(line: 3392, column: 41, scope: !3728)
!3730 = !DILocation(line: 3392, column: 44, scope: !3728)
!3731 = !DILocation(line: 3392, column: 15, scope: !3709)
!3732 = !DILocalVariable(name: "buf", scope: !3733, file: !3, line: 3394, type: !731)
!3733 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 3393, column: 13)
!3734 = !DILocation(line: 3394, column: 20, scope: !3733)
!3735 = !DILocalVariable(name: "len", scope: !3733, file: !3, line: 3395, type: !27)
!3736 = !DILocation(line: 3395, column: 19, scope: !3733)
!3737 = !DILocation(line: 3395, column: 44, scope: !3733)
!3738 = !DILocation(line: 3395, column: 69, scope: !3733)
!3739 = !DILocation(line: 3395, column: 33, scope: !3733)
!3740 = !DILocation(line: 3395, column: 25, scope: !3733)
!3741 = !DILocation(line: 3396, column: 19, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 3396, column: 19)
!3743 = !DILocation(line: 3396, column: 47, scope: !3742)
!3744 = !DILocation(line: 3396, column: 45, scope: !3742)
!3745 = !DILocation(line: 3396, column: 19, scope: !3733)
!3746 = !DILocation(line: 3397, column: 45, scope: !3742)
!3747 = !DILocation(line: 3397, column: 43, scope: !3742)
!3748 = !DILocation(line: 3397, column: 17, scope: !3742)
!3749 = !DILocation(line: 3398, column: 40, scope: !3733)
!3750 = !DILocation(line: 3398, column: 65, scope: !3733)
!3751 = !DILocation(line: 3398, column: 29, scope: !3733)
!3752 = !DILocation(line: 3398, column: 21, scope: !3733)
!3753 = !DILocation(line: 3398, column: 19, scope: !3733)
!3754 = !DILocation(line: 3399, column: 19, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 3399, column: 19)
!3756 = !DILocation(line: 3399, column: 47, scope: !3755)
!3757 = !DILocation(line: 3399, column: 45, scope: !3755)
!3758 = !DILocation(line: 3399, column: 19, scope: !3733)
!3759 = !DILocation(line: 3400, column: 45, scope: !3755)
!3760 = !DILocation(line: 3400, column: 43, scope: !3755)
!3761 = !DILocation(line: 3400, column: 17, scope: !3755)
!3762 = !DILocation(line: 3401, column: 21, scope: !3733)
!3763 = !DILocation(line: 3401, column: 47, scope: !3733)
!3764 = !DILocation(line: 3401, column: 53, scope: !3733)
!3765 = !DILocation(line: 3401, column: 51, scope: !3733)
!3766 = !DILocation(line: 3401, column: 19, scope: !3733)
!3767 = !DILocation(line: 3402, column: 19, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 3402, column: 19)
!3769 = !DILocation(line: 3402, column: 37, scope: !3768)
!3770 = !DILocation(line: 3402, column: 35, scope: !3768)
!3771 = !DILocation(line: 3402, column: 19, scope: !3733)
!3772 = !DILocation(line: 3403, column: 35, scope: !3768)
!3773 = !DILocation(line: 3403, column: 33, scope: !3768)
!3774 = !DILocation(line: 3403, column: 17, scope: !3768)
!3775 = !DILocation(line: 3404, column: 13, scope: !3733)
!3776 = !DILocalVariable(name: "buf", scope: !3777, file: !3, line: 3407, type: !734)
!3777 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 3406, column: 13)
!3778 = !DILocation(line: 3407, column: 20, scope: !3777)
!3779 = !DILocalVariable(name: "size", scope: !3777, file: !3, line: 3408, type: !168)
!3780 = !DILocation(line: 3408, column: 25, scope: !3777)
!3781 = !DILocation(line: 3408, column: 52, scope: !3777)
!3782 = !DILocation(line: 3408, column: 55, scope: !3777)
!3783 = !DILocation(line: 3408, column: 60, scope: !3777)
!3784 = !DILocation(line: 3408, column: 32, scope: !3777)
!3785 = !DILocalVariable(name: "len", scope: !3777, file: !3, line: 3409, type: !27)
!3786 = !DILocation(line: 3409, column: 19, scope: !3777)
!3787 = !DILocation(line: 3409, column: 51, scope: !3777)
!3788 = !DILocation(line: 3409, column: 57, scope: !3777)
!3789 = !DILocation(line: 3410, column: 51, scope: !3777)
!3790 = !DILocation(line: 3411, column: 54, scope: !3777)
!3791 = !DILocation(line: 3409, column: 35, scope: !3777)
!3792 = !DILocation(line: 3409, column: 25, scope: !3777)
!3793 = !DILocation(line: 3413, column: 19, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 3413, column: 19)
!3795 = !DILocation(line: 3413, column: 37, scope: !3794)
!3796 = !DILocation(line: 3413, column: 35, scope: !3794)
!3797 = !DILocation(line: 3413, column: 19, scope: !3777)
!3798 = !DILocation(line: 3414, column: 35, scope: !3794)
!3799 = !DILocation(line: 3414, column: 33, scope: !3794)
!3800 = !DILocation(line: 3414, column: 17, scope: !3794)
!3801 = !DILocation(line: 3416, column: 9, scope: !3709)
!3802 = !DILocation(line: 3417, column: 5, scope: !3285)
!3803 = !DILocation(line: 3419, column: 7, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 3419, column: 7)
!3805 = !DILocation(line: 3419, column: 7, scope: !3156)
!3806 = !DILocalVariable(name: "buf", scope: !3807, file: !3, line: 3421, type: !731)
!3807 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 3420, column: 5)
!3808 = !DILocation(line: 3421, column: 12, scope: !3807)
!3809 = !DILocalVariable(name: "len", scope: !3807, file: !3, line: 3422, type: !27)
!3810 = !DILocation(line: 3422, column: 11, scope: !3807)
!3811 = !DILocation(line: 3422, column: 36, scope: !3807)
!3812 = !DILocation(line: 3422, column: 39, scope: !3807)
!3813 = !DILocation(line: 3422, column: 44, scope: !3807)
!3814 = !DILocation(line: 3422, column: 52, scope: !3807)
!3815 = !DILocation(line: 3422, column: 25, scope: !3807)
!3816 = !DILocation(line: 3422, column: 17, scope: !3807)
!3817 = !DILocation(line: 3423, column: 11, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 3423, column: 11)
!3819 = !DILocation(line: 3423, column: 32, scope: !3818)
!3820 = !DILocation(line: 3423, column: 30, scope: !3818)
!3821 = !DILocation(line: 3423, column: 11, scope: !3807)
!3822 = !DILocation(line: 3424, column: 30, scope: !3818)
!3823 = !DILocation(line: 3424, column: 28, scope: !3818)
!3824 = !DILocation(line: 3424, column: 9, scope: !3818)
!3825 = !DILocation(line: 3425, column: 5, scope: !3807)
!3826 = !DILocation(line: 3427, column: 22, scope: !3156)
!3827 = !DILocation(line: 3427, column: 13, scope: !3156)
!3828 = !DILocation(line: 3427, column: 3, scope: !3156)
!3829 = !DILocation(line: 3427, column: 6, scope: !3156)
!3830 = !DILocation(line: 3427, column: 11, scope: !3156)
!3831 = !DILocation(line: 3428, column: 13, scope: !3156)
!3832 = !DILocation(line: 3430, column: 10, scope: !3156)
!3833 = !DILocation(line: 3430, column: 3, scope: !3156)
!3834 = !DILocation(line: 3431, column: 1, scope: !3156)
!3835 = distinct !DISubprogram(name: "queue_directory", scope: !3, file: !3, line: 2704, type: !1003, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3836 = !DILocalVariable(name: "name", arg: 1, scope: !3835, file: !3, line: 2704, type: !146)
!3837 = !DILocation(line: 2704, column: 30, scope: !3835)
!3838 = !DILocalVariable(name: "realname", arg: 2, scope: !3835, file: !3, line: 2704, type: !146)
!3839 = !DILocation(line: 2704, column: 48, scope: !3835)
!3840 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !3835, file: !3, line: 2704, type: !141)
!3841 = !DILocation(line: 2704, column: 63, scope: !3835)
!3842 = !DILocalVariable(name: "new", scope: !3835, file: !3, line: 2706, type: !233)
!3843 = !DILocation(line: 2706, column: 19, scope: !3835)
!3844 = !DILocation(line: 2706, column: 25, scope: !3835)
!3845 = !DILocation(line: 2707, column: 19, scope: !3835)
!3846 = !DILocation(line: 2707, column: 39, scope: !3835)
!3847 = !DILocation(line: 2707, column: 30, scope: !3835)
!3848 = !DILocation(line: 2707, column: 3, scope: !3835)
!3849 = !DILocation(line: 2707, column: 8, scope: !3835)
!3850 = !DILocation(line: 2707, column: 17, scope: !3835)
!3851 = !DILocation(line: 2708, column: 15, scope: !3835)
!3852 = !DILocation(line: 2708, column: 31, scope: !3835)
!3853 = !DILocation(line: 2708, column: 22, scope: !3835)
!3854 = !DILocation(line: 2708, column: 3, scope: !3835)
!3855 = !DILocation(line: 2708, column: 8, scope: !3835)
!3856 = !DILocation(line: 2708, column: 13, scope: !3835)
!3857 = !DILocation(line: 2709, column: 27, scope: !3835)
!3858 = !DILocation(line: 2709, column: 3, scope: !3835)
!3859 = !DILocation(line: 2709, column: 8, scope: !3835)
!3860 = !DILocation(line: 2709, column: 25, scope: !3835)
!3861 = !DILocation(line: 2710, column: 15, scope: !3835)
!3862 = !DILocation(line: 2710, column: 3, scope: !3835)
!3863 = !DILocation(line: 2710, column: 8, scope: !3835)
!3864 = !DILocation(line: 2710, column: 13, scope: !3835)
!3865 = !DILocation(line: 2711, column: 18, scope: !3835)
!3866 = !DILocation(line: 2711, column: 16, scope: !3835)
!3867 = !DILocation(line: 2712, column: 1, scope: !3835)
!3868 = distinct !DISubprogram(name: "sort_files", scope: !3, file: !3, line: 3792, type: !526, scopeLine: 3793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3869 = !DILocalVariable(name: "use_strcmp", scope: !3868, file: !3, line: 3794, type: !141)
!3870 = !DILocation(line: 3794, column: 8, scope: !3868)
!3871 = !DILocation(line: 3796, column: 7, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 3796, column: 7)
!3873 = !DILocation(line: 3796, column: 27, scope: !3872)
!3874 = !DILocation(line: 3796, column: 40, scope: !3872)
!3875 = !DILocation(line: 3796, column: 51, scope: !3872)
!3876 = !DILocation(line: 3796, column: 38, scope: !3872)
!3877 = !DILocation(line: 3796, column: 25, scope: !3872)
!3878 = !DILocation(line: 3796, column: 7, scope: !3868)
!3879 = !DILocation(line: 3798, column: 13, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 3797, column: 5)
!3881 = !DILocation(line: 3798, column: 7, scope: !3880)
!3882 = !DILocation(line: 3799, column: 31, scope: !3880)
!3883 = !DILocation(line: 3799, column: 21, scope: !3880)
!3884 = !DILocation(line: 3799, column: 19, scope: !3880)
!3885 = !DILocation(line: 3800, column: 31, scope: !3880)
!3886 = !DILocation(line: 3800, column: 29, scope: !3880)
!3887 = !DILocation(line: 3800, column: 25, scope: !3880)
!3888 = !DILocation(line: 3801, column: 5, scope: !3880)
!3889 = !DILocation(line: 3803, column: 3, scope: !3868)
!3890 = !DILocation(line: 3805, column: 7, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 3805, column: 7)
!3892 = !DILocation(line: 3805, column: 17, scope: !3891)
!3893 = !DILocation(line: 3805, column: 7, scope: !3868)
!3894 = !DILocation(line: 3806, column: 5, scope: !3891)
!3895 = !DILocation(line: 3813, column: 9, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 3813, column: 7)
!3897 = !DILocation(line: 3813, column: 7, scope: !3868)
!3898 = !DILocation(line: 3814, column: 16, scope: !3896)
!3899 = !DILocation(line: 3814, column: 5, scope: !3896)
!3900 = !DILocation(line: 3817, column: 18, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 3816, column: 5)
!3902 = !DILocation(line: 3818, column: 7, scope: !3901)
!3903 = !DILocation(line: 3819, column: 7, scope: !3901)
!3904 = !DILocation(line: 3823, column: 27, scope: !3868)
!3905 = !DILocation(line: 3823, column: 40, scope: !3868)
!3906 = !DILocation(line: 3824, column: 26, scope: !3868)
!3907 = !DILocation(line: 3824, column: 39, scope: !3868)
!3908 = !DILocation(line: 3824, column: 49, scope: !3868)
!3909 = !DILocation(line: 3824, column: 64, scope: !3868)
!3910 = !DILocation(line: 3824, column: 36, scope: !3868)
!3911 = !DILocation(line: 3824, column: 11, scope: !3868)
!3912 = !DILocation(line: 3825, column: 26, scope: !3868)
!3913 = !DILocation(line: 3825, column: 38, scope: !3868)
!3914 = !DILocation(line: 3826, column: 26, scope: !3868)
!3915 = !DILocation(line: 3823, column: 3, scope: !3868)
!3916 = !DILocation(line: 3827, column: 1, scope: !3868)
!3917 = distinct !DISubprogram(name: "extract_dirs_from_files", scope: !3, file: !3, line: 3512, type: !3918, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{null, !146, !141}
!3920 = !DILocalVariable(name: "dirname", arg: 1, scope: !3917, file: !3, line: 3512, type: !146)
!3921 = !DILocation(line: 3512, column: 38, scope: !3917)
!3922 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !3917, file: !3, line: 3512, type: !141)
!3923 = !DILocation(line: 3512, column: 52, scope: !3917)
!3924 = !DILocalVariable(name: "i", scope: !3917, file: !3, line: 3514, type: !149)
!3925 = !DILocation(line: 3514, column: 10, scope: !3917)
!3926 = !DILocalVariable(name: "j", scope: !3917, file: !3, line: 3515, type: !149)
!3927 = !DILocation(line: 3515, column: 10, scope: !3917)
!3928 = !DILocalVariable(name: "ignore_dot_and_dot_dot", scope: !3917, file: !3, line: 3516, type: !141)
!3929 = !DILocation(line: 3516, column: 8, scope: !3917)
!3930 = !DILocation(line: 3516, column: 34, scope: !3917)
!3931 = !DILocation(line: 3516, column: 42, scope: !3917)
!3932 = !DILocation(line: 3518, column: 7, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 3518, column: 7)
!3934 = !DILocation(line: 3518, column: 15, scope: !3933)
!3935 = !DILocation(line: 3518, column: 18, scope: !3933)
!3936 = !DILocation(line: 3518, column: 7, scope: !3917)
!3937 = !DILocation(line: 3523, column: 30, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 3519, column: 5)
!3939 = !DILocation(line: 3523, column: 7, scope: !3938)
!3940 = !DILocation(line: 3524, column: 5, scope: !3938)
!3941 = !DILocation(line: 3528, column: 12, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 3528, column: 3)
!3943 = !DILocation(line: 3528, column: 10, scope: !3942)
!3944 = !DILocation(line: 3528, column: 8, scope: !3942)
!3945 = !DILocation(line: 3528, column: 25, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 3528, column: 3)
!3947 = !DILocation(line: 3528, column: 28, scope: !3946)
!3948 = !DILocation(line: 3528, column: 3, scope: !3942)
!3949 = !DILocalVariable(name: "f", scope: !3950, file: !3, line: 3530, type: !258)
!3950 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 3529, column: 5)
!3951 = !DILocation(line: 3530, column: 24, scope: !3950)
!3952 = !DILocation(line: 3530, column: 28, scope: !3950)
!3953 = !DILocation(line: 3530, column: 40, scope: !3950)
!3954 = !DILocation(line: 3532, column: 25, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 3532, column: 11)
!3956 = !DILocation(line: 3532, column: 11, scope: !3955)
!3957 = !DILocation(line: 3533, column: 11, scope: !3955)
!3958 = !DILocation(line: 3533, column: 17, scope: !3955)
!3959 = !DILocation(line: 3534, column: 15, scope: !3955)
!3960 = !DILocation(line: 3534, column: 47, scope: !3955)
!3961 = !DILocation(line: 3534, column: 50, scope: !3955)
!3962 = !DILocation(line: 3534, column: 20, scope: !3955)
!3963 = !DILocation(line: 3532, column: 11, scope: !3950)
!3964 = !DILocation(line: 3536, column: 16, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 3536, column: 15)
!3966 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 3535, column: 9)
!3967 = !DILocation(line: 3536, column: 24, scope: !3965)
!3968 = !DILocation(line: 3536, column: 27, scope: !3965)
!3969 = !DILocation(line: 3536, column: 30, scope: !3965)
!3970 = !DILocation(line: 3536, column: 38, scope: !3965)
!3971 = !DILocation(line: 3536, column: 15, scope: !3966)
!3972 = !DILocation(line: 3537, column: 30, scope: !3965)
!3973 = !DILocation(line: 3537, column: 33, scope: !3965)
!3974 = !DILocation(line: 3537, column: 39, scope: !3965)
!3975 = !DILocation(line: 3537, column: 42, scope: !3965)
!3976 = !DILocation(line: 3537, column: 52, scope: !3965)
!3977 = !DILocation(line: 3537, column: 13, scope: !3965)
!3978 = !DILocalVariable(name: "name", scope: !3979, file: !3, line: 3540, type: !143)
!3979 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 3539, column: 13)
!3980 = !DILocation(line: 3540, column: 21, scope: !3979)
!3981 = !DILocation(line: 3540, column: 46, scope: !3979)
!3982 = !DILocation(line: 3540, column: 55, scope: !3979)
!3983 = !DILocation(line: 3540, column: 58, scope: !3979)
!3984 = !DILocation(line: 3540, column: 28, scope: !3979)
!3985 = !DILocation(line: 3541, column: 32, scope: !3979)
!3986 = !DILocation(line: 3541, column: 38, scope: !3979)
!3987 = !DILocation(line: 3541, column: 41, scope: !3979)
!3988 = !DILocation(line: 3541, column: 51, scope: !3979)
!3989 = !DILocation(line: 3541, column: 15, scope: !3979)
!3990 = !DILocation(line: 3542, column: 21, scope: !3979)
!3991 = !DILocation(line: 3542, column: 15, scope: !3979)
!3992 = !DILocation(line: 3544, column: 15, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 3544, column: 15)
!3994 = !DILocation(line: 3544, column: 18, scope: !3993)
!3995 = !DILocation(line: 3544, column: 27, scope: !3993)
!3996 = !DILocation(line: 3544, column: 15, scope: !3966)
!3997 = !DILocation(line: 3545, column: 23, scope: !3993)
!3998 = !DILocation(line: 3545, column: 13, scope: !3993)
!3999 = !DILocation(line: 3546, column: 9, scope: !3966)
!4000 = !DILocation(line: 3528, column: 3, scope: !3946)
!4001 = distinct !{!4001, !3948, !4002}
!4002 = !DILocation(line: 3547, column: 5, scope: !3942)
!4003 = !DILocation(line: 3552, column: 10, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 3552, column: 3)
!4005 = !DILocation(line: 3552, column: 17, scope: !4004)
!4006 = !DILocation(line: 3552, column: 8, scope: !4004)
!4007 = !DILocation(line: 3552, column: 22, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3552, column: 3)
!4009 = !DILocation(line: 3552, column: 26, scope: !4008)
!4010 = !DILocation(line: 3552, column: 24, scope: !4008)
!4011 = !DILocation(line: 3552, column: 3, scope: !4004)
!4012 = !DILocalVariable(name: "f", scope: !4013, file: !3, line: 3554, type: !258)
!4013 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 3553, column: 5)
!4014 = !DILocation(line: 3554, column: 24, scope: !4013)
!4015 = !DILocation(line: 3554, column: 28, scope: !4013)
!4016 = !DILocation(line: 3554, column: 40, scope: !4013)
!4017 = !DILocation(line: 3555, column: 24, scope: !4013)
!4018 = !DILocation(line: 3555, column: 7, scope: !4013)
!4019 = !DILocation(line: 3555, column: 19, scope: !4013)
!4020 = !DILocation(line: 3555, column: 22, scope: !4013)
!4021 = !DILocation(line: 3556, column: 13, scope: !4013)
!4022 = !DILocation(line: 3556, column: 16, scope: !4013)
!4023 = !DILocation(line: 3556, column: 25, scope: !4013)
!4024 = !DILocation(line: 3556, column: 12, scope: !4013)
!4025 = !DILocation(line: 3556, column: 9, scope: !4013)
!4026 = !DILocation(line: 3557, column: 5, scope: !4013)
!4027 = !DILocation(line: 3552, column: 39, scope: !4008)
!4028 = !DILocation(line: 3552, column: 3, scope: !4008)
!4029 = distinct !{!4029, !4011, !4030}
!4030 = !DILocation(line: 3557, column: 5, scope: !4004)
!4031 = !DILocation(line: 3558, column: 16, scope: !3917)
!4032 = !DILocation(line: 3558, column: 14, scope: !3917)
!4033 = !DILocation(line: 3559, column: 1, scope: !3917)
!4034 = distinct !DISubprogram(name: "print_current_files", scope: !3, file: !3, line: 3832, type: !526, scopeLine: 3833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4035 = !DILocalVariable(name: "i", scope: !4034, file: !3, line: 3834, type: !149)
!4036 = !DILocation(line: 3834, column: 10, scope: !4034)
!4037 = !DILocation(line: 3836, column: 11, scope: !4034)
!4038 = !DILocation(line: 3836, column: 3, scope: !4034)
!4039 = !DILocation(line: 3839, column: 14, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3839, column: 7)
!4041 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 3837, column: 5)
!4042 = !DILocation(line: 3839, column: 12, scope: !4040)
!4043 = !DILocation(line: 3839, column: 19, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 3839, column: 7)
!4045 = !DILocation(line: 3839, column: 23, scope: !4044)
!4046 = !DILocation(line: 3839, column: 21, scope: !4044)
!4047 = !DILocation(line: 3839, column: 7, scope: !4040)
!4048 = !DILocation(line: 3841, column: 39, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 3840, column: 9)
!4050 = !DILocation(line: 3841, column: 51, scope: !4049)
!4051 = !DILocation(line: 3841, column: 11, scope: !4049)
!4052 = !DILocation(line: 3842, column: 11, scope: !4049)
!4053 = !DILocation(line: 3843, column: 9, scope: !4049)
!4054 = !DILocation(line: 3839, column: 36, scope: !4044)
!4055 = !DILocation(line: 3839, column: 7, scope: !4044)
!4056 = distinct !{!4056, !4047, !4057}
!4057 = !DILocation(line: 3843, column: 9, scope: !4040)
!4058 = !DILocation(line: 3844, column: 7, scope: !4041)
!4059 = !DILocation(line: 3847, column: 13, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3847, column: 11)
!4061 = !DILocation(line: 3847, column: 11, scope: !4041)
!4062 = !DILocation(line: 3848, column: 9, scope: !4060)
!4063 = !DILocation(line: 3850, column: 9, scope: !4060)
!4064 = !DILocation(line: 3851, column: 7, scope: !4041)
!4065 = !DILocation(line: 3854, column: 13, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3854, column: 11)
!4067 = !DILocation(line: 3854, column: 11, scope: !4041)
!4068 = !DILocation(line: 3855, column: 9, scope: !4066)
!4069 = !DILocation(line: 3857, column: 9, scope: !4066)
!4070 = !DILocation(line: 3858, column: 7, scope: !4041)
!4071 = !DILocation(line: 3861, column: 7, scope: !4041)
!4072 = !DILocation(line: 3862, column: 7, scope: !4041)
!4073 = !DILocation(line: 3865, column: 14, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3865, column: 7)
!4075 = !DILocation(line: 3865, column: 12, scope: !4074)
!4076 = !DILocation(line: 3865, column: 19, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 3865, column: 7)
!4078 = !DILocation(line: 3865, column: 23, scope: !4077)
!4079 = !DILocation(line: 3865, column: 21, scope: !4077)
!4080 = !DILocation(line: 3865, column: 7, scope: !4074)
!4081 = !DILocation(line: 3867, column: 11, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 3866, column: 9)
!4083 = !DILocation(line: 3868, column: 30, scope: !4082)
!4084 = !DILocation(line: 3868, column: 42, scope: !4082)
!4085 = !DILocation(line: 3868, column: 11, scope: !4082)
!4086 = !DILocation(line: 3869, column: 11, scope: !4082)
!4087 = !DILocation(line: 3869, column: 11, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 3869, column: 11)
!4089 = !DILocation(line: 3870, column: 9, scope: !4082)
!4090 = !DILocation(line: 3865, column: 36, scope: !4077)
!4091 = !DILocation(line: 3865, column: 7, scope: !4077)
!4092 = distinct !{!4092, !4080, !4093}
!4093 = !DILocation(line: 3870, column: 9, scope: !4074)
!4094 = !DILocation(line: 3871, column: 7, scope: !4041)
!4095 = !DILocation(line: 3873, column: 1, scope: !4034)
!4096 = distinct !DISubprogram(name: "dev_ino_pop", scope: !3, file: !3, line: 1022, type: !4097, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!263}
!4099 = !DILocalVariable(name: "vdi", scope: !4096, file: !3, line: 1024, type: !167)
!4100 = !DILocation(line: 1024, column: 9, scope: !4096)
!4101 = !DILocalVariable(name: "di", scope: !4096, file: !3, line: 1025, type: !262)
!4102 = !DILocation(line: 1025, column: 19, scope: !4096)
!4103 = !DILocalVariable(name: "dev_ino_size", scope: !4096, file: !3, line: 1026, type: !27)
!4104 = !DILocation(line: 1026, column: 7, scope: !4096)
!4105 = !DILocation(line: 1027, column: 3, scope: !4096)
!4106 = !DILocalVariable(name: "__o", scope: !4107, file: !3, line: 1027, type: !451)
!4107 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 1027, column: 3)
!4108 = !DILocation(line: 1027, column: 3, scope: !4107)
!4109 = !DILocation(line: 1028, column: 3, scope: !4096)
!4110 = !DILocation(line: 1029, column: 9, scope: !4096)
!4111 = !DILocation(line: 1029, column: 7, scope: !4096)
!4112 = !DILocation(line: 1030, column: 8, scope: !4096)
!4113 = !DILocation(line: 1030, column: 6, scope: !4096)
!4114 = !DILocation(line: 1031, column: 11, scope: !4096)
!4115 = !DILocation(line: 1031, column: 10, scope: !4096)
!4116 = !DILocation(line: 1031, column: 3, scope: !4096)
!4117 = distinct !DISubprogram(name: "free_pending_ent", scope: !3, file: !3, line: 1248, type: !4118, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !233}
!4120 = !DILocalVariable(name: "p", arg: 1, scope: !4117, file: !3, line: 1248, type: !233)
!4121 = !DILocation(line: 1248, column: 35, scope: !4117)
!4122 = !DILocation(line: 1250, column: 9, scope: !4117)
!4123 = !DILocation(line: 1250, column: 12, scope: !4117)
!4124 = !DILocation(line: 1250, column: 3, scope: !4117)
!4125 = !DILocation(line: 1251, column: 9, scope: !4117)
!4126 = !DILocation(line: 1251, column: 12, scope: !4117)
!4127 = !DILocation(line: 1251, column: 3, scope: !4117)
!4128 = !DILocation(line: 1252, column: 9, scope: !4117)
!4129 = !DILocation(line: 1252, column: 3, scope: !4117)
!4130 = !DILocation(line: 1253, column: 1, scope: !4117)
!4131 = !DILocalVariable(name: "name", arg: 1, scope: !1002, file: !3, line: 2720, type: !146)
!4132 = !DILocation(line: 2720, column: 24, scope: !1002)
!4133 = !DILocalVariable(name: "realname", arg: 2, scope: !1002, file: !3, line: 2720, type: !146)
!4134 = !DILocation(line: 2720, column: 42, scope: !1002)
!4135 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !1002, file: !3, line: 2720, type: !141)
!4136 = !DILocation(line: 2720, column: 57, scope: !1002)
!4137 = !DILocalVariable(name: "dirp", scope: !1002, file: !3, line: 2722, type: !713)
!4138 = !DILocation(line: 2722, column: 8, scope: !1002)
!4139 = !DILocalVariable(name: "next", scope: !1002, file: !3, line: 2723, type: !717)
!4140 = !DILocation(line: 2723, column: 18, scope: !1002)
!4141 = !DILocalVariable(name: "total_blocks", scope: !1002, file: !3, line: 2724, type: !168)
!4142 = !DILocation(line: 2724, column: 13, scope: !1002)
!4143 = !DILocation(line: 2727, column: 3, scope: !1002)
!4144 = !DILocation(line: 2727, column: 9, scope: !1002)
!4145 = !DILocation(line: 2728, column: 19, scope: !1002)
!4146 = !DILocation(line: 2728, column: 10, scope: !1002)
!4147 = !DILocation(line: 2728, column: 8, scope: !1002)
!4148 = !DILocation(line: 2729, column: 8, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2729, column: 7)
!4150 = !DILocation(line: 2729, column: 7, scope: !1002)
!4151 = !DILocation(line: 2731, column: 21, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 2730, column: 5)
!4153 = !DILocation(line: 2731, column: 39, scope: !4152)
!4154 = !DILocation(line: 2731, column: 70, scope: !4152)
!4155 = !DILocation(line: 2731, column: 7, scope: !4152)
!4156 = !DILocation(line: 2732, column: 7, scope: !4152)
!4157 = !DILocation(line: 2735, column: 7, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2735, column: 7)
!4159 = !DILocation(line: 2735, column: 7, scope: !1002)
!4160 = !DILocalVariable(name: "dir_stat", scope: !4161, file: !3, line: 2737, type: !190)
!4161 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 2736, column: 5)
!4162 = !DILocation(line: 2737, column: 19, scope: !4161)
!4163 = !DILocalVariable(name: "fd", scope: !4161, file: !3, line: 2738, type: !27)
!4164 = !DILocation(line: 2738, column: 11, scope: !4161)
!4165 = !DILocation(line: 2738, column: 23, scope: !4161)
!4166 = !DILocation(line: 2738, column: 16, scope: !4161)
!4167 = !DILocation(line: 2741, column: 17, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 2741, column: 11)
!4169 = !DILocation(line: 2741, column: 14, scope: !4168)
!4170 = !DILocation(line: 2741, column: 12, scope: !4168)
!4171 = !DILocation(line: 2742, column: 21, scope: !4168)
!4172 = !DILocation(line: 2742, column: 14, scope: !4168)
!4173 = !DILocation(line: 2743, column: 20, scope: !4168)
!4174 = !DILocation(line: 2743, column: 14, scope: !4168)
!4175 = !DILocation(line: 2743, column: 38, scope: !4168)
!4176 = !DILocation(line: 2741, column: 11, scope: !4161)
!4177 = !DILocation(line: 2745, column: 25, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 2744, column: 9)
!4179 = !DILocation(line: 2746, column: 25, scope: !4178)
!4180 = !DILocation(line: 2746, column: 71, scope: !4178)
!4181 = !DILocation(line: 2745, column: 11, scope: !4178)
!4182 = !DILocation(line: 2747, column: 21, scope: !4178)
!4183 = !DILocation(line: 2747, column: 11, scope: !4178)
!4184 = !DILocation(line: 2748, column: 11, scope: !4178)
!4185 = !DILocation(line: 2753, column: 31, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 2753, column: 11)
!4187 = !DILocation(line: 2753, column: 48, scope: !4186)
!4188 = !DILocation(line: 2753, column: 11, scope: !4186)
!4189 = !DILocation(line: 2753, column: 11, scope: !4161)
!4190 = !DILocation(line: 2755, column: 24, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 2754, column: 9)
!4192 = !DILocation(line: 2756, column: 18, scope: !4191)
!4193 = !DILocation(line: 2755, column: 11, scope: !4191)
!4194 = !DILocation(line: 2757, column: 21, scope: !4191)
!4195 = !DILocation(line: 2757, column: 11, scope: !4191)
!4196 = !DILocation(line: 2758, column: 11, scope: !4191)
!4197 = !DILocation(line: 2759, column: 11, scope: !4191)
!4198 = !DILocation(line: 2762, column: 30, scope: !4161)
!4199 = !DILocation(line: 2762, column: 47, scope: !4161)
!4200 = !DILocation(line: 2762, column: 7, scope: !4161)
!4201 = !DILocation(line: 2763, column: 5, scope: !4161)
!4202 = !DILocation(line: 2765, column: 3, scope: !1002)
!4203 = !DILocation(line: 2767, column: 7, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2767, column: 7)
!4205 = !DILocation(line: 2767, column: 17, scope: !4204)
!4206 = !DILocation(line: 2767, column: 20, scope: !4204)
!4207 = !DILocation(line: 2767, column: 7, scope: !1002)
!4208 = !DILocation(line: 2769, column: 12, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 2769, column: 11)
!4210 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 2768, column: 5)
!4211 = !DILocation(line: 2769, column: 11, scope: !4210)
!4212 = !DILocation(line: 2770, column: 9, scope: !4209)
!4213 = !DILocation(line: 2770, column: 9, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 2770, column: 9)
!4215 = !DILocation(line: 2771, column: 13, scope: !4210)
!4216 = !DILocation(line: 2772, column: 7, scope: !4210)
!4217 = !DILocation(line: 2772, column: 7, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 2772, column: 7)
!4219 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 2772, column: 7)
!4220 = !DILocation(line: 2772, column: 7, scope: !4219)
!4221 = !DILocation(line: 2772, column: 7, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2772, column: 7)
!4223 = !DILocalVariable(name: "absolute_name", scope: !4210, file: !3, line: 2774, type: !143)
!4224 = !DILocation(line: 2774, column: 13, scope: !4210)
!4225 = !DILocation(line: 2775, column: 11, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 2775, column: 11)
!4227 = !DILocation(line: 2775, column: 11, scope: !4210)
!4228 = !DILocation(line: 2777, column: 55, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 2776, column: 9)
!4230 = !DILocation(line: 2777, column: 27, scope: !4229)
!4231 = !DILocation(line: 2777, column: 25, scope: !4229)
!4232 = !DILocation(line: 2778, column: 17, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 2778, column: 15)
!4234 = !DILocation(line: 2778, column: 15, scope: !4229)
!4235 = !DILocation(line: 2779, column: 27, scope: !4233)
!4236 = !DILocation(line: 2780, column: 27, scope: !4233)
!4237 = !DILocation(line: 2780, column: 57, scope: !4233)
!4238 = !DILocation(line: 2779, column: 13, scope: !4233)
!4239 = !DILocation(line: 2781, column: 9, scope: !4229)
!4240 = !DILocation(line: 2782, column: 19, scope: !4210)
!4241 = !DILocation(line: 2782, column: 30, scope: !4210)
!4242 = !DILocation(line: 2782, column: 41, scope: !4210)
!4243 = !DILocation(line: 2782, column: 47, scope: !4210)
!4244 = !DILocation(line: 2783, column: 50, scope: !4210)
!4245 = !DILocation(line: 2782, column: 7, scope: !4210)
!4246 = !DILocation(line: 2785, column: 13, scope: !4210)
!4247 = !DILocation(line: 2785, column: 7, scope: !4210)
!4248 = !DILocation(line: 2787, column: 7, scope: !4210)
!4249 = !DILocation(line: 2787, column: 7, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 2787, column: 7)
!4251 = !DILocation(line: 2788, column: 5, scope: !4210)
!4252 = !DILocation(line: 2793, column: 3, scope: !1002)
!4253 = !DILocation(line: 2797, column: 7, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2794, column: 5)
!4255 = !DILocation(line: 2797, column: 13, scope: !4254)
!4256 = !DILocation(line: 2798, column: 23, scope: !4254)
!4257 = !DILocation(line: 2798, column: 14, scope: !4254)
!4258 = !DILocation(line: 2798, column: 12, scope: !4254)
!4259 = !DILocation(line: 2799, column: 11, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 2799, column: 11)
!4261 = !DILocation(line: 2799, column: 11, scope: !4254)
!4262 = !DILocation(line: 2801, column: 31, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 2801, column: 15)
!4264 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 2800, column: 9)
!4265 = !DILocation(line: 2801, column: 37, scope: !4263)
!4266 = !DILocation(line: 2801, column: 17, scope: !4263)
!4267 = !DILocation(line: 2801, column: 15, scope: !4264)
!4268 = !DILocalVariable(name: "type", scope: !4269, file: !3, line: 2803, type: !36)
!4269 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2802, column: 13)
!4270 = !DILocation(line: 2803, column: 29, scope: !4269)
!4271 = !DILocation(line: 2806, column: 23, scope: !4269)
!4272 = !DILocation(line: 2806, column: 29, scope: !4269)
!4273 = !DILocation(line: 2806, column: 15, scope: !4269)
!4274 = !DILocation(line: 2808, column: 36, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 2807, column: 17)
!4276 = !DILocation(line: 2808, column: 49, scope: !4275)
!4277 = !DILocation(line: 2809, column: 36, scope: !4275)
!4278 = !DILocation(line: 2809, column: 48, scope: !4275)
!4279 = !DILocation(line: 2810, column: 36, scope: !4275)
!4280 = !DILocation(line: 2810, column: 50, scope: !4275)
!4281 = !DILocation(line: 2811, column: 36, scope: !4275)
!4282 = !DILocation(line: 2811, column: 45, scope: !4275)
!4283 = !DILocation(line: 2812, column: 36, scope: !4275)
!4284 = !DILocation(line: 2812, column: 53, scope: !4275)
!4285 = !DILocation(line: 2813, column: 36, scope: !4275)
!4286 = !DILocation(line: 2813, column: 47, scope: !4275)
!4287 = !DILocation(line: 2814, column: 36, scope: !4275)
!4288 = !DILocation(line: 2814, column: 45, scope: !4275)
!4289 = !DILocation(line: 2816, column: 36, scope: !4275)
!4290 = !DILocation(line: 2816, column: 49, scope: !4275)
!4291 = !DILocation(line: 2820, column: 44, scope: !4269)
!4292 = !DILocation(line: 2820, column: 50, scope: !4269)
!4293 = !DILocation(line: 2820, column: 58, scope: !4269)
!4294 = !DILocation(line: 2822, column: 51, scope: !4269)
!4295 = !DILocation(line: 2820, column: 31, scope: !4269)
!4296 = !DILocation(line: 2820, column: 28, scope: !4269)
!4297 = !DILocation(line: 2828, column: 19, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 2828, column: 19)
!4299 = !DILocation(line: 2828, column: 26, scope: !4298)
!4300 = !DILocation(line: 2828, column: 42, scope: !4298)
!4301 = !DILocation(line: 2828, column: 45, scope: !4298)
!4302 = !DILocation(line: 2828, column: 55, scope: !4298)
!4303 = !DILocation(line: 2829, column: 23, scope: !4298)
!4304 = !DILocation(line: 2829, column: 27, scope: !4298)
!4305 = !DILocation(line: 2829, column: 44, scope: !4298)
!4306 = !DILocation(line: 2829, column: 48, scope: !4298)
!4307 = !DILocation(line: 2828, column: 19, scope: !4269)
!4308 = !DILocation(line: 2834, column: 19, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2830, column: 17)
!4310 = !DILocation(line: 2835, column: 19, scope: !4309)
!4311 = !DILocation(line: 2836, column: 19, scope: !4309)
!4312 = !DILocation(line: 2837, column: 17, scope: !4309)
!4313 = !DILocation(line: 2838, column: 13, scope: !4269)
!4314 = !DILocation(line: 2839, column: 9, scope: !4264)
!4315 = !DILocation(line: 2840, column: 16, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 2840, column: 16)
!4317 = !DILocation(line: 2840, column: 22, scope: !4316)
!4318 = !DILocation(line: 2840, column: 16, scope: !4260)
!4319 = !DILocation(line: 2842, column: 25, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 2841, column: 9)
!4321 = !DILocation(line: 2842, column: 43, scope: !4320)
!4322 = !DILocation(line: 2842, column: 70, scope: !4320)
!4323 = !DILocation(line: 2842, column: 11, scope: !4320)
!4324 = !DILocation(line: 2843, column: 15, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 2843, column: 15)
!4326 = !DILocation(line: 2843, column: 21, scope: !4325)
!4327 = !DILocation(line: 2843, column: 15, scope: !4320)
!4328 = !DILocation(line: 2844, column: 13, scope: !4325)
!4329 = !DILocation(line: 2845, column: 9, scope: !4320)
!4330 = !DILocation(line: 2847, column: 9, scope: !4316)
!4331 = !DILocation(line: 2852, column: 7, scope: !4254)
!4332 = distinct !{!4332, !4252, !4333}
!4333 = !DILocation(line: 2853, column: 5, scope: !1002)
!4334 = !DILocation(line: 2855, column: 17, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2855, column: 7)
!4336 = !DILocation(line: 2855, column: 7, scope: !4335)
!4337 = !DILocation(line: 2855, column: 23, scope: !4335)
!4338 = !DILocation(line: 2855, column: 7, scope: !1002)
!4339 = !DILocation(line: 2857, column: 21, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 2856, column: 5)
!4341 = !DILocation(line: 2857, column: 39, scope: !4340)
!4342 = !DILocation(line: 2857, column: 66, scope: !4340)
!4343 = !DILocation(line: 2857, column: 7, scope: !4340)
!4344 = !DILocation(line: 2859, column: 5, scope: !4340)
!4345 = !DILocation(line: 2862, column: 3, scope: !1002)
!4346 = !DILocation(line: 2867, column: 7, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2867, column: 7)
!4348 = !DILocation(line: 2867, column: 7, scope: !1002)
!4349 = !DILocation(line: 2868, column: 30, scope: !4347)
!4350 = !DILocation(line: 2868, column: 5, scope: !4347)
!4351 = !DILocation(line: 2870, column: 7, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2870, column: 7)
!4353 = !DILocation(line: 2870, column: 14, scope: !4352)
!4354 = !DILocation(line: 2870, column: 29, scope: !4352)
!4355 = !DILocation(line: 2870, column: 32, scope: !4352)
!4356 = !DILocation(line: 2870, column: 7, scope: !1002)
!4357 = !DILocalVariable(name: "p", scope: !4358, file: !3, line: 2872, type: !146)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 2871, column: 5)
!4359 = !DILocation(line: 2872, column: 19, scope: !4358)
!4360 = !DILocalVariable(name: "buf", scope: !4358, file: !3, line: 2873, type: !734)
!4361 = !DILocation(line: 2873, column: 12, scope: !4358)
!4362 = !DILocation(line: 2875, column: 7, scope: !4358)
!4363 = !DILocation(line: 2875, column: 7, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 2875, column: 7)
!4365 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2875, column: 7)
!4366 = !DILocation(line: 2875, column: 7, scope: !4365)
!4367 = !DILocation(line: 2875, column: 7, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 2875, column: 7)
!4369 = !DILocation(line: 2876, column: 11, scope: !4358)
!4370 = !DILocation(line: 2876, column: 9, scope: !4358)
!4371 = !DILocation(line: 2877, column: 7, scope: !4358)
!4372 = !DILocation(line: 2877, column: 7, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2877, column: 7)
!4374 = !DILocation(line: 2878, column: 7, scope: !4358)
!4375 = !DILocation(line: 2878, column: 7, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2878, column: 7)
!4377 = !DILocation(line: 2879, column: 27, scope: !4358)
!4378 = !DILocation(line: 2879, column: 41, scope: !4358)
!4379 = !DILocation(line: 2879, column: 46, scope: !4358)
!4380 = !DILocation(line: 2880, column: 42, scope: !4358)
!4381 = !DILocation(line: 2879, column: 11, scope: !4358)
!4382 = !DILocation(line: 2879, column: 9, scope: !4358)
!4383 = !DILocation(line: 2881, column: 7, scope: !4358)
!4384 = !DILocation(line: 2881, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2881, column: 7)
!4386 = !DILocation(line: 2882, column: 7, scope: !4358)
!4387 = !DILocation(line: 2882, column: 7, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2882, column: 7)
!4389 = !DILocation(line: 2883, column: 5, scope: !4358)
!4390 = !DILocation(line: 2885, column: 7, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 2885, column: 7)
!4392 = !DILocation(line: 2885, column: 7, scope: !1002)
!4393 = !DILocation(line: 2886, column: 5, scope: !4391)
!4394 = !DILocation(line: 2887, column: 1, scope: !1002)
!4395 = distinct !DISubprogram(name: "restore_default_color", scope: !3, file: !3, line: 1266, type: !526, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4396 = !DILocation(line: 1268, column: 3, scope: !4395)
!4397 = !DILocation(line: 1269, column: 3, scope: !4395)
!4398 = !DILocation(line: 1270, column: 1, scope: !4395)
!4399 = distinct !DISubprogram(name: "signal_restore", scope: !3, file: !3, line: 1444, type: !526, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4400 = !DILocation(line: 1446, column: 3, scope: !4399)
!4401 = !DILocation(line: 1447, column: 1, scope: !4399)
!4402 = distinct !DISubprogram(name: "dired_dump_obstack", scope: !3, file: !3, line: 1051, type: !4403, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4403 = !DISubroutineType(types: !4404)
!4404 = !{null, !146, !604}
!4405 = !DILocalVariable(name: "prefix", arg: 1, scope: !4402, file: !3, line: 1051, type: !146)
!4406 = !DILocation(line: 1051, column: 33, scope: !4402)
!4407 = !DILocalVariable(name: "os", arg: 2, scope: !4402, file: !3, line: 1051, type: !604)
!4408 = !DILocation(line: 1051, column: 57, scope: !4402)
!4409 = !DILocalVariable(name: "n_pos", scope: !4402, file: !3, line: 1053, type: !149)
!4410 = !DILocation(line: 1053, column: 10, scope: !4402)
!4411 = !DILocalVariable(name: "__o", scope: !4412, file: !3, line: 1055, type: !451)
!4412 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 1055, column: 11)
!4413 = !DILocation(line: 1055, column: 11, scope: !4412)
!4414 = !DILocation(line: 1055, column: 36, scope: !4402)
!4415 = !DILocation(line: 1055, column: 9, scope: !4402)
!4416 = !DILocation(line: 1056, column: 7, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 1056, column: 7)
!4418 = !DILocation(line: 1056, column: 13, scope: !4417)
!4419 = !DILocation(line: 1056, column: 7, scope: !4402)
!4420 = !DILocalVariable(name: "pos", scope: !4421, file: !3, line: 1058, type: !148)
!4421 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1057, column: 5)
!4422 = !DILocation(line: 1058, column: 15, scope: !4421)
!4423 = !DILocalVariable(name: "__o1", scope: !4424, file: !3, line: 1058, type: !604)
!4424 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1058, column: 32)
!4425 = !DILocation(line: 1058, column: 32, scope: !4424)
!4426 = !DILocalVariable(name: "__value", scope: !4424, file: !3, line: 1058, type: !167)
!4427 = !DILocation(line: 1058, column: 32, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1058, column: 32)
!4429 = !DILocation(line: 1058, column: 32, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1058, column: 32)
!4431 = !DILocation(line: 1058, column: 21, scope: !4421)
!4432 = !DILocation(line: 1059, column: 7, scope: !4421)
!4433 = !DILocalVariable(name: "i", scope: !4434, file: !3, line: 1060, type: !149)
!4434 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 1060, column: 7)
!4435 = !DILocation(line: 1060, column: 19, scope: !4434)
!4436 = !DILocation(line: 1060, column: 12, scope: !4434)
!4437 = !DILocation(line: 1060, column: 26, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1060, column: 7)
!4439 = !DILocation(line: 1060, column: 30, scope: !4438)
!4440 = !DILocation(line: 1060, column: 28, scope: !4438)
!4441 = !DILocation(line: 1060, column: 7, scope: !4434)
!4442 = !DILocation(line: 1061, column: 45, scope: !4438)
!4443 = !DILocation(line: 1061, column: 49, scope: !4438)
!4444 = !DILocation(line: 1061, column: 9, scope: !4438)
!4445 = !DILocation(line: 1060, column: 38, scope: !4438)
!4446 = !DILocation(line: 1060, column: 7, scope: !4438)
!4447 = distinct !{!4447, !4441, !4448}
!4448 = !DILocation(line: 1061, column: 51, scope: !4434)
!4449 = !DILocation(line: 1062, column: 7, scope: !4421)
!4450 = !DILocation(line: 1063, column: 5, scope: !4421)
!4451 = !DILocation(line: 1064, column: 1, scope: !4402)
!4452 = !DILocalVariable(name: "init", arg: 1, scope: !909, file: !3, line: 1355, type: !141)
!4453 = !DILocation(line: 1355, column: 20, scope: !909)
!4454 = !DILocalVariable(name: "j", scope: !909, file: !3, line: 1387, type: !27)
!4455 = !DILocation(line: 1387, column: 7, scope: !909)
!4456 = !DILocation(line: 1389, column: 7, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !909, file: !3, line: 1389, column: 7)
!4458 = !DILocation(line: 1389, column: 7, scope: !909)
!4459 = !DILocalVariable(name: "act", scope: !4460, file: !3, line: 1392, type: !519)
!4460 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 1390, column: 5)
!4461 = !DILocation(line: 1392, column: 24, scope: !4460)
!4462 = !DILocation(line: 1394, column: 7, scope: !4460)
!4463 = !DILocation(line: 1395, column: 14, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 1395, column: 7)
!4465 = !DILocation(line: 1395, column: 12, scope: !4464)
!4466 = !DILocation(line: 1395, column: 19, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 1395, column: 7)
!4468 = !DILocation(line: 1395, column: 21, scope: !4467)
!4469 = !DILocation(line: 1395, column: 7, scope: !4464)
!4470 = !DILocation(line: 1397, column: 26, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1396, column: 9)
!4472 = !DILocation(line: 1397, column: 22, scope: !4471)
!4473 = !DILocation(line: 1397, column: 11, scope: !4471)
!4474 = !DILocation(line: 1398, column: 19, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 1398, column: 15)
!4476 = !DILocation(line: 1398, column: 30, scope: !4475)
!4477 = !DILocation(line: 1398, column: 15, scope: !4471)
!4478 = !DILocation(line: 1399, column: 45, scope: !4475)
!4479 = !DILocation(line: 1399, column: 41, scope: !4475)
!4480 = !DILocation(line: 1399, column: 13, scope: !4475)
!4481 = !DILocation(line: 1400, column: 9, scope: !4471)
!4482 = !DILocation(line: 1395, column: 31, scope: !4467)
!4483 = !DILocation(line: 1395, column: 7, scope: !4467)
!4484 = distinct !{!4484, !4469, !4485}
!4485 = !DILocation(line: 1400, column: 9, scope: !4464)
!4486 = !DILocation(line: 1402, column: 11, scope: !4460)
!4487 = !DILocation(line: 1402, column: 21, scope: !4460)
!4488 = !DILocation(line: 1403, column: 11, scope: !4460)
!4489 = !DILocation(line: 1403, column: 20, scope: !4460)
!4490 = !DILocation(line: 1405, column: 14, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 1405, column: 7)
!4492 = !DILocation(line: 1405, column: 12, scope: !4491)
!4493 = !DILocation(line: 1405, column: 19, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1405, column: 7)
!4495 = !DILocation(line: 1405, column: 21, scope: !4494)
!4496 = !DILocation(line: 1405, column: 7, scope: !4491)
!4497 = !DILocation(line: 1406, column: 47, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1406, column: 13)
!4499 = !DILocation(line: 1406, column: 43, scope: !4498)
!4500 = !DILocation(line: 1406, column: 13, scope: !4498)
!4501 = !DILocation(line: 1406, column: 13, scope: !4494)
!4502 = !DILocation(line: 1408, column: 34, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 1407, column: 11)
!4504 = !DILocation(line: 1408, column: 30, scope: !4503)
!4505 = !DILocation(line: 1408, column: 37, scope: !4503)
!4506 = !DILocation(line: 1408, column: 17, scope: !4503)
!4507 = !DILocation(line: 1408, column: 28, scope: !4503)
!4508 = !DILocation(line: 1409, column: 28, scope: !4503)
!4509 = !DILocation(line: 1409, column: 24, scope: !4503)
!4510 = !DILocation(line: 1409, column: 13, scope: !4503)
!4511 = !DILocation(line: 1410, column: 11, scope: !4503)
!4512 = !DILocation(line: 1406, column: 49, scope: !4498)
!4513 = !DILocation(line: 1405, column: 31, scope: !4494)
!4514 = !DILocation(line: 1405, column: 7, scope: !4494)
!4515 = distinct !{!4515, !4496, !4516}
!4516 = !DILocation(line: 1410, column: 11, scope: !4491)
!4517 = !DILocation(line: 1422, column: 5, scope: !4460)
!4518 = !DILocation(line: 1426, column: 14, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 1426, column: 7)
!4520 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 1424, column: 5)
!4521 = !DILocation(line: 1426, column: 12, scope: !4519)
!4522 = !DILocation(line: 1426, column: 19, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1426, column: 7)
!4524 = !DILocation(line: 1426, column: 21, scope: !4523)
!4525 = !DILocation(line: 1426, column: 7, scope: !4519)
!4526 = !DILocation(line: 1427, column: 47, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1427, column: 13)
!4528 = !DILocation(line: 1427, column: 43, scope: !4527)
!4529 = !DILocation(line: 1427, column: 13, scope: !4527)
!4530 = !DILocation(line: 1427, column: 13, scope: !4523)
!4531 = !DILocation(line: 1428, column: 23, scope: !4527)
!4532 = !DILocation(line: 1428, column: 19, scope: !4527)
!4533 = !DILocation(line: 1428, column: 11, scope: !4527)
!4534 = !DILocation(line: 1427, column: 49, scope: !4527)
!4535 = !DILocation(line: 1426, column: 31, scope: !4523)
!4536 = !DILocation(line: 1426, column: 7, scope: !4523)
!4537 = distinct !{!4537, !4525, !4538}
!4538 = !DILocation(line: 1428, column: 34, scope: !4519)
!4539 = !DILocation(line: 1435, column: 1, scope: !909)
!4540 = distinct !DISubprogram(name: "stophandler", scope: !3, file: !3, line: 1297, type: !173, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4541 = !DILocalVariable(name: "sig", arg: 1, scope: !4540, file: !3, line: 1297, type: !27)
!4542 = !DILocation(line: 1297, column: 18, scope: !4540)
!4543 = !DILocation(line: 1301, column: 9, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1301, column: 7)
!4545 = !DILocation(line: 1301, column: 7, scope: !4540)
!4546 = !DILocation(line: 1302, column: 22, scope: !4544)
!4547 = !DILocation(line: 1302, column: 5, scope: !4544)
!4548 = !DILocation(line: 1303, column: 1, scope: !4540)
!4549 = distinct !DISubprogram(name: "sighandler", scope: !3, file: !3, line: 1286, type: !173, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4550 = !DILocalVariable(name: "sig", arg: 1, scope: !4549, file: !3, line: 1286, type: !27)
!4551 = !DILocation(line: 1286, column: 17, scope: !4549)
!4552 = !DILocation(line: 1290, column: 9, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1290, column: 7)
!4554 = !DILocation(line: 1290, column: 7, scope: !4549)
!4555 = !DILocation(line: 1291, column: 24, scope: !4553)
!4556 = !DILocation(line: 1291, column: 22, scope: !4553)
!4557 = !DILocation(line: 1291, column: 5, scope: !4553)
!4558 = !DILocation(line: 1292, column: 1, scope: !4549)
!4559 = distinct !DISubprogram(name: "put_indicator", scope: !3, file: !3, line: 4793, type: !4560, scopeLine: 4794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{null, !793}
!4562 = !DILocalVariable(name: "ind", arg: 1, scope: !4559, file: !3, line: 4793, type: !793)
!4563 = !DILocation(line: 4793, column: 38, scope: !4559)
!4564 = !DILocation(line: 4795, column: 9, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 4795, column: 7)
!4566 = !DILocation(line: 4795, column: 7, scope: !4559)
!4567 = !DILocation(line: 4797, column: 18, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 4796, column: 5)
!4569 = !DILocation(line: 4803, column: 16, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 4803, column: 11)
!4571 = !DILocation(line: 4803, column: 13, scope: !4570)
!4572 = !DILocation(line: 4803, column: 11, scope: !4568)
!4573 = !DILocation(line: 4804, column: 9, scope: !4570)
!4574 = !DILocation(line: 4806, column: 7, scope: !4568)
!4575 = !DILocation(line: 4807, column: 5, scope: !4568)
!4576 = !DILocation(line: 4809, column: 3, scope: !4559)
!4577 = !DILocation(line: 4810, column: 1, scope: !4559)
!4578 = distinct !DISubprogram(name: "signal_init", scope: !3, file: !3, line: 1438, type: !526, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4579 = !DILocation(line: 1440, column: 3, scope: !4578)
!4580 = !DILocation(line: 1441, column: 1, scope: !4578)
!4581 = distinct !DISubprogram(name: "prep_non_filename_text", scope: !3, file: !3, line: 4576, type: !526, scopeLine: 4577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4582 = !DILocation(line: 4578, column: 30, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 4578, column: 7)
!4584 = !DILocation(line: 4578, column: 37, scope: !4583)
!4585 = !DILocation(line: 4578, column: 7, scope: !4581)
!4586 = !DILocation(line: 4579, column: 5, scope: !4583)
!4587 = !DILocation(line: 4582, column: 7, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 4581, column: 5)
!4589 = !DILocation(line: 4583, column: 7, scope: !4588)
!4590 = !DILocation(line: 4584, column: 7, scope: !4588)
!4591 = !DILocation(line: 4586, column: 1, scope: !4581)
!4592 = distinct !DISubprogram(name: "file_failure", scope: !3, file: !3, line: 2687, type: !4593, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4593 = !DISubroutineType(types: !4594)
!4594 = !{null, !141, !146, !146}
!4595 = !DILocalVariable(name: "serious", arg: 1, scope: !4592, file: !3, line: 2687, type: !141)
!4596 = !DILocation(line: 2687, column: 20, scope: !4592)
!4597 = !DILocalVariable(name: "message", arg: 2, scope: !4592, file: !3, line: 2687, type: !146)
!4598 = !DILocation(line: 2687, column: 41, scope: !4592)
!4599 = !DILocalVariable(name: "file", arg: 3, scope: !4592, file: !3, line: 2687, type: !146)
!4600 = !DILocation(line: 2687, column: 62, scope: !4592)
!4601 = !DILocation(line: 2689, column: 13, scope: !4592)
!4602 = !DILocation(line: 2689, column: 20, scope: !4592)
!4603 = !DILocation(line: 2689, column: 29, scope: !4592)
!4604 = !DILocation(line: 2689, column: 3, scope: !4592)
!4605 = !DILocation(line: 2690, column: 20, scope: !4592)
!4606 = !DILocation(line: 2690, column: 3, scope: !4592)
!4607 = !DILocation(line: 2691, column: 1, scope: !4592)
!4608 = distinct !DISubprogram(name: "visit_dir", scope: !3, file: !3, line: 1217, type: !4609, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!141, !269, !267}
!4611 = !DILocalVariable(name: "dev", arg: 1, scope: !4608, file: !3, line: 1217, type: !269)
!4612 = !DILocation(line: 1217, column: 18, scope: !4608)
!4613 = !DILocalVariable(name: "ino", arg: 2, scope: !4608, file: !3, line: 1217, type: !267)
!4614 = !DILocation(line: 1217, column: 29, scope: !4608)
!4615 = !DILocalVariable(name: "ent", scope: !4608, file: !3, line: 1219, type: !262)
!4616 = !DILocation(line: 1219, column: 19, scope: !4608)
!4617 = !DILocalVariable(name: "ent_from_table", scope: !4608, file: !3, line: 1220, type: !262)
!4618 = !DILocation(line: 1220, column: 19, scope: !4608)
!4619 = !DILocalVariable(name: "found_match", scope: !4608, file: !3, line: 1221, type: !141)
!4620 = !DILocation(line: 1221, column: 8, scope: !4608)
!4621 = !DILocation(line: 1223, column: 9, scope: !4608)
!4622 = !DILocation(line: 1223, column: 7, scope: !4608)
!4623 = !DILocation(line: 1224, column: 17, scope: !4608)
!4624 = !DILocation(line: 1224, column: 3, scope: !4608)
!4625 = !DILocation(line: 1224, column: 8, scope: !4608)
!4626 = !DILocation(line: 1224, column: 15, scope: !4608)
!4627 = !DILocation(line: 1225, column: 17, scope: !4608)
!4628 = !DILocation(line: 1225, column: 3, scope: !4608)
!4629 = !DILocation(line: 1225, column: 8, scope: !4608)
!4630 = !DILocation(line: 1225, column: 15, scope: !4608)
!4631 = !DILocation(line: 1228, column: 33, scope: !4608)
!4632 = !DILocation(line: 1228, column: 49, scope: !4608)
!4633 = !DILocation(line: 1228, column: 20, scope: !4608)
!4634 = !DILocation(line: 1228, column: 18, scope: !4608)
!4635 = !DILocation(line: 1230, column: 7, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 1230, column: 7)
!4637 = !DILocation(line: 1230, column: 22, scope: !4636)
!4638 = !DILocation(line: 1230, column: 7, scope: !4608)
!4639 = !DILocation(line: 1233, column: 7, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 1231, column: 5)
!4641 = !DILocation(line: 1236, column: 18, scope: !4608)
!4642 = !DILocation(line: 1236, column: 36, scope: !4608)
!4643 = !DILocation(line: 1236, column: 33, scope: !4608)
!4644 = !DILocation(line: 1236, column: 15, scope: !4608)
!4645 = !DILocation(line: 1238, column: 7, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 1238, column: 7)
!4647 = !DILocation(line: 1238, column: 7, scope: !4608)
!4648 = !DILocation(line: 1241, column: 13, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 1239, column: 5)
!4650 = !DILocation(line: 1241, column: 7, scope: !4649)
!4651 = !DILocation(line: 1242, column: 5, scope: !4649)
!4652 = !DILocation(line: 1244, column: 10, scope: !4608)
!4653 = !DILocation(line: 1244, column: 3, scope: !4608)
!4654 = distinct !DISubprogram(name: "set_exit_status", scope: !3, file: !3, line: 2674, type: !910, scopeLine: 2675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4655 = !DILocalVariable(name: "serious", arg: 1, scope: !4654, file: !3, line: 2674, type: !141)
!4656 = !DILocation(line: 2674, column: 23, scope: !4654)
!4657 = !DILocation(line: 2676, column: 7, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 2676, column: 7)
!4659 = !DILocation(line: 2676, column: 7, scope: !4654)
!4660 = !DILocation(line: 2677, column: 17, scope: !4658)
!4661 = !DILocation(line: 2677, column: 5, scope: !4658)
!4662 = !DILocation(line: 2678, column: 12, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2678, column: 12)
!4664 = !DILocation(line: 2678, column: 24, scope: !4663)
!4665 = !DILocation(line: 2678, column: 12, scope: !4658)
!4666 = !DILocation(line: 2679, column: 17, scope: !4663)
!4667 = !DILocation(line: 2679, column: 5, scope: !4663)
!4668 = !DILocation(line: 2680, column: 1, scope: !4654)
!4669 = distinct !DISubprogram(name: "dev_ino_push", scope: !3, file: !3, line: 1006, type: !4670, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !269, !267}
!4672 = !DILocalVariable(name: "dev", arg: 1, scope: !4669, file: !3, line: 1006, type: !269)
!4673 = !DILocation(line: 1006, column: 21, scope: !4669)
!4674 = !DILocalVariable(name: "ino", arg: 2, scope: !4669, file: !3, line: 1006, type: !267)
!4675 = !DILocation(line: 1006, column: 32, scope: !4669)
!4676 = !DILocalVariable(name: "vdi", scope: !4669, file: !3, line: 1008, type: !167)
!4677 = !DILocation(line: 1008, column: 9, scope: !4669)
!4678 = !DILocalVariable(name: "di", scope: !4669, file: !3, line: 1009, type: !262)
!4679 = !DILocation(line: 1009, column: 19, scope: !4669)
!4680 = !DILocalVariable(name: "dev_ino_size", scope: !4669, file: !3, line: 1010, type: !27)
!4681 = !DILocation(line: 1010, column: 7, scope: !4669)
!4682 = !DILocalVariable(name: "__o", scope: !4683, file: !3, line: 1011, type: !604)
!4683 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 1011, column: 3)
!4684 = !DILocation(line: 1011, column: 3, scope: !4683)
!4685 = !DILocalVariable(name: "__len", scope: !4683, file: !3, line: 1011, type: !149)
!4686 = !DILocalVariable(name: "__o1", scope: !4687, file: !3, line: 1011, type: !451)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 1011, column: 3)
!4688 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1011, column: 3)
!4689 = !DILocation(line: 1011, column: 3, scope: !4687)
!4690 = !DILocation(line: 1011, column: 3, scope: !4688)
!4691 = !DILocation(line: 1012, column: 9, scope: !4669)
!4692 = !DILocation(line: 1012, column: 7, scope: !4669)
!4693 = !DILocation(line: 1013, column: 8, scope: !4669)
!4694 = !DILocation(line: 1013, column: 6, scope: !4669)
!4695 = !DILocation(line: 1014, column: 5, scope: !4669)
!4696 = !DILocation(line: 1015, column: 16, scope: !4669)
!4697 = !DILocation(line: 1015, column: 3, scope: !4669)
!4698 = !DILocation(line: 1015, column: 7, scope: !4669)
!4699 = !DILocation(line: 1015, column: 14, scope: !4669)
!4700 = !DILocation(line: 1016, column: 16, scope: !4669)
!4701 = !DILocation(line: 1016, column: 3, scope: !4669)
!4702 = !DILocation(line: 1016, column: 7, scope: !4669)
!4703 = !DILocation(line: 1016, column: 14, scope: !4669)
!4704 = !DILocation(line: 1017, column: 1, scope: !4669)
!4705 = distinct !DISubprogram(name: "quote_name", scope: !3, file: !3, line: 4475, type: !4706, scopeLine: 4478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!149, !146, !4708, !27, !793, !141, !604, !146}
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4710 = !DILocalVariable(name: "name", arg: 1, scope: !4705, file: !3, line: 4475, type: !146)
!4711 = !DILocation(line: 4475, column: 25, scope: !4705)
!4712 = !DILocalVariable(name: "options", arg: 2, scope: !4705, file: !3, line: 4475, type: !4708)
!4713 = !DILocation(line: 4475, column: 61, scope: !4705)
!4714 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !4705, file: !3, line: 4476, type: !27)
!4715 = !DILocation(line: 4476, column: 17, scope: !4705)
!4716 = !DILocalVariable(name: "color", arg: 4, scope: !4705, file: !3, line: 4476, type: !793)
!4717 = !DILocation(line: 4476, column: 62, scope: !4705)
!4718 = !DILocalVariable(name: "allow_pad", arg: 5, scope: !4705, file: !3, line: 4477, type: !141)
!4719 = !DILocation(line: 4477, column: 18, scope: !4705)
!4720 = !DILocalVariable(name: "stack", arg: 6, scope: !4705, file: !3, line: 4477, type: !604)
!4721 = !DILocation(line: 4477, column: 45, scope: !4705)
!4722 = !DILocalVariable(name: "absolute_name", arg: 7, scope: !4705, file: !3, line: 4477, type: !146)
!4723 = !DILocation(line: 4477, column: 64, scope: !4705)
!4724 = !DILocalVariable(name: "smallbuf", scope: !4705, file: !3, line: 4479, type: !737)
!4725 = !DILocation(line: 4479, column: 8, scope: !4705)
!4726 = !DILocalVariable(name: "buf", scope: !4705, file: !3, line: 4480, type: !143)
!4727 = !DILocation(line: 4480, column: 9, scope: !4705)
!4728 = !DILocation(line: 4480, column: 15, scope: !4705)
!4729 = !DILocalVariable(name: "len", scope: !4705, file: !3, line: 4481, type: !149)
!4730 = !DILocation(line: 4481, column: 10, scope: !4705)
!4731 = !DILocalVariable(name: "pad", scope: !4705, file: !3, line: 4482, type: !141)
!4732 = !DILocation(line: 4482, column: 8, scope: !4705)
!4733 = !DILocation(line: 4484, column: 57, scope: !4705)
!4734 = !DILocation(line: 4484, column: 63, scope: !4705)
!4735 = !DILocation(line: 4485, column: 25, scope: !4705)
!4736 = !DILocation(line: 4484, column: 9, scope: !4705)
!4737 = !DILocation(line: 4484, column: 7, scope: !4705)
!4738 = !DILocation(line: 4487, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4487, column: 7)
!4740 = !DILocation(line: 4487, column: 11, scope: !4739)
!4741 = !DILocation(line: 4487, column: 14, scope: !4739)
!4742 = !DILocation(line: 4487, column: 7, scope: !4705)
!4743 = !DILocation(line: 4488, column: 7, scope: !4739)
!4744 = !DILocation(line: 4488, column: 7, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 4488, column: 7)
!4746 = !DILocation(line: 4490, column: 7, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4490, column: 7)
!4748 = !DILocation(line: 4490, column: 7, scope: !4705)
!4749 = !DILocation(line: 4491, column: 28, scope: !4747)
!4750 = !DILocation(line: 4491, column: 5, scope: !4747)
!4751 = !DILocalVariable(name: "skip_quotes", scope: !4705, file: !3, line: 4495, type: !141)
!4752 = !DILocation(line: 4495, column: 8, scope: !4705)
!4753 = !DILocation(line: 4497, column: 7, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4497, column: 7)
!4755 = !DILocation(line: 4497, column: 7, scope: !4705)
!4756 = !DILocation(line: 4499, column: 11, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 4499, column: 11)
!4758 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 4498, column: 5)
!4759 = !DILocation(line: 4499, column: 39, scope: !4757)
!4760 = !DILocation(line: 4499, column: 42, scope: !4757)
!4761 = !DILocation(line: 4499, column: 58, scope: !4757)
!4762 = !DILocation(line: 4499, column: 63, scope: !4757)
!4763 = !DILocation(line: 4499, column: 11, scope: !4758)
!4764 = !DILocation(line: 4501, column: 23, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 4500, column: 9)
!4766 = !DILocation(line: 4502, column: 11, scope: !4765)
!4767 = !DILocation(line: 4503, column: 9, scope: !4765)
!4768 = !DILocalVariable(name: "h", scope: !4758, file: !3, line: 4504, type: !143)
!4769 = !DILocation(line: 4504, column: 13, scope: !4758)
!4770 = !DILocation(line: 4504, column: 30, scope: !4758)
!4771 = !DILocation(line: 4504, column: 17, scope: !4758)
!4772 = !DILocalVariable(name: "n", scope: !4758, file: !3, line: 4505, type: !143)
!4773 = !DILocation(line: 4505, column: 13, scope: !4758)
!4774 = !DILocation(line: 4505, column: 30, scope: !4758)
!4775 = !DILocation(line: 4505, column: 17, scope: !4758)
!4776 = !DILocation(line: 4511, column: 42, scope: !4758)
!4777 = !DILocation(line: 4511, column: 46, scope: !4758)
!4778 = !DILocation(line: 4511, column: 45, scope: !4758)
!4779 = !DILocation(line: 4511, column: 48, scope: !4758)
!4780 = !DILocation(line: 4511, column: 67, scope: !4758)
!4781 = !DILocation(line: 4511, column: 7, scope: !4758)
!4782 = !DILocation(line: 4512, column: 13, scope: !4758)
!4783 = !DILocation(line: 4512, column: 7, scope: !4758)
!4784 = !DILocation(line: 4513, column: 13, scope: !4758)
!4785 = !DILocation(line: 4513, column: 7, scope: !4758)
!4786 = !DILocation(line: 4514, column: 5, scope: !4758)
!4787 = !DILocation(line: 4516, column: 7, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4516, column: 7)
!4789 = !DILocation(line: 4516, column: 7, scope: !4705)
!4790 = !DILocation(line: 4517, column: 5, scope: !4788)
!4791 = !DILocation(line: 4517, column: 5, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 4517, column: 5)
!4793 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 4517, column: 5)
!4794 = !DILocation(line: 4517, column: 5, scope: !4793)
!4795 = !DILocalVariable(name: "__o", scope: !4796, file: !3, line: 4517, type: !604)
!4796 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 4517, column: 5)
!4797 = !DILocation(line: 4517, column: 5, scope: !4796)
!4798 = !DILocalVariable(name: "__len", scope: !4796, file: !3, line: 4517, type: !149)
!4799 = !DILocalVariable(name: "__o1", scope: !4800, file: !3, line: 4517, type: !451)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 4517, column: 5)
!4801 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 4517, column: 5)
!4802 = !DILocation(line: 4517, column: 5, scope: !4800)
!4803 = !DILocation(line: 4517, column: 5, scope: !4801)
!4804 = !DILocation(line: 4519, column: 3, scope: !4705)
!4805 = !DILocation(line: 4521, column: 16, scope: !4705)
!4806 = !DILocation(line: 4521, column: 13, scope: !4705)
!4807 = !DILocation(line: 4523, column: 7, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4523, column: 7)
!4809 = !DILocation(line: 4523, column: 7, scope: !4705)
!4810 = !DILocation(line: 4524, column: 5, scope: !4808)
!4811 = !DILocation(line: 4524, column: 5, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 4524, column: 5)
!4813 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 4524, column: 5)
!4814 = !DILocation(line: 4524, column: 5, scope: !4813)
!4815 = !DILocalVariable(name: "__o", scope: !4816, file: !3, line: 4524, type: !604)
!4816 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 4524, column: 5)
!4817 = !DILocation(line: 4524, column: 5, scope: !4816)
!4818 = !DILocalVariable(name: "__len", scope: !4816, file: !3, line: 4524, type: !149)
!4819 = !DILocalVariable(name: "__o1", scope: !4820, file: !3, line: 4524, type: !451)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 4524, column: 5)
!4821 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 4524, column: 5)
!4822 = !DILocation(line: 4524, column: 5, scope: !4820)
!4823 = !DILocation(line: 4524, column: 5, scope: !4821)
!4824 = !DILocation(line: 4526, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4526, column: 7)
!4826 = !DILocation(line: 4526, column: 7, scope: !4705)
!4827 = !DILocation(line: 4528, column: 7, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 4527, column: 5)
!4829 = !DILocation(line: 4529, column: 11, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 4529, column: 11)
!4831 = !DILocation(line: 4529, column: 11, scope: !4828)
!4832 = !DILocation(line: 4530, column: 9, scope: !4830)
!4833 = !DILocation(line: 4531, column: 5, scope: !4828)
!4834 = !DILocation(line: 4533, column: 7, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 4533, column: 7)
!4836 = !DILocation(line: 4533, column: 14, scope: !4835)
!4837 = !DILocation(line: 4533, column: 11, scope: !4835)
!4838 = !DILocation(line: 4533, column: 23, scope: !4835)
!4839 = !DILocation(line: 4533, column: 26, scope: !4835)
!4840 = !DILocation(line: 4533, column: 33, scope: !4835)
!4841 = !DILocation(line: 4533, column: 30, scope: !4835)
!4842 = !DILocation(line: 4533, column: 7, scope: !4705)
!4843 = !DILocation(line: 4534, column: 11, scope: !4835)
!4844 = !DILocation(line: 4534, column: 5, scope: !4835)
!4845 = !DILocation(line: 4536, column: 10, scope: !4705)
!4846 = !DILocation(line: 4536, column: 16, scope: !4705)
!4847 = !DILocation(line: 4536, column: 14, scope: !4705)
!4848 = !DILocation(line: 4536, column: 3, scope: !4705)
!4849 = distinct !DISubprogram(name: "file_ignored", scope: !3, file: !3, line: 2919, type: !4850, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!141, !146}
!4852 = !DILocalVariable(name: "name", arg: 1, scope: !4849, file: !3, line: 2919, type: !146)
!4853 = !DILocation(line: 2919, column: 27, scope: !4849)
!4854 = !DILocation(line: 2921, column: 12, scope: !4849)
!4855 = !DILocation(line: 2921, column: 24, scope: !4849)
!4856 = !DILocation(line: 2922, column: 12, scope: !4849)
!4857 = !DILocation(line: 2922, column: 15, scope: !4849)
!4858 = !DILocation(line: 2922, column: 23, scope: !4849)
!4859 = !DILocation(line: 2923, column: 12, scope: !4849)
!4860 = !DILocation(line: 2923, column: 16, scope: !4849)
!4861 = !DILocation(line: 2923, column: 28, scope: !4849)
!4862 = !DILocation(line: 2923, column: 46, scope: !4849)
!4863 = !DILocation(line: 2923, column: 51, scope: !4849)
!4864 = !DILocation(line: 2923, column: 61, scope: !4849)
!4865 = !DILocation(line: 2923, column: 69, scope: !4849)
!4866 = !DILocation(line: 2923, column: 58, scope: !4849)
!4867 = !DILocation(line: 2924, column: 11, scope: !4849)
!4868 = !DILocation(line: 2924, column: 15, scope: !4849)
!4869 = !DILocation(line: 2924, column: 27, scope: !4849)
!4870 = !DILocation(line: 2925, column: 15, scope: !4849)
!4871 = !DILocation(line: 2925, column: 34, scope: !4849)
!4872 = !DILocation(line: 2925, column: 49, scope: !4849)
!4873 = !DILocation(line: 2925, column: 18, scope: !4849)
!4874 = !DILocation(line: 2926, column: 11, scope: !4849)
!4875 = !DILocation(line: 2926, column: 30, scope: !4849)
!4876 = !DILocation(line: 2926, column: 47, scope: !4849)
!4877 = !DILocation(line: 2926, column: 14, scope: !4849)
!4878 = !DILocation(line: 2921, column: 3, scope: !4849)
!4879 = distinct !DISubprogram(name: "process_signals", scope: !3, file: !3, line: 1312, type: !526, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4880 = !DILocation(line: 1314, column: 3, scope: !4879)
!4881 = !DILocation(line: 1314, column: 10, scope: !4879)
!4882 = !DILocation(line: 1314, column: 27, scope: !4879)
!4883 = !DILocation(line: 1314, column: 30, scope: !4879)
!4884 = !DILocalVariable(name: "sig", scope: !4885, file: !3, line: 1316, type: !27)
!4885 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1315, column: 5)
!4886 = !DILocation(line: 1316, column: 11, scope: !4885)
!4887 = !DILocalVariable(name: "stops", scope: !4885, file: !3, line: 1317, type: !27)
!4888 = !DILocation(line: 1317, column: 11, scope: !4885)
!4889 = !DILocalVariable(name: "oldset", scope: !4885, file: !3, line: 1318, type: !504)
!4890 = !DILocation(line: 1318, column: 16, scope: !4885)
!4891 = !DILocation(line: 1320, column: 11, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 1320, column: 11)
!4893 = !DILocation(line: 1320, column: 11, scope: !4885)
!4894 = !DILocation(line: 1321, column: 9, scope: !4892)
!4895 = !DILocation(line: 1322, column: 7, scope: !4885)
!4896 = !DILocation(line: 1324, column: 7, scope: !4885)
!4897 = !DILocation(line: 1328, column: 13, scope: !4885)
!4898 = !DILocation(line: 1328, column: 11, scope: !4885)
!4899 = !DILocation(line: 1329, column: 15, scope: !4885)
!4900 = !DILocation(line: 1329, column: 13, scope: !4885)
!4901 = !DILocation(line: 1334, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 1334, column: 11)
!4903 = !DILocation(line: 1334, column: 11, scope: !4885)
!4904 = !DILocation(line: 1336, column: 31, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 1335, column: 9)
!4906 = !DILocation(line: 1336, column: 37, scope: !4905)
!4907 = !DILocation(line: 1336, column: 29, scope: !4905)
!4908 = !DILocation(line: 1337, column: 15, scope: !4905)
!4909 = !DILocation(line: 1338, column: 9, scope: !4905)
!4910 = !DILocation(line: 1340, column: 17, scope: !4902)
!4911 = !DILocation(line: 1340, column: 9, scope: !4902)
!4912 = !DILocation(line: 1343, column: 14, scope: !4885)
!4913 = !DILocation(line: 1343, column: 7, scope: !4885)
!4914 = !DILocation(line: 1344, column: 7, scope: !4885)
!4915 = distinct !{!4915, !4880, !4916}
!4916 = !DILocation(line: 1348, column: 5, scope: !4879)
!4917 = !DILocation(line: 1349, column: 1, scope: !4879)
!4918 = distinct !DISubprogram(name: "patterns_match", scope: !3, file: !3, line: 2907, type: !4919, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!141, !752, !146}
!4921 = !DILocalVariable(name: "patterns", arg: 1, scope: !4918, file: !3, line: 2907, type: !752)
!4922 = !DILocation(line: 2907, column: 46, scope: !4918)
!4923 = !DILocalVariable(name: "file", arg: 2, scope: !4918, file: !3, line: 2907, type: !146)
!4924 = !DILocation(line: 2907, column: 68, scope: !4918)
!4925 = !DILocalVariable(name: "p", scope: !4918, file: !3, line: 2909, type: !752)
!4926 = !DILocation(line: 2909, column: 32, scope: !4918)
!4927 = !DILocation(line: 2910, column: 12, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2910, column: 3)
!4929 = !DILocation(line: 2910, column: 10, scope: !4928)
!4930 = !DILocation(line: 2910, column: 8, scope: !4928)
!4931 = !DILocation(line: 2910, column: 22, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2910, column: 3)
!4933 = !DILocation(line: 2910, column: 3, scope: !4928)
!4934 = !DILocation(line: 2911, column: 18, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 2911, column: 9)
!4936 = !DILocation(line: 2911, column: 21, scope: !4935)
!4937 = !DILocation(line: 2911, column: 30, scope: !4935)
!4938 = !DILocation(line: 2911, column: 9, scope: !4935)
!4939 = !DILocation(line: 2911, column: 48, scope: !4935)
!4940 = !DILocation(line: 2911, column: 9, scope: !4932)
!4941 = !DILocation(line: 2912, column: 7, scope: !4935)
!4942 = !DILocation(line: 2911, column: 51, scope: !4935)
!4943 = !DILocation(line: 2910, column: 29, scope: !4932)
!4944 = !DILocation(line: 2910, column: 32, scope: !4932)
!4945 = !DILocation(line: 2910, column: 27, scope: !4932)
!4946 = !DILocation(line: 2910, column: 3, scope: !4932)
!4947 = distinct !{!4947, !4933, !4948}
!4948 = !DILocation(line: 2912, column: 14, scope: !4928)
!4949 = !DILocation(line: 2913, column: 3, scope: !4918)
!4950 = !DILocation(line: 2914, column: 1, scope: !4918)
!4951 = distinct !DISubprogram(name: "quote_name_buf", scope: !3, file: !3, line: 4240, type: !4952, scopeLine: 4243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!149, !142, !149, !143, !4708, !27, !148, !4954}
!4954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!4955 = !DILocalVariable(name: "inbuf", arg: 1, scope: !4951, file: !3, line: 4240, type: !142)
!4956 = !DILocation(line: 4240, column: 24, scope: !4951)
!4957 = !DILocalVariable(name: "bufsize", arg: 2, scope: !4951, file: !3, line: 4240, type: !149)
!4958 = !DILocation(line: 4240, column: 38, scope: !4951)
!4959 = !DILocalVariable(name: "name", arg: 3, scope: !4951, file: !3, line: 4240, type: !143)
!4960 = !DILocation(line: 4240, column: 53, scope: !4951)
!4961 = !DILocalVariable(name: "options", arg: 4, scope: !4951, file: !3, line: 4241, type: !4708)
!4962 = !DILocation(line: 4241, column: 47, scope: !4951)
!4963 = !DILocalVariable(name: "needs_general_quoting", arg: 5, scope: !4951, file: !3, line: 4242, type: !27)
!4964 = !DILocation(line: 4242, column: 21, scope: !4951)
!4965 = !DILocalVariable(name: "width", arg: 6, scope: !4951, file: !3, line: 4242, type: !148)
!4966 = !DILocation(line: 4242, column: 52, scope: !4951)
!4967 = !DILocalVariable(name: "pad", arg: 7, scope: !4951, file: !3, line: 4242, type: !4954)
!4968 = !DILocation(line: 4242, column: 65, scope: !4951)
!4969 = !DILocalVariable(name: "buf", scope: !4951, file: !3, line: 4244, type: !143)
!4970 = !DILocation(line: 4244, column: 9, scope: !4951)
!4971 = !DILocation(line: 4244, column: 16, scope: !4951)
!4972 = !DILocation(line: 4244, column: 15, scope: !4951)
!4973 = !DILocalVariable(name: "displayed_width", scope: !4951, file: !3, line: 4245, type: !149)
!4974 = !DILocation(line: 4245, column: 10, scope: !4951)
!4975 = !DILocalVariable(name: "len", scope: !4951, file: !3, line: 4246, type: !149)
!4976 = !DILocation(line: 4246, column: 10, scope: !4951)
!4977 = !DILocalVariable(name: "quoted", scope: !4951, file: !3, line: 4247, type: !141)
!4978 = !DILocation(line: 4247, column: 8, scope: !4951)
!4979 = !DILocalVariable(name: "qs", scope: !4951, file: !3, line: 4249, type: !95)
!4980 = !DILocation(line: 4249, column: 22, scope: !4951)
!4981 = !DILocation(line: 4249, column: 46, scope: !4951)
!4982 = !DILocation(line: 4249, column: 27, scope: !4951)
!4983 = !DILocalVariable(name: "needs_further_quoting", scope: !4951, file: !3, line: 4250, type: !141)
!4984 = !DILocation(line: 4250, column: 8, scope: !4951)
!4985 = !DILocation(line: 4250, column: 32, scope: !4951)
!4986 = !DILocation(line: 4251, column: 32, scope: !4951)
!4987 = !DILocation(line: 4251, column: 36, scope: !4951)
!4988 = !DILocation(line: 4251, column: 39, scope: !4951)
!4989 = !DILocation(line: 4252, column: 36, scope: !4951)
!4990 = !DILocation(line: 4252, column: 39, scope: !4951)
!4991 = !DILocation(line: 4252, column: 42, scope: !4951)
!4992 = !DILocation(line: 4253, column: 36, scope: !4951)
!4993 = !DILocation(line: 4253, column: 39, scope: !4951)
!4994 = !DILocation(line: 4253, column: 42, scope: !4951)
!4995 = !DILocation(line: 0, scope: !4951)
!4996 = !DILocation(line: 4255, column: 7, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 4255, column: 7)
!4998 = !DILocation(line: 4255, column: 29, scope: !4997)
!4999 = !DILocation(line: 4255, column: 7, scope: !4951)
!5000 = !DILocation(line: 4257, column: 30, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 4256, column: 5)
!5002 = !DILocation(line: 4257, column: 35, scope: !5001)
!5003 = !DILocation(line: 4257, column: 44, scope: !5001)
!5004 = !DILocation(line: 4257, column: 54, scope: !5001)
!5005 = !DILocation(line: 4257, column: 13, scope: !5001)
!5006 = !DILocation(line: 4257, column: 11, scope: !5001)
!5007 = !DILocation(line: 4258, column: 11, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 4258, column: 11)
!5009 = !DILocation(line: 4258, column: 22, scope: !5008)
!5010 = !DILocation(line: 4258, column: 19, scope: !5008)
!5011 = !DILocation(line: 4258, column: 11, scope: !5001)
!5012 = !DILocation(line: 4260, column: 26, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 4259, column: 9)
!5014 = !DILocation(line: 4260, column: 30, scope: !5013)
!5015 = !DILocation(line: 4260, column: 17, scope: !5013)
!5016 = !DILocation(line: 4260, column: 15, scope: !5013)
!5017 = !DILocation(line: 4261, column: 28, scope: !5013)
!5018 = !DILocation(line: 4261, column: 33, scope: !5013)
!5019 = !DILocation(line: 4261, column: 37, scope: !5013)
!5020 = !DILocation(line: 4261, column: 42, scope: !5013)
!5021 = !DILocation(line: 4261, column: 52, scope: !5013)
!5022 = !DILocation(line: 4261, column: 11, scope: !5013)
!5023 = !DILocation(line: 4262, column: 9, scope: !5013)
!5024 = !DILocation(line: 4264, column: 18, scope: !5001)
!5025 = !DILocation(line: 4264, column: 17, scope: !5001)
!5026 = !DILocation(line: 4264, column: 27, scope: !5001)
!5027 = !DILocation(line: 4264, column: 26, scope: !5001)
!5028 = !DILocation(line: 4264, column: 23, scope: !5001)
!5029 = !DILocation(line: 4264, column: 32, scope: !5001)
!5030 = !DILocation(line: 4264, column: 43, scope: !5001)
!5031 = !DILocation(line: 4264, column: 35, scope: !5001)
!5032 = !DILocation(line: 4264, column: 52, scope: !5001)
!5033 = !DILocation(line: 4264, column: 49, scope: !5001)
!5034 = !DILocation(line: 4264, column: 14, scope: !5001)
!5035 = !DILocation(line: 4265, column: 5, scope: !5001)
!5036 = !DILocation(line: 4266, column: 12, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 4266, column: 12)
!5038 = !DILocation(line: 4266, column: 12, scope: !4997)
!5039 = !DILocation(line: 4268, column: 21, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 4267, column: 5)
!5041 = !DILocation(line: 4268, column: 13, scope: !5040)
!5042 = !DILocation(line: 4268, column: 11, scope: !5040)
!5043 = !DILocation(line: 4269, column: 11, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 4269, column: 11)
!5045 = !DILocation(line: 4269, column: 22, scope: !5044)
!5046 = !DILocation(line: 4269, column: 19, scope: !5044)
!5047 = !DILocation(line: 4269, column: 11, scope: !5040)
!5048 = !DILocation(line: 4270, column: 24, scope: !5044)
!5049 = !DILocation(line: 4270, column: 28, scope: !5044)
!5050 = !DILocation(line: 4270, column: 15, scope: !5044)
!5051 = !DILocation(line: 4270, column: 13, scope: !5044)
!5052 = !DILocation(line: 4270, column: 9, scope: !5044)
!5053 = !DILocation(line: 4271, column: 15, scope: !5040)
!5054 = !DILocation(line: 4271, column: 20, scope: !5040)
!5055 = !DILocation(line: 4271, column: 26, scope: !5040)
!5056 = !DILocation(line: 4271, column: 30, scope: !5040)
!5057 = !DILocation(line: 4271, column: 7, scope: !5040)
!5058 = !DILocation(line: 4273, column: 14, scope: !5040)
!5059 = !DILocation(line: 4274, column: 5, scope: !5040)
!5060 = !DILocation(line: 4277, column: 21, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 4276, column: 5)
!5062 = !DILocation(line: 4277, column: 13, scope: !5061)
!5063 = !DILocation(line: 4277, column: 11, scope: !5061)
!5064 = !DILocation(line: 4278, column: 13, scope: !5061)
!5065 = !DILocation(line: 4278, column: 11, scope: !5061)
!5066 = !DILocation(line: 4279, column: 14, scope: !5061)
!5067 = !DILocation(line: 4282, column: 7, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 4282, column: 7)
!5069 = !DILocation(line: 4282, column: 7, scope: !4951)
!5070 = !DILocation(line: 4284, column: 11, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 4284, column: 11)
!5072 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 4283, column: 5)
!5073 = !DILocation(line: 4284, column: 22, scope: !5071)
!5074 = !DILocation(line: 4284, column: 11, scope: !5072)
!5075 = !DILocalVariable(name: "p", scope: !5076, file: !3, line: 4286, type: !146)
!5076 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 4285, column: 9)
!5077 = !DILocation(line: 4286, column: 23, scope: !5076)
!5078 = !DILocation(line: 4286, column: 27, scope: !5076)
!5079 = !DILocalVariable(name: "plimit", scope: !5076, file: !3, line: 4287, type: !146)
!5080 = !DILocation(line: 4287, column: 23, scope: !5076)
!5081 = !DILocation(line: 4287, column: 32, scope: !5076)
!5082 = !DILocation(line: 4287, column: 38, scope: !5076)
!5083 = !DILocation(line: 4287, column: 36, scope: !5076)
!5084 = !DILocalVariable(name: "q", scope: !5076, file: !3, line: 4288, type: !143)
!5085 = !DILocation(line: 4288, column: 17, scope: !5076)
!5086 = !DILocation(line: 4288, column: 21, scope: !5076)
!5087 = !DILocation(line: 4289, column: 27, scope: !5076)
!5088 = !DILocation(line: 4291, column: 11, scope: !5076)
!5089 = !DILocation(line: 4291, column: 18, scope: !5076)
!5090 = !DILocation(line: 4291, column: 22, scope: !5076)
!5091 = !DILocation(line: 4291, column: 20, scope: !5076)
!5092 = !DILocation(line: 4292, column: 22, scope: !5076)
!5093 = !DILocation(line: 4292, column: 21, scope: !5076)
!5094 = !DILocation(line: 4292, column: 13, scope: !5076)
!5095 = !DILocation(line: 4315, column: 28, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 4293, column: 15)
!5097 = !DILocation(line: 4315, column: 26, scope: !5096)
!5098 = !DILocation(line: 4315, column: 21, scope: !5096)
!5099 = !DILocation(line: 4315, column: 24, scope: !5096)
!5100 = !DILocation(line: 4316, column: 35, scope: !5096)
!5101 = !DILocation(line: 4317, column: 19, scope: !5096)
!5102 = !DILocalVariable(name: "mbstate", scope: !5103, file: !3, line: 4323, type: !740)
!5103 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 4322, column: 19)
!5104 = !DILocation(line: 4323, column: 31, scope: !5103)
!5105 = !DILocation(line: 4324, column: 21, scope: !5103)
!5106 = !DILocalVariable(name: "wc", scope: !5107, file: !3, line: 4326, type: !751)
!5107 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 4325, column: 23)
!5108 = !DILocation(line: 4326, column: 33, scope: !5107)
!5109 = !DILocalVariable(name: "bytes", scope: !5107, file: !3, line: 4327, type: !149)
!5110 = !DILocation(line: 4327, column: 32, scope: !5107)
!5111 = !DILocalVariable(name: "w", scope: !5107, file: !3, line: 4328, type: !27)
!5112 = !DILocation(line: 4328, column: 29, scope: !5107)
!5113 = !DILocation(line: 4330, column: 47, scope: !5107)
!5114 = !DILocation(line: 4330, column: 50, scope: !5107)
!5115 = !DILocation(line: 4330, column: 59, scope: !5107)
!5116 = !DILocation(line: 4330, column: 57, scope: !5107)
!5117 = !DILocation(line: 4330, column: 33, scope: !5107)
!5118 = !DILocation(line: 4330, column: 31, scope: !5107)
!5119 = !DILocation(line: 4332, column: 29, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 4332, column: 29)
!5121 = !DILocation(line: 4332, column: 35, scope: !5120)
!5122 = !DILocation(line: 4332, column: 29, scope: !5107)
!5123 = !DILocation(line: 4337, column: 30, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 4333, column: 27)
!5125 = !DILocation(line: 4338, column: 31, scope: !5124)
!5126 = !DILocation(line: 4338, column: 34, scope: !5124)
!5127 = !DILocation(line: 4339, column: 45, scope: !5124)
!5128 = !DILocation(line: 4340, column: 29, scope: !5124)
!5129 = !DILocation(line: 4343, column: 29, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 4343, column: 29)
!5131 = !DILocation(line: 4343, column: 35, scope: !5130)
!5132 = !DILocation(line: 4343, column: 29, scope: !5107)
!5133 = !DILocation(line: 4348, column: 33, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 4344, column: 27)
!5135 = !DILocation(line: 4348, column: 31, scope: !5134)
!5136 = !DILocation(line: 4349, column: 31, scope: !5134)
!5137 = !DILocation(line: 4349, column: 34, scope: !5134)
!5138 = !DILocation(line: 4350, column: 45, scope: !5134)
!5139 = !DILocation(line: 4351, column: 29, scope: !5134)
!5140 = !DILocation(line: 4354, column: 29, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 4354, column: 29)
!5142 = !DILocation(line: 4354, column: 35, scope: !5141)
!5143 = !DILocation(line: 4354, column: 29, scope: !5107)
!5144 = !DILocation(line: 4356, column: 33, scope: !5141)
!5145 = !DILocation(line: 4356, column: 27, scope: !5141)
!5146 = !DILocation(line: 4358, column: 38, scope: !5107)
!5147 = !DILocation(line: 4358, column: 29, scope: !5107)
!5148 = !DILocation(line: 4358, column: 27, scope: !5107)
!5149 = !DILocation(line: 4359, column: 29, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 4359, column: 29)
!5151 = !DILocation(line: 4359, column: 31, scope: !5150)
!5152 = !DILocation(line: 4359, column: 29, scope: !5107)
!5153 = !DILocation(line: 4363, column: 29, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 4360, column: 27)
!5155 = !DILocation(line: 4363, column: 36, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 4363, column: 29)
!5157 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 4363, column: 29)
!5158 = !DILocation(line: 4363, column: 42, scope: !5156)
!5159 = !DILocation(line: 4363, column: 29, scope: !5157)
!5160 = !DILocation(line: 4364, column: 40, scope: !5156)
!5161 = !DILocation(line: 4364, column: 38, scope: !5156)
!5162 = !DILocation(line: 4364, column: 33, scope: !5156)
!5163 = !DILocation(line: 4364, column: 36, scope: !5156)
!5164 = !DILocation(line: 4364, column: 31, scope: !5156)
!5165 = !DILocation(line: 4363, column: 47, scope: !5156)
!5166 = !DILocation(line: 4363, column: 29, scope: !5156)
!5167 = distinct !{!5167, !5159, !5168}
!5168 = !DILocation(line: 4364, column: 40, scope: !5157)
!5169 = !DILocation(line: 4365, column: 48, scope: !5154)
!5170 = !DILocation(line: 4365, column: 45, scope: !5154)
!5171 = !DILocation(line: 4366, column: 27, scope: !5154)
!5172 = !DILocation(line: 4372, column: 34, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 4368, column: 27)
!5174 = !DILocation(line: 4372, column: 31, scope: !5173)
!5175 = !DILocation(line: 4373, column: 31, scope: !5173)
!5176 = !DILocation(line: 4373, column: 34, scope: !5173)
!5177 = !DILocation(line: 4374, column: 45, scope: !5173)
!5178 = !DILocation(line: 4376, column: 23, scope: !5107)
!5179 = !DILocation(line: 4377, column: 30, scope: !5103)
!5180 = !DILocation(line: 4377, column: 28, scope: !5103)
!5181 = distinct !{!5181, !5105, !5182}
!5182 = !DILocation(line: 4377, column: 48, scope: !5103)
!5183 = !DILocation(line: 4379, column: 19, scope: !5096)
!5184 = distinct !{!5184, !5088, !5185}
!5185 = !DILocation(line: 4380, column: 15, scope: !5076)
!5186 = !DILocation(line: 4383, column: 17, scope: !5076)
!5187 = !DILocation(line: 4383, column: 21, scope: !5076)
!5188 = !DILocation(line: 4383, column: 19, scope: !5076)
!5189 = !DILocation(line: 4383, column: 15, scope: !5076)
!5190 = !DILocation(line: 4384, column: 9, scope: !5076)
!5191 = !DILocalVariable(name: "p", scope: !5192, file: !3, line: 4387, type: !143)
!5192 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 4386, column: 9)
!5193 = !DILocation(line: 4387, column: 17, scope: !5192)
!5194 = !DILocation(line: 4387, column: 21, scope: !5192)
!5195 = !DILocalVariable(name: "plimit", scope: !5192, file: !3, line: 4388, type: !146)
!5196 = !DILocation(line: 4388, column: 23, scope: !5192)
!5197 = !DILocation(line: 4388, column: 32, scope: !5192)
!5198 = !DILocation(line: 4388, column: 38, scope: !5192)
!5199 = !DILocation(line: 4388, column: 36, scope: !5192)
!5200 = !DILocation(line: 4390, column: 11, scope: !5192)
!5201 = !DILocation(line: 4390, column: 18, scope: !5192)
!5202 = !DILocation(line: 4390, column: 22, scope: !5192)
!5203 = !DILocation(line: 4390, column: 20, scope: !5192)
!5204 = !DILocation(line: 4392, column: 21, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 4392, column: 19)
!5206 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 4391, column: 13)
!5207 = !DILocation(line: 4392, column: 19, scope: !5206)
!5208 = !DILocation(line: 4393, column: 18, scope: !5205)
!5209 = !DILocation(line: 4393, column: 20, scope: !5205)
!5210 = !DILocation(line: 4393, column: 17, scope: !5205)
!5211 = !DILocation(line: 4394, column: 16, scope: !5206)
!5212 = distinct !{!5212, !5200, !5213}
!5213 = !DILocation(line: 4395, column: 13, scope: !5192)
!5214 = !DILocation(line: 4396, column: 29, scope: !5192)
!5215 = !DILocation(line: 4396, column: 27, scope: !5192)
!5216 = !DILocation(line: 4398, column: 5, scope: !5072)
!5217 = !DILocation(line: 4399, column: 12, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 4399, column: 12)
!5219 = !DILocation(line: 4399, column: 18, scope: !5218)
!5220 = !DILocation(line: 4399, column: 12, scope: !5068)
!5221 = !DILocation(line: 4401, column: 11, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 4401, column: 11)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 4400, column: 5)
!5224 = !DILocation(line: 4401, column: 22, scope: !5222)
!5225 = !DILocation(line: 4401, column: 11, scope: !5223)
!5226 = !DILocation(line: 4402, column: 38, scope: !5222)
!5227 = !DILocation(line: 4402, column: 43, scope: !5222)
!5228 = !DILocation(line: 4402, column: 27, scope: !5222)
!5229 = !DILocation(line: 4402, column: 25, scope: !5222)
!5230 = !DILocation(line: 4402, column: 9, scope: !5222)
!5231 = !DILocalVariable(name: "p", scope: !5232, file: !3, line: 4405, type: !146)
!5232 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 4404, column: 9)
!5233 = !DILocation(line: 4405, column: 23, scope: !5232)
!5234 = !DILocation(line: 4405, column: 27, scope: !5232)
!5235 = !DILocalVariable(name: "plimit", scope: !5232, file: !3, line: 4406, type: !146)
!5236 = !DILocation(line: 4406, column: 23, scope: !5232)
!5237 = !DILocation(line: 4406, column: 32, scope: !5232)
!5238 = !DILocation(line: 4406, column: 38, scope: !5232)
!5239 = !DILocation(line: 4406, column: 36, scope: !5232)
!5240 = !DILocation(line: 4408, column: 27, scope: !5232)
!5241 = !DILocation(line: 4409, column: 11, scope: !5232)
!5242 = !DILocation(line: 4409, column: 18, scope: !5232)
!5243 = !DILocation(line: 4409, column: 22, scope: !5232)
!5244 = !DILocation(line: 4409, column: 20, scope: !5232)
!5245 = !DILocation(line: 4411, column: 19, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 4411, column: 19)
!5247 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 4410, column: 13)
!5248 = !DILocation(line: 4411, column: 19, scope: !5247)
!5249 = !DILocation(line: 4412, column: 32, scope: !5246)
!5250 = !DILocation(line: 4412, column: 17, scope: !5246)
!5251 = !DILocation(line: 4413, column: 16, scope: !5247)
!5252 = distinct !{!5252, !5241, !5253}
!5253 = !DILocation(line: 4414, column: 13, scope: !5232)
!5254 = !DILocation(line: 4416, column: 5, scope: !5223)
!5255 = !DILocation(line: 4421, column: 11, scope: !4951)
!5256 = !DILocation(line: 4421, column: 39, scope: !4951)
!5257 = !DILocation(line: 4421, column: 42, scope: !4951)
!5258 = !DILocation(line: 4421, column: 58, scope: !4951)
!5259 = !DILocation(line: 4421, column: 63, scope: !4951)
!5260 = !DILocation(line: 4421, column: 61, scope: !4951)
!5261 = !DILocation(line: 4421, column: 4, scope: !4951)
!5262 = !DILocation(line: 4421, column: 8, scope: !4951)
!5263 = !DILocation(line: 4423, column: 7, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 4423, column: 7)
!5265 = !DILocation(line: 4423, column: 13, scope: !5264)
!5266 = !DILocation(line: 4423, column: 7, scope: !4951)
!5267 = !DILocation(line: 4424, column: 14, scope: !5264)
!5268 = !DILocation(line: 4424, column: 6, scope: !5264)
!5269 = !DILocation(line: 4424, column: 12, scope: !5264)
!5270 = !DILocation(line: 4424, column: 5, scope: !5264)
!5271 = !DILocation(line: 4426, column: 12, scope: !4951)
!5272 = !DILocation(line: 4426, column: 4, scope: !4951)
!5273 = !DILocation(line: 4426, column: 10, scope: !4951)
!5274 = !DILocation(line: 4428, column: 10, scope: !4951)
!5275 = !DILocation(line: 4428, column: 3, scope: !4951)
!5276 = distinct !DISubprogram(name: "print_color_indicator", scope: !3, file: !3, line: 4665, type: !5277, scopeLine: 4666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{!141, !793}
!5279 = !DILocalVariable(name: "ind", arg: 1, scope: !5276, file: !3, line: 4665, type: !793)
!5280 = !DILocation(line: 4665, column: 46, scope: !5276)
!5281 = !DILocation(line: 4667, column: 7, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 4667, column: 7)
!5283 = !DILocation(line: 4667, column: 7, scope: !5276)
!5284 = !DILocation(line: 4670, column: 11, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 4670, column: 11)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 4668, column: 5)
!5287 = !DILocation(line: 4670, column: 11, scope: !5286)
!5288 = !DILocation(line: 4671, column: 9, scope: !5285)
!5289 = !DILocation(line: 4672, column: 7, scope: !5286)
!5290 = !DILocation(line: 4673, column: 22, scope: !5286)
!5291 = !DILocation(line: 4673, column: 7, scope: !5286)
!5292 = !DILocation(line: 4674, column: 7, scope: !5286)
!5293 = !DILocation(line: 4675, column: 5, scope: !5286)
!5294 = !DILocation(line: 4677, column: 10, scope: !5276)
!5295 = !DILocation(line: 4677, column: 14, scope: !5276)
!5296 = !DILocation(line: 4677, column: 3, scope: !5276)
!5297 = distinct !DISubprogram(name: "file_escape", scope: !3, file: !3, line: 4454, type: !5298, scopeLine: 4455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!143, !146, !141}
!5300 = !DILocalVariable(name: "str", arg: 1, scope: !5297, file: !3, line: 4454, type: !146)
!5301 = !DILocation(line: 4454, column: 26, scope: !5297)
!5302 = !DILocalVariable(name: "path", arg: 2, scope: !5297, file: !3, line: 4454, type: !141)
!5303 = !DILocation(line: 4454, column: 36, scope: !5297)
!5304 = !DILocalVariable(name: "esc", scope: !5297, file: !3, line: 4456, type: !143)
!5305 = !DILocation(line: 4456, column: 9, scope: !5297)
!5306 = !DILocation(line: 4456, column: 36, scope: !5297)
!5307 = !DILocation(line: 4456, column: 28, scope: !5297)
!5308 = !DILocation(line: 4456, column: 41, scope: !5297)
!5309 = !DILocation(line: 4456, column: 15, scope: !5297)
!5310 = !DILocalVariable(name: "p", scope: !5297, file: !3, line: 4457, type: !143)
!5311 = !DILocation(line: 4457, column: 9, scope: !5297)
!5312 = !DILocation(line: 4457, column: 13, scope: !5297)
!5313 = !DILocation(line: 4458, column: 3, scope: !5297)
!5314 = !DILocation(line: 4458, column: 11, scope: !5297)
!5315 = !DILocation(line: 4458, column: 10, scope: !5297)
!5316 = !DILocation(line: 4460, column: 11, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 4460, column: 11)
!5318 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 4459, column: 5)
!5319 = !DILocation(line: 4460, column: 16, scope: !5317)
!5320 = !DILocation(line: 4460, column: 19, scope: !5317)
!5321 = !DILocation(line: 4460, column: 11, scope: !5318)
!5322 = !DILocation(line: 4462, column: 13, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 4461, column: 9)
!5324 = !DILocation(line: 4462, column: 16, scope: !5323)
!5325 = !DILocation(line: 4463, column: 14, scope: !5323)
!5326 = !DILocation(line: 4464, column: 9, scope: !5323)
!5327 = !DILocation(line: 4465, column: 35, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 4465, column: 16)
!5329 = !DILocation(line: 4465, column: 34, scope: !5328)
!5330 = !DILocation(line: 4465, column: 24, scope: !5328)
!5331 = !DILocation(line: 4465, column: 16, scope: !5328)
!5332 = !DILocation(line: 4465, column: 16, scope: !5317)
!5333 = !DILocation(line: 4466, column: 20, scope: !5328)
!5334 = !DILocation(line: 4466, column: 16, scope: !5328)
!5335 = !DILocation(line: 4466, column: 11, scope: !5328)
!5336 = !DILocation(line: 4466, column: 14, scope: !5328)
!5337 = !DILocation(line: 4466, column: 9, scope: !5328)
!5338 = !DILocation(line: 4468, column: 23, scope: !5328)
!5339 = !DILocation(line: 4468, column: 50, scope: !5328)
!5340 = !DILocation(line: 4468, column: 46, scope: !5328)
!5341 = !DILocation(line: 4468, column: 36, scope: !5328)
!5342 = !DILocation(line: 4468, column: 14, scope: !5328)
!5343 = !DILocation(line: 4468, column: 11, scope: !5328)
!5344 = distinct !{!5344, !5313, !5345}
!5345 = !DILocation(line: 4469, column: 5, scope: !5297)
!5346 = !DILocation(line: 4470, column: 4, scope: !5297)
!5347 = !DILocation(line: 4470, column: 6, scope: !5297)
!5348 = !DILocation(line: 4471, column: 10, scope: !5297)
!5349 = !DILocation(line: 4471, column: 3, scope: !5297)
!5350 = distinct !DISubprogram(name: "to_uchar", scope: !821, file: !821, line: 156, type: !5351, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!725, !144}
!5353 = !DILocalVariable(name: "ch", arg: 1, scope: !5350, file: !821, line: 156, type: !144)
!5354 = !DILocation(line: 156, column: 44, scope: !5350)
!5355 = !DILocation(line: 156, column: 57, scope: !5350)
!5356 = !DILocation(line: 156, column: 50, scope: !5350)
!5357 = distinct !DISubprogram(name: "print_file_name_and_frills", scope: !3, file: !3, line: 4593, type: !5358, scopeLine: 4594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{!149, !182, !149}
!5360 = !DILocalVariable(name: "f", arg: 1, scope: !5357, file: !3, line: 4593, type: !182)
!5361 = !DILocation(line: 4593, column: 52, scope: !5357)
!5362 = !DILocalVariable(name: "start_col", arg: 2, scope: !5357, file: !3, line: 4593, type: !149)
!5363 = !DILocation(line: 4593, column: 62, scope: !5357)
!5364 = !DILocalVariable(name: "buf", scope: !5357, file: !3, line: 4595, type: !734)
!5365 = !DILocation(line: 4595, column: 8, scope: !5357)
!5366 = !DILocation(line: 4597, column: 3, scope: !5357)
!5367 = !DILocation(line: 4599, column: 7, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 4599, column: 7)
!5369 = !DILocation(line: 4599, column: 7, scope: !5357)
!5370 = !DILocation(line: 4600, column: 21, scope: !5368)
!5371 = !DILocation(line: 4600, column: 28, scope: !5368)
!5372 = !DILocation(line: 4600, column: 49, scope: !5368)
!5373 = !DILocation(line: 4601, column: 27, scope: !5368)
!5374 = !DILocation(line: 4601, column: 44, scope: !5368)
!5375 = !DILocation(line: 4601, column: 13, scope: !5368)
!5376 = !DILocation(line: 4600, column: 5, scope: !5368)
!5377 = !DILocation(line: 4603, column: 7, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 4603, column: 7)
!5379 = !DILocation(line: 4603, column: 7, scope: !5357)
!5380 = !DILocation(line: 4604, column: 21, scope: !5378)
!5381 = !DILocation(line: 4604, column: 28, scope: !5378)
!5382 = !DILocation(line: 4604, column: 49, scope: !5378)
!5383 = !DILocation(line: 4605, column: 15, scope: !5378)
!5384 = !DILocation(line: 4605, column: 18, scope: !5378)
!5385 = !DILocation(line: 4605, column: 13, scope: !5378)
!5386 = !DILocation(line: 4606, column: 31, scope: !5378)
!5387 = !DILocation(line: 4606, column: 53, scope: !5378)
!5388 = !DILocation(line: 4606, column: 58, scope: !5378)
!5389 = !DILocation(line: 4607, column: 46, scope: !5378)
!5390 = !DILocation(line: 4606, column: 15, scope: !5378)
!5391 = !DILocation(line: 4604, column: 5, scope: !5378)
!5392 = !DILocation(line: 4609, column: 7, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 4609, column: 7)
!5394 = !DILocation(line: 4609, column: 7, scope: !5357)
!5395 = !DILocation(line: 4610, column: 21, scope: !5393)
!5396 = !DILocation(line: 4610, column: 28, scope: !5393)
!5397 = !DILocation(line: 4610, column: 49, scope: !5393)
!5398 = !DILocation(line: 4610, column: 65, scope: !5393)
!5399 = !DILocation(line: 4610, column: 68, scope: !5393)
!5400 = !DILocation(line: 4610, column: 5, scope: !5393)
!5401 = !DILocalVariable(name: "width", scope: !5357, file: !3, line: 4612, type: !149)
!5402 = !DILocation(line: 4612, column: 10, scope: !5357)
!5403 = !DILocation(line: 4612, column: 43, scope: !5357)
!5404 = !DILocation(line: 4612, column: 59, scope: !5357)
!5405 = !DILocation(line: 4612, column: 18, scope: !5357)
!5406 = !DILocation(line: 4614, column: 7, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 4614, column: 7)
!5408 = !DILocation(line: 4614, column: 23, scope: !5407)
!5409 = !DILocation(line: 4614, column: 7, scope: !5357)
!5410 = !DILocation(line: 4615, column: 36, scope: !5407)
!5411 = !DILocation(line: 4615, column: 39, scope: !5407)
!5412 = !DILocation(line: 4615, column: 48, scope: !5407)
!5413 = !DILocation(line: 4615, column: 51, scope: !5407)
!5414 = !DILocation(line: 4615, column: 56, scope: !5407)
!5415 = !DILocation(line: 4615, column: 65, scope: !5407)
!5416 = !DILocation(line: 4615, column: 68, scope: !5407)
!5417 = !DILocation(line: 4615, column: 14, scope: !5407)
!5418 = !DILocation(line: 4615, column: 11, scope: !5407)
!5419 = !DILocation(line: 4615, column: 5, scope: !5407)
!5420 = !DILocation(line: 4617, column: 10, scope: !5357)
!5421 = !DILocation(line: 4617, column: 3, scope: !5357)
!5422 = distinct !DISubprogram(name: "print_with_separator", scope: !3, file: !3, line: 4923, type: !5423, scopeLine: 4924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !144}
!5425 = !DILocalVariable(name: "sep", arg: 1, scope: !5422, file: !3, line: 4923, type: !144)
!5426 = !DILocation(line: 4923, column: 28, scope: !5422)
!5427 = !DILocalVariable(name: "filesno", scope: !5422, file: !3, line: 4925, type: !149)
!5428 = !DILocation(line: 4925, column: 10, scope: !5422)
!5429 = !DILocalVariable(name: "pos", scope: !5422, file: !3, line: 4926, type: !149)
!5430 = !DILocation(line: 4926, column: 10, scope: !5422)
!5431 = !DILocation(line: 4928, column: 16, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 4928, column: 3)
!5433 = !DILocation(line: 4928, column: 8, scope: !5432)
!5434 = !DILocation(line: 4928, column: 21, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 4928, column: 3)
!5436 = !DILocation(line: 4928, column: 31, scope: !5435)
!5437 = !DILocation(line: 4928, column: 29, scope: !5435)
!5438 = !DILocation(line: 4928, column: 3, scope: !5432)
!5439 = !DILocalVariable(name: "f", scope: !5440, file: !3, line: 4930, type: !182)
!5440 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 4929, column: 5)
!5441 = !DILocation(line: 4930, column: 30, scope: !5440)
!5442 = !DILocation(line: 4930, column: 34, scope: !5440)
!5443 = !DILocation(line: 4930, column: 46, scope: !5440)
!5444 = !DILocalVariable(name: "len", scope: !5440, file: !3, line: 4931, type: !149)
!5445 = !DILocation(line: 4931, column: 14, scope: !5440)
!5446 = !DILocation(line: 4931, column: 20, scope: !5440)
!5447 = !DILocation(line: 4931, column: 66, scope: !5440)
!5448 = !DILocation(line: 4931, column: 34, scope: !5440)
!5449 = !DILocation(line: 4933, column: 11, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 4933, column: 11)
!5451 = !DILocation(line: 4933, column: 19, scope: !5450)
!5452 = !DILocation(line: 4933, column: 11, scope: !5440)
!5453 = !DILocalVariable(name: "separator", scope: !5454, file: !3, line: 4935, type: !144)
!5454 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 4934, column: 9)
!5455 = !DILocation(line: 4935, column: 16, scope: !5454)
!5456 = !DILocation(line: 4937, column: 17, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 4937, column: 15)
!5458 = !DILocation(line: 4938, column: 15, scope: !5457)
!5459 = !DILocation(line: 4938, column: 20, scope: !5457)
!5460 = !DILocation(line: 4938, column: 26, scope: !5457)
!5461 = !DILocation(line: 4938, column: 24, scope: !5457)
!5462 = !DILocation(line: 4938, column: 30, scope: !5457)
!5463 = !DILocation(line: 4938, column: 36, scope: !5457)
!5464 = !DILocation(line: 4938, column: 34, scope: !5457)
!5465 = !DILocation(line: 4939, column: 19, scope: !5457)
!5466 = !DILocation(line: 4939, column: 23, scope: !5457)
!5467 = !DILocation(line: 4939, column: 41, scope: !5457)
!5468 = !DILocation(line: 4939, column: 39, scope: !5457)
!5469 = !DILocation(line: 4939, column: 45, scope: !5457)
!5470 = !DILocation(line: 4939, column: 27, scope: !5457)
!5471 = !DILocation(line: 4937, column: 15, scope: !5454)
!5472 = !DILocation(line: 4941, column: 19, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 4940, column: 13)
!5474 = !DILocation(line: 4942, column: 25, scope: !5473)
!5475 = !DILocation(line: 4943, column: 13, scope: !5473)
!5476 = !DILocation(line: 4946, column: 19, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 4945, column: 13)
!5478 = !DILocation(line: 4947, column: 25, scope: !5477)
!5479 = !DILocation(line: 4950, column: 11, scope: !5454)
!5480 = !DILocation(line: 4951, column: 11, scope: !5454)
!5481 = !DILocation(line: 4952, column: 9, scope: !5454)
!5482 = !DILocation(line: 4954, column: 35, scope: !5440)
!5483 = !DILocation(line: 4954, column: 38, scope: !5440)
!5484 = !DILocation(line: 4954, column: 7, scope: !5440)
!5485 = !DILocation(line: 4955, column: 14, scope: !5440)
!5486 = !DILocation(line: 4955, column: 11, scope: !5440)
!5487 = !DILocation(line: 4956, column: 5, scope: !5440)
!5488 = !DILocation(line: 4928, column: 50, scope: !5435)
!5489 = !DILocation(line: 4928, column: 3, scope: !5435)
!5490 = distinct !{!5490, !5438, !5491}
!5491 = !DILocation(line: 4956, column: 5, scope: !5432)
!5492 = !DILocation(line: 4957, column: 3, scope: !5422)
!5493 = !DILocation(line: 4958, column: 1, scope: !5422)
!5494 = distinct !DISubprogram(name: "print_many_per_line", scope: !3, file: !3, line: 4846, type: !526, scopeLine: 4847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5495 = !DILocalVariable(name: "row", scope: !5494, file: !3, line: 4848, type: !149)
!5496 = !DILocation(line: 4848, column: 10, scope: !5494)
!5497 = !DILocalVariable(name: "cols", scope: !5494, file: !3, line: 4849, type: !149)
!5498 = !DILocation(line: 4849, column: 10, scope: !5494)
!5499 = !DILocation(line: 4849, column: 17, scope: !5494)
!5500 = !DILocalVariable(name: "line_fmt", scope: !5494, file: !3, line: 4850, type: !797)
!5501 = !DILocation(line: 4850, column: 29, scope: !5494)
!5502 = !DILocation(line: 4850, column: 41, scope: !5494)
!5503 = !DILocation(line: 4850, column: 53, scope: !5494)
!5504 = !DILocation(line: 4850, column: 58, scope: !5494)
!5505 = !DILocalVariable(name: "rows", scope: !5494, file: !3, line: 4854, type: !149)
!5506 = !DILocation(line: 4854, column: 10, scope: !5494)
!5507 = !DILocation(line: 4854, column: 17, scope: !5494)
!5508 = !DILocation(line: 4854, column: 30, scope: !5494)
!5509 = !DILocation(line: 4854, column: 28, scope: !5494)
!5510 = !DILocation(line: 4854, column: 38, scope: !5494)
!5511 = !DILocation(line: 4854, column: 51, scope: !5494)
!5512 = !DILocation(line: 4854, column: 49, scope: !5494)
!5513 = !DILocation(line: 4854, column: 56, scope: !5494)
!5514 = !DILocation(line: 4854, column: 37, scope: !5494)
!5515 = !DILocation(line: 4854, column: 35, scope: !5494)
!5516 = !DILocation(line: 4856, column: 12, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 4856, column: 3)
!5518 = !DILocation(line: 4856, column: 8, scope: !5517)
!5519 = !DILocation(line: 4856, column: 17, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 4856, column: 3)
!5521 = !DILocation(line: 4856, column: 23, scope: !5520)
!5522 = !DILocation(line: 4856, column: 21, scope: !5520)
!5523 = !DILocation(line: 4856, column: 3, scope: !5517)
!5524 = !DILocalVariable(name: "col", scope: !5525, file: !3, line: 4858, type: !149)
!5525 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 4857, column: 5)
!5526 = !DILocation(line: 4858, column: 14, scope: !5525)
!5527 = !DILocalVariable(name: "filesno", scope: !5525, file: !3, line: 4859, type: !149)
!5528 = !DILocation(line: 4859, column: 14, scope: !5525)
!5529 = !DILocation(line: 4859, column: 24, scope: !5525)
!5530 = !DILocalVariable(name: "pos", scope: !5525, file: !3, line: 4860, type: !149)
!5531 = !DILocation(line: 4860, column: 14, scope: !5525)
!5532 = !DILocation(line: 4863, column: 7, scope: !5525)
!5533 = !DILocalVariable(name: "f", scope: !5534, file: !3, line: 4865, type: !182)
!5534 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 4864, column: 9)
!5535 = !DILocation(line: 4865, column: 34, scope: !5534)
!5536 = !DILocation(line: 4865, column: 38, scope: !5534)
!5537 = !DILocation(line: 4865, column: 50, scope: !5534)
!5538 = !DILocalVariable(name: "name_length", scope: !5534, file: !3, line: 4866, type: !149)
!5539 = !DILocation(line: 4866, column: 18, scope: !5534)
!5540 = !DILocation(line: 4866, column: 64, scope: !5534)
!5541 = !DILocation(line: 4866, column: 32, scope: !5534)
!5542 = !DILocalVariable(name: "max_name_length", scope: !5534, file: !3, line: 4867, type: !149)
!5543 = !DILocation(line: 4867, column: 18, scope: !5534)
!5544 = !DILocation(line: 4867, column: 36, scope: !5534)
!5545 = !DILocation(line: 4867, column: 46, scope: !5534)
!5546 = !DILocation(line: 4867, column: 57, scope: !5534)
!5547 = !DILocation(line: 4868, column: 39, scope: !5534)
!5548 = !DILocation(line: 4868, column: 42, scope: !5534)
!5549 = !DILocation(line: 4868, column: 11, scope: !5534)
!5550 = !DILocation(line: 4870, column: 22, scope: !5534)
!5551 = !DILocation(line: 4870, column: 19, scope: !5534)
!5552 = !DILocation(line: 4871, column: 15, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 4871, column: 15)
!5554 = !DILocation(line: 4871, column: 26, scope: !5553)
!5555 = !DILocation(line: 4871, column: 23, scope: !5553)
!5556 = !DILocation(line: 4871, column: 15, scope: !5534)
!5557 = !DILocation(line: 4872, column: 13, scope: !5553)
!5558 = !DILocation(line: 4874, column: 19, scope: !5534)
!5559 = !DILocation(line: 4874, column: 25, scope: !5534)
!5560 = !DILocation(line: 4874, column: 23, scope: !5534)
!5561 = !DILocation(line: 4874, column: 38, scope: !5534)
!5562 = !DILocation(line: 4874, column: 44, scope: !5534)
!5563 = !DILocation(line: 4874, column: 42, scope: !5534)
!5564 = !DILocation(line: 4874, column: 11, scope: !5534)
!5565 = !DILocation(line: 4875, column: 18, scope: !5534)
!5566 = !DILocation(line: 4875, column: 15, scope: !5534)
!5567 = distinct !{!5567, !5532, !5568}
!5568 = !DILocation(line: 4876, column: 9, scope: !5525)
!5569 = !DILocation(line: 4877, column: 7, scope: !5525)
!5570 = !DILocation(line: 4878, column: 5, scope: !5525)
!5571 = !DILocation(line: 4856, column: 32, scope: !5520)
!5572 = !DILocation(line: 4856, column: 3, scope: !5520)
!5573 = distinct !{!5573, !5523, !5574}
!5574 = !DILocation(line: 4878, column: 5, scope: !5517)
!5575 = !DILocation(line: 4879, column: 1, scope: !5494)
!5576 = distinct !DISubprogram(name: "print_horizontal", scope: !3, file: !3, line: 4882, type: !526, scopeLine: 4883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5577 = !DILocalVariable(name: "filesno", scope: !5576, file: !3, line: 4884, type: !149)
!5578 = !DILocation(line: 4884, column: 10, scope: !5576)
!5579 = !DILocalVariable(name: "pos", scope: !5576, file: !3, line: 4885, type: !149)
!5580 = !DILocation(line: 4885, column: 10, scope: !5576)
!5581 = !DILocalVariable(name: "cols", scope: !5576, file: !3, line: 4886, type: !149)
!5582 = !DILocation(line: 4886, column: 10, scope: !5576)
!5583 = !DILocation(line: 4886, column: 17, scope: !5576)
!5584 = !DILocalVariable(name: "line_fmt", scope: !5576, file: !3, line: 4887, type: !797)
!5585 = !DILocation(line: 4887, column: 29, scope: !5576)
!5586 = !DILocation(line: 4887, column: 41, scope: !5576)
!5587 = !DILocation(line: 4887, column: 53, scope: !5576)
!5588 = !DILocation(line: 4887, column: 58, scope: !5576)
!5589 = !DILocalVariable(name: "f", scope: !5576, file: !3, line: 4888, type: !182)
!5590 = !DILocation(line: 4888, column: 26, scope: !5576)
!5591 = !DILocation(line: 4888, column: 30, scope: !5576)
!5592 = !DILocalVariable(name: "name_length", scope: !5576, file: !3, line: 4889, type: !149)
!5593 = !DILocation(line: 4889, column: 10, scope: !5576)
!5594 = !DILocation(line: 4889, column: 56, scope: !5576)
!5595 = !DILocation(line: 4889, column: 24, scope: !5576)
!5596 = !DILocalVariable(name: "max_name_length", scope: !5576, file: !3, line: 4890, type: !149)
!5597 = !DILocation(line: 4890, column: 10, scope: !5576)
!5598 = !DILocation(line: 4890, column: 28, scope: !5576)
!5599 = !DILocation(line: 4890, column: 38, scope: !5576)
!5600 = !DILocation(line: 4893, column: 31, scope: !5576)
!5601 = !DILocation(line: 4893, column: 3, scope: !5576)
!5602 = !DILocation(line: 4896, column: 16, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 4896, column: 3)
!5604 = !DILocation(line: 4896, column: 8, scope: !5603)
!5605 = !DILocation(line: 4896, column: 21, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 4896, column: 3)
!5607 = !DILocation(line: 4896, column: 31, scope: !5606)
!5608 = !DILocation(line: 4896, column: 29, scope: !5606)
!5609 = !DILocation(line: 4896, column: 3, scope: !5603)
!5610 = !DILocalVariable(name: "col", scope: !5611, file: !3, line: 4898, type: !149)
!5611 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 4897, column: 5)
!5612 = !DILocation(line: 4898, column: 14, scope: !5611)
!5613 = !DILocation(line: 4898, column: 20, scope: !5611)
!5614 = !DILocation(line: 4898, column: 30, scope: !5611)
!5615 = !DILocation(line: 4898, column: 28, scope: !5611)
!5616 = !DILocation(line: 4900, column: 11, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 4900, column: 11)
!5618 = !DILocation(line: 4900, column: 15, scope: !5617)
!5619 = !DILocation(line: 4900, column: 11, scope: !5611)
!5620 = !DILocation(line: 4902, column: 11, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 4901, column: 9)
!5622 = !DILocation(line: 4903, column: 15, scope: !5621)
!5623 = !DILocation(line: 4904, column: 9, scope: !5621)
!5624 = !DILocation(line: 4907, column: 19, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 4906, column: 9)
!5626 = !DILocation(line: 4907, column: 25, scope: !5625)
!5627 = !DILocation(line: 4907, column: 23, scope: !5625)
!5628 = !DILocation(line: 4907, column: 38, scope: !5625)
!5629 = !DILocation(line: 4907, column: 44, scope: !5625)
!5630 = !DILocation(line: 4907, column: 42, scope: !5625)
!5631 = !DILocation(line: 4907, column: 11, scope: !5625)
!5632 = !DILocation(line: 4908, column: 18, scope: !5625)
!5633 = !DILocation(line: 4908, column: 15, scope: !5625)
!5634 = !DILocation(line: 4911, column: 11, scope: !5611)
!5635 = !DILocation(line: 4911, column: 23, scope: !5611)
!5636 = !DILocation(line: 4911, column: 9, scope: !5611)
!5637 = !DILocation(line: 4912, column: 35, scope: !5611)
!5638 = !DILocation(line: 4912, column: 38, scope: !5611)
!5639 = !DILocation(line: 4912, column: 7, scope: !5611)
!5640 = !DILocation(line: 4914, column: 53, scope: !5611)
!5641 = !DILocation(line: 4914, column: 21, scope: !5611)
!5642 = !DILocation(line: 4914, column: 19, scope: !5611)
!5643 = !DILocation(line: 4915, column: 25, scope: !5611)
!5644 = !DILocation(line: 4915, column: 35, scope: !5611)
!5645 = !DILocation(line: 4915, column: 43, scope: !5611)
!5646 = !DILocation(line: 4915, column: 23, scope: !5611)
!5647 = !DILocation(line: 4916, column: 5, scope: !5611)
!5648 = !DILocation(line: 4896, column: 43, scope: !5606)
!5649 = !DILocation(line: 4896, column: 3, scope: !5606)
!5650 = distinct !{!5650, !5609, !5651}
!5651 = !DILocation(line: 4916, column: 5, scope: !5603)
!5652 = !DILocation(line: 4917, column: 3, scope: !5576)
!5653 = !DILocation(line: 4918, column: 1, scope: !5576)
!5654 = distinct !DISubprogram(name: "set_normal_color", scope: !3, file: !3, line: 1273, type: !526, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5655 = !DILocation(line: 1275, column: 7, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 1275, column: 7)
!5657 = !DILocation(line: 1275, column: 24, scope: !5656)
!5658 = !DILocation(line: 1275, column: 27, scope: !5656)
!5659 = !DILocation(line: 1275, column: 7, scope: !5654)
!5660 = !DILocation(line: 1277, column: 7, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 1276, column: 5)
!5662 = !DILocation(line: 1278, column: 7, scope: !5661)
!5663 = !DILocation(line: 1279, column: 7, scope: !5661)
!5664 = !DILocation(line: 1280, column: 5, scope: !5661)
!5665 = !DILocation(line: 1281, column: 1, scope: !5654)
!5666 = distinct !DISubprogram(name: "print_long_format", scope: !3, file: !3, line: 4020, type: !5667, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{null, !182}
!5669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !163, line: 133, size: 448, elements: !5670)
!5670 = !{!5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5681}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !5669, file: !163, line: 135, baseType: !27, size: 32)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !5669, file: !163, line: 136, baseType: !27, size: 32, offset: 32)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !5669, file: !163, line: 137, baseType: !27, size: 32, offset: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !5669, file: !163, line: 138, baseType: !27, size: 32, offset: 96)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !5669, file: !163, line: 139, baseType: !27, size: 32, offset: 128)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !5669, file: !163, line: 140, baseType: !27, size: 32, offset: 160)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !5669, file: !163, line: 141, baseType: !27, size: 32, offset: 192)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !5669, file: !163, line: 142, baseType: !27, size: 32, offset: 224)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !5669, file: !163, line: 143, baseType: !27, size: 32, offset: 256)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !5669, file: !163, line: 146, baseType: !166, size: 64, offset: 320)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !5669, file: !163, line: 147, baseType: !146, size: 64, offset: 384)
!5682 = !DILocalVariable(name: "f", arg: 1, scope: !5666, file: !3, line: 4020, type: !182)
!5683 = !DILocation(line: 4020, column: 43, scope: !5666)
!5684 = !DILocalVariable(name: "modebuf", scope: !5666, file: !3, line: 4022, type: !654)
!5685 = !DILocation(line: 4022, column: 8, scope: !5666)
!5686 = !DILocalVariable(name: "buf", scope: !5666, file: !3, line: 4023, type: !805)
!5687 = !DILocation(line: 4023, column: 8, scope: !5666)
!5688 = !DILocalVariable(name: "s", scope: !5666, file: !3, line: 4032, type: !149)
!5689 = !DILocation(line: 4032, column: 10, scope: !5666)
!5690 = !DILocalVariable(name: "p", scope: !5666, file: !3, line: 4033, type: !143)
!5691 = !DILocation(line: 4033, column: 9, scope: !5666)
!5692 = !DILocalVariable(name: "when_timespec", scope: !5666, file: !3, line: 4034, type: !213)
!5693 = !DILocation(line: 4034, column: 19, scope: !5666)
!5694 = !DILocalVariable(name: "when_local", scope: !5666, file: !3, line: 4035, type: !5669)
!5695 = !DILocation(line: 4035, column: 13, scope: !5666)
!5696 = !DILocation(line: 4039, column: 7, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4039, column: 7)
!5698 = !DILocation(line: 4039, column: 10, scope: !5697)
!5699 = !DILocation(line: 4039, column: 7, scope: !5666)
!5700 = !DILocation(line: 4040, column: 22, scope: !5697)
!5701 = !DILocation(line: 4040, column: 25, scope: !5697)
!5702 = !DILocation(line: 4040, column: 31, scope: !5697)
!5703 = !DILocation(line: 4040, column: 5, scope: !5697)
!5704 = !DILocation(line: 4043, column: 36, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 4042, column: 5)
!5706 = !DILocation(line: 4043, column: 39, scope: !5705)
!5707 = !DILocation(line: 4043, column: 20, scope: !5705)
!5708 = !DILocation(line: 4043, column: 7, scope: !5705)
!5709 = !DILocation(line: 4043, column: 18, scope: !5705)
!5710 = !DILocation(line: 4044, column: 15, scope: !5705)
!5711 = !DILocation(line: 4044, column: 23, scope: !5705)
!5712 = !DILocation(line: 4044, column: 7, scope: !5705)
!5713 = !DILocation(line: 4045, column: 7, scope: !5705)
!5714 = !DILocation(line: 4045, column: 19, scope: !5705)
!5715 = !DILocation(line: 4047, column: 9, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4047, column: 7)
!5717 = !DILocation(line: 4047, column: 7, scope: !5666)
!5718 = !DILocation(line: 4048, column: 5, scope: !5716)
!5719 = !DILocation(line: 4048, column: 17, scope: !5716)
!5720 = !DILocation(line: 4049, column: 12, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 4049, column: 12)
!5722 = !DILocation(line: 4049, column: 15, scope: !5721)
!5723 = !DILocation(line: 4049, column: 24, scope: !5721)
!5724 = !DILocation(line: 4049, column: 12, scope: !5716)
!5725 = !DILocation(line: 4050, column: 5, scope: !5721)
!5726 = !DILocation(line: 4050, column: 17, scope: !5721)
!5727 = !DILocation(line: 4051, column: 12, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 4051, column: 12)
!5729 = !DILocation(line: 4051, column: 15, scope: !5728)
!5730 = !DILocation(line: 4051, column: 24, scope: !5728)
!5731 = !DILocation(line: 4051, column: 12, scope: !5721)
!5732 = !DILocation(line: 4052, column: 5, scope: !5728)
!5733 = !DILocation(line: 4052, column: 17, scope: !5728)
!5734 = !DILocation(line: 4054, column: 11, scope: !5666)
!5735 = !DILocation(line: 4054, column: 3, scope: !5666)
!5736 = !DILocation(line: 4057, column: 40, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4055, column: 5)
!5738 = !DILocation(line: 4057, column: 43, scope: !5737)
!5739 = !DILocation(line: 4057, column: 23, scope: !5737)
!5740 = !DILocation(line: 4058, column: 7, scope: !5737)
!5741 = !DILocation(line: 4060, column: 40, scope: !5737)
!5742 = !DILocation(line: 4060, column: 43, scope: !5737)
!5743 = !DILocation(line: 4060, column: 23, scope: !5737)
!5744 = !DILocation(line: 4061, column: 7, scope: !5737)
!5745 = !DILocation(line: 4063, column: 40, scope: !5737)
!5746 = !DILocation(line: 4063, column: 43, scope: !5737)
!5747 = !DILocation(line: 4063, column: 23, scope: !5737)
!5748 = !DILocation(line: 4064, column: 7, scope: !5737)
!5749 = !DILocation(line: 4066, column: 7, scope: !5737)
!5750 = !DILocation(line: 4069, column: 7, scope: !5666)
!5751 = !DILocation(line: 4069, column: 5, scope: !5666)
!5752 = !DILocation(line: 4071, column: 7, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4071, column: 7)
!5754 = !DILocation(line: 4071, column: 7, scope: !5666)
!5755 = !DILocalVariable(name: "hbuf", scope: !5756, file: !3, line: 4073, type: !731)
!5756 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 4072, column: 5)
!5757 = !DILocation(line: 4073, column: 12, scope: !5756)
!5758 = !DILocation(line: 4074, column: 16, scope: !5756)
!5759 = !DILocation(line: 4074, column: 27, scope: !5756)
!5760 = !DILocation(line: 4075, column: 30, scope: !5756)
!5761 = !DILocation(line: 4075, column: 49, scope: !5756)
!5762 = !DILocation(line: 4075, column: 16, scope: !5756)
!5763 = !DILocation(line: 4074, column: 7, scope: !5756)
!5764 = !DILocation(line: 4078, column: 20, scope: !5756)
!5765 = !DILocation(line: 4078, column: 12, scope: !5756)
!5766 = !DILocation(line: 4078, column: 9, scope: !5756)
!5767 = !DILocation(line: 4079, column: 5, scope: !5756)
!5768 = !DILocation(line: 4081, column: 7, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4081, column: 7)
!5770 = !DILocation(line: 4081, column: 7, scope: !5666)
!5771 = !DILocalVariable(name: "hbuf", scope: !5772, file: !3, line: 4083, type: !734)
!5772 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 4082, column: 5)
!5773 = !DILocation(line: 4083, column: 12, scope: !5772)
!5774 = !DILocalVariable(name: "blocks", scope: !5772, file: !3, line: 4084, type: !146)
!5775 = !DILocation(line: 4084, column: 19, scope: !5772)
!5776 = !DILocation(line: 4085, column: 12, scope: !5772)
!5777 = !DILocation(line: 4085, column: 15, scope: !5772)
!5778 = !DILocation(line: 4085, column: 10, scope: !5772)
!5779 = !DILocation(line: 4087, column: 28, scope: !5772)
!5780 = !DILocation(line: 4087, column: 50, scope: !5772)
!5781 = !DILocation(line: 4087, column: 56, scope: !5772)
!5782 = !DILocation(line: 4088, column: 43, scope: !5772)
!5783 = !DILocation(line: 4087, column: 12, scope: !5772)
!5784 = !DILocalVariable(name: "pad", scope: !5772, file: !3, line: 4089, type: !27)
!5785 = !DILocation(line: 4089, column: 11, scope: !5772)
!5786 = !DILocation(line: 4090, column: 18, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 4090, column: 7)
!5788 = !DILocation(line: 4090, column: 47, scope: !5787)
!5789 = !DILocation(line: 4090, column: 37, scope: !5787)
!5790 = !DILocation(line: 4090, column: 35, scope: !5787)
!5791 = !DILocation(line: 4090, column: 16, scope: !5787)
!5792 = !DILocation(line: 4090, column: 12, scope: !5787)
!5793 = !DILocation(line: 4090, column: 63, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 4090, column: 7)
!5795 = !DILocation(line: 4090, column: 61, scope: !5794)
!5796 = !DILocation(line: 4090, column: 7, scope: !5787)
!5797 = !DILocation(line: 4091, column: 11, scope: !5794)
!5798 = !DILocation(line: 4091, column: 14, scope: !5794)
!5799 = !DILocation(line: 4091, column: 9, scope: !5794)
!5800 = !DILocation(line: 4090, column: 71, scope: !5794)
!5801 = !DILocation(line: 4090, column: 7, scope: !5794)
!5802 = distinct !{!5802, !5796, !5803}
!5803 = !DILocation(line: 4091, column: 16, scope: !5787)
!5804 = !DILocation(line: 4092, column: 7, scope: !5772)
!5805 = !DILocation(line: 4092, column: 29, scope: !5772)
!5806 = !DILocation(line: 4092, column: 22, scope: !5772)
!5807 = !DILocation(line: 4092, column: 17, scope: !5772)
!5808 = !DILocation(line: 4092, column: 20, scope: !5772)
!5809 = !DILocation(line: 4093, column: 9, scope: !5772)
!5810 = distinct !{!5810, !5804, !5809}
!5811 = !DILocation(line: 4094, column: 7, scope: !5772)
!5812 = !DILocation(line: 4094, column: 13, scope: !5772)
!5813 = !DILocation(line: 4095, column: 5, scope: !5772)
!5814 = !DILocalVariable(name: "hbuf", scope: !5815, file: !3, line: 4100, type: !731)
!5815 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4099, column: 3)
!5816 = !DILocation(line: 4100, column: 10, scope: !5815)
!5817 = !DILocation(line: 4101, column: 14, scope: !5815)
!5818 = !DILocation(line: 4101, column: 28, scope: !5815)
!5819 = !DILocation(line: 4101, column: 37, scope: !5815)
!5820 = !DILocation(line: 4102, column: 16, scope: !5815)
!5821 = !DILocation(line: 4102, column: 19, scope: !5815)
!5822 = !DILocation(line: 4102, column: 14, scope: !5815)
!5823 = !DILocation(line: 4102, column: 46, scope: !5815)
!5824 = !DILocation(line: 4102, column: 49, scope: !5815)
!5825 = !DILocation(line: 4102, column: 54, scope: !5815)
!5826 = !DILocation(line: 4102, column: 64, scope: !5815)
!5827 = !DILocation(line: 4102, column: 35, scope: !5815)
!5828 = !DILocation(line: 4101, column: 5, scope: !5815)
!5829 = !DILocation(line: 4107, column: 16, scope: !5666)
!5830 = !DILocation(line: 4107, column: 8, scope: !5666)
!5831 = !DILocation(line: 4107, column: 5, scope: !5666)
!5832 = !DILocation(line: 4109, column: 3, scope: !5666)
!5833 = !DILocation(line: 4109, column: 3, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4109, column: 3)
!5835 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4109, column: 3)
!5836 = !DILocation(line: 4109, column: 3, scope: !5835)
!5837 = !DILocation(line: 4109, column: 3, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 4109, column: 3)
!5839 = !DILocation(line: 4111, column: 7, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4111, column: 7)
!5841 = !DILocation(line: 4111, column: 19, scope: !5840)
!5842 = !DILocation(line: 4111, column: 22, scope: !5840)
!5843 = !DILocation(line: 4111, column: 34, scope: !5840)
!5844 = !DILocation(line: 4111, column: 37, scope: !5840)
!5845 = !DILocation(line: 4111, column: 50, scope: !5840)
!5846 = !DILocation(line: 4111, column: 53, scope: !5840)
!5847 = !DILocation(line: 4111, column: 7, scope: !5666)
!5848 = !DILocation(line: 4113, column: 7, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 4112, column: 5)
!5850 = !DILocation(line: 4113, column: 7, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 4113, column: 7)
!5852 = !DILocation(line: 4115, column: 11, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 4115, column: 11)
!5854 = !DILocation(line: 4115, column: 11, scope: !5849)
!5855 = !DILocation(line: 4116, column: 22, scope: !5853)
!5856 = !DILocation(line: 4116, column: 25, scope: !5853)
!5857 = !DILocation(line: 4116, column: 30, scope: !5853)
!5858 = !DILocation(line: 4116, column: 38, scope: !5853)
!5859 = !DILocation(line: 4116, column: 51, scope: !5853)
!5860 = !DILocation(line: 4116, column: 54, scope: !5853)
!5861 = !DILocation(line: 4116, column: 9, scope: !5853)
!5862 = !DILocation(line: 4118, column: 11, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 4118, column: 11)
!5864 = !DILocation(line: 4118, column: 11, scope: !5849)
!5865 = !DILocation(line: 4119, column: 23, scope: !5863)
!5866 = !DILocation(line: 4119, column: 26, scope: !5863)
!5867 = !DILocation(line: 4119, column: 31, scope: !5863)
!5868 = !DILocation(line: 4119, column: 39, scope: !5863)
!5869 = !DILocation(line: 4119, column: 52, scope: !5863)
!5870 = !DILocation(line: 4119, column: 55, scope: !5863)
!5871 = !DILocation(line: 4119, column: 9, scope: !5863)
!5872 = !DILocation(line: 4121, column: 11, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 4121, column: 11)
!5874 = !DILocation(line: 4121, column: 11, scope: !5849)
!5875 = !DILocation(line: 4122, column: 22, scope: !5873)
!5876 = !DILocation(line: 4122, column: 25, scope: !5873)
!5877 = !DILocation(line: 4122, column: 30, scope: !5873)
!5878 = !DILocation(line: 4122, column: 41, scope: !5873)
!5879 = !DILocation(line: 4122, column: 55, scope: !5873)
!5880 = !DILocation(line: 4122, column: 58, scope: !5873)
!5881 = !DILocation(line: 4122, column: 9, scope: !5873)
!5882 = !DILocation(line: 4124, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 4124, column: 11)
!5884 = !DILocation(line: 4124, column: 11, scope: !5849)
!5885 = !DILocation(line: 4125, column: 31, scope: !5883)
!5886 = !DILocation(line: 4125, column: 34, scope: !5883)
!5887 = !DILocation(line: 4125, column: 47, scope: !5883)
!5888 = !DILocation(line: 4125, column: 9, scope: !5883)
!5889 = !DILocation(line: 4127, column: 11, scope: !5849)
!5890 = !DILocation(line: 4127, column: 9, scope: !5849)
!5891 = !DILocation(line: 4128, column: 5, scope: !5849)
!5892 = !DILocation(line: 4130, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4130, column: 7)
!5894 = !DILocation(line: 4130, column: 10, scope: !5893)
!5895 = !DILocation(line: 4131, column: 7, scope: !5893)
!5896 = !DILocation(line: 4131, column: 11, scope: !5893)
!5897 = !DILocation(line: 4131, column: 37, scope: !5893)
!5898 = !DILocation(line: 4131, column: 40, scope: !5893)
!5899 = !DILocation(line: 4130, column: 7, scope: !5666)
!5900 = !DILocalVariable(name: "majorbuf", scope: !5901, file: !3, line: 4133, type: !731)
!5901 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4132, column: 5)
!5902 = !DILocation(line: 4133, column: 12, scope: !5901)
!5903 = !DILocalVariable(name: "minorbuf", scope: !5901, file: !3, line: 4134, type: !731)
!5904 = !DILocation(line: 4134, column: 12, scope: !5901)
!5905 = !DILocalVariable(name: "blanks_width", scope: !5901, file: !3, line: 4135, type: !27)
!5906 = !DILocation(line: 4135, column: 11, scope: !5901)
!5907 = !DILocation(line: 4135, column: 27, scope: !5901)
!5908 = !DILocation(line: 4136, column: 30, scope: !5901)
!5909 = !DILocation(line: 4136, column: 56, scope: !5901)
!5910 = !DILocation(line: 4137, column: 32, scope: !5901)
!5911 = !DILocation(line: 4137, column: 30, scope: !5901)
!5912 = !DILocation(line: 4136, column: 27, scope: !5901)
!5913 = !DILocation(line: 4138, column: 16, scope: !5901)
!5914 = !DILocation(line: 4139, column: 16, scope: !5901)
!5915 = !DILocation(line: 4139, column: 44, scope: !5901)
!5916 = !DILocation(line: 4139, column: 42, scope: !5901)
!5917 = !DILocation(line: 4140, column: 27, scope: !5901)
!5918 = !DILocation(line: 4140, column: 52, scope: !5901)
!5919 = !DILocation(line: 4140, column: 16, scope: !5901)
!5920 = !DILocation(line: 4141, column: 16, scope: !5901)
!5921 = !DILocation(line: 4142, column: 27, scope: !5901)
!5922 = !DILocation(line: 4142, column: 52, scope: !5901)
!5923 = !DILocation(line: 4142, column: 16, scope: !5901)
!5924 = !DILocation(line: 4138, column: 7, scope: !5901)
!5925 = !DILocation(line: 4143, column: 12, scope: !5901)
!5926 = !DILocation(line: 4143, column: 28, scope: !5901)
!5927 = !DILocation(line: 4143, column: 9, scope: !5901)
!5928 = !DILocation(line: 4144, column: 5, scope: !5901)
!5929 = !DILocalVariable(name: "hbuf", scope: !5930, file: !3, line: 4147, type: !734)
!5930 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4146, column: 5)
!5931 = !DILocation(line: 4147, column: 12, scope: !5930)
!5932 = !DILocalVariable(name: "size", scope: !5930, file: !3, line: 4148, type: !146)
!5933 = !DILocation(line: 4148, column: 19, scope: !5930)
!5934 = !DILocation(line: 4149, column: 12, scope: !5930)
!5935 = !DILocation(line: 4149, column: 15, scope: !5930)
!5936 = !DILocation(line: 4149, column: 10, scope: !5930)
!5937 = !DILocation(line: 4151, column: 48, scope: !5930)
!5938 = !DILocation(line: 4151, column: 51, scope: !5930)
!5939 = !DILocation(line: 4151, column: 56, scope: !5930)
!5940 = !DILocation(line: 4151, column: 28, scope: !5930)
!5941 = !DILocation(line: 4152, column: 28, scope: !5930)
!5942 = !DILocation(line: 4152, column: 34, scope: !5930)
!5943 = !DILocation(line: 4153, column: 28, scope: !5930)
!5944 = !DILocation(line: 4151, column: 12, scope: !5930)
!5945 = !DILocalVariable(name: "pad", scope: !5930, file: !3, line: 4154, type: !27)
!5946 = !DILocation(line: 4154, column: 11, scope: !5930)
!5947 = !DILocation(line: 4155, column: 18, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 4155, column: 7)
!5949 = !DILocation(line: 4155, column: 46, scope: !5948)
!5950 = !DILocation(line: 4155, column: 36, scope: !5948)
!5951 = !DILocation(line: 4155, column: 34, scope: !5948)
!5952 = !DILocation(line: 4155, column: 16, scope: !5948)
!5953 = !DILocation(line: 4155, column: 12, scope: !5948)
!5954 = !DILocation(line: 4155, column: 60, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 4155, column: 7)
!5956 = !DILocation(line: 4155, column: 58, scope: !5955)
!5957 = !DILocation(line: 4155, column: 7, scope: !5948)
!5958 = !DILocation(line: 4156, column: 11, scope: !5955)
!5959 = !DILocation(line: 4156, column: 14, scope: !5955)
!5960 = !DILocation(line: 4156, column: 9, scope: !5955)
!5961 = !DILocation(line: 4155, column: 68, scope: !5955)
!5962 = !DILocation(line: 4155, column: 7, scope: !5955)
!5963 = distinct !{!5963, !5957, !5964}
!5964 = !DILocation(line: 4156, column: 16, scope: !5948)
!5965 = !DILocation(line: 4157, column: 7, scope: !5930)
!5966 = !DILocation(line: 4157, column: 27, scope: !5930)
!5967 = !DILocation(line: 4157, column: 22, scope: !5930)
!5968 = !DILocation(line: 4157, column: 17, scope: !5930)
!5969 = !DILocation(line: 4157, column: 20, scope: !5930)
!5970 = !DILocation(line: 4158, column: 9, scope: !5930)
!5971 = distinct !{!5971, !5965, !5970}
!5972 = !DILocation(line: 4159, column: 7, scope: !5930)
!5973 = !DILocation(line: 4159, column: 13, scope: !5930)
!5974 = !DILocation(line: 4162, column: 5, scope: !5666)
!5975 = !DILocation(line: 4163, column: 4, scope: !5666)
!5976 = !DILocation(line: 4163, column: 6, scope: !5666)
!5977 = !DILocation(line: 4165, column: 7, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4165, column: 7)
!5979 = !DILocation(line: 4165, column: 10, scope: !5978)
!5980 = !DILocation(line: 4165, column: 18, scope: !5978)
!5981 = !DILocation(line: 4165, column: 35, scope: !5978)
!5982 = !DILocation(line: 4165, column: 59, scope: !5978)
!5983 = !DILocation(line: 4165, column: 21, scope: !5978)
!5984 = !DILocation(line: 4165, column: 7, scope: !5666)
!5985 = !DILocalVariable(name: "six_months_ago", scope: !5986, file: !3, line: 4167, type: !213)
!5986 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 4166, column: 5)
!5987 = !DILocation(line: 4167, column: 23, scope: !5986)
!5988 = !DILocalVariable(name: "recent", scope: !5986, file: !3, line: 4168, type: !141)
!5989 = !DILocation(line: 4168, column: 12, scope: !5986)
!5990 = !DILocation(line: 4173, column: 11, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 4173, column: 11)
!5992 = !DILocation(line: 4173, column: 54, scope: !5991)
!5993 = !DILocation(line: 4173, column: 11, scope: !5986)
!5994 = !DILocation(line: 4174, column: 9, scope: !5991)
!5995 = !DILocation(line: 4180, column: 44, scope: !5986)
!5996 = !DILocation(line: 4180, column: 51, scope: !5986)
!5997 = !DILocation(line: 4180, column: 22, scope: !5986)
!5998 = !DILocation(line: 4180, column: 29, scope: !5986)
!5999 = !DILocation(line: 4181, column: 45, scope: !5986)
!6000 = !DILocation(line: 4181, column: 22, scope: !5986)
!6001 = !DILocation(line: 4181, column: 30, scope: !5986)
!6002 = !DILocation(line: 4183, column: 17, scope: !5986)
!6003 = !DILocation(line: 4183, column: 62, scope: !5986)
!6004 = !DILocation(line: 4184, column: 17, scope: !5986)
!6005 = !DILocation(line: 4184, column: 21, scope: !5986)
!6006 = !DILocation(line: 4184, column: 64, scope: !5986)
!6007 = !DILocation(line: 0, scope: !5986)
!6008 = !DILocation(line: 4183, column: 14, scope: !5986)
!6009 = !DILocation(line: 4188, column: 28, scope: !5986)
!6010 = !DILocation(line: 4188, column: 59, scope: !5986)
!6011 = !DILocation(line: 4189, column: 41, scope: !5986)
!6012 = !DILocation(line: 4189, column: 64, scope: !5986)
!6013 = !DILocation(line: 4189, column: 50, scope: !5986)
!6014 = !DILocation(line: 4188, column: 11, scope: !5986)
!6015 = !DILocation(line: 4188, column: 9, scope: !5986)
!6016 = !DILocation(line: 4190, column: 5, scope: !5986)
!6017 = !DILocation(line: 4192, column: 7, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4192, column: 7)
!6019 = !DILocation(line: 4192, column: 9, scope: !6018)
!6020 = !DILocation(line: 4192, column: 14, scope: !6018)
!6021 = !DILocation(line: 4192, column: 13, scope: !6018)
!6022 = !DILocation(line: 4192, column: 7, scope: !5666)
!6023 = !DILocation(line: 4194, column: 12, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 4193, column: 5)
!6025 = !DILocation(line: 4194, column: 9, scope: !6024)
!6026 = !DILocation(line: 4195, column: 9, scope: !6024)
!6027 = !DILocation(line: 4195, column: 12, scope: !6024)
!6028 = !DILocation(line: 4198, column: 8, scope: !6024)
!6029 = !DILocation(line: 4198, column: 10, scope: !6024)
!6030 = !DILocation(line: 4199, column: 5, scope: !6024)
!6031 = !DILocalVariable(name: "hbuf", scope: !6032, file: !3, line: 4204, type: !731)
!6032 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 4201, column: 5)
!6033 = !DILocation(line: 4204, column: 12, scope: !6032)
!6034 = !DILocation(line: 4205, column: 16, scope: !6032)
!6035 = !DILocation(line: 4205, column: 27, scope: !6032)
!6036 = !DILocation(line: 4206, column: 19, scope: !6032)
!6037 = !DILocation(line: 4206, column: 22, scope: !6032)
!6038 = !DILocation(line: 4206, column: 17, scope: !6032)
!6039 = !DILocation(line: 4208, column: 44, scope: !6032)
!6040 = !DILocation(line: 4208, column: 52, scope: !6032)
!6041 = !DILocation(line: 4208, column: 19, scope: !6032)
!6042 = !DILocation(line: 4205, column: 7, scope: !6032)
!6043 = !DILocation(line: 4210, column: 20, scope: !6032)
!6044 = !DILocation(line: 4210, column: 12, scope: !6032)
!6045 = !DILocation(line: 4210, column: 9, scope: !6032)
!6046 = !DILocation(line: 4213, column: 3, scope: !5666)
!6047 = !DILocation(line: 4213, column: 3, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4213, column: 3)
!6049 = !DILocalVariable(name: "w", scope: !5666, file: !3, line: 4214, type: !149)
!6050 = !DILocation(line: 4214, column: 10, scope: !5666)
!6051 = !DILocation(line: 4214, column: 39, scope: !5666)
!6052 = !DILocation(line: 4214, column: 65, scope: !5666)
!6053 = !DILocation(line: 4214, column: 69, scope: !5666)
!6054 = !DILocation(line: 4214, column: 67, scope: !5666)
!6055 = !DILocation(line: 4214, column: 14, scope: !5666)
!6056 = !DILocation(line: 4216, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 4216, column: 7)
!6058 = !DILocation(line: 4216, column: 10, scope: !6057)
!6059 = !DILocation(line: 4216, column: 19, scope: !6057)
!6060 = !DILocation(line: 4216, column: 7, scope: !5666)
!6061 = !DILocation(line: 4218, column: 11, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 4218, column: 11)
!6063 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 4217, column: 5)
!6064 = !DILocation(line: 4218, column: 14, scope: !6062)
!6065 = !DILocation(line: 4218, column: 11, scope: !6063)
!6066 = !DILocation(line: 4220, column: 11, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 4219, column: 9)
!6068 = !DILocation(line: 4220, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 4220, column: 11)
!6070 = !DILocation(line: 4221, column: 36, scope: !6067)
!6071 = !DILocation(line: 4221, column: 52, scope: !6067)
!6072 = !DILocation(line: 4221, column: 56, scope: !6067)
!6073 = !DILocation(line: 4221, column: 54, scope: !6067)
!6074 = !DILocation(line: 4221, column: 63, scope: !6067)
!6075 = !DILocation(line: 4221, column: 61, scope: !6067)
!6076 = !DILocation(line: 4221, column: 65, scope: !6067)
!6077 = !DILocation(line: 4221, column: 11, scope: !6067)
!6078 = !DILocation(line: 4222, column: 15, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 4222, column: 15)
!6080 = !DILocation(line: 4222, column: 31, scope: !6079)
!6081 = !DILocation(line: 4222, column: 15, scope: !6067)
!6082 = !DILocation(line: 4223, column: 41, scope: !6079)
!6083 = !DILocation(line: 4223, column: 44, scope: !6079)
!6084 = !DILocation(line: 4223, column: 13, scope: !6079)
!6085 = !DILocation(line: 4224, column: 9, scope: !6067)
!6086 = !DILocation(line: 4225, column: 5, scope: !6063)
!6087 = !DILocation(line: 4226, column: 12, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 4226, column: 12)
!6089 = !DILocation(line: 4226, column: 28, scope: !6088)
!6090 = !DILocation(line: 4226, column: 12, scope: !6057)
!6091 = !DILocation(line: 4227, column: 27, scope: !6088)
!6092 = !DILocation(line: 4227, column: 30, scope: !6088)
!6093 = !DILocation(line: 4227, column: 39, scope: !6088)
!6094 = !DILocation(line: 4227, column: 42, scope: !6088)
!6095 = !DILocation(line: 4227, column: 47, scope: !6088)
!6096 = !DILocation(line: 4227, column: 56, scope: !6088)
!6097 = !DILocation(line: 4227, column: 59, scope: !6088)
!6098 = !DILocation(line: 4227, column: 5, scope: !6088)
!6099 = !DILocation(line: 4228, column: 1, scope: !5666)
!6100 = distinct !DISubprogram(name: "format_inode", scope: !3, file: !3, line: 4010, type: !6101, scopeLine: 4011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!143, !143, !149, !182}
!6103 = !DILocalVariable(name: "buf", arg: 1, scope: !6100, file: !3, line: 4010, type: !143)
!6104 = !DILocation(line: 4010, column: 21, scope: !6100)
!6105 = !DILocalVariable(name: "buflen", arg: 2, scope: !6100, file: !3, line: 4010, type: !149)
!6106 = !DILocation(line: 4010, column: 33, scope: !6100)
!6107 = !DILocalVariable(name: "f", arg: 3, scope: !6100, file: !3, line: 4010, type: !182)
!6108 = !DILocation(line: 4010, column: 64, scope: !6100)
!6109 = !DILocation(line: 4012, column: 3, scope: !6100)
!6110 = !DILocation(line: 4013, column: 11, scope: !6100)
!6111 = !DILocation(line: 4013, column: 14, scope: !6100)
!6112 = !DILocation(line: 4013, column: 22, scope: !6100)
!6113 = !DILocation(line: 4013, column: 25, scope: !6100)
!6114 = !DILocation(line: 4013, column: 28, scope: !6100)
!6115 = !DILocation(line: 4013, column: 33, scope: !6100)
!6116 = !DILocation(line: 4013, column: 40, scope: !6100)
!6117 = !DILocation(line: 4014, column: 24, scope: !6100)
!6118 = !DILocation(line: 4014, column: 27, scope: !6100)
!6119 = !DILocation(line: 4014, column: 32, scope: !6100)
!6120 = !DILocation(line: 4014, column: 40, scope: !6100)
!6121 = !DILocation(line: 4014, column: 13, scope: !6100)
!6122 = !DILocation(line: 4013, column: 3, scope: !6100)
!6123 = distinct !DISubprogram(name: "format_user", scope: !3, file: !3, line: 3957, type: !6124, scopeLine: 3958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{null, !1289, !27, !141}
!6126 = !DILocalVariable(name: "u", arg: 1, scope: !6123, file: !3, line: 3957, type: !1289)
!6127 = !DILocation(line: 3957, column: 20, scope: !6123)
!6128 = !DILocalVariable(name: "width", arg: 2, scope: !6123, file: !3, line: 3957, type: !27)
!6129 = !DILocation(line: 3957, column: 27, scope: !6123)
!6130 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6123, file: !3, line: 3957, type: !141)
!6131 = !DILocation(line: 3957, column: 39, scope: !6123)
!6132 = !DILocation(line: 3959, column: 27, scope: !6123)
!6133 = !DILocation(line: 3959, column: 25, scope: !6123)
!6134 = !DILocation(line: 3960, column: 26, scope: !6123)
!6135 = !DILocation(line: 3960, column: 56, scope: !6123)
!6136 = !DILocation(line: 3960, column: 47, scope: !6123)
!6137 = !DILocation(line: 3960, column: 61, scope: !6123)
!6138 = !DILocation(line: 3960, column: 64, scope: !6123)
!6139 = !DILocation(line: 3959, column: 3, scope: !6123)
!6140 = !DILocation(line: 3961, column: 1, scope: !6123)
!6141 = distinct !DISubprogram(name: "format_group", scope: !3, file: !3, line: 3966, type: !6142, scopeLine: 3967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{null, !1291, !27, !141}
!6144 = !DILocalVariable(name: "g", arg: 1, scope: !6141, file: !3, line: 3966, type: !1291)
!6145 = !DILocation(line: 3966, column: 21, scope: !6141)
!6146 = !DILocalVariable(name: "width", arg: 2, scope: !6141, file: !3, line: 3966, type: !27)
!6147 = !DILocation(line: 3966, column: 28, scope: !6141)
!6148 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6141, file: !3, line: 3966, type: !141)
!6149 = !DILocation(line: 3966, column: 40, scope: !6141)
!6150 = !DILocation(line: 3968, column: 27, scope: !6141)
!6151 = !DILocation(line: 3968, column: 25, scope: !6141)
!6152 = !DILocation(line: 3969, column: 26, scope: !6141)
!6153 = !DILocation(line: 3969, column: 57, scope: !6141)
!6154 = !DILocation(line: 3969, column: 47, scope: !6141)
!6155 = !DILocation(line: 3969, column: 62, scope: !6141)
!6156 = !DILocation(line: 3969, column: 65, scope: !6141)
!6157 = !DILocation(line: 3968, column: 3, scope: !6141)
!6158 = !DILocation(line: 3970, column: 1, scope: !6141)
!6159 = distinct !DISubprogram(name: "format_user_or_group", scope: !3, file: !3, line: 3929, type: !6160, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6160 = !DISubroutineType(types: !6161)
!6161 = !{null, !146, !151, !27}
!6162 = !DILocalVariable(name: "name", arg: 1, scope: !6159, file: !3, line: 3929, type: !146)
!6163 = !DILocation(line: 3929, column: 35, scope: !6159)
!6164 = !DILocalVariable(name: "id", arg: 2, scope: !6159, file: !3, line: 3929, type: !151)
!6165 = !DILocation(line: 3929, column: 59, scope: !6159)
!6166 = !DILocalVariable(name: "width", arg: 3, scope: !6159, file: !3, line: 3929, type: !27)
!6167 = !DILocation(line: 3929, column: 67, scope: !6159)
!6168 = !DILocalVariable(name: "len", scope: !6159, file: !3, line: 3931, type: !149)
!6169 = !DILocation(line: 3931, column: 10, scope: !6159)
!6170 = !DILocation(line: 3933, column: 7, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 3933, column: 7)
!6172 = !DILocation(line: 3933, column: 7, scope: !6159)
!6173 = !DILocalVariable(name: "width_gap", scope: !6174, file: !3, line: 3935, type: !27)
!6174 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 3934, column: 5)
!6175 = !DILocation(line: 3935, column: 11, scope: !6174)
!6176 = !DILocation(line: 3935, column: 23, scope: !6174)
!6177 = !DILocation(line: 3935, column: 41, scope: !6174)
!6178 = !DILocation(line: 3935, column: 31, scope: !6174)
!6179 = !DILocation(line: 3935, column: 29, scope: !6174)
!6180 = !DILocalVariable(name: "pad", scope: !6174, file: !3, line: 3936, type: !27)
!6181 = !DILocation(line: 3936, column: 11, scope: !6174)
!6182 = !DILocation(line: 3936, column: 17, scope: !6174)
!6183 = !DILocation(line: 3937, column: 7, scope: !6174)
!6184 = !DILocation(line: 3938, column: 21, scope: !6174)
!6185 = !DILocation(line: 3938, column: 13, scope: !6174)
!6186 = !DILocation(line: 3938, column: 29, scope: !6174)
!6187 = !DILocation(line: 3938, column: 27, scope: !6174)
!6188 = !DILocation(line: 3938, column: 11, scope: !6174)
!6189 = !DILocation(line: 3940, column: 7, scope: !6174)
!6190 = !DILocation(line: 3941, column: 9, scope: !6174)
!6191 = !DILocation(line: 3942, column: 17, scope: !6174)
!6192 = distinct !{!6192, !6189, !6193}
!6193 = !DILocation(line: 3942, column: 19, scope: !6174)
!6194 = !DILocation(line: 3943, column: 5, scope: !6174)
!6195 = !DILocation(line: 3946, column: 24, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 3945, column: 5)
!6197 = !DILocation(line: 3946, column: 31, scope: !6196)
!6198 = !DILocation(line: 3946, column: 7, scope: !6196)
!6199 = !DILocation(line: 3947, column: 13, scope: !6196)
!6200 = !DILocation(line: 3947, column: 11, scope: !6196)
!6201 = !DILocation(line: 3950, column: 16, scope: !6159)
!6202 = !DILocation(line: 3950, column: 20, scope: !6159)
!6203 = !DILocation(line: 3950, column: 13, scope: !6159)
!6204 = !DILocation(line: 3951, column: 1, scope: !6159)
!6205 = distinct !DISubprogram(name: "unsigned_file_size", scope: !3, file: !3, line: 2934, type: !6206, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{!168, !178}
!6208 = !DILocalVariable(name: "size", arg: 1, scope: !6205, file: !3, line: 2934, type: !178)
!6209 = !DILocation(line: 2934, column: 27, scope: !6205)
!6210 = !DILocation(line: 2936, column: 10, scope: !6205)
!6211 = !DILocation(line: 2936, column: 18, scope: !6205)
!6212 = !DILocation(line: 2936, column: 23, scope: !6205)
!6213 = !DILocation(line: 2936, column: 17, scope: !6205)
!6214 = !DILocation(line: 2936, column: 28, scope: !6205)
!6215 = !DILocation(line: 2936, column: 15, scope: !6205)
!6216 = !DILocation(line: 2936, column: 3, scope: !6205)
!6217 = distinct !DISubprogram(name: "align_nstrftime", scope: !3, file: !3, line: 3880, type: !6218, scopeLine: 3882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!149, !143, !149, !141, !6220, !254, !27}
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5669)
!6222 = !DILocalVariable(name: "buf", arg: 1, scope: !6217, file: !3, line: 3880, type: !143)
!6223 = !DILocation(line: 3880, column: 24, scope: !6217)
!6224 = !DILocalVariable(name: "size", arg: 2, scope: !6217, file: !3, line: 3880, type: !149)
!6225 = !DILocation(line: 3880, column: 36, scope: !6217)
!6226 = !DILocalVariable(name: "recent", arg: 3, scope: !6217, file: !3, line: 3880, type: !141)
!6227 = !DILocation(line: 3880, column: 47, scope: !6217)
!6228 = !DILocalVariable(name: "tm", arg: 4, scope: !6217, file: !3, line: 3880, type: !6220)
!6229 = !DILocation(line: 3880, column: 72, scope: !6217)
!6230 = !DILocalVariable(name: "tz", arg: 5, scope: !6217, file: !3, line: 3881, type: !254)
!6231 = !DILocation(line: 3881, column: 29, scope: !6217)
!6232 = !DILocalVariable(name: "ns", arg: 6, scope: !6217, file: !3, line: 3881, type: !27)
!6233 = !DILocation(line: 3881, column: 37, scope: !6217)
!6234 = !DILocalVariable(name: "nfmt", scope: !6217, file: !3, line: 3883, type: !146)
!6235 = !DILocation(line: 3883, column: 15, scope: !6217)
!6236 = !DILocation(line: 3883, column: 23, scope: !6217)
!6237 = !DILocation(line: 3884, column: 34, scope: !6217)
!6238 = !DILocation(line: 3884, column: 25, scope: !6217)
!6239 = !DILocation(line: 3884, column: 42, scope: !6217)
!6240 = !DILocation(line: 3884, column: 46, scope: !6217)
!6241 = !DILocation(line: 3885, column: 42, scope: !6217)
!6242 = !DILocation(line: 3885, column: 25, scope: !6217)
!6243 = !DILocation(line: 3886, column: 21, scope: !6217)
!6244 = !DILocation(line: 3886, column: 26, scope: !6217)
!6245 = !DILocation(line: 3886, column: 32, scope: !6217)
!6246 = !DILocation(line: 3886, column: 38, scope: !6217)
!6247 = !DILocation(line: 3886, column: 42, scope: !6217)
!6248 = !DILocation(line: 3886, column: 46, scope: !6217)
!6249 = !DILocation(line: 3886, column: 10, scope: !6217)
!6250 = !DILocation(line: 3886, column: 3, scope: !6217)
!6251 = !DILocation(line: 3897, column: 7, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 3897, column: 7)
!6253 = !DILocation(line: 3897, column: 13, scope: !6252)
!6254 = !DILocation(line: 3897, column: 7, scope: !1068)
!6255 = !DILocalVariable(name: "epoch", scope: !6256, file: !3, line: 3899, type: !162)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 3898, column: 5)
!6257 = !DILocation(line: 3899, column: 14, scope: !6256)
!6258 = !DILocalVariable(name: "tm", scope: !6256, file: !3, line: 3900, type: !5669)
!6259 = !DILocation(line: 3900, column: 17, scope: !6256)
!6260 = !DILocalVariable(name: "buf", scope: !6256, file: !3, line: 3901, type: !809)
!6261 = !DILocation(line: 3901, column: 12, scope: !6256)
!6262 = !DILocation(line: 3910, column: 25, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3910, column: 11)
!6264 = !DILocation(line: 3910, column: 11, scope: !6263)
!6265 = !DILocation(line: 3910, column: 11, scope: !6256)
!6266 = !DILocalVariable(name: "len", scope: !6267, file: !3, line: 3912, type: !149)
!6267 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 3911, column: 9)
!6268 = !DILocation(line: 3912, column: 18, scope: !6267)
!6269 = !DILocation(line: 3912, column: 41, scope: !6267)
!6270 = !DILocation(line: 3913, column: 46, scope: !6267)
!6271 = !DILocation(line: 3912, column: 24, scope: !6267)
!6272 = !DILocation(line: 3914, column: 15, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 3914, column: 15)
!6274 = !DILocation(line: 3914, column: 19, scope: !6273)
!6275 = !DILocation(line: 3914, column: 15, scope: !6267)
!6276 = !DILocation(line: 3915, column: 32, scope: !6273)
!6277 = !DILocation(line: 3915, column: 37, scope: !6273)
!6278 = !DILocation(line: 3915, column: 21, scope: !6273)
!6279 = !DILocation(line: 3915, column: 19, scope: !6273)
!6280 = !DILocation(line: 3915, column: 13, scope: !6273)
!6281 = !DILocation(line: 3916, column: 9, scope: !6267)
!6282 = !DILocation(line: 3918, column: 11, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3918, column: 11)
!6284 = !DILocation(line: 3918, column: 17, scope: !6283)
!6285 = !DILocation(line: 3918, column: 11, scope: !6256)
!6286 = !DILocation(line: 3919, column: 15, scope: !6283)
!6287 = !DILocation(line: 3919, column: 9, scope: !6283)
!6288 = !DILocation(line: 3920, column: 5, scope: !6256)
!6289 = !DILocation(line: 3922, column: 10, scope: !1068)
!6290 = !DILocation(line: 3922, column: 3, scope: !1068)
!6291 = distinct !DISubprogram(name: "timetostr", scope: !821, file: !821, line: 687, type: !6292, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!143, !162, !143}
!6294 = !DILocalVariable(name: "t", arg: 1, scope: !6291, file: !821, line: 687, type: !162)
!6295 = !DILocation(line: 687, column: 19, scope: !6291)
!6296 = !DILocalVariable(name: "buf", arg: 2, scope: !6291, file: !821, line: 687, type: !143)
!6297 = !DILocation(line: 687, column: 28, scope: !6291)
!6298 = !DILocation(line: 690, column: 24, scope: !6291)
!6299 = !DILocation(line: 690, column: 27, scope: !6291)
!6300 = !DILocation(line: 690, column: 13, scope: !6291)
!6301 = !DILocation(line: 689, column: 3, scope: !6291)
!6302 = distinct !DISubprogram(name: "print_name_with_quoting", scope: !3, file: !3, line: 4540, type: !6303, scopeLine: 4544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6303 = !DISubroutineType(types: !6304)
!6304 = !{!149, !182, !141, !604, !149}
!6305 = !DILocalVariable(name: "f", arg: 1, scope: !6302, file: !3, line: 4540, type: !182)
!6306 = !DILocation(line: 4540, column: 49, scope: !6302)
!6307 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !6302, file: !3, line: 4541, type: !141)
!6308 = !DILocation(line: 4541, column: 31, scope: !6302)
!6309 = !DILocalVariable(name: "stack", arg: 3, scope: !6302, file: !3, line: 4542, type: !604)
!6310 = !DILocation(line: 4542, column: 42, scope: !6302)
!6311 = !DILocalVariable(name: "start_col", arg: 4, scope: !6302, file: !3, line: 4543, type: !149)
!6312 = !DILocation(line: 4543, column: 33, scope: !6302)
!6313 = !DILocalVariable(name: "name", scope: !6302, file: !3, line: 4545, type: !146)
!6314 = !DILocation(line: 4545, column: 15, scope: !6302)
!6315 = !DILocation(line: 4545, column: 22, scope: !6302)
!6316 = !DILocation(line: 4545, column: 39, scope: !6302)
!6317 = !DILocation(line: 4545, column: 42, scope: !6302)
!6318 = !DILocation(line: 4545, column: 53, scope: !6302)
!6319 = !DILocation(line: 4545, column: 56, scope: !6302)
!6320 = !DILocalVariable(name: "color", scope: !6302, file: !3, line: 4547, type: !793)
!6321 = !DILocation(line: 4547, column: 25, scope: !6302)
!6322 = !DILocation(line: 4547, column: 33, scope: !6302)
!6323 = !DILocation(line: 4548, column: 54, scope: !6302)
!6324 = !DILocation(line: 4548, column: 57, scope: !6302)
!6325 = !DILocation(line: 4548, column: 33, scope: !6302)
!6326 = !DILocalVariable(name: "used_color_this_time", scope: !6302, file: !3, line: 4550, type: !141)
!6327 = !DILocation(line: 4550, column: 8, scope: !6302)
!6328 = !DILocation(line: 4550, column: 32, scope: !6302)
!6329 = !DILocation(line: 4551, column: 32, scope: !6302)
!6330 = !DILocation(line: 4551, column: 36, scope: !6302)
!6331 = !DILocation(line: 4551, column: 42, scope: !6302)
!6332 = !DILocation(line: 4551, column: 45, scope: !6302)
!6333 = !DILocation(line: 0, scope: !6302)
!6334 = !DILocalVariable(name: "len", scope: !6302, file: !3, line: 4553, type: !149)
!6335 = !DILocation(line: 4553, column: 10, scope: !6302)
!6336 = !DILocation(line: 4553, column: 28, scope: !6302)
!6337 = !DILocation(line: 4553, column: 34, scope: !6302)
!6338 = !DILocation(line: 4553, column: 60, scope: !6302)
!6339 = !DILocation(line: 4553, column: 63, scope: !6302)
!6340 = !DILocation(line: 4554, column: 28, scope: !6302)
!6341 = !DILocation(line: 4554, column: 36, scope: !6302)
!6342 = !DILocation(line: 4554, column: 35, scope: !6302)
!6343 = !DILocation(line: 4554, column: 52, scope: !6302)
!6344 = !DILocation(line: 4554, column: 59, scope: !6302)
!6345 = !DILocation(line: 4554, column: 62, scope: !6302)
!6346 = !DILocation(line: 4553, column: 16, scope: !6302)
!6347 = !DILocation(line: 4556, column: 3, scope: !6302)
!6348 = !DILocation(line: 4557, column: 7, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 4557, column: 7)
!6350 = !DILocation(line: 4557, column: 7, scope: !6302)
!6351 = !DILocation(line: 4559, column: 7, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 4558, column: 5)
!6353 = !DILocation(line: 4567, column: 11, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 4567, column: 11)
!6355 = !DILocation(line: 4568, column: 11, scope: !6354)
!6356 = !DILocation(line: 4568, column: 15, scope: !6354)
!6357 = !DILocation(line: 4568, column: 27, scope: !6354)
!6358 = !DILocation(line: 4568, column: 25, scope: !6354)
!6359 = !DILocation(line: 4568, column: 43, scope: !6354)
!6360 = !DILocation(line: 4568, column: 55, scope: !6354)
!6361 = !DILocation(line: 4568, column: 53, scope: !6354)
!6362 = !DILocation(line: 4568, column: 59, scope: !6354)
!6363 = !DILocation(line: 4568, column: 66, scope: !6354)
!6364 = !DILocation(line: 4568, column: 64, scope: !6354)
!6365 = !DILocation(line: 4568, column: 39, scope: !6354)
!6366 = !DILocation(line: 4567, column: 11, scope: !6352)
!6367 = !DILocation(line: 4569, column: 9, scope: !6354)
!6368 = !DILocation(line: 4570, column: 5, scope: !6352)
!6369 = !DILocation(line: 4572, column: 10, scope: !6302)
!6370 = !DILocation(line: 4572, column: 3, scope: !6302)
!6371 = distinct !DISubprogram(name: "print_type_indicator", scope: !3, file: !3, line: 4655, type: !6372, scopeLine: 4656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!141, !141, !226, !36}
!6374 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6371, file: !3, line: 4655, type: !141)
!6375 = !DILocation(line: 4655, column: 28, scope: !6371)
!6376 = !DILocalVariable(name: "mode", arg: 2, scope: !6371, file: !3, line: 4655, type: !226)
!6377 = !DILocation(line: 4655, column: 44, scope: !6371)
!6378 = !DILocalVariable(name: "type", arg: 3, scope: !6371, file: !3, line: 4655, type: !36)
!6379 = !DILocation(line: 4655, column: 64, scope: !6371)
!6380 = !DILocalVariable(name: "c", scope: !6371, file: !3, line: 4657, type: !144)
!6381 = !DILocation(line: 4657, column: 8, scope: !6371)
!6382 = !DILocation(line: 4657, column: 32, scope: !6371)
!6383 = !DILocation(line: 4657, column: 41, scope: !6371)
!6384 = !DILocation(line: 4657, column: 47, scope: !6371)
!6385 = !DILocation(line: 4657, column: 12, scope: !6371)
!6386 = !DILocation(line: 4658, column: 7, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 4658, column: 7)
!6388 = !DILocation(line: 4658, column: 7, scope: !6371)
!6389 = !DILocation(line: 4659, column: 5, scope: !6387)
!6390 = !DILocation(line: 4659, column: 5, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 4659, column: 5)
!6392 = !DILocation(line: 4660, column: 12, scope: !6371)
!6393 = !DILocation(line: 4660, column: 11, scope: !6371)
!6394 = !DILocation(line: 4660, column: 10, scope: !6371)
!6395 = !DILocation(line: 4660, column: 3, scope: !6371)
!6396 = distinct !DISubprogram(name: "get_type_indicator", scope: !3, file: !3, line: 4623, type: !6397, scopeLine: 4624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6397 = !DISubroutineType(types: !6398)
!6398 = !{!144, !141, !226, !36}
!6399 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6396, file: !3, line: 4623, type: !141)
!6400 = !DILocation(line: 4623, column: 26, scope: !6396)
!6401 = !DILocalVariable(name: "mode", arg: 2, scope: !6396, file: !3, line: 4623, type: !226)
!6402 = !DILocation(line: 4623, column: 42, scope: !6396)
!6403 = !DILocalVariable(name: "type", arg: 3, scope: !6396, file: !3, line: 4623, type: !36)
!6404 = !DILocation(line: 4623, column: 62, scope: !6396)
!6405 = !DILocalVariable(name: "c", scope: !6396, file: !3, line: 4625, type: !144)
!6406 = !DILocation(line: 4625, column: 8, scope: !6396)
!6407 = !DILocation(line: 4627, column: 7, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 4627, column: 7)
!6409 = !DILocation(line: 4627, column: 7, scope: !6396)
!6410 = !DILocation(line: 4627, column: 17, scope: !6408)
!6411 = !DILocation(line: 4627, column: 34, scope: !6408)
!6412 = !DILocation(line: 4627, column: 39, scope: !6408)
!6413 = !DILocation(line: 4629, column: 11, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 4629, column: 11)
!6415 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 4628, column: 5)
!6416 = !DILocation(line: 4629, column: 19, scope: !6414)
!6417 = !DILocation(line: 4629, column: 22, scope: !6414)
!6418 = !DILocation(line: 4629, column: 38, scope: !6414)
!6419 = !DILocation(line: 4629, column: 50, scope: !6414)
!6420 = !DILocation(line: 4629, column: 54, scope: !6414)
!6421 = !DILocation(line: 4629, column: 59, scope: !6414)
!6422 = !DILocation(line: 4629, column: 11, scope: !6415)
!6423 = !DILocation(line: 4630, column: 11, scope: !6414)
!6424 = !DILocation(line: 4630, column: 9, scope: !6414)
!6425 = !DILocation(line: 4632, column: 11, scope: !6414)
!6426 = !DILocation(line: 4633, column: 5, scope: !6415)
!6427 = !DILocation(line: 4636, column: 11, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 4636, column: 11)
!6429 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 4635, column: 5)
!6430 = !DILocation(line: 4636, column: 11, scope: !6429)
!6431 = !DILocation(line: 4636, column: 21, scope: !6428)
!6432 = !DILocation(line: 4636, column: 38, scope: !6428)
!6433 = !DILocation(line: 4636, column: 43, scope: !6428)
!6434 = !DILocation(line: 4636, column: 56, scope: !6428)
!6435 = !DILocation(line: 4636, column: 59, scope: !6428)
!6436 = !DILocation(line: 4636, column: 64, scope: !6428)
!6437 = !DILocation(line: 4637, column: 11, scope: !6428)
!6438 = !DILocation(line: 4637, column: 9, scope: !6428)
!6439 = !DILocation(line: 4638, column: 16, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 4638, column: 16)
!6441 = !DILocation(line: 4638, column: 32, scope: !6440)
!6442 = !DILocation(line: 4638, column: 16, scope: !6428)
!6443 = !DILocation(line: 4639, column: 11, scope: !6440)
!6444 = !DILocation(line: 4639, column: 9, scope: !6440)
!6445 = !DILocation(line: 4640, column: 16, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 4640, column: 16)
!6447 = !DILocation(line: 4640, column: 16, scope: !6440)
!6448 = !DILocation(line: 4640, column: 26, scope: !6446)
!6449 = !DILocation(line: 4640, column: 43, scope: !6446)
!6450 = !DILocation(line: 4640, column: 48, scope: !6446)
!6451 = !DILocation(line: 4641, column: 11, scope: !6446)
!6452 = !DILocation(line: 4641, column: 9, scope: !6446)
!6453 = !DILocation(line: 4642, column: 16, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 4642, column: 16)
!6455 = !DILocation(line: 4642, column: 16, scope: !6446)
!6456 = !DILocation(line: 4642, column: 26, scope: !6454)
!6457 = !DILocation(line: 4642, column: 44, scope: !6454)
!6458 = !DILocation(line: 4642, column: 49, scope: !6454)
!6459 = !DILocation(line: 4643, column: 11, scope: !6454)
!6460 = !DILocation(line: 4643, column: 9, scope: !6454)
!6461 = !DILocation(line: 4644, column: 16, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 4644, column: 16)
!6463 = !DILocation(line: 4644, column: 16, scope: !6454)
!6464 = !DILocation(line: 4644, column: 26, scope: !6462)
!6465 = !DILocation(line: 4644, column: 44, scope: !6462)
!6466 = !DILocation(line: 4644, column: 49, scope: !6462)
!6467 = !DILocation(line: 4645, column: 11, scope: !6462)
!6468 = !DILocation(line: 4645, column: 9, scope: !6462)
!6469 = !DILocation(line: 4646, column: 16, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 4646, column: 16)
!6471 = !DILocation(line: 4646, column: 24, scope: !6470)
!6472 = !DILocation(line: 4646, column: 16, scope: !6462)
!6473 = !DILocation(line: 4647, column: 11, scope: !6470)
!6474 = !DILocation(line: 4647, column: 9, scope: !6470)
!6475 = !DILocation(line: 4649, column: 11, scope: !6470)
!6476 = !DILocation(line: 4651, column: 10, scope: !6396)
!6477 = !DILocation(line: 4651, column: 3, scope: !6396)
!6478 = !DILocalVariable(name: "f", arg: 1, scope: !1056, file: !3, line: 4682, type: !182)
!6479 = !DILocation(line: 4682, column: 45, scope: !1056)
!6480 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !1056, file: !3, line: 4682, type: !141)
!6481 = !DILocation(line: 4682, column: 53, scope: !1056)
!6482 = !DILocalVariable(name: "type", scope: !1056, file: !3, line: 4684, type: !53)
!6483 = !DILocation(line: 4684, column: 21, scope: !1056)
!6484 = !DILocalVariable(name: "ext", scope: !1056, file: !3, line: 4685, type: !698)
!6485 = !DILocation(line: 4685, column: 26, scope: !1056)
!6486 = !DILocalVariable(name: "len", scope: !1056, file: !3, line: 4686, type: !149)
!6487 = !DILocation(line: 4686, column: 10, scope: !1056)
!6488 = !DILocalVariable(name: "name", scope: !1056, file: !3, line: 4688, type: !146)
!6489 = !DILocation(line: 4688, column: 15, scope: !1056)
!6490 = !DILocalVariable(name: "mode", scope: !1056, file: !3, line: 4689, type: !226)
!6491 = !DILocation(line: 4689, column: 10, scope: !1056)
!6492 = !DILocalVariable(name: "linkok", scope: !1056, file: !3, line: 4690, type: !27)
!6493 = !DILocation(line: 4690, column: 7, scope: !1056)
!6494 = !DILocation(line: 4691, column: 7, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !1056, file: !3, line: 4691, column: 7)
!6496 = !DILocation(line: 4691, column: 7, scope: !1056)
!6497 = !DILocation(line: 4693, column: 14, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 4692, column: 5)
!6499 = !DILocation(line: 4693, column: 17, scope: !6498)
!6500 = !DILocation(line: 4693, column: 12, scope: !6498)
!6501 = !DILocation(line: 4694, column: 14, scope: !6498)
!6502 = !DILocation(line: 4694, column: 17, scope: !6498)
!6503 = !DILocation(line: 4694, column: 12, scope: !6498)
!6504 = !DILocation(line: 4695, column: 16, scope: !6498)
!6505 = !DILocation(line: 4695, column: 19, scope: !6498)
!6506 = !DILocation(line: 4695, column: 14, scope: !6498)
!6507 = !DILocation(line: 4696, column: 5, scope: !6498)
!6508 = !DILocation(line: 4699, column: 14, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 4698, column: 5)
!6510 = !DILocation(line: 4699, column: 17, scope: !6509)
!6511 = !DILocation(line: 4699, column: 12, scope: !6509)
!6512 = !DILocation(line: 4700, column: 14, scope: !6509)
!6513 = !DILocation(line: 4700, column: 12, scope: !6509)
!6514 = !DILocation(line: 4701, column: 16, scope: !6509)
!6515 = !DILocation(line: 4701, column: 19, scope: !6509)
!6516 = !DILocation(line: 4701, column: 14, scope: !6509)
!6517 = !DILocation(line: 4706, column: 7, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !1056, file: !3, line: 4706, column: 7)
!6519 = !DILocation(line: 4706, column: 14, scope: !6518)
!6520 = !DILocation(line: 4706, column: 20, scope: !6518)
!6521 = !DILocation(line: 4706, column: 23, scope: !6518)
!6522 = !DILocation(line: 4706, column: 7, scope: !1056)
!6523 = !DILocation(line: 4707, column: 10, scope: !6518)
!6524 = !DILocation(line: 4707, column: 5, scope: !6518)
!6525 = !DILocation(line: 4708, column: 13, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 4708, column: 12)
!6527 = !DILocation(line: 4708, column: 16, scope: !6526)
!6528 = !DILocation(line: 4708, column: 12, scope: !6518)
!6529 = !DILocation(line: 4711, column: 33, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 4709, column: 5)
!6531 = !DILocation(line: 4711, column: 36, scope: !6530)
!6532 = !DILocation(line: 4711, column: 14, scope: !6530)
!6533 = !DILocation(line: 4711, column: 12, scope: !6530)
!6534 = !DILocation(line: 4712, column: 5, scope: !6530)
!6535 = !DILocation(line: 4715, column: 11, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 4715, column: 11)
!6537 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 4714, column: 5)
!6538 = !DILocation(line: 4715, column: 11, scope: !6537)
!6539 = !DILocation(line: 4717, column: 16, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 4716, column: 9)
!6541 = !DILocation(line: 4719, column: 16, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 4719, column: 15)
!6543 = !DILocation(line: 4719, column: 21, scope: !6542)
!6544 = !DILocation(line: 4719, column: 32, scope: !6542)
!6545 = !DILocation(line: 4719, column: 37, scope: !6542)
!6546 = !DILocation(line: 4719, column: 40, scope: !6542)
!6547 = !DILocation(line: 4719, column: 15, scope: !6540)
!6548 = !DILocation(line: 4720, column: 18, scope: !6542)
!6549 = !DILocation(line: 4720, column: 13, scope: !6542)
!6550 = !DILocation(line: 4721, column: 21, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 4721, column: 20)
!6552 = !DILocation(line: 4721, column: 26, scope: !6551)
!6553 = !DILocation(line: 4721, column: 37, scope: !6551)
!6554 = !DILocation(line: 4721, column: 42, scope: !6551)
!6555 = !DILocation(line: 4721, column: 45, scope: !6551)
!6556 = !DILocation(line: 4721, column: 20, scope: !6542)
!6557 = !DILocation(line: 4722, column: 18, scope: !6551)
!6558 = !DILocation(line: 4722, column: 13, scope: !6551)
!6559 = !DILocation(line: 4723, column: 20, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 4723, column: 20)
!6561 = !DILocation(line: 4723, column: 39, scope: !6560)
!6562 = !DILocation(line: 4723, column: 42, scope: !6560)
!6563 = !DILocation(line: 4723, column: 45, scope: !6560)
!6564 = !DILocation(line: 4723, column: 20, scope: !6551)
!6565 = !DILocation(line: 4724, column: 18, scope: !6560)
!6566 = !DILocation(line: 4724, column: 13, scope: !6560)
!6567 = !DILocation(line: 4725, column: 21, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 4725, column: 20)
!6569 = !DILocation(line: 4725, column: 26, scope: !6568)
!6570 = !DILocation(line: 4725, column: 37, scope: !6568)
!6571 = !DILocation(line: 4725, column: 42, scope: !6568)
!6572 = !DILocation(line: 4725, column: 45, scope: !6568)
!6573 = !DILocation(line: 4725, column: 20, scope: !6560)
!6574 = !DILocation(line: 4726, column: 18, scope: !6568)
!6575 = !DILocation(line: 4726, column: 13, scope: !6568)
!6576 = !DILocation(line: 4727, column: 25, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 4727, column: 20)
!6578 = !DILocation(line: 4727, column: 28, scope: !6577)
!6579 = !DILocation(line: 4727, column: 33, scope: !6577)
!6580 = !DILocation(line: 4727, column: 23, scope: !6577)
!6581 = !DILocation(line: 4727, column: 43, scope: !6577)
!6582 = !DILocation(line: 4727, column: 46, scope: !6577)
!6583 = !DILocation(line: 4727, column: 20, scope: !6568)
!6584 = !DILocation(line: 4728, column: 18, scope: !6577)
!6585 = !DILocation(line: 4728, column: 13, scope: !6577)
!6586 = !DILocation(line: 4729, column: 9, scope: !6540)
!6587 = !DILocation(line: 4730, column: 16, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 4730, column: 16)
!6589 = !DILocation(line: 4730, column: 16, scope: !6536)
!6590 = !DILocation(line: 4732, column: 16, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 4731, column: 9)
!6592 = !DILocation(line: 4734, column: 16, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 4734, column: 15)
!6594 = !DILocation(line: 4734, column: 21, scope: !6593)
!6595 = !DILocation(line: 4734, column: 32, scope: !6593)
!6596 = !DILocation(line: 4734, column: 36, scope: !6593)
!6597 = !DILocation(line: 4734, column: 41, scope: !6593)
!6598 = !DILocation(line: 4735, column: 15, scope: !6593)
!6599 = !DILocation(line: 4735, column: 18, scope: !6593)
!6600 = !DILocation(line: 4734, column: 15, scope: !6591)
!6601 = !DILocation(line: 4736, column: 18, scope: !6593)
!6602 = !DILocation(line: 4736, column: 13, scope: !6593)
!6603 = !DILocation(line: 4737, column: 21, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 4737, column: 20)
!6605 = !DILocation(line: 4737, column: 26, scope: !6604)
!6606 = !DILocation(line: 4737, column: 37, scope: !6604)
!6607 = !DILocation(line: 4737, column: 42, scope: !6604)
!6608 = !DILocation(line: 4737, column: 45, scope: !6604)
!6609 = !DILocation(line: 4737, column: 20, scope: !6593)
!6610 = !DILocation(line: 4738, column: 18, scope: !6604)
!6611 = !DILocation(line: 4738, column: 13, scope: !6604)
!6612 = !DILocation(line: 4739, column: 21, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 4739, column: 20)
!6614 = !DILocation(line: 4739, column: 26, scope: !6613)
!6615 = !DILocation(line: 4739, column: 37, scope: !6613)
!6616 = !DILocation(line: 4739, column: 42, scope: !6613)
!6617 = !DILocation(line: 4739, column: 45, scope: !6613)
!6618 = !DILocation(line: 4739, column: 20, scope: !6604)
!6619 = !DILocation(line: 4740, column: 18, scope: !6613)
!6620 = !DILocation(line: 4740, column: 13, scope: !6613)
!6621 = !DILocation(line: 4741, column: 9, scope: !6591)
!6622 = !DILocation(line: 4742, column: 16, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 4742, column: 16)
!6624 = !DILocation(line: 4742, column: 16, scope: !6588)
!6625 = !DILocation(line: 4743, column: 14, scope: !6623)
!6626 = !DILocation(line: 4743, column: 9, scope: !6623)
!6627 = !DILocation(line: 4744, column: 16, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4744, column: 16)
!6629 = !DILocation(line: 4744, column: 16, scope: !6623)
!6630 = !DILocation(line: 4745, column: 14, scope: !6628)
!6631 = !DILocation(line: 4745, column: 9, scope: !6628)
!6632 = !DILocation(line: 4746, column: 16, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 4746, column: 16)
!6634 = !DILocation(line: 4746, column: 16, scope: !6628)
!6635 = !DILocation(line: 4747, column: 14, scope: !6633)
!6636 = !DILocation(line: 4747, column: 9, scope: !6633)
!6637 = !DILocation(line: 4748, column: 16, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 4748, column: 16)
!6639 = !DILocation(line: 4748, column: 16, scope: !6633)
!6640 = !DILocation(line: 4749, column: 14, scope: !6638)
!6641 = !DILocation(line: 4749, column: 9, scope: !6638)
!6642 = !DILocation(line: 4750, column: 16, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 4750, column: 16)
!6644 = !DILocation(line: 4750, column: 16, scope: !6638)
!6645 = !DILocation(line: 4751, column: 14, scope: !6643)
!6646 = !DILocation(line: 4751, column: 9, scope: !6643)
!6647 = !DILocation(line: 4757, column: 16, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 4755, column: 9)
!6649 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 4752, column: 16)
!6650 = !DILocation(line: 4762, column: 7, scope: !1056)
!6651 = !DILocation(line: 4763, column: 7, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !1056, file: !3, line: 4763, column: 7)
!6653 = !DILocation(line: 4763, column: 12, scope: !6652)
!6654 = !DILocation(line: 4763, column: 7, scope: !1056)
!6655 = !DILocation(line: 4767, column: 21, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 4764, column: 5)
!6657 = !DILocation(line: 4767, column: 13, scope: !6656)
!6658 = !DILocation(line: 4767, column: 11, scope: !6656)
!6659 = !DILocation(line: 4768, column: 15, scope: !6656)
!6660 = !DILocation(line: 4768, column: 12, scope: !6656)
!6661 = !DILocation(line: 4769, column: 18, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 4769, column: 7)
!6663 = !DILocation(line: 4769, column: 16, scope: !6662)
!6664 = !DILocation(line: 4769, column: 12, scope: !6662)
!6665 = !DILocation(line: 4769, column: 34, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 4769, column: 7)
!6667 = !DILocation(line: 4769, column: 38, scope: !6666)
!6668 = !DILocation(line: 4769, column: 7, scope: !6662)
!6669 = !DILocation(line: 4771, column: 15, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 4771, column: 15)
!6671 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 4770, column: 9)
!6672 = !DILocation(line: 4771, column: 20, scope: !6670)
!6673 = !DILocation(line: 4771, column: 24, scope: !6670)
!6674 = !DILocation(line: 4771, column: 31, scope: !6670)
!6675 = !DILocation(line: 4771, column: 28, scope: !6670)
!6676 = !DILocation(line: 4772, column: 15, scope: !6670)
!6677 = !DILocation(line: 4772, column: 33, scope: !6670)
!6678 = !DILocation(line: 4772, column: 40, scope: !6670)
!6679 = !DILocation(line: 4772, column: 45, scope: !6670)
!6680 = !DILocation(line: 4772, column: 49, scope: !6670)
!6681 = !DILocation(line: 4772, column: 38, scope: !6670)
!6682 = !DILocation(line: 4772, column: 54, scope: !6670)
!6683 = !DILocation(line: 4772, column: 59, scope: !6670)
!6684 = !DILocation(line: 4772, column: 63, scope: !6670)
!6685 = !DILocation(line: 4773, column: 33, scope: !6670)
!6686 = !DILocation(line: 4773, column: 38, scope: !6670)
!6687 = !DILocation(line: 4773, column: 42, scope: !6670)
!6688 = !DILocation(line: 4772, column: 18, scope: !6670)
!6689 = !DILocation(line: 4773, column: 47, scope: !6670)
!6690 = !DILocation(line: 4771, column: 15, scope: !6671)
!6691 = !DILocation(line: 4774, column: 13, scope: !6670)
!6692 = !DILocation(line: 4775, column: 9, scope: !6671)
!6693 = !DILocation(line: 4769, column: 53, scope: !6666)
!6694 = !DILocation(line: 4769, column: 58, scope: !6666)
!6695 = !DILocation(line: 4769, column: 51, scope: !6666)
!6696 = !DILocation(line: 4769, column: 7, scope: !6666)
!6697 = distinct !{!6697, !6668, !6698}
!6698 = !DILocation(line: 4775, column: 9, scope: !6662)
!6699 = !DILocation(line: 4776, column: 5, scope: !6656)
!6700 = !DILocation(line: 4779, column: 7, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !1056, file: !3, line: 4779, column: 7)
!6702 = !DILocation(line: 4779, column: 12, scope: !6701)
!6703 = !DILocation(line: 4779, column: 22, scope: !6701)
!6704 = !DILocation(line: 4779, column: 26, scope: !6701)
!6705 = !DILocation(line: 4779, column: 7, scope: !1056)
!6706 = !DILocation(line: 4781, column: 11, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 4781, column: 11)
!6708 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 4780, column: 5)
!6709 = !DILocation(line: 4781, column: 37, scope: !6707)
!6710 = !DILocation(line: 4781, column: 40, scope: !6707)
!6711 = !DILocation(line: 4781, column: 11, scope: !6708)
!6712 = !DILocation(line: 4782, column: 14, scope: !6707)
!6713 = !DILocation(line: 4782, column: 9, scope: !6707)
!6714 = !DILocation(line: 4783, column: 5, scope: !6708)
!6715 = !DILocalVariable(name: "s", scope: !1056, file: !3, line: 4785, type: !796)
!6716 = !DILocation(line: 4785, column: 31, scope: !1056)
!6717 = !DILocation(line: 4786, column: 7, scope: !1056)
!6718 = !DILocation(line: 4786, column: 15, scope: !1056)
!6719 = !DILocation(line: 4786, column: 20, scope: !1056)
!6720 = !DILocation(line: 4786, column: 44, scope: !1056)
!6721 = !DILocation(line: 4786, column: 28, scope: !1056)
!6722 = !DILocation(line: 4788, column: 10, scope: !1056)
!6723 = !DILocation(line: 4788, column: 13, scope: !1056)
!6724 = !DILocation(line: 4788, column: 22, scope: !1056)
!6725 = !DILocation(line: 4788, column: 3, scope: !1056)
!6726 = distinct !DISubprogram(name: "calculate_columns", scope: !3, file: !3, line: 5077, type: !6727, scopeLine: 5078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!149, !141}
!6729 = !DILocalVariable(name: "by_columns", arg: 1, scope: !6726, file: !3, line: 5077, type: !141)
!6730 = !DILocation(line: 5077, column: 25, scope: !6726)
!6731 = !DILocalVariable(name: "filesno", scope: !6726, file: !3, line: 5079, type: !149)
!6732 = !DILocation(line: 5079, column: 10, scope: !6726)
!6733 = !DILocalVariable(name: "cols", scope: !6726, file: !3, line: 5080, type: !149)
!6734 = !DILocation(line: 5080, column: 10, scope: !6726)
!6735 = !DILocalVariable(name: "max_cols", scope: !6726, file: !3, line: 5085, type: !149)
!6736 = !DILocation(line: 5085, column: 10, scope: !6726)
!6737 = !DILocation(line: 5085, column: 21, scope: !6726)
!6738 = !DILocation(line: 5087, column: 3, scope: !6726)
!6739 = !DILocation(line: 5090, column: 16, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 5090, column: 3)
!6741 = !DILocation(line: 5090, column: 8, scope: !6740)
!6742 = !DILocation(line: 5090, column: 21, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 5090, column: 3)
!6744 = !DILocation(line: 5090, column: 31, scope: !6743)
!6745 = !DILocation(line: 5090, column: 29, scope: !6743)
!6746 = !DILocation(line: 5090, column: 3, scope: !6740)
!6747 = !DILocalVariable(name: "f", scope: !6748, file: !3, line: 5092, type: !182)
!6748 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 5091, column: 5)
!6749 = !DILocation(line: 5092, column: 30, scope: !6748)
!6750 = !DILocation(line: 5092, column: 34, scope: !6748)
!6751 = !DILocation(line: 5092, column: 46, scope: !6748)
!6752 = !DILocalVariable(name: "name_length", scope: !6748, file: !3, line: 5093, type: !149)
!6753 = !DILocation(line: 5093, column: 14, scope: !6748)
!6754 = !DILocation(line: 5093, column: 60, scope: !6748)
!6755 = !DILocation(line: 5093, column: 28, scope: !6748)
!6756 = !DILocalVariable(name: "i", scope: !6757, file: !3, line: 5095, type: !149)
!6757 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 5095, column: 7)
!6758 = !DILocation(line: 5095, column: 19, scope: !6757)
!6759 = !DILocation(line: 5095, column: 12, scope: !6757)
!6760 = !DILocation(line: 5095, column: 26, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 5095, column: 7)
!6762 = !DILocation(line: 5095, column: 30, scope: !6761)
!6763 = !DILocation(line: 5095, column: 28, scope: !6761)
!6764 = !DILocation(line: 5095, column: 7, scope: !6757)
!6765 = !DILocation(line: 5097, column: 15, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 5097, column: 15)
!6767 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 5096, column: 9)
!6768 = !DILocation(line: 5097, column: 27, scope: !6766)
!6769 = !DILocation(line: 5097, column: 30, scope: !6766)
!6770 = !DILocation(line: 5097, column: 15, scope: !6767)
!6771 = !DILocalVariable(name: "idx", scope: !6772, file: !3, line: 5099, type: !149)
!6772 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 5098, column: 13)
!6773 = !DILocation(line: 5099, column: 22, scope: !6772)
!6774 = !DILocation(line: 5099, column: 29, scope: !6772)
!6775 = !DILocation(line: 5100, column: 31, scope: !6772)
!6776 = !DILocation(line: 5100, column: 43, scope: !6772)
!6777 = !DILocation(line: 5100, column: 56, scope: !6772)
!6778 = !DILocation(line: 5100, column: 54, scope: !6772)
!6779 = !DILocation(line: 5100, column: 62, scope: !6772)
!6780 = !DILocation(line: 5100, column: 64, scope: !6772)
!6781 = !DILocation(line: 5100, column: 59, scope: !6772)
!6782 = !DILocation(line: 5100, column: 39, scope: !6772)
!6783 = !DILocation(line: 5101, column: 31, scope: !6772)
!6784 = !DILocation(line: 5101, column: 42, scope: !6772)
!6785 = !DILocation(line: 5101, column: 44, scope: !6772)
!6786 = !DILocation(line: 5101, column: 39, scope: !6772)
!6787 = !DILocalVariable(name: "real_length", scope: !6772, file: !3, line: 5102, type: !149)
!6788 = !DILocation(line: 5102, column: 22, scope: !6772)
!6789 = !DILocation(line: 5102, column: 36, scope: !6772)
!6790 = !DILocation(line: 5102, column: 51, scope: !6772)
!6791 = !DILocation(line: 5102, column: 58, scope: !6772)
!6792 = !DILocation(line: 5102, column: 55, scope: !6772)
!6793 = !DILocation(line: 5102, column: 50, scope: !6772)
!6794 = !DILocation(line: 5102, column: 48, scope: !6772)
!6795 = !DILocation(line: 5104, column: 19, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 5104, column: 19)
!6797 = !DILocation(line: 5104, column: 31, scope: !6796)
!6798 = !DILocation(line: 5104, column: 34, scope: !6796)
!6799 = !DILocation(line: 5104, column: 42, scope: !6796)
!6800 = !DILocation(line: 5104, column: 49, scope: !6796)
!6801 = !DILocation(line: 5104, column: 47, scope: !6796)
!6802 = !DILocation(line: 5104, column: 19, scope: !6772)
!6803 = !DILocation(line: 5106, column: 47, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 5105, column: 17)
!6805 = !DILocation(line: 5107, column: 49, scope: !6804)
!6806 = !DILocation(line: 5107, column: 61, scope: !6804)
!6807 = !DILocation(line: 5107, column: 64, scope: !6804)
!6808 = !DILocation(line: 5107, column: 72, scope: !6804)
!6809 = !DILocation(line: 5107, column: 47, scope: !6804)
!6810 = !DILocation(line: 5106, column: 19, scope: !6804)
!6811 = !DILocation(line: 5106, column: 31, scope: !6804)
!6812 = !DILocation(line: 5106, column: 34, scope: !6804)
!6813 = !DILocation(line: 5106, column: 43, scope: !6804)
!6814 = !DILocation(line: 5108, column: 49, scope: !6804)
!6815 = !DILocation(line: 5108, column: 19, scope: !6804)
!6816 = !DILocation(line: 5108, column: 31, scope: !6804)
!6817 = !DILocation(line: 5108, column: 34, scope: !6804)
!6818 = !DILocation(line: 5108, column: 42, scope: !6804)
!6819 = !DILocation(line: 5108, column: 47, scope: !6804)
!6820 = !DILocation(line: 5109, column: 47, scope: !6804)
!6821 = !DILocation(line: 5109, column: 59, scope: !6804)
!6822 = !DILocation(line: 5109, column: 62, scope: !6804)
!6823 = !DILocation(line: 5110, column: 49, scope: !6804)
!6824 = !DILocation(line: 5110, column: 47, scope: !6804)
!6825 = !DILocation(line: 5109, column: 19, scope: !6804)
!6826 = !DILocation(line: 5109, column: 31, scope: !6804)
!6827 = !DILocation(line: 5109, column: 34, scope: !6804)
!6828 = !DILocation(line: 5109, column: 44, scope: !6804)
!6829 = !DILocation(line: 5111, column: 17, scope: !6804)
!6830 = !DILocation(line: 5112, column: 13, scope: !6772)
!6831 = !DILocation(line: 5113, column: 9, scope: !6767)
!6832 = !DILocation(line: 5095, column: 40, scope: !6761)
!6833 = !DILocation(line: 5095, column: 7, scope: !6761)
!6834 = distinct !{!6834, !6764, !6835}
!6835 = !DILocation(line: 5113, column: 9, scope: !6757)
!6836 = !DILocation(line: 5114, column: 5, scope: !6748)
!6837 = !DILocation(line: 5090, column: 43, scope: !6743)
!6838 = !DILocation(line: 5090, column: 3, scope: !6743)
!6839 = distinct !{!6839, !6746, !6840}
!6840 = !DILocation(line: 5114, column: 5, scope: !6740)
!6841 = !DILocation(line: 5117, column: 15, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 5117, column: 3)
!6843 = !DILocation(line: 5117, column: 13, scope: !6842)
!6844 = !DILocation(line: 5117, column: 8, scope: !6842)
!6845 = !DILocation(line: 5117, column: 29, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 5117, column: 3)
!6847 = !DILocation(line: 5117, column: 27, scope: !6846)
!6848 = !DILocation(line: 5117, column: 3, scope: !6842)
!6849 = !DILocation(line: 5119, column: 11, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 5119, column: 11)
!6851 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 5118, column: 5)
!6852 = !DILocation(line: 5119, column: 23, scope: !6850)
!6853 = !DILocation(line: 5119, column: 28, scope: !6850)
!6854 = !DILocation(line: 5119, column: 33, scope: !6850)
!6855 = !DILocation(line: 5119, column: 11, scope: !6851)
!6856 = !DILocation(line: 5120, column: 9, scope: !6850)
!6857 = !DILocation(line: 5121, column: 5, scope: !6851)
!6858 = !DILocation(line: 5117, column: 35, scope: !6846)
!6859 = !DILocation(line: 5117, column: 3, scope: !6846)
!6860 = distinct !{!6860, !6848, !6861}
!6861 = !DILocation(line: 5121, column: 5, scope: !6842)
!6862 = !DILocation(line: 5123, column: 10, scope: !6726)
!6863 = !DILocation(line: 5123, column: 3, scope: !6726)
!6864 = distinct !DISubprogram(name: "length_of_file_name_and_frills", scope: !3, file: !3, line: 4813, type: !6865, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{!149, !182}
!6867 = !DILocalVariable(name: "f", arg: 1, scope: !6864, file: !3, line: 4813, type: !182)
!6868 = !DILocation(line: 4813, column: 56, scope: !6864)
!6869 = !DILocalVariable(name: "len", scope: !6864, file: !3, line: 4815, type: !149)
!6870 = !DILocation(line: 4815, column: 10, scope: !6864)
!6871 = !DILocalVariable(name: "buf", scope: !6864, file: !3, line: 4816, type: !734)
!6872 = !DILocation(line: 4816, column: 8, scope: !6864)
!6873 = !DILocation(line: 4818, column: 7, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 4818, column: 7)
!6875 = !DILocation(line: 4818, column: 7, scope: !6864)
!6876 = !DILocation(line: 4819, column: 17, scope: !6874)
!6877 = !DILocation(line: 4819, column: 24, scope: !6874)
!6878 = !DILocation(line: 4820, column: 38, scope: !6874)
!6879 = !DILocation(line: 4820, column: 41, scope: !6874)
!6880 = !DILocation(line: 4820, column: 46, scope: !6874)
!6881 = !DILocation(line: 4820, column: 54, scope: !6874)
!6882 = !DILocation(line: 4820, column: 27, scope: !6874)
!6883 = !DILocation(line: 4820, column: 19, scope: !6874)
!6884 = !DILocation(line: 4821, column: 19, scope: !6874)
!6885 = !DILocation(line: 4819, column: 14, scope: !6874)
!6886 = !DILocation(line: 4819, column: 9, scope: !6874)
!6887 = !DILocation(line: 4819, column: 5, scope: !6874)
!6888 = !DILocation(line: 4823, column: 7, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 4823, column: 7)
!6890 = !DILocation(line: 4823, column: 7, scope: !6864)
!6891 = !DILocation(line: 4824, column: 17, scope: !6889)
!6892 = !DILocation(line: 4824, column: 24, scope: !6889)
!6893 = !DILocation(line: 4825, column: 29, scope: !6889)
!6894 = !DILocation(line: 4825, column: 32, scope: !6889)
!6895 = !DILocation(line: 4825, column: 27, scope: !6889)
!6896 = !DILocation(line: 4826, column: 45, scope: !6889)
!6897 = !DILocation(line: 4826, column: 67, scope: !6889)
!6898 = !DILocation(line: 4827, column: 45, scope: !6889)
!6899 = !DILocation(line: 4828, column: 45, scope: !6889)
!6900 = !DILocation(line: 4826, column: 29, scope: !6889)
!6901 = !DILocation(line: 4825, column: 19, scope: !6889)
!6902 = !DILocation(line: 4829, column: 19, scope: !6889)
!6903 = !DILocation(line: 4824, column: 14, scope: !6889)
!6904 = !DILocation(line: 4824, column: 9, scope: !6889)
!6905 = !DILocation(line: 4824, column: 5, scope: !6889)
!6906 = !DILocation(line: 4831, column: 7, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 4831, column: 7)
!6908 = !DILocation(line: 4831, column: 7, scope: !6864)
!6909 = !DILocation(line: 4832, column: 17, scope: !6907)
!6910 = !DILocation(line: 4832, column: 24, scope: !6907)
!6911 = !DILocation(line: 4832, column: 49, scope: !6907)
!6912 = !DILocation(line: 4832, column: 52, scope: !6907)
!6913 = !DILocation(line: 4832, column: 41, scope: !6907)
!6914 = !DILocation(line: 4832, column: 64, scope: !6907)
!6915 = !DILocation(line: 4832, column: 14, scope: !6907)
!6916 = !DILocation(line: 4832, column: 9, scope: !6907)
!6917 = !DILocation(line: 4832, column: 5, scope: !6907)
!6918 = !DILocation(line: 4834, column: 28, scope: !6864)
!6919 = !DILocation(line: 4834, column: 31, scope: !6864)
!6920 = !DILocation(line: 4834, column: 37, scope: !6864)
!6921 = !DILocation(line: 4834, column: 63, scope: !6864)
!6922 = !DILocation(line: 4834, column: 66, scope: !6864)
!6923 = !DILocation(line: 4834, column: 10, scope: !6864)
!6924 = !DILocation(line: 4834, column: 7, scope: !6864)
!6925 = !DILocation(line: 4836, column: 7, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 4836, column: 7)
!6927 = !DILocation(line: 4836, column: 23, scope: !6926)
!6928 = !DILocation(line: 4836, column: 7, scope: !6864)
!6929 = !DILocalVariable(name: "c", scope: !6930, file: !3, line: 4838, type: !144)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 4837, column: 5)
!6931 = !DILocation(line: 4838, column: 12, scope: !6930)
!6932 = !DILocation(line: 4838, column: 36, scope: !6930)
!6933 = !DILocation(line: 4838, column: 39, scope: !6930)
!6934 = !DILocation(line: 4838, column: 48, scope: !6930)
!6935 = !DILocation(line: 4838, column: 51, scope: !6930)
!6936 = !DILocation(line: 4838, column: 56, scope: !6930)
!6937 = !DILocation(line: 4838, column: 65, scope: !6930)
!6938 = !DILocation(line: 4838, column: 68, scope: !6930)
!6939 = !DILocation(line: 4838, column: 16, scope: !6930)
!6940 = !DILocation(line: 4839, column: 15, scope: !6930)
!6941 = !DILocation(line: 4839, column: 17, scope: !6930)
!6942 = !DILocation(line: 4839, column: 14, scope: !6930)
!6943 = !DILocation(line: 4839, column: 11, scope: !6930)
!6944 = !DILocation(line: 4840, column: 5, scope: !6930)
!6945 = !DILocation(line: 4842, column: 10, scope: !6864)
!6946 = !DILocation(line: 4842, column: 3, scope: !6864)
!6947 = distinct !DISubprogram(name: "indent", scope: !3, file: !3, line: 4964, type: !6948, scopeLine: 4965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{null, !149, !149}
!6950 = !DILocalVariable(name: "from", arg: 1, scope: !6947, file: !3, line: 4964, type: !149)
!6951 = !DILocation(line: 4964, column: 16, scope: !6947)
!6952 = !DILocalVariable(name: "to", arg: 2, scope: !6947, file: !3, line: 4964, type: !149)
!6953 = !DILocation(line: 4964, column: 29, scope: !6947)
!6954 = !DILocation(line: 4966, column: 3, scope: !6947)
!6955 = !DILocation(line: 4966, column: 10, scope: !6947)
!6956 = !DILocation(line: 4966, column: 17, scope: !6947)
!6957 = !DILocation(line: 4966, column: 15, scope: !6947)
!6958 = !DILocation(line: 4968, column: 11, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 4968, column: 11)
!6960 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 4967, column: 5)
!6961 = !DILocation(line: 4968, column: 19, scope: !6959)
!6962 = !DILocation(line: 4968, column: 24, scope: !6959)
!6963 = !DILocation(line: 4968, column: 27, scope: !6959)
!6964 = !DILocation(line: 4968, column: 32, scope: !6959)
!6965 = !DILocation(line: 4968, column: 30, scope: !6959)
!6966 = !DILocation(line: 4968, column: 43, scope: !6959)
!6967 = !DILocation(line: 4968, column: 48, scope: !6959)
!6968 = !DILocation(line: 4968, column: 55, scope: !6959)
!6969 = !DILocation(line: 4968, column: 53, scope: !6959)
!6970 = !DILocation(line: 4968, column: 40, scope: !6959)
!6971 = !DILocation(line: 4968, column: 11, scope: !6960)
!6972 = !DILocation(line: 4970, column: 11, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4969, column: 9)
!6974 = !DILocation(line: 4971, column: 19, scope: !6973)
!6975 = !DILocation(line: 4971, column: 29, scope: !6973)
!6976 = !DILocation(line: 4971, column: 36, scope: !6973)
!6977 = !DILocation(line: 4971, column: 34, scope: !6973)
!6978 = !DILocation(line: 4971, column: 27, scope: !6973)
!6979 = !DILocation(line: 4971, column: 16, scope: !6973)
!6980 = !DILocation(line: 4972, column: 9, scope: !6973)
!6981 = !DILocation(line: 4975, column: 11, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4974, column: 9)
!6983 = !DILocation(line: 4976, column: 15, scope: !6982)
!6984 = distinct !{!6984, !6954, !6985}
!6985 = !DILocation(line: 4978, column: 5, scope: !6947)
!6986 = !DILocation(line: 4979, column: 1, scope: !6947)
!6987 = distinct !DISubprogram(name: "quote_name_width", scope: !3, file: !3, line: 4432, type: !6988, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!149, !146, !4708, !27}
!6990 = !DILocalVariable(name: "name", arg: 1, scope: !6987, file: !3, line: 4432, type: !146)
!6991 = !DILocation(line: 4432, column: 31, scope: !6987)
!6992 = !DILocalVariable(name: "options", arg: 2, scope: !6987, file: !3, line: 4432, type: !4708)
!6993 = !DILocation(line: 4432, column: 67, scope: !6987)
!6994 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !6987, file: !3, line: 4433, type: !27)
!6995 = !DILocation(line: 4433, column: 23, scope: !6987)
!6996 = !DILocalVariable(name: "smallbuf", scope: !6987, file: !3, line: 4435, type: !737)
!6997 = !DILocation(line: 4435, column: 8, scope: !6987)
!6998 = !DILocalVariable(name: "buf", scope: !6987, file: !3, line: 4436, type: !143)
!6999 = !DILocation(line: 4436, column: 9, scope: !6987)
!7000 = !DILocation(line: 4436, column: 15, scope: !6987)
!7001 = !DILocalVariable(name: "width", scope: !6987, file: !3, line: 4437, type: !149)
!7002 = !DILocation(line: 4437, column: 10, scope: !6987)
!7003 = !DILocalVariable(name: "pad", scope: !6987, file: !3, line: 4438, type: !141)
!7004 = !DILocation(line: 4438, column: 8, scope: !6987)
!7005 = !DILocation(line: 4440, column: 51, scope: !6987)
!7006 = !DILocation(line: 4440, column: 57, scope: !6987)
!7007 = !DILocation(line: 4441, column: 19, scope: !6987)
!7008 = !DILocation(line: 4440, column: 3, scope: !6987)
!7009 = !DILocation(line: 4443, column: 7, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 4443, column: 7)
!7011 = !DILocation(line: 4443, column: 14, scope: !7010)
!7012 = !DILocation(line: 4443, column: 11, scope: !7010)
!7013 = !DILocation(line: 4443, column: 23, scope: !7010)
!7014 = !DILocation(line: 4443, column: 26, scope: !7010)
!7015 = !DILocation(line: 4443, column: 33, scope: !7010)
!7016 = !DILocation(line: 4443, column: 30, scope: !7010)
!7017 = !DILocation(line: 4443, column: 7, scope: !6987)
!7018 = !DILocation(line: 4444, column: 11, scope: !7010)
!7019 = !DILocation(line: 4444, column: 5, scope: !7010)
!7020 = !DILocation(line: 4446, column: 12, scope: !6987)
!7021 = !DILocation(line: 4446, column: 9, scope: !6987)
!7022 = !DILocation(line: 4448, column: 10, scope: !6987)
!7023 = !DILocation(line: 4448, column: 3, scope: !6987)
!7024 = !DILocalVariable(name: "i", scope: !1061, file: !3, line: 5011, type: !149)
!7025 = !DILocation(line: 5011, column: 10, scope: !1061)
!7026 = !DILocalVariable(name: "max_cols", scope: !1061, file: !3, line: 5012, type: !149)
!7027 = !DILocation(line: 5012, column: 10, scope: !1061)
!7028 = !DILocation(line: 5012, column: 21, scope: !1061)
!7029 = !DILocation(line: 5017, column: 7, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 5017, column: 7)
!7031 = !DILocation(line: 5017, column: 27, scope: !7030)
!7032 = !DILocation(line: 5017, column: 25, scope: !7030)
!7033 = !DILocation(line: 5017, column: 7, scope: !1061)
!7034 = !DILocalVariable(name: "new_column_info_alloc", scope: !7035, file: !3, line: 5019, type: !149)
!7035 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 5018, column: 5)
!7036 = !DILocation(line: 5019, column: 14, scope: !7035)
!7037 = !DILocalVariable(name: "p", scope: !7035, file: !3, line: 5020, type: !148)
!7038 = !DILocation(line: 5020, column: 15, scope: !7035)
!7039 = !DILocation(line: 5022, column: 11, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 5022, column: 11)
!7041 = !DILocation(line: 5022, column: 22, scope: !7040)
!7042 = !DILocation(line: 5022, column: 30, scope: !7040)
!7043 = !DILocation(line: 5022, column: 20, scope: !7040)
!7044 = !DILocation(line: 5022, column: 11, scope: !7035)
!7045 = !DILocation(line: 5029, column: 36, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 5023, column: 9)
!7047 = !DILocation(line: 5029, column: 49, scope: !7046)
!7048 = !DILocation(line: 5029, column: 25, scope: !7046)
!7049 = !DILocation(line: 5029, column: 23, scope: !7046)
!7050 = !DILocation(line: 5031, column: 39, scope: !7046)
!7051 = !DILocation(line: 5031, column: 37, scope: !7046)
!7052 = !DILocation(line: 5031, column: 33, scope: !7046)
!7053 = !DILocation(line: 5032, column: 9, scope: !7046)
!7054 = !DILocation(line: 5035, column: 36, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 5034, column: 9)
!7056 = !DILocation(line: 5035, column: 49, scope: !7055)
!7057 = !DILocation(line: 5035, column: 25, scope: !7055)
!7058 = !DILocation(line: 5035, column: 23, scope: !7055)
!7059 = !DILocation(line: 5036, column: 35, scope: !7055)
!7060 = !DILocation(line: 5036, column: 33, scope: !7055)
!7061 = !DILocalVariable(name: "column_info_growth", scope: !7062, file: !3, line: 5044, type: !149)
!7062 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 5043, column: 7)
!7063 = !DILocation(line: 5044, column: 16, scope: !7062)
!7064 = !DILocation(line: 5044, column: 37, scope: !7062)
!7065 = !DILocation(line: 5044, column: 61, scope: !7062)
!7066 = !DILocation(line: 5044, column: 59, scope: !7062)
!7067 = !DILocalVariable(name: "s", scope: !7062, file: !3, line: 5045, type: !149)
!7068 = !DILocation(line: 5045, column: 16, scope: !7062)
!7069 = !DILocation(line: 5045, column: 20, scope: !7062)
!7070 = !DILocation(line: 5045, column: 38, scope: !7062)
!7071 = !DILocation(line: 5045, column: 44, scope: !7062)
!7072 = !DILocation(line: 5045, column: 42, scope: !7062)
!7073 = !DILocalVariable(name: "t", scope: !7062, file: !3, line: 5046, type: !149)
!7074 = !DILocation(line: 5046, column: 16, scope: !7062)
!7075 = !DILocation(line: 5046, column: 20, scope: !7062)
!7076 = !DILocation(line: 5046, column: 24, scope: !7062)
!7077 = !DILocation(line: 5046, column: 22, scope: !7062)
!7078 = !DILocation(line: 5047, column: 13, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 5047, column: 13)
!7080 = !DILocation(line: 5047, column: 17, scope: !7079)
!7081 = !DILocation(line: 5047, column: 15, scope: !7079)
!7082 = !DILocation(line: 5047, column: 39, scope: !7079)
!7083 = !DILocation(line: 5047, column: 42, scope: !7079)
!7084 = !DILocation(line: 5047, column: 46, scope: !7079)
!7085 = !DILocation(line: 5047, column: 44, scope: !7079)
!7086 = !DILocation(line: 5047, column: 68, scope: !7079)
!7087 = !DILocation(line: 5047, column: 65, scope: !7079)
!7088 = !DILocation(line: 5047, column: 13, scope: !7062)
!7089 = !DILocation(line: 5048, column: 11, scope: !7079)
!7090 = !DILocation(line: 5049, column: 23, scope: !7062)
!7091 = !DILocation(line: 5049, column: 25, scope: !7062)
!7092 = !DILocation(line: 5049, column: 13, scope: !7062)
!7093 = !DILocation(line: 5049, column: 11, scope: !7062)
!7094 = !DILocation(line: 5053, column: 16, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 5053, column: 7)
!7096 = !DILocation(line: 5053, column: 14, scope: !7095)
!7097 = !DILocation(line: 5053, column: 12, scope: !7095)
!7098 = !DILocation(line: 5053, column: 35, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 5053, column: 7)
!7100 = !DILocation(line: 5053, column: 39, scope: !7099)
!7101 = !DILocation(line: 5053, column: 37, scope: !7099)
!7102 = !DILocation(line: 5053, column: 7, scope: !7095)
!7103 = !DILocation(line: 5055, column: 36, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 5054, column: 9)
!7105 = !DILocation(line: 5055, column: 11, scope: !7104)
!7106 = !DILocation(line: 5055, column: 23, scope: !7104)
!7107 = !DILocation(line: 5055, column: 26, scope: !7104)
!7108 = !DILocation(line: 5055, column: 34, scope: !7104)
!7109 = !DILocation(line: 5056, column: 16, scope: !7104)
!7110 = !DILocation(line: 5056, column: 18, scope: !7104)
!7111 = !DILocation(line: 5056, column: 13, scope: !7104)
!7112 = !DILocation(line: 5057, column: 9, scope: !7104)
!7113 = !DILocation(line: 5053, column: 63, scope: !7099)
!7114 = !DILocation(line: 5053, column: 7, scope: !7099)
!7115 = distinct !{!7115, !7102, !7116}
!7116 = !DILocation(line: 5057, column: 9, scope: !7095)
!7117 = !DILocation(line: 5059, column: 27, scope: !7035)
!7118 = !DILocation(line: 5059, column: 25, scope: !7035)
!7119 = !DILocation(line: 5060, column: 5, scope: !7035)
!7120 = !DILocation(line: 5062, column: 10, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 5062, column: 3)
!7122 = !DILocation(line: 5062, column: 8, scope: !7121)
!7123 = !DILocation(line: 5062, column: 15, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 5062, column: 3)
!7125 = !DILocation(line: 5062, column: 19, scope: !7124)
!7126 = !DILocation(line: 5062, column: 17, scope: !7124)
!7127 = !DILocation(line: 5062, column: 3, scope: !7121)
!7128 = !DILocalVariable(name: "j", scope: !7129, file: !3, line: 5064, type: !149)
!7129 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 5063, column: 5)
!7130 = !DILocation(line: 5064, column: 14, scope: !7129)
!7131 = !DILocation(line: 5066, column: 7, scope: !7129)
!7132 = !DILocation(line: 5066, column: 19, scope: !7129)
!7133 = !DILocation(line: 5066, column: 22, scope: !7129)
!7134 = !DILocation(line: 5066, column: 32, scope: !7129)
!7135 = !DILocation(line: 5067, column: 34, scope: !7129)
!7136 = !DILocation(line: 5067, column: 36, scope: !7129)
!7137 = !DILocation(line: 5067, column: 41, scope: !7129)
!7138 = !DILocation(line: 5067, column: 7, scope: !7129)
!7139 = !DILocation(line: 5067, column: 19, scope: !7129)
!7140 = !DILocation(line: 5067, column: 22, scope: !7129)
!7141 = !DILocation(line: 5067, column: 31, scope: !7129)
!7142 = !DILocation(line: 5068, column: 14, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 5068, column: 7)
!7144 = !DILocation(line: 5068, column: 12, scope: !7143)
!7145 = !DILocation(line: 5068, column: 19, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 5068, column: 7)
!7147 = !DILocation(line: 5068, column: 24, scope: !7146)
!7148 = !DILocation(line: 5068, column: 21, scope: !7146)
!7149 = !DILocation(line: 5068, column: 7, scope: !7143)
!7150 = !DILocation(line: 5069, column: 9, scope: !7146)
!7151 = !DILocation(line: 5069, column: 21, scope: !7146)
!7152 = !DILocation(line: 5069, column: 24, scope: !7146)
!7153 = !DILocation(line: 5069, column: 32, scope: !7146)
!7154 = !DILocation(line: 5069, column: 35, scope: !7146)
!7155 = !DILocation(line: 5068, column: 27, scope: !7146)
!7156 = !DILocation(line: 5068, column: 7, scope: !7146)
!7157 = distinct !{!7157, !7149, !7158}
!7158 = !DILocation(line: 5069, column: 37, scope: !7143)
!7159 = !DILocation(line: 5070, column: 5, scope: !7129)
!7160 = !DILocation(line: 5062, column: 29, scope: !7124)
!7161 = !DILocation(line: 5062, column: 3, scope: !7124)
!7162 = distinct !{!7162, !7127, !7163}
!7163 = !DILocation(line: 5070, column: 5, scope: !7121)
!7164 = !DILocation(line: 5071, column: 1, scope: !1061)
!7165 = distinct !DISubprogram(name: "is_directory", scope: !3, file: !3, line: 3435, type: !7166, scopeLine: 3436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{!141, !182}
!7168 = !DILocalVariable(name: "f", arg: 1, scope: !7165, file: !3, line: 3435, type: !182)
!7169 = !DILocation(line: 3435, column: 38, scope: !7165)
!7170 = !DILocation(line: 3437, column: 10, scope: !7165)
!7171 = !DILocation(line: 3437, column: 13, scope: !7165)
!7172 = !DILocation(line: 3437, column: 22, scope: !7165)
!7173 = !DILocation(line: 3437, column: 35, scope: !7165)
!7174 = !DILocation(line: 3437, column: 38, scope: !7165)
!7175 = !DILocation(line: 3437, column: 41, scope: !7165)
!7176 = !DILocation(line: 3437, column: 50, scope: !7165)
!7177 = !DILocation(line: 3437, column: 3, scope: !7165)
!7178 = distinct !DISubprogram(name: "basename_is_dot_or_dotdot", scope: !3, file: !3, line: 3497, type: !4850, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7179 = !DILocalVariable(name: "name", arg: 1, scope: !7178, file: !3, line: 3497, type: !146)
!7180 = !DILocation(line: 3497, column: 40, scope: !7178)
!7181 = !DILocalVariable(name: "base", scope: !7178, file: !3, line: 3499, type: !146)
!7182 = !DILocation(line: 3499, column: 15, scope: !7178)
!7183 = !DILocation(line: 3499, column: 38, scope: !7178)
!7184 = !DILocation(line: 3499, column: 22, scope: !7178)
!7185 = !DILocation(line: 3500, column: 25, scope: !7178)
!7186 = !DILocation(line: 3500, column: 10, scope: !7178)
!7187 = !DILocation(line: 3500, column: 3, scope: !7178)
!7188 = distinct !DISubprogram(name: "free_ent", scope: !3, file: !3, line: 2974, type: !7189, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{null, !258}
!7191 = !DILocalVariable(name: "f", arg: 1, scope: !7188, file: !3, line: 2974, type: !258)
!7192 = !DILocation(line: 2974, column: 28, scope: !7188)
!7193 = !DILocation(line: 2976, column: 9, scope: !7188)
!7194 = !DILocation(line: 2976, column: 12, scope: !7188)
!7195 = !DILocation(line: 2976, column: 3, scope: !7188)
!7196 = !DILocation(line: 2977, column: 9, scope: !7188)
!7197 = !DILocation(line: 2977, column: 12, scope: !7188)
!7198 = !DILocation(line: 2977, column: 3, scope: !7188)
!7199 = !DILocation(line: 2978, column: 9, scope: !7188)
!7200 = !DILocation(line: 2978, column: 12, scope: !7188)
!7201 = !DILocation(line: 2978, column: 3, scope: !7188)
!7202 = !DILocation(line: 2979, column: 7, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 2979, column: 7)
!7204 = !DILocation(line: 2979, column: 10, scope: !7203)
!7205 = !DILocation(line: 2979, column: 19, scope: !7203)
!7206 = !DILocation(line: 2979, column: 7, scope: !7188)
!7207 = !DILocation(line: 2981, column: 11, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 2981, column: 11)
!7209 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2980, column: 5)
!7210 = !DILocation(line: 2981, column: 11, scope: !7209)
!7211 = !DILocation(line: 2982, column: 15, scope: !7208)
!7212 = !DILocation(line: 2982, column: 18, scope: !7208)
!7213 = !DILocation(line: 2982, column: 9, scope: !7208)
!7214 = !DILocation(line: 2984, column: 18, scope: !7208)
!7215 = !DILocation(line: 2984, column: 21, scope: !7208)
!7216 = !DILocation(line: 2984, column: 9, scope: !7208)
!7217 = !DILocation(line: 2985, column: 5, scope: !7209)
!7218 = !DILocation(line: 2986, column: 1, scope: !7188)
!7219 = distinct !DISubprogram(name: "is_smack_enabled", scope: !7220, file: !7220, line: 39, type: !7221, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7220 = !DIFile(filename: "./lib/smack.h", directory: "/home/mohamad/clone/coreutils")
!7221 = !DISubroutineType(types: !7222)
!7222 = !{!141}
!7223 = !DILocation(line: 44, column: 3, scope: !7219)
!7224 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !821, file: !821, line: 265, type: !4850, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7225 = !DILocalVariable(name: "file_name", arg: 1, scope: !7224, file: !821, line: 265, type: !146)
!7226 = !DILocation(line: 265, column: 28, scope: !7224)
!7227 = !DILocation(line: 267, column: 7, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7224, file: !821, line: 267, column: 7)
!7229 = !DILocation(line: 267, column: 20, scope: !7228)
!7230 = !DILocation(line: 267, column: 7, scope: !7224)
!7231 = !DILocalVariable(name: "sep", scope: !7232, file: !821, line: 269, type: !144)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !821, line: 268, column: 5)
!7233 = !DILocation(line: 269, column: 12, scope: !7232)
!7234 = !DILocation(line: 269, column: 18, scope: !7232)
!7235 = !DILocation(line: 269, column: 29, scope: !7232)
!7236 = !DILocation(line: 269, column: 42, scope: !7232)
!7237 = !DILocation(line: 269, column: 50, scope: !7232)
!7238 = !DILocation(line: 270, column: 17, scope: !7232)
!7239 = !DILocation(line: 270, column: 21, scope: !7232)
!7240 = !DILocation(line: 270, column: 24, scope: !7232)
!7241 = !DILocation(line: 270, column: 7, scope: !7232)
!7242 = !DILocation(line: 273, column: 5, scope: !7228)
!7243 = !DILocation(line: 274, column: 1, scope: !7224)
!7244 = distinct !DISubprogram(name: "initialize_ordering_vector", scope: !3, file: !3, line: 3783, type: !526, scopeLine: 3784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7245 = !DILocalVariable(name: "i", scope: !7246, file: !3, line: 3785, type: !149)
!7246 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 3785, column: 3)
!7247 = !DILocation(line: 3785, column: 15, scope: !7246)
!7248 = !DILocation(line: 3785, column: 8, scope: !7246)
!7249 = !DILocation(line: 3785, column: 22, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 3785, column: 3)
!7251 = !DILocation(line: 3785, column: 26, scope: !7250)
!7252 = !DILocation(line: 3785, column: 24, scope: !7250)
!7253 = !DILocation(line: 3785, column: 3, scope: !7246)
!7254 = !DILocation(line: 3786, column: 23, scope: !7250)
!7255 = !DILocation(line: 3786, column: 32, scope: !7250)
!7256 = !DILocation(line: 3786, column: 22, scope: !7250)
!7257 = !DILocation(line: 3786, column: 5, scope: !7250)
!7258 = !DILocation(line: 3786, column: 17, scope: !7250)
!7259 = !DILocation(line: 3786, column: 20, scope: !7250)
!7260 = !DILocation(line: 3785, column: 39, scope: !7250)
!7261 = !DILocation(line: 3785, column: 3, scope: !7250)
!7262 = distinct !{!7262, !7253, !7263}
!7263 = !DILocation(line: 3786, column: 33, scope: !7246)
!7264 = !DILocation(line: 3787, column: 1, scope: !7244)
!7265 = distinct !DISubprogram(name: "xstrcoll_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7266 = !DILocalVariable(name: "a", arg: 1, scope: !7265, file: !3, line: 3691, type: !780)
!7267 = !DILocation(line: 3691, column: 1, scope: !7265)
!7268 = !DILocalVariable(name: "b", arg: 2, scope: !7265, file: !3, line: 3691, type: !780)
!7269 = distinct !DISubprogram(name: "xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7270 = !DILocalVariable(name: "a", arg: 1, scope: !7269, file: !3, line: 3691, type: !780)
!7271 = !DILocation(line: 3691, column: 1, scope: !7269)
!7272 = !DILocalVariable(name: "b", arg: 2, scope: !7269, file: !3, line: 3691, type: !780)
!7273 = !DILocalVariable(name: "a_is_dir", scope: !7274, file: !3, line: 3691, type: !141)
!7274 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 3691, column: 1)
!7275 = !DILocation(line: 3691, column: 1, scope: !7274)
!7276 = !DILocalVariable(name: "b_is_dir", scope: !7274, file: !3, line: 3691, type: !141)
!7277 = !DILocation(line: 3691, column: 1, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 3691, column: 1)
!7279 = !DILocation(line: 3691, column: 1, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 3691, column: 1)
!7281 = distinct !DISubprogram(name: "rev_xstrcoll_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7282 = !DILocalVariable(name: "a", arg: 1, scope: !7281, file: !3, line: 3691, type: !780)
!7283 = !DILocation(line: 3691, column: 1, scope: !7281)
!7284 = !DILocalVariable(name: "b", arg: 2, scope: !7281, file: !3, line: 3691, type: !780)
!7285 = distinct !DISubprogram(name: "rev_xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7286 = !DILocalVariable(name: "a", arg: 1, scope: !7285, file: !3, line: 3691, type: !780)
!7287 = !DILocation(line: 3691, column: 1, scope: !7285)
!7288 = !DILocalVariable(name: "b", arg: 2, scope: !7285, file: !3, line: 3691, type: !780)
!7289 = !DILocalVariable(name: "a_is_dir", scope: !7290, file: !3, line: 3691, type: !141)
!7290 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 3691, column: 1)
!7291 = !DILocation(line: 3691, column: 1, scope: !7290)
!7292 = !DILocalVariable(name: "b_is_dir", scope: !7290, file: !3, line: 3691, type: !141)
!7293 = !DILocation(line: 3691, column: 1, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3691, column: 1)
!7295 = !DILocation(line: 3691, column: 1, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3691, column: 1)
!7297 = distinct !DISubprogram(name: "strcmp_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7298 = !DILocalVariable(name: "a", arg: 1, scope: !7297, file: !3, line: 3691, type: !780)
!7299 = !DILocation(line: 3691, column: 1, scope: !7297)
!7300 = !DILocalVariable(name: "b", arg: 2, scope: !7297, file: !3, line: 3691, type: !780)
!7301 = distinct !DISubprogram(name: "strcmp_df_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7302 = !DILocalVariable(name: "a", arg: 1, scope: !7301, file: !3, line: 3691, type: !780)
!7303 = !DILocation(line: 3691, column: 1, scope: !7301)
!7304 = !DILocalVariable(name: "b", arg: 2, scope: !7301, file: !3, line: 3691, type: !780)
!7305 = !DILocalVariable(name: "a_is_dir", scope: !7306, file: !3, line: 3691, type: !141)
!7306 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 3691, column: 1)
!7307 = !DILocation(line: 3691, column: 1, scope: !7306)
!7308 = !DILocalVariable(name: "b_is_dir", scope: !7306, file: !3, line: 3691, type: !141)
!7309 = !DILocation(line: 3691, column: 1, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3691, column: 1)
!7311 = !DILocation(line: 3691, column: 1, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3691, column: 1)
!7313 = distinct !DISubprogram(name: "rev_strcmp_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7314 = !DILocalVariable(name: "a", arg: 1, scope: !7313, file: !3, line: 3691, type: !780)
!7315 = !DILocation(line: 3691, column: 1, scope: !7313)
!7316 = !DILocalVariable(name: "b", arg: 2, scope: !7313, file: !3, line: 3691, type: !780)
!7317 = distinct !DISubprogram(name: "rev_strcmp_df_name", scope: !3, file: !3, line: 3691, type: !778, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7318 = !DILocalVariable(name: "a", arg: 1, scope: !7317, file: !3, line: 3691, type: !780)
!7319 = !DILocation(line: 3691, column: 1, scope: !7317)
!7320 = !DILocalVariable(name: "b", arg: 2, scope: !7317, file: !3, line: 3691, type: !780)
!7321 = !DILocalVariable(name: "a_is_dir", scope: !7322, file: !3, line: 3691, type: !141)
!7322 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 3691, column: 1)
!7323 = !DILocation(line: 3691, column: 1, scope: !7322)
!7324 = !DILocalVariable(name: "b_is_dir", scope: !7322, file: !3, line: 3691, type: !141)
!7325 = !DILocation(line: 3691, column: 1, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3691, column: 1)
!7327 = !DILocation(line: 3691, column: 1, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3691, column: 1)
!7329 = distinct !DISubprogram(name: "xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7330 = !DILocalVariable(name: "a", arg: 1, scope: !7329, file: !3, line: 3692, type: !780)
!7331 = !DILocation(line: 3692, column: 1, scope: !7329)
!7332 = !DILocalVariable(name: "b", arg: 2, scope: !7329, file: !3, line: 3692, type: !780)
!7333 = distinct !DISubprogram(name: "xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7334 = !DILocalVariable(name: "a", arg: 1, scope: !7333, file: !3, line: 3692, type: !780)
!7335 = !DILocation(line: 3692, column: 1, scope: !7333)
!7336 = !DILocalVariable(name: "b", arg: 2, scope: !7333, file: !3, line: 3692, type: !780)
!7337 = !DILocalVariable(name: "a_is_dir", scope: !7338, file: !3, line: 3692, type: !141)
!7338 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 3692, column: 1)
!7339 = !DILocation(line: 3692, column: 1, scope: !7338)
!7340 = !DILocalVariable(name: "b_is_dir", scope: !7338, file: !3, line: 3692, type: !141)
!7341 = !DILocation(line: 3692, column: 1, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 3692, column: 1)
!7343 = !DILocation(line: 3692, column: 1, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 3692, column: 1)
!7345 = distinct !DISubprogram(name: "rev_xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7346 = !DILocalVariable(name: "a", arg: 1, scope: !7345, file: !3, line: 3692, type: !780)
!7347 = !DILocation(line: 3692, column: 1, scope: !7345)
!7348 = !DILocalVariable(name: "b", arg: 2, scope: !7345, file: !3, line: 3692, type: !780)
!7349 = distinct !DISubprogram(name: "rev_xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7350 = !DILocalVariable(name: "a", arg: 1, scope: !7349, file: !3, line: 3692, type: !780)
!7351 = !DILocation(line: 3692, column: 1, scope: !7349)
!7352 = !DILocalVariable(name: "b", arg: 2, scope: !7349, file: !3, line: 3692, type: !780)
!7353 = !DILocalVariable(name: "a_is_dir", scope: !7354, file: !3, line: 3692, type: !141)
!7354 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 3692, column: 1)
!7355 = !DILocation(line: 3692, column: 1, scope: !7354)
!7356 = !DILocalVariable(name: "b_is_dir", scope: !7354, file: !3, line: 3692, type: !141)
!7357 = !DILocation(line: 3692, column: 1, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 3692, column: 1)
!7359 = !DILocation(line: 3692, column: 1, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 3692, column: 1)
!7361 = distinct !DISubprogram(name: "strcmp_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7362 = !DILocalVariable(name: "a", arg: 1, scope: !7361, file: !3, line: 3692, type: !780)
!7363 = !DILocation(line: 3692, column: 1, scope: !7361)
!7364 = !DILocalVariable(name: "b", arg: 2, scope: !7361, file: !3, line: 3692, type: !780)
!7365 = distinct !DISubprogram(name: "strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7366 = !DILocalVariable(name: "a", arg: 1, scope: !7365, file: !3, line: 3692, type: !780)
!7367 = !DILocation(line: 3692, column: 1, scope: !7365)
!7368 = !DILocalVariable(name: "b", arg: 2, scope: !7365, file: !3, line: 3692, type: !780)
!7369 = !DILocalVariable(name: "a_is_dir", scope: !7370, file: !3, line: 3692, type: !141)
!7370 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 3692, column: 1)
!7371 = !DILocation(line: 3692, column: 1, scope: !7370)
!7372 = !DILocalVariable(name: "b_is_dir", scope: !7370, file: !3, line: 3692, type: !141)
!7373 = !DILocation(line: 3692, column: 1, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 3692, column: 1)
!7375 = !DILocation(line: 3692, column: 1, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 3692, column: 1)
!7377 = distinct !DISubprogram(name: "rev_strcmp_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7378 = !DILocalVariable(name: "a", arg: 1, scope: !7377, file: !3, line: 3692, type: !780)
!7379 = !DILocation(line: 3692, column: 1, scope: !7377)
!7380 = !DILocalVariable(name: "b", arg: 2, scope: !7377, file: !3, line: 3692, type: !780)
!7381 = distinct !DISubprogram(name: "rev_strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !778, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7382 = !DILocalVariable(name: "a", arg: 1, scope: !7381, file: !3, line: 3692, type: !780)
!7383 = !DILocation(line: 3692, column: 1, scope: !7381)
!7384 = !DILocalVariable(name: "b", arg: 2, scope: !7381, file: !3, line: 3692, type: !780)
!7385 = !DILocalVariable(name: "a_is_dir", scope: !7386, file: !3, line: 3692, type: !141)
!7386 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 3692, column: 1)
!7387 = !DILocation(line: 3692, column: 1, scope: !7386)
!7388 = !DILocalVariable(name: "b_is_dir", scope: !7386, file: !3, line: 3692, type: !141)
!7389 = !DILocation(line: 3692, column: 1, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 3692, column: 1)
!7391 = !DILocation(line: 3692, column: 1, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 3692, column: 1)
!7393 = distinct !DISubprogram(name: "xstrcoll_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7394 = !DILocalVariable(name: "a", arg: 1, scope: !7393, file: !3, line: 3690, type: !780)
!7395 = !DILocation(line: 3690, column: 1, scope: !7393)
!7396 = !DILocalVariable(name: "b", arg: 2, scope: !7393, file: !3, line: 3690, type: !780)
!7397 = distinct !DISubprogram(name: "xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7398 = !DILocalVariable(name: "a", arg: 1, scope: !7397, file: !3, line: 3690, type: !780)
!7399 = !DILocation(line: 3690, column: 1, scope: !7397)
!7400 = !DILocalVariable(name: "b", arg: 2, scope: !7397, file: !3, line: 3690, type: !780)
!7401 = !DILocalVariable(name: "a_is_dir", scope: !7402, file: !3, line: 3690, type: !141)
!7402 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 3690, column: 1)
!7403 = !DILocation(line: 3690, column: 1, scope: !7402)
!7404 = !DILocalVariable(name: "b_is_dir", scope: !7402, file: !3, line: 3690, type: !141)
!7405 = !DILocation(line: 3690, column: 1, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 3690, column: 1)
!7407 = !DILocation(line: 3690, column: 1, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 3690, column: 1)
!7409 = distinct !DISubprogram(name: "rev_xstrcoll_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7410 = !DILocalVariable(name: "a", arg: 1, scope: !7409, file: !3, line: 3690, type: !780)
!7411 = !DILocation(line: 3690, column: 1, scope: !7409)
!7412 = !DILocalVariable(name: "b", arg: 2, scope: !7409, file: !3, line: 3690, type: !780)
!7413 = distinct !DISubprogram(name: "rev_xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7414 = !DILocalVariable(name: "a", arg: 1, scope: !7413, file: !3, line: 3690, type: !780)
!7415 = !DILocation(line: 3690, column: 1, scope: !7413)
!7416 = !DILocalVariable(name: "b", arg: 2, scope: !7413, file: !3, line: 3690, type: !780)
!7417 = !DILocalVariable(name: "a_is_dir", scope: !7418, file: !3, line: 3690, type: !141)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 3690, column: 1)
!7419 = !DILocation(line: 3690, column: 1, scope: !7418)
!7420 = !DILocalVariable(name: "b_is_dir", scope: !7418, file: !3, line: 3690, type: !141)
!7421 = !DILocation(line: 3690, column: 1, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 3690, column: 1)
!7423 = !DILocation(line: 3690, column: 1, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 3690, column: 1)
!7425 = distinct !DISubprogram(name: "strcmp_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7426 = !DILocalVariable(name: "a", arg: 1, scope: !7425, file: !3, line: 3690, type: !780)
!7427 = !DILocation(line: 3690, column: 1, scope: !7425)
!7428 = !DILocalVariable(name: "b", arg: 2, scope: !7425, file: !3, line: 3690, type: !780)
!7429 = distinct !DISubprogram(name: "strcmp_df_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7430 = !DILocalVariable(name: "a", arg: 1, scope: !7429, file: !3, line: 3690, type: !780)
!7431 = !DILocation(line: 3690, column: 1, scope: !7429)
!7432 = !DILocalVariable(name: "b", arg: 2, scope: !7429, file: !3, line: 3690, type: !780)
!7433 = !DILocalVariable(name: "a_is_dir", scope: !7434, file: !3, line: 3690, type: !141)
!7434 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 3690, column: 1)
!7435 = !DILocation(line: 3690, column: 1, scope: !7434)
!7436 = !DILocalVariable(name: "b_is_dir", scope: !7434, file: !3, line: 3690, type: !141)
!7437 = !DILocation(line: 3690, column: 1, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 3690, column: 1)
!7439 = !DILocation(line: 3690, column: 1, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 3690, column: 1)
!7441 = distinct !DISubprogram(name: "rev_strcmp_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7442 = !DILocalVariable(name: "a", arg: 1, scope: !7441, file: !3, line: 3690, type: !780)
!7443 = !DILocation(line: 3690, column: 1, scope: !7441)
!7444 = !DILocalVariable(name: "b", arg: 2, scope: !7441, file: !3, line: 3690, type: !780)
!7445 = distinct !DISubprogram(name: "rev_strcmp_df_size", scope: !3, file: !3, line: 3690, type: !778, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7446 = !DILocalVariable(name: "a", arg: 1, scope: !7445, file: !3, line: 3690, type: !780)
!7447 = !DILocation(line: 3690, column: 1, scope: !7445)
!7448 = !DILocalVariable(name: "b", arg: 2, scope: !7445, file: !3, line: 3690, type: !780)
!7449 = !DILocalVariable(name: "a_is_dir", scope: !7450, file: !3, line: 3690, type: !141)
!7450 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 3690, column: 1)
!7451 = !DILocation(line: 3690, column: 1, scope: !7450)
!7452 = !DILocalVariable(name: "b_is_dir", scope: !7450, file: !3, line: 3690, type: !141)
!7453 = !DILocation(line: 3690, column: 1, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 3690, column: 1)
!7455 = !DILocation(line: 3690, column: 1, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 3690, column: 1)
!7457 = distinct !DISubprogram(name: "xstrcoll_version", scope: !3, file: !3, line: 3709, type: !778, scopeLine: 3710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7458 = !DILocalVariable(name: "a", arg: 1, scope: !7457, file: !3, line: 3709, type: !780)
!7459 = !DILocation(line: 3709, column: 32, scope: !7457)
!7460 = !DILocalVariable(name: "b", arg: 2, scope: !7457, file: !3, line: 3709, type: !780)
!7461 = !DILocation(line: 3709, column: 37, scope: !7457)
!7462 = !DILocation(line: 3710, column: 23, scope: !7457)
!7463 = !DILocation(line: 3710, column: 26, scope: !7457)
!7464 = !DILocation(line: 3710, column: 10, scope: !7457)
!7465 = !DILocation(line: 3710, column: 3, scope: !7457)
!7466 = distinct !DISubprogram(name: "xstrcoll_df_version", scope: !3, file: !3, line: 3713, type: !778, scopeLine: 3714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7467 = !DILocalVariable(name: "a", arg: 1, scope: !7466, file: !3, line: 3713, type: !780)
!7468 = !DILocation(line: 3713, column: 35, scope: !7466)
!7469 = !DILocalVariable(name: "b", arg: 2, scope: !7466, file: !3, line: 3713, type: !780)
!7470 = !DILocation(line: 3713, column: 40, scope: !7466)
!7471 = !DILocation(line: 3714, column: 3, scope: !7466)
!7472 = !DILocalVariable(name: "a_is_dir", scope: !7473, file: !3, line: 3714, type: !141)
!7473 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 3714, column: 3)
!7474 = !DILocation(line: 3714, column: 3, scope: !7473)
!7475 = !DILocalVariable(name: "b_is_dir", scope: !7473, file: !3, line: 3714, type: !141)
!7476 = !DILocation(line: 3714, column: 3, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 3714, column: 3)
!7478 = !DILocation(line: 3714, column: 3, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 3714, column: 3)
!7480 = !DILocation(line: 3714, column: 46, scope: !7466)
!7481 = !DILocation(line: 3714, column: 49, scope: !7466)
!7482 = !DILocation(line: 3714, column: 33, scope: !7466)
!7483 = !DILocation(line: 3714, column: 26, scope: !7466)
!7484 = !DILocation(line: 3714, column: 53, scope: !7466)
!7485 = distinct !DISubprogram(name: "rev_xstrcoll_version", scope: !3, file: !3, line: 3711, type: !778, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7486 = !DILocalVariable(name: "a", arg: 1, scope: !7485, file: !3, line: 3711, type: !780)
!7487 = !DILocation(line: 3711, column: 36, scope: !7485)
!7488 = !DILocalVariable(name: "b", arg: 2, scope: !7485, file: !3, line: 3711, type: !780)
!7489 = !DILocation(line: 3711, column: 41, scope: !7485)
!7490 = !DILocation(line: 3712, column: 23, scope: !7485)
!7491 = !DILocation(line: 3712, column: 26, scope: !7485)
!7492 = !DILocation(line: 3712, column: 10, scope: !7485)
!7493 = !DILocation(line: 3712, column: 3, scope: !7485)
!7494 = distinct !DISubprogram(name: "rev_xstrcoll_df_version", scope: !3, file: !3, line: 3715, type: !778, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7495 = !DILocalVariable(name: "a", arg: 1, scope: !7494, file: !3, line: 3715, type: !780)
!7496 = !DILocation(line: 3715, column: 39, scope: !7494)
!7497 = !DILocalVariable(name: "b", arg: 2, scope: !7494, file: !3, line: 3715, type: !780)
!7498 = !DILocation(line: 3715, column: 44, scope: !7494)
!7499 = !DILocation(line: 3716, column: 3, scope: !7494)
!7500 = !DILocalVariable(name: "a_is_dir", scope: !7501, file: !3, line: 3716, type: !141)
!7501 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3716, column: 3)
!7502 = !DILocation(line: 3716, column: 3, scope: !7501)
!7503 = !DILocalVariable(name: "b_is_dir", scope: !7501, file: !3, line: 3716, type: !141)
!7504 = !DILocation(line: 3716, column: 3, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 3716, column: 3)
!7506 = !DILocation(line: 3716, column: 3, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 3716, column: 3)
!7508 = !DILocation(line: 3716, column: 46, scope: !7494)
!7509 = !DILocation(line: 3716, column: 49, scope: !7494)
!7510 = !DILocation(line: 3716, column: 33, scope: !7494)
!7511 = !DILocation(line: 3716, column: 26, scope: !7494)
!7512 = !DILocation(line: 3716, column: 53, scope: !7494)
!7513 = distinct !DISubprogram(name: "xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7514 = !DILocalVariable(name: "a", arg: 1, scope: !7513, file: !3, line: 3688, type: !780)
!7515 = !DILocation(line: 3688, column: 1, scope: !7513)
!7516 = !DILocalVariable(name: "b", arg: 2, scope: !7513, file: !3, line: 3688, type: !780)
!7517 = distinct !DISubprogram(name: "xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7518 = !DILocalVariable(name: "a", arg: 1, scope: !7517, file: !3, line: 3688, type: !780)
!7519 = !DILocation(line: 3688, column: 1, scope: !7517)
!7520 = !DILocalVariable(name: "b", arg: 2, scope: !7517, file: !3, line: 3688, type: !780)
!7521 = !DILocalVariable(name: "a_is_dir", scope: !7522, file: !3, line: 3688, type: !141)
!7522 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 3688, column: 1)
!7523 = !DILocation(line: 3688, column: 1, scope: !7522)
!7524 = !DILocalVariable(name: "b_is_dir", scope: !7522, file: !3, line: 3688, type: !141)
!7525 = !DILocation(line: 3688, column: 1, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 3688, column: 1)
!7527 = !DILocation(line: 3688, column: 1, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 3688, column: 1)
!7529 = distinct !DISubprogram(name: "rev_xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7530 = !DILocalVariable(name: "a", arg: 1, scope: !7529, file: !3, line: 3688, type: !780)
!7531 = !DILocation(line: 3688, column: 1, scope: !7529)
!7532 = !DILocalVariable(name: "b", arg: 2, scope: !7529, file: !3, line: 3688, type: !780)
!7533 = distinct !DISubprogram(name: "rev_xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7534 = !DILocalVariable(name: "a", arg: 1, scope: !7533, file: !3, line: 3688, type: !780)
!7535 = !DILocation(line: 3688, column: 1, scope: !7533)
!7536 = !DILocalVariable(name: "b", arg: 2, scope: !7533, file: !3, line: 3688, type: !780)
!7537 = !DILocalVariable(name: "a_is_dir", scope: !7538, file: !3, line: 3688, type: !141)
!7538 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3688, column: 1)
!7539 = !DILocation(line: 3688, column: 1, scope: !7538)
!7540 = !DILocalVariable(name: "b_is_dir", scope: !7538, file: !3, line: 3688, type: !141)
!7541 = !DILocation(line: 3688, column: 1, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3688, column: 1)
!7543 = !DILocation(line: 3688, column: 1, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 3688, column: 1)
!7545 = distinct !DISubprogram(name: "strcmp_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7546 = !DILocalVariable(name: "a", arg: 1, scope: !7545, file: !3, line: 3688, type: !780)
!7547 = !DILocation(line: 3688, column: 1, scope: !7545)
!7548 = !DILocalVariable(name: "b", arg: 2, scope: !7545, file: !3, line: 3688, type: !780)
!7549 = distinct !DISubprogram(name: "strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7550 = !DILocalVariable(name: "a", arg: 1, scope: !7549, file: !3, line: 3688, type: !780)
!7551 = !DILocation(line: 3688, column: 1, scope: !7549)
!7552 = !DILocalVariable(name: "b", arg: 2, scope: !7549, file: !3, line: 3688, type: !780)
!7553 = !DILocalVariable(name: "a_is_dir", scope: !7554, file: !3, line: 3688, type: !141)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 3688, column: 1)
!7555 = !DILocation(line: 3688, column: 1, scope: !7554)
!7556 = !DILocalVariable(name: "b_is_dir", scope: !7554, file: !3, line: 3688, type: !141)
!7557 = !DILocation(line: 3688, column: 1, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 3688, column: 1)
!7559 = !DILocation(line: 3688, column: 1, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 3688, column: 1)
!7561 = distinct !DISubprogram(name: "rev_strcmp_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7562 = !DILocalVariable(name: "a", arg: 1, scope: !7561, file: !3, line: 3688, type: !780)
!7563 = !DILocation(line: 3688, column: 1, scope: !7561)
!7564 = !DILocalVariable(name: "b", arg: 2, scope: !7561, file: !3, line: 3688, type: !780)
!7565 = distinct !DISubprogram(name: "rev_strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !778, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7566 = !DILocalVariable(name: "a", arg: 1, scope: !7565, file: !3, line: 3688, type: !780)
!7567 = !DILocation(line: 3688, column: 1, scope: !7565)
!7568 = !DILocalVariable(name: "b", arg: 2, scope: !7565, file: !3, line: 3688, type: !780)
!7569 = !DILocalVariable(name: "a_is_dir", scope: !7570, file: !3, line: 3688, type: !141)
!7570 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 3688, column: 1)
!7571 = !DILocation(line: 3688, column: 1, scope: !7570)
!7572 = !DILocalVariable(name: "b_is_dir", scope: !7570, file: !3, line: 3688, type: !141)
!7573 = !DILocation(line: 3688, column: 1, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 3688, column: 1)
!7575 = !DILocation(line: 3688, column: 1, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 3688, column: 1)
!7577 = distinct !DISubprogram(name: "xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7578 = !DILocalVariable(name: "a", arg: 1, scope: !7577, file: !3, line: 3687, type: !780)
!7579 = !DILocation(line: 3687, column: 1, scope: !7577)
!7580 = !DILocalVariable(name: "b", arg: 2, scope: !7577, file: !3, line: 3687, type: !780)
!7581 = distinct !DISubprogram(name: "xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7582 = !DILocalVariable(name: "a", arg: 1, scope: !7581, file: !3, line: 3687, type: !780)
!7583 = !DILocation(line: 3687, column: 1, scope: !7581)
!7584 = !DILocalVariable(name: "b", arg: 2, scope: !7581, file: !3, line: 3687, type: !780)
!7585 = !DILocalVariable(name: "a_is_dir", scope: !7586, file: !3, line: 3687, type: !141)
!7586 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3687, column: 1)
!7587 = !DILocation(line: 3687, column: 1, scope: !7586)
!7588 = !DILocalVariable(name: "b_is_dir", scope: !7586, file: !3, line: 3687, type: !141)
!7589 = !DILocation(line: 3687, column: 1, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 3687, column: 1)
!7591 = !DILocation(line: 3687, column: 1, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 3687, column: 1)
!7593 = distinct !DISubprogram(name: "rev_xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7594 = !DILocalVariable(name: "a", arg: 1, scope: !7593, file: !3, line: 3687, type: !780)
!7595 = !DILocation(line: 3687, column: 1, scope: !7593)
!7596 = !DILocalVariable(name: "b", arg: 2, scope: !7593, file: !3, line: 3687, type: !780)
!7597 = distinct !DISubprogram(name: "rev_xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7598 = !DILocalVariable(name: "a", arg: 1, scope: !7597, file: !3, line: 3687, type: !780)
!7599 = !DILocation(line: 3687, column: 1, scope: !7597)
!7600 = !DILocalVariable(name: "b", arg: 2, scope: !7597, file: !3, line: 3687, type: !780)
!7601 = !DILocalVariable(name: "a_is_dir", scope: !7602, file: !3, line: 3687, type: !141)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3687, column: 1)
!7603 = !DILocation(line: 3687, column: 1, scope: !7602)
!7604 = !DILocalVariable(name: "b_is_dir", scope: !7602, file: !3, line: 3687, type: !141)
!7605 = !DILocation(line: 3687, column: 1, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 3687, column: 1)
!7607 = !DILocation(line: 3687, column: 1, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 3687, column: 1)
!7609 = distinct !DISubprogram(name: "strcmp_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7610 = !DILocalVariable(name: "a", arg: 1, scope: !7609, file: !3, line: 3687, type: !780)
!7611 = !DILocation(line: 3687, column: 1, scope: !7609)
!7612 = !DILocalVariable(name: "b", arg: 2, scope: !7609, file: !3, line: 3687, type: !780)
!7613 = distinct !DISubprogram(name: "strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7614 = !DILocalVariable(name: "a", arg: 1, scope: !7613, file: !3, line: 3687, type: !780)
!7615 = !DILocation(line: 3687, column: 1, scope: !7613)
!7616 = !DILocalVariable(name: "b", arg: 2, scope: !7613, file: !3, line: 3687, type: !780)
!7617 = !DILocalVariable(name: "a_is_dir", scope: !7618, file: !3, line: 3687, type: !141)
!7618 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3687, column: 1)
!7619 = !DILocation(line: 3687, column: 1, scope: !7618)
!7620 = !DILocalVariable(name: "b_is_dir", scope: !7618, file: !3, line: 3687, type: !141)
!7621 = !DILocation(line: 3687, column: 1, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 3687, column: 1)
!7623 = !DILocation(line: 3687, column: 1, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 3687, column: 1)
!7625 = distinct !DISubprogram(name: "rev_strcmp_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7626 = !DILocalVariable(name: "a", arg: 1, scope: !7625, file: !3, line: 3687, type: !780)
!7627 = !DILocation(line: 3687, column: 1, scope: !7625)
!7628 = !DILocalVariable(name: "b", arg: 2, scope: !7625, file: !3, line: 3687, type: !780)
!7629 = distinct !DISubprogram(name: "rev_strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !778, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7630 = !DILocalVariable(name: "a", arg: 1, scope: !7629, file: !3, line: 3687, type: !780)
!7631 = !DILocation(line: 3687, column: 1, scope: !7629)
!7632 = !DILocalVariable(name: "b", arg: 2, scope: !7629, file: !3, line: 3687, type: !780)
!7633 = !DILocalVariable(name: "a_is_dir", scope: !7634, file: !3, line: 3687, type: !141)
!7634 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 3687, column: 1)
!7635 = !DILocation(line: 3687, column: 1, scope: !7634)
!7636 = !DILocalVariable(name: "b_is_dir", scope: !7634, file: !3, line: 3687, type: !141)
!7637 = !DILocation(line: 3687, column: 1, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 3687, column: 1)
!7639 = !DILocation(line: 3687, column: 1, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 3687, column: 1)
!7641 = distinct !DISubprogram(name: "xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7642 = !DILocalVariable(name: "a", arg: 1, scope: !7641, file: !3, line: 3689, type: !780)
!7643 = !DILocation(line: 3689, column: 1, scope: !7641)
!7644 = !DILocalVariable(name: "b", arg: 2, scope: !7641, file: !3, line: 3689, type: !780)
!7645 = distinct !DISubprogram(name: "xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7646 = !DILocalVariable(name: "a", arg: 1, scope: !7645, file: !3, line: 3689, type: !780)
!7647 = !DILocation(line: 3689, column: 1, scope: !7645)
!7648 = !DILocalVariable(name: "b", arg: 2, scope: !7645, file: !3, line: 3689, type: !780)
!7649 = !DILocalVariable(name: "a_is_dir", scope: !7650, file: !3, line: 3689, type: !141)
!7650 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3689, column: 1)
!7651 = !DILocation(line: 3689, column: 1, scope: !7650)
!7652 = !DILocalVariable(name: "b_is_dir", scope: !7650, file: !3, line: 3689, type: !141)
!7653 = !DILocation(line: 3689, column: 1, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 3689, column: 1)
!7655 = !DILocation(line: 3689, column: 1, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 3689, column: 1)
!7657 = distinct !DISubprogram(name: "rev_xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7658 = !DILocalVariable(name: "a", arg: 1, scope: !7657, file: !3, line: 3689, type: !780)
!7659 = !DILocation(line: 3689, column: 1, scope: !7657)
!7660 = !DILocalVariable(name: "b", arg: 2, scope: !7657, file: !3, line: 3689, type: !780)
!7661 = distinct !DISubprogram(name: "rev_xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7662 = !DILocalVariable(name: "a", arg: 1, scope: !7661, file: !3, line: 3689, type: !780)
!7663 = !DILocation(line: 3689, column: 1, scope: !7661)
!7664 = !DILocalVariable(name: "b", arg: 2, scope: !7661, file: !3, line: 3689, type: !780)
!7665 = !DILocalVariable(name: "a_is_dir", scope: !7666, file: !3, line: 3689, type: !141)
!7666 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 3689, column: 1)
!7667 = !DILocation(line: 3689, column: 1, scope: !7666)
!7668 = !DILocalVariable(name: "b_is_dir", scope: !7666, file: !3, line: 3689, type: !141)
!7669 = !DILocation(line: 3689, column: 1, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 3689, column: 1)
!7671 = !DILocation(line: 3689, column: 1, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 3689, column: 1)
!7673 = distinct !DISubprogram(name: "strcmp_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7674 = !DILocalVariable(name: "a", arg: 1, scope: !7673, file: !3, line: 3689, type: !780)
!7675 = !DILocation(line: 3689, column: 1, scope: !7673)
!7676 = !DILocalVariable(name: "b", arg: 2, scope: !7673, file: !3, line: 3689, type: !780)
!7677 = distinct !DISubprogram(name: "strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7678 = !DILocalVariable(name: "a", arg: 1, scope: !7677, file: !3, line: 3689, type: !780)
!7679 = !DILocation(line: 3689, column: 1, scope: !7677)
!7680 = !DILocalVariable(name: "b", arg: 2, scope: !7677, file: !3, line: 3689, type: !780)
!7681 = !DILocalVariable(name: "a_is_dir", scope: !7682, file: !3, line: 3689, type: !141)
!7682 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 3689, column: 1)
!7683 = !DILocation(line: 3689, column: 1, scope: !7682)
!7684 = !DILocalVariable(name: "b_is_dir", scope: !7682, file: !3, line: 3689, type: !141)
!7685 = !DILocation(line: 3689, column: 1, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 3689, column: 1)
!7687 = !DILocation(line: 3689, column: 1, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 3689, column: 1)
!7689 = distinct !DISubprogram(name: "rev_strcmp_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7690 = !DILocalVariable(name: "a", arg: 1, scope: !7689, file: !3, line: 3689, type: !780)
!7691 = !DILocation(line: 3689, column: 1, scope: !7689)
!7692 = !DILocalVariable(name: "b", arg: 2, scope: !7689, file: !3, line: 3689, type: !780)
!7693 = distinct !DISubprogram(name: "rev_strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !778, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7694 = !DILocalVariable(name: "a", arg: 1, scope: !7693, file: !3, line: 3689, type: !780)
!7695 = !DILocation(line: 3689, column: 1, scope: !7693)
!7696 = !DILocalVariable(name: "b", arg: 2, scope: !7693, file: !3, line: 3689, type: !780)
!7697 = !DILocalVariable(name: "a_is_dir", scope: !7698, file: !3, line: 3689, type: !141)
!7698 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 3689, column: 1)
!7699 = !DILocation(line: 3689, column: 1, scope: !7698)
!7700 = !DILocalVariable(name: "b_is_dir", scope: !7698, file: !3, line: 3689, type: !141)
!7701 = !DILocation(line: 3689, column: 1, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 3689, column: 1)
!7703 = !DILocation(line: 3689, column: 1, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 3689, column: 1)
!7705 = distinct !DISubprogram(name: "is_linked_directory", scope: !3, file: !3, line: 3442, type: !7166, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7706 = !DILocalVariable(name: "f", arg: 1, scope: !7705, file: !3, line: 3442, type: !182)
!7707 = !DILocation(line: 3442, column: 45, scope: !7705)
!7708 = !DILocation(line: 3444, column: 10, scope: !7705)
!7709 = !DILocation(line: 3444, column: 13, scope: !7705)
!7710 = !DILocation(line: 3444, column: 22, scope: !7705)
!7711 = !DILocation(line: 3444, column: 35, scope: !7705)
!7712 = !DILocation(line: 3444, column: 38, scope: !7705)
!7713 = !DILocation(line: 3444, column: 41, scope: !7705)
!7714 = !DILocation(line: 3444, column: 50, scope: !7705)
!7715 = !DILocation(line: 3445, column: 10, scope: !7705)
!7716 = !DILocation(line: 3445, column: 13, scope: !7705)
!7717 = !DILocation(line: 3444, column: 3, scope: !7705)
!7718 = distinct !DISubprogram(name: "cmp_atime", scope: !3, file: !3, line: 3651, type: !7719, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7719 = !DISubroutineType(types: !7720)
!7720 = !{!27, !182, !182, !7721}
!7721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7722, size: 64)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{!27, !146, !146}
!7724 = !DILocalVariable(name: "a", arg: 1, scope: !7718, file: !3, line: 3651, type: !182)
!7725 = !DILocation(line: 3651, column: 35, scope: !7718)
!7726 = !DILocalVariable(name: "b", arg: 2, scope: !7718, file: !3, line: 3651, type: !182)
!7727 = !DILocation(line: 3651, column: 61, scope: !7718)
!7728 = !DILocalVariable(name: "cmp", arg: 3, scope: !7718, file: !3, line: 3652, type: !7721)
!7729 = !DILocation(line: 3652, column: 18, scope: !7718)
!7730 = !DILocalVariable(name: "diff", scope: !7718, file: !3, line: 3654, type: !27)
!7731 = !DILocation(line: 3654, column: 7, scope: !7718)
!7732 = !DILocation(line: 3654, column: 45, scope: !7718)
!7733 = !DILocation(line: 3654, column: 48, scope: !7718)
!7734 = !DILocation(line: 3654, column: 28, scope: !7718)
!7735 = !DILocation(line: 3655, column: 45, scope: !7718)
!7736 = !DILocation(line: 3655, column: 48, scope: !7718)
!7737 = !DILocation(line: 3655, column: 28, scope: !7718)
!7738 = !DILocation(line: 3654, column: 14, scope: !7718)
!7739 = !DILocation(line: 3656, column: 10, scope: !7718)
!7740 = !DILocation(line: 3656, column: 17, scope: !7718)
!7741 = !DILocation(line: 3656, column: 24, scope: !7718)
!7742 = !DILocation(line: 3656, column: 29, scope: !7718)
!7743 = !DILocation(line: 3656, column: 32, scope: !7718)
!7744 = !DILocation(line: 3656, column: 38, scope: !7718)
!7745 = !DILocation(line: 3656, column: 41, scope: !7718)
!7746 = !DILocation(line: 3656, column: 3, scope: !7718)
!7747 = distinct !DISubprogram(name: "xstrcoll", scope: !3, file: !3, line: 3567, type: !7722, scopeLine: 3568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7748 = !DILocalVariable(name: "a", arg: 1, scope: !7747, file: !3, line: 3567, type: !146)
!7749 = !DILocation(line: 3567, column: 23, scope: !7747)
!7750 = !DILocalVariable(name: "b", arg: 2, scope: !7747, file: !3, line: 3567, type: !146)
!7751 = !DILocation(line: 3567, column: 38, scope: !7747)
!7752 = !DILocalVariable(name: "diff", scope: !7747, file: !3, line: 3569, type: !27)
!7753 = !DILocation(line: 3569, column: 7, scope: !7747)
!7754 = !DILocation(line: 3570, column: 3, scope: !7747)
!7755 = !DILocation(line: 3570, column: 9, scope: !7747)
!7756 = !DILocation(line: 3571, column: 19, scope: !7747)
!7757 = !DILocation(line: 3571, column: 22, scope: !7747)
!7758 = !DILocation(line: 3571, column: 10, scope: !7747)
!7759 = !DILocation(line: 3571, column: 8, scope: !7747)
!7760 = !DILocation(line: 3572, column: 7, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 3572, column: 7)
!7762 = !DILocation(line: 3572, column: 7, scope: !7747)
!7763 = !DILocation(line: 3574, column: 17, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 3573, column: 5)
!7765 = !DILocation(line: 3574, column: 24, scope: !7764)
!7766 = !DILocation(line: 3575, column: 26, scope: !7764)
!7767 = !DILocation(line: 3575, column: 14, scope: !7764)
!7768 = !DILocation(line: 3575, column: 42, scope: !7764)
!7769 = !DILocation(line: 3575, column: 30, scope: !7764)
!7770 = !DILocation(line: 3574, column: 7, scope: !7764)
!7771 = !DILocation(line: 3576, column: 7, scope: !7764)
!7772 = !DILocation(line: 3577, column: 7, scope: !7764)
!7773 = !DILocation(line: 3579, column: 10, scope: !7747)
!7774 = !DILocation(line: 3579, column: 3, scope: !7747)
!7775 = distinct !DISubprogram(name: "cmp_ctime", scope: !3, file: !3, line: 3633, type: !7719, scopeLine: 3635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7776 = !DILocalVariable(name: "a", arg: 1, scope: !7775, file: !3, line: 3633, type: !182)
!7777 = !DILocation(line: 3633, column: 35, scope: !7775)
!7778 = !DILocalVariable(name: "b", arg: 2, scope: !7775, file: !3, line: 3633, type: !182)
!7779 = !DILocation(line: 3633, column: 61, scope: !7775)
!7780 = !DILocalVariable(name: "cmp", arg: 3, scope: !7775, file: !3, line: 3634, type: !7721)
!7781 = !DILocation(line: 3634, column: 18, scope: !7775)
!7782 = !DILocalVariable(name: "diff", scope: !7775, file: !3, line: 3636, type: !27)
!7783 = !DILocation(line: 3636, column: 7, scope: !7775)
!7784 = !DILocation(line: 3636, column: 45, scope: !7775)
!7785 = !DILocation(line: 3636, column: 48, scope: !7775)
!7786 = !DILocation(line: 3636, column: 28, scope: !7775)
!7787 = !DILocation(line: 3637, column: 45, scope: !7775)
!7788 = !DILocation(line: 3637, column: 48, scope: !7775)
!7789 = !DILocation(line: 3637, column: 28, scope: !7775)
!7790 = !DILocation(line: 3636, column: 14, scope: !7775)
!7791 = !DILocation(line: 3638, column: 10, scope: !7775)
!7792 = !DILocation(line: 3638, column: 17, scope: !7775)
!7793 = !DILocation(line: 3638, column: 24, scope: !7775)
!7794 = !DILocation(line: 3638, column: 29, scope: !7775)
!7795 = !DILocation(line: 3638, column: 32, scope: !7775)
!7796 = !DILocation(line: 3638, column: 38, scope: !7775)
!7797 = !DILocation(line: 3638, column: 41, scope: !7775)
!7798 = !DILocation(line: 3638, column: 3, scope: !7775)
!7799 = distinct !DISubprogram(name: "cmp_mtime", scope: !3, file: !3, line: 3642, type: !7719, scopeLine: 3644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7800 = !DILocalVariable(name: "a", arg: 1, scope: !7799, file: !3, line: 3642, type: !182)
!7801 = !DILocation(line: 3642, column: 35, scope: !7799)
!7802 = !DILocalVariable(name: "b", arg: 2, scope: !7799, file: !3, line: 3642, type: !182)
!7803 = !DILocation(line: 3642, column: 61, scope: !7799)
!7804 = !DILocalVariable(name: "cmp", arg: 3, scope: !7799, file: !3, line: 3643, type: !7721)
!7805 = !DILocation(line: 3643, column: 18, scope: !7799)
!7806 = !DILocalVariable(name: "diff", scope: !7799, file: !3, line: 3645, type: !27)
!7807 = !DILocation(line: 3645, column: 7, scope: !7799)
!7808 = !DILocation(line: 3645, column: 45, scope: !7799)
!7809 = !DILocation(line: 3645, column: 48, scope: !7799)
!7810 = !DILocation(line: 3645, column: 28, scope: !7799)
!7811 = !DILocation(line: 3646, column: 45, scope: !7799)
!7812 = !DILocation(line: 3646, column: 48, scope: !7799)
!7813 = !DILocation(line: 3646, column: 28, scope: !7799)
!7814 = !DILocation(line: 3645, column: 14, scope: !7799)
!7815 = !DILocation(line: 3647, column: 10, scope: !7799)
!7816 = !DILocation(line: 3647, column: 17, scope: !7799)
!7817 = !DILocation(line: 3647, column: 24, scope: !7799)
!7818 = !DILocation(line: 3647, column: 29, scope: !7799)
!7819 = !DILocation(line: 3647, column: 32, scope: !7799)
!7820 = !DILocation(line: 3647, column: 38, scope: !7799)
!7821 = !DILocation(line: 3647, column: 41, scope: !7799)
!7822 = !DILocation(line: 3647, column: 3, scope: !7799)
!7823 = distinct !DISubprogram(name: "cmp_version", scope: !3, file: !3, line: 3704, type: !7824, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{!27, !182, !182}
!7826 = !DILocalVariable(name: "a", arg: 1, scope: !7823, file: !3, line: 3704, type: !182)
!7827 = !DILocation(line: 3704, column: 37, scope: !7823)
!7828 = !DILocalVariable(name: "b", arg: 2, scope: !7823, file: !3, line: 3704, type: !182)
!7829 = !DILocation(line: 3704, column: 63, scope: !7823)
!7830 = !DILocation(line: 3706, column: 22, scope: !7823)
!7831 = !DILocation(line: 3706, column: 25, scope: !7823)
!7832 = !DILocation(line: 3706, column: 31, scope: !7823)
!7833 = !DILocation(line: 3706, column: 34, scope: !7823)
!7834 = !DILocation(line: 3706, column: 10, scope: !7823)
!7835 = !DILocation(line: 3706, column: 3, scope: !7823)
!7836 = distinct !DISubprogram(name: "cmp_size", scope: !3, file: !3, line: 3660, type: !7719, scopeLine: 3662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7837 = !DILocalVariable(name: "a", arg: 1, scope: !7836, file: !3, line: 3660, type: !182)
!7838 = !DILocation(line: 3660, column: 34, scope: !7836)
!7839 = !DILocalVariable(name: "b", arg: 2, scope: !7836, file: !3, line: 3660, type: !182)
!7840 = !DILocation(line: 3660, column: 60, scope: !7836)
!7841 = !DILocalVariable(name: "cmp", arg: 3, scope: !7836, file: !3, line: 3661, type: !7721)
!7842 = !DILocation(line: 3661, column: 17, scope: !7836)
!7843 = !DILocalVariable(name: "diff", scope: !7836, file: !3, line: 3663, type: !27)
!7844 = !DILocation(line: 3663, column: 7, scope: !7836)
!7845 = !DILocation(line: 3663, column: 14, scope: !7836)
!7846 = !DILocation(line: 3664, column: 10, scope: !7836)
!7847 = !DILocation(line: 3664, column: 17, scope: !7836)
!7848 = !DILocation(line: 3664, column: 24, scope: !7836)
!7849 = !DILocation(line: 3664, column: 29, scope: !7836)
!7850 = !DILocation(line: 3664, column: 32, scope: !7836)
!7851 = !DILocation(line: 3664, column: 38, scope: !7836)
!7852 = !DILocation(line: 3664, column: 41, scope: !7836)
!7853 = !DILocation(line: 3664, column: 3, scope: !7836)
!7854 = distinct !DISubprogram(name: "cmp_extension", scope: !3, file: !3, line: 3678, type: !7719, scopeLine: 3680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7855 = !DILocalVariable(name: "a", arg: 1, scope: !7854, file: !3, line: 3678, type: !182)
!7856 = !DILocation(line: 3678, column: 39, scope: !7854)
!7857 = !DILocalVariable(name: "b", arg: 2, scope: !7854, file: !3, line: 3678, type: !182)
!7858 = !DILocation(line: 3678, column: 65, scope: !7854)
!7859 = !DILocalVariable(name: "cmp", arg: 3, scope: !7854, file: !3, line: 3679, type: !7721)
!7860 = !DILocation(line: 3679, column: 22, scope: !7854)
!7861 = !DILocalVariable(name: "base1", scope: !7854, file: !3, line: 3681, type: !146)
!7862 = !DILocation(line: 3681, column: 15, scope: !7854)
!7863 = !DILocation(line: 3681, column: 32, scope: !7854)
!7864 = !DILocation(line: 3681, column: 35, scope: !7854)
!7865 = !DILocation(line: 3681, column: 23, scope: !7854)
!7866 = !DILocalVariable(name: "base2", scope: !7854, file: !3, line: 3682, type: !146)
!7867 = !DILocation(line: 3682, column: 15, scope: !7854)
!7868 = !DILocation(line: 3682, column: 32, scope: !7854)
!7869 = !DILocation(line: 3682, column: 35, scope: !7854)
!7870 = !DILocation(line: 3682, column: 23, scope: !7854)
!7871 = !DILocalVariable(name: "diff", scope: !7854, file: !3, line: 3683, type: !27)
!7872 = !DILocation(line: 3683, column: 7, scope: !7854)
!7873 = !DILocation(line: 3683, column: 14, scope: !7854)
!7874 = !DILocation(line: 3683, column: 19, scope: !7854)
!7875 = !DILocation(line: 3683, column: 27, scope: !7854)
!7876 = !DILocation(line: 3683, column: 39, scope: !7854)
!7877 = !DILocation(line: 3683, column: 47, scope: !7854)
!7878 = !DILocation(line: 3684, column: 10, scope: !7854)
!7879 = !DILocation(line: 3684, column: 17, scope: !7854)
!7880 = !DILocation(line: 3684, column: 24, scope: !7854)
!7881 = !DILocation(line: 3684, column: 29, scope: !7854)
!7882 = !DILocation(line: 3684, column: 32, scope: !7854)
!7883 = !DILocation(line: 3684, column: 38, scope: !7854)
!7884 = !DILocation(line: 3684, column: 41, scope: !7854)
!7885 = !DILocation(line: 3684, column: 3, scope: !7854)
!7886 = distinct !DISubprogram(name: "cmp_name", scope: !3, file: !3, line: 3668, type: !7719, scopeLine: 3670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7887 = !DILocalVariable(name: "a", arg: 1, scope: !7886, file: !3, line: 3668, type: !182)
!7888 = !DILocation(line: 3668, column: 34, scope: !7886)
!7889 = !DILocalVariable(name: "b", arg: 2, scope: !7886, file: !3, line: 3668, type: !182)
!7890 = !DILocation(line: 3668, column: 60, scope: !7886)
!7891 = !DILocalVariable(name: "cmp", arg: 3, scope: !7886, file: !3, line: 3669, type: !7721)
!7892 = !DILocation(line: 3669, column: 17, scope: !7886)
!7893 = !DILocation(line: 3671, column: 10, scope: !7886)
!7894 = !DILocation(line: 3671, column: 15, scope: !7886)
!7895 = !DILocation(line: 3671, column: 18, scope: !7886)
!7896 = !DILocation(line: 3671, column: 24, scope: !7886)
!7897 = !DILocation(line: 3671, column: 27, scope: !7886)
!7898 = !DILocation(line: 3671, column: 3, scope: !7886)
!7899 = distinct !DISubprogram(name: "needs_quoting", scope: !3, file: !3, line: 3099, type: !4850, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7900 = !DILocalVariable(name: "name", arg: 1, scope: !7899, file: !3, line: 3099, type: !146)
!7901 = !DILocation(line: 3099, column: 28, scope: !7899)
!7902 = !DILocalVariable(name: "test", scope: !7899, file: !3, line: 3101, type: !259)
!7903 = !DILocation(line: 3101, column: 8, scope: !7899)
!7904 = !DILocalVariable(name: "len", scope: !7899, file: !3, line: 3102, type: !149)
!7905 = !DILocation(line: 3102, column: 10, scope: !7899)
!7906 = !DILocation(line: 3102, column: 33, scope: !7899)
!7907 = !DILocation(line: 3102, column: 53, scope: !7899)
!7908 = !DILocation(line: 3103, column: 33, scope: !7899)
!7909 = !DILocation(line: 3102, column: 16, scope: !7899)
!7910 = !DILocation(line: 3104, column: 11, scope: !7899)
!7911 = !DILocation(line: 3104, column: 10, scope: !7899)
!7912 = !DILocation(line: 3104, column: 19, scope: !7899)
!7913 = !DILocation(line: 3104, column: 16, scope: !7899)
!7914 = !DILocation(line: 3104, column: 25, scope: !7899)
!7915 = !DILocation(line: 3104, column: 36, scope: !7899)
!7916 = !DILocation(line: 3104, column: 28, scope: !7899)
!7917 = !DILocation(line: 3104, column: 45, scope: !7899)
!7918 = !DILocation(line: 3104, column: 42, scope: !7899)
!7919 = !DILocation(line: 3104, column: 3, scope: !7899)
!7920 = distinct !DISubprogram(name: "attach", scope: !3, file: !3, line: 4986, type: !7921, scopeLine: 4987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{null, !143, !146, !146}
!7923 = !DILocalVariable(name: "dest", arg: 1, scope: !7920, file: !3, line: 4986, type: !143)
!7924 = !DILocation(line: 4986, column: 15, scope: !7920)
!7925 = !DILocalVariable(name: "dirname", arg: 2, scope: !7920, file: !3, line: 4986, type: !146)
!7926 = !DILocation(line: 4986, column: 33, scope: !7920)
!7927 = !DILocalVariable(name: "name", arg: 3, scope: !7920, file: !3, line: 4986, type: !146)
!7928 = !DILocation(line: 4986, column: 54, scope: !7920)
!7929 = !DILocalVariable(name: "dirnamep", scope: !7920, file: !3, line: 4988, type: !146)
!7930 = !DILocation(line: 4988, column: 15, scope: !7920)
!7931 = !DILocation(line: 4988, column: 26, scope: !7920)
!7932 = !DILocation(line: 4991, column: 7, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 4991, column: 7)
!7934 = !DILocation(line: 4991, column: 18, scope: !7933)
!7935 = !DILocation(line: 4991, column: 25, scope: !7933)
!7936 = !DILocation(line: 4991, column: 28, scope: !7933)
!7937 = !DILocation(line: 4991, column: 39, scope: !7933)
!7938 = !DILocation(line: 4991, column: 7, scope: !7920)
!7939 = !DILocation(line: 4993, column: 7, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 4992, column: 5)
!7941 = !DILocation(line: 4993, column: 15, scope: !7940)
!7942 = !DILocation(line: 4993, column: 14, scope: !7940)
!7943 = !DILocation(line: 4994, column: 28, scope: !7940)
!7944 = !DILocation(line: 4994, column: 19, scope: !7940)
!7945 = !DILocation(line: 4994, column: 14, scope: !7940)
!7946 = !DILocation(line: 4994, column: 17, scope: !7940)
!7947 = distinct !{!7947, !7939, !7943}
!7948 = !DILocation(line: 4996, column: 11, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 4996, column: 11)
!7950 = !DILocation(line: 4996, column: 22, scope: !7949)
!7951 = !DILocation(line: 4996, column: 20, scope: !7949)
!7952 = !DILocation(line: 4996, column: 30, scope: !7949)
!7953 = !DILocation(line: 4996, column: 33, scope: !7949)
!7954 = !DILocation(line: 4996, column: 46, scope: !7949)
!7955 = !DILocation(line: 4996, column: 11, scope: !7940)
!7956 = !DILocation(line: 4997, column: 14, scope: !7949)
!7957 = !DILocation(line: 4997, column: 17, scope: !7949)
!7958 = !DILocation(line: 4997, column: 9, scope: !7949)
!7959 = !DILocation(line: 4998, column: 5, scope: !7940)
!7960 = !DILocation(line: 4999, column: 3, scope: !7920)
!7961 = !DILocation(line: 4999, column: 11, scope: !7920)
!7962 = !DILocation(line: 4999, column: 10, scope: !7920)
!7963 = !DILocation(line: 5000, column: 20, scope: !7920)
!7964 = !DILocation(line: 5000, column: 15, scope: !7920)
!7965 = !DILocation(line: 5000, column: 10, scope: !7920)
!7966 = !DILocation(line: 5000, column: 13, scope: !7920)
!7967 = distinct !{!7967, !7960, !7963}
!7968 = !DILocation(line: 5001, column: 4, scope: !7920)
!7969 = !DILocation(line: 5001, column: 9, scope: !7920)
!7970 = !DILocation(line: 5002, column: 1, scope: !7920)
!7971 = !DILocalVariable(name: "file", arg: 1, scope: !1035, file: !3, line: 3080, type: !146)
!7972 = !DILocation(line: 3080, column: 35, scope: !1035)
!7973 = !DILocalVariable(name: "f", arg: 2, scope: !1035, file: !3, line: 3080, type: !258)
!7974 = !DILocation(line: 3080, column: 58, scope: !1035)
!7975 = !DILocation(line: 3086, column: 7, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !1035, file: !3, line: 3086, column: 7)
!7977 = !DILocation(line: 3086, column: 10, scope: !7976)
!7978 = !DILocation(line: 3086, column: 15, scope: !7976)
!7979 = !DILocation(line: 3086, column: 25, scope: !7976)
!7980 = !DILocation(line: 3086, column: 22, scope: !7976)
!7981 = !DILocation(line: 3086, column: 7, scope: !1035)
!7982 = !DILocation(line: 3088, column: 7, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 3087, column: 5)
!7984 = !DILocation(line: 3088, column: 13, scope: !7983)
!7985 = !DILocation(line: 3089, column: 7, scope: !7983)
!7986 = !DILocalVariable(name: "b", scope: !1035, file: !3, line: 3092, type: !141)
!7987 = !DILocation(line: 3092, column: 8, scope: !1035)
!7988 = !DILocation(line: 3092, column: 28, scope: !1035)
!7989 = !DILocation(line: 3092, column: 12, scope: !1035)
!7990 = !DILocation(line: 3093, column: 9, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !1035, file: !3, line: 3093, column: 8)
!7992 = !DILocation(line: 3093, column: 11, scope: !7991)
!7993 = !DILocation(line: 3093, column: 33, scope: !7991)
!7994 = !DILocation(line: 3093, column: 14, scope: !7991)
!7995 = !DILocation(line: 3093, column: 8, scope: !1035)
!7996 = !DILocation(line: 3094, column: 26, scope: !7991)
!7997 = !DILocation(line: 3094, column: 29, scope: !7991)
!7998 = !DILocation(line: 3094, column: 34, scope: !7991)
!7999 = !DILocation(line: 3094, column: 24, scope: !7991)
!8000 = !DILocation(line: 3094, column: 5, scope: !7991)
!8001 = !DILocation(line: 3095, column: 10, scope: !1035)
!8002 = !DILocation(line: 3095, column: 3, scope: !1035)
!8003 = !DILocation(line: 3096, column: 1, scope: !1035)
!8004 = !DILocalVariable(name: "file", arg: 1, scope: !1040, file: !3, line: 3025, type: !146)
!8005 = !DILocation(line: 3025, column: 31, scope: !1040)
!8006 = !DILocalVariable(name: "f", arg: 2, scope: !1040, file: !3, line: 3025, type: !258)
!8007 = !DILocation(line: 3025, column: 54, scope: !1040)
!8008 = !DILocalVariable(name: "deref", arg: 3, scope: !1040, file: !3, line: 3025, type: !141)
!8009 = !DILocation(line: 3025, column: 62, scope: !1040)
!8010 = !DILocation(line: 3031, column: 7, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 3031, column: 7)
!8012 = !DILocation(line: 3031, column: 10, scope: !8011)
!8013 = !DILocation(line: 3031, column: 15, scope: !8011)
!8014 = !DILocation(line: 3031, column: 25, scope: !8011)
!8015 = !DILocation(line: 3031, column: 22, scope: !8011)
!8016 = !DILocation(line: 3031, column: 7, scope: !1040)
!8017 = !DILocation(line: 3033, column: 7, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 3032, column: 5)
!8019 = !DILocation(line: 3033, column: 13, scope: !8018)
!8020 = !DILocation(line: 3034, column: 7, scope: !8018)
!8021 = !DILocalVariable(name: "r", scope: !1040, file: !3, line: 3036, type: !27)
!8022 = !DILocation(line: 3036, column: 7, scope: !1040)
!8023 = !DILocation(line: 3043, column: 10, scope: !1040)
!8024 = !DILocation(line: 3044, column: 24, scope: !1040)
!8025 = !DILocation(line: 3044, column: 31, scope: !1040)
!8026 = !DILocation(line: 3044, column: 34, scope: !1040)
!8027 = !DILocation(line: 3044, column: 12, scope: !1040)
!8028 = !DILocation(line: 3045, column: 25, scope: !1040)
!8029 = !DILocation(line: 3045, column: 32, scope: !1040)
!8030 = !DILocation(line: 3045, column: 35, scope: !1040)
!8031 = !DILocation(line: 3045, column: 12, scope: !1040)
!8032 = !DILocation(line: 3043, column: 7, scope: !1040)
!8033 = !DILocation(line: 3046, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 3046, column: 7)
!8035 = !DILocation(line: 3046, column: 9, scope: !8034)
!8036 = !DILocation(line: 3046, column: 13, scope: !8034)
!8037 = !DILocation(line: 3046, column: 35, scope: !8034)
!8038 = !DILocation(line: 3046, column: 16, scope: !8034)
!8039 = !DILocation(line: 3046, column: 7, scope: !1040)
!8040 = !DILocation(line: 3047, column: 26, scope: !8034)
!8041 = !DILocation(line: 3047, column: 29, scope: !8034)
!8042 = !DILocation(line: 3047, column: 34, scope: !8034)
!8043 = !DILocation(line: 3047, column: 24, scope: !8034)
!8044 = !DILocation(line: 3047, column: 5, scope: !8034)
!8045 = !DILocation(line: 3048, column: 10, scope: !1040)
!8046 = !DILocation(line: 3048, column: 3, scope: !1040)
!8047 = !DILocation(line: 3049, column: 1, scope: !1040)
!8048 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !821, file: !821, line: 762, type: !8049, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!141, !27}
!8051 = !DILocalVariable(name: "err", arg: 1, scope: !8048, file: !821, line: 762, type: !27)
!8052 = !DILocation(line: 762, column: 17, scope: !8048)
!8053 = !DILocation(line: 764, column: 10, scope: !8048)
!8054 = !DILocation(line: 764, column: 14, scope: !8048)
!8055 = !DILocation(line: 764, column: 28, scope: !8048)
!8056 = !DILocation(line: 764, column: 3, scope: !8048)
!8057 = !DILocalVariable(name: "file", arg: 1, scope: !1045, file: !3, line: 3055, type: !146)
!8058 = !DILocation(line: 3055, column: 33, scope: !1045)
!8059 = !DILocalVariable(name: "f", arg: 2, scope: !1045, file: !3, line: 3055, type: !258)
!8060 = !DILocation(line: 3055, column: 56, scope: !1045)
!8061 = !DILocation(line: 3061, column: 7, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !1045, file: !3, line: 3061, column: 7)
!8063 = !DILocation(line: 3061, column: 10, scope: !8062)
!8064 = !DILocation(line: 3061, column: 15, scope: !8062)
!8065 = !DILocation(line: 3061, column: 25, scope: !8062)
!8066 = !DILocation(line: 3061, column: 22, scope: !8062)
!8067 = !DILocation(line: 3061, column: 7, scope: !1045)
!8068 = !DILocation(line: 3063, column: 7, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 3062, column: 5)
!8070 = !DILocation(line: 3063, column: 13, scope: !8069)
!8071 = !DILocation(line: 3064, column: 7, scope: !8069)
!8072 = !DILocation(line: 3069, column: 3, scope: !1045)
!8073 = !DILocation(line: 3069, column: 9, scope: !1045)
!8074 = !DILocalVariable(name: "n", scope: !1045, file: !3, line: 3070, type: !27)
!8075 = !DILocation(line: 3070, column: 7, scope: !1045)
!8076 = !DILocation(line: 3070, column: 25, scope: !1045)
!8077 = !DILocation(line: 3070, column: 32, scope: !1045)
!8078 = !DILocation(line: 3070, column: 35, scope: !1045)
!8079 = !DILocation(line: 3070, column: 11, scope: !1045)
!8080 = !DILocation(line: 3071, column: 7, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !1045, file: !3, line: 3071, column: 7)
!8082 = !DILocation(line: 3071, column: 9, scope: !8081)
!8083 = !DILocation(line: 3071, column: 14, scope: !8081)
!8084 = !DILocation(line: 3071, column: 36, scope: !8081)
!8085 = !DILocation(line: 3071, column: 17, scope: !8081)
!8086 = !DILocation(line: 3071, column: 7, scope: !1045)
!8087 = !DILocation(line: 3072, column: 26, scope: !8081)
!8088 = !DILocation(line: 3072, column: 29, scope: !8081)
!8089 = !DILocation(line: 3072, column: 34, scope: !8081)
!8090 = !DILocation(line: 3072, column: 24, scope: !8081)
!8091 = !DILocation(line: 3072, column: 5, scope: !8081)
!8092 = !DILocation(line: 3073, column: 10, scope: !1045)
!8093 = !DILocation(line: 3073, column: 3, scope: !1045)
!8094 = !DILocation(line: 3074, column: 1, scope: !1045)
!8095 = distinct !DISubprogram(name: "get_link_name", scope: !3, file: !3, line: 3453, type: !8096, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{null, !146, !258, !141}
!8098 = !DILocalVariable(name: "filename", arg: 1, scope: !8095, file: !3, line: 3453, type: !146)
!8099 = !DILocation(line: 3453, column: 28, scope: !8095)
!8100 = !DILocalVariable(name: "f", arg: 2, scope: !8095, file: !3, line: 3453, type: !258)
!8101 = !DILocation(line: 3453, column: 55, scope: !8095)
!8102 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !8095, file: !3, line: 3453, type: !141)
!8103 = !DILocation(line: 3453, column: 63, scope: !8095)
!8104 = !DILocation(line: 3455, column: 38, scope: !8095)
!8105 = !DILocation(line: 3455, column: 48, scope: !8095)
!8106 = !DILocation(line: 3455, column: 51, scope: !8095)
!8107 = !DILocation(line: 3455, column: 56, scope: !8095)
!8108 = !DILocation(line: 3455, column: 17, scope: !8095)
!8109 = !DILocation(line: 3455, column: 3, scope: !8095)
!8110 = !DILocation(line: 3455, column: 6, scope: !8095)
!8111 = !DILocation(line: 3455, column: 15, scope: !8095)
!8112 = !DILocation(line: 3456, column: 7, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3456, column: 7)
!8114 = !DILocation(line: 3456, column: 10, scope: !8113)
!8115 = !DILocation(line: 3456, column: 19, scope: !8113)
!8116 = !DILocation(line: 3456, column: 7, scope: !8095)
!8117 = !DILocation(line: 3457, column: 19, scope: !8113)
!8118 = !DILocation(line: 3457, column: 37, scope: !8113)
!8119 = !DILocation(line: 3458, column: 19, scope: !8113)
!8120 = !DILocation(line: 3457, column: 5, scope: !8113)
!8121 = !DILocation(line: 3459, column: 1, scope: !8095)
!8122 = distinct !DISubprogram(name: "make_link_name", scope: !3, file: !3, line: 3467, type: !8123, scopeLine: 3468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!143, !146, !146}
!8125 = !DILocalVariable(name: "name", arg: 1, scope: !8122, file: !3, line: 3467, type: !146)
!8126 = !DILocation(line: 3467, column: 29, scope: !8122)
!8127 = !DILocalVariable(name: "linkname", arg: 2, scope: !8122, file: !3, line: 3467, type: !146)
!8128 = !DILocation(line: 3467, column: 47, scope: !8122)
!8129 = !DILocation(line: 3469, column: 8, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 3469, column: 7)
!8131 = !DILocation(line: 3469, column: 7, scope: !8122)
!8132 = !DILocation(line: 3470, column: 5, scope: !8130)
!8133 = !DILocation(line: 3472, column: 7, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 3472, column: 7)
!8135 = !DILocation(line: 3472, column: 7, scope: !8122)
!8136 = !DILocation(line: 3473, column: 21, scope: !8134)
!8137 = !DILocation(line: 3473, column: 12, scope: !8134)
!8138 = !DILocation(line: 3473, column: 5, scope: !8134)
!8139 = !DILocalVariable(name: "prefix_len", scope: !8122, file: !3, line: 3477, type: !149)
!8140 = !DILocation(line: 3477, column: 10, scope: !8122)
!8141 = !DILocation(line: 3477, column: 32, scope: !8122)
!8142 = !DILocation(line: 3477, column: 23, scope: !8122)
!8143 = !DILocation(line: 3478, column: 7, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 3478, column: 7)
!8145 = !DILocation(line: 3478, column: 18, scope: !8144)
!8146 = !DILocation(line: 3478, column: 7, scope: !8122)
!8147 = !DILocation(line: 3479, column: 21, scope: !8144)
!8148 = !DILocation(line: 3479, column: 12, scope: !8144)
!8149 = !DILocation(line: 3479, column: 5, scope: !8144)
!8150 = !DILocalVariable(name: "p", scope: !8122, file: !3, line: 3481, type: !143)
!8151 = !DILocation(line: 3481, column: 9, scope: !8122)
!8152 = !DILocation(line: 3481, column: 22, scope: !8122)
!8153 = !DILocation(line: 3481, column: 33, scope: !8122)
!8154 = !DILocation(line: 3481, column: 47, scope: !8122)
!8155 = !DILocation(line: 3481, column: 39, scope: !8122)
!8156 = !DILocation(line: 3481, column: 37, scope: !8122)
!8157 = !DILocation(line: 3481, column: 57, scope: !8122)
!8158 = !DILocation(line: 3481, column: 13, scope: !8122)
!8159 = !DILocation(line: 3486, column: 10, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 3486, column: 8)
!8161 = !DILocation(line: 3486, column: 8, scope: !8122)
!8162 = !DILocation(line: 3487, column: 5, scope: !8160)
!8163 = !DILocation(line: 3489, column: 20, scope: !8122)
!8164 = !DILocation(line: 3489, column: 23, scope: !8122)
!8165 = !DILocation(line: 3489, column: 29, scope: !8122)
!8166 = !DILocation(line: 3489, column: 11, scope: !8122)
!8167 = !DILocation(line: 3489, column: 42, scope: !8122)
!8168 = !DILocation(line: 3489, column: 3, scope: !8122)
!8169 = !DILocation(line: 3490, column: 10, scope: !8122)
!8170 = !DILocation(line: 3490, column: 3, scope: !8122)
!8171 = !DILocation(line: 3491, column: 1, scope: !8122)
!8172 = distinct !DISubprogram(name: "format_user_width", scope: !3, file: !3, line: 3993, type: !8173, scopeLine: 3994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!27, !1289}
!8175 = !DILocalVariable(name: "u", arg: 1, scope: !8172, file: !3, line: 3993, type: !1289)
!8176 = !DILocation(line: 3993, column: 26, scope: !8172)
!8177 = !DILocation(line: 3995, column: 38, scope: !8172)
!8178 = !DILocation(line: 3995, column: 68, scope: !8172)
!8179 = !DILocation(line: 3995, column: 59, scope: !8172)
!8180 = !DILocation(line: 3995, column: 72, scope: !8172)
!8181 = !DILocation(line: 3995, column: 10, scope: !8172)
!8182 = !DILocation(line: 3995, column: 3, scope: !8172)
!8183 = distinct !DISubprogram(name: "format_group_width", scope: !3, file: !3, line: 4001, type: !8184, scopeLine: 4002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!27, !1291}
!8186 = !DILocalVariable(name: "g", arg: 1, scope: !8183, file: !3, line: 4001, type: !1291)
!8187 = !DILocation(line: 4001, column: 27, scope: !8183)
!8188 = !DILocation(line: 4003, column: 38, scope: !8183)
!8189 = !DILocation(line: 4003, column: 69, scope: !8183)
!8190 = !DILocation(line: 4003, column: 59, scope: !8183)
!8191 = !DILocation(line: 4003, column: 73, scope: !8183)
!8192 = !DILocation(line: 4003, column: 10, scope: !8183)
!8193 = !DILocation(line: 4003, column: 3, scope: !8183)
!8194 = distinct !DISubprogram(name: "format_user_or_group_width", scope: !3, file: !3, line: 3975, type: !8195, scopeLine: 3976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{!27, !146, !151}
!8197 = !DILocalVariable(name: "name", arg: 1, scope: !8194, file: !3, line: 3975, type: !146)
!8198 = !DILocation(line: 3975, column: 41, scope: !8194)
!8199 = !DILocalVariable(name: "id", arg: 2, scope: !8194, file: !3, line: 3975, type: !151)
!8200 = !DILocation(line: 3975, column: 65, scope: !8194)
!8201 = !DILocation(line: 3977, column: 7, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3977, column: 7)
!8203 = !DILocation(line: 3977, column: 7, scope: !8194)
!8204 = !DILocalVariable(name: "len", scope: !8205, file: !3, line: 3979, type: !27)
!8205 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 3978, column: 5)
!8206 = !DILocation(line: 3979, column: 11, scope: !8205)
!8207 = !DILocation(line: 3979, column: 27, scope: !8205)
!8208 = !DILocation(line: 3979, column: 17, scope: !8205)
!8209 = !DILocation(line: 3980, column: 14, scope: !8205)
!8210 = !DILocation(line: 3980, column: 7, scope: !8205)
!8211 = !DILocalVariable(name: "buf", scope: !8212, file: !3, line: 3984, type: !731)
!8212 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 3983, column: 5)
!8213 = !DILocation(line: 3984, column: 12, scope: !8212)
!8214 = !DILocation(line: 3985, column: 16, scope: !8212)
!8215 = !DILocation(line: 3985, column: 28, scope: !8212)
!8216 = !DILocation(line: 3985, column: 7, scope: !8212)
!8217 = !DILocation(line: 3986, column: 22, scope: !8212)
!8218 = !DILocation(line: 3986, column: 14, scope: !8212)
!8219 = !DILocation(line: 3986, column: 7, scope: !8212)
!8220 = !DILocation(line: 3988, column: 1, scope: !8194)
!8221 = distinct !DISubprogram(name: "errno_unsupported", scope: !3, file: !3, line: 3016, type: !8049, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8222 = !DILocalVariable(name: "err", arg: 1, scope: !8221, file: !3, line: 3016, type: !27)
!8223 = !DILocation(line: 3016, column: 24, scope: !8221)
!8224 = !DILocation(line: 3018, column: 11, scope: !8221)
!8225 = !DILocation(line: 3018, column: 15, scope: !8221)
!8226 = !DILocation(line: 3018, column: 25, scope: !8221)
!8227 = !DILocation(line: 3018, column: 28, scope: !8221)
!8228 = !DILocation(line: 3018, column: 32, scope: !8221)
!8229 = !DILocation(line: 3018, column: 42, scope: !8221)
!8230 = !DILocation(line: 3018, column: 57, scope: !8221)
!8231 = !DILocation(line: 3018, column: 45, scope: !8221)
!8232 = !DILocation(line: 3018, column: 3, scope: !8221)
!8233 = distinct !DISubprogram(name: "has_capability", scope: !3, file: !3, line: 2964, type: !4850, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8234 = !DILocalVariable(name: "name", arg: 1, scope: !8233, file: !3, line: 2964, type: !146)
!8235 = !DILocation(line: 2964, column: 29, scope: !8233)
!8236 = !DILocation(line: 2966, column: 3, scope: !8233)
!8237 = !DILocation(line: 2966, column: 9, scope: !8233)
!8238 = !DILocation(line: 2967, column: 3, scope: !8233)
!8239 = distinct !DISubprogram(name: "known_term_type", scope: !3, file: !3, line: 2489, type: !7221, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8240 = !DILocalVariable(name: "term", scope: !8239, file: !3, line: 2491, type: !146)
!8241 = !DILocation(line: 2491, column: 15, scope: !8239)
!8242 = !DILocation(line: 2491, column: 22, scope: !8239)
!8243 = !DILocation(line: 2492, column: 9, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2492, column: 7)
!8245 = !DILocation(line: 2492, column: 14, scope: !8244)
!8246 = !DILocation(line: 2492, column: 20, scope: !8244)
!8247 = !DILocation(line: 2492, column: 19, scope: !8244)
!8248 = !DILocation(line: 2492, column: 7, scope: !8239)
!8249 = !DILocation(line: 2493, column: 5, scope: !8244)
!8250 = !DILocalVariable(name: "line", scope: !8239, file: !3, line: 2495, type: !146)
!8251 = !DILocation(line: 2495, column: 15, scope: !8239)
!8252 = !DILocation(line: 2496, column: 3, scope: !8239)
!8253 = !DILocation(line: 2496, column: 10, scope: !8239)
!8254 = !DILocation(line: 2496, column: 15, scope: !8239)
!8255 = !DILocation(line: 2496, column: 24, scope: !8239)
!8256 = !DILocation(line: 2498, column: 11, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 2498, column: 11)
!8258 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2497, column: 5)
!8259 = !DILocation(line: 2498, column: 39, scope: !8257)
!8260 = !DILocation(line: 2498, column: 11, scope: !8258)
!8261 = !DILocation(line: 2500, column: 24, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 2500, column: 15)
!8263 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 2499, column: 9)
!8264 = !DILocation(line: 2500, column: 29, scope: !8262)
!8265 = !DILocation(line: 2500, column: 34, scope: !8262)
!8266 = !DILocation(line: 2500, column: 15, scope: !8262)
!8267 = !DILocation(line: 2500, column: 43, scope: !8262)
!8268 = !DILocation(line: 2500, column: 15, scope: !8263)
!8269 = !DILocation(line: 2501, column: 13, scope: !8262)
!8270 = !DILocation(line: 2502, column: 9, scope: !8263)
!8271 = !DILocation(line: 2503, column: 23, scope: !8258)
!8272 = !DILocation(line: 2503, column: 15, scope: !8258)
!8273 = !DILocation(line: 2503, column: 29, scope: !8258)
!8274 = !DILocation(line: 2503, column: 12, scope: !8258)
!8275 = distinct !{!8275, !8252, !8276}
!8276 = !DILocation(line: 2504, column: 5, scope: !8239)
!8277 = !DILocation(line: 2506, column: 3, scope: !8239)
!8278 = !DILocation(line: 2507, column: 1, scope: !8239)
!8279 = !DILocalVariable(name: "dest", arg: 1, scope: !138, file: !3, line: 2281, type: !142)
!8280 = !DILocation(line: 2281, column: 26, scope: !138)
!8281 = !DILocalVariable(name: "src", arg: 2, scope: !138, file: !3, line: 2281, type: !145)
!8282 = !DILocation(line: 2281, column: 45, scope: !138)
!8283 = !DILocalVariable(name: "equals_end", arg: 3, scope: !138, file: !3, line: 2281, type: !141)
!8284 = !DILocation(line: 2281, column: 55, scope: !138)
!8285 = !DILocalVariable(name: "output_count", arg: 4, scope: !138, file: !3, line: 2282, type: !148)
!8286 = !DILocation(line: 2282, column: 27, scope: !138)
!8287 = !DILocalVariable(name: "num", scope: !138, file: !3, line: 2284, type: !144)
!8288 = !DILocation(line: 2284, column: 8, scope: !138)
!8289 = !DILocalVariable(name: "count", scope: !138, file: !3, line: 2285, type: !149)
!8290 = !DILocation(line: 2285, column: 10, scope: !138)
!8291 = !DILocalVariable(name: "state", scope: !138, file: !3, line: 2288, type: !137)
!8292 = !DILocation(line: 2288, column: 5, scope: !138)
!8293 = !DILocalVariable(name: "p", scope: !138, file: !3, line: 2289, type: !146)
!8294 = !DILocation(line: 2289, column: 15, scope: !138)
!8295 = !DILocalVariable(name: "q", scope: !138, file: !3, line: 2290, type: !143)
!8296 = !DILocation(line: 2290, column: 9, scope: !138)
!8297 = !DILocation(line: 2292, column: 8, scope: !138)
!8298 = !DILocation(line: 2292, column: 7, scope: !138)
!8299 = !DILocation(line: 2292, column: 5, scope: !138)
!8300 = !DILocation(line: 2293, column: 8, scope: !138)
!8301 = !DILocation(line: 2293, column: 7, scope: !138)
!8302 = !DILocation(line: 2293, column: 5, scope: !138)
!8303 = !DILocation(line: 2295, column: 9, scope: !138)
!8304 = !DILocation(line: 2296, column: 7, scope: !138)
!8305 = !DILocation(line: 2298, column: 9, scope: !138)
!8306 = !DILocation(line: 2299, column: 3, scope: !138)
!8307 = !DILocation(line: 2299, column: 10, scope: !138)
!8308 = !DILocation(line: 2299, column: 16, scope: !138)
!8309 = !DILocation(line: 2301, column: 15, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !138, file: !3, line: 2300, column: 5)
!8311 = !DILocation(line: 2301, column: 7, scope: !8310)
!8312 = !DILocation(line: 2304, column: 20, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 2302, column: 9)
!8314 = !DILocation(line: 2304, column: 19, scope: !8313)
!8315 = !DILocation(line: 2304, column: 11, scope: !8313)
!8316 = !DILocation(line: 2308, column: 21, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2305, column: 13)
!8318 = !DILocation(line: 2309, column: 15, scope: !8317)
!8319 = !DILocation(line: 2311, column: 21, scope: !8317)
!8320 = !DILocation(line: 2312, column: 15, scope: !8317)
!8321 = !DILocation(line: 2313, column: 15, scope: !8317)
!8322 = !DILocation(line: 2315, column: 21, scope: !8317)
!8323 = !DILocation(line: 2316, column: 15, scope: !8317)
!8324 = !DILocation(line: 2317, column: 15, scope: !8317)
!8325 = !DILocation(line: 2319, column: 19, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 2319, column: 19)
!8327 = !DILocation(line: 2319, column: 19, scope: !8317)
!8328 = !DILocation(line: 2321, column: 25, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 2320, column: 17)
!8330 = !DILocation(line: 2322, column: 19, scope: !8329)
!8331 = !DILocation(line: 2324, column: 15, scope: !8317)
!8332 = !DILocation(line: 2326, column: 27, scope: !8317)
!8333 = !DILocation(line: 2326, column: 24, scope: !8317)
!8334 = !DILocation(line: 2326, column: 18, scope: !8317)
!8335 = !DILocation(line: 2326, column: 22, scope: !8317)
!8336 = !DILocation(line: 2327, column: 15, scope: !8317)
!8337 = !DILocation(line: 2328, column: 15, scope: !8317)
!8338 = !DILocation(line: 2330, column: 11, scope: !8313)
!8339 = !DILocation(line: 2333, column: 20, scope: !8313)
!8340 = !DILocation(line: 2333, column: 19, scope: !8313)
!8341 = !DILocation(line: 2333, column: 11, scope: !8313)
!8342 = !DILocation(line: 2343, column: 21, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2334, column: 13)
!8344 = !DILocation(line: 2344, column: 22, scope: !8343)
!8345 = !DILocation(line: 2344, column: 21, scope: !8343)
!8346 = !DILocation(line: 2344, column: 24, scope: !8343)
!8347 = !DILocation(line: 2344, column: 19, scope: !8343)
!8348 = !DILocation(line: 2345, column: 15, scope: !8343)
!8349 = !DILocation(line: 2348, column: 21, scope: !8343)
!8350 = !DILocation(line: 2349, column: 19, scope: !8343)
!8351 = !DILocation(line: 2350, column: 15, scope: !8343)
!8352 = !DILocation(line: 2352, column: 19, scope: !8343)
!8353 = !DILocation(line: 2353, column: 15, scope: !8343)
!8354 = !DILocation(line: 2355, column: 19, scope: !8343)
!8355 = !DILocation(line: 2356, column: 15, scope: !8343)
!8356 = !DILocation(line: 2358, column: 19, scope: !8343)
!8357 = !DILocation(line: 2359, column: 15, scope: !8343)
!8358 = !DILocation(line: 2361, column: 19, scope: !8343)
!8359 = !DILocation(line: 2362, column: 15, scope: !8343)
!8360 = !DILocation(line: 2364, column: 19, scope: !8343)
!8361 = !DILocation(line: 2365, column: 15, scope: !8343)
!8362 = !DILocation(line: 2367, column: 19, scope: !8343)
!8363 = !DILocation(line: 2368, column: 15, scope: !8343)
!8364 = !DILocation(line: 2370, column: 19, scope: !8343)
!8365 = !DILocation(line: 2371, column: 15, scope: !8343)
!8366 = !DILocation(line: 2373, column: 19, scope: !8343)
!8367 = !DILocation(line: 2374, column: 15, scope: !8343)
!8368 = !DILocation(line: 2376, column: 19, scope: !8343)
!8369 = !DILocation(line: 2377, column: 15, scope: !8343)
!8370 = !DILocation(line: 2379, column: 19, scope: !8343)
!8371 = !DILocation(line: 2380, column: 15, scope: !8343)
!8372 = !DILocation(line: 2382, column: 21, scope: !8343)
!8373 = !DILocation(line: 2383, column: 15, scope: !8343)
!8374 = !DILocation(line: 2385, column: 22, scope: !8343)
!8375 = !DILocation(line: 2385, column: 21, scope: !8343)
!8376 = !DILocation(line: 2385, column: 19, scope: !8343)
!8377 = !DILocation(line: 2386, column: 15, scope: !8343)
!8378 = !DILocation(line: 2388, column: 15, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2388, column: 15)
!8380 = !DILocation(line: 2388, column: 21, scope: !8379)
!8381 = !DILocation(line: 2388, column: 15, scope: !8313)
!8382 = !DILocation(line: 2390, column: 24, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 2389, column: 13)
!8384 = !DILocation(line: 2390, column: 18, scope: !8383)
!8385 = !DILocation(line: 2390, column: 22, scope: !8383)
!8386 = !DILocation(line: 2391, column: 15, scope: !8383)
!8387 = !DILocation(line: 2392, column: 21, scope: !8383)
!8388 = !DILocation(line: 2393, column: 13, scope: !8383)
!8389 = !DILocation(line: 2394, column: 11, scope: !8313)
!8390 = !DILocation(line: 2395, column: 11, scope: !8313)
!8391 = !DILocation(line: 2398, column: 16, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2398, column: 15)
!8393 = !DILocation(line: 2398, column: 15, scope: !8392)
!8394 = !DILocation(line: 2398, column: 18, scope: !8392)
!8395 = !DILocation(line: 2398, column: 24, scope: !8392)
!8396 = !DILocation(line: 2398, column: 28, scope: !8392)
!8397 = !DILocation(line: 2398, column: 27, scope: !8392)
!8398 = !DILocation(line: 2398, column: 30, scope: !8392)
!8399 = !DILocation(line: 2398, column: 15, scope: !8313)
!8400 = !DILocation(line: 2400, column: 24, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 2399, column: 13)
!8402 = !DILocation(line: 2400, column: 18, scope: !8401)
!8403 = !DILocation(line: 2400, column: 22, scope: !8401)
!8404 = !DILocation(line: 2401, column: 15, scope: !8401)
!8405 = !DILocation(line: 2402, column: 21, scope: !8401)
!8406 = !DILocation(line: 2403, column: 13, scope: !8401)
!8407 = !DILocation(line: 2405, column: 20, scope: !8392)
!8408 = !DILocation(line: 2405, column: 24, scope: !8392)
!8409 = !DILocation(line: 2405, column: 36, scope: !8392)
!8410 = !DILocation(line: 2405, column: 33, scope: !8392)
!8411 = !DILocation(line: 2405, column: 40, scope: !8392)
!8412 = !DILocation(line: 2405, column: 30, scope: !8392)
!8413 = !DILocation(line: 2405, column: 19, scope: !8392)
!8414 = !DILocation(line: 2405, column: 17, scope: !8392)
!8415 = !DILocation(line: 2406, column: 11, scope: !8313)
!8416 = !DILocation(line: 2409, column: 20, scope: !8313)
!8417 = !DILocation(line: 2409, column: 19, scope: !8313)
!8418 = !DILocation(line: 2409, column: 11, scope: !8313)
!8419 = !DILocation(line: 2421, column: 22, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2410, column: 13)
!8421 = !DILocation(line: 2421, column: 26, scope: !8420)
!8422 = !DILocation(line: 2421, column: 38, scope: !8420)
!8423 = !DILocation(line: 2421, column: 35, scope: !8420)
!8424 = !DILocation(line: 2421, column: 42, scope: !8420)
!8425 = !DILocation(line: 2421, column: 32, scope: !8420)
!8426 = !DILocation(line: 2421, column: 21, scope: !8420)
!8427 = !DILocation(line: 2421, column: 19, scope: !8420)
!8428 = !DILocation(line: 2422, column: 15, scope: !8420)
!8429 = !DILocation(line: 2429, column: 22, scope: !8420)
!8430 = !DILocation(line: 2429, column: 26, scope: !8420)
!8431 = !DILocation(line: 2429, column: 38, scope: !8420)
!8432 = !DILocation(line: 2429, column: 35, scope: !8420)
!8433 = !DILocation(line: 2429, column: 42, scope: !8420)
!8434 = !DILocation(line: 2429, column: 32, scope: !8420)
!8435 = !DILocation(line: 2429, column: 49, scope: !8420)
!8436 = !DILocation(line: 2429, column: 21, scope: !8420)
!8437 = !DILocation(line: 2429, column: 19, scope: !8420)
!8438 = !DILocation(line: 2430, column: 15, scope: !8420)
!8439 = !DILocation(line: 2437, column: 22, scope: !8420)
!8440 = !DILocation(line: 2437, column: 26, scope: !8420)
!8441 = !DILocation(line: 2437, column: 38, scope: !8420)
!8442 = !DILocation(line: 2437, column: 35, scope: !8420)
!8443 = !DILocation(line: 2437, column: 42, scope: !8420)
!8444 = !DILocation(line: 2437, column: 32, scope: !8420)
!8445 = !DILocation(line: 2437, column: 49, scope: !8420)
!8446 = !DILocation(line: 2437, column: 21, scope: !8420)
!8447 = !DILocation(line: 2437, column: 19, scope: !8420)
!8448 = !DILocation(line: 2438, column: 15, scope: !8420)
!8449 = !DILocation(line: 2440, column: 24, scope: !8420)
!8450 = !DILocation(line: 2440, column: 18, scope: !8420)
!8451 = !DILocation(line: 2440, column: 22, scope: !8420)
!8452 = !DILocation(line: 2441, column: 15, scope: !8420)
!8453 = !DILocation(line: 2442, column: 21, scope: !8420)
!8454 = !DILocation(line: 2443, column: 15, scope: !8420)
!8455 = !DILocation(line: 2445, column: 11, scope: !8313)
!8456 = !DILocation(line: 2448, column: 17, scope: !8313)
!8457 = !DILocation(line: 2449, column: 16, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2449, column: 15)
!8459 = !DILocation(line: 2449, column: 15, scope: !8458)
!8460 = !DILocation(line: 2449, column: 18, scope: !8458)
!8461 = !DILocation(line: 2449, column: 25, scope: !8458)
!8462 = !DILocation(line: 2449, column: 29, scope: !8458)
!8463 = !DILocation(line: 2449, column: 28, scope: !8458)
!8464 = !DILocation(line: 2449, column: 31, scope: !8458)
!8465 = !DILocation(line: 2449, column: 15, scope: !8313)
!8466 = !DILocation(line: 2451, column: 27, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 2450, column: 13)
!8468 = !DILocation(line: 2451, column: 24, scope: !8467)
!8469 = !DILocation(line: 2451, column: 31, scope: !8467)
!8470 = !DILocation(line: 2451, column: 18, scope: !8467)
!8471 = !DILocation(line: 2451, column: 22, scope: !8467)
!8472 = !DILocation(line: 2452, column: 15, scope: !8467)
!8473 = !DILocation(line: 2453, column: 13, scope: !8467)
!8474 = !DILocation(line: 2454, column: 21, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 2454, column: 20)
!8476 = !DILocation(line: 2454, column: 20, scope: !8475)
!8477 = !DILocation(line: 2454, column: 23, scope: !8475)
!8478 = !DILocation(line: 2454, column: 20, scope: !8458)
!8479 = !DILocation(line: 2456, column: 18, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2455, column: 13)
!8481 = !DILocation(line: 2456, column: 22, scope: !8480)
!8482 = !DILocation(line: 2457, column: 15, scope: !8480)
!8483 = !DILocation(line: 2458, column: 13, scope: !8480)
!8484 = !DILocation(line: 2460, column: 19, scope: !8475)
!8485 = !DILocation(line: 2461, column: 11, scope: !8313)
!8486 = !DILocation(line: 2464, column: 11, scope: !8313)
!8487 = distinct !{!8487, !8306, !8488}
!8488 = !DILocation(line: 2466, column: 5, scope: !138)
!8489 = !DILocation(line: 2468, column: 11, scope: !138)
!8490 = !DILocation(line: 2468, column: 4, scope: !138)
!8491 = !DILocation(line: 2468, column: 9, scope: !138)
!8492 = !DILocation(line: 2469, column: 10, scope: !138)
!8493 = !DILocation(line: 2469, column: 4, scope: !138)
!8494 = !DILocation(line: 2469, column: 8, scope: !138)
!8495 = !DILocation(line: 2470, column: 19, scope: !138)
!8496 = !DILocation(line: 2470, column: 4, scope: !138)
!8497 = !DILocation(line: 2470, column: 17, scope: !138)
!8498 = !DILocation(line: 2472, column: 10, scope: !138)
!8499 = !DILocation(line: 2472, column: 16, scope: !138)
!8500 = !DILocation(line: 2472, column: 3, scope: !138)
!8501 = distinct !DISubprogram(name: "getenv_quoting_style", scope: !3, file: !3, line: 2655, type: !526, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8502 = !DILocalVariable(name: "q_style", scope: !8501, file: !3, line: 2657, type: !146)
!8503 = !DILocation(line: 2657, column: 15, scope: !8501)
!8504 = !DILocation(line: 2657, column: 25, scope: !8501)
!8505 = !DILocation(line: 2658, column: 7, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2658, column: 7)
!8507 = !DILocation(line: 2658, column: 7, scope: !8501)
!8508 = !DILocalVariable(name: "i", scope: !8509, file: !3, line: 2660, type: !27)
!8509 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 2659, column: 5)
!8510 = !DILocation(line: 2660, column: 11, scope: !8509)
!8511 = !DILocation(line: 2660, column: 15, scope: !8509)
!8512 = !DILocation(line: 2661, column: 16, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 2661, column: 11)
!8514 = !DILocation(line: 2661, column: 13, scope: !8513)
!8515 = !DILocation(line: 2661, column: 11, scope: !8509)
!8516 = !DILocation(line: 2662, column: 53, scope: !8513)
!8517 = !DILocation(line: 2662, column: 34, scope: !8513)
!8518 = !DILocation(line: 2662, column: 9, scope: !8513)
!8519 = !DILocation(line: 2665, column: 8, scope: !8513)
!8520 = !DILocation(line: 2666, column: 23, scope: !8513)
!8521 = !DILocation(line: 2666, column: 16, scope: !8513)
!8522 = !DILocation(line: 2664, column: 9, scope: !8513)
!8523 = !DILocation(line: 2667, column: 5, scope: !8509)
!8524 = !DILocation(line: 2668, column: 1, scope: !8501)
!8525 = distinct !DISubprogram(name: "set_line_length", scope: !3, file: !3, line: 1663, type: !4850, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8526 = !DILocalVariable(name: "spec", arg: 1, scope: !8525, file: !3, line: 1663, type: !146)
!8527 = !DILocation(line: 1663, column: 30, scope: !8525)
!8528 = !DILocalVariable(name: "val", scope: !8525, file: !3, line: 1665, type: !168)
!8529 = !DILocation(line: 1665, column: 13, scope: !8525)
!8530 = !DILocation(line: 1669, column: 23, scope: !8525)
!8531 = !DILocation(line: 1669, column: 11, scope: !8525)
!8532 = !DILocation(line: 1669, column: 3, scope: !8525)
!8533 = !DILocation(line: 1672, column: 21, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 1670, column: 5)
!8535 = !DILocation(line: 1672, column: 19, scope: !8534)
!8536 = !DILocation(line: 1673, column: 7, scope: !8534)
!8537 = !DILocation(line: 1676, column: 19, scope: !8534)
!8538 = !DILocation(line: 1677, column: 7, scope: !8534)
!8539 = !DILocation(line: 1680, column: 7, scope: !8534)
!8540 = !DILocation(line: 1682, column: 1, scope: !8525)
!8541 = distinct !DISubprogram(name: "add_ignore_pattern", scope: !3, file: !3, line: 2893, type: !823, scopeLine: 2894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8542 = !DILocalVariable(name: "pattern", arg: 1, scope: !8541, file: !3, line: 2893, type: !146)
!8543 = !DILocation(line: 2893, column: 33, scope: !8541)
!8544 = !DILocalVariable(name: "ignore", scope: !8541, file: !3, line: 2895, type: !605)
!8545 = !DILocation(line: 2895, column: 26, scope: !8541)
!8546 = !DILocation(line: 2897, column: 12, scope: !8541)
!8547 = !DILocation(line: 2897, column: 10, scope: !8541)
!8548 = !DILocation(line: 2898, column: 21, scope: !8541)
!8549 = !DILocation(line: 2898, column: 3, scope: !8541)
!8550 = !DILocation(line: 2898, column: 11, scope: !8541)
!8551 = !DILocation(line: 2898, column: 19, scope: !8541)
!8552 = !DILocation(line: 2900, column: 18, scope: !8541)
!8553 = !DILocation(line: 2900, column: 3, scope: !8541)
!8554 = !DILocation(line: 2900, column: 11, scope: !8541)
!8555 = !DILocation(line: 2900, column: 16, scope: !8541)
!8556 = !DILocation(line: 2901, column: 21, scope: !8541)
!8557 = !DILocation(line: 2901, column: 19, scope: !8541)
!8558 = !DILocation(line: 2902, column: 1, scope: !8541)
!8559 = distinct !DISubprogram(name: "bad_cast", scope: !821, file: !821, line: 695, type: !8560, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{!143, !146}
!8562 = !DILocalVariable(name: "s", arg: 1, scope: !8559, file: !821, line: 695, type: !146)
!8563 = !DILocation(line: 695, column: 23, scope: !8559)
!8564 = !DILocation(line: 697, column: 19, scope: !8559)
!8565 = !DILocation(line: 697, column: 3, scope: !8559)
!8566 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 5127, type: !173, scopeLine: 5128, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8567 = !DILocalVariable(name: "status", arg: 1, scope: !8566, file: !3, line: 5127, type: !27)
!8568 = !DILocation(line: 5127, column: 12, scope: !8566)
!8569 = !DILocation(line: 5129, column: 7, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 5129, column: 7)
!8571 = !DILocation(line: 5129, column: 14, scope: !8570)
!8572 = !DILocation(line: 5129, column: 7, scope: !8566)
!8573 = !DILocation(line: 5130, column: 5, scope: !8570)
!8574 = !DILocation(line: 5130, column: 5, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 5130, column: 5)
!8576 = !DILocation(line: 5133, column: 15, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 5132, column: 5)
!8578 = !DILocation(line: 5133, column: 55, scope: !8577)
!8579 = !DILocation(line: 5133, column: 7, scope: !8577)
!8580 = !DILocation(line: 5134, column: 7, scope: !8577)
!8581 = !DILocation(line: 5139, column: 7, scope: !8577)
!8582 = !DILocation(line: 5141, column: 7, scope: !8577)
!8583 = !DILocation(line: 5147, column: 7, scope: !8577)
!8584 = !DILocation(line: 5151, column: 7, scope: !8577)
!8585 = !DILocation(line: 5158, column: 7, scope: !8577)
!8586 = !DILocation(line: 5167, column: 7, scope: !8577)
!8587 = !DILocation(line: 5175, column: 7, scope: !8577)
!8588 = !DILocation(line: 5178, column: 7, scope: !8577)
!8589 = !DILocation(line: 5184, column: 7, scope: !8577)
!8590 = !DILocation(line: 5187, column: 7, scope: !8577)
!8591 = !DILocation(line: 5191, column: 7, scope: !8577)
!8592 = !DILocation(line: 5201, column: 7, scope: !8577)
!8593 = !DILocation(line: 5205, column: 7, scope: !8577)
!8594 = !DILocation(line: 5214, column: 7, scope: !8577)
!8595 = !DILocation(line: 5218, column: 7, scope: !8577)
!8596 = !DILocation(line: 5226, column: 7, scope: !8577)
!8597 = !DILocation(line: 5233, column: 7, scope: !8577)
!8598 = !DILocation(line: 5244, column: 7, scope: !8577)
!8599 = !DILocation(line: 5249, column: 7, scope: !8577)
!8600 = !DILocation(line: 5260, column: 7, scope: !8577)
!8601 = !DILocation(line: 5263, column: 7, scope: !8577)
!8602 = !DILocation(line: 5267, column: 7, scope: !8577)
!8603 = !DILocation(line: 5274, column: 7, scope: !8577)
!8604 = !DILocation(line: 5282, column: 7, scope: !8577)
!8605 = !DILocation(line: 5283, column: 7, scope: !8577)
!8606 = !DILocation(line: 5284, column: 7, scope: !8577)
!8607 = !DILocation(line: 5285, column: 7, scope: !8577)
!8608 = !DILocation(line: 5293, column: 7, scope: !8577)
!8609 = !DILocation(line: 5300, column: 7, scope: !8577)
!8610 = !DILocation(line: 5307, column: 28, scope: !8577)
!8611 = !DILocation(line: 5307, column: 7, scope: !8577)
!8612 = !DILocation(line: 5309, column: 9, scope: !8566)
!8613 = !DILocation(line: 5309, column: 3, scope: !8566)
!8614 = distinct !DISubprogram(name: "abformat_init", scope: !3, file: !3, line: 1152, type: !526, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8615 = !DILocalVariable(name: "pb", scope: !8614, file: !3, line: 1154, type: !674)
!8616 = !DILocation(line: 1154, column: 15, scope: !8614)
!8617 = !DILocalVariable(name: "recent", scope: !8618, file: !3, line: 1155, type: !27)
!8618 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 1155, column: 3)
!8619 = !DILocation(line: 1155, column: 12, scope: !8618)
!8620 = !DILocation(line: 1155, column: 8, scope: !8618)
!8621 = !DILocation(line: 1155, column: 24, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1155, column: 3)
!8623 = !DILocation(line: 1155, column: 31, scope: !8622)
!8624 = !DILocation(line: 1155, column: 3, scope: !8618)
!8625 = !DILocation(line: 1156, column: 52, scope: !8622)
!8626 = !DILocation(line: 1156, column: 35, scope: !8622)
!8627 = !DILocation(line: 1156, column: 18, scope: !8622)
!8628 = !DILocation(line: 1156, column: 8, scope: !8622)
!8629 = !DILocation(line: 1156, column: 5, scope: !8622)
!8630 = !DILocation(line: 1156, column: 16, scope: !8622)
!8631 = !DILocation(line: 1155, column: 42, scope: !8622)
!8632 = !DILocation(line: 1155, column: 3, scope: !8622)
!8633 = distinct !{!8633, !8624, !8634}
!8634 = !DILocation(line: 1156, column: 59, scope: !8618)
!8635 = !DILocation(line: 1157, column: 10, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 1157, column: 7)
!8637 = !DILocation(line: 1157, column: 16, scope: !8636)
!8638 = !DILocation(line: 1157, column: 19, scope: !8636)
!8639 = !DILocation(line: 1157, column: 7, scope: !8614)
!8640 = !DILocation(line: 1158, column: 5, scope: !8636)
!8641 = !DILocalVariable(name: "abmon", scope: !8614, file: !3, line: 1160, type: !688)
!8642 = !DILocation(line: 1160, column: 8, scope: !8614)
!8643 = !DILocation(line: 1161, column: 21, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 1161, column: 7)
!8645 = !DILocation(line: 1161, column: 9, scope: !8644)
!8646 = !DILocation(line: 1161, column: 7, scope: !8614)
!8647 = !DILocation(line: 1162, column: 5, scope: !8644)
!8648 = !DILocalVariable(name: "recent", scope: !8649, file: !3, line: 1164, type: !27)
!8649 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 1164, column: 3)
!8650 = !DILocation(line: 1164, column: 12, scope: !8649)
!8651 = !DILocation(line: 1164, column: 8, scope: !8649)
!8652 = !DILocation(line: 1164, column: 24, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 1164, column: 3)
!8654 = !DILocation(line: 1164, column: 31, scope: !8653)
!8655 = !DILocation(line: 1164, column: 3, scope: !8649)
!8656 = !DILocalVariable(name: "fmt", scope: !8657, file: !3, line: 1166, type: !146)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 1165, column: 5)
!8658 = !DILocation(line: 1166, column: 19, scope: !8657)
!8659 = !DILocation(line: 1166, column: 42, scope: !8657)
!8660 = !DILocation(line: 1166, column: 25, scope: !8657)
!8661 = !DILocalVariable(name: "i", scope: !8662, file: !3, line: 1167, type: !27)
!8662 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 1167, column: 7)
!8663 = !DILocation(line: 1167, column: 16, scope: !8662)
!8664 = !DILocation(line: 1167, column: 12, scope: !8662)
!8665 = !DILocation(line: 1167, column: 23, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 1167, column: 7)
!8667 = !DILocation(line: 1167, column: 25, scope: !8666)
!8668 = !DILocation(line: 1167, column: 7, scope: !8662)
!8669 = !DILocalVariable(name: "nfmt", scope: !8670, file: !3, line: 1169, type: !143)
!8670 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 1168, column: 9)
!8671 = !DILocation(line: 1169, column: 17, scope: !8670)
!8672 = !DILocation(line: 1169, column: 33, scope: !8670)
!8673 = !DILocation(line: 1169, column: 24, scope: !8670)
!8674 = !DILocation(line: 1169, column: 41, scope: !8670)
!8675 = !DILocalVariable(name: "nbytes", scope: !8670, file: !3, line: 1170, type: !27)
!8676 = !DILocation(line: 1170, column: 15, scope: !8670)
!8677 = !DILocation(line: 1172, column: 20, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 1172, column: 15)
!8679 = !DILocation(line: 1172, column: 17, scope: !8678)
!8680 = !DILocation(line: 1172, column: 15, scope: !8670)
!8681 = !DILocation(line: 1173, column: 32, scope: !8678)
!8682 = !DILocation(line: 1173, column: 59, scope: !8678)
!8683 = !DILocation(line: 1173, column: 22, scope: !8678)
!8684 = !DILocation(line: 1173, column: 20, scope: !8678)
!8685 = !DILocation(line: 1173, column: 13, scope: !8678)
!8686 = !DILocation(line: 1176, column: 25, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 1176, column: 19)
!8688 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1175, column: 13)
!8689 = !DILocation(line: 1176, column: 22, scope: !8687)
!8690 = !DILocation(line: 1176, column: 35, scope: !8687)
!8691 = !DILocation(line: 1176, column: 33, scope: !8687)
!8692 = !DILocation(line: 1176, column: 39, scope: !8687)
!8693 = !DILocation(line: 1176, column: 19, scope: !8688)
!8694 = !DILocation(line: 1177, column: 17, scope: !8687)
!8695 = !DILocalVariable(name: "prefix_len", scope: !8688, file: !3, line: 1178, type: !27)
!8696 = !DILocation(line: 1178, column: 19, scope: !8688)
!8697 = !DILocation(line: 1178, column: 35, scope: !8688)
!8698 = !DILocation(line: 1178, column: 32, scope: !8688)
!8699 = !DILocation(line: 1178, column: 45, scope: !8688)
!8700 = !DILocation(line: 1178, column: 43, scope: !8688)
!8701 = !DILocation(line: 1179, column: 34, scope: !8688)
!8702 = !DILocation(line: 1180, column: 34, scope: !8688)
!8703 = !DILocation(line: 1180, column: 46, scope: !8688)
!8704 = !DILocation(line: 1180, column: 57, scope: !8688)
!8705 = !DILocation(line: 1180, column: 51, scope: !8688)
!8706 = !DILocation(line: 1180, column: 64, scope: !8688)
!8707 = !DILocation(line: 1180, column: 61, scope: !8688)
!8708 = !DILocation(line: 1180, column: 72, scope: !8688)
!8709 = !DILocation(line: 1179, column: 24, scope: !8688)
!8710 = !DILocation(line: 1179, column: 22, scope: !8688)
!8711 = !DILocation(line: 1183, column: 23, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 1183, column: 15)
!8713 = !DILocation(line: 1183, column: 20, scope: !8712)
!8714 = !DILocation(line: 1183, column: 30, scope: !8712)
!8715 = !DILocation(line: 1183, column: 33, scope: !8712)
!8716 = !DILocation(line: 1183, column: 40, scope: !8712)
!8717 = !DILocation(line: 1183, column: 15, scope: !8670)
!8718 = !DILocation(line: 1184, column: 13, scope: !8712)
!8719 = !DILocation(line: 1185, column: 9, scope: !8670)
!8720 = !DILocation(line: 1167, column: 32, scope: !8666)
!8721 = !DILocation(line: 1167, column: 7, scope: !8666)
!8722 = distinct !{!8722, !8668, !8723}
!8723 = !DILocation(line: 1185, column: 9, scope: !8662)
!8724 = !DILocation(line: 1186, column: 5, scope: !8657)
!8725 = !DILocation(line: 1164, column: 42, scope: !8653)
!8726 = !DILocation(line: 1164, column: 3, scope: !8653)
!8727 = distinct !{!8727, !8655, !8728}
!8728 = !DILocation(line: 1186, column: 5, scope: !8649)
!8729 = !DILocation(line: 1188, column: 16, scope: !8614)
!8730 = !DILocation(line: 1189, column: 1, scope: !8614)
!8731 = distinct !DISubprogram(name: "first_percent_b", scope: !3, file: !3, line: 1071, type: !8732, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!146, !146}
!8734 = !DILocalVariable(name: "fmt", arg: 1, scope: !8731, file: !3, line: 1071, type: !146)
!8735 = !DILocation(line: 1071, column: 30, scope: !8731)
!8736 = !DILocation(line: 1073, column: 3, scope: !8731)
!8737 = !DILocation(line: 1073, column: 11, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 1073, column: 3)
!8739 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 1073, column: 3)
!8740 = !DILocation(line: 1073, column: 10, scope: !8738)
!8741 = !DILocation(line: 1073, column: 3, scope: !8739)
!8742 = !DILocation(line: 1074, column: 9, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 1074, column: 9)
!8744 = !DILocation(line: 1074, column: 16, scope: !8743)
!8745 = !DILocation(line: 1074, column: 9, scope: !8738)
!8746 = !DILocation(line: 1075, column: 15, scope: !8743)
!8747 = !DILocation(line: 1075, column: 7, scope: !8743)
!8748 = !DILocation(line: 1077, column: 26, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1076, column: 9)
!8750 = !DILocation(line: 1077, column: 19, scope: !8749)
!8751 = !DILocation(line: 1078, column: 22, scope: !8749)
!8752 = !DILocation(line: 1078, column: 26, scope: !8749)
!8753 = !DILocation(line: 1079, column: 9, scope: !8749)
!8754 = !DILocation(line: 1074, column: 19, scope: !8743)
!8755 = !DILocation(line: 1073, column: 19, scope: !8738)
!8756 = !DILocation(line: 1073, column: 3, scope: !8738)
!8757 = distinct !{!8757, !8741, !8758}
!8758 = !DILocation(line: 1079, column: 9, scope: !8739)
!8759 = !DILocation(line: 1080, column: 3, scope: !8731)
!8760 = !DILocation(line: 1081, column: 1, scope: !8731)
!8761 = distinct !DISubprogram(name: "abmon_init", scope: !3, file: !3, line: 1117, type: !8762, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8762 = !DISubroutineType(types: !8763)
!8763 = !{!141, !8764}
!8764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!8765 = !DILocalVariable(name: "abmon", arg: 1, scope: !8761, file: !3, line: 1117, type: !8764)
!8766 = !DILocation(line: 1117, column: 18, scope: !8761)
!8767 = !DILocalVariable(name: "required_mon_width", scope: !8761, file: !3, line: 1122, type: !149)
!8768 = !DILocation(line: 1122, column: 10, scope: !8761)
!8769 = !DILocalVariable(name: "curr_max_width", scope: !8761, file: !3, line: 1123, type: !149)
!8770 = !DILocation(line: 1123, column: 10, scope: !8761)
!8771 = !DILocation(line: 1124, column: 3, scope: !8761)
!8772 = !DILocation(line: 1126, column: 24, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 1125, column: 5)
!8774 = !DILocation(line: 1126, column: 22, scope: !8773)
!8775 = !DILocation(line: 1127, column: 26, scope: !8773)
!8776 = !DILocalVariable(name: "i", scope: !8777, file: !3, line: 1128, type: !27)
!8777 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 1128, column: 7)
!8778 = !DILocation(line: 1128, column: 16, scope: !8777)
!8779 = !DILocation(line: 1128, column: 12, scope: !8777)
!8780 = !DILocation(line: 1128, column: 23, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 1128, column: 7)
!8782 = !DILocation(line: 1128, column: 25, scope: !8781)
!8783 = !DILocation(line: 1128, column: 7, scope: !8777)
!8784 = !DILocalVariable(name: "width", scope: !8785, file: !3, line: 1130, type: !149)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 1129, column: 9)
!8786 = !DILocation(line: 1130, column: 18, scope: !8785)
!8787 = !DILocation(line: 1130, column: 26, scope: !8785)
!8788 = !DILocalVariable(name: "abbr", scope: !8785, file: !3, line: 1131, type: !146)
!8789 = !DILocation(line: 1131, column: 23, scope: !8785)
!8790 = !DILocation(line: 1131, column: 53, scope: !8785)
!8791 = !DILocation(line: 1131, column: 51, scope: !8785)
!8792 = !DILocation(line: 1131, column: 30, scope: !8785)
!8793 = !DILocation(line: 1132, column: 23, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 1132, column: 15)
!8795 = !DILocation(line: 1132, column: 15, scope: !8794)
!8796 = !DILocation(line: 1132, column: 15, scope: !8785)
!8797 = !DILocation(line: 1133, column: 13, scope: !8794)
!8798 = !DILocalVariable(name: "alignment", scope: !8785, file: !3, line: 1134, type: !695)
!8799 = !DILocation(line: 1134, column: 23, scope: !8785)
!8800 = !DILocation(line: 1134, column: 35, scope: !8785)
!8801 = !DILocalVariable(name: "req", scope: !8785, file: !3, line: 1136, type: !149)
!8802 = !DILocation(line: 1136, column: 18, scope: !8785)
!8803 = !DILocation(line: 1136, column: 34, scope: !8785)
!8804 = !DILocation(line: 1136, column: 40, scope: !8785)
!8805 = !DILocation(line: 1136, column: 46, scope: !8785)
!8806 = !DILocation(line: 1137, column: 42, scope: !8785)
!8807 = !DILocation(line: 1136, column: 24, scope: !8785)
!8808 = !DILocation(line: 1138, column: 18, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 1138, column: 15)
!8810 = !DILocation(line: 1138, column: 22, scope: !8809)
!8811 = !DILocation(line: 1138, column: 15, scope: !8785)
!8812 = !DILocation(line: 1139, column: 13, scope: !8809)
!8813 = !DILocation(line: 1140, column: 32, scope: !8785)
!8814 = !DILocation(line: 1140, column: 30, scope: !8785)
!8815 = !DILocation(line: 1141, column: 9, scope: !8785)
!8816 = !DILocation(line: 1128, column: 32, scope: !8781)
!8817 = !DILocation(line: 1128, column: 7, scope: !8781)
!8818 = distinct !{!8818, !8783, !8819}
!8819 = !DILocation(line: 1141, column: 9, scope: !8777)
!8820 = !DILocation(line: 1142, column: 5, scope: !8773)
!8821 = !DILocation(line: 1143, column: 10, scope: !8761)
!8822 = !DILocation(line: 1143, column: 27, scope: !8761)
!8823 = !DILocation(line: 1143, column: 25, scope: !8761)
!8824 = distinct !{!8824, !8771, !8825}
!8825 = !DILocation(line: 1143, column: 45, scope: !8761)
!8826 = !DILocation(line: 1145, column: 3, scope: !8761)
!8827 = !DILocation(line: 1147, column: 1, scope: !8761)
!8828 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !821, file: !821, line: 585, type: !526, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8829 = !DILocation(line: 587, column: 3, scope: !8828)
!8830 = !DILocation(line: 590, column: 1, scope: !8828)
!8831 = distinct !DISubprogram(name: "emit_size_note", scope: !821, file: !821, line: 593, type: !526, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8832 = !DILocation(line: 595, column: 3, scope: !8831)
!8833 = !DILocation(line: 600, column: 1, scope: !8831)
!8834 = !DILocalVariable(name: "program", arg: 1, scope: !822, file: !821, line: 631, type: !146)
!8835 = !DILocation(line: 631, column: 34, scope: !822)
!8836 = !DILocalVariable(name: "infomap", scope: !822, file: !821, line: 633, type: !818)
!8837 = !DILocation(line: 633, column: 67, scope: !822)
!8838 = !DILocalVariable(name: "node", scope: !822, file: !821, line: 643, type: !146)
!8839 = !DILocation(line: 643, column: 15, scope: !822)
!8840 = !DILocation(line: 643, column: 22, scope: !822)
!8841 = !DILocalVariable(name: "map_prog", scope: !822, file: !821, line: 644, type: !828)
!8842 = !DILocation(line: 644, column: 25, scope: !822)
!8843 = !DILocation(line: 644, column: 36, scope: !822)
!8844 = !DILocation(line: 646, column: 3, scope: !822)
!8845 = !DILocation(line: 646, column: 10, scope: !822)
!8846 = !DILocation(line: 646, column: 20, scope: !822)
!8847 = !DILocation(line: 646, column: 28, scope: !822)
!8848 = !DILocation(line: 646, column: 33, scope: !822)
!8849 = !DILocation(line: 646, column: 31, scope: !822)
!8850 = !DILocation(line: 0, scope: !822)
!8851 = !DILocation(line: 647, column: 13, scope: !822)
!8852 = distinct !{!8852, !8844, !8851}
!8853 = !DILocation(line: 649, column: 7, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !822, file: !821, line: 649, column: 7)
!8855 = !DILocation(line: 649, column: 17, scope: !8854)
!8856 = !DILocation(line: 649, column: 7, scope: !822)
!8857 = !DILocation(line: 650, column: 12, scope: !8854)
!8858 = !DILocation(line: 650, column: 22, scope: !8854)
!8859 = !DILocation(line: 650, column: 10, scope: !8854)
!8860 = !DILocation(line: 650, column: 5, scope: !8854)
!8861 = !DILocation(line: 652, column: 11, scope: !822)
!8862 = !DILocation(line: 652, column: 3, scope: !822)
!8863 = !DILocalVariable(name: "lc_messages", scope: !822, file: !821, line: 656, type: !146)
!8864 = !DILocation(line: 656, column: 15, scope: !822)
!8865 = !DILocation(line: 656, column: 29, scope: !822)
!8866 = !DILocation(line: 657, column: 7, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !822, file: !821, line: 657, column: 7)
!8868 = !DILocation(line: 657, column: 19, scope: !8867)
!8869 = !DILocation(line: 657, column: 22, scope: !8867)
!8870 = !DILocation(line: 657, column: 7, scope: !822)
!8871 = !DILocation(line: 663, column: 7, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8867, file: !821, line: 658, column: 5)
!8873 = !DILocation(line: 665, column: 5, scope: !8872)
!8874 = !DILocation(line: 666, column: 11, scope: !822)
!8875 = !DILocation(line: 667, column: 24, scope: !822)
!8876 = !DILocation(line: 666, column: 3, scope: !822)
!8877 = !DILocation(line: 668, column: 11, scope: !822)
!8878 = !DILocation(line: 669, column: 11, scope: !822)
!8879 = !DILocation(line: 669, column: 17, scope: !822)
!8880 = !DILocation(line: 669, column: 25, scope: !822)
!8881 = !DILocation(line: 669, column: 22, scope: !822)
!8882 = !DILocation(line: 668, column: 3, scope: !822)
!8883 = !DILocation(line: 670, column: 1, scope: !822)
!8884 = distinct !DISubprogram(name: "areadlink_with_size", scope: !8885, file: !8885, line: 53, type: !8886, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1510, retainedNodes: !152)
!8885 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!143, !146, !149}
!8888 = !DILocalVariable(name: "file", arg: 1, scope: !8884, file: !8885, line: 53, type: !146)
!8889 = !DILocation(line: 53, column: 34, scope: !8884)
!8890 = !DILocalVariable(name: "size", arg: 2, scope: !8884, file: !8885, line: 53, type: !149)
!8891 = !DILocation(line: 53, column: 47, scope: !8884)
!8892 = !DILocalVariable(name: "symlink_max", scope: !8884, file: !8885, line: 58, type: !149)
!8893 = !DILocation(line: 58, column: 10, scope: !8884)
!8894 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !8884, file: !8885, line: 59, type: !149)
!8895 = !DILocation(line: 59, column: 10, scope: !8884)
!8896 = !DILocalVariable(name: "initial_limit", scope: !8884, file: !8885, line: 60, type: !149)
!8897 = !DILocation(line: 60, column: 10, scope: !8884)
!8898 = !DILocation(line: 60, column: 27, scope: !8884)
!8899 = !DILocation(line: 60, column: 41, scope: !8884)
!8900 = !DILocation(line: 60, column: 39, scope: !8884)
!8901 = !DILocation(line: 61, column: 29, scope: !8884)
!8902 = !DILocation(line: 61, column: 41, scope: !8884)
!8903 = !DILocation(line: 62, column: 29, scope: !8884)
!8904 = !DILocalVariable(name: "buf_size", scope: !8884, file: !8885, line: 67, type: !149)
!8905 = !DILocation(line: 67, column: 10, scope: !8884)
!8906 = !DILocation(line: 67, column: 22, scope: !8884)
!8907 = !DILocation(line: 67, column: 27, scope: !8884)
!8908 = !DILocation(line: 68, column: 24, scope: !8884)
!8909 = !DILocation(line: 68, column: 31, scope: !8884)
!8910 = !DILocation(line: 68, column: 29, scope: !8884)
!8911 = !DILocation(line: 68, column: 47, scope: !8884)
!8912 = !DILocation(line: 68, column: 52, scope: !8884)
!8913 = !DILocation(line: 68, column: 58, scope: !8884)
!8914 = !DILocation(line: 70, column: 3, scope: !8884)
!8915 = !DILocalVariable(name: "r", scope: !8916, file: !8885, line: 72, type: !1513)
!8916 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 71, column: 5)
!8917 = !DILocation(line: 72, column: 15, scope: !8916)
!8918 = !DILocalVariable(name: "link_length", scope: !8916, file: !8885, line: 73, type: !149)
!8919 = !DILocation(line: 73, column: 14, scope: !8916)
!8920 = !DILocalVariable(name: "stackbuf", scope: !8916, file: !8885, line: 74, type: !693)
!8921 = !DILocation(line: 74, column: 12, scope: !8916)
!8922 = !DILocalVariable(name: "buf", scope: !8916, file: !8885, line: 75, type: !143)
!8923 = !DILocation(line: 75, column: 13, scope: !8916)
!8924 = !DILocation(line: 75, column: 19, scope: !8916)
!8925 = !DILocalVariable(name: "buffer", scope: !8916, file: !8885, line: 76, type: !143)
!8926 = !DILocation(line: 76, column: 13, scope: !8916)
!8927 = !DILocation(line: 78, column: 14, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8916, file: !8885, line: 78, column: 11)
!8929 = !DILocation(line: 78, column: 19, scope: !8928)
!8930 = !DILocation(line: 78, column: 24, scope: !8928)
!8931 = !DILocation(line: 78, column: 27, scope: !8928)
!8932 = !DILocation(line: 78, column: 36, scope: !8928)
!8933 = !DILocation(line: 78, column: 11, scope: !8916)
!8934 = !DILocation(line: 80, column: 34, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8928, file: !8885, line: 79, column: 9)
!8936 = !DILocation(line: 80, column: 26, scope: !8935)
!8937 = !DILocation(line: 80, column: 24, scope: !8935)
!8938 = !DILocation(line: 80, column: 15, scope: !8935)
!8939 = !DILocation(line: 81, column: 16, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8935, file: !8885, line: 81, column: 15)
!8941 = !DILocation(line: 81, column: 15, scope: !8935)
!8942 = !DILocation(line: 82, column: 13, scope: !8940)
!8943 = !DILocation(line: 83, column: 9, scope: !8935)
!8944 = !DILocation(line: 85, column: 21, scope: !8916)
!8945 = !DILocation(line: 85, column: 27, scope: !8916)
!8946 = !DILocation(line: 85, column: 32, scope: !8916)
!8947 = !DILocation(line: 85, column: 11, scope: !8916)
!8948 = !DILocation(line: 85, column: 9, scope: !8916)
!8949 = !DILocation(line: 86, column: 21, scope: !8916)
!8950 = !DILocation(line: 86, column: 19, scope: !8916)
!8951 = !DILocation(line: 90, column: 11, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8916, file: !8885, line: 90, column: 11)
!8953 = !DILocation(line: 90, column: 13, scope: !8952)
!8954 = !DILocation(line: 90, column: 17, scope: !8952)
!8955 = !DILocation(line: 90, column: 20, scope: !8952)
!8956 = !DILocation(line: 90, column: 26, scope: !8952)
!8957 = !DILocation(line: 90, column: 11, scope: !8916)
!8958 = !DILocalVariable(name: "saved_errno", scope: !8959, file: !8885, line: 92, type: !27)
!8959 = distinct !DILexicalBlock(scope: !8952, file: !8885, line: 91, column: 9)
!8960 = !DILocation(line: 92, column: 15, scope: !8959)
!8961 = !DILocation(line: 92, column: 29, scope: !8959)
!8962 = !DILocation(line: 93, column: 17, scope: !8959)
!8963 = !DILocation(line: 93, column: 11, scope: !8959)
!8964 = !DILocation(line: 94, column: 19, scope: !8959)
!8965 = !DILocation(line: 94, column: 11, scope: !8959)
!8966 = !DILocation(line: 94, column: 17, scope: !8959)
!8967 = !DILocation(line: 95, column: 11, scope: !8959)
!8968 = !DILocation(line: 98, column: 11, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8916, file: !8885, line: 98, column: 11)
!8970 = !DILocation(line: 98, column: 25, scope: !8969)
!8971 = !DILocation(line: 98, column: 23, scope: !8969)
!8972 = !DILocation(line: 98, column: 11, scope: !8916)
!8973 = !DILocation(line: 100, column: 11, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8969, file: !8885, line: 99, column: 9)
!8975 = !DILocation(line: 100, column: 15, scope: !8974)
!8976 = !DILocation(line: 100, column: 28, scope: !8974)
!8977 = !DILocation(line: 101, column: 16, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8974, file: !8885, line: 101, column: 15)
!8979 = !DILocation(line: 101, column: 15, scope: !8974)
!8980 = !DILocation(line: 103, column: 32, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8978, file: !8885, line: 102, column: 13)
!8982 = !DILocation(line: 103, column: 44, scope: !8981)
!8983 = !DILocation(line: 103, column: 24, scope: !8981)
!8984 = !DILocation(line: 103, column: 22, scope: !8981)
!8985 = !DILocation(line: 104, column: 19, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8981, file: !8885, line: 104, column: 19)
!8987 = !DILocation(line: 104, column: 19, scope: !8981)
!8988 = !DILocation(line: 105, column: 32, scope: !8986)
!8989 = !DILocation(line: 105, column: 40, scope: !8986)
!8990 = !DILocation(line: 105, column: 45, scope: !8986)
!8991 = !DILocation(line: 105, column: 57, scope: !8986)
!8992 = !DILocation(line: 105, column: 24, scope: !8986)
!8993 = !DILocation(line: 105, column: 17, scope: !8986)
!8994 = !DILocation(line: 106, column: 13, scope: !8981)
!8995 = !DILocation(line: 107, column: 20, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8978, file: !8885, line: 107, column: 20)
!8997 = !DILocation(line: 107, column: 32, scope: !8996)
!8998 = !DILocation(line: 107, column: 38, scope: !8996)
!8999 = !DILocation(line: 107, column: 36, scope: !8996)
!9000 = !DILocation(line: 107, column: 20, scope: !8978)
!9001 = !DILocalVariable(name: "shrinked_buffer", scope: !9002, file: !8885, line: 110, type: !143)
!9002 = distinct !DILexicalBlock(scope: !8996, file: !8885, line: 108, column: 13)
!9003 = !DILocation(line: 110, column: 21, scope: !9002)
!9004 = !DILocation(line: 110, column: 48, scope: !9002)
!9005 = !DILocation(line: 110, column: 56, scope: !9002)
!9006 = !DILocation(line: 110, column: 68, scope: !9002)
!9007 = !DILocation(line: 110, column: 39, scope: !9002)
!9008 = !DILocation(line: 111, column: 19, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9002, file: !8885, line: 111, column: 19)
!9010 = !DILocation(line: 111, column: 35, scope: !9009)
!9011 = !DILocation(line: 111, column: 19, scope: !9002)
!9012 = !DILocation(line: 112, column: 26, scope: !9009)
!9013 = !DILocation(line: 112, column: 24, scope: !9009)
!9014 = !DILocation(line: 112, column: 17, scope: !9009)
!9015 = !DILocation(line: 113, column: 13, scope: !9002)
!9016 = !DILocation(line: 114, column: 18, scope: !8974)
!9017 = !DILocation(line: 114, column: 11, scope: !8974)
!9018 = !DILocation(line: 117, column: 13, scope: !8916)
!9019 = !DILocation(line: 117, column: 7, scope: !8916)
!9020 = !DILocation(line: 118, column: 11, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8916, file: !8885, line: 118, column: 11)
!9022 = !DILocation(line: 118, column: 20, scope: !9021)
!9023 = !DILocation(line: 118, column: 11, scope: !8916)
!9024 = !DILocation(line: 119, column: 18, scope: !9021)
!9025 = !DILocation(line: 119, column: 9, scope: !9021)
!9026 = !DILocation(line: 120, column: 16, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9021, file: !8885, line: 120, column: 16)
!9028 = !DILocation(line: 120, column: 25, scope: !9027)
!9029 = !DILocation(line: 120, column: 16, scope: !9021)
!9030 = !DILocation(line: 121, column: 18, scope: !9027)
!9031 = !DILocation(line: 121, column: 9, scope: !9027)
!9032 = !DILocation(line: 124, column: 11, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9027, file: !8885, line: 123, column: 9)
!9034 = !DILocation(line: 124, column: 17, scope: !9033)
!9035 = !DILocation(line: 125, column: 11, scope: !9033)
!9036 = distinct !{!9036, !8914, !9037}
!9037 = !DILocation(line: 127, column: 5, scope: !8884)
!9038 = !DILocation(line: 128, column: 1, scope: !8884)
!9039 = distinct !DISubprogram(name: "__argmatch_die", scope: !1126, file: !1126, line: 60, type: !526, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1084, retainedNodes: !152)
!9040 = !DILocation(line: 62, column: 3, scope: !9039)
!9041 = !DILocation(line: 63, column: 1, scope: !9039)
!9042 = distinct !DISubprogram(name: "argmatch", scope: !1126, file: !1126, line: 82, type: !9043, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1084, retainedNodes: !152)
!9043 = !DISubroutineType(types: !9044)
!9044 = !{!675, !146, !681, !175, !149}
!9045 = !DILocalVariable(name: "arg", arg: 1, scope: !9042, file: !1126, line: 82, type: !146)
!9046 = !DILocation(line: 82, column: 23, scope: !9042)
!9047 = !DILocalVariable(name: "arglist", arg: 2, scope: !9042, file: !1126, line: 82, type: !681)
!9048 = !DILocation(line: 82, column: 47, scope: !9042)
!9049 = !DILocalVariable(name: "vallist", arg: 3, scope: !9042, file: !1126, line: 83, type: !175)
!9050 = !DILocation(line: 83, column: 23, scope: !9042)
!9051 = !DILocalVariable(name: "valsize", arg: 4, scope: !9042, file: !1126, line: 83, type: !149)
!9052 = !DILocation(line: 83, column: 39, scope: !9042)
!9053 = !DILocalVariable(name: "i", scope: !9042, file: !1126, line: 85, type: !149)
!9054 = !DILocation(line: 85, column: 10, scope: !9042)
!9055 = !DILocalVariable(name: "arglen", scope: !9042, file: !1126, line: 86, type: !149)
!9056 = !DILocation(line: 86, column: 10, scope: !9042)
!9057 = !DILocalVariable(name: "matchind", scope: !9042, file: !1126, line: 87, type: !675)
!9058 = !DILocation(line: 87, column: 13, scope: !9042)
!9059 = !DILocalVariable(name: "ambiguous", scope: !9042, file: !1126, line: 88, type: !141)
!9060 = !DILocation(line: 88, column: 8, scope: !9042)
!9061 = !DILocation(line: 90, column: 20, scope: !9042)
!9062 = !DILocation(line: 90, column: 12, scope: !9042)
!9063 = !DILocation(line: 90, column: 10, scope: !9042)
!9064 = !DILocation(line: 93, column: 10, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9042, file: !1126, line: 93, column: 3)
!9066 = !DILocation(line: 93, column: 8, scope: !9065)
!9067 = !DILocation(line: 93, column: 15, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9065, file: !1126, line: 93, column: 3)
!9069 = !DILocation(line: 93, column: 23, scope: !9068)
!9070 = !DILocation(line: 93, column: 3, scope: !9065)
!9071 = !DILocation(line: 95, column: 21, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !1126, line: 95, column: 11)
!9073 = distinct !DILexicalBlock(scope: !9068, file: !1126, line: 94, column: 5)
!9074 = !DILocation(line: 95, column: 29, scope: !9072)
!9075 = !DILocation(line: 95, column: 33, scope: !9072)
!9076 = !DILocation(line: 95, column: 38, scope: !9072)
!9077 = !DILocation(line: 95, column: 12, scope: !9072)
!9078 = !DILocation(line: 95, column: 11, scope: !9073)
!9079 = !DILocation(line: 97, column: 23, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !1126, line: 97, column: 15)
!9081 = distinct !DILexicalBlock(scope: !9072, file: !1126, line: 96, column: 9)
!9082 = !DILocation(line: 97, column: 31, scope: !9080)
!9083 = !DILocation(line: 97, column: 15, scope: !9080)
!9084 = !DILocation(line: 97, column: 38, scope: !9080)
!9085 = !DILocation(line: 97, column: 35, scope: !9080)
!9086 = !DILocation(line: 97, column: 15, scope: !9081)
!9087 = !DILocation(line: 99, column: 20, scope: !9080)
!9088 = !DILocation(line: 99, column: 13, scope: !9080)
!9089 = !DILocation(line: 100, column: 20, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9080, file: !1126, line: 100, column: 20)
!9091 = !DILocation(line: 100, column: 29, scope: !9090)
!9092 = !DILocation(line: 100, column: 20, scope: !9080)
!9093 = !DILocation(line: 102, column: 24, scope: !9090)
!9094 = !DILocation(line: 102, column: 22, scope: !9090)
!9095 = !DILocation(line: 102, column: 13, scope: !9090)
!9096 = !DILocation(line: 106, column: 19, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !1126, line: 106, column: 19)
!9098 = distinct !DILexicalBlock(scope: !9090, file: !1126, line: 104, column: 13)
!9099 = !DILocation(line: 106, column: 27, scope: !9097)
!9100 = !DILocation(line: 107, column: 19, scope: !9097)
!9101 = !DILocation(line: 107, column: 45, scope: !9097)
!9102 = !DILocation(line: 107, column: 55, scope: !9097)
!9103 = !DILocation(line: 107, column: 65, scope: !9097)
!9104 = !DILocation(line: 107, column: 63, scope: !9097)
!9105 = !DILocation(line: 107, column: 53, scope: !9097)
!9106 = !DILocation(line: 108, column: 45, scope: !9097)
!9107 = !DILocation(line: 108, column: 55, scope: !9097)
!9108 = !DILocation(line: 108, column: 65, scope: !9097)
!9109 = !DILocation(line: 108, column: 63, scope: !9097)
!9110 = !DILocation(line: 108, column: 53, scope: !9097)
!9111 = !DILocation(line: 108, column: 68, scope: !9097)
!9112 = !DILocation(line: 107, column: 22, scope: !9097)
!9113 = !DILocation(line: 106, column: 19, scope: !9098)
!9114 = !DILocation(line: 112, column: 29, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9097, file: !1126, line: 109, column: 17)
!9116 = !DILocation(line: 113, column: 17, scope: !9115)
!9117 = !DILocation(line: 115, column: 9, scope: !9081)
!9118 = !DILocation(line: 116, column: 5, scope: !9073)
!9119 = !DILocation(line: 93, column: 28, scope: !9068)
!9120 = !DILocation(line: 93, column: 3, scope: !9068)
!9121 = distinct !{!9121, !9070, !9122}
!9122 = !DILocation(line: 116, column: 5, scope: !9065)
!9123 = !DILocation(line: 117, column: 7, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9042, file: !1126, line: 117, column: 7)
!9125 = !DILocation(line: 117, column: 7, scope: !9042)
!9126 = !DILocation(line: 118, column: 5, scope: !9124)
!9127 = !DILocation(line: 120, column: 12, scope: !9124)
!9128 = !DILocation(line: 120, column: 5, scope: !9124)
!9129 = !DILocation(line: 121, column: 1, scope: !9042)
!9130 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1126, file: !1126, line: 129, type: !9131, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1084, retainedNodes: !152)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{null, !146, !146, !675}
!9133 = !DILocalVariable(name: "context", arg: 1, scope: !9130, file: !1126, line: 129, type: !146)
!9134 = !DILocation(line: 129, column: 31, scope: !9130)
!9135 = !DILocalVariable(name: "value", arg: 2, scope: !9130, file: !1126, line: 129, type: !146)
!9136 = !DILocation(line: 129, column: 52, scope: !9130)
!9137 = !DILocalVariable(name: "problem", arg: 3, scope: !9130, file: !1126, line: 129, type: !675)
!9138 = !DILocation(line: 129, column: 69, scope: !9130)
!9139 = !DILocalVariable(name: "format", scope: !9130, file: !1126, line: 131, type: !146)
!9140 = !DILocation(line: 131, column: 15, scope: !9130)
!9141 = !DILocation(line: 131, column: 25, scope: !9130)
!9142 = !DILocation(line: 131, column: 33, scope: !9130)
!9143 = !DILocation(line: 132, column: 27, scope: !9130)
!9144 = !DILocation(line: 133, column: 27, scope: !9130)
!9145 = !DILocation(line: 135, column: 16, scope: !9130)
!9146 = !DILocation(line: 135, column: 69, scope: !9130)
!9147 = !DILocation(line: 135, column: 24, scope: !9130)
!9148 = !DILocation(line: 136, column: 22, scope: !9130)
!9149 = !DILocation(line: 136, column: 10, scope: !9130)
!9150 = !DILocation(line: 135, column: 3, scope: !9130)
!9151 = !DILocation(line: 137, column: 1, scope: !9130)
!9152 = distinct !DISubprogram(name: "argmatch_valid", scope: !1126, file: !1126, line: 144, type: !9153, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1084, retainedNodes: !152)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{null, !681, !175, !149}
!9155 = !DILocalVariable(name: "arglist", arg: 1, scope: !9152, file: !1126, line: 144, type: !681)
!9156 = !DILocation(line: 144, column: 36, scope: !9152)
!9157 = !DILocalVariable(name: "vallist", arg: 2, scope: !9152, file: !1126, line: 145, type: !175)
!9158 = !DILocation(line: 145, column: 29, scope: !9152)
!9159 = !DILocalVariable(name: "valsize", arg: 3, scope: !9152, file: !1126, line: 145, type: !149)
!9160 = !DILocation(line: 145, column: 45, scope: !9152)
!9161 = !DILocalVariable(name: "i", scope: !9152, file: !1126, line: 147, type: !149)
!9162 = !DILocation(line: 147, column: 10, scope: !9152)
!9163 = !DILocalVariable(name: "last_val", scope: !9152, file: !1126, line: 148, type: !146)
!9164 = !DILocation(line: 148, column: 15, scope: !9152)
!9165 = !DILocation(line: 152, column: 3, scope: !9152)
!9166 = !DILocation(line: 153, column: 10, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9152, file: !1126, line: 153, column: 3)
!9168 = !DILocation(line: 153, column: 8, scope: !9167)
!9169 = !DILocation(line: 153, column: 15, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9167, file: !1126, line: 153, column: 3)
!9171 = !DILocation(line: 153, column: 23, scope: !9170)
!9172 = !DILocation(line: 153, column: 3, scope: !9167)
!9173 = !DILocation(line: 154, column: 10, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9170, file: !1126, line: 154, column: 9)
!9175 = !DILocation(line: 154, column: 12, scope: !9174)
!9176 = !DILocation(line: 155, column: 9, scope: !9174)
!9177 = !DILocation(line: 155, column: 20, scope: !9174)
!9178 = !DILocation(line: 155, column: 45, scope: !9174)
!9179 = !DILocation(line: 155, column: 55, scope: !9174)
!9180 = !DILocation(line: 155, column: 65, scope: !9174)
!9181 = !DILocation(line: 155, column: 63, scope: !9174)
!9182 = !DILocation(line: 155, column: 53, scope: !9174)
!9183 = !DILocation(line: 155, column: 68, scope: !9174)
!9184 = !DILocation(line: 155, column: 12, scope: !9174)
!9185 = !DILocation(line: 154, column: 9, scope: !9170)
!9186 = !DILocation(line: 157, column: 18, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9174, file: !1126, line: 156, column: 7)
!9188 = !DILocation(line: 157, column: 45, scope: !9187)
!9189 = !DILocation(line: 157, column: 53, scope: !9187)
!9190 = !DILocation(line: 157, column: 38, scope: !9187)
!9191 = !DILocation(line: 157, column: 9, scope: !9187)
!9192 = !DILocation(line: 158, column: 35, scope: !9187)
!9193 = !DILocation(line: 158, column: 45, scope: !9187)
!9194 = !DILocation(line: 158, column: 55, scope: !9187)
!9195 = !DILocation(line: 158, column: 53, scope: !9187)
!9196 = !DILocation(line: 158, column: 43, scope: !9187)
!9197 = !DILocation(line: 158, column: 18, scope: !9187)
!9198 = !DILocation(line: 159, column: 7, scope: !9187)
!9199 = !DILocation(line: 162, column: 18, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9174, file: !1126, line: 161, column: 7)
!9201 = !DILocation(line: 162, column: 41, scope: !9200)
!9202 = !DILocation(line: 162, column: 49, scope: !9200)
!9203 = !DILocation(line: 162, column: 34, scope: !9200)
!9204 = !DILocation(line: 162, column: 9, scope: !9200)
!9205 = !DILocation(line: 155, column: 75, scope: !9174)
!9206 = !DILocation(line: 153, column: 28, scope: !9170)
!9207 = !DILocation(line: 153, column: 3, scope: !9170)
!9208 = distinct !{!9208, !9172, !9209}
!9209 = !DILocation(line: 163, column: 7, scope: !9167)
!9210 = !DILocation(line: 164, column: 3, scope: !9152)
!9211 = !DILocation(line: 165, column: 1, scope: !9152)
!9212 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1126, file: !1126, line: 174, type: !9213, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1084, retainedNodes: !152)
!9213 = !DISubroutineType(types: !9214)
!9214 = !{!675, !146, !146, !681, !175, !149, !644}
!9215 = !DILocalVariable(name: "context", arg: 1, scope: !9212, file: !1126, line: 174, type: !146)
!9216 = !DILocation(line: 174, column: 35, scope: !9212)
!9217 = !DILocalVariable(name: "arg", arg: 2, scope: !9212, file: !1126, line: 175, type: !146)
!9218 = !DILocation(line: 175, column: 35, scope: !9212)
!9219 = !DILocalVariable(name: "arglist", arg: 3, scope: !9212, file: !1126, line: 175, type: !681)
!9220 = !DILocation(line: 175, column: 59, scope: !9212)
!9221 = !DILocalVariable(name: "vallist", arg: 4, scope: !9212, file: !1126, line: 176, type: !175)
!9222 = !DILocation(line: 176, column: 35, scope: !9212)
!9223 = !DILocalVariable(name: "valsize", arg: 5, scope: !9212, file: !1126, line: 176, type: !149)
!9224 = !DILocation(line: 176, column: 51, scope: !9212)
!9225 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !9212, file: !1126, line: 177, type: !644)
!9226 = !DILocation(line: 177, column: 40, scope: !9212)
!9227 = !DILocalVariable(name: "res", scope: !9212, file: !1126, line: 179, type: !675)
!9228 = !DILocation(line: 179, column: 13, scope: !9212)
!9229 = !DILocation(line: 179, column: 29, scope: !9212)
!9230 = !DILocation(line: 179, column: 34, scope: !9212)
!9231 = !DILocation(line: 179, column: 43, scope: !9212)
!9232 = !DILocation(line: 179, column: 52, scope: !9212)
!9233 = !DILocation(line: 179, column: 19, scope: !9212)
!9234 = !DILocation(line: 180, column: 7, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9212, file: !1126, line: 180, column: 7)
!9236 = !DILocation(line: 180, column: 11, scope: !9235)
!9237 = !DILocation(line: 180, column: 7, scope: !9212)
!9238 = !DILocation(line: 182, column: 12, scope: !9235)
!9239 = !DILocation(line: 182, column: 5, scope: !9235)
!9240 = !DILocation(line: 185, column: 21, scope: !9212)
!9241 = !DILocation(line: 185, column: 30, scope: !9212)
!9242 = !DILocation(line: 185, column: 35, scope: !9212)
!9243 = !DILocation(line: 185, column: 3, scope: !9212)
!9244 = !DILocation(line: 186, column: 19, scope: !9212)
!9245 = !DILocation(line: 186, column: 28, scope: !9212)
!9246 = !DILocation(line: 186, column: 37, scope: !9212)
!9247 = !DILocation(line: 186, column: 3, scope: !9212)
!9248 = !DILocation(line: 187, column: 5, scope: !9212)
!9249 = !DILocation(line: 187, column: 3, scope: !9212)
!9250 = !DILocation(line: 189, column: 3, scope: !9212)
!9251 = !DILocation(line: 190, column: 1, scope: !9212)
!9252 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1126, file: !1126, line: 195, type: !9253, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1084, retainedNodes: !152)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{!146, !175, !681, !175, !149}
!9255 = !DILocalVariable(name: "value", arg: 1, scope: !9252, file: !1126, line: 195, type: !175)
!9256 = !DILocation(line: 195, column: 35, scope: !9252)
!9257 = !DILocalVariable(name: "arglist", arg: 2, scope: !9252, file: !1126, line: 196, type: !681)
!9258 = !DILocation(line: 196, column: 42, scope: !9252)
!9259 = !DILocalVariable(name: "vallist", arg: 3, scope: !9252, file: !1126, line: 197, type: !175)
!9260 = !DILocation(line: 197, column: 35, scope: !9252)
!9261 = !DILocalVariable(name: "valsize", arg: 4, scope: !9252, file: !1126, line: 197, type: !149)
!9262 = !DILocation(line: 197, column: 51, scope: !9252)
!9263 = !DILocalVariable(name: "i", scope: !9252, file: !1126, line: 199, type: !149)
!9264 = !DILocation(line: 199, column: 10, scope: !9252)
!9265 = !DILocation(line: 201, column: 10, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9252, file: !1126, line: 201, column: 3)
!9267 = !DILocation(line: 201, column: 8, scope: !9266)
!9268 = !DILocation(line: 201, column: 15, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9266, file: !1126, line: 201, column: 3)
!9270 = !DILocation(line: 201, column: 23, scope: !9269)
!9271 = !DILocation(line: 201, column: 3, scope: !9266)
!9272 = !DILocation(line: 202, column: 18, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9269, file: !1126, line: 202, column: 9)
!9274 = !DILocation(line: 202, column: 40, scope: !9273)
!9275 = !DILocation(line: 202, column: 50, scope: !9273)
!9276 = !DILocation(line: 202, column: 60, scope: !9273)
!9277 = !DILocation(line: 202, column: 58, scope: !9273)
!9278 = !DILocation(line: 202, column: 48, scope: !9273)
!9279 = !DILocation(line: 202, column: 63, scope: !9273)
!9280 = !DILocation(line: 202, column: 10, scope: !9273)
!9281 = !DILocation(line: 202, column: 9, scope: !9269)
!9282 = !DILocation(line: 203, column: 14, scope: !9273)
!9283 = !DILocation(line: 203, column: 22, scope: !9273)
!9284 = !DILocation(line: 203, column: 7, scope: !9273)
!9285 = !DILocation(line: 202, column: 70, scope: !9273)
!9286 = !DILocation(line: 201, column: 28, scope: !9269)
!9287 = !DILocation(line: 201, column: 3, scope: !9269)
!9288 = distinct !{!9288, !9271, !9289}
!9289 = !DILocation(line: 203, column: 23, scope: !9266)
!9290 = !DILocation(line: 204, column: 3, scope: !9252)
!9291 = !DILocation(line: 205, column: 1, scope: !9252)
!9292 = distinct !DISubprogram(name: "c_isalnum", scope: !9293, file: !9293, line: 169, type: !8049, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9293 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!9294 = !DILocalVariable(name: "c", arg: 1, scope: !9292, file: !9293, line: 169, type: !27)
!9295 = !DILocation(line: 169, column: 16, scope: !9292)
!9296 = !DILocation(line: 171, column: 11, scope: !9292)
!9297 = !DILocation(line: 171, column: 3, scope: !9292)
!9298 = !DILocation(line: 176, column: 7, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9292, file: !9293, line: 172, column: 5)
!9300 = !DILocation(line: 178, column: 7, scope: !9299)
!9301 = !DILocation(line: 180, column: 1, scope: !9292)
!9302 = distinct !DISubprogram(name: "c_isalpha", scope: !9293, file: !9293, line: 183, type: !8049, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9303 = !DILocalVariable(name: "c", arg: 1, scope: !9302, file: !9293, line: 183, type: !27)
!9304 = !DILocation(line: 183, column: 16, scope: !9302)
!9305 = !DILocation(line: 185, column: 11, scope: !9302)
!9306 = !DILocation(line: 185, column: 3, scope: !9302)
!9307 = !DILocation(line: 189, column: 7, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9302, file: !9293, line: 186, column: 5)
!9309 = !DILocation(line: 191, column: 7, scope: !9308)
!9310 = !DILocation(line: 193, column: 1, scope: !9302)
!9311 = distinct !DISubprogram(name: "c_isascii", scope: !9293, file: !9293, line: 198, type: !8049, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9312 = !DILocalVariable(name: "c", arg: 1, scope: !9311, file: !9293, line: 198, type: !27)
!9313 = !DILocation(line: 198, column: 16, scope: !9311)
!9314 = !DILocation(line: 200, column: 11, scope: !9311)
!9315 = !DILocation(line: 200, column: 3, scope: !9311)
!9316 = !DILocation(line: 208, column: 7, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9311, file: !9293, line: 201, column: 5)
!9318 = !DILocation(line: 210, column: 7, scope: !9317)
!9319 = !DILocation(line: 212, column: 1, scope: !9311)
!9320 = distinct !DISubprogram(name: "c_isblank", scope: !9293, file: !9293, line: 215, type: !8049, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9321 = !DILocalVariable(name: "c", arg: 1, scope: !9320, file: !9293, line: 215, type: !27)
!9322 = !DILocation(line: 215, column: 16, scope: !9320)
!9323 = !DILocation(line: 217, column: 10, scope: !9320)
!9324 = !DILocation(line: 217, column: 12, scope: !9320)
!9325 = !DILocation(line: 217, column: 19, scope: !9320)
!9326 = !DILocation(line: 217, column: 22, scope: !9320)
!9327 = !DILocation(line: 217, column: 24, scope: !9320)
!9328 = !DILocation(line: 217, column: 3, scope: !9320)
!9329 = distinct !DISubprogram(name: "c_iscntrl", scope: !9293, file: !9293, line: 221, type: !8049, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9330 = !DILocalVariable(name: "c", arg: 1, scope: !9329, file: !9293, line: 221, type: !27)
!9331 = !DILocation(line: 221, column: 16, scope: !9329)
!9332 = !DILocation(line: 223, column: 11, scope: !9329)
!9333 = !DILocation(line: 223, column: 3, scope: !9329)
!9334 = !DILocation(line: 226, column: 7, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9329, file: !9293, line: 224, column: 5)
!9336 = !DILocation(line: 228, column: 7, scope: !9335)
!9337 = !DILocation(line: 230, column: 1, scope: !9329)
!9338 = distinct !DISubprogram(name: "c_isdigit", scope: !9293, file: !9293, line: 233, type: !8049, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9339 = !DILocalVariable(name: "c", arg: 1, scope: !9338, file: !9293, line: 233, type: !27)
!9340 = !DILocation(line: 233, column: 16, scope: !9338)
!9341 = !DILocation(line: 235, column: 11, scope: !9338)
!9342 = !DILocation(line: 235, column: 3, scope: !9338)
!9343 = !DILocation(line: 238, column: 7, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9338, file: !9293, line: 236, column: 5)
!9345 = !DILocation(line: 240, column: 7, scope: !9344)
!9346 = !DILocation(line: 242, column: 1, scope: !9338)
!9347 = distinct !DISubprogram(name: "c_isgraph", scope: !9293, file: !9293, line: 245, type: !8049, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9348 = !DILocalVariable(name: "c", arg: 1, scope: !9347, file: !9293, line: 245, type: !27)
!9349 = !DILocation(line: 245, column: 16, scope: !9347)
!9350 = !DILocation(line: 247, column: 11, scope: !9347)
!9351 = !DILocation(line: 247, column: 3, scope: !9347)
!9352 = !DILocation(line: 253, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9347, file: !9293, line: 248, column: 5)
!9354 = !DILocation(line: 255, column: 7, scope: !9353)
!9355 = !DILocation(line: 257, column: 1, scope: !9347)
!9356 = distinct !DISubprogram(name: "c_islower", scope: !9293, file: !9293, line: 260, type: !8049, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9357 = !DILocalVariable(name: "c", arg: 1, scope: !9356, file: !9293, line: 260, type: !27)
!9358 = !DILocation(line: 260, column: 16, scope: !9356)
!9359 = !DILocation(line: 262, column: 11, scope: !9356)
!9360 = !DILocation(line: 262, column: 3, scope: !9356)
!9361 = !DILocation(line: 265, column: 7, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9356, file: !9293, line: 263, column: 5)
!9363 = !DILocation(line: 267, column: 7, scope: !9362)
!9364 = !DILocation(line: 269, column: 1, scope: !9356)
!9365 = distinct !DISubprogram(name: "c_isprint", scope: !9293, file: !9293, line: 272, type: !8049, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9366 = !DILocalVariable(name: "c", arg: 1, scope: !9365, file: !9293, line: 272, type: !27)
!9367 = !DILocation(line: 272, column: 16, scope: !9365)
!9368 = !DILocation(line: 274, column: 11, scope: !9365)
!9369 = !DILocation(line: 274, column: 3, scope: !9365)
!9370 = !DILocation(line: 281, column: 7, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9365, file: !9293, line: 275, column: 5)
!9372 = !DILocation(line: 283, column: 7, scope: !9371)
!9373 = !DILocation(line: 285, column: 1, scope: !9365)
!9374 = distinct !DISubprogram(name: "c_ispunct", scope: !9293, file: !9293, line: 288, type: !8049, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9375 = !DILocalVariable(name: "c", arg: 1, scope: !9374, file: !9293, line: 288, type: !27)
!9376 = !DILocation(line: 288, column: 16, scope: !9374)
!9377 = !DILocation(line: 290, column: 11, scope: !9374)
!9378 = !DILocation(line: 290, column: 3, scope: !9374)
!9379 = !DILocation(line: 293, column: 7, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9374, file: !9293, line: 291, column: 5)
!9381 = !DILocation(line: 295, column: 7, scope: !9380)
!9382 = !DILocation(line: 297, column: 1, scope: !9374)
!9383 = distinct !DISubprogram(name: "c_isspace", scope: !9293, file: !9293, line: 300, type: !8049, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9384 = !DILocalVariable(name: "c", arg: 1, scope: !9383, file: !9293, line: 300, type: !27)
!9385 = !DILocation(line: 300, column: 16, scope: !9383)
!9386 = !DILocation(line: 302, column: 11, scope: !9383)
!9387 = !DILocation(line: 302, column: 3, scope: !9383)
!9388 = !DILocation(line: 305, column: 7, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9383, file: !9293, line: 303, column: 5)
!9390 = !DILocation(line: 307, column: 7, scope: !9389)
!9391 = !DILocation(line: 309, column: 1, scope: !9383)
!9392 = distinct !DISubprogram(name: "c_isupper", scope: !9293, file: !9293, line: 312, type: !8049, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9393 = !DILocalVariable(name: "c", arg: 1, scope: !9392, file: !9293, line: 312, type: !27)
!9394 = !DILocation(line: 312, column: 16, scope: !9392)
!9395 = !DILocation(line: 314, column: 11, scope: !9392)
!9396 = !DILocation(line: 314, column: 3, scope: !9392)
!9397 = !DILocation(line: 317, column: 7, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9392, file: !9293, line: 315, column: 5)
!9399 = !DILocation(line: 319, column: 7, scope: !9398)
!9400 = !DILocation(line: 321, column: 1, scope: !9392)
!9401 = distinct !DISubprogram(name: "c_isxdigit", scope: !9293, file: !9293, line: 324, type: !8049, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9402 = !DILocalVariable(name: "c", arg: 1, scope: !9401, file: !9293, line: 324, type: !27)
!9403 = !DILocation(line: 324, column: 17, scope: !9401)
!9404 = !DILocation(line: 326, column: 11, scope: !9401)
!9405 = !DILocation(line: 326, column: 3, scope: !9401)
!9406 = !DILocation(line: 330, column: 7, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9401, file: !9293, line: 327, column: 5)
!9408 = !DILocation(line: 332, column: 7, scope: !9407)
!9409 = !DILocation(line: 334, column: 1, scope: !9401)
!9410 = distinct !DISubprogram(name: "c_tolower", scope: !9293, file: !9293, line: 337, type: !9411, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9411 = !DISubroutineType(types: !9412)
!9412 = !{!27, !27}
!9413 = !DILocalVariable(name: "c", arg: 1, scope: !9410, file: !9293, line: 337, type: !27)
!9414 = !DILocation(line: 337, column: 16, scope: !9410)
!9415 = !DILocation(line: 339, column: 11, scope: !9410)
!9416 = !DILocation(line: 339, column: 3, scope: !9410)
!9417 = !DILocation(line: 342, column: 14, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9410, file: !9293, line: 340, column: 5)
!9419 = !DILocation(line: 342, column: 16, scope: !9418)
!9420 = !DILocation(line: 342, column: 22, scope: !9418)
!9421 = !DILocation(line: 342, column: 7, scope: !9418)
!9422 = !DILocation(line: 344, column: 14, scope: !9418)
!9423 = !DILocation(line: 344, column: 7, scope: !9418)
!9424 = !DILocation(line: 346, column: 1, scope: !9410)
!9425 = distinct !DISubprogram(name: "c_toupper", scope: !9293, file: !9293, line: 349, type: !9411, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1515, retainedNodes: !152)
!9426 = !DILocalVariable(name: "c", arg: 1, scope: !9425, file: !9293, line: 349, type: !27)
!9427 = !DILocation(line: 349, column: 16, scope: !9425)
!9428 = !DILocation(line: 351, column: 11, scope: !9425)
!9429 = !DILocation(line: 351, column: 3, scope: !9425)
!9430 = !DILocation(line: 354, column: 14, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9425, file: !9293, line: 352, column: 5)
!9432 = !DILocation(line: 354, column: 16, scope: !9431)
!9433 = !DILocation(line: 354, column: 22, scope: !9431)
!9434 = !DILocation(line: 354, column: 7, scope: !9431)
!9435 = !DILocation(line: 356, column: 14, scope: !9431)
!9436 = !DILocation(line: 356, column: 7, scope: !9431)
!9437 = !DILocation(line: 358, column: 1, scope: !9425)
!9438 = distinct !DISubprogram(name: "c_strncasecmp", scope: !9439, file: !9439, line: 27, type: !9440, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1517, retainedNodes: !152)
!9439 = !DIFile(filename: "lib/c-strncasecmp.c", directory: "/home/mohamad/clone/coreutils")
!9440 = !DISubroutineType(types: !9441)
!9441 = !{!27, !146, !146, !149}
!9442 = !DILocalVariable(name: "s1", arg: 1, scope: !9438, file: !9439, line: 27, type: !146)
!9443 = !DILocation(line: 27, column: 28, scope: !9438)
!9444 = !DILocalVariable(name: "s2", arg: 2, scope: !9438, file: !9439, line: 27, type: !146)
!9445 = !DILocation(line: 27, column: 44, scope: !9438)
!9446 = !DILocalVariable(name: "n", arg: 3, scope: !9438, file: !9439, line: 27, type: !149)
!9447 = !DILocation(line: 27, column: 55, scope: !9438)
!9448 = !DILocalVariable(name: "p1", scope: !9438, file: !9439, line: 29, type: !1520)
!9449 = !DILocation(line: 29, column: 33, scope: !9438)
!9450 = !DILocation(line: 29, column: 62, scope: !9438)
!9451 = !DILocalVariable(name: "p2", scope: !9438, file: !9439, line: 30, type: !1520)
!9452 = !DILocation(line: 30, column: 33, scope: !9438)
!9453 = !DILocation(line: 30, column: 62, scope: !9438)
!9454 = !DILocalVariable(name: "c1", scope: !9438, file: !9439, line: 31, type: !725)
!9455 = !DILocation(line: 31, column: 17, scope: !9438)
!9456 = !DILocalVariable(name: "c2", scope: !9438, file: !9439, line: 31, type: !725)
!9457 = !DILocation(line: 31, column: 21, scope: !9438)
!9458 = !DILocation(line: 33, column: 7, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9438, file: !9439, line: 33, column: 7)
!9460 = !DILocation(line: 33, column: 13, scope: !9459)
!9461 = !DILocation(line: 33, column: 10, scope: !9459)
!9462 = !DILocation(line: 33, column: 16, scope: !9459)
!9463 = !DILocation(line: 33, column: 19, scope: !9459)
!9464 = !DILocation(line: 33, column: 21, scope: !9459)
!9465 = !DILocation(line: 33, column: 7, scope: !9438)
!9466 = !DILocation(line: 34, column: 5, scope: !9459)
!9467 = !DILocation(line: 36, column: 3, scope: !9438)
!9468 = !DILocation(line: 38, column: 24, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9438, file: !9439, line: 37, column: 5)
!9470 = !DILocation(line: 38, column: 23, scope: !9469)
!9471 = !DILocation(line: 38, column: 12, scope: !9469)
!9472 = !DILocation(line: 38, column: 10, scope: !9469)
!9473 = !DILocation(line: 39, column: 24, scope: !9469)
!9474 = !DILocation(line: 39, column: 23, scope: !9469)
!9475 = !DILocation(line: 39, column: 12, scope: !9469)
!9476 = !DILocation(line: 39, column: 10, scope: !9469)
!9477 = !DILocation(line: 41, column: 11, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9469, file: !9439, line: 41, column: 11)
!9479 = !DILocation(line: 41, column: 15, scope: !9478)
!9480 = !DILocation(line: 41, column: 20, scope: !9478)
!9481 = !DILocation(line: 41, column: 23, scope: !9478)
!9482 = !DILocation(line: 41, column: 26, scope: !9478)
!9483 = !DILocation(line: 41, column: 11, scope: !9469)
!9484 = !DILocation(line: 42, column: 9, scope: !9478)
!9485 = !DILocation(line: 44, column: 7, scope: !9469)
!9486 = !DILocation(line: 45, column: 7, scope: !9469)
!9487 = !DILocation(line: 46, column: 5, scope: !9469)
!9488 = !DILocation(line: 47, column: 10, scope: !9438)
!9489 = !DILocation(line: 47, column: 16, scope: !9438)
!9490 = !DILocation(line: 47, column: 13, scope: !9438)
!9491 = distinct !{!9491, !9467, !9492}
!9492 = !DILocation(line: 47, column: 18, scope: !9438)
!9493 = !DILocation(line: 50, column: 12, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9438, file: !9439, line: 49, column: 7)
!9495 = !DILocation(line: 50, column: 17, scope: !9494)
!9496 = !DILocation(line: 50, column: 15, scope: !9494)
!9497 = !DILocation(line: 50, column: 5, scope: !9494)
!9498 = !DILocation(line: 56, column: 1, scope: !9438)
!9499 = distinct !DISubprogram(name: "canonicalize_filename_mode", scope: !9500, file: !9500, line: 99, type: !9501, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1522, retainedNodes: !152)
!9500 = !DIFile(filename: "lib/canonicalize.c", directory: "/home/mohamad/clone/coreutils")
!9501 = !DISubroutineType(types: !9502)
!9502 = !{!143, !146, !9503}
!9503 = !DIDerivedType(tag: DW_TAG_typedef, name: "canonicalize_mode_t", file: !1526, line: 42, baseType: !1525)
!9504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !9505)
!9505 = !{!9506, !9507, !9508, !9509, !9510, !9511, !9512, !9513, !9514, !9515, !9516, !9517, !9522, !9523, !9524}
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !9504, file: !191, line: 48, baseType: !194, size: 64)
!9507 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !9504, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !9504, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !9504, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !9504, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !9504, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9504, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !9504, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !9504, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !9504, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !9504, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !9504, file: !191, line: 91, baseType: !9518, size: 128, offset: 576)
!9518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !9519)
!9519 = !{!9520, !9521}
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9518, file: !163, line: 122, baseType: !164, size: 64)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9518, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !9504, file: !191, line: 92, baseType: !9518, size: 128, offset: 704)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !9504, file: !191, line: 93, baseType: !9518, size: 128, offset: 832)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9504, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!9525 = !DILocalVariable(name: "name", arg: 1, scope: !9499, file: !9500, line: 99, type: !146)
!9526 = !DILocation(line: 99, column: 41, scope: !9499)
!9527 = !DILocalVariable(name: "can_mode", arg: 2, scope: !9499, file: !9500, line: 99, type: !9503)
!9528 = !DILocation(line: 99, column: 67, scope: !9499)
!9529 = !DILocalVariable(name: "rname", scope: !9499, file: !9500, line: 101, type: !143)
!9530 = !DILocation(line: 101, column: 9, scope: !9499)
!9531 = !DILocalVariable(name: "dest", scope: !9499, file: !9500, line: 101, type: !143)
!9532 = !DILocation(line: 101, column: 17, scope: !9499)
!9533 = !DILocalVariable(name: "extra_buf", scope: !9499, file: !9500, line: 101, type: !143)
!9534 = !DILocation(line: 101, column: 24, scope: !9499)
!9535 = !DILocalVariable(name: "start", scope: !9499, file: !9500, line: 102, type: !146)
!9536 = !DILocation(line: 102, column: 15, scope: !9499)
!9537 = !DILocalVariable(name: "end", scope: !9499, file: !9500, line: 103, type: !146)
!9538 = !DILocation(line: 103, column: 15, scope: !9499)
!9539 = !DILocalVariable(name: "rname_limit", scope: !9499, file: !9500, line: 104, type: !146)
!9540 = !DILocation(line: 104, column: 15, scope: !9499)
!9541 = !DILocalVariable(name: "extra_len", scope: !9499, file: !9500, line: 105, type: !149)
!9542 = !DILocation(line: 105, column: 10, scope: !9499)
!9543 = !DILocalVariable(name: "ht", scope: !9499, file: !9500, line: 106, type: !249)
!9544 = !DILocation(line: 106, column: 15, scope: !9499)
!9545 = !DILocalVariable(name: "saved_errno", scope: !9499, file: !9500, line: 107, type: !27)
!9546 = !DILocation(line: 107, column: 7, scope: !9499)
!9547 = !DILocalVariable(name: "can_flags", scope: !9499, file: !9500, line: 108, type: !27)
!9548 = !DILocation(line: 108, column: 7, scope: !9499)
!9549 = !DILocation(line: 108, column: 19, scope: !9499)
!9550 = !DILocation(line: 108, column: 28, scope: !9499)
!9551 = !DILocalVariable(name: "logical", scope: !9499, file: !9500, line: 109, type: !141)
!9552 = !DILocation(line: 109, column: 8, scope: !9499)
!9553 = !DILocation(line: 109, column: 18, scope: !9499)
!9554 = !DILocation(line: 109, column: 28, scope: !9499)
!9555 = !DILocalVariable(name: "prefix_len", scope: !9499, file: !9500, line: 110, type: !149)
!9556 = !DILocation(line: 110, column: 10, scope: !9499)
!9557 = !DILocation(line: 112, column: 12, scope: !9499)
!9558 = !DILocation(line: 114, column: 7, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 114, column: 7)
!9560 = !DILocation(line: 114, column: 7, scope: !9499)
!9561 = !DILocation(line: 116, column: 7, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9559, file: !9500, line: 115, column: 5)
!9563 = !DILocation(line: 116, column: 13, scope: !9562)
!9564 = !DILocation(line: 117, column: 7, scope: !9562)
!9565 = !DILocation(line: 120, column: 7, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 120, column: 7)
!9567 = !DILocation(line: 120, column: 12, scope: !9566)
!9568 = !DILocation(line: 120, column: 7, scope: !9499)
!9569 = !DILocation(line: 122, column: 7, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !9500, line: 121, column: 5)
!9571 = !DILocation(line: 122, column: 13, scope: !9570)
!9572 = !DILocation(line: 123, column: 7, scope: !9570)
!9573 = !DILocation(line: 126, column: 7, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 126, column: 7)
!9575 = !DILocation(line: 126, column: 15, scope: !9574)
!9576 = !DILocation(line: 126, column: 7, scope: !9499)
!9577 = !DILocation(line: 128, column: 7, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9574, file: !9500, line: 127, column: 5)
!9579 = !DILocation(line: 128, column: 13, scope: !9578)
!9580 = !DILocation(line: 129, column: 7, scope: !9578)
!9581 = !DILocation(line: 134, column: 14, scope: !9499)
!9582 = !DILocation(line: 136, column: 8, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 136, column: 7)
!9584 = !DILocation(line: 136, column: 7, scope: !9499)
!9585 = !DILocation(line: 138, column: 15, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9583, file: !9500, line: 137, column: 5)
!9587 = !DILocation(line: 138, column: 13, scope: !9586)
!9588 = !DILocation(line: 139, column: 12, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9586, file: !9500, line: 139, column: 11)
!9590 = !DILocation(line: 139, column: 11, scope: !9586)
!9591 = !DILocation(line: 140, column: 9, scope: !9589)
!9592 = !DILocation(line: 141, column: 22, scope: !9586)
!9593 = !DILocation(line: 141, column: 14, scope: !9586)
!9594 = !DILocation(line: 141, column: 12, scope: !9586)
!9595 = !DILocation(line: 142, column: 11, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9586, file: !9500, line: 142, column: 11)
!9597 = !DILocation(line: 142, column: 18, scope: !9596)
!9598 = !DILocation(line: 142, column: 16, scope: !9596)
!9599 = !DILocation(line: 142, column: 24, scope: !9596)
!9600 = !DILocation(line: 142, column: 11, scope: !9586)
!9601 = !DILocalVariable(name: "p", scope: !9602, file: !9500, line: 144, type: !143)
!9602 = distinct !DILexicalBlock(scope: !9596, file: !9500, line: 143, column: 9)
!9603 = !DILocation(line: 144, column: 17, scope: !9602)
!9604 = !DILocation(line: 144, column: 31, scope: !9602)
!9605 = !DILocation(line: 144, column: 21, scope: !9602)
!9606 = !DILocation(line: 145, column: 18, scope: !9602)
!9607 = !DILocation(line: 145, column: 23, scope: !9602)
!9608 = !DILocation(line: 145, column: 30, scope: !9602)
!9609 = !DILocation(line: 145, column: 28, scope: !9602)
!9610 = !DILocation(line: 145, column: 20, scope: !9602)
!9611 = !DILocation(line: 145, column: 16, scope: !9602)
!9612 = !DILocation(line: 146, column: 19, scope: !9602)
!9613 = !DILocation(line: 146, column: 17, scope: !9602)
!9614 = !DILocation(line: 147, column: 25, scope: !9602)
!9615 = !DILocation(line: 147, column: 31, scope: !9602)
!9616 = !DILocation(line: 147, column: 23, scope: !9602)
!9617 = !DILocation(line: 148, column: 9, scope: !9602)
!9618 = !DILocation(line: 151, column: 25, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9596, file: !9500, line: 150, column: 9)
!9620 = !DILocation(line: 151, column: 23, scope: !9619)
!9621 = !DILocation(line: 153, column: 15, scope: !9586)
!9622 = !DILocation(line: 153, column: 13, scope: !9586)
!9623 = !DILocation(line: 154, column: 18, scope: !9586)
!9624 = !DILocation(line: 155, column: 5, scope: !9586)
!9625 = !DILocation(line: 158, column: 15, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9583, file: !9500, line: 157, column: 5)
!9627 = !DILocation(line: 158, column: 13, scope: !9626)
!9628 = !DILocation(line: 159, column: 21, scope: !9626)
!9629 = !DILocation(line: 159, column: 27, scope: !9626)
!9630 = !DILocation(line: 159, column: 19, scope: !9626)
!9631 = !DILocation(line: 160, column: 14, scope: !9626)
!9632 = !DILocation(line: 160, column: 12, scope: !9626)
!9633 = !DILocation(line: 161, column: 11, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9626, file: !9500, line: 161, column: 11)
!9635 = !DILocation(line: 161, column: 11, scope: !9626)
!9636 = !DILocation(line: 163, column: 19, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9634, file: !9500, line: 162, column: 9)
!9638 = !DILocation(line: 163, column: 26, scope: !9637)
!9639 = !DILocation(line: 163, column: 32, scope: !9637)
!9640 = !DILocation(line: 163, column: 11, scope: !9637)
!9641 = !DILocation(line: 164, column: 19, scope: !9637)
!9642 = !DILocation(line: 164, column: 16, scope: !9637)
!9643 = !DILocation(line: 165, column: 9, scope: !9637)
!9644 = !DILocation(line: 166, column: 12, scope: !9626)
!9645 = !DILocation(line: 166, column: 15, scope: !9626)
!9646 = !DILocation(line: 173, column: 15, scope: !9626)
!9647 = !DILocation(line: 173, column: 22, scope: !9626)
!9648 = !DILocation(line: 173, column: 20, scope: !9626)
!9649 = !DILocation(line: 173, column: 13, scope: !9626)
!9650 = !DILocation(line: 176, column: 3, scope: !9499)
!9651 = !DILocation(line: 176, column: 12, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !9500, line: 176, column: 3)
!9653 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 176, column: 3)
!9654 = !DILocation(line: 176, column: 11, scope: !9652)
!9655 = !DILocation(line: 176, column: 3, scope: !9653)
!9656 = !DILocation(line: 179, column: 7, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9652, file: !9500, line: 177, column: 5)
!9658 = !DILocation(line: 179, column: 14, scope: !9657)
!9659 = !DILocation(line: 180, column: 9, scope: !9657)
!9660 = distinct !{!9660, !9656, !9661}
!9661 = !DILocation(line: 180, column: 11, scope: !9657)
!9662 = !DILocation(line: 183, column: 18, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9657, file: !9500, line: 183, column: 7)
!9664 = !DILocation(line: 183, column: 16, scope: !9663)
!9665 = !DILocation(line: 183, column: 12, scope: !9663)
!9666 = !DILocation(line: 183, column: 26, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9663, file: !9500, line: 183, column: 7)
!9668 = !DILocation(line: 183, column: 25, scope: !9667)
!9669 = !DILocation(line: 183, column: 30, scope: !9667)
!9670 = !DILocation(line: 183, column: 34, scope: !9667)
!9671 = !DILocation(line: 183, column: 33, scope: !9667)
!9672 = !DILocation(line: 0, scope: !9667)
!9673 = !DILocation(line: 183, column: 7, scope: !9663)
!9674 = !DILocation(line: 183, column: 50, scope: !9667)
!9675 = !DILocation(line: 183, column: 7, scope: !9667)
!9676 = distinct !{!9676, !9673, !9677}
!9677 = !DILocation(line: 184, column: 24, scope: !9663)
!9678 = !DILocation(line: 186, column: 11, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9657, file: !9500, line: 186, column: 11)
!9680 = !DILocation(line: 186, column: 17, scope: !9679)
!9681 = !DILocation(line: 186, column: 15, scope: !9679)
!9682 = !DILocation(line: 186, column: 23, scope: !9679)
!9683 = !DILocation(line: 186, column: 11, scope: !9657)
!9684 = !DILocation(line: 187, column: 9, scope: !9679)
!9685 = !DILocation(line: 188, column: 16, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9679, file: !9500, line: 188, column: 16)
!9687 = !DILocation(line: 188, column: 22, scope: !9686)
!9688 = !DILocation(line: 188, column: 20, scope: !9686)
!9689 = !DILocation(line: 188, column: 28, scope: !9686)
!9690 = !DILocation(line: 188, column: 33, scope: !9686)
!9691 = !DILocation(line: 188, column: 36, scope: !9686)
!9692 = !DILocation(line: 188, column: 45, scope: !9686)
!9693 = !DILocation(line: 188, column: 16, scope: !9679)
!9694 = !DILocation(line: 190, column: 16, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9686, file: !9500, line: 190, column: 16)
!9696 = !DILocation(line: 190, column: 22, scope: !9695)
!9697 = !DILocation(line: 190, column: 20, scope: !9695)
!9698 = !DILocation(line: 190, column: 28, scope: !9695)
!9699 = !DILocation(line: 190, column: 33, scope: !9695)
!9700 = !DILocation(line: 190, column: 36, scope: !9695)
!9701 = !DILocation(line: 190, column: 45, scope: !9695)
!9702 = !DILocation(line: 190, column: 52, scope: !9695)
!9703 = !DILocation(line: 190, column: 55, scope: !9695)
!9704 = !DILocation(line: 190, column: 64, scope: !9695)
!9705 = !DILocation(line: 190, column: 16, scope: !9686)
!9706 = !DILocation(line: 193, column: 15, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9708, file: !9500, line: 193, column: 15)
!9708 = distinct !DILexicalBlock(scope: !9695, file: !9500, line: 191, column: 9)
!9709 = !DILocation(line: 193, column: 22, scope: !9707)
!9710 = !DILocation(line: 193, column: 30, scope: !9707)
!9711 = !DILocation(line: 193, column: 28, scope: !9707)
!9712 = !DILocation(line: 193, column: 41, scope: !9707)
!9713 = !DILocation(line: 193, column: 20, scope: !9707)
!9714 = !DILocation(line: 193, column: 15, scope: !9708)
!9715 = !DILocation(line: 194, column: 18, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9707, file: !9500, line: 194, column: 13)
!9717 = !DILocation(line: 194, column: 26, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9716, file: !9500, line: 194, column: 13)
!9719 = !DILocation(line: 194, column: 33, scope: !9718)
!9720 = !DILocation(line: 194, column: 31, scope: !9718)
!9721 = !DILocation(line: 194, column: 39, scope: !9718)
!9722 = !DILocation(line: 194, column: 43, scope: !9718)
!9723 = !DILocation(line: 194, column: 42, scope: !9718)
!9724 = !DILocation(line: 0, scope: !9718)
!9725 = !DILocation(line: 194, column: 13, scope: !9716)
!9726 = !DILocation(line: 195, column: 15, scope: !9718)
!9727 = !DILocation(line: 194, column: 63, scope: !9718)
!9728 = !DILocation(line: 194, column: 13, scope: !9718)
!9729 = distinct !{!9729, !9725, !9730}
!9730 = !DILocation(line: 195, column: 15, scope: !9716)
!9731 = !DILocation(line: 199, column: 9, scope: !9708)
!9732 = !DILocalVariable(name: "st", scope: !9733, file: !9500, line: 202, type: !9504)
!9733 = distinct !DILexicalBlock(scope: !9695, file: !9500, line: 201, column: 9)
!9734 = !DILocation(line: 202, column: 23, scope: !9733)
!9735 = !DILocation(line: 204, column: 16, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9733, file: !9500, line: 204, column: 15)
!9737 = !DILocation(line: 204, column: 15, scope: !9733)
!9738 = !DILocation(line: 205, column: 18, scope: !9736)
!9739 = !DILocation(line: 205, column: 21, scope: !9736)
!9740 = !DILocation(line: 205, column: 13, scope: !9736)
!9741 = !DILocation(line: 207, column: 15, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9733, file: !9500, line: 207, column: 15)
!9743 = !DILocation(line: 207, column: 23, scope: !9742)
!9744 = !DILocation(line: 207, column: 29, scope: !9742)
!9745 = !DILocation(line: 207, column: 27, scope: !9742)
!9746 = !DILocation(line: 207, column: 20, scope: !9742)
!9747 = !DILocation(line: 207, column: 39, scope: !9742)
!9748 = !DILocation(line: 207, column: 36, scope: !9742)
!9749 = !DILocation(line: 207, column: 15, scope: !9733)
!9750 = !DILocalVariable(name: "dest_offset", scope: !9751, file: !9500, line: 209, type: !675)
!9751 = distinct !DILexicalBlock(scope: !9742, file: !9500, line: 208, column: 13)
!9752 = !DILocation(line: 209, column: 25, scope: !9751)
!9753 = !DILocation(line: 209, column: 39, scope: !9751)
!9754 = !DILocation(line: 209, column: 46, scope: !9751)
!9755 = !DILocation(line: 209, column: 44, scope: !9751)
!9756 = !DILocalVariable(name: "new_size", scope: !9751, file: !9500, line: 210, type: !149)
!9757 = !DILocation(line: 210, column: 22, scope: !9751)
!9758 = !DILocation(line: 210, column: 33, scope: !9751)
!9759 = !DILocation(line: 210, column: 47, scope: !9751)
!9760 = !DILocation(line: 210, column: 45, scope: !9751)
!9761 = !DILocation(line: 212, column: 19, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9751, file: !9500, line: 212, column: 19)
!9763 = !DILocation(line: 212, column: 25, scope: !9762)
!9764 = !DILocation(line: 212, column: 23, scope: !9762)
!9765 = !DILocation(line: 212, column: 31, scope: !9762)
!9766 = !DILocation(line: 212, column: 35, scope: !9762)
!9767 = !DILocation(line: 212, column: 19, scope: !9751)
!9768 = !DILocation(line: 213, column: 29, scope: !9762)
!9769 = !DILocation(line: 213, column: 35, scope: !9762)
!9770 = !DILocation(line: 213, column: 33, scope: !9762)
!9771 = !DILocation(line: 213, column: 41, scope: !9762)
!9772 = !DILocation(line: 213, column: 26, scope: !9762)
!9773 = !DILocation(line: 213, column: 17, scope: !9762)
!9774 = !DILocation(line: 215, column: 26, scope: !9762)
!9775 = !DILocation(line: 216, column: 33, scope: !9751)
!9776 = !DILocation(line: 216, column: 40, scope: !9751)
!9777 = !DILocation(line: 216, column: 23, scope: !9751)
!9778 = !DILocation(line: 216, column: 21, scope: !9751)
!9779 = !DILocation(line: 217, column: 29, scope: !9751)
!9780 = !DILocation(line: 217, column: 37, scope: !9751)
!9781 = !DILocation(line: 217, column: 35, scope: !9751)
!9782 = !DILocation(line: 217, column: 27, scope: !9751)
!9783 = !DILocation(line: 219, column: 22, scope: !9751)
!9784 = !DILocation(line: 219, column: 30, scope: !9751)
!9785 = !DILocation(line: 219, column: 28, scope: !9751)
!9786 = !DILocation(line: 219, column: 20, scope: !9751)
!9787 = !DILocation(line: 220, column: 13, scope: !9751)
!9788 = !DILocation(line: 222, column: 26, scope: !9733)
!9789 = !DILocation(line: 222, column: 32, scope: !9733)
!9790 = !DILocation(line: 222, column: 39, scope: !9733)
!9791 = !DILocation(line: 222, column: 45, scope: !9733)
!9792 = !DILocation(line: 222, column: 43, scope: !9733)
!9793 = !DILocation(line: 222, column: 18, scope: !9733)
!9794 = !DILocation(line: 222, column: 16, scope: !9733)
!9795 = !DILocation(line: 223, column: 19, scope: !9733)
!9796 = !DILocation(line: 223, column: 25, scope: !9733)
!9797 = !DILocation(line: 223, column: 23, scope: !9733)
!9798 = !DILocation(line: 223, column: 16, scope: !9733)
!9799 = !DILocation(line: 224, column: 12, scope: !9733)
!9800 = !DILocation(line: 224, column: 17, scope: !9733)
!9801 = !DILocation(line: 226, column: 15, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9733, file: !9500, line: 226, column: 15)
!9803 = !DILocation(line: 226, column: 23, scope: !9802)
!9804 = !DILocation(line: 226, column: 27, scope: !9802)
!9805 = !DILocation(line: 226, column: 36, scope: !9802)
!9806 = !DILocation(line: 226, column: 15, scope: !9733)
!9807 = !DILocation(line: 231, column: 18, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9802, file: !9500, line: 227, column: 13)
!9809 = !DILocation(line: 231, column: 26, scope: !9808)
!9810 = !DILocation(line: 232, column: 13, scope: !9808)
!9811 = !DILocation(line: 233, column: 21, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9802, file: !9500, line: 233, column: 20)
!9813 = !DILocation(line: 233, column: 37, scope: !9812)
!9814 = !DILocation(line: 233, column: 31, scope: !9812)
!9815 = !DILocation(line: 233, column: 58, scope: !9812)
!9816 = !DILocation(line: 233, column: 51, scope: !9812)
!9817 = !DILocation(line: 233, column: 71, scope: !9812)
!9818 = !DILocation(line: 233, column: 20, scope: !9802)
!9819 = !DILocation(line: 236, column: 29, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9812, file: !9500, line: 234, column: 13)
!9821 = !DILocation(line: 236, column: 27, scope: !9820)
!9822 = !DILocation(line: 237, column: 19, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9820, file: !9500, line: 237, column: 19)
!9824 = !DILocation(line: 237, column: 28, scope: !9823)
!9825 = !DILocation(line: 237, column: 19, scope: !9820)
!9826 = !DILocation(line: 238, column: 17, scope: !9823)
!9827 = !DILocation(line: 239, column: 19, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9820, file: !9500, line: 239, column: 19)
!9829 = !DILocation(line: 239, column: 28, scope: !9828)
!9830 = !DILocation(line: 239, column: 19, scope: !9820)
!9831 = !DILocation(line: 241, column: 23, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9833, file: !9500, line: 241, column: 23)
!9833 = distinct !DILexicalBlock(scope: !9828, file: !9500, line: 240, column: 17)
!9834 = !DILocation(line: 241, column: 35, scope: !9832)
!9835 = !DILocation(line: 241, column: 27, scope: !9832)
!9836 = !DILocation(line: 241, column: 50, scope: !9832)
!9837 = !DILocation(line: 241, column: 53, scope: !9832)
!9838 = !DILocation(line: 241, column: 65, scope: !9832)
!9839 = !DILocation(line: 241, column: 23, scope: !9833)
!9840 = !DILocation(line: 242, column: 21, scope: !9832)
!9841 = !DILocation(line: 243, column: 19, scope: !9833)
!9842 = !DILocation(line: 245, column: 18, scope: !9820)
!9843 = !DILocation(line: 245, column: 26, scope: !9820)
!9844 = !DILocation(line: 246, column: 13, scope: !9820)
!9845 = !DILocation(line: 248, column: 15, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9733, file: !9500, line: 248, column: 15)
!9847 = !DILocation(line: 248, column: 15, scope: !9733)
!9848 = !DILocalVariable(name: "buf", scope: !9849, file: !9500, line: 250, type: !143)
!9849 = distinct !DILexicalBlock(scope: !9846, file: !9500, line: 249, column: 13)
!9850 = !DILocation(line: 250, column: 21, scope: !9849)
!9851 = !DILocalVariable(name: "n", scope: !9849, file: !9500, line: 251, type: !149)
!9852 = !DILocation(line: 251, column: 22, scope: !9849)
!9853 = !DILocalVariable(name: "len", scope: !9849, file: !9500, line: 251, type: !149)
!9854 = !DILocation(line: 251, column: 25, scope: !9849)
!9855 = !DILocation(line: 257, column: 37, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9849, file: !9500, line: 257, column: 19)
!9857 = !DILocation(line: 257, column: 19, scope: !9856)
!9858 = !DILocation(line: 257, column: 19, scope: !9849)
!9859 = !DILocation(line: 259, column: 23, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !9500, line: 259, column: 23)
!9861 = distinct !DILexicalBlock(scope: !9856, file: !9500, line: 258, column: 17)
!9862 = !DILocation(line: 259, column: 32, scope: !9860)
!9863 = !DILocation(line: 259, column: 23, scope: !9861)
!9864 = !DILocation(line: 260, column: 21, scope: !9860)
!9865 = !DILocation(line: 261, column: 31, scope: !9861)
!9866 = !DILocation(line: 262, column: 19, scope: !9861)
!9867 = !DILocation(line: 265, column: 42, scope: !9849)
!9868 = !DILocation(line: 265, column: 52, scope: !9849)
!9869 = !DILocation(line: 265, column: 21, scope: !9849)
!9870 = !DILocation(line: 265, column: 19, scope: !9849)
!9871 = !DILocation(line: 266, column: 20, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9849, file: !9500, line: 266, column: 19)
!9873 = !DILocation(line: 266, column: 19, scope: !9849)
!9874 = !DILocation(line: 268, column: 23, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9876, file: !9500, line: 268, column: 23)
!9876 = distinct !DILexicalBlock(scope: !9872, file: !9500, line: 267, column: 17)
!9877 = !DILocation(line: 268, column: 32, scope: !9875)
!9878 = !DILocation(line: 268, column: 47, scope: !9875)
!9879 = !DILocation(line: 268, column: 50, scope: !9875)
!9880 = !DILocation(line: 268, column: 56, scope: !9875)
!9881 = !DILocation(line: 268, column: 23, scope: !9876)
!9882 = !DILocation(line: 269, column: 21, scope: !9875)
!9883 = !DILocation(line: 270, column: 33, scope: !9876)
!9884 = !DILocation(line: 270, column: 31, scope: !9876)
!9885 = !DILocation(line: 271, column: 19, scope: !9876)
!9886 = !DILocation(line: 274, column: 27, scope: !9849)
!9887 = !DILocation(line: 274, column: 19, scope: !9849)
!9888 = !DILocation(line: 274, column: 17, scope: !9849)
!9889 = !DILocation(line: 275, column: 29, scope: !9849)
!9890 = !DILocation(line: 275, column: 21, scope: !9849)
!9891 = !DILocation(line: 275, column: 19, scope: !9849)
!9892 = !DILocation(line: 277, column: 20, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9849, file: !9500, line: 277, column: 19)
!9894 = !DILocation(line: 277, column: 19, scope: !9849)
!9895 = !DILocation(line: 280, column: 23, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9893, file: !9500, line: 278, column: 17)
!9897 = !DILocation(line: 280, column: 27, scope: !9896)
!9898 = !DILocation(line: 280, column: 25, scope: !9896)
!9899 = !DILocation(line: 280, column: 31, scope: !9896)
!9900 = !DILocation(line: 280, column: 36, scope: !9896)
!9901 = !DILocation(line: 280, column: 21, scope: !9896)
!9902 = !DILocation(line: 280, column: 51, scope: !9896)
!9903 = !DILocation(line: 280, column: 55, scope: !9896)
!9904 = !DILocation(line: 280, column: 53, scope: !9896)
!9905 = !DILocation(line: 280, column: 59, scope: !9896)
!9906 = !DILocation(line: 279, column: 29, scope: !9896)
!9907 = !DILocation(line: 281, column: 40, scope: !9896)
!9908 = !DILocation(line: 281, column: 31, scope: !9896)
!9909 = !DILocation(line: 281, column: 29, scope: !9896)
!9910 = !DILocation(line: 282, column: 17, scope: !9896)
!9911 = !DILocation(line: 283, column: 25, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9893, file: !9500, line: 283, column: 24)
!9913 = !DILocation(line: 283, column: 29, scope: !9912)
!9914 = !DILocation(line: 283, column: 27, scope: !9912)
!9915 = !DILocation(line: 283, column: 33, scope: !9912)
!9916 = !DILocation(line: 283, column: 40, scope: !9912)
!9917 = !DILocation(line: 283, column: 38, scope: !9912)
!9918 = !DILocation(line: 283, column: 24, scope: !9893)
!9919 = !DILocation(line: 285, column: 31, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9912, file: !9500, line: 284, column: 17)
!9921 = !DILocation(line: 285, column: 35, scope: !9920)
!9922 = !DILocation(line: 285, column: 33, scope: !9920)
!9923 = !DILocation(line: 285, column: 39, scope: !9920)
!9924 = !DILocation(line: 285, column: 29, scope: !9920)
!9925 = !DILocation(line: 286, column: 41, scope: !9920)
!9926 = !DILocation(line: 286, column: 52, scope: !9920)
!9927 = !DILocation(line: 286, column: 31, scope: !9920)
!9928 = !DILocation(line: 286, column: 29, scope: !9920)
!9929 = !DILocation(line: 287, column: 17, scope: !9920)
!9930 = !DILocation(line: 290, column: 25, scope: !9849)
!9931 = !DILocation(line: 290, column: 35, scope: !9849)
!9932 = !DILocation(line: 290, column: 39, scope: !9849)
!9933 = !DILocation(line: 290, column: 44, scope: !9849)
!9934 = !DILocation(line: 290, column: 48, scope: !9849)
!9935 = !DILocation(line: 290, column: 15, scope: !9849)
!9936 = !DILocation(line: 291, column: 36, scope: !9849)
!9937 = !DILocation(line: 291, column: 47, scope: !9849)
!9938 = !DILocation(line: 291, column: 52, scope: !9849)
!9939 = !DILocation(line: 291, column: 28, scope: !9849)
!9940 = !DILocation(line: 291, column: 26, scope: !9849)
!9941 = !DILocation(line: 291, column: 20, scope: !9849)
!9942 = !DILocation(line: 293, column: 19, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9849, file: !9500, line: 293, column: 19)
!9944 = !DILocation(line: 293, column: 19, scope: !9849)
!9945 = !DILocalVariable(name: "pfxlen", scope: !9946, file: !9500, line: 295, type: !149)
!9946 = distinct !DILexicalBlock(scope: !9943, file: !9500, line: 294, column: 17)
!9947 = !DILocation(line: 295, column: 26, scope: !9946)
!9948 = !DILocation(line: 297, column: 23, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9946, file: !9500, line: 297, column: 23)
!9950 = !DILocation(line: 297, column: 23, scope: !9946)
!9951 = !DILocation(line: 298, column: 29, scope: !9949)
!9952 = !DILocation(line: 298, column: 36, scope: !9949)
!9953 = !DILocation(line: 298, column: 41, scope: !9949)
!9954 = !DILocation(line: 298, column: 21, scope: !9949)
!9955 = !DILocation(line: 299, column: 26, scope: !9946)
!9956 = !DILocation(line: 299, column: 34, scope: !9946)
!9957 = !DILocation(line: 299, column: 32, scope: !9946)
!9958 = !DILocation(line: 299, column: 24, scope: !9946)
!9959 = !DILocation(line: 300, column: 24, scope: !9946)
!9960 = !DILocation(line: 300, column: 27, scope: !9946)
!9961 = !DILocation(line: 308, column: 32, scope: !9946)
!9962 = !DILocation(line: 308, column: 30, scope: !9946)
!9963 = !DILocation(line: 309, column: 17, scope: !9946)
!9964 = !DILocation(line: 314, column: 23, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !9500, line: 314, column: 23)
!9966 = distinct !DILexicalBlock(scope: !9943, file: !9500, line: 311, column: 17)
!9967 = !DILocation(line: 314, column: 30, scope: !9965)
!9968 = !DILocation(line: 314, column: 38, scope: !9965)
!9969 = !DILocation(line: 314, column: 36, scope: !9965)
!9970 = !DILocation(line: 314, column: 49, scope: !9965)
!9971 = !DILocation(line: 314, column: 28, scope: !9965)
!9972 = !DILocation(line: 314, column: 23, scope: !9966)
!9973 = !DILocation(line: 315, column: 26, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9965, file: !9500, line: 315, column: 21)
!9975 = !DILocation(line: 315, column: 34, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9974, file: !9500, line: 315, column: 21)
!9977 = !DILocation(line: 315, column: 41, scope: !9976)
!9978 = !DILocation(line: 315, column: 39, scope: !9976)
!9979 = !DILocation(line: 315, column: 47, scope: !9976)
!9980 = !DILocation(line: 315, column: 51, scope: !9976)
!9981 = !DILocation(line: 315, column: 50, scope: !9976)
!9982 = !DILocation(line: 0, scope: !9976)
!9983 = !DILocation(line: 315, column: 21, scope: !9974)
!9984 = !DILocation(line: 316, column: 23, scope: !9976)
!9985 = !DILocation(line: 315, column: 71, scope: !9976)
!9986 = !DILocation(line: 315, column: 21, scope: !9976)
!9987 = distinct !{!9987, !9983, !9988}
!9988 = !DILocation(line: 316, column: 23, scope: !9974)
!9989 = !DILocation(line: 322, column: 21, scope: !9849)
!9990 = !DILocation(line: 322, column: 15, scope: !9849)
!9991 = !DILocation(line: 323, column: 13, scope: !9849)
!9992 = !DILocation(line: 326, column: 20, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !9500, line: 326, column: 19)
!9994 = distinct !DILexicalBlock(scope: !9846, file: !9500, line: 325, column: 13)
!9995 = !DILocation(line: 326, column: 41, scope: !9993)
!9996 = !DILocation(line: 326, column: 45, scope: !9993)
!9997 = !DILocation(line: 326, column: 44, scope: !9993)
!9998 = !DILocation(line: 326, column: 49, scope: !9993)
!9999 = !DILocation(line: 326, column: 53, scope: !9993)
!10000 = !DILocation(line: 326, column: 62, scope: !9993)
!10001 = !DILocation(line: 326, column: 19, scope: !9994)
!10002 = !DILocation(line: 328, column: 31, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9993, file: !9500, line: 327, column: 17)
!10004 = !DILocation(line: 329, column: 19, scope: !10003)
!10005 = !DILocation(line: 333, column: 5, scope: !9657)
!10006 = !DILocation(line: 176, column: 27, scope: !9652)
!10007 = !DILocation(line: 176, column: 25, scope: !9652)
!10008 = !DILocation(line: 176, column: 3, scope: !9652)
!10009 = distinct !{!10009, !9655, !10010}
!10010 = !DILocation(line: 333, column: 5, scope: !9653)
!10011 = !DILocation(line: 334, column: 7, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 334, column: 7)
!10013 = !DILocation(line: 334, column: 14, scope: !10012)
!10014 = !DILocation(line: 334, column: 22, scope: !10012)
!10015 = !DILocation(line: 334, column: 20, scope: !10012)
!10016 = !DILocation(line: 334, column: 33, scope: !10012)
!10017 = !DILocation(line: 334, column: 12, scope: !10012)
!10018 = !DILocation(line: 334, column: 37, scope: !10012)
!10019 = !DILocation(line: 334, column: 40, scope: !10012)
!10020 = !DILocation(line: 334, column: 7, scope: !9499)
!10021 = !DILocation(line: 335, column: 5, scope: !10012)
!10022 = !DILocation(line: 339, column: 4, scope: !9499)
!10023 = !DILocation(line: 339, column: 9, scope: !9499)
!10024 = !DILocation(line: 340, column: 7, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 340, column: 7)
!10026 = !DILocation(line: 340, column: 22, scope: !10025)
!10027 = !DILocation(line: 340, column: 27, scope: !10025)
!10028 = !DILocation(line: 340, column: 19, scope: !10025)
!10029 = !DILocation(line: 340, column: 7, scope: !9499)
!10030 = !DILocation(line: 341, column: 23, scope: !10025)
!10031 = !DILocation(line: 341, column: 30, scope: !10025)
!10032 = !DILocation(line: 341, column: 37, scope: !10025)
!10033 = !DILocation(line: 341, column: 35, scope: !10025)
!10034 = !DILocation(line: 341, column: 43, scope: !10025)
!10035 = !DILocation(line: 341, column: 13, scope: !10025)
!10036 = !DILocation(line: 341, column: 11, scope: !10025)
!10037 = !DILocation(line: 341, column: 5, scope: !10025)
!10038 = !DILocation(line: 343, column: 9, scope: !9499)
!10039 = !DILocation(line: 343, column: 3, scope: !9499)
!10040 = !DILocation(line: 344, column: 7, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 344, column: 7)
!10042 = !DILocation(line: 344, column: 7, scope: !9499)
!10043 = !DILocation(line: 345, column: 16, scope: !10041)
!10044 = !DILocation(line: 345, column: 5, scope: !10041)
!10045 = !DILocation(line: 346, column: 10, scope: !9499)
!10046 = !DILocation(line: 346, column: 3, scope: !9499)
!10047 = !DILabel(scope: !9499, name: "error", file: !9500, line: 348)
!10048 = !DILocation(line: 348, column: 1, scope: !9499)
!10049 = !DILocation(line: 349, column: 9, scope: !9499)
!10050 = !DILocation(line: 349, column: 3, scope: !9499)
!10051 = !DILocation(line: 350, column: 9, scope: !9499)
!10052 = !DILocation(line: 350, column: 3, scope: !9499)
!10053 = !DILocation(line: 351, column: 7, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !9499, file: !9500, line: 351, column: 7)
!10055 = !DILocation(line: 351, column: 7, scope: !9499)
!10056 = !DILocation(line: 352, column: 16, scope: !10054)
!10057 = !DILocation(line: 352, column: 5, scope: !10054)
!10058 = !DILocation(line: 353, column: 11, scope: !9499)
!10059 = !DILocation(line: 353, column: 3, scope: !9499)
!10060 = !DILocation(line: 353, column: 9, scope: !9499)
!10061 = !DILocation(line: 354, column: 3, scope: !9499)
!10062 = !DILocation(line: 355, column: 1, scope: !9499)
!10063 = distinct !DISubprogram(name: "seen_triple", scope: !9500, file: !9500, line: 70, type: !10064, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1522, retainedNodes: !152)
!10064 = !DISubroutineType(types: !10065)
!10065 = !{!141, !10066, !146, !10067}
!10066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!10067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10068, size: 64)
!10068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9504)
!10069 = !DILocalVariable(name: "ht", arg: 1, scope: !10063, file: !9500, line: 70, type: !10066)
!10070 = !DILocation(line: 70, column: 27, scope: !10063)
!10071 = !DILocalVariable(name: "filename", arg: 2, scope: !10063, file: !9500, line: 70, type: !146)
!10072 = !DILocation(line: 70, column: 43, scope: !10063)
!10073 = !DILocalVariable(name: "st", arg: 3, scope: !10063, file: !9500, line: 70, type: !10067)
!10074 = !DILocation(line: 70, column: 72, scope: !10063)
!10075 = !DILocation(line: 72, column: 8, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10063, file: !9500, line: 72, column: 7)
!10077 = !DILocation(line: 72, column: 7, scope: !10076)
!10078 = !DILocation(line: 72, column: 11, scope: !10076)
!10079 = !DILocation(line: 72, column: 7, scope: !10063)
!10080 = !DILocalVariable(name: "initial_capacity", scope: !10081, file: !9500, line: 74, type: !149)
!10081 = distinct !DILexicalBlock(scope: !10076, file: !9500, line: 73, column: 5)
!10082 = !DILocation(line: 74, column: 14, scope: !10081)
!10083 = !DILocation(line: 75, column: 30, scope: !10081)
!10084 = !DILocation(line: 75, column: 13, scope: !10081)
!10085 = !DILocation(line: 75, column: 8, scope: !10081)
!10086 = !DILocation(line: 75, column: 11, scope: !10081)
!10087 = !DILocation(line: 80, column: 12, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10081, file: !9500, line: 80, column: 11)
!10089 = !DILocation(line: 80, column: 11, scope: !10088)
!10090 = !DILocation(line: 80, column: 15, scope: !10088)
!10091 = !DILocation(line: 80, column: 11, scope: !10081)
!10092 = !DILocation(line: 81, column: 9, scope: !10088)
!10093 = !DILocation(line: 82, column: 5, scope: !10081)
!10094 = !DILocation(line: 84, column: 19, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10063, file: !9500, line: 84, column: 7)
!10096 = !DILocation(line: 84, column: 18, scope: !10095)
!10097 = !DILocation(line: 84, column: 23, scope: !10095)
!10098 = !DILocation(line: 84, column: 33, scope: !10095)
!10099 = !DILocation(line: 84, column: 7, scope: !10095)
!10100 = !DILocation(line: 84, column: 7, scope: !10063)
!10101 = !DILocation(line: 85, column: 5, scope: !10095)
!10102 = !DILocation(line: 87, column: 17, scope: !10063)
!10103 = !DILocation(line: 87, column: 16, scope: !10063)
!10104 = !DILocation(line: 87, column: 21, scope: !10063)
!10105 = !DILocation(line: 87, column: 31, scope: !10063)
!10106 = !DILocation(line: 87, column: 3, scope: !10063)
!10107 = !DILocation(line: 88, column: 3, scope: !10063)
!10108 = !DILocation(line: 89, column: 1, scope: !10063)
!10109 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !1173, file: !1173, line: 51, type: !823, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1129, retainedNodes: !152)
!10110 = !DILocalVariable(name: "file", arg: 1, scope: !10109, file: !1173, line: 51, type: !146)
!10111 = !DILocation(line: 51, column: 41, scope: !10109)
!10112 = !DILocation(line: 53, column: 15, scope: !10109)
!10113 = !DILocation(line: 53, column: 13, scope: !10109)
!10114 = !DILocation(line: 54, column: 1, scope: !10109)
!10115 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !1173, file: !1173, line: 88, type: !910, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1129, retainedNodes: !152)
!10116 = !DILocalVariable(name: "ignore", arg: 1, scope: !10115, file: !1173, line: 88, type: !141)
!10117 = !DILocation(line: 88, column: 37, scope: !10115)
!10118 = !DILocation(line: 90, column: 18, scope: !10115)
!10119 = !DILocation(line: 90, column: 16, scope: !10115)
!10120 = !DILocation(line: 91, column: 1, scope: !10115)
!10121 = distinct !DISubprogram(name: "close_stdout", scope: !1173, file: !1173, line: 117, type: !526, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1129, retainedNodes: !152)
!10122 = !DILocation(line: 119, column: 21, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10121, file: !1173, line: 119, column: 7)
!10124 = !DILocation(line: 119, column: 7, scope: !10123)
!10125 = !DILocation(line: 119, column: 29, scope: !10123)
!10126 = !DILocation(line: 120, column: 7, scope: !10123)
!10127 = !DILocation(line: 120, column: 12, scope: !10123)
!10128 = !DILocation(line: 120, column: 25, scope: !10123)
!10129 = !DILocation(line: 120, column: 28, scope: !10123)
!10130 = !DILocation(line: 120, column: 34, scope: !10123)
!10131 = !DILocation(line: 119, column: 7, scope: !10121)
!10132 = !DILocalVariable(name: "write_error", scope: !10133, file: !1173, line: 122, type: !146)
!10133 = distinct !DILexicalBlock(scope: !10123, file: !1173, line: 121, column: 5)
!10134 = !DILocation(line: 122, column: 19, scope: !10133)
!10135 = !DILocation(line: 122, column: 33, scope: !10133)
!10136 = !DILocation(line: 123, column: 11, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10133, file: !1173, line: 123, column: 11)
!10138 = !DILocation(line: 123, column: 11, scope: !10133)
!10139 = !DILocation(line: 124, column: 19, scope: !10137)
!10140 = !DILocation(line: 124, column: 52, scope: !10137)
!10141 = !DILocation(line: 124, column: 36, scope: !10137)
!10142 = !DILocation(line: 125, column: 16, scope: !10137)
!10143 = !DILocation(line: 124, column: 9, scope: !10137)
!10144 = !DILocation(line: 127, column: 19, scope: !10137)
!10145 = !DILocation(line: 127, column: 32, scope: !10137)
!10146 = !DILocation(line: 127, column: 9, scope: !10137)
!10147 = !DILocation(line: 129, column: 14, scope: !10133)
!10148 = !DILocation(line: 129, column: 7, scope: !10133)
!10149 = !DILocation(line: 134, column: 42, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10121, file: !1173, line: 134, column: 7)
!10151 = !DILocation(line: 134, column: 28, scope: !10150)
!10152 = !DILocation(line: 134, column: 50, scope: !10150)
!10153 = !DILocation(line: 134, column: 7, scope: !10121)
!10154 = !DILocation(line: 135, column: 12, scope: !10150)
!10155 = !DILocation(line: 135, column: 5, scope: !10150)
!10156 = !DILocation(line: 136, column: 1, scope: !10121)
!10157 = distinct !DISubprogram(name: "dir_len", scope: !10158, file: !10158, line: 32, type: !10159, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1533, retainedNodes: !152)
!10158 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10159 = !DISubroutineType(types: !10160)
!10160 = !{!149, !146}
!10161 = !DILocalVariable(name: "file", arg: 1, scope: !10157, file: !10158, line: 32, type: !146)
!10162 = !DILocation(line: 32, column: 22, scope: !10157)
!10163 = !DILocalVariable(name: "prefix_length", scope: !10157, file: !10158, line: 34, type: !149)
!10164 = !DILocation(line: 34, column: 10, scope: !10157)
!10165 = !DILocalVariable(name: "length", scope: !10157, file: !10158, line: 35, type: !149)
!10166 = !DILocation(line: 35, column: 10, scope: !10157)
!10167 = !DILocation(line: 38, column: 21, scope: !10157)
!10168 = !DILocation(line: 38, column: 35, scope: !10157)
!10169 = !DILocation(line: 41, column: 24, scope: !10157)
!10170 = !DILocation(line: 38, column: 20, scope: !10157)
!10171 = !DILocation(line: 38, column: 17, scope: !10157)
!10172 = !DILocation(line: 48, column: 33, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10157, file: !10158, line: 48, column: 3)
!10174 = !DILocation(line: 48, column: 17, scope: !10173)
!10175 = !DILocation(line: 48, column: 41, scope: !10173)
!10176 = !DILocation(line: 48, column: 39, scope: !10173)
!10177 = !DILocation(line: 48, column: 15, scope: !10173)
!10178 = !DILocation(line: 48, column: 8, scope: !10173)
!10179 = !DILocation(line: 49, column: 8, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10173, file: !10158, line: 48, column: 3)
!10181 = !DILocation(line: 49, column: 24, scope: !10180)
!10182 = !DILocation(line: 49, column: 22, scope: !10180)
!10183 = !DILocation(line: 48, column: 3, scope: !10173)
!10184 = !DILocation(line: 50, column: 11, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !10158, line: 50, column: 9)
!10186 = !DILocation(line: 50, column: 9, scope: !10180)
!10187 = !DILocation(line: 51, column: 7, scope: !10185)
!10188 = !DILocation(line: 49, column: 38, scope: !10180)
!10189 = !DILocation(line: 48, column: 3, scope: !10180)
!10190 = distinct !{!10190, !10183, !10191}
!10191 = !DILocation(line: 51, column: 7, scope: !10173)
!10192 = !DILocation(line: 52, column: 10, scope: !10157)
!10193 = !DILocation(line: 52, column: 3, scope: !10157)
!10194 = distinct !DISubprogram(name: "mdir_name", scope: !10158, file: !10158, line: 71, type: !8560, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1533, retainedNodes: !152)
!10195 = !DILocalVariable(name: "file", arg: 1, scope: !10194, file: !10158, line: 71, type: !146)
!10196 = !DILocation(line: 71, column: 24, scope: !10194)
!10197 = !DILocalVariable(name: "length", scope: !10194, file: !10158, line: 73, type: !149)
!10198 = !DILocation(line: 73, column: 10, scope: !10194)
!10199 = !DILocation(line: 73, column: 28, scope: !10194)
!10200 = !DILocation(line: 73, column: 19, scope: !10194)
!10201 = !DILocalVariable(name: "append_dot", scope: !10194, file: !10158, line: 74, type: !141)
!10202 = !DILocation(line: 74, column: 8, scope: !10194)
!10203 = !DILocation(line: 74, column: 22, scope: !10194)
!10204 = !DILocation(line: 74, column: 29, scope: !10194)
!10205 = !DILocation(line: 75, column: 22, scope: !10194)
!10206 = !DILocalVariable(name: "dir", scope: !10194, file: !10158, line: 78, type: !143)
!10207 = !DILocation(line: 78, column: 9, scope: !10194)
!10208 = !DILocation(line: 78, column: 23, scope: !10194)
!10209 = !DILocation(line: 78, column: 32, scope: !10194)
!10210 = !DILocation(line: 78, column: 30, scope: !10194)
!10211 = !DILocation(line: 78, column: 43, scope: !10194)
!10212 = !DILocation(line: 78, column: 15, scope: !10194)
!10213 = !DILocation(line: 79, column: 8, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10194, file: !10158, line: 79, column: 7)
!10215 = !DILocation(line: 79, column: 7, scope: !10194)
!10216 = !DILocation(line: 80, column: 5, scope: !10214)
!10217 = !DILocation(line: 81, column: 11, scope: !10194)
!10218 = !DILocation(line: 81, column: 16, scope: !10194)
!10219 = !DILocation(line: 81, column: 22, scope: !10194)
!10220 = !DILocation(line: 81, column: 3, scope: !10194)
!10221 = !DILocation(line: 82, column: 7, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10194, file: !10158, line: 82, column: 7)
!10223 = !DILocation(line: 82, column: 7, scope: !10194)
!10224 = !DILocation(line: 83, column: 5, scope: !10222)
!10225 = !DILocation(line: 83, column: 15, scope: !10222)
!10226 = !DILocation(line: 83, column: 19, scope: !10222)
!10227 = !DILocation(line: 84, column: 3, scope: !10194)
!10228 = !DILocation(line: 84, column: 7, scope: !10194)
!10229 = !DILocation(line: 84, column: 15, scope: !10194)
!10230 = !DILocation(line: 85, column: 10, scope: !10194)
!10231 = !DILocation(line: 85, column: 3, scope: !10194)
!10232 = !DILocation(line: 86, column: 1, scope: !10194)
!10233 = distinct !DISubprogram(name: "last_component", scope: !10234, file: !10234, line: 30, type: !8560, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1536, retainedNodes: !152)
!10234 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10235 = !DILocalVariable(name: "name", arg: 1, scope: !10233, file: !10234, line: 30, type: !146)
!10236 = !DILocation(line: 30, column: 29, scope: !10233)
!10237 = !DILocalVariable(name: "base", scope: !10233, file: !10234, line: 32, type: !146)
!10238 = !DILocation(line: 32, column: 15, scope: !10233)
!10239 = !DILocation(line: 32, column: 22, scope: !10233)
!10240 = !DILocation(line: 32, column: 27, scope: !10233)
!10241 = !DILocalVariable(name: "p", scope: !10233, file: !10234, line: 33, type: !146)
!10242 = !DILocation(line: 33, column: 15, scope: !10233)
!10243 = !DILocalVariable(name: "saw_slash", scope: !10233, file: !10234, line: 34, type: !141)
!10244 = !DILocation(line: 34, column: 8, scope: !10233)
!10245 = !DILocation(line: 36, column: 3, scope: !10233)
!10246 = !DILocation(line: 36, column: 10, scope: !10233)
!10247 = !DILocation(line: 37, column: 9, scope: !10233)
!10248 = distinct !{!10248, !10245, !10247}
!10249 = !DILocation(line: 39, column: 12, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10233, file: !10234, line: 39, column: 3)
!10251 = !DILocation(line: 39, column: 10, scope: !10250)
!10252 = !DILocation(line: 39, column: 8, scope: !10250)
!10253 = !DILocation(line: 39, column: 19, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10250, file: !10234, line: 39, column: 3)
!10255 = !DILocation(line: 39, column: 18, scope: !10254)
!10256 = !DILocation(line: 39, column: 3, scope: !10250)
!10257 = !DILocation(line: 41, column: 11, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10259, file: !10234, line: 41, column: 11)
!10259 = distinct !DILexicalBlock(scope: !10254, file: !10234, line: 40, column: 5)
!10260 = !DILocation(line: 41, column: 11, scope: !10259)
!10261 = !DILocation(line: 42, column: 19, scope: !10258)
!10262 = !DILocation(line: 42, column: 9, scope: !10258)
!10263 = !DILocation(line: 43, column: 16, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10258, file: !10234, line: 43, column: 16)
!10265 = !DILocation(line: 43, column: 16, scope: !10258)
!10266 = !DILocation(line: 45, column: 18, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10264, file: !10234, line: 44, column: 9)
!10268 = !DILocation(line: 45, column: 16, scope: !10267)
!10269 = !DILocation(line: 46, column: 21, scope: !10267)
!10270 = !DILocation(line: 47, column: 9, scope: !10267)
!10271 = !DILocation(line: 48, column: 5, scope: !10259)
!10272 = !DILocation(line: 39, column: 23, scope: !10254)
!10273 = !DILocation(line: 39, column: 3, scope: !10254)
!10274 = distinct !{!10274, !10256, !10275}
!10275 = !DILocation(line: 48, column: 5, scope: !10250)
!10276 = !DILocation(line: 50, column: 19, scope: !10233)
!10277 = !DILocation(line: 50, column: 3, scope: !10233)
!10278 = distinct !DISubprogram(name: "base_len", scope: !10234, file: !10234, line: 58, type: !10159, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1536, retainedNodes: !152)
!10279 = !DILocalVariable(name: "name", arg: 1, scope: !10278, file: !10234, line: 58, type: !146)
!10280 = !DILocation(line: 58, column: 23, scope: !10278)
!10281 = !DILocalVariable(name: "len", scope: !10278, file: !10234, line: 60, type: !149)
!10282 = !DILocation(line: 60, column: 10, scope: !10278)
!10283 = !DILocalVariable(name: "prefix_len", scope: !10278, file: !10234, line: 61, type: !149)
!10284 = !DILocation(line: 61, column: 10, scope: !10278)
!10285 = !DILocation(line: 63, column: 22, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10278, file: !10234, line: 63, column: 3)
!10287 = !DILocation(line: 63, column: 14, scope: !10286)
!10288 = !DILocation(line: 63, column: 12, scope: !10286)
!10289 = !DILocation(line: 63, column: 8, scope: !10286)
!10290 = !DILocation(line: 63, column: 34, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10286, file: !10234, line: 63, column: 3)
!10292 = !DILocation(line: 63, column: 32, scope: !10291)
!10293 = !DILocation(line: 63, column: 38, scope: !10291)
!10294 = !DILocation(line: 63, column: 41, scope: !10291)
!10295 = !DILocation(line: 0, scope: !10291)
!10296 = !DILocation(line: 63, column: 3, scope: !10286)
!10297 = !DILocation(line: 64, column: 5, scope: !10291)
!10298 = !DILocation(line: 63, column: 70, scope: !10291)
!10299 = !DILocation(line: 63, column: 3, scope: !10291)
!10300 = distinct !{!10300, !10296, !10301}
!10301 = !DILocation(line: 64, column: 5, scope: !10286)
!10302 = !DILocation(line: 74, column: 10, scope: !10278)
!10303 = !DILocation(line: 74, column: 3, scope: !10278)
!10304 = distinct !DISubprogram(name: "file_has_acl", scope: !10305, file: !10305, line: 45, type: !10306, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1539, retainedNodes: !152)
!10305 = !DIFile(filename: "lib/file-has-acl.c", directory: "/home/mohamad/clone/coreutils")
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!27, !146, !10308}
!10308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10309, size: 64)
!10309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10310)
!10310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !10311)
!10311 = !{!10312, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10328, !10329, !10330}
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10310, file: !191, line: 48, baseType: !194, size: 64)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10310, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10310, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10310, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10310, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10310, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10310, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10310, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10310, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10310, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10310, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10310, file: !191, line: 91, baseType: !10324, size: 128, offset: 576)
!10324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !10325)
!10325 = !{!10326, !10327}
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10324, file: !163, line: 122, baseType: !164, size: 64)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10324, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10310, file: !191, line: 92, baseType: !10324, size: 128, offset: 704)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10310, file: !191, line: 93, baseType: !10324, size: 128, offset: 832)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10310, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!10331 = !DILocalVariable(name: "name", arg: 1, scope: !10304, file: !10305, line: 45, type: !146)
!10332 = !DILocation(line: 45, column: 27, scope: !10304)
!10333 = !DILocalVariable(name: "sb", arg: 2, scope: !10304, file: !10305, line: 45, type: !10308)
!10334 = !DILocation(line: 45, column: 52, scope: !10304)
!10335 = !DILocation(line: 509, column: 3, scope: !10304)
!10336 = distinct !DISubprogram(name: "record_file", scope: !10337, file: !10337, line: 29, type: !10338, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1541, retainedNodes: !152)
!10337 = !DIFile(filename: "lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!10338 = !DISubroutineType(types: !10339)
!10339 = !{null, !249, !146, !10340}
!10340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10341, size: 64)
!10341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10342)
!10342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !10343)
!10343 = !{!10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10353, !10354, !10355, !10360, !10361, !10362}
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10342, file: !191, line: 48, baseType: !194, size: 64)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10342, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10342, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10342, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10342, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10342, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10342, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10342, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10342, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10342, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10342, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10342, file: !191, line: 91, baseType: !10356, size: 128, offset: 576)
!10356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !10357)
!10357 = !{!10358, !10359}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10356, file: !163, line: 122, baseType: !164, size: 64)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10356, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10342, file: !191, line: 92, baseType: !10356, size: 128, offset: 704)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10342, file: !191, line: 93, baseType: !10356, size: 128, offset: 832)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10342, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!10363 = !DILocalVariable(name: "ht", arg: 1, scope: !10336, file: !10337, line: 29, type: !249)
!10364 = !DILocation(line: 29, column: 26, scope: !10336)
!10365 = !DILocalVariable(name: "file", arg: 2, scope: !10336, file: !10337, line: 29, type: !146)
!10366 = !DILocation(line: 29, column: 42, scope: !10336)
!10367 = !DILocalVariable(name: "stats", arg: 3, scope: !10336, file: !10337, line: 29, type: !10340)
!10368 = !DILocation(line: 29, column: 67, scope: !10336)
!10369 = !DILocalVariable(name: "ent", scope: !10336, file: !10337, line: 31, type: !1544)
!10370 = !DILocation(line: 31, column: 20, scope: !10336)
!10371 = !DILocation(line: 33, column: 7, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10336, file: !10337, line: 33, column: 7)
!10373 = !DILocation(line: 33, column: 10, scope: !10372)
!10374 = !DILocation(line: 33, column: 7, scope: !10336)
!10375 = !DILocation(line: 34, column: 5, scope: !10372)
!10376 = !DILocation(line: 36, column: 9, scope: !10336)
!10377 = !DILocation(line: 36, column: 7, scope: !10336)
!10378 = !DILocation(line: 37, column: 24, scope: !10336)
!10379 = !DILocation(line: 37, column: 15, scope: !10336)
!10380 = !DILocation(line: 37, column: 3, scope: !10336)
!10381 = !DILocation(line: 37, column: 8, scope: !10336)
!10382 = !DILocation(line: 37, column: 13, scope: !10336)
!10383 = !DILocation(line: 38, column: 17, scope: !10336)
!10384 = !DILocation(line: 38, column: 24, scope: !10336)
!10385 = !DILocation(line: 38, column: 3, scope: !10336)
!10386 = !DILocation(line: 38, column: 8, scope: !10336)
!10387 = !DILocation(line: 38, column: 15, scope: !10336)
!10388 = !DILocation(line: 39, column: 17, scope: !10336)
!10389 = !DILocation(line: 39, column: 24, scope: !10336)
!10390 = !DILocation(line: 39, column: 3, scope: !10336)
!10391 = !DILocation(line: 39, column: 8, scope: !10336)
!10392 = !DILocation(line: 39, column: 15, scope: !10336)
!10393 = !DILocalVariable(name: "ent_from_table", scope: !10394, file: !10337, line: 42, type: !1544)
!10394 = distinct !DILexicalBlock(scope: !10336, file: !10337, line: 41, column: 3)
!10395 = !DILocation(line: 42, column: 22, scope: !10394)
!10396 = !DILocation(line: 42, column: 52, scope: !10394)
!10397 = !DILocation(line: 42, column: 56, scope: !10394)
!10398 = !DILocation(line: 42, column: 39, scope: !10394)
!10399 = !DILocation(line: 43, column: 9, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10394, file: !10337, line: 43, column: 9)
!10401 = !DILocation(line: 43, column: 24, scope: !10400)
!10402 = !DILocation(line: 43, column: 9, scope: !10394)
!10403 = !DILocation(line: 46, column: 9, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10400, file: !10337, line: 44, column: 7)
!10405 = !DILocation(line: 49, column: 9, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10394, file: !10337, line: 49, column: 9)
!10407 = !DILocation(line: 49, column: 27, scope: !10406)
!10408 = !DILocation(line: 49, column: 24, scope: !10406)
!10409 = !DILocation(line: 49, column: 9, scope: !10394)
!10410 = !DILocation(line: 53, column: 22, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10406, file: !10337, line: 50, column: 7)
!10412 = !DILocation(line: 53, column: 9, scope: !10411)
!10413 = !DILocation(line: 54, column: 7, scope: !10411)
!10414 = !DILocation(line: 56, column: 1, scope: !10336)
!10415 = distinct !DISubprogram(name: "seen_file", scope: !10337, file: !10337, line: 61, type: !10416, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1541, retainedNodes: !152)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!141, !10418, !146, !10340}
!10418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10419, size: 64)
!10419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!10420 = !DILocalVariable(name: "ht", arg: 1, scope: !10415, file: !10337, line: 61, type: !10418)
!10421 = !DILocation(line: 61, column: 30, scope: !10415)
!10422 = !DILocalVariable(name: "file", arg: 2, scope: !10415, file: !10337, line: 61, type: !146)
!10423 = !DILocation(line: 61, column: 46, scope: !10415)
!10424 = !DILocalVariable(name: "stats", arg: 3, scope: !10415, file: !10337, line: 62, type: !10340)
!10425 = !DILocation(line: 62, column: 31, scope: !10415)
!10426 = !DILocalVariable(name: "new_ent", scope: !10415, file: !10337, line: 64, type: !1545)
!10427 = !DILocation(line: 64, column: 19, scope: !10415)
!10428 = !DILocation(line: 66, column: 7, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10415, file: !10337, line: 66, column: 7)
!10430 = !DILocation(line: 66, column: 10, scope: !10429)
!10431 = !DILocation(line: 66, column: 7, scope: !10415)
!10432 = !DILocation(line: 67, column: 5, scope: !10429)
!10433 = !DILocation(line: 69, column: 27, scope: !10415)
!10434 = !DILocation(line: 69, column: 11, scope: !10415)
!10435 = !DILocation(line: 69, column: 16, scope: !10415)
!10436 = !DILocation(line: 70, column: 20, scope: !10415)
!10437 = !DILocation(line: 70, column: 27, scope: !10415)
!10438 = !DILocation(line: 70, column: 11, scope: !10415)
!10439 = !DILocation(line: 70, column: 18, scope: !10415)
!10440 = !DILocation(line: 71, column: 20, scope: !10415)
!10441 = !DILocation(line: 71, column: 27, scope: !10415)
!10442 = !DILocation(line: 71, column: 11, scope: !10415)
!10443 = !DILocation(line: 71, column: 18, scope: !10415)
!10444 = !DILocation(line: 73, column: 25, scope: !10415)
!10445 = !DILocation(line: 73, column: 29, scope: !10415)
!10446 = !DILocation(line: 73, column: 12, scope: !10415)
!10447 = !DILocation(line: 73, column: 11, scope: !10415)
!10448 = !DILocation(line: 73, column: 10, scope: !10415)
!10449 = !DILocation(line: 73, column: 3, scope: !10415)
!10450 = !DILocation(line: 74, column: 1, scope: !10415)
!10451 = distinct !DISubprogram(name: "strmode", scope: !10452, file: !10452, line: 96, type: !10453, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1551, retainedNodes: !152)
!10452 = !DIFile(filename: "lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!10453 = !DISubroutineType(types: !10454)
!10454 = !{null, !226, !143}
!10455 = !DILocalVariable(name: "mode", arg: 1, scope: !10451, file: !10452, line: 96, type: !226)
!10456 = !DILocation(line: 96, column: 17, scope: !10451)
!10457 = !DILocalVariable(name: "str", arg: 2, scope: !10451, file: !10452, line: 96, type: !143)
!10458 = !DILocation(line: 96, column: 29, scope: !10451)
!10459 = !DILocation(line: 98, column: 22, scope: !10451)
!10460 = !DILocation(line: 98, column: 12, scope: !10451)
!10461 = !DILocation(line: 98, column: 3, scope: !10451)
!10462 = !DILocation(line: 98, column: 10, scope: !10451)
!10463 = !DILocation(line: 99, column: 12, scope: !10451)
!10464 = !DILocation(line: 99, column: 17, scope: !10451)
!10465 = !DILocation(line: 99, column: 3, scope: !10451)
!10466 = !DILocation(line: 99, column: 10, scope: !10451)
!10467 = !DILocation(line: 100, column: 12, scope: !10451)
!10468 = !DILocation(line: 100, column: 17, scope: !10451)
!10469 = !DILocation(line: 100, column: 3, scope: !10451)
!10470 = !DILocation(line: 100, column: 10, scope: !10451)
!10471 = !DILocation(line: 101, column: 13, scope: !10451)
!10472 = !DILocation(line: 101, column: 18, scope: !10451)
!10473 = !DILocation(line: 102, column: 16, scope: !10451)
!10474 = !DILocation(line: 102, column: 21, scope: !10451)
!10475 = !DILocation(line: 103, column: 16, scope: !10451)
!10476 = !DILocation(line: 103, column: 21, scope: !10451)
!10477 = !DILocation(line: 101, column: 12, scope: !10451)
!10478 = !DILocation(line: 101, column: 3, scope: !10451)
!10479 = !DILocation(line: 101, column: 10, scope: !10451)
!10480 = !DILocation(line: 104, column: 12, scope: !10451)
!10481 = !DILocation(line: 104, column: 17, scope: !10451)
!10482 = !DILocation(line: 104, column: 3, scope: !10451)
!10483 = !DILocation(line: 104, column: 10, scope: !10451)
!10484 = !DILocation(line: 105, column: 12, scope: !10451)
!10485 = !DILocation(line: 105, column: 17, scope: !10451)
!10486 = !DILocation(line: 105, column: 3, scope: !10451)
!10487 = !DILocation(line: 105, column: 10, scope: !10451)
!10488 = !DILocation(line: 106, column: 13, scope: !10451)
!10489 = !DILocation(line: 106, column: 18, scope: !10451)
!10490 = !DILocation(line: 107, column: 16, scope: !10451)
!10491 = !DILocation(line: 107, column: 21, scope: !10451)
!10492 = !DILocation(line: 108, column: 16, scope: !10451)
!10493 = !DILocation(line: 108, column: 21, scope: !10451)
!10494 = !DILocation(line: 106, column: 12, scope: !10451)
!10495 = !DILocation(line: 106, column: 3, scope: !10451)
!10496 = !DILocation(line: 106, column: 10, scope: !10451)
!10497 = !DILocation(line: 109, column: 12, scope: !10451)
!10498 = !DILocation(line: 109, column: 17, scope: !10451)
!10499 = !DILocation(line: 109, column: 3, scope: !10451)
!10500 = !DILocation(line: 109, column: 10, scope: !10451)
!10501 = !DILocation(line: 110, column: 12, scope: !10451)
!10502 = !DILocation(line: 110, column: 17, scope: !10451)
!10503 = !DILocation(line: 110, column: 3, scope: !10451)
!10504 = !DILocation(line: 110, column: 10, scope: !10451)
!10505 = !DILocation(line: 111, column: 13, scope: !10451)
!10506 = !DILocation(line: 111, column: 18, scope: !10451)
!10507 = !DILocation(line: 112, column: 16, scope: !10451)
!10508 = !DILocation(line: 112, column: 21, scope: !10451)
!10509 = !DILocation(line: 113, column: 16, scope: !10451)
!10510 = !DILocation(line: 113, column: 21, scope: !10451)
!10511 = !DILocation(line: 111, column: 12, scope: !10451)
!10512 = !DILocation(line: 111, column: 3, scope: !10451)
!10513 = !DILocation(line: 111, column: 10, scope: !10451)
!10514 = !DILocation(line: 114, column: 3, scope: !10451)
!10515 = !DILocation(line: 114, column: 11, scope: !10451)
!10516 = !DILocation(line: 115, column: 3, scope: !10451)
!10517 = !DILocation(line: 115, column: 11, scope: !10451)
!10518 = !DILocation(line: 116, column: 1, scope: !10451)
!10519 = distinct !DISubprogram(name: "ftypelet", scope: !10452, file: !10452, line: 54, type: !10520, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1551, retainedNodes: !152)
!10520 = !DISubroutineType(types: !10521)
!10521 = !{!144, !226}
!10522 = !DILocalVariable(name: "bits", arg: 1, scope: !10519, file: !10452, line: 54, type: !226)
!10523 = !DILocation(line: 54, column: 18, scope: !10519)
!10524 = !DILocation(line: 57, column: 7, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 57, column: 7)
!10526 = !DILocation(line: 57, column: 7, scope: !10519)
!10527 = !DILocation(line: 58, column: 5, scope: !10525)
!10528 = !DILocation(line: 59, column: 7, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 59, column: 7)
!10530 = !DILocation(line: 59, column: 7, scope: !10519)
!10531 = !DILocation(line: 60, column: 5, scope: !10529)
!10532 = !DILocation(line: 63, column: 7, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 63, column: 7)
!10534 = !DILocation(line: 63, column: 7, scope: !10519)
!10535 = !DILocation(line: 64, column: 5, scope: !10533)
!10536 = !DILocation(line: 65, column: 7, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 65, column: 7)
!10538 = !DILocation(line: 65, column: 7, scope: !10519)
!10539 = !DILocation(line: 66, column: 5, scope: !10537)
!10540 = !DILocation(line: 67, column: 7, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 67, column: 7)
!10542 = !DILocation(line: 67, column: 7, scope: !10519)
!10543 = !DILocation(line: 68, column: 5, scope: !10541)
!10544 = !DILocation(line: 69, column: 7, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 69, column: 7)
!10546 = !DILocation(line: 69, column: 7, scope: !10519)
!10547 = !DILocation(line: 70, column: 5, scope: !10545)
!10548 = !DILocation(line: 73, column: 7, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10519, file: !10452, line: 73, column: 7)
!10550 = !DILocation(line: 73, column: 7, scope: !10519)
!10551 = !DILocation(line: 74, column: 5, scope: !10549)
!10552 = !DILocation(line: 90, column: 3, scope: !10519)
!10553 = !DILocation(line: 91, column: 1, scope: !10519)
!10554 = distinct !DISubprogram(name: "filemodestring", scope: !10452, file: !10452, line: 166, type: !10555, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1551, retainedNodes: !152)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{null, !10557, !143}
!10557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10558, size: 64)
!10558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10559)
!10559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !10560)
!10560 = !{!10561, !10562, !10563, !10564, !10565, !10566, !10567, !10568, !10569, !10570, !10571, !10572, !10577, !10578, !10579}
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10559, file: !191, line: 48, baseType: !194, size: 64)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10559, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10559, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10559, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10559, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10559, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10559, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10559, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10559, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10559, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10559, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10559, file: !191, line: 91, baseType: !10573, size: 128, offset: 576)
!10573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !10574)
!10574 = !{!10575, !10576}
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10573, file: !163, line: 122, baseType: !164, size: 64)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10573, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10559, file: !191, line: 92, baseType: !10573, size: 128, offset: 704)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10559, file: !191, line: 93, baseType: !10573, size: 128, offset: 832)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10559, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!10580 = !DILocalVariable(name: "statp", arg: 1, scope: !10554, file: !10452, line: 166, type: !10557)
!10581 = !DILocation(line: 166, column: 36, scope: !10554)
!10582 = !DILocalVariable(name: "str", arg: 2, scope: !10554, file: !10452, line: 166, type: !143)
!10583 = !DILocation(line: 166, column: 49, scope: !10554)
!10584 = !DILocation(line: 168, column: 12, scope: !10554)
!10585 = !DILocation(line: 168, column: 19, scope: !10554)
!10586 = !DILocation(line: 168, column: 28, scope: !10554)
!10587 = !DILocation(line: 168, column: 3, scope: !10554)
!10588 = !DILocation(line: 170, column: 7, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10554, file: !10452, line: 170, column: 7)
!10590 = !DILocation(line: 170, column: 7, scope: !10554)
!10591 = !DILocation(line: 171, column: 5, scope: !10589)
!10592 = !DILocation(line: 171, column: 12, scope: !10589)
!10593 = !DILocation(line: 174, column: 12, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !10452, line: 174, column: 12)
!10595 = distinct !DILexicalBlock(scope: !10589, file: !10452, line: 172, column: 12)
!10596 = !DILocation(line: 174, column: 12, scope: !10595)
!10597 = !DILocation(line: 175, column: 5, scope: !10594)
!10598 = !DILocation(line: 175, column: 12, scope: !10594)
!10599 = !DILocation(line: 176, column: 12, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10594, file: !10452, line: 176, column: 12)
!10601 = !DILocation(line: 176, column: 12, scope: !10594)
!10602 = !DILocation(line: 177, column: 5, scope: !10600)
!10603 = !DILocation(line: 177, column: 12, scope: !10600)
!10604 = !DILocation(line: 180, column: 1, scope: !10554)
!10605 = distinct !DISubprogram(name: "file_name_concat", scope: !10606, file: !10606, line: 35, type: !10607, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1554, retainedNodes: !152)
!10606 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!10607 = !DISubroutineType(types: !10608)
!10608 = !{!143, !146, !146, !142}
!10609 = !DILocalVariable(name: "dir", arg: 1, scope: !10605, file: !10606, line: 35, type: !146)
!10610 = !DILocation(line: 35, column: 31, scope: !10605)
!10611 = !DILocalVariable(name: "base", arg: 2, scope: !10605, file: !10606, line: 35, type: !146)
!10612 = !DILocation(line: 35, column: 48, scope: !10605)
!10613 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10605, file: !10606, line: 35, type: !142)
!10614 = !DILocation(line: 35, column: 61, scope: !10605)
!10615 = !DILocalVariable(name: "p", scope: !10605, file: !10606, line: 37, type: !143)
!10616 = !DILocation(line: 37, column: 9, scope: !10605)
!10617 = !DILocation(line: 37, column: 32, scope: !10605)
!10618 = !DILocation(line: 37, column: 37, scope: !10605)
!10619 = !DILocation(line: 37, column: 43, scope: !10605)
!10620 = !DILocation(line: 37, column: 13, scope: !10605)
!10621 = !DILocation(line: 38, column: 7, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10605, file: !10606, line: 38, column: 7)
!10623 = !DILocation(line: 38, column: 9, scope: !10622)
!10624 = !DILocation(line: 38, column: 7, scope: !10605)
!10625 = !DILocation(line: 39, column: 5, scope: !10622)
!10626 = !DILocation(line: 40, column: 10, scope: !10605)
!10627 = !DILocation(line: 40, column: 3, scope: !10605)
!10628 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10629, file: !10629, line: 47, type: !10607, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1557, retainedNodes: !152)
!10629 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10630 = !DILocalVariable(name: "dir", arg: 1, scope: !10628, file: !10629, line: 47, type: !146)
!10631 = !DILocation(line: 47, column: 32, scope: !10628)
!10632 = !DILocalVariable(name: "base", arg: 2, scope: !10628, file: !10629, line: 47, type: !146)
!10633 = !DILocation(line: 47, column: 49, scope: !10628)
!10634 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10628, file: !10629, line: 47, type: !142)
!10635 = !DILocation(line: 47, column: 62, scope: !10628)
!10636 = !DILocalVariable(name: "dirbase", scope: !10628, file: !10629, line: 49, type: !146)
!10637 = !DILocation(line: 49, column: 15, scope: !10628)
!10638 = !DILocation(line: 49, column: 41, scope: !10628)
!10639 = !DILocation(line: 49, column: 25, scope: !10628)
!10640 = !DILocalVariable(name: "dirbaselen", scope: !10628, file: !10629, line: 50, type: !149)
!10641 = !DILocation(line: 50, column: 10, scope: !10628)
!10642 = !DILocation(line: 50, column: 33, scope: !10628)
!10643 = !DILocation(line: 50, column: 23, scope: !10628)
!10644 = !DILocalVariable(name: "dirlen", scope: !10628, file: !10629, line: 51, type: !149)
!10645 = !DILocation(line: 51, column: 10, scope: !10628)
!10646 = !DILocation(line: 51, column: 19, scope: !10628)
!10647 = !DILocation(line: 51, column: 29, scope: !10628)
!10648 = !DILocation(line: 51, column: 27, scope: !10628)
!10649 = !DILocation(line: 51, column: 35, scope: !10628)
!10650 = !DILocation(line: 51, column: 33, scope: !10628)
!10651 = !DILocalVariable(name: "baselen", scope: !10628, file: !10629, line: 52, type: !149)
!10652 = !DILocation(line: 52, column: 10, scope: !10628)
!10653 = !DILocation(line: 52, column: 28, scope: !10628)
!10654 = !DILocation(line: 52, column: 20, scope: !10628)
!10655 = !DILocalVariable(name: "sep", scope: !10628, file: !10629, line: 53, type: !144)
!10656 = !DILocation(line: 53, column: 8, scope: !10628)
!10657 = !DILocation(line: 54, column: 7, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10628, file: !10629, line: 54, column: 7)
!10659 = !DILocation(line: 54, column: 7, scope: !10628)
!10660 = !DILocation(line: 57, column: 13, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !10629, line: 57, column: 11)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !10629, line: 55, column: 5)
!10663 = !DILocation(line: 57, column: 39, scope: !10661)
!10664 = !DILocation(line: 57, column: 44, scope: !10661)
!10665 = !DILocation(line: 57, column: 11, scope: !10662)
!10666 = !DILocation(line: 58, column: 13, scope: !10661)
!10667 = !DILocation(line: 58, column: 9, scope: !10661)
!10668 = !DILocation(line: 59, column: 5, scope: !10662)
!10669 = !DILocation(line: 60, column: 12, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10658, file: !10629, line: 60, column: 12)
!10671 = !DILocation(line: 60, column: 12, scope: !10658)
!10672 = !DILocation(line: 67, column: 11, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10670, file: !10629, line: 61, column: 5)
!10674 = !DILocation(line: 68, column: 5, scope: !10673)
!10675 = !DILocalVariable(name: "p_concat", scope: !10628, file: !10629, line: 70, type: !143)
!10676 = !DILocation(line: 70, column: 9, scope: !10628)
!10677 = !DILocation(line: 70, column: 28, scope: !10628)
!10678 = !DILocation(line: 70, column: 38, scope: !10628)
!10679 = !DILocation(line: 70, column: 42, scope: !10628)
!10680 = !DILocation(line: 70, column: 37, scope: !10628)
!10681 = !DILocation(line: 70, column: 35, scope: !10628)
!10682 = !DILocation(line: 70, column: 54, scope: !10628)
!10683 = !DILocation(line: 70, column: 52, scope: !10628)
!10684 = !DILocation(line: 70, column: 62, scope: !10628)
!10685 = !DILocation(line: 70, column: 20, scope: !10628)
!10686 = !DILocalVariable(name: "p", scope: !10628, file: !10629, line: 71, type: !143)
!10687 = !DILocation(line: 71, column: 9, scope: !10628)
!10688 = !DILocation(line: 73, column: 7, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10628, file: !10629, line: 73, column: 7)
!10690 = !DILocation(line: 73, column: 16, scope: !10689)
!10691 = !DILocation(line: 73, column: 7, scope: !10628)
!10692 = !DILocation(line: 74, column: 5, scope: !10689)
!10693 = !DILocation(line: 76, column: 16, scope: !10628)
!10694 = !DILocation(line: 76, column: 26, scope: !10628)
!10695 = !DILocation(line: 76, column: 31, scope: !10628)
!10696 = !DILocation(line: 76, column: 7, scope: !10628)
!10697 = !DILocation(line: 76, column: 5, scope: !10628)
!10698 = !DILocation(line: 77, column: 8, scope: !10628)
!10699 = !DILocation(line: 77, column: 4, scope: !10628)
!10700 = !DILocation(line: 77, column: 6, scope: !10628)
!10701 = !DILocation(line: 78, column: 8, scope: !10628)
!10702 = !DILocation(line: 78, column: 12, scope: !10628)
!10703 = !DILocation(line: 78, column: 5, scope: !10628)
!10704 = !DILocation(line: 80, column: 7, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10628, file: !10629, line: 80, column: 7)
!10706 = !DILocation(line: 80, column: 7, scope: !10628)
!10707 = !DILocation(line: 81, column: 23, scope: !10705)
!10708 = !DILocation(line: 81, column: 6, scope: !10705)
!10709 = !DILocation(line: 81, column: 21, scope: !10705)
!10710 = !DILocation(line: 81, column: 5, scope: !10705)
!10711 = !DILocation(line: 83, column: 16, scope: !10628)
!10712 = !DILocation(line: 83, column: 19, scope: !10628)
!10713 = !DILocation(line: 83, column: 25, scope: !10628)
!10714 = !DILocation(line: 83, column: 7, scope: !10628)
!10715 = !DILocation(line: 83, column: 5, scope: !10628)
!10716 = !DILocation(line: 84, column: 4, scope: !10628)
!10717 = !DILocation(line: 84, column: 6, scope: !10628)
!10718 = !DILocation(line: 86, column: 10, scope: !10628)
!10719 = !DILocation(line: 86, column: 3, scope: !10628)
!10720 = !DILocation(line: 87, column: 1, scope: !10628)
!10721 = distinct !DISubprogram(name: "filevercmp", scope: !10722, file: !10722, line: 125, type: !7722, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1560, retainedNodes: !152)
!10722 = !DIFile(filename: "lib/filevercmp.c", directory: "/home/mohamad/clone/coreutils")
!10723 = !DILocalVariable(name: "s1", arg: 1, scope: !10721, file: !10722, line: 125, type: !146)
!10724 = !DILocation(line: 125, column: 25, scope: !10721)
!10725 = !DILocalVariable(name: "s2", arg: 2, scope: !10721, file: !10722, line: 125, type: !146)
!10726 = !DILocation(line: 125, column: 41, scope: !10721)
!10727 = !DILocalVariable(name: "s1_pos", scope: !10721, file: !10722, line: 127, type: !146)
!10728 = !DILocation(line: 127, column: 15, scope: !10721)
!10729 = !DILocalVariable(name: "s2_pos", scope: !10721, file: !10722, line: 128, type: !146)
!10730 = !DILocation(line: 128, column: 15, scope: !10721)
!10731 = !DILocalVariable(name: "s1_suffix", scope: !10721, file: !10722, line: 129, type: !146)
!10732 = !DILocation(line: 129, column: 15, scope: !10721)
!10733 = !DILocalVariable(name: "s2_suffix", scope: !10721, file: !10722, line: 129, type: !146)
!10734 = !DILocation(line: 129, column: 27, scope: !10721)
!10735 = !DILocalVariable(name: "s1_len", scope: !10721, file: !10722, line: 130, type: !149)
!10736 = !DILocation(line: 130, column: 10, scope: !10721)
!10737 = !DILocalVariable(name: "s2_len", scope: !10721, file: !10722, line: 130, type: !149)
!10738 = !DILocation(line: 130, column: 18, scope: !10721)
!10739 = !DILocalVariable(name: "result", scope: !10721, file: !10722, line: 131, type: !27)
!10740 = !DILocation(line: 131, column: 7, scope: !10721)
!10741 = !DILocalVariable(name: "simple_cmp", scope: !10721, file: !10722, line: 134, type: !27)
!10742 = !DILocation(line: 134, column: 7, scope: !10721)
!10743 = !DILocation(line: 134, column: 28, scope: !10721)
!10744 = !DILocation(line: 134, column: 32, scope: !10721)
!10745 = !DILocation(line: 134, column: 20, scope: !10721)
!10746 = !DILocation(line: 135, column: 7, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 135, column: 7)
!10748 = !DILocation(line: 135, column: 18, scope: !10747)
!10749 = !DILocation(line: 135, column: 7, scope: !10721)
!10750 = !DILocation(line: 136, column: 5, scope: !10747)
!10751 = !DILocation(line: 139, column: 9, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 139, column: 7)
!10753 = !DILocation(line: 139, column: 8, scope: !10752)
!10754 = !DILocation(line: 139, column: 7, scope: !10721)
!10755 = !DILocation(line: 140, column: 5, scope: !10752)
!10756 = !DILocation(line: 141, column: 9, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 141, column: 7)
!10758 = !DILocation(line: 141, column: 8, scope: !10757)
!10759 = !DILocation(line: 141, column: 7, scope: !10721)
!10760 = !DILocation(line: 142, column: 5, scope: !10757)
!10761 = !DILocation(line: 143, column: 25, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 143, column: 7)
!10763 = !DILocation(line: 143, column: 12, scope: !10762)
!10764 = !DILocation(line: 143, column: 9, scope: !10762)
!10765 = !DILocation(line: 143, column: 7, scope: !10721)
!10766 = !DILocation(line: 144, column: 5, scope: !10762)
!10767 = !DILocation(line: 145, column: 25, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 145, column: 7)
!10769 = !DILocation(line: 145, column: 12, scope: !10768)
!10770 = !DILocation(line: 145, column: 9, scope: !10768)
!10771 = !DILocation(line: 145, column: 7, scope: !10721)
!10772 = !DILocation(line: 146, column: 5, scope: !10768)
!10773 = !DILocation(line: 147, column: 26, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 147, column: 7)
!10775 = !DILocation(line: 147, column: 12, scope: !10774)
!10776 = !DILocation(line: 147, column: 9, scope: !10774)
!10777 = !DILocation(line: 147, column: 7, scope: !10721)
!10778 = !DILocation(line: 148, column: 5, scope: !10774)
!10779 = !DILocation(line: 149, column: 26, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 149, column: 7)
!10781 = !DILocation(line: 149, column: 12, scope: !10780)
!10782 = !DILocation(line: 149, column: 9, scope: !10780)
!10783 = !DILocation(line: 149, column: 7, scope: !10721)
!10784 = !DILocation(line: 150, column: 5, scope: !10780)
!10785 = !DILocation(line: 153, column: 8, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 153, column: 7)
!10787 = !DILocation(line: 153, column: 7, scope: !10786)
!10788 = !DILocation(line: 153, column: 11, scope: !10786)
!10789 = !DILocation(line: 153, column: 18, scope: !10786)
!10790 = !DILocation(line: 153, column: 22, scope: !10786)
!10791 = !DILocation(line: 153, column: 21, scope: !10786)
!10792 = !DILocation(line: 153, column: 25, scope: !10786)
!10793 = !DILocation(line: 153, column: 7, scope: !10721)
!10794 = !DILocation(line: 154, column: 5, scope: !10786)
!10795 = !DILocation(line: 155, column: 8, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 155, column: 7)
!10797 = !DILocation(line: 155, column: 7, scope: !10796)
!10798 = !DILocation(line: 155, column: 11, scope: !10796)
!10799 = !DILocation(line: 155, column: 18, scope: !10796)
!10800 = !DILocation(line: 155, column: 22, scope: !10796)
!10801 = !DILocation(line: 155, column: 21, scope: !10796)
!10802 = !DILocation(line: 155, column: 25, scope: !10796)
!10803 = !DILocation(line: 155, column: 7, scope: !10721)
!10804 = !DILocation(line: 156, column: 5, scope: !10796)
!10805 = !DILocation(line: 157, column: 8, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 157, column: 7)
!10807 = !DILocation(line: 157, column: 7, scope: !10806)
!10808 = !DILocation(line: 157, column: 11, scope: !10806)
!10809 = !DILocation(line: 157, column: 18, scope: !10806)
!10810 = !DILocation(line: 157, column: 22, scope: !10806)
!10811 = !DILocation(line: 157, column: 21, scope: !10806)
!10812 = !DILocation(line: 157, column: 25, scope: !10806)
!10813 = !DILocation(line: 157, column: 7, scope: !10721)
!10814 = !DILocation(line: 159, column: 9, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10806, file: !10722, line: 158, column: 5)
!10816 = !DILocation(line: 160, column: 9, scope: !10815)
!10817 = !DILocation(line: 161, column: 5, scope: !10815)
!10818 = !DILocation(line: 164, column: 12, scope: !10721)
!10819 = !DILocation(line: 164, column: 10, scope: !10721)
!10820 = !DILocation(line: 165, column: 12, scope: !10721)
!10821 = !DILocation(line: 165, column: 10, scope: !10721)
!10822 = !DILocation(line: 166, column: 15, scope: !10721)
!10823 = !DILocation(line: 166, column: 13, scope: !10721)
!10824 = !DILocation(line: 167, column: 15, scope: !10721)
!10825 = !DILocation(line: 167, column: 13, scope: !10721)
!10826 = !DILocation(line: 168, column: 13, scope: !10721)
!10827 = !DILocation(line: 168, column: 25, scope: !10721)
!10828 = !DILocation(line: 168, column: 37, scope: !10721)
!10829 = !DILocation(line: 168, column: 47, scope: !10721)
!10830 = !DILocation(line: 168, column: 45, scope: !10721)
!10831 = !DILocation(line: 168, column: 10, scope: !10721)
!10832 = !DILocation(line: 169, column: 13, scope: !10721)
!10833 = !DILocation(line: 169, column: 25, scope: !10721)
!10834 = !DILocation(line: 169, column: 37, scope: !10721)
!10835 = !DILocation(line: 169, column: 47, scope: !10721)
!10836 = !DILocation(line: 169, column: 45, scope: !10721)
!10837 = !DILocation(line: 169, column: 10, scope: !10721)
!10838 = !DILocation(line: 172, column: 8, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10721, file: !10722, line: 172, column: 7)
!10840 = !DILocation(line: 172, column: 18, scope: !10839)
!10841 = !DILocation(line: 172, column: 21, scope: !10839)
!10842 = !DILocation(line: 172, column: 32, scope: !10839)
!10843 = !DILocation(line: 172, column: 36, scope: !10839)
!10844 = !DILocation(line: 172, column: 46, scope: !10839)
!10845 = !DILocation(line: 172, column: 43, scope: !10839)
!10846 = !DILocation(line: 173, column: 7, scope: !10839)
!10847 = !DILocation(line: 173, column: 24, scope: !10839)
!10848 = !DILocation(line: 173, column: 28, scope: !10839)
!10849 = !DILocation(line: 173, column: 32, scope: !10839)
!10850 = !DILocation(line: 173, column: 15, scope: !10839)
!10851 = !DILocation(line: 173, column: 12, scope: !10839)
!10852 = !DILocation(line: 172, column: 7, scope: !10721)
!10853 = !DILocation(line: 175, column: 16, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10839, file: !10722, line: 174, column: 5)
!10855 = !DILocation(line: 175, column: 25, scope: !10854)
!10856 = !DILocation(line: 175, column: 23, scope: !10854)
!10857 = !DILocation(line: 175, column: 14, scope: !10854)
!10858 = !DILocation(line: 176, column: 16, scope: !10854)
!10859 = !DILocation(line: 176, column: 25, scope: !10854)
!10860 = !DILocation(line: 176, column: 23, scope: !10854)
!10861 = !DILocation(line: 176, column: 14, scope: !10854)
!10862 = !DILocation(line: 177, column: 5, scope: !10854)
!10863 = !DILocation(line: 179, column: 23, scope: !10721)
!10864 = !DILocation(line: 179, column: 27, scope: !10721)
!10865 = !DILocation(line: 179, column: 35, scope: !10721)
!10866 = !DILocation(line: 179, column: 39, scope: !10721)
!10867 = !DILocation(line: 179, column: 12, scope: !10721)
!10868 = !DILocation(line: 179, column: 10, scope: !10721)
!10869 = !DILocation(line: 180, column: 10, scope: !10721)
!10870 = !DILocation(line: 180, column: 17, scope: !10721)
!10871 = !DILocation(line: 180, column: 24, scope: !10721)
!10872 = !DILocation(line: 180, column: 37, scope: !10721)
!10873 = !DILocation(line: 180, column: 3, scope: !10721)
!10874 = !DILocation(line: 181, column: 1, scope: !10721)
!10875 = distinct !DISubprogram(name: "match_suffix", scope: !10722, file: !10722, line: 34, type: !10876, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !152)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!146, !145}
!10878 = !DILocalVariable(name: "str", arg: 1, scope: !10875, file: !10722, line: 34, type: !145)
!10879 = !DILocation(line: 34, column: 28, scope: !10875)
!10880 = !DILocalVariable(name: "match", scope: !10875, file: !10722, line: 36, type: !146)
!10881 = !DILocation(line: 36, column: 15, scope: !10875)
!10882 = !DILocalVariable(name: "read_alpha", scope: !10875, file: !10722, line: 37, type: !141)
!10883 = !DILocation(line: 37, column: 8, scope: !10875)
!10884 = !DILocation(line: 38, column: 3, scope: !10875)
!10885 = !DILocation(line: 38, column: 12, scope: !10875)
!10886 = !DILocation(line: 38, column: 11, scope: !10875)
!10887 = !DILocation(line: 38, column: 10, scope: !10875)
!10888 = !DILocation(line: 40, column: 11, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !10722, line: 40, column: 11)
!10890 = distinct !DILexicalBlock(scope: !10875, file: !10722, line: 39, column: 5)
!10891 = !DILocation(line: 40, column: 11, scope: !10890)
!10892 = !DILocation(line: 42, column: 22, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10889, file: !10722, line: 41, column: 9)
!10894 = !DILocation(line: 43, column: 29, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10893, file: !10722, line: 43, column: 15)
!10896 = !DILocation(line: 43, column: 28, scope: !10895)
!10897 = !DILocation(line: 43, column: 27, scope: !10895)
!10898 = !DILocation(line: 43, column: 16, scope: !10895)
!10899 = !DILocation(line: 43, column: 34, scope: !10895)
!10900 = !DILocation(line: 43, column: 46, scope: !10895)
!10901 = !DILocation(line: 43, column: 45, scope: !10895)
!10902 = !DILocation(line: 43, column: 44, scope: !10895)
!10903 = !DILocation(line: 43, column: 41, scope: !10895)
!10904 = !DILocation(line: 43, column: 15, scope: !10893)
!10905 = !DILocation(line: 44, column: 19, scope: !10895)
!10906 = !DILocation(line: 44, column: 13, scope: !10895)
!10907 = !DILocation(line: 45, column: 9, scope: !10893)
!10908 = !DILocation(line: 46, column: 25, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10889, file: !10722, line: 46, column: 16)
!10910 = !DILocation(line: 46, column: 24, scope: !10909)
!10911 = !DILocation(line: 46, column: 23, scope: !10909)
!10912 = !DILocation(line: 46, column: 20, scope: !10909)
!10913 = !DILocation(line: 46, column: 16, scope: !10889)
!10914 = !DILocation(line: 48, column: 22, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10909, file: !10722, line: 47, column: 9)
!10916 = !DILocation(line: 49, column: 16, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10915, file: !10722, line: 49, column: 15)
!10918 = !DILocation(line: 49, column: 15, scope: !10915)
!10919 = !DILocation(line: 50, column: 22, scope: !10917)
!10920 = !DILocation(line: 50, column: 21, scope: !10917)
!10921 = !DILocation(line: 50, column: 19, scope: !10917)
!10922 = !DILocation(line: 50, column: 13, scope: !10917)
!10923 = !DILocation(line: 51, column: 9, scope: !10915)
!10924 = !DILocation(line: 52, column: 30, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10909, file: !10722, line: 52, column: 16)
!10926 = !DILocation(line: 52, column: 29, scope: !10925)
!10927 = !DILocation(line: 52, column: 28, scope: !10925)
!10928 = !DILocation(line: 52, column: 17, scope: !10925)
!10929 = !DILocation(line: 52, column: 35, scope: !10925)
!10930 = !DILocation(line: 52, column: 47, scope: !10925)
!10931 = !DILocation(line: 52, column: 46, scope: !10925)
!10932 = !DILocation(line: 52, column: 45, scope: !10925)
!10933 = !DILocation(line: 52, column: 42, scope: !10925)
!10934 = !DILocation(line: 52, column: 16, scope: !10909)
!10935 = !DILocation(line: 53, column: 15, scope: !10925)
!10936 = !DILocation(line: 53, column: 9, scope: !10925)
!10937 = !DILocation(line: 54, column: 9, scope: !10890)
!10938 = !DILocation(line: 54, column: 13, scope: !10890)
!10939 = distinct !{!10939, !10884, !10940}
!10940 = !DILocation(line: 55, column: 5, scope: !10875)
!10941 = !DILocation(line: 56, column: 10, scope: !10875)
!10942 = !DILocation(line: 56, column: 3, scope: !10875)
!10943 = distinct !DISubprogram(name: "verrevcmp", scope: !10722, file: !10722, line: 84, type: !10944, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !152)
!10944 = !DISubroutineType(types: !10945)
!10945 = !{!27, !146, !149, !146, !149}
!10946 = !DILocalVariable(name: "s1", arg: 1, scope: !10943, file: !10722, line: 84, type: !146)
!10947 = !DILocation(line: 84, column: 24, scope: !10943)
!10948 = !DILocalVariable(name: "s1_len", arg: 2, scope: !10943, file: !10722, line: 84, type: !149)
!10949 = !DILocation(line: 84, column: 35, scope: !10943)
!10950 = !DILocalVariable(name: "s2", arg: 3, scope: !10943, file: !10722, line: 84, type: !146)
!10951 = !DILocation(line: 84, column: 55, scope: !10943)
!10952 = !DILocalVariable(name: "s2_len", arg: 4, scope: !10943, file: !10722, line: 84, type: !149)
!10953 = !DILocation(line: 84, column: 66, scope: !10943)
!10954 = !DILocalVariable(name: "s1_pos", scope: !10943, file: !10722, line: 86, type: !149)
!10955 = !DILocation(line: 86, column: 10, scope: !10943)
!10956 = !DILocalVariable(name: "s2_pos", scope: !10943, file: !10722, line: 87, type: !149)
!10957 = !DILocation(line: 87, column: 10, scope: !10943)
!10958 = !DILocation(line: 88, column: 3, scope: !10943)
!10959 = !DILocation(line: 88, column: 10, scope: !10943)
!10960 = !DILocation(line: 88, column: 19, scope: !10943)
!10961 = !DILocation(line: 88, column: 17, scope: !10943)
!10962 = !DILocation(line: 88, column: 26, scope: !10943)
!10963 = !DILocation(line: 88, column: 29, scope: !10943)
!10964 = !DILocation(line: 88, column: 38, scope: !10943)
!10965 = !DILocation(line: 88, column: 36, scope: !10943)
!10966 = !DILocalVariable(name: "first_diff", scope: !10967, file: !10722, line: 90, type: !27)
!10967 = distinct !DILexicalBlock(scope: !10943, file: !10722, line: 89, column: 5)
!10968 = !DILocation(line: 90, column: 11, scope: !10967)
!10969 = !DILocation(line: 91, column: 7, scope: !10967)
!10970 = !DILocation(line: 91, column: 15, scope: !10967)
!10971 = !DILocation(line: 91, column: 24, scope: !10967)
!10972 = !DILocation(line: 91, column: 22, scope: !10967)
!10973 = !DILocation(line: 91, column: 31, scope: !10967)
!10974 = !DILocation(line: 91, column: 46, scope: !10967)
!10975 = !DILocation(line: 91, column: 49, scope: !10967)
!10976 = !DILocation(line: 91, column: 35, scope: !10967)
!10977 = !DILocation(line: 92, column: 14, scope: !10967)
!10978 = !DILocation(line: 92, column: 18, scope: !10967)
!10979 = !DILocation(line: 92, column: 27, scope: !10967)
!10980 = !DILocation(line: 92, column: 25, scope: !10967)
!10981 = !DILocation(line: 92, column: 34, scope: !10967)
!10982 = !DILocation(line: 92, column: 49, scope: !10967)
!10983 = !DILocation(line: 92, column: 52, scope: !10967)
!10984 = !DILocation(line: 92, column: 38, scope: !10967)
!10985 = !DILocation(line: 92, column: 37, scope: !10967)
!10986 = !DILocation(line: 0, scope: !10967)
!10987 = !DILocalVariable(name: "s1_c", scope: !10988, file: !10722, line: 94, type: !27)
!10988 = distinct !DILexicalBlock(scope: !10967, file: !10722, line: 93, column: 9)
!10989 = !DILocation(line: 94, column: 15, scope: !10988)
!10990 = !DILocation(line: 94, column: 23, scope: !10988)
!10991 = !DILocation(line: 94, column: 33, scope: !10988)
!10992 = !DILocation(line: 94, column: 30, scope: !10988)
!10993 = !DILocation(line: 94, column: 22, scope: !10988)
!10994 = !DILocation(line: 94, column: 54, scope: !10988)
!10995 = !DILocation(line: 94, column: 57, scope: !10988)
!10996 = !DILocation(line: 94, column: 47, scope: !10988)
!10997 = !DILocalVariable(name: "s2_c", scope: !10988, file: !10722, line: 95, type: !27)
!10998 = !DILocation(line: 95, column: 15, scope: !10988)
!10999 = !DILocation(line: 95, column: 23, scope: !10988)
!11000 = !DILocation(line: 95, column: 33, scope: !10988)
!11001 = !DILocation(line: 95, column: 30, scope: !10988)
!11002 = !DILocation(line: 95, column: 22, scope: !10988)
!11003 = !DILocation(line: 95, column: 54, scope: !10988)
!11004 = !DILocation(line: 95, column: 57, scope: !10988)
!11005 = !DILocation(line: 95, column: 47, scope: !10988)
!11006 = !DILocation(line: 96, column: 15, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10988, file: !10722, line: 96, column: 15)
!11008 = !DILocation(line: 96, column: 23, scope: !11007)
!11009 = !DILocation(line: 96, column: 20, scope: !11007)
!11010 = !DILocation(line: 96, column: 15, scope: !10988)
!11011 = !DILocation(line: 97, column: 20, scope: !11007)
!11012 = !DILocation(line: 97, column: 27, scope: !11007)
!11013 = !DILocation(line: 97, column: 25, scope: !11007)
!11014 = !DILocation(line: 97, column: 13, scope: !11007)
!11015 = !DILocation(line: 98, column: 17, scope: !10988)
!11016 = !DILocation(line: 99, column: 17, scope: !10988)
!11017 = distinct !{!11017, !10969, !11018}
!11018 = !DILocation(line: 100, column: 9, scope: !10967)
!11019 = !DILocation(line: 101, column: 7, scope: !10967)
!11020 = !DILocation(line: 101, column: 14, scope: !10967)
!11021 = !DILocation(line: 101, column: 17, scope: !10967)
!11022 = !DILocation(line: 101, column: 25, scope: !10967)
!11023 = !DILocation(line: 102, column: 15, scope: !10967)
!11024 = distinct !{!11024, !11019, !11023}
!11025 = !DILocation(line: 103, column: 7, scope: !10967)
!11026 = !DILocation(line: 103, column: 14, scope: !10967)
!11027 = !DILocation(line: 103, column: 17, scope: !10967)
!11028 = !DILocation(line: 103, column: 25, scope: !10967)
!11029 = !DILocation(line: 104, column: 15, scope: !10967)
!11030 = distinct !{!11030, !11025, !11029}
!11031 = !DILocation(line: 105, column: 7, scope: !10967)
!11032 = !DILocation(line: 105, column: 25, scope: !10967)
!11033 = !DILocation(line: 105, column: 28, scope: !10967)
!11034 = !DILocation(line: 105, column: 14, scope: !10967)
!11035 = !DILocation(line: 105, column: 37, scope: !10967)
!11036 = !DILocation(line: 105, column: 51, scope: !10967)
!11037 = !DILocation(line: 105, column: 54, scope: !10967)
!11038 = !DILocation(line: 105, column: 40, scope: !10967)
!11039 = !DILocation(line: 107, column: 16, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !10722, line: 107, column: 15)
!11041 = distinct !DILexicalBlock(scope: !10967, file: !10722, line: 106, column: 9)
!11042 = !DILocation(line: 107, column: 15, scope: !11041)
!11043 = !DILocation(line: 108, column: 26, scope: !11040)
!11044 = !DILocation(line: 108, column: 29, scope: !11040)
!11045 = !DILocation(line: 108, column: 39, scope: !11040)
!11046 = !DILocation(line: 108, column: 42, scope: !11040)
!11047 = !DILocation(line: 108, column: 37, scope: !11040)
!11048 = !DILocation(line: 108, column: 24, scope: !11040)
!11049 = !DILocation(line: 108, column: 13, scope: !11040)
!11050 = !DILocation(line: 109, column: 17, scope: !11041)
!11051 = !DILocation(line: 110, column: 17, scope: !11041)
!11052 = distinct !{!11052, !11031, !11053}
!11053 = !DILocation(line: 111, column: 9, scope: !10967)
!11054 = !DILocation(line: 112, column: 22, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !10967, file: !10722, line: 112, column: 11)
!11056 = !DILocation(line: 112, column: 25, scope: !11055)
!11057 = !DILocation(line: 112, column: 11, scope: !11055)
!11058 = !DILocation(line: 112, column: 11, scope: !10967)
!11059 = !DILocation(line: 113, column: 9, scope: !11055)
!11060 = !DILocation(line: 114, column: 22, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !10967, file: !10722, line: 114, column: 11)
!11062 = !DILocation(line: 114, column: 25, scope: !11061)
!11063 = !DILocation(line: 114, column: 11, scope: !11061)
!11064 = !DILocation(line: 114, column: 11, scope: !10967)
!11065 = !DILocation(line: 115, column: 9, scope: !11061)
!11066 = !DILocation(line: 116, column: 11, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !10967, file: !10722, line: 116, column: 11)
!11068 = !DILocation(line: 116, column: 11, scope: !10967)
!11069 = !DILocation(line: 117, column: 16, scope: !11067)
!11070 = !DILocation(line: 117, column: 9, scope: !11067)
!11071 = distinct !{!11071, !10958, !11072}
!11072 = !DILocation(line: 118, column: 5, scope: !10943)
!11073 = !DILocation(line: 119, column: 3, scope: !10943)
!11074 = !DILocation(line: 120, column: 1, scope: !10943)
!11075 = distinct !DISubprogram(name: "order", scope: !10722, file: !10722, line: 61, type: !11076, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !152)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!27, !725}
!11078 = !DILocalVariable(name: "c", arg: 1, scope: !11075, file: !10722, line: 61, type: !725)
!11079 = !DILocation(line: 61, column: 22, scope: !11075)
!11080 = !DILocation(line: 63, column: 18, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11075, file: !10722, line: 63, column: 7)
!11082 = !DILocation(line: 63, column: 7, scope: !11081)
!11083 = !DILocation(line: 63, column: 7, scope: !11075)
!11084 = !DILocation(line: 64, column: 5, scope: !11081)
!11085 = !DILocation(line: 65, column: 23, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11081, file: !10722, line: 65, column: 12)
!11087 = !DILocation(line: 65, column: 12, scope: !11086)
!11088 = !DILocation(line: 65, column: 12, scope: !11081)
!11089 = !DILocation(line: 66, column: 12, scope: !11086)
!11090 = !DILocation(line: 66, column: 5, scope: !11086)
!11091 = !DILocation(line: 67, column: 12, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11086, file: !10722, line: 67, column: 12)
!11093 = !DILocation(line: 67, column: 14, scope: !11092)
!11094 = !DILocation(line: 67, column: 12, scope: !11086)
!11095 = !DILocation(line: 68, column: 5, scope: !11092)
!11096 = !DILocation(line: 70, column: 18, scope: !11092)
!11097 = !DILocation(line: 70, column: 12, scope: !11092)
!11098 = !DILocation(line: 70, column: 20, scope: !11092)
!11099 = !DILocation(line: 70, column: 32, scope: !11092)
!11100 = !DILocation(line: 70, column: 5, scope: !11092)
!11101 = !DILocation(line: 71, column: 1, scope: !11075)
!11102 = distinct !DISubprogram(name: "gettime", scope: !11103, file: !11103, line: 29, type: !11104, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1563, retainedNodes: !152)
!11103 = !DIFile(filename: "lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!11104 = !DISubroutineType(types: !11105)
!11105 = !{null, !11106}
!11106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11107, size: 64)
!11107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !11108)
!11108 = !{!11109, !11110}
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11107, file: !163, line: 122, baseType: !164, size: 64)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11107, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!11111 = !DILocalVariable(name: "ts", arg: 1, scope: !11102, file: !11103, line: 29, type: !11106)
!11112 = !DILocation(line: 29, column: 27, scope: !11102)
!11113 = !DILocation(line: 32, column: 34, scope: !11102)
!11114 = !DILocation(line: 32, column: 3, scope: !11102)
!11115 = !DILocation(line: 39, column: 1, scope: !11102)
!11116 = distinct !DISubprogram(name: "current_timespec", scope: !11103, file: !11103, line: 44, type: !11117, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1563, retainedNodes: !152)
!11117 = !DISubroutineType(types: !11118)
!11118 = !{!11107}
!11119 = !DILocalVariable(name: "ts", scope: !11116, file: !11103, line: 46, type: !11107)
!11120 = !DILocation(line: 46, column: 19, scope: !11116)
!11121 = !DILocation(line: 47, column: 3, scope: !11116)
!11122 = !DILocation(line: 48, column: 3, scope: !11116)
!11123 = distinct !DISubprogram(name: "hard_locale", scope: !11124, file: !11124, line: 38, type: !8049, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1565, retainedNodes: !152)
!11124 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!11125 = !DILocalVariable(name: "category", arg: 1, scope: !11123, file: !11124, line: 38, type: !27)
!11126 = !DILocation(line: 38, column: 18, scope: !11123)
!11127 = !DILocalVariable(name: "hard", scope: !11123, file: !11124, line: 40, type: !141)
!11128 = !DILocation(line: 40, column: 8, scope: !11123)
!11129 = !DILocalVariable(name: "p", scope: !11123, file: !11124, line: 41, type: !146)
!11130 = !DILocation(line: 41, column: 15, scope: !11123)
!11131 = !DILocation(line: 41, column: 30, scope: !11123)
!11132 = !DILocation(line: 41, column: 19, scope: !11123)
!11133 = !DILocation(line: 43, column: 7, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11123, file: !11124, line: 43, column: 7)
!11135 = !DILocation(line: 43, column: 7, scope: !11123)
!11136 = !DILocation(line: 47, column: 23, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11138, file: !11124, line: 47, column: 15)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !11124, line: 46, column: 9)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !11124, line: 45, column: 11)
!11140 = distinct !DILexicalBlock(scope: !11134, file: !11124, line: 44, column: 5)
!11141 = !DILocation(line: 47, column: 15, scope: !11137)
!11142 = !DILocation(line: 47, column: 31, scope: !11137)
!11143 = !DILocation(line: 47, column: 36, scope: !11137)
!11144 = !DILocation(line: 47, column: 47, scope: !11137)
!11145 = !DILocation(line: 47, column: 39, scope: !11137)
!11146 = !DILocation(line: 47, column: 59, scope: !11137)
!11147 = !DILocation(line: 47, column: 15, scope: !11138)
!11148 = !DILocation(line: 48, column: 18, scope: !11137)
!11149 = !DILocation(line: 48, column: 13, scope: !11137)
!11150 = !DILocation(line: 69, column: 5, scope: !11140)
!11151 = !DILocation(line: 71, column: 10, scope: !11123)
!11152 = !DILocation(line: 71, column: 3, scope: !11123)
!11153 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !1189, file: !1189, line: 150, type: !11154, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{!149, !11156}
!11156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!11157 = !DILocalVariable(name: "table", arg: 1, scope: !11153, file: !1189, line: 150, type: !11156)
!11158 = !DILocation(line: 150, column: 39, scope: !11153)
!11159 = !DILocation(line: 152, column: 10, scope: !11153)
!11160 = !DILocation(line: 152, column: 17, scope: !11153)
!11161 = !DILocation(line: 152, column: 3, scope: !11153)
!11162 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !1189, file: !1189, line: 158, type: !11154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11163 = !DILocalVariable(name: "table", arg: 1, scope: !11162, file: !1189, line: 158, type: !11156)
!11164 = !DILocation(line: 158, column: 44, scope: !11162)
!11165 = !DILocation(line: 160, column: 10, scope: !11162)
!11166 = !DILocation(line: 160, column: 17, scope: !11162)
!11167 = !DILocation(line: 160, column: 3, scope: !11162)
!11168 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !1189, file: !1189, line: 166, type: !11154, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11169 = !DILocalVariable(name: "table", arg: 1, scope: !11168, file: !1189, line: 166, type: !11156)
!11170 = !DILocation(line: 166, column: 39, scope: !11168)
!11171 = !DILocation(line: 168, column: 10, scope: !11168)
!11172 = !DILocation(line: 168, column: 17, scope: !11168)
!11173 = !DILocation(line: 168, column: 3, scope: !11168)
!11174 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !1189, file: !1189, line: 174, type: !11154, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11175 = !DILocalVariable(name: "table", arg: 1, scope: !11174, file: !1189, line: 174, type: !11156)
!11176 = !DILocation(line: 174, column: 47, scope: !11174)
!11177 = !DILocalVariable(name: "bucket", scope: !11174, file: !1189, line: 176, type: !1198)
!11178 = !DILocation(line: 176, column: 28, scope: !11174)
!11179 = !DILocalVariable(name: "max_bucket_length", scope: !11174, file: !1189, line: 177, type: !149)
!11180 = !DILocation(line: 177, column: 10, scope: !11174)
!11181 = !DILocation(line: 179, column: 17, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11174, file: !1189, line: 179, column: 3)
!11183 = !DILocation(line: 179, column: 24, scope: !11182)
!11184 = !DILocation(line: 179, column: 15, scope: !11182)
!11185 = !DILocation(line: 179, column: 8, scope: !11182)
!11186 = !DILocation(line: 179, column: 32, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11182, file: !1189, line: 179, column: 3)
!11188 = !DILocation(line: 179, column: 41, scope: !11187)
!11189 = !DILocation(line: 179, column: 48, scope: !11187)
!11190 = !DILocation(line: 179, column: 39, scope: !11187)
!11191 = !DILocation(line: 179, column: 3, scope: !11182)
!11192 = !DILocation(line: 181, column: 11, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !1189, line: 181, column: 11)
!11194 = distinct !DILexicalBlock(scope: !11187, file: !1189, line: 180, column: 5)
!11195 = !DILocation(line: 181, column: 19, scope: !11193)
!11196 = !DILocation(line: 181, column: 11, scope: !11194)
!11197 = !DILocalVariable(name: "cursor", scope: !11198, file: !1189, line: 183, type: !1198)
!11198 = distinct !DILexicalBlock(scope: !11193, file: !1189, line: 182, column: 9)
!11199 = !DILocation(line: 183, column: 36, scope: !11198)
!11200 = !DILocation(line: 183, column: 45, scope: !11198)
!11201 = !DILocalVariable(name: "bucket_length", scope: !11198, file: !1189, line: 184, type: !149)
!11202 = !DILocation(line: 184, column: 18, scope: !11198)
!11203 = !DILocation(line: 186, column: 11, scope: !11198)
!11204 = !DILocation(line: 186, column: 27, scope: !11198)
!11205 = !DILocation(line: 186, column: 35, scope: !11198)
!11206 = !DILocation(line: 186, column: 25, scope: !11198)
!11207 = !DILocation(line: 186, column: 41, scope: !11198)
!11208 = !DILocation(line: 187, column: 26, scope: !11198)
!11209 = distinct !{!11209, !11203, !11208}
!11210 = !DILocation(line: 189, column: 15, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11198, file: !1189, line: 189, column: 15)
!11212 = !DILocation(line: 189, column: 31, scope: !11211)
!11213 = !DILocation(line: 189, column: 29, scope: !11211)
!11214 = !DILocation(line: 189, column: 15, scope: !11198)
!11215 = !DILocation(line: 190, column: 33, scope: !11211)
!11216 = !DILocation(line: 190, column: 31, scope: !11211)
!11217 = !DILocation(line: 190, column: 13, scope: !11211)
!11218 = !DILocation(line: 191, column: 9, scope: !11198)
!11219 = !DILocation(line: 192, column: 5, scope: !11194)
!11220 = !DILocation(line: 179, column: 68, scope: !11187)
!11221 = !DILocation(line: 179, column: 3, scope: !11187)
!11222 = distinct !{!11222, !11191, !11223}
!11223 = !DILocation(line: 192, column: 5, scope: !11182)
!11224 = !DILocation(line: 194, column: 10, scope: !11174)
!11225 = !DILocation(line: 194, column: 3, scope: !11174)
!11226 = distinct !DISubprogram(name: "hash_table_ok", scope: !1189, file: !1189, line: 201, type: !11227, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11227 = !DISubroutineType(types: !11228)
!11228 = !{!141, !11156}
!11229 = !DILocalVariable(name: "table", arg: 1, scope: !11226, file: !1189, line: 201, type: !11156)
!11230 = !DILocation(line: 201, column: 34, scope: !11226)
!11231 = !DILocalVariable(name: "bucket", scope: !11226, file: !1189, line: 203, type: !1198)
!11232 = !DILocation(line: 203, column: 28, scope: !11226)
!11233 = !DILocalVariable(name: "n_buckets_used", scope: !11226, file: !1189, line: 204, type: !149)
!11234 = !DILocation(line: 204, column: 10, scope: !11226)
!11235 = !DILocalVariable(name: "n_entries", scope: !11226, file: !1189, line: 205, type: !149)
!11236 = !DILocation(line: 205, column: 10, scope: !11226)
!11237 = !DILocation(line: 207, column: 17, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11226, file: !1189, line: 207, column: 3)
!11239 = !DILocation(line: 207, column: 24, scope: !11238)
!11240 = !DILocation(line: 207, column: 15, scope: !11238)
!11241 = !DILocation(line: 207, column: 8, scope: !11238)
!11242 = !DILocation(line: 207, column: 32, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11238, file: !1189, line: 207, column: 3)
!11244 = !DILocation(line: 207, column: 41, scope: !11243)
!11245 = !DILocation(line: 207, column: 48, scope: !11243)
!11246 = !DILocation(line: 207, column: 39, scope: !11243)
!11247 = !DILocation(line: 207, column: 3, scope: !11238)
!11248 = !DILocation(line: 209, column: 11, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !1189, line: 209, column: 11)
!11250 = distinct !DILexicalBlock(scope: !11243, file: !1189, line: 208, column: 5)
!11251 = !DILocation(line: 209, column: 19, scope: !11249)
!11252 = !DILocation(line: 209, column: 11, scope: !11250)
!11253 = !DILocalVariable(name: "cursor", scope: !11254, file: !1189, line: 211, type: !1198)
!11254 = distinct !DILexicalBlock(scope: !11249, file: !1189, line: 210, column: 9)
!11255 = !DILocation(line: 211, column: 36, scope: !11254)
!11256 = !DILocation(line: 211, column: 45, scope: !11254)
!11257 = !DILocation(line: 214, column: 25, scope: !11254)
!11258 = !DILocation(line: 215, column: 20, scope: !11254)
!11259 = !DILocation(line: 218, column: 11, scope: !11254)
!11260 = !DILocation(line: 218, column: 27, scope: !11254)
!11261 = !DILocation(line: 218, column: 35, scope: !11254)
!11262 = !DILocation(line: 218, column: 25, scope: !11254)
!11263 = !DILocation(line: 218, column: 41, scope: !11254)
!11264 = !DILocation(line: 219, column: 22, scope: !11254)
!11265 = distinct !{!11265, !11259, !11264}
!11266 = !DILocation(line: 220, column: 9, scope: !11254)
!11267 = !DILocation(line: 221, column: 5, scope: !11250)
!11268 = !DILocation(line: 207, column: 68, scope: !11243)
!11269 = !DILocation(line: 207, column: 3, scope: !11243)
!11270 = distinct !{!11270, !11247, !11271}
!11271 = !DILocation(line: 221, column: 5, scope: !11238)
!11272 = !DILocation(line: 223, column: 7, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11226, file: !1189, line: 223, column: 7)
!11274 = !DILocation(line: 223, column: 25, scope: !11273)
!11275 = !DILocation(line: 223, column: 32, scope: !11273)
!11276 = !DILocation(line: 223, column: 22, scope: !11273)
!11277 = !DILocation(line: 223, column: 47, scope: !11273)
!11278 = !DILocation(line: 223, column: 50, scope: !11273)
!11279 = !DILocation(line: 223, column: 63, scope: !11273)
!11280 = !DILocation(line: 223, column: 70, scope: !11273)
!11281 = !DILocation(line: 223, column: 60, scope: !11273)
!11282 = !DILocation(line: 223, column: 7, scope: !11226)
!11283 = !DILocation(line: 224, column: 5, scope: !11273)
!11284 = !DILocation(line: 226, column: 3, scope: !11226)
!11285 = !DILocation(line: 227, column: 1, scope: !11226)
!11286 = distinct !DISubprogram(name: "hash_print_statistics", scope: !1189, file: !1189, line: 230, type: !11287, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{null, !11156, !11289}
!11289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11290, size: 64)
!11290 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1645, line: 48, baseType: !11291)
!11291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !11292)
!11292 = !{!11293, !11294, !11295, !11296, !11297, !11298, !11299, !11300, !11301, !11302, !11303, !11304, !11305, !11313, !11314, !11315, !11316, !11317, !11318, !11319, !11320, !11321, !11322, !11323, !11324, !11325, !11326, !11327, !11328}
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !11291, file: !286, line: 242, baseType: !27, size: 32)
!11294 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !11291, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !11291, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !11291, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !11291, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !11291, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !11291, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !11291, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!11301 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !11291, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !11291, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !11291, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !11291, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !11291, file: !286, line: 260, baseType: !11306, size: 64, offset: 768)
!11306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11307, size: 64)
!11307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !11308)
!11308 = !{!11309, !11310, !11312}
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !11307, file: !286, line: 157, baseType: !11306, size: 64)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !11307, file: !286, line: 158, baseType: !11311, size: 64, offset: 64)
!11311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11291, size: 64)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !11307, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !11291, file: !286, line: 262, baseType: !11311, size: 64, offset: 832)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !11291, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !11291, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !11291, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!11317 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !11291, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!11318 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !11291, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !11291, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!11320 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !11291, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !11291, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!11322 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !11291, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !11291, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !11291, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !11291, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !11291, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !11291, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!11328 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !11291, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!11329 = !DILocalVariable(name: "table", arg: 1, scope: !11286, file: !1189, line: 230, type: !11156)
!11330 = !DILocation(line: 230, column: 42, scope: !11286)
!11331 = !DILocalVariable(name: "stream", arg: 2, scope: !11286, file: !1189, line: 230, type: !11289)
!11332 = !DILocation(line: 230, column: 55, scope: !11286)
!11333 = !DILocalVariable(name: "n_entries", scope: !11286, file: !1189, line: 232, type: !149)
!11334 = !DILocation(line: 232, column: 10, scope: !11286)
!11335 = !DILocation(line: 232, column: 42, scope: !11286)
!11336 = !DILocation(line: 232, column: 22, scope: !11286)
!11337 = !DILocalVariable(name: "n_buckets", scope: !11286, file: !1189, line: 233, type: !149)
!11338 = !DILocation(line: 233, column: 10, scope: !11286)
!11339 = !DILocation(line: 233, column: 42, scope: !11286)
!11340 = !DILocation(line: 233, column: 22, scope: !11286)
!11341 = !DILocalVariable(name: "n_buckets_used", scope: !11286, file: !1189, line: 234, type: !149)
!11342 = !DILocation(line: 234, column: 10, scope: !11286)
!11343 = !DILocation(line: 234, column: 52, scope: !11286)
!11344 = !DILocation(line: 234, column: 27, scope: !11286)
!11345 = !DILocalVariable(name: "max_bucket_length", scope: !11286, file: !1189, line: 235, type: !149)
!11346 = !DILocation(line: 235, column: 10, scope: !11286)
!11347 = !DILocation(line: 235, column: 58, scope: !11286)
!11348 = !DILocation(line: 235, column: 30, scope: !11286)
!11349 = !DILocation(line: 237, column: 12, scope: !11286)
!11350 = !DILocation(line: 237, column: 68, scope: !11286)
!11351 = !DILocation(line: 237, column: 3, scope: !11286)
!11352 = !DILocation(line: 238, column: 12, scope: !11286)
!11353 = !DILocation(line: 238, column: 68, scope: !11286)
!11354 = !DILocation(line: 238, column: 3, scope: !11286)
!11355 = !DILocation(line: 239, column: 12, scope: !11286)
!11356 = !DILocation(line: 240, column: 32, scope: !11286)
!11357 = !DILocation(line: 241, column: 21, scope: !11286)
!11358 = !DILocation(line: 241, column: 19, scope: !11286)
!11359 = !DILocation(line: 241, column: 39, scope: !11286)
!11360 = !DILocation(line: 241, column: 37, scope: !11286)
!11361 = !DILocation(line: 239, column: 3, scope: !11286)
!11362 = !DILocation(line: 242, column: 12, scope: !11286)
!11363 = !DILocation(line: 243, column: 32, scope: !11286)
!11364 = !DILocation(line: 242, column: 3, scope: !11286)
!11365 = !DILocation(line: 244, column: 1, scope: !11286)
!11366 = distinct !DISubprogram(name: "hash_lookup", scope: !1189, file: !1189, line: 261, type: !11367, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11367 = !DISubroutineType(types: !11368)
!11368 = !{!167, !11156, !175}
!11369 = !DILocalVariable(name: "table", arg: 1, scope: !11366, file: !1189, line: 261, type: !11156)
!11370 = !DILocation(line: 261, column: 32, scope: !11366)
!11371 = !DILocalVariable(name: "entry", arg: 2, scope: !11366, file: !1189, line: 261, type: !175)
!11372 = !DILocation(line: 261, column: 51, scope: !11366)
!11373 = !DILocalVariable(name: "bucket", scope: !11366, file: !1189, line: 263, type: !1198)
!11374 = !DILocation(line: 263, column: 28, scope: !11366)
!11375 = !DILocation(line: 263, column: 50, scope: !11366)
!11376 = !DILocation(line: 263, column: 57, scope: !11366)
!11377 = !DILocation(line: 263, column: 37, scope: !11366)
!11378 = !DILocalVariable(name: "cursor", scope: !11366, file: !1189, line: 264, type: !1198)
!11379 = !DILocation(line: 264, column: 28, scope: !11366)
!11380 = !DILocation(line: 266, column: 7, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11366, file: !1189, line: 266, column: 7)
!11382 = !DILocation(line: 266, column: 15, scope: !11381)
!11383 = !DILocation(line: 266, column: 20, scope: !11381)
!11384 = !DILocation(line: 266, column: 7, scope: !11366)
!11385 = !DILocation(line: 267, column: 5, scope: !11381)
!11386 = !DILocation(line: 269, column: 17, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11366, file: !1189, line: 269, column: 3)
!11388 = !DILocation(line: 269, column: 15, scope: !11387)
!11389 = !DILocation(line: 269, column: 8, scope: !11387)
!11390 = !DILocation(line: 269, column: 25, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11387, file: !1189, line: 269, column: 3)
!11392 = !DILocation(line: 269, column: 3, scope: !11387)
!11393 = !DILocation(line: 270, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11391, file: !1189, line: 270, column: 9)
!11395 = !DILocation(line: 270, column: 18, scope: !11394)
!11396 = !DILocation(line: 270, column: 26, scope: !11394)
!11397 = !DILocation(line: 270, column: 15, scope: !11394)
!11398 = !DILocation(line: 270, column: 31, scope: !11394)
!11399 = !DILocation(line: 270, column: 34, scope: !11394)
!11400 = !DILocation(line: 270, column: 41, scope: !11394)
!11401 = !DILocation(line: 270, column: 53, scope: !11394)
!11402 = !DILocation(line: 270, column: 60, scope: !11394)
!11403 = !DILocation(line: 270, column: 68, scope: !11394)
!11404 = !DILocation(line: 270, column: 9, scope: !11391)
!11405 = !DILocation(line: 271, column: 14, scope: !11394)
!11406 = !DILocation(line: 271, column: 22, scope: !11394)
!11407 = !DILocation(line: 271, column: 7, scope: !11394)
!11408 = !DILocation(line: 270, column: 72, scope: !11394)
!11409 = !DILocation(line: 269, column: 42, scope: !11391)
!11410 = !DILocation(line: 269, column: 50, scope: !11391)
!11411 = !DILocation(line: 269, column: 40, scope: !11391)
!11412 = !DILocation(line: 269, column: 3, scope: !11391)
!11413 = distinct !{!11413, !11392, !11414}
!11414 = !DILocation(line: 271, column: 22, scope: !11387)
!11415 = !DILocation(line: 273, column: 3, scope: !11366)
!11416 = !DILocation(line: 274, column: 1, scope: !11366)
!11417 = distinct !DISubprogram(name: "safe_hasher", scope: !1189, file: !1189, line: 249, type: !11418, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{!1192, !11156, !175}
!11420 = !DILocalVariable(name: "table", arg: 1, scope: !11417, file: !1189, line: 249, type: !11156)
!11421 = !DILocation(line: 249, column: 32, scope: !11417)
!11422 = !DILocalVariable(name: "key", arg: 2, scope: !11417, file: !1189, line: 249, type: !175)
!11423 = !DILocation(line: 249, column: 51, scope: !11417)
!11424 = !DILocalVariable(name: "n", scope: !11417, file: !1189, line: 251, type: !149)
!11425 = !DILocation(line: 251, column: 10, scope: !11417)
!11426 = !DILocation(line: 251, column: 14, scope: !11417)
!11427 = !DILocation(line: 251, column: 21, scope: !11417)
!11428 = !DILocation(line: 251, column: 29, scope: !11417)
!11429 = !DILocation(line: 251, column: 34, scope: !11417)
!11430 = !DILocation(line: 251, column: 41, scope: !11417)
!11431 = !DILocation(line: 252, column: 10, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11417, file: !1189, line: 252, column: 7)
!11433 = !DILocation(line: 252, column: 14, scope: !11432)
!11434 = !DILocation(line: 252, column: 21, scope: !11432)
!11435 = !DILocation(line: 252, column: 12, scope: !11432)
!11436 = !DILocation(line: 252, column: 7, scope: !11417)
!11437 = !DILocation(line: 253, column: 5, scope: !11432)
!11438 = !DILocation(line: 254, column: 10, scope: !11417)
!11439 = !DILocation(line: 254, column: 17, scope: !11417)
!11440 = !DILocation(line: 254, column: 26, scope: !11417)
!11441 = !DILocation(line: 254, column: 24, scope: !11417)
!11442 = !DILocation(line: 254, column: 3, scope: !11417)
!11443 = distinct !DISubprogram(name: "hash_get_first", scope: !1189, file: !1189, line: 288, type: !11444, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!167, !11156}
!11446 = !DILocalVariable(name: "table", arg: 1, scope: !11443, file: !1189, line: 288, type: !11156)
!11447 = !DILocation(line: 288, column: 35, scope: !11443)
!11448 = !DILocalVariable(name: "bucket", scope: !11443, file: !1189, line: 290, type: !1198)
!11449 = !DILocation(line: 290, column: 28, scope: !11443)
!11450 = !DILocation(line: 292, column: 7, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11443, file: !1189, line: 292, column: 7)
!11452 = !DILocation(line: 292, column: 14, scope: !11451)
!11453 = !DILocation(line: 292, column: 24, scope: !11451)
!11454 = !DILocation(line: 292, column: 7, scope: !11443)
!11455 = !DILocation(line: 293, column: 5, scope: !11451)
!11456 = !DILocation(line: 295, column: 17, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11443, file: !1189, line: 295, column: 3)
!11458 = !DILocation(line: 295, column: 24, scope: !11457)
!11459 = !DILocation(line: 295, column: 15, scope: !11457)
!11460 = !DILocation(line: 295, column: 8, scope: !11457)
!11461 = !DILocation(line: 296, column: 12, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1189, line: 296, column: 9)
!11463 = distinct !DILexicalBlock(scope: !11457, file: !1189, line: 295, column: 3)
!11464 = !DILocation(line: 296, column: 21, scope: !11462)
!11465 = !DILocation(line: 296, column: 28, scope: !11462)
!11466 = !DILocation(line: 296, column: 19, scope: !11462)
!11467 = !DILocation(line: 296, column: 9, scope: !11463)
!11468 = !DILocation(line: 297, column: 7, scope: !11462)
!11469 = !DILocation(line: 298, column: 14, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11462, file: !1189, line: 298, column: 14)
!11471 = !DILocation(line: 298, column: 22, scope: !11470)
!11472 = !DILocation(line: 298, column: 14, scope: !11462)
!11473 = !DILocation(line: 299, column: 14, scope: !11470)
!11474 = !DILocation(line: 299, column: 22, scope: !11470)
!11475 = !DILocation(line: 299, column: 7, scope: !11470)
!11476 = !DILocation(line: 296, column: 40, scope: !11462)
!11477 = !DILocation(line: 295, column: 40, scope: !11463)
!11478 = !DILocation(line: 295, column: 3, scope: !11463)
!11479 = distinct !{!11479, !11480, !11481}
!11480 = !DILocation(line: 295, column: 3, scope: !11457)
!11481 = !DILocation(line: 299, column: 22, scope: !11457)
!11482 = !DILocation(line: 300, column: 1, scope: !11443)
!11483 = distinct !DISubprogram(name: "hash_get_next", scope: !1189, file: !1189, line: 307, type: !11367, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11484 = !DILocalVariable(name: "table", arg: 1, scope: !11483, file: !1189, line: 307, type: !11156)
!11485 = !DILocation(line: 307, column: 34, scope: !11483)
!11486 = !DILocalVariable(name: "entry", arg: 2, scope: !11483, file: !1189, line: 307, type: !175)
!11487 = !DILocation(line: 307, column: 53, scope: !11483)
!11488 = !DILocalVariable(name: "bucket", scope: !11483, file: !1189, line: 309, type: !1198)
!11489 = !DILocation(line: 309, column: 28, scope: !11483)
!11490 = !DILocation(line: 309, column: 50, scope: !11483)
!11491 = !DILocation(line: 309, column: 57, scope: !11483)
!11492 = !DILocation(line: 309, column: 37, scope: !11483)
!11493 = !DILocalVariable(name: "cursor", scope: !11483, file: !1189, line: 310, type: !1198)
!11494 = !DILocation(line: 310, column: 28, scope: !11483)
!11495 = !DILocation(line: 313, column: 12, scope: !11483)
!11496 = !DILocation(line: 313, column: 10, scope: !11483)
!11497 = !DILocation(line: 314, column: 3, scope: !11483)
!11498 = !DILocation(line: 316, column: 11, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !1189, line: 316, column: 11)
!11500 = distinct !DILexicalBlock(scope: !11483, file: !1189, line: 315, column: 5)
!11501 = !DILocation(line: 316, column: 19, scope: !11499)
!11502 = !DILocation(line: 316, column: 27, scope: !11499)
!11503 = !DILocation(line: 316, column: 24, scope: !11499)
!11504 = !DILocation(line: 316, column: 33, scope: !11499)
!11505 = !DILocation(line: 316, column: 36, scope: !11499)
!11506 = !DILocation(line: 316, column: 44, scope: !11499)
!11507 = !DILocation(line: 316, column: 11, scope: !11500)
!11508 = !DILocation(line: 317, column: 16, scope: !11499)
!11509 = !DILocation(line: 317, column: 24, scope: !11499)
!11510 = !DILocation(line: 317, column: 30, scope: !11499)
!11511 = !DILocation(line: 317, column: 9, scope: !11499)
!11512 = !DILocation(line: 318, column: 16, scope: !11500)
!11513 = !DILocation(line: 318, column: 24, scope: !11500)
!11514 = !DILocation(line: 318, column: 14, scope: !11500)
!11515 = !DILocation(line: 319, column: 5, scope: !11500)
!11516 = !DILocation(line: 320, column: 10, scope: !11483)
!11517 = !DILocation(line: 320, column: 17, scope: !11483)
!11518 = distinct !{!11518, !11497, !11519}
!11519 = !DILocation(line: 320, column: 24, scope: !11483)
!11520 = !DILocation(line: 323, column: 3, scope: !11483)
!11521 = !DILocation(line: 323, column: 10, scope: !11483)
!11522 = !DILocation(line: 323, column: 21, scope: !11483)
!11523 = !DILocation(line: 323, column: 28, scope: !11483)
!11524 = !DILocation(line: 323, column: 19, scope: !11483)
!11525 = !DILocation(line: 324, column: 9, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11483, file: !1189, line: 324, column: 9)
!11527 = !DILocation(line: 324, column: 17, scope: !11526)
!11528 = !DILocation(line: 324, column: 9, scope: !11483)
!11529 = !DILocation(line: 325, column: 14, scope: !11526)
!11530 = !DILocation(line: 325, column: 22, scope: !11526)
!11531 = !DILocation(line: 325, column: 7, scope: !11526)
!11532 = distinct !{!11532, !11520, !11533}
!11533 = !DILocation(line: 325, column: 22, scope: !11483)
!11534 = !DILocation(line: 328, column: 3, scope: !11483)
!11535 = !DILocation(line: 329, column: 1, scope: !11483)
!11536 = distinct !DISubprogram(name: "hash_get_entries", scope: !1189, file: !1189, line: 336, type: !11537, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11537 = !DISubroutineType(types: !11538)
!11538 = !{!149, !11156, !754, !149}
!11539 = !DILocalVariable(name: "table", arg: 1, scope: !11536, file: !1189, line: 336, type: !11156)
!11540 = !DILocation(line: 336, column: 37, scope: !11536)
!11541 = !DILocalVariable(name: "buffer", arg: 2, scope: !11536, file: !1189, line: 336, type: !754)
!11542 = !DILocation(line: 336, column: 51, scope: !11536)
!11543 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11536, file: !1189, line: 337, type: !149)
!11544 = !DILocation(line: 337, column: 26, scope: !11536)
!11545 = !DILocalVariable(name: "counter", scope: !11536, file: !1189, line: 339, type: !149)
!11546 = !DILocation(line: 339, column: 10, scope: !11536)
!11547 = !DILocalVariable(name: "bucket", scope: !11536, file: !1189, line: 340, type: !1198)
!11548 = !DILocation(line: 340, column: 28, scope: !11536)
!11549 = !DILocalVariable(name: "cursor", scope: !11536, file: !1189, line: 341, type: !1198)
!11550 = !DILocation(line: 341, column: 28, scope: !11536)
!11551 = !DILocation(line: 343, column: 17, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11536, file: !1189, line: 343, column: 3)
!11553 = !DILocation(line: 343, column: 24, scope: !11552)
!11554 = !DILocation(line: 343, column: 15, scope: !11552)
!11555 = !DILocation(line: 343, column: 8, scope: !11552)
!11556 = !DILocation(line: 343, column: 32, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11552, file: !1189, line: 343, column: 3)
!11558 = !DILocation(line: 343, column: 41, scope: !11557)
!11559 = !DILocation(line: 343, column: 48, scope: !11557)
!11560 = !DILocation(line: 343, column: 39, scope: !11557)
!11561 = !DILocation(line: 343, column: 3, scope: !11552)
!11562 = !DILocation(line: 345, column: 11, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !1189, line: 345, column: 11)
!11564 = distinct !DILexicalBlock(scope: !11557, file: !1189, line: 344, column: 5)
!11565 = !DILocation(line: 345, column: 19, scope: !11563)
!11566 = !DILocation(line: 345, column: 11, scope: !11564)
!11567 = !DILocation(line: 347, column: 25, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !1189, line: 347, column: 11)
!11569 = distinct !DILexicalBlock(scope: !11563, file: !1189, line: 346, column: 9)
!11570 = !DILocation(line: 347, column: 23, scope: !11568)
!11571 = !DILocation(line: 347, column: 16, scope: !11568)
!11572 = !DILocation(line: 347, column: 33, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11568, file: !1189, line: 347, column: 11)
!11574 = !DILocation(line: 347, column: 11, scope: !11568)
!11575 = !DILocation(line: 349, column: 19, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !1189, line: 349, column: 19)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !1189, line: 348, column: 13)
!11578 = !DILocation(line: 349, column: 30, scope: !11576)
!11579 = !DILocation(line: 349, column: 27, scope: !11576)
!11580 = !DILocation(line: 349, column: 19, scope: !11577)
!11581 = !DILocation(line: 350, column: 24, scope: !11576)
!11582 = !DILocation(line: 350, column: 17, scope: !11576)
!11583 = !DILocation(line: 351, column: 35, scope: !11577)
!11584 = !DILocation(line: 351, column: 43, scope: !11577)
!11585 = !DILocation(line: 351, column: 15, scope: !11577)
!11586 = !DILocation(line: 351, column: 29, scope: !11577)
!11587 = !DILocation(line: 351, column: 33, scope: !11577)
!11588 = !DILocation(line: 352, column: 13, scope: !11577)
!11589 = !DILocation(line: 347, column: 50, scope: !11573)
!11590 = !DILocation(line: 347, column: 58, scope: !11573)
!11591 = !DILocation(line: 347, column: 48, scope: !11573)
!11592 = !DILocation(line: 347, column: 11, scope: !11573)
!11593 = distinct !{!11593, !11574, !11594}
!11594 = !DILocation(line: 352, column: 13, scope: !11568)
!11595 = !DILocation(line: 353, column: 9, scope: !11569)
!11596 = !DILocation(line: 354, column: 5, scope: !11564)
!11597 = !DILocation(line: 343, column: 68, scope: !11557)
!11598 = !DILocation(line: 343, column: 3, scope: !11557)
!11599 = distinct !{!11599, !11561, !11600}
!11600 = !DILocation(line: 354, column: 5, scope: !11552)
!11601 = !DILocation(line: 356, column: 10, scope: !11536)
!11602 = !DILocation(line: 356, column: 3, scope: !11536)
!11603 = !DILocation(line: 357, column: 1, scope: !11536)
!11604 = distinct !DISubprogram(name: "hash_do_for_each", scope: !1189, file: !1189, line: 368, type: !11605, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11605 = !DISubroutineType(types: !11606)
!11606 = !{!149, !11156, !11607, !167}
!11607 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !251, line: 51, baseType: !11608)
!11608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11609, size: 64)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{!141, !167, !167}
!11611 = !DILocalVariable(name: "table", arg: 1, scope: !11604, file: !1189, line: 368, type: !11156)
!11612 = !DILocation(line: 368, column: 37, scope: !11604)
!11613 = !DILocalVariable(name: "processor", arg: 2, scope: !11604, file: !1189, line: 368, type: !11607)
!11614 = !DILocation(line: 368, column: 59, scope: !11604)
!11615 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11604, file: !1189, line: 369, type: !167)
!11616 = !DILocation(line: 369, column: 25, scope: !11604)
!11617 = !DILocalVariable(name: "counter", scope: !11604, file: !1189, line: 371, type: !149)
!11618 = !DILocation(line: 371, column: 10, scope: !11604)
!11619 = !DILocalVariable(name: "bucket", scope: !11604, file: !1189, line: 372, type: !1198)
!11620 = !DILocation(line: 372, column: 28, scope: !11604)
!11621 = !DILocalVariable(name: "cursor", scope: !11604, file: !1189, line: 373, type: !1198)
!11622 = !DILocation(line: 373, column: 28, scope: !11604)
!11623 = !DILocation(line: 375, column: 17, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11604, file: !1189, line: 375, column: 3)
!11625 = !DILocation(line: 375, column: 24, scope: !11624)
!11626 = !DILocation(line: 375, column: 15, scope: !11624)
!11627 = !DILocation(line: 375, column: 8, scope: !11624)
!11628 = !DILocation(line: 375, column: 32, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !1189, line: 375, column: 3)
!11630 = !DILocation(line: 375, column: 41, scope: !11629)
!11631 = !DILocation(line: 375, column: 48, scope: !11629)
!11632 = !DILocation(line: 375, column: 39, scope: !11629)
!11633 = !DILocation(line: 375, column: 3, scope: !11624)
!11634 = !DILocation(line: 377, column: 11, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !1189, line: 377, column: 11)
!11636 = distinct !DILexicalBlock(scope: !11629, file: !1189, line: 376, column: 5)
!11637 = !DILocation(line: 377, column: 19, scope: !11635)
!11638 = !DILocation(line: 377, column: 11, scope: !11636)
!11639 = !DILocation(line: 379, column: 25, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !1189, line: 379, column: 11)
!11641 = distinct !DILexicalBlock(scope: !11635, file: !1189, line: 378, column: 9)
!11642 = !DILocation(line: 379, column: 23, scope: !11640)
!11643 = !DILocation(line: 379, column: 16, scope: !11640)
!11644 = !DILocation(line: 379, column: 33, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11640, file: !1189, line: 379, column: 11)
!11646 = !DILocation(line: 379, column: 11, scope: !11640)
!11647 = !DILocation(line: 381, column: 21, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !1189, line: 381, column: 19)
!11649 = distinct !DILexicalBlock(scope: !11645, file: !1189, line: 380, column: 13)
!11650 = !DILocation(line: 381, column: 32, scope: !11648)
!11651 = !DILocation(line: 381, column: 40, scope: !11648)
!11652 = !DILocation(line: 381, column: 46, scope: !11648)
!11653 = !DILocation(line: 381, column: 19, scope: !11649)
!11654 = !DILocation(line: 382, column: 24, scope: !11648)
!11655 = !DILocation(line: 382, column: 17, scope: !11648)
!11656 = !DILocation(line: 383, column: 22, scope: !11649)
!11657 = !DILocation(line: 384, column: 13, scope: !11649)
!11658 = !DILocation(line: 379, column: 50, scope: !11645)
!11659 = !DILocation(line: 379, column: 58, scope: !11645)
!11660 = !DILocation(line: 379, column: 48, scope: !11645)
!11661 = !DILocation(line: 379, column: 11, scope: !11645)
!11662 = distinct !{!11662, !11646, !11663}
!11663 = !DILocation(line: 384, column: 13, scope: !11640)
!11664 = !DILocation(line: 385, column: 9, scope: !11641)
!11665 = !DILocation(line: 386, column: 5, scope: !11636)
!11666 = !DILocation(line: 375, column: 68, scope: !11629)
!11667 = !DILocation(line: 375, column: 3, scope: !11629)
!11668 = distinct !{!11668, !11633, !11669}
!11669 = !DILocation(line: 386, column: 5, scope: !11624)
!11670 = !DILocation(line: 388, column: 10, scope: !11604)
!11671 = !DILocation(line: 388, column: 3, scope: !11604)
!11672 = !DILocation(line: 389, column: 1, scope: !11604)
!11673 = distinct !DISubprogram(name: "hash_string", scope: !1189, file: !1189, line: 428, type: !11674, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11674 = !DISubroutineType(types: !11675)
!11675 = !{!149, !146, !149}
!11676 = !DILocalVariable(name: "string", arg: 1, scope: !11673, file: !1189, line: 428, type: !146)
!11677 = !DILocation(line: 428, column: 26, scope: !11673)
!11678 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11673, file: !1189, line: 428, type: !149)
!11679 = !DILocation(line: 428, column: 41, scope: !11673)
!11680 = !DILocalVariable(name: "value", scope: !11673, file: !1189, line: 430, type: !149)
!11681 = !DILocation(line: 430, column: 10, scope: !11673)
!11682 = !DILocalVariable(name: "ch", scope: !11673, file: !1189, line: 431, type: !725)
!11683 = !DILocation(line: 431, column: 17, scope: !11673)
!11684 = !DILocation(line: 433, column: 3, scope: !11673)
!11685 = !DILocation(line: 433, column: 17, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11687, file: !1189, line: 433, column: 3)
!11687 = distinct !DILexicalBlock(scope: !11673, file: !1189, line: 433, column: 3)
!11688 = !DILocation(line: 433, column: 16, scope: !11686)
!11689 = !DILocation(line: 433, column: 14, scope: !11686)
!11690 = !DILocation(line: 433, column: 3, scope: !11687)
!11691 = !DILocation(line: 434, column: 14, scope: !11686)
!11692 = !DILocation(line: 434, column: 20, scope: !11686)
!11693 = !DILocation(line: 434, column: 27, scope: !11686)
!11694 = !DILocation(line: 434, column: 25, scope: !11686)
!11695 = !DILocation(line: 434, column: 33, scope: !11686)
!11696 = !DILocation(line: 434, column: 31, scope: !11686)
!11697 = !DILocation(line: 434, column: 11, scope: !11686)
!11698 = !DILocation(line: 434, column: 5, scope: !11686)
!11699 = !DILocation(line: 433, column: 32, scope: !11686)
!11700 = !DILocation(line: 433, column: 3, scope: !11686)
!11701 = distinct !{!11701, !11690, !11702}
!11702 = !DILocation(line: 434, column: 33, scope: !11687)
!11703 = !DILocation(line: 435, column: 10, scope: !11673)
!11704 = !DILocation(line: 435, column: 3, scope: !11673)
!11705 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !1189, file: !1189, line: 479, type: !11706, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11706 = !DISubroutineType(types: !11707)
!11707 = !{null, !11708}
!11708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!11709 = !DILocalVariable(name: "tuning", arg: 1, scope: !11705, file: !1189, line: 479, type: !11708)
!11710 = !DILocation(line: 479, column: 33, scope: !11705)
!11711 = !DILocation(line: 481, column: 4, scope: !11705)
!11712 = !DILocation(line: 481, column: 13, scope: !11705)
!11713 = !DILocation(line: 482, column: 1, scope: !11705)
!11714 = distinct !DISubprogram(name: "hash_initialize", scope: !1189, file: !1189, line: 594, type: !11715, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11715 = !DISubroutineType(types: !11716)
!11716 = !{!1228, !149, !1204, !1216, !1221, !1226}
!11717 = !DILocalVariable(name: "candidate", arg: 1, scope: !11714, file: !1189, line: 594, type: !149)
!11718 = !DILocation(line: 594, column: 25, scope: !11714)
!11719 = !DILocalVariable(name: "tuning", arg: 2, scope: !11714, file: !1189, line: 594, type: !1204)
!11720 = !DILocation(line: 594, column: 55, scope: !11714)
!11721 = !DILocalVariable(name: "hasher", arg: 3, scope: !11714, file: !1189, line: 595, type: !1216)
!11722 = !DILocation(line: 595, column: 30, scope: !11714)
!11723 = !DILocalVariable(name: "comparator", arg: 4, scope: !11714, file: !1189, line: 595, type: !1221)
!11724 = !DILocation(line: 595, column: 54, scope: !11714)
!11725 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11714, file: !1189, line: 596, type: !1226)
!11726 = !DILocation(line: 596, column: 34, scope: !11714)
!11727 = !DILocalVariable(name: "table", scope: !11714, file: !1189, line: 598, type: !1228)
!11728 = !DILocation(line: 598, column: 15, scope: !11714)
!11729 = !DILocation(line: 600, column: 7, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 600, column: 7)
!11731 = !DILocation(line: 600, column: 14, scope: !11730)
!11732 = !DILocation(line: 600, column: 7, scope: !11714)
!11733 = !DILocation(line: 601, column: 12, scope: !11730)
!11734 = !DILocation(line: 601, column: 5, scope: !11730)
!11735 = !DILocation(line: 602, column: 7, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 602, column: 7)
!11737 = !DILocation(line: 602, column: 18, scope: !11736)
!11738 = !DILocation(line: 602, column: 7, scope: !11714)
!11739 = !DILocation(line: 603, column: 16, scope: !11736)
!11740 = !DILocation(line: 603, column: 5, scope: !11736)
!11741 = !DILocation(line: 605, column: 11, scope: !11714)
!11742 = !DILocation(line: 605, column: 9, scope: !11714)
!11743 = !DILocation(line: 606, column: 7, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 606, column: 7)
!11745 = !DILocation(line: 606, column: 13, scope: !11744)
!11746 = !DILocation(line: 606, column: 7, scope: !11714)
!11747 = !DILocation(line: 607, column: 5, scope: !11744)
!11748 = !DILocation(line: 609, column: 8, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 609, column: 7)
!11750 = !DILocation(line: 609, column: 7, scope: !11714)
!11751 = !DILocation(line: 610, column: 12, scope: !11749)
!11752 = !DILocation(line: 610, column: 5, scope: !11749)
!11753 = !DILocation(line: 611, column: 19, scope: !11714)
!11754 = !DILocation(line: 611, column: 3, scope: !11714)
!11755 = !DILocation(line: 611, column: 10, scope: !11714)
!11756 = !DILocation(line: 611, column: 17, scope: !11714)
!11757 = !DILocation(line: 612, column: 22, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 612, column: 7)
!11759 = !DILocation(line: 612, column: 8, scope: !11758)
!11760 = !DILocation(line: 612, column: 7, scope: !11714)
!11761 = !DILocation(line: 619, column: 7, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11758, file: !1189, line: 613, column: 5)
!11763 = !DILocation(line: 622, column: 43, scope: !11714)
!11764 = !DILocation(line: 622, column: 54, scope: !11714)
!11765 = !DILocation(line: 622, column: 22, scope: !11714)
!11766 = !DILocation(line: 622, column: 3, scope: !11714)
!11767 = !DILocation(line: 622, column: 10, scope: !11714)
!11768 = !DILocation(line: 622, column: 20, scope: !11714)
!11769 = !DILocation(line: 623, column: 8, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 623, column: 7)
!11771 = !DILocation(line: 623, column: 15, scope: !11770)
!11772 = !DILocation(line: 623, column: 7, scope: !11714)
!11773 = !DILocation(line: 624, column: 5, scope: !11770)
!11774 = !DILocation(line: 626, column: 27, scope: !11714)
!11775 = !DILocation(line: 626, column: 34, scope: !11714)
!11776 = !DILocation(line: 626, column: 19, scope: !11714)
!11777 = !DILocation(line: 626, column: 3, scope: !11714)
!11778 = !DILocation(line: 626, column: 10, scope: !11714)
!11779 = !DILocation(line: 626, column: 17, scope: !11714)
!11780 = !DILocation(line: 627, column: 7, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11714, file: !1189, line: 627, column: 7)
!11782 = !DILocation(line: 627, column: 14, scope: !11781)
!11783 = !DILocation(line: 627, column: 21, scope: !11781)
!11784 = !DILocation(line: 627, column: 7, scope: !11714)
!11785 = !DILocation(line: 628, column: 5, scope: !11781)
!11786 = !DILocation(line: 629, column: 25, scope: !11714)
!11787 = !DILocation(line: 629, column: 32, scope: !11714)
!11788 = !DILocation(line: 629, column: 41, scope: !11714)
!11789 = !DILocation(line: 629, column: 48, scope: !11714)
!11790 = !DILocation(line: 629, column: 39, scope: !11714)
!11791 = !DILocation(line: 629, column: 3, scope: !11714)
!11792 = !DILocation(line: 629, column: 10, scope: !11714)
!11793 = !DILocation(line: 629, column: 23, scope: !11714)
!11794 = !DILocation(line: 630, column: 3, scope: !11714)
!11795 = !DILocation(line: 630, column: 10, scope: !11714)
!11796 = !DILocation(line: 630, column: 25, scope: !11714)
!11797 = !DILocation(line: 631, column: 3, scope: !11714)
!11798 = !DILocation(line: 631, column: 10, scope: !11714)
!11799 = !DILocation(line: 631, column: 20, scope: !11714)
!11800 = !DILocation(line: 633, column: 19, scope: !11714)
!11801 = !DILocation(line: 633, column: 3, scope: !11714)
!11802 = !DILocation(line: 633, column: 10, scope: !11714)
!11803 = !DILocation(line: 633, column: 17, scope: !11714)
!11804 = !DILocation(line: 634, column: 23, scope: !11714)
!11805 = !DILocation(line: 634, column: 3, scope: !11714)
!11806 = !DILocation(line: 634, column: 10, scope: !11714)
!11807 = !DILocation(line: 634, column: 21, scope: !11714)
!11808 = !DILocation(line: 635, column: 23, scope: !11714)
!11809 = !DILocation(line: 635, column: 3, scope: !11714)
!11810 = !DILocation(line: 635, column: 10, scope: !11714)
!11811 = !DILocation(line: 635, column: 21, scope: !11714)
!11812 = !DILocation(line: 637, column: 3, scope: !11714)
!11813 = !DILocation(line: 637, column: 10, scope: !11714)
!11814 = !DILocation(line: 637, column: 26, scope: !11714)
!11815 = !DILocation(line: 641, column: 10, scope: !11714)
!11816 = !DILocation(line: 641, column: 3, scope: !11714)
!11817 = !DILabel(scope: !11714, name: "fail", file: !1189, line: 643)
!11818 = !DILocation(line: 643, column: 2, scope: !11714)
!11819 = !DILocation(line: 644, column: 9, scope: !11714)
!11820 = !DILocation(line: 644, column: 3, scope: !11714)
!11821 = !DILocation(line: 645, column: 3, scope: !11714)
!11822 = !DILocation(line: 646, column: 1, scope: !11714)
!11823 = distinct !DISubprogram(name: "raw_hasher", scope: !1189, file: !1189, line: 486, type: !1218, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11824 = !DILocalVariable(name: "data", arg: 1, scope: !11823, file: !1189, line: 486, type: !175)
!11825 = !DILocation(line: 486, column: 25, scope: !11823)
!11826 = !DILocalVariable(name: "n", arg: 2, scope: !11823, file: !1189, line: 486, type: !149)
!11827 = !DILocation(line: 486, column: 38, scope: !11823)
!11828 = !DILocalVariable(name: "val", scope: !11823, file: !1189, line: 493, type: !149)
!11829 = !DILocation(line: 493, column: 10, scope: !11823)
!11830 = !DILocation(line: 493, column: 34, scope: !11823)
!11831 = !DILocation(line: 493, column: 25, scope: !11823)
!11832 = !DILocation(line: 493, column: 16, scope: !11823)
!11833 = !DILocation(line: 494, column: 10, scope: !11823)
!11834 = !DILocation(line: 494, column: 16, scope: !11823)
!11835 = !DILocation(line: 494, column: 14, scope: !11823)
!11836 = !DILocation(line: 494, column: 3, scope: !11823)
!11837 = distinct !DISubprogram(name: "raw_comparator", scope: !1189, file: !1189, line: 499, type: !1223, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11838 = !DILocalVariable(name: "a", arg: 1, scope: !11837, file: !1189, line: 499, type: !175)
!11839 = !DILocation(line: 499, column: 29, scope: !11837)
!11840 = !DILocalVariable(name: "b", arg: 2, scope: !11837, file: !1189, line: 499, type: !175)
!11841 = !DILocation(line: 499, column: 44, scope: !11837)
!11842 = !DILocation(line: 501, column: 10, scope: !11837)
!11843 = !DILocation(line: 501, column: 15, scope: !11837)
!11844 = !DILocation(line: 501, column: 12, scope: !11837)
!11845 = !DILocation(line: 501, column: 3, scope: !11837)
!11846 = distinct !DISubprogram(name: "check_tuning", scope: !1189, file: !1189, line: 512, type: !11847, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{!141, !1228}
!11849 = !DILocalVariable(name: "table", arg: 1, scope: !11846, file: !1189, line: 512, type: !1228)
!11850 = !DILocation(line: 512, column: 27, scope: !11846)
!11851 = !DILocalVariable(name: "tuning", scope: !11846, file: !1189, line: 514, type: !1204)
!11852 = !DILocation(line: 514, column: 22, scope: !11846)
!11853 = !DILocation(line: 514, column: 31, scope: !11846)
!11854 = !DILocation(line: 514, column: 38, scope: !11846)
!11855 = !DILocalVariable(name: "epsilon", scope: !11846, file: !1189, line: 515, type: !1210)
!11856 = !DILocation(line: 515, column: 9, scope: !11846)
!11857 = !DILocation(line: 516, column: 7, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11846, file: !1189, line: 516, column: 7)
!11859 = !DILocation(line: 516, column: 14, scope: !11858)
!11860 = !DILocation(line: 516, column: 7, scope: !11846)
!11861 = !DILocation(line: 517, column: 5, scope: !11858)
!11862 = !DILocation(line: 524, column: 11, scope: !11846)
!11863 = !DILocation(line: 526, column: 7, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11846, file: !1189, line: 526, column: 7)
!11865 = !DILocation(line: 526, column: 17, scope: !11864)
!11866 = !DILocation(line: 526, column: 25, scope: !11864)
!11867 = !DILocation(line: 526, column: 15, scope: !11864)
!11868 = !DILocation(line: 527, column: 7, scope: !11864)
!11869 = !DILocation(line: 527, column: 10, scope: !11864)
!11870 = !DILocation(line: 527, column: 18, scope: !11864)
!11871 = !DILocation(line: 527, column: 41, scope: !11864)
!11872 = !DILocation(line: 527, column: 39, scope: !11864)
!11873 = !DILocation(line: 527, column: 35, scope: !11864)
!11874 = !DILocation(line: 528, column: 7, scope: !11864)
!11875 = !DILocation(line: 528, column: 14, scope: !11864)
!11876 = !DILocation(line: 528, column: 12, scope: !11864)
!11877 = !DILocation(line: 528, column: 24, scope: !11864)
!11878 = !DILocation(line: 528, column: 32, scope: !11864)
!11879 = !DILocation(line: 528, column: 22, scope: !11864)
!11880 = !DILocation(line: 529, column: 7, scope: !11864)
!11881 = !DILocation(line: 529, column: 15, scope: !11864)
!11882 = !DILocation(line: 529, column: 23, scope: !11864)
!11883 = !DILocation(line: 529, column: 12, scope: !11864)
!11884 = !DILocation(line: 530, column: 7, scope: !11864)
!11885 = !DILocation(line: 530, column: 10, scope: !11864)
!11886 = !DILocation(line: 530, column: 18, scope: !11864)
!11887 = !DILocation(line: 530, column: 37, scope: !11864)
!11888 = !DILocation(line: 530, column: 35, scope: !11864)
!11889 = !DILocation(line: 530, column: 47, scope: !11864)
!11890 = !DILocation(line: 530, column: 55, scope: !11864)
!11891 = !DILocation(line: 530, column: 45, scope: !11864)
!11892 = !DILocation(line: 531, column: 7, scope: !11864)
!11893 = !DILocation(line: 531, column: 10, scope: !11864)
!11894 = !DILocation(line: 531, column: 18, scope: !11864)
!11895 = !DILocation(line: 531, column: 32, scope: !11864)
!11896 = !DILocation(line: 532, column: 7, scope: !11864)
!11897 = !DILocation(line: 532, column: 10, scope: !11864)
!11898 = !DILocation(line: 532, column: 18, scope: !11864)
!11899 = !DILocation(line: 532, column: 37, scope: !11864)
!11900 = !DILocation(line: 532, column: 35, scope: !11864)
!11901 = !DILocation(line: 532, column: 47, scope: !11864)
!11902 = !DILocation(line: 532, column: 55, scope: !11864)
!11903 = !DILocation(line: 532, column: 45, scope: !11864)
!11904 = !DILocation(line: 526, column: 7, scope: !11846)
!11905 = !DILocation(line: 533, column: 5, scope: !11864)
!11906 = !DILocation(line: 535, column: 3, scope: !11846)
!11907 = !DILocation(line: 535, column: 10, scope: !11846)
!11908 = !DILocation(line: 535, column: 17, scope: !11846)
!11909 = !DILocation(line: 536, column: 3, scope: !11846)
!11910 = !DILocation(line: 537, column: 1, scope: !11846)
!11911 = distinct !DISubprogram(name: "compute_bucket_size", scope: !1189, file: !1189, line: 544, type: !11912, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{!149, !149, !1204}
!11914 = !DILocalVariable(name: "candidate", arg: 1, scope: !11911, file: !1189, line: 544, type: !149)
!11915 = !DILocation(line: 544, column: 29, scope: !11911)
!11916 = !DILocalVariable(name: "tuning", arg: 2, scope: !11911, file: !1189, line: 544, type: !1204)
!11917 = !DILocation(line: 544, column: 59, scope: !11911)
!11918 = !DILocation(line: 546, column: 8, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11911, file: !1189, line: 546, column: 7)
!11920 = !DILocation(line: 546, column: 16, scope: !11919)
!11921 = !DILocation(line: 546, column: 7, scope: !11911)
!11922 = !DILocalVariable(name: "new_candidate", scope: !11923, file: !1189, line: 548, type: !1210)
!11923 = distinct !DILexicalBlock(scope: !11919, file: !1189, line: 547, column: 5)
!11924 = !DILocation(line: 548, column: 13, scope: !11923)
!11925 = !DILocation(line: 548, column: 29, scope: !11923)
!11926 = !DILocation(line: 548, column: 41, scope: !11923)
!11927 = !DILocation(line: 548, column: 49, scope: !11923)
!11928 = !DILocation(line: 548, column: 39, scope: !11923)
!11929 = !DILocation(line: 549, column: 23, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11923, file: !1189, line: 549, column: 11)
!11931 = !DILocation(line: 549, column: 20, scope: !11930)
!11932 = !DILocation(line: 549, column: 11, scope: !11923)
!11933 = !DILocation(line: 550, column: 9, scope: !11930)
!11934 = !DILocation(line: 551, column: 19, scope: !11923)
!11935 = !DILocation(line: 551, column: 17, scope: !11923)
!11936 = !DILocation(line: 552, column: 5, scope: !11923)
!11937 = !DILocation(line: 553, column: 27, scope: !11911)
!11938 = !DILocation(line: 553, column: 15, scope: !11911)
!11939 = !DILocation(line: 553, column: 13, scope: !11911)
!11940 = !DILocation(line: 554, column: 7, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11911, file: !1189, line: 554, column: 7)
!11942 = !DILocation(line: 554, column: 7, scope: !11911)
!11943 = !DILocation(line: 555, column: 5, scope: !11941)
!11944 = !DILocation(line: 556, column: 10, scope: !11911)
!11945 = !DILocation(line: 556, column: 3, scope: !11911)
!11946 = !DILocation(line: 557, column: 1, scope: !11911)
!11947 = distinct !DISubprogram(name: "next_prime", scope: !1189, file: !1189, line: 463, type: !11948, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!149, !149}
!11950 = !DILocalVariable(name: "candidate", arg: 1, scope: !11947, file: !1189, line: 463, type: !149)
!11951 = !DILocation(line: 463, column: 20, scope: !11947)
!11952 = !DILocation(line: 466, column: 7, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11947, file: !1189, line: 466, column: 7)
!11954 = !DILocation(line: 466, column: 17, scope: !11953)
!11955 = !DILocation(line: 466, column: 7, scope: !11947)
!11956 = !DILocation(line: 467, column: 15, scope: !11953)
!11957 = !DILocation(line: 467, column: 5, scope: !11953)
!11958 = !DILocation(line: 470, column: 13, scope: !11947)
!11959 = !DILocation(line: 472, column: 3, scope: !11947)
!11960 = !DILocation(line: 472, column: 22, scope: !11947)
!11961 = !DILocation(line: 472, column: 19, scope: !11947)
!11962 = !DILocation(line: 472, column: 32, scope: !11947)
!11963 = !DILocation(line: 472, column: 46, scope: !11947)
!11964 = !DILocation(line: 472, column: 36, scope: !11947)
!11965 = !DILocation(line: 472, column: 35, scope: !11947)
!11966 = !DILocation(line: 0, scope: !11947)
!11967 = !DILocation(line: 473, column: 15, scope: !11947)
!11968 = distinct !{!11968, !11959, !11969}
!11969 = !DILocation(line: 473, column: 18, scope: !11947)
!11970 = !DILocation(line: 475, column: 10, scope: !11947)
!11971 = !DILocation(line: 475, column: 3, scope: !11947)
!11972 = distinct !DISubprogram(name: "is_prime", scope: !1189, file: !1189, line: 444, type: !11973, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!11973 = !DISubroutineType(types: !11974)
!11974 = !{!141, !149}
!11975 = !DILocalVariable(name: "candidate", arg: 1, scope: !11972, file: !1189, line: 444, type: !149)
!11976 = !DILocation(line: 444, column: 18, scope: !11972)
!11977 = !DILocalVariable(name: "divisor", scope: !11972, file: !1189, line: 446, type: !149)
!11978 = !DILocation(line: 446, column: 10, scope: !11972)
!11979 = !DILocalVariable(name: "square", scope: !11972, file: !1189, line: 447, type: !149)
!11980 = !DILocation(line: 447, column: 10, scope: !11972)
!11981 = !DILocation(line: 447, column: 19, scope: !11972)
!11982 = !DILocation(line: 447, column: 29, scope: !11972)
!11983 = !DILocation(line: 447, column: 27, scope: !11972)
!11984 = !DILocation(line: 449, column: 3, scope: !11972)
!11985 = !DILocation(line: 449, column: 10, scope: !11972)
!11986 = !DILocation(line: 449, column: 19, scope: !11972)
!11987 = !DILocation(line: 449, column: 17, scope: !11972)
!11988 = !DILocation(line: 449, column: 29, scope: !11972)
!11989 = !DILocation(line: 449, column: 33, scope: !11972)
!11990 = !DILocation(line: 449, column: 45, scope: !11972)
!11991 = !DILocation(line: 449, column: 43, scope: !11972)
!11992 = !DILocation(line: 0, scope: !11972)
!11993 = !DILocation(line: 451, column: 14, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11972, file: !1189, line: 450, column: 5)
!11995 = !DILocation(line: 452, column: 21, scope: !11994)
!11996 = !DILocation(line: 452, column: 19, scope: !11994)
!11997 = !DILocation(line: 452, column: 14, scope: !11994)
!11998 = !DILocation(line: 453, column: 14, scope: !11994)
!11999 = distinct !{!11999, !11984, !12000}
!12000 = !DILocation(line: 454, column: 5, scope: !11972)
!12001 = !DILocation(line: 456, column: 11, scope: !11972)
!12002 = !DILocation(line: 456, column: 23, scope: !11972)
!12003 = !DILocation(line: 456, column: 21, scope: !11972)
!12004 = !DILocation(line: 456, column: 10, scope: !11972)
!12005 = !DILocation(line: 456, column: 3, scope: !11972)
!12006 = distinct !DISubprogram(name: "hash_clear", scope: !1189, file: !1189, line: 653, type: !12007, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12007 = !DISubroutineType(types: !12008)
!12008 = !{null, !1228}
!12009 = !DILocalVariable(name: "table", arg: 1, scope: !12006, file: !1189, line: 653, type: !1228)
!12010 = !DILocation(line: 653, column: 25, scope: !12006)
!12011 = !DILocalVariable(name: "bucket", scope: !12006, file: !1189, line: 655, type: !1192)
!12012 = !DILocation(line: 655, column: 22, scope: !12006)
!12013 = !DILocation(line: 657, column: 17, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12006, file: !1189, line: 657, column: 3)
!12015 = !DILocation(line: 657, column: 24, scope: !12014)
!12016 = !DILocation(line: 657, column: 15, scope: !12014)
!12017 = !DILocation(line: 657, column: 8, scope: !12014)
!12018 = !DILocation(line: 657, column: 32, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12014, file: !1189, line: 657, column: 3)
!12020 = !DILocation(line: 657, column: 41, scope: !12019)
!12021 = !DILocation(line: 657, column: 48, scope: !12019)
!12022 = !DILocation(line: 657, column: 39, scope: !12019)
!12023 = !DILocation(line: 657, column: 3, scope: !12014)
!12024 = !DILocation(line: 659, column: 11, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12026, file: !1189, line: 659, column: 11)
!12026 = distinct !DILexicalBlock(scope: !12019, file: !1189, line: 658, column: 5)
!12027 = !DILocation(line: 659, column: 19, scope: !12025)
!12028 = !DILocation(line: 659, column: 11, scope: !12026)
!12029 = !DILocalVariable(name: "cursor", scope: !12030, file: !1189, line: 661, type: !1192)
!12030 = distinct !DILexicalBlock(scope: !12025, file: !1189, line: 660, column: 9)
!12031 = !DILocation(line: 661, column: 30, scope: !12030)
!12032 = !DILocalVariable(name: "next", scope: !12030, file: !1189, line: 662, type: !1192)
!12033 = !DILocation(line: 662, column: 30, scope: !12030)
!12034 = !DILocation(line: 665, column: 25, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12030, file: !1189, line: 665, column: 11)
!12036 = !DILocation(line: 665, column: 33, scope: !12035)
!12037 = !DILocation(line: 665, column: 23, scope: !12035)
!12038 = !DILocation(line: 665, column: 16, scope: !12035)
!12039 = !DILocation(line: 665, column: 39, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12035, file: !1189, line: 665, column: 11)
!12041 = !DILocation(line: 665, column: 11, scope: !12035)
!12042 = !DILocation(line: 667, column: 19, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !1189, line: 667, column: 19)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !1189, line: 666, column: 13)
!12045 = !DILocation(line: 667, column: 26, scope: !12043)
!12046 = !DILocation(line: 667, column: 19, scope: !12044)
!12047 = !DILocation(line: 668, column: 17, scope: !12043)
!12048 = !DILocation(line: 668, column: 24, scope: !12043)
!12049 = !DILocation(line: 668, column: 36, scope: !12043)
!12050 = !DILocation(line: 668, column: 44, scope: !12043)
!12051 = !DILocation(line: 669, column: 15, scope: !12044)
!12052 = !DILocation(line: 669, column: 23, scope: !12044)
!12053 = !DILocation(line: 669, column: 28, scope: !12044)
!12054 = !DILocation(line: 671, column: 22, scope: !12044)
!12055 = !DILocation(line: 671, column: 30, scope: !12044)
!12056 = !DILocation(line: 671, column: 20, scope: !12044)
!12057 = !DILocation(line: 674, column: 30, scope: !12044)
!12058 = !DILocation(line: 674, column: 37, scope: !12044)
!12059 = !DILocation(line: 674, column: 15, scope: !12044)
!12060 = !DILocation(line: 674, column: 23, scope: !12044)
!12061 = !DILocation(line: 674, column: 28, scope: !12044)
!12062 = !DILocation(line: 675, column: 40, scope: !12044)
!12063 = !DILocation(line: 675, column: 15, scope: !12044)
!12064 = !DILocation(line: 675, column: 22, scope: !12044)
!12065 = !DILocation(line: 675, column: 38, scope: !12044)
!12066 = !DILocation(line: 676, column: 13, scope: !12044)
!12067 = !DILocation(line: 665, column: 56, scope: !12040)
!12068 = !DILocation(line: 665, column: 54, scope: !12040)
!12069 = !DILocation(line: 665, column: 11, scope: !12040)
!12070 = distinct !{!12070, !12041, !12071}
!12071 = !DILocation(line: 676, column: 13, scope: !12035)
!12072 = !DILocation(line: 679, column: 15, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12030, file: !1189, line: 679, column: 15)
!12074 = !DILocation(line: 679, column: 22, scope: !12073)
!12075 = !DILocation(line: 679, column: 15, scope: !12030)
!12076 = !DILocation(line: 680, column: 13, scope: !12073)
!12077 = !DILocation(line: 680, column: 20, scope: !12073)
!12078 = !DILocation(line: 680, column: 32, scope: !12073)
!12079 = !DILocation(line: 680, column: 40, scope: !12073)
!12080 = !DILocation(line: 681, column: 11, scope: !12030)
!12081 = !DILocation(line: 681, column: 19, scope: !12030)
!12082 = !DILocation(line: 681, column: 24, scope: !12030)
!12083 = !DILocation(line: 682, column: 11, scope: !12030)
!12084 = !DILocation(line: 682, column: 19, scope: !12030)
!12085 = !DILocation(line: 682, column: 24, scope: !12030)
!12086 = !DILocation(line: 683, column: 9, scope: !12030)
!12087 = !DILocation(line: 684, column: 5, scope: !12026)
!12088 = !DILocation(line: 657, column: 68, scope: !12019)
!12089 = !DILocation(line: 657, column: 3, scope: !12019)
!12090 = distinct !{!12090, !12023, !12091}
!12091 = !DILocation(line: 684, column: 5, scope: !12014)
!12092 = !DILocation(line: 686, column: 3, scope: !12006)
!12093 = !DILocation(line: 686, column: 10, scope: !12006)
!12094 = !DILocation(line: 686, column: 25, scope: !12006)
!12095 = !DILocation(line: 687, column: 3, scope: !12006)
!12096 = !DILocation(line: 687, column: 10, scope: !12006)
!12097 = !DILocation(line: 687, column: 20, scope: !12006)
!12098 = !DILocation(line: 688, column: 1, scope: !12006)
!12099 = distinct !DISubprogram(name: "hash_free", scope: !1189, file: !1189, line: 696, type: !12007, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12100 = !DILocalVariable(name: "table", arg: 1, scope: !12099, file: !1189, line: 696, type: !1228)
!12101 = !DILocation(line: 696, column: 24, scope: !12099)
!12102 = !DILocalVariable(name: "bucket", scope: !12099, file: !1189, line: 698, type: !1192)
!12103 = !DILocation(line: 698, column: 22, scope: !12099)
!12104 = !DILocalVariable(name: "cursor", scope: !12099, file: !1189, line: 699, type: !1192)
!12105 = !DILocation(line: 699, column: 22, scope: !12099)
!12106 = !DILocalVariable(name: "next", scope: !12099, file: !1189, line: 700, type: !1192)
!12107 = !DILocation(line: 700, column: 22, scope: !12099)
!12108 = !DILocation(line: 703, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12099, file: !1189, line: 703, column: 7)
!12110 = !DILocation(line: 703, column: 14, scope: !12109)
!12111 = !DILocation(line: 703, column: 25, scope: !12109)
!12112 = !DILocation(line: 703, column: 28, scope: !12109)
!12113 = !DILocation(line: 703, column: 35, scope: !12109)
!12114 = !DILocation(line: 703, column: 7, scope: !12099)
!12115 = !DILocation(line: 705, column: 21, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !1189, line: 705, column: 7)
!12117 = distinct !DILexicalBlock(scope: !12109, file: !1189, line: 704, column: 5)
!12118 = !DILocation(line: 705, column: 28, scope: !12116)
!12119 = !DILocation(line: 705, column: 19, scope: !12116)
!12120 = !DILocation(line: 705, column: 12, scope: !12116)
!12121 = !DILocation(line: 705, column: 36, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12116, file: !1189, line: 705, column: 7)
!12123 = !DILocation(line: 705, column: 45, scope: !12122)
!12124 = !DILocation(line: 705, column: 52, scope: !12122)
!12125 = !DILocation(line: 705, column: 43, scope: !12122)
!12126 = !DILocation(line: 705, column: 7, scope: !12116)
!12127 = !DILocation(line: 707, column: 15, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !1189, line: 707, column: 15)
!12129 = distinct !DILexicalBlock(scope: !12122, file: !1189, line: 706, column: 9)
!12130 = !DILocation(line: 707, column: 23, scope: !12128)
!12131 = !DILocation(line: 707, column: 15, scope: !12129)
!12132 = !DILocation(line: 709, column: 29, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !1189, line: 709, column: 15)
!12134 = distinct !DILexicalBlock(scope: !12128, file: !1189, line: 708, column: 13)
!12135 = !DILocation(line: 709, column: 27, scope: !12133)
!12136 = !DILocation(line: 709, column: 20, scope: !12133)
!12137 = !DILocation(line: 709, column: 37, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12133, file: !1189, line: 709, column: 15)
!12139 = !DILocation(line: 709, column: 15, scope: !12133)
!12140 = !DILocation(line: 710, column: 17, scope: !12138)
!12141 = !DILocation(line: 710, column: 24, scope: !12138)
!12142 = !DILocation(line: 710, column: 36, scope: !12138)
!12143 = !DILocation(line: 710, column: 44, scope: !12138)
!12144 = !DILocation(line: 709, column: 54, scope: !12138)
!12145 = !DILocation(line: 709, column: 62, scope: !12138)
!12146 = !DILocation(line: 709, column: 52, scope: !12138)
!12147 = !DILocation(line: 709, column: 15, scope: !12138)
!12148 = distinct !{!12148, !12139, !12149}
!12149 = !DILocation(line: 710, column: 48, scope: !12133)
!12150 = !DILocation(line: 711, column: 13, scope: !12134)
!12151 = !DILocation(line: 712, column: 9, scope: !12129)
!12152 = !DILocation(line: 705, column: 72, scope: !12122)
!12153 = !DILocation(line: 705, column: 7, scope: !12122)
!12154 = distinct !{!12154, !12126, !12155}
!12155 = !DILocation(line: 712, column: 9, scope: !12116)
!12156 = !DILocation(line: 713, column: 5, scope: !12117)
!12157 = !DILocation(line: 722, column: 17, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12099, file: !1189, line: 722, column: 3)
!12159 = !DILocation(line: 722, column: 24, scope: !12158)
!12160 = !DILocation(line: 722, column: 15, scope: !12158)
!12161 = !DILocation(line: 722, column: 8, scope: !12158)
!12162 = !DILocation(line: 722, column: 32, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12158, file: !1189, line: 722, column: 3)
!12164 = !DILocation(line: 722, column: 41, scope: !12163)
!12165 = !DILocation(line: 722, column: 48, scope: !12163)
!12166 = !DILocation(line: 722, column: 39, scope: !12163)
!12167 = !DILocation(line: 722, column: 3, scope: !12158)
!12168 = !DILocation(line: 724, column: 21, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !1189, line: 724, column: 7)
!12170 = distinct !DILexicalBlock(scope: !12163, file: !1189, line: 723, column: 5)
!12171 = !DILocation(line: 724, column: 29, scope: !12169)
!12172 = !DILocation(line: 724, column: 19, scope: !12169)
!12173 = !DILocation(line: 724, column: 12, scope: !12169)
!12174 = !DILocation(line: 724, column: 35, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12169, file: !1189, line: 724, column: 7)
!12176 = !DILocation(line: 724, column: 7, scope: !12169)
!12177 = !DILocation(line: 726, column: 18, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12175, file: !1189, line: 725, column: 9)
!12179 = !DILocation(line: 726, column: 26, scope: !12178)
!12180 = !DILocation(line: 726, column: 16, scope: !12178)
!12181 = !DILocation(line: 727, column: 17, scope: !12178)
!12182 = !DILocation(line: 727, column: 11, scope: !12178)
!12183 = !DILocation(line: 728, column: 9, scope: !12178)
!12184 = !DILocation(line: 724, column: 52, scope: !12175)
!12185 = !DILocation(line: 724, column: 50, scope: !12175)
!12186 = !DILocation(line: 724, column: 7, scope: !12175)
!12187 = distinct !{!12187, !12176, !12188}
!12188 = !DILocation(line: 728, column: 9, scope: !12169)
!12189 = !DILocation(line: 729, column: 5, scope: !12170)
!12190 = !DILocation(line: 722, column: 68, scope: !12163)
!12191 = !DILocation(line: 722, column: 3, scope: !12163)
!12192 = distinct !{!12192, !12167, !12193}
!12193 = !DILocation(line: 729, column: 5, scope: !12158)
!12194 = !DILocation(line: 732, column: 17, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12099, file: !1189, line: 732, column: 3)
!12196 = !DILocation(line: 732, column: 24, scope: !12195)
!12197 = !DILocation(line: 732, column: 15, scope: !12195)
!12198 = !DILocation(line: 732, column: 8, scope: !12195)
!12199 = !DILocation(line: 732, column: 41, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12195, file: !1189, line: 732, column: 3)
!12201 = !DILocation(line: 732, column: 3, scope: !12195)
!12202 = !DILocation(line: 734, column: 14, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12200, file: !1189, line: 733, column: 5)
!12204 = !DILocation(line: 734, column: 22, scope: !12203)
!12205 = !DILocation(line: 734, column: 12, scope: !12203)
!12206 = !DILocation(line: 735, column: 13, scope: !12203)
!12207 = !DILocation(line: 735, column: 7, scope: !12203)
!12208 = !DILocation(line: 736, column: 5, scope: !12203)
!12209 = !DILocation(line: 732, column: 58, scope: !12200)
!12210 = !DILocation(line: 732, column: 56, scope: !12200)
!12211 = !DILocation(line: 732, column: 3, scope: !12200)
!12212 = distinct !{!12212, !12201, !12213}
!12213 = !DILocation(line: 736, column: 5, scope: !12195)
!12214 = !DILocation(line: 741, column: 9, scope: !12099)
!12215 = !DILocation(line: 741, column: 16, scope: !12099)
!12216 = !DILocation(line: 741, column: 3, scope: !12099)
!12217 = !DILocation(line: 742, column: 9, scope: !12099)
!12218 = !DILocation(line: 742, column: 3, scope: !12099)
!12219 = !DILocation(line: 743, column: 1, scope: !12099)
!12220 = distinct !DISubprogram(name: "hash_rehash", scope: !1189, file: !1189, line: 943, type: !12221, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{!141, !1228, !149}
!12223 = !DILocalVariable(name: "table", arg: 1, scope: !12220, file: !1189, line: 943, type: !1228)
!12224 = !DILocation(line: 943, column: 26, scope: !12220)
!12225 = !DILocalVariable(name: "candidate", arg: 2, scope: !12220, file: !1189, line: 943, type: !149)
!12226 = !DILocation(line: 943, column: 40, scope: !12220)
!12227 = !DILocalVariable(name: "storage", scope: !12220, file: !1189, line: 945, type: !1187)
!12228 = !DILocation(line: 945, column: 14, scope: !12220)
!12229 = !DILocalVariable(name: "new_table", scope: !12220, file: !1189, line: 946, type: !1228)
!12230 = !DILocation(line: 946, column: 15, scope: !12220)
!12231 = !DILocalVariable(name: "new_size", scope: !12220, file: !1189, line: 947, type: !149)
!12232 = !DILocation(line: 947, column: 10, scope: !12220)
!12233 = !DILocation(line: 947, column: 42, scope: !12220)
!12234 = !DILocation(line: 947, column: 53, scope: !12220)
!12235 = !DILocation(line: 947, column: 60, scope: !12220)
!12236 = !DILocation(line: 947, column: 21, scope: !12220)
!12237 = !DILocation(line: 949, column: 8, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12220, file: !1189, line: 949, column: 7)
!12239 = !DILocation(line: 949, column: 7, scope: !12220)
!12240 = !DILocation(line: 950, column: 5, scope: !12238)
!12241 = !DILocation(line: 951, column: 7, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12220, file: !1189, line: 951, column: 7)
!12243 = !DILocation(line: 951, column: 19, scope: !12242)
!12244 = !DILocation(line: 951, column: 26, scope: !12242)
!12245 = !DILocation(line: 951, column: 16, scope: !12242)
!12246 = !DILocation(line: 951, column: 7, scope: !12220)
!12247 = !DILocation(line: 952, column: 5, scope: !12242)
!12248 = !DILocation(line: 953, column: 13, scope: !12220)
!12249 = !DILocation(line: 954, column: 31, scope: !12220)
!12250 = !DILocation(line: 954, column: 23, scope: !12220)
!12251 = !DILocation(line: 954, column: 3, scope: !12220)
!12252 = !DILocation(line: 954, column: 14, scope: !12220)
!12253 = !DILocation(line: 954, column: 21, scope: !12220)
!12254 = !DILocation(line: 955, column: 7, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12220, file: !1189, line: 955, column: 7)
!12256 = !DILocation(line: 955, column: 18, scope: !12255)
!12257 = !DILocation(line: 955, column: 25, scope: !12255)
!12258 = !DILocation(line: 955, column: 7, scope: !12220)
!12259 = !DILocation(line: 956, column: 5, scope: !12255)
!12260 = !DILocation(line: 957, column: 26, scope: !12220)
!12261 = !DILocation(line: 957, column: 3, scope: !12220)
!12262 = !DILocation(line: 957, column: 14, scope: !12220)
!12263 = !DILocation(line: 957, column: 24, scope: !12220)
!12264 = !DILocation(line: 958, column: 29, scope: !12220)
!12265 = !DILocation(line: 958, column: 40, scope: !12220)
!12266 = !DILocation(line: 958, column: 49, scope: !12220)
!12267 = !DILocation(line: 958, column: 47, scope: !12220)
!12268 = !DILocation(line: 958, column: 3, scope: !12220)
!12269 = !DILocation(line: 958, column: 14, scope: !12220)
!12270 = !DILocation(line: 958, column: 27, scope: !12220)
!12271 = !DILocation(line: 959, column: 3, scope: !12220)
!12272 = !DILocation(line: 959, column: 14, scope: !12220)
!12273 = !DILocation(line: 959, column: 29, scope: !12220)
!12274 = !DILocation(line: 960, column: 3, scope: !12220)
!12275 = !DILocation(line: 960, column: 14, scope: !12220)
!12276 = !DILocation(line: 960, column: 24, scope: !12220)
!12277 = !DILocation(line: 961, column: 23, scope: !12220)
!12278 = !DILocation(line: 961, column: 30, scope: !12220)
!12279 = !DILocation(line: 961, column: 3, scope: !12220)
!12280 = !DILocation(line: 961, column: 14, scope: !12220)
!12281 = !DILocation(line: 961, column: 21, scope: !12220)
!12282 = !DILocation(line: 962, column: 23, scope: !12220)
!12283 = !DILocation(line: 962, column: 30, scope: !12220)
!12284 = !DILocation(line: 962, column: 3, scope: !12220)
!12285 = !DILocation(line: 962, column: 14, scope: !12220)
!12286 = !DILocation(line: 962, column: 21, scope: !12220)
!12287 = !DILocation(line: 963, column: 27, scope: !12220)
!12288 = !DILocation(line: 963, column: 34, scope: !12220)
!12289 = !DILocation(line: 963, column: 3, scope: !12220)
!12290 = !DILocation(line: 963, column: 14, scope: !12220)
!12291 = !DILocation(line: 963, column: 25, scope: !12220)
!12292 = !DILocation(line: 964, column: 27, scope: !12220)
!12293 = !DILocation(line: 964, column: 34, scope: !12220)
!12294 = !DILocation(line: 964, column: 3, scope: !12220)
!12295 = !DILocation(line: 964, column: 14, scope: !12220)
!12296 = !DILocation(line: 964, column: 25, scope: !12220)
!12297 = !DILocation(line: 984, column: 32, scope: !12220)
!12298 = !DILocation(line: 984, column: 39, scope: !12220)
!12299 = !DILocation(line: 984, column: 3, scope: !12220)
!12300 = !DILocation(line: 984, column: 14, scope: !12220)
!12301 = !DILocation(line: 984, column: 30, scope: !12220)
!12302 = !DILocation(line: 986, column: 25, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12220, file: !1189, line: 986, column: 7)
!12304 = !DILocation(line: 986, column: 36, scope: !12303)
!12305 = !DILocation(line: 986, column: 7, scope: !12303)
!12306 = !DILocation(line: 986, column: 7, scope: !12220)
!12307 = !DILocation(line: 989, column: 13, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12303, file: !1189, line: 987, column: 5)
!12309 = !DILocation(line: 989, column: 20, scope: !12308)
!12310 = !DILocation(line: 989, column: 7, scope: !12308)
!12311 = !DILocation(line: 990, column: 23, scope: !12308)
!12312 = !DILocation(line: 990, column: 34, scope: !12308)
!12313 = !DILocation(line: 990, column: 7, scope: !12308)
!12314 = !DILocation(line: 990, column: 14, scope: !12308)
!12315 = !DILocation(line: 990, column: 21, scope: !12308)
!12316 = !DILocation(line: 991, column: 29, scope: !12308)
!12317 = !DILocation(line: 991, column: 40, scope: !12308)
!12318 = !DILocation(line: 991, column: 7, scope: !12308)
!12319 = !DILocation(line: 991, column: 14, scope: !12308)
!12320 = !DILocation(line: 991, column: 27, scope: !12308)
!12321 = !DILocation(line: 992, column: 26, scope: !12308)
!12322 = !DILocation(line: 992, column: 37, scope: !12308)
!12323 = !DILocation(line: 992, column: 7, scope: !12308)
!12324 = !DILocation(line: 992, column: 14, scope: !12308)
!12325 = !DILocation(line: 992, column: 24, scope: !12308)
!12326 = !DILocation(line: 993, column: 31, scope: !12308)
!12327 = !DILocation(line: 993, column: 42, scope: !12308)
!12328 = !DILocation(line: 993, column: 7, scope: !12308)
!12329 = !DILocation(line: 993, column: 14, scope: !12308)
!12330 = !DILocation(line: 993, column: 29, scope: !12308)
!12331 = !DILocation(line: 994, column: 32, scope: !12308)
!12332 = !DILocation(line: 994, column: 43, scope: !12308)
!12333 = !DILocation(line: 994, column: 7, scope: !12308)
!12334 = !DILocation(line: 994, column: 14, scope: !12308)
!12335 = !DILocation(line: 994, column: 30, scope: !12308)
!12336 = !DILocation(line: 996, column: 7, scope: !12308)
!12337 = !DILocation(line: 1012, column: 28, scope: !12220)
!12338 = !DILocation(line: 1012, column: 39, scope: !12220)
!12339 = !DILocation(line: 1012, column: 3, scope: !12220)
!12340 = !DILocation(line: 1012, column: 10, scope: !12220)
!12341 = !DILocation(line: 1012, column: 26, scope: !12220)
!12342 = !DILocation(line: 1013, column: 28, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12220, file: !1189, line: 1013, column: 7)
!12344 = !DILocation(line: 1013, column: 35, scope: !12343)
!12345 = !DILocation(line: 1013, column: 10, scope: !12343)
!12346 = !DILocation(line: 1014, column: 10, scope: !12343)
!12347 = !DILocation(line: 1014, column: 31, scope: !12343)
!12348 = !DILocation(line: 1014, column: 38, scope: !12343)
!12349 = !DILocation(line: 1014, column: 13, scope: !12343)
!12350 = !DILocation(line: 1013, column: 7, scope: !12220)
!12351 = !DILocation(line: 1015, column: 5, scope: !12343)
!12352 = !DILocation(line: 1017, column: 9, scope: !12220)
!12353 = !DILocation(line: 1017, column: 20, scope: !12220)
!12354 = !DILocation(line: 1017, column: 3, scope: !12220)
!12355 = !DILocation(line: 1018, column: 3, scope: !12220)
!12356 = !DILocation(line: 1019, column: 1, scope: !12220)
!12357 = distinct !DISubprogram(name: "transfer_entries", scope: !1189, file: !1189, line: 860, type: !12358, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12358 = !DISubroutineType(types: !12359)
!12359 = !{!141, !1228, !1228, !141}
!12360 = !DILocalVariable(name: "dst", arg: 1, scope: !12357, file: !1189, line: 860, type: !1228)
!12361 = !DILocation(line: 860, column: 31, scope: !12357)
!12362 = !DILocalVariable(name: "src", arg: 2, scope: !12357, file: !1189, line: 860, type: !1228)
!12363 = !DILocation(line: 860, column: 48, scope: !12357)
!12364 = !DILocalVariable(name: "safe", arg: 3, scope: !12357, file: !1189, line: 860, type: !141)
!12365 = !DILocation(line: 860, column: 58, scope: !12357)
!12366 = !DILocalVariable(name: "bucket", scope: !12357, file: !1189, line: 862, type: !1192)
!12367 = !DILocation(line: 862, column: 22, scope: !12357)
!12368 = !DILocalVariable(name: "cursor", scope: !12357, file: !1189, line: 863, type: !1192)
!12369 = !DILocation(line: 863, column: 22, scope: !12357)
!12370 = !DILocalVariable(name: "next", scope: !12357, file: !1189, line: 864, type: !1192)
!12371 = !DILocation(line: 864, column: 22, scope: !12357)
!12372 = !DILocation(line: 865, column: 17, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12357, file: !1189, line: 865, column: 3)
!12374 = !DILocation(line: 865, column: 22, scope: !12373)
!12375 = !DILocation(line: 865, column: 15, scope: !12373)
!12376 = !DILocation(line: 865, column: 8, scope: !12373)
!12377 = !DILocation(line: 865, column: 30, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12373, file: !1189, line: 865, column: 3)
!12379 = !DILocation(line: 865, column: 39, scope: !12378)
!12380 = !DILocation(line: 865, column: 44, scope: !12378)
!12381 = !DILocation(line: 865, column: 37, scope: !12378)
!12382 = !DILocation(line: 865, column: 3, scope: !12373)
!12383 = !DILocation(line: 866, column: 9, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12378, file: !1189, line: 866, column: 9)
!12385 = !DILocation(line: 866, column: 17, scope: !12384)
!12386 = !DILocation(line: 866, column: 9, scope: !12378)
!12387 = !DILocalVariable(name: "data", scope: !12388, file: !1189, line: 868, type: !167)
!12388 = distinct !DILexicalBlock(scope: !12384, file: !1189, line: 867, column: 7)
!12389 = !DILocation(line: 868, column: 15, scope: !12388)
!12390 = !DILocalVariable(name: "new_bucket", scope: !12388, file: !1189, line: 869, type: !1192)
!12391 = !DILocation(line: 869, column: 28, scope: !12388)
!12392 = !DILocation(line: 877, column: 23, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12388, file: !1189, line: 877, column: 9)
!12394 = !DILocation(line: 877, column: 31, scope: !12393)
!12395 = !DILocation(line: 877, column: 21, scope: !12393)
!12396 = !DILocation(line: 877, column: 14, scope: !12393)
!12397 = !DILocation(line: 877, column: 37, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12393, file: !1189, line: 877, column: 9)
!12399 = !DILocation(line: 877, column: 9, scope: !12393)
!12400 = !DILocation(line: 879, column: 20, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12398, file: !1189, line: 878, column: 11)
!12402 = !DILocation(line: 879, column: 28, scope: !12401)
!12403 = !DILocation(line: 879, column: 18, scope: !12401)
!12404 = !DILocation(line: 880, column: 39, scope: !12401)
!12405 = !DILocation(line: 880, column: 44, scope: !12401)
!12406 = !DILocation(line: 880, column: 26, scope: !12401)
!12407 = !DILocation(line: 880, column: 24, scope: !12401)
!12408 = !DILocation(line: 882, column: 20, scope: !12401)
!12409 = !DILocation(line: 882, column: 28, scope: !12401)
!12410 = !DILocation(line: 882, column: 18, scope: !12401)
!12411 = !DILocation(line: 884, column: 17, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12401, file: !1189, line: 884, column: 17)
!12413 = !DILocation(line: 884, column: 29, scope: !12412)
!12414 = !DILocation(line: 884, column: 17, scope: !12401)
!12415 = !DILocation(line: 888, column: 32, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12412, file: !1189, line: 885, column: 15)
!12417 = !DILocation(line: 888, column: 44, scope: !12416)
!12418 = !DILocation(line: 888, column: 17, scope: !12416)
!12419 = !DILocation(line: 888, column: 25, scope: !12416)
!12420 = !DILocation(line: 888, column: 30, scope: !12416)
!12421 = !DILocation(line: 889, column: 36, scope: !12416)
!12422 = !DILocation(line: 889, column: 17, scope: !12416)
!12423 = !DILocation(line: 889, column: 29, scope: !12416)
!12424 = !DILocation(line: 889, column: 34, scope: !12416)
!12425 = !DILocation(line: 890, column: 15, scope: !12416)
!12426 = !DILocation(line: 895, column: 36, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12412, file: !1189, line: 892, column: 15)
!12428 = !DILocation(line: 895, column: 17, scope: !12427)
!12429 = !DILocation(line: 895, column: 29, scope: !12427)
!12430 = !DILocation(line: 895, column: 34, scope: !12427)
!12431 = !DILocation(line: 896, column: 17, scope: !12427)
!12432 = !DILocation(line: 896, column: 22, scope: !12427)
!12433 = !DILocation(line: 896, column: 36, scope: !12427)
!12434 = !DILocation(line: 897, column: 29, scope: !12427)
!12435 = !DILocation(line: 897, column: 34, scope: !12427)
!12436 = !DILocation(line: 897, column: 17, scope: !12427)
!12437 = !DILocation(line: 899, column: 11, scope: !12401)
!12438 = !DILocation(line: 877, column: 54, scope: !12398)
!12439 = !DILocation(line: 877, column: 52, scope: !12398)
!12440 = !DILocation(line: 877, column: 9, scope: !12398)
!12441 = distinct !{!12441, !12399, !12442}
!12442 = !DILocation(line: 899, column: 11, scope: !12393)
!12443 = !DILocation(line: 903, column: 16, scope: !12388)
!12444 = !DILocation(line: 903, column: 24, scope: !12388)
!12445 = !DILocation(line: 903, column: 14, scope: !12388)
!12446 = !DILocation(line: 904, column: 9, scope: !12388)
!12447 = !DILocation(line: 904, column: 17, scope: !12388)
!12448 = !DILocation(line: 904, column: 22, scope: !12388)
!12449 = !DILocation(line: 905, column: 13, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12388, file: !1189, line: 905, column: 13)
!12451 = !DILocation(line: 905, column: 13, scope: !12388)
!12452 = !DILocation(line: 906, column: 11, scope: !12450)
!12453 = !DILocation(line: 907, column: 35, scope: !12388)
!12454 = !DILocation(line: 907, column: 40, scope: !12388)
!12455 = !DILocation(line: 907, column: 22, scope: !12388)
!12456 = !DILocation(line: 907, column: 20, scope: !12388)
!12457 = !DILocation(line: 909, column: 13, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12388, file: !1189, line: 909, column: 13)
!12459 = !DILocation(line: 909, column: 25, scope: !12458)
!12460 = !DILocation(line: 909, column: 13, scope: !12388)
!12461 = !DILocalVariable(name: "new_entry", scope: !12462, file: !1189, line: 913, type: !1192)
!12462 = distinct !DILexicalBlock(scope: !12458, file: !1189, line: 910, column: 11)
!12463 = !DILocation(line: 913, column: 32, scope: !12462)
!12464 = !DILocation(line: 913, column: 60, scope: !12462)
!12465 = !DILocation(line: 913, column: 44, scope: !12462)
!12466 = !DILocation(line: 915, column: 17, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12462, file: !1189, line: 915, column: 17)
!12468 = !DILocation(line: 915, column: 27, scope: !12467)
!12469 = !DILocation(line: 915, column: 17, scope: !12462)
!12470 = !DILocation(line: 916, column: 15, scope: !12467)
!12471 = !DILocation(line: 918, column: 31, scope: !12462)
!12472 = !DILocation(line: 918, column: 13, scope: !12462)
!12473 = !DILocation(line: 918, column: 24, scope: !12462)
!12474 = !DILocation(line: 918, column: 29, scope: !12462)
!12475 = !DILocation(line: 919, column: 31, scope: !12462)
!12476 = !DILocation(line: 919, column: 43, scope: !12462)
!12477 = !DILocation(line: 919, column: 13, scope: !12462)
!12478 = !DILocation(line: 919, column: 24, scope: !12462)
!12479 = !DILocation(line: 919, column: 29, scope: !12462)
!12480 = !DILocation(line: 920, column: 32, scope: !12462)
!12481 = !DILocation(line: 920, column: 13, scope: !12462)
!12482 = !DILocation(line: 920, column: 25, scope: !12462)
!12483 = !DILocation(line: 920, column: 30, scope: !12462)
!12484 = !DILocation(line: 921, column: 11, scope: !12462)
!12485 = !DILocation(line: 925, column: 32, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12458, file: !1189, line: 923, column: 11)
!12487 = !DILocation(line: 925, column: 13, scope: !12486)
!12488 = !DILocation(line: 925, column: 25, scope: !12486)
!12489 = !DILocation(line: 925, column: 30, scope: !12486)
!12490 = !DILocation(line: 926, column: 13, scope: !12486)
!12491 = !DILocation(line: 926, column: 18, scope: !12486)
!12492 = !DILocation(line: 926, column: 32, scope: !12486)
!12493 = !DILocation(line: 928, column: 9, scope: !12388)
!12494 = !DILocation(line: 928, column: 17, scope: !12388)
!12495 = !DILocation(line: 928, column: 22, scope: !12388)
!12496 = !DILocation(line: 929, column: 9, scope: !12388)
!12497 = !DILocation(line: 929, column: 14, scope: !12388)
!12498 = !DILocation(line: 929, column: 28, scope: !12388)
!12499 = !DILocation(line: 930, column: 7, scope: !12388)
!12500 = !DILocation(line: 865, column: 64, scope: !12378)
!12501 = !DILocation(line: 865, column: 3, scope: !12378)
!12502 = distinct !{!12502, !12382, !12503}
!12503 = !DILocation(line: 930, column: 7, scope: !12373)
!12504 = !DILocation(line: 931, column: 3, scope: !12357)
!12505 = !DILocation(line: 932, column: 1, scope: !12357)
!12506 = distinct !DISubprogram(name: "free_entry", scope: !1189, file: !1189, line: 776, type: !12507, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12507 = !DISubroutineType(types: !12508)
!12508 = !{null, !1228, !1192}
!12509 = !DILocalVariable(name: "table", arg: 1, scope: !12506, file: !1189, line: 776, type: !1228)
!12510 = !DILocation(line: 776, column: 25, scope: !12506)
!12511 = !DILocalVariable(name: "entry", arg: 2, scope: !12506, file: !1189, line: 776, type: !1192)
!12512 = !DILocation(line: 776, column: 51, scope: !12506)
!12513 = !DILocation(line: 778, column: 3, scope: !12506)
!12514 = !DILocation(line: 778, column: 10, scope: !12506)
!12515 = !DILocation(line: 778, column: 15, scope: !12506)
!12516 = !DILocation(line: 779, column: 17, scope: !12506)
!12517 = !DILocation(line: 779, column: 24, scope: !12506)
!12518 = !DILocation(line: 779, column: 3, scope: !12506)
!12519 = !DILocation(line: 779, column: 10, scope: !12506)
!12520 = !DILocation(line: 779, column: 15, scope: !12506)
!12521 = !DILocation(line: 780, column: 28, scope: !12506)
!12522 = !DILocation(line: 780, column: 3, scope: !12506)
!12523 = !DILocation(line: 780, column: 10, scope: !12506)
!12524 = !DILocation(line: 780, column: 26, scope: !12506)
!12525 = !DILocation(line: 781, column: 1, scope: !12506)
!12526 = distinct !DISubprogram(name: "allocate_entry", scope: !1189, file: !1189, line: 751, type: !12527, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12527 = !DISubroutineType(types: !12528)
!12528 = !{!1192, !1228}
!12529 = !DILocalVariable(name: "table", arg: 1, scope: !12526, file: !1189, line: 751, type: !1228)
!12530 = !DILocation(line: 751, column: 29, scope: !12526)
!12531 = !DILocalVariable(name: "new", scope: !12526, file: !1189, line: 753, type: !1192)
!12532 = !DILocation(line: 753, column: 22, scope: !12526)
!12533 = !DILocation(line: 755, column: 7, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12526, file: !1189, line: 755, column: 7)
!12535 = !DILocation(line: 755, column: 14, scope: !12534)
!12536 = !DILocation(line: 755, column: 7, scope: !12526)
!12537 = !DILocation(line: 757, column: 13, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12534, file: !1189, line: 756, column: 5)
!12539 = !DILocation(line: 757, column: 20, scope: !12538)
!12540 = !DILocation(line: 757, column: 11, scope: !12538)
!12541 = !DILocation(line: 758, column: 32, scope: !12538)
!12542 = !DILocation(line: 758, column: 37, scope: !12538)
!12543 = !DILocation(line: 758, column: 7, scope: !12538)
!12544 = !DILocation(line: 758, column: 14, scope: !12538)
!12545 = !DILocation(line: 758, column: 30, scope: !12538)
!12546 = !DILocation(line: 759, column: 5, scope: !12538)
!12547 = !DILocation(line: 765, column: 13, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12534, file: !1189, line: 761, column: 5)
!12549 = !DILocation(line: 765, column: 11, scope: !12548)
!12550 = !DILocation(line: 769, column: 10, scope: !12526)
!12551 = !DILocation(line: 769, column: 3, scope: !12526)
!12552 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !1189, file: !1189, line: 1038, type: !12553, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12553 = !DISubroutineType(types: !12554)
!12554 = !{!27, !1228, !175, !181}
!12555 = !DILocalVariable(name: "table", arg: 1, scope: !12552, file: !1189, line: 1038, type: !1228)
!12556 = !DILocation(line: 1038, column: 36, scope: !12552)
!12557 = !DILocalVariable(name: "entry", arg: 2, scope: !12552, file: !1189, line: 1038, type: !175)
!12558 = !DILocation(line: 1038, column: 55, scope: !12552)
!12559 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12552, file: !1189, line: 1039, type: !181)
!12560 = !DILocation(line: 1039, column: 37, scope: !12552)
!12561 = !DILocalVariable(name: "data", scope: !12552, file: !1189, line: 1041, type: !167)
!12562 = !DILocation(line: 1041, column: 9, scope: !12552)
!12563 = !DILocalVariable(name: "bucket", scope: !12552, file: !1189, line: 1042, type: !1192)
!12564 = !DILocation(line: 1042, column: 22, scope: !12552)
!12565 = !DILocation(line: 1047, column: 9, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12552, file: !1189, line: 1047, column: 7)
!12567 = !DILocation(line: 1047, column: 7, scope: !12552)
!12568 = !DILocation(line: 1048, column: 5, scope: !12566)
!12569 = !DILocation(line: 1051, column: 32, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12552, file: !1189, line: 1051, column: 7)
!12571 = !DILocation(line: 1051, column: 39, scope: !12570)
!12572 = !DILocation(line: 1051, column: 15, scope: !12570)
!12573 = !DILocation(line: 1051, column: 13, scope: !12570)
!12574 = !DILocation(line: 1051, column: 63, scope: !12570)
!12575 = !DILocation(line: 1051, column: 7, scope: !12552)
!12576 = !DILocation(line: 1053, column: 11, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !1189, line: 1053, column: 11)
!12578 = distinct !DILexicalBlock(scope: !12570, file: !1189, line: 1052, column: 5)
!12579 = !DILocation(line: 1053, column: 11, scope: !12578)
!12580 = !DILocation(line: 1054, column: 24, scope: !12577)
!12581 = !DILocation(line: 1054, column: 10, scope: !12577)
!12582 = !DILocation(line: 1054, column: 22, scope: !12577)
!12583 = !DILocation(line: 1054, column: 9, scope: !12577)
!12584 = !DILocation(line: 1055, column: 7, scope: !12578)
!12585 = !DILocation(line: 1063, column: 7, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12552, file: !1189, line: 1063, column: 7)
!12587 = !DILocation(line: 1063, column: 14, scope: !12586)
!12588 = !DILocation(line: 1064, column: 9, scope: !12586)
!12589 = !DILocation(line: 1064, column: 16, scope: !12586)
!12590 = !DILocation(line: 1064, column: 24, scope: !12586)
!12591 = !DILocation(line: 1064, column: 43, scope: !12586)
!12592 = !DILocation(line: 1064, column: 50, scope: !12586)
!12593 = !DILocation(line: 1064, column: 41, scope: !12586)
!12594 = !DILocation(line: 1064, column: 7, scope: !12586)
!12595 = !DILocation(line: 1063, column: 7, scope: !12552)
!12596 = !DILocation(line: 1068, column: 21, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12586, file: !1189, line: 1065, column: 5)
!12598 = !DILocation(line: 1068, column: 7, scope: !12597)
!12599 = !DILocation(line: 1069, column: 11, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12597, file: !1189, line: 1069, column: 11)
!12601 = !DILocation(line: 1069, column: 18, scope: !12600)
!12602 = !DILocation(line: 1070, column: 13, scope: !12600)
!12603 = !DILocation(line: 1070, column: 20, scope: !12600)
!12604 = !DILocation(line: 1070, column: 28, scope: !12600)
!12605 = !DILocation(line: 1070, column: 47, scope: !12600)
!12606 = !DILocation(line: 1070, column: 54, scope: !12600)
!12607 = !DILocation(line: 1070, column: 45, scope: !12600)
!12608 = !DILocation(line: 1070, column: 11, scope: !12600)
!12609 = !DILocation(line: 1069, column: 11, scope: !12597)
!12610 = !DILocalVariable(name: "tuning", scope: !12611, file: !1189, line: 1072, type: !1204)
!12611 = distinct !DILexicalBlock(scope: !12600, file: !1189, line: 1071, column: 9)
!12612 = !DILocation(line: 1072, column: 30, scope: !12611)
!12613 = !DILocation(line: 1072, column: 39, scope: !12611)
!12614 = !DILocation(line: 1072, column: 46, scope: !12611)
!12615 = !DILocalVariable(name: "candidate", scope: !12611, file: !1189, line: 1073, type: !1210)
!12616 = !DILocation(line: 1073, column: 17, scope: !12611)
!12617 = !DILocation(line: 1074, column: 14, scope: !12611)
!12618 = !DILocation(line: 1074, column: 22, scope: !12611)
!12619 = !DILocation(line: 1075, column: 17, scope: !12611)
!12620 = !DILocation(line: 1075, column: 24, scope: !12611)
!12621 = !DILocation(line: 1075, column: 36, scope: !12611)
!12622 = !DILocation(line: 1075, column: 44, scope: !12611)
!12623 = !DILocation(line: 1075, column: 34, scope: !12611)
!12624 = !DILocation(line: 1076, column: 17, scope: !12611)
!12625 = !DILocation(line: 1076, column: 24, scope: !12611)
!12626 = !DILocation(line: 1076, column: 36, scope: !12611)
!12627 = !DILocation(line: 1076, column: 44, scope: !12611)
!12628 = !DILocation(line: 1076, column: 34, scope: !12611)
!12629 = !DILocation(line: 1077, column: 19, scope: !12611)
!12630 = !DILocation(line: 1077, column: 27, scope: !12611)
!12631 = !DILocation(line: 1077, column: 17, scope: !12611)
!12632 = !DILocation(line: 1079, column: 27, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12611, file: !1189, line: 1079, column: 15)
!12634 = !DILocation(line: 1079, column: 24, scope: !12633)
!12635 = !DILocation(line: 1079, column: 15, scope: !12611)
!12636 = !DILocation(line: 1080, column: 13, scope: !12633)
!12637 = !DILocation(line: 1083, column: 29, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12611, file: !1189, line: 1083, column: 15)
!12639 = !DILocation(line: 1083, column: 36, scope: !12638)
!12640 = !DILocation(line: 1083, column: 16, scope: !12638)
!12641 = !DILocation(line: 1083, column: 15, scope: !12611)
!12642 = !DILocation(line: 1084, column: 13, scope: !12638)
!12643 = !DILocation(line: 1087, column: 32, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12611, file: !1189, line: 1087, column: 15)
!12645 = !DILocation(line: 1087, column: 39, scope: !12644)
!12646 = !DILocation(line: 1087, column: 15, scope: !12644)
!12647 = !DILocation(line: 1087, column: 62, scope: !12644)
!12648 = !DILocation(line: 1087, column: 15, scope: !12611)
!12649 = !DILocation(line: 1088, column: 13, scope: !12644)
!12650 = !DILocation(line: 1089, column: 9, scope: !12611)
!12651 = !DILocation(line: 1090, column: 5, scope: !12597)
!12652 = !DILocation(line: 1094, column: 7, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12552, file: !1189, line: 1094, column: 7)
!12654 = !DILocation(line: 1094, column: 15, scope: !12653)
!12655 = !DILocation(line: 1094, column: 7, scope: !12552)
!12656 = !DILocalVariable(name: "new_entry", scope: !12657, file: !1189, line: 1096, type: !1192)
!12657 = distinct !DILexicalBlock(scope: !12653, file: !1189, line: 1095, column: 5)
!12658 = !DILocation(line: 1096, column: 26, scope: !12657)
!12659 = !DILocation(line: 1096, column: 54, scope: !12657)
!12660 = !DILocation(line: 1096, column: 38, scope: !12657)
!12661 = !DILocation(line: 1098, column: 11, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12657, file: !1189, line: 1098, column: 11)
!12663 = !DILocation(line: 1098, column: 21, scope: !12662)
!12664 = !DILocation(line: 1098, column: 11, scope: !12657)
!12665 = !DILocation(line: 1099, column: 9, scope: !12662)
!12666 = !DILocation(line: 1103, column: 34, scope: !12657)
!12667 = !DILocation(line: 1103, column: 7, scope: !12657)
!12668 = !DILocation(line: 1103, column: 18, scope: !12657)
!12669 = !DILocation(line: 1103, column: 23, scope: !12657)
!12670 = !DILocation(line: 1104, column: 25, scope: !12657)
!12671 = !DILocation(line: 1104, column: 33, scope: !12657)
!12672 = !DILocation(line: 1104, column: 7, scope: !12657)
!12673 = !DILocation(line: 1104, column: 18, scope: !12657)
!12674 = !DILocation(line: 1104, column: 23, scope: !12657)
!12675 = !DILocation(line: 1105, column: 22, scope: !12657)
!12676 = !DILocation(line: 1105, column: 7, scope: !12657)
!12677 = !DILocation(line: 1105, column: 15, scope: !12657)
!12678 = !DILocation(line: 1105, column: 20, scope: !12657)
!12679 = !DILocation(line: 1106, column: 7, scope: !12657)
!12680 = !DILocation(line: 1106, column: 14, scope: !12657)
!12681 = !DILocation(line: 1106, column: 23, scope: !12657)
!12682 = !DILocation(line: 1107, column: 7, scope: !12657)
!12683 = !DILocation(line: 1112, column: 27, scope: !12552)
!12684 = !DILocation(line: 1112, column: 3, scope: !12552)
!12685 = !DILocation(line: 1112, column: 11, scope: !12552)
!12686 = !DILocation(line: 1112, column: 16, scope: !12552)
!12687 = !DILocation(line: 1113, column: 3, scope: !12552)
!12688 = !DILocation(line: 1113, column: 10, scope: !12552)
!12689 = !DILocation(line: 1113, column: 19, scope: !12552)
!12690 = !DILocation(line: 1114, column: 3, scope: !12552)
!12691 = !DILocation(line: 1114, column: 10, scope: !12552)
!12692 = !DILocation(line: 1114, column: 24, scope: !12552)
!12693 = !DILocation(line: 1116, column: 3, scope: !12552)
!12694 = !DILocation(line: 1117, column: 1, scope: !12552)
!12695 = distinct !DISubprogram(name: "hash_find_entry", scope: !1189, file: !1189, line: 790, type: !12696, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12696 = !DISubroutineType(types: !12697)
!12697 = !{!167, !1228, !175, !12698, !141}
!12698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!12699 = !DILocalVariable(name: "table", arg: 1, scope: !12695, file: !1189, line: 790, type: !1228)
!12700 = !DILocation(line: 790, column: 30, scope: !12695)
!12701 = !DILocalVariable(name: "entry", arg: 2, scope: !12695, file: !1189, line: 790, type: !175)
!12702 = !DILocation(line: 790, column: 49, scope: !12695)
!12703 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12695, file: !1189, line: 791, type: !12698)
!12704 = !DILocation(line: 791, column: 38, scope: !12695)
!12705 = !DILocalVariable(name: "delete", arg: 4, scope: !12695, file: !1189, line: 791, type: !141)
!12706 = !DILocation(line: 791, column: 56, scope: !12695)
!12707 = !DILocalVariable(name: "bucket", scope: !12695, file: !1189, line: 793, type: !1192)
!12708 = !DILocation(line: 793, column: 22, scope: !12695)
!12709 = !DILocation(line: 793, column: 44, scope: !12695)
!12710 = !DILocation(line: 793, column: 51, scope: !12695)
!12711 = !DILocation(line: 793, column: 31, scope: !12695)
!12712 = !DILocalVariable(name: "cursor", scope: !12695, file: !1189, line: 794, type: !1192)
!12713 = !DILocation(line: 794, column: 22, scope: !12695)
!12714 = !DILocation(line: 796, column: 18, scope: !12695)
!12715 = !DILocation(line: 796, column: 4, scope: !12695)
!12716 = !DILocation(line: 796, column: 16, scope: !12695)
!12717 = !DILocation(line: 799, column: 7, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12695, file: !1189, line: 799, column: 7)
!12719 = !DILocation(line: 799, column: 15, scope: !12718)
!12720 = !DILocation(line: 799, column: 20, scope: !12718)
!12721 = !DILocation(line: 799, column: 7, scope: !12695)
!12722 = !DILocation(line: 800, column: 5, scope: !12718)
!12723 = !DILocation(line: 803, column: 7, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12695, file: !1189, line: 803, column: 7)
!12725 = !DILocation(line: 803, column: 16, scope: !12724)
!12726 = !DILocation(line: 803, column: 24, scope: !12724)
!12727 = !DILocation(line: 803, column: 13, scope: !12724)
!12728 = !DILocation(line: 803, column: 29, scope: !12724)
!12729 = !DILocation(line: 803, column: 32, scope: !12724)
!12730 = !DILocation(line: 803, column: 39, scope: !12724)
!12731 = !DILocation(line: 803, column: 51, scope: !12724)
!12732 = !DILocation(line: 803, column: 58, scope: !12724)
!12733 = !DILocation(line: 803, column: 66, scope: !12724)
!12734 = !DILocation(line: 803, column: 7, scope: !12695)
!12735 = !DILocalVariable(name: "data", scope: !12736, file: !1189, line: 805, type: !167)
!12736 = distinct !DILexicalBlock(scope: !12724, file: !1189, line: 804, column: 5)
!12737 = !DILocation(line: 805, column: 13, scope: !12736)
!12738 = !DILocation(line: 805, column: 20, scope: !12736)
!12739 = !DILocation(line: 805, column: 28, scope: !12736)
!12740 = !DILocation(line: 807, column: 11, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12736, file: !1189, line: 807, column: 11)
!12742 = !DILocation(line: 807, column: 11, scope: !12736)
!12743 = !DILocation(line: 809, column: 15, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !1189, line: 809, column: 15)
!12745 = distinct !DILexicalBlock(scope: !12741, file: !1189, line: 808, column: 9)
!12746 = !DILocation(line: 809, column: 23, scope: !12744)
!12747 = !DILocation(line: 809, column: 15, scope: !12745)
!12748 = !DILocalVariable(name: "next", scope: !12749, file: !1189, line: 811, type: !1192)
!12749 = distinct !DILexicalBlock(scope: !12744, file: !1189, line: 810, column: 13)
!12750 = !DILocation(line: 811, column: 34, scope: !12749)
!12751 = !DILocation(line: 811, column: 41, scope: !12749)
!12752 = !DILocation(line: 811, column: 49, scope: !12749)
!12753 = !DILocation(line: 815, column: 16, scope: !12749)
!12754 = !DILocation(line: 815, column: 26, scope: !12749)
!12755 = !DILocation(line: 815, column: 25, scope: !12749)
!12756 = !DILocation(line: 816, column: 27, scope: !12749)
!12757 = !DILocation(line: 816, column: 34, scope: !12749)
!12758 = !DILocation(line: 816, column: 15, scope: !12749)
!12759 = !DILocation(line: 817, column: 13, scope: !12749)
!12760 = !DILocation(line: 820, column: 15, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12744, file: !1189, line: 819, column: 13)
!12762 = !DILocation(line: 820, column: 23, scope: !12761)
!12763 = !DILocation(line: 820, column: 28, scope: !12761)
!12764 = !DILocation(line: 822, column: 9, scope: !12745)
!12765 = !DILocation(line: 824, column: 14, scope: !12736)
!12766 = !DILocation(line: 824, column: 7, scope: !12736)
!12767 = !DILocation(line: 828, column: 17, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12695, file: !1189, line: 828, column: 3)
!12769 = !DILocation(line: 828, column: 15, scope: !12768)
!12770 = !DILocation(line: 828, column: 8, scope: !12768)
!12771 = !DILocation(line: 828, column: 25, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !1189, line: 828, column: 3)
!12773 = !DILocation(line: 828, column: 33, scope: !12772)
!12774 = !DILocation(line: 828, column: 3, scope: !12768)
!12775 = !DILocation(line: 830, column: 11, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12777, file: !1189, line: 830, column: 11)
!12777 = distinct !DILexicalBlock(scope: !12772, file: !1189, line: 829, column: 5)
!12778 = !DILocation(line: 830, column: 20, scope: !12776)
!12779 = !DILocation(line: 830, column: 28, scope: !12776)
!12780 = !DILocation(line: 830, column: 34, scope: !12776)
!12781 = !DILocation(line: 830, column: 17, scope: !12776)
!12782 = !DILocation(line: 831, column: 11, scope: !12776)
!12783 = !DILocation(line: 831, column: 14, scope: !12776)
!12784 = !DILocation(line: 831, column: 21, scope: !12776)
!12785 = !DILocation(line: 831, column: 33, scope: !12776)
!12786 = !DILocation(line: 831, column: 40, scope: !12776)
!12787 = !DILocation(line: 831, column: 48, scope: !12776)
!12788 = !DILocation(line: 831, column: 54, scope: !12776)
!12789 = !DILocation(line: 830, column: 11, scope: !12777)
!12790 = !DILocalVariable(name: "data", scope: !12791, file: !1189, line: 833, type: !167)
!12791 = distinct !DILexicalBlock(scope: !12776, file: !1189, line: 832, column: 9)
!12792 = !DILocation(line: 833, column: 17, scope: !12791)
!12793 = !DILocation(line: 833, column: 24, scope: !12791)
!12794 = !DILocation(line: 833, column: 32, scope: !12791)
!12795 = !DILocation(line: 833, column: 38, scope: !12791)
!12796 = !DILocation(line: 835, column: 15, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12791, file: !1189, line: 835, column: 15)
!12798 = !DILocation(line: 835, column: 15, scope: !12791)
!12799 = !DILocalVariable(name: "next", scope: !12800, file: !1189, line: 837, type: !1192)
!12800 = distinct !DILexicalBlock(scope: !12797, file: !1189, line: 836, column: 13)
!12801 = !DILocation(line: 837, column: 34, scope: !12800)
!12802 = !DILocation(line: 837, column: 41, scope: !12800)
!12803 = !DILocation(line: 837, column: 49, scope: !12800)
!12804 = !DILocation(line: 841, column: 30, scope: !12800)
!12805 = !DILocation(line: 841, column: 36, scope: !12800)
!12806 = !DILocation(line: 841, column: 15, scope: !12800)
!12807 = !DILocation(line: 841, column: 23, scope: !12800)
!12808 = !DILocation(line: 841, column: 28, scope: !12800)
!12809 = !DILocation(line: 842, column: 27, scope: !12800)
!12810 = !DILocation(line: 842, column: 34, scope: !12800)
!12811 = !DILocation(line: 842, column: 15, scope: !12800)
!12812 = !DILocation(line: 843, column: 13, scope: !12800)
!12813 = !DILocation(line: 845, column: 18, scope: !12791)
!12814 = !DILocation(line: 845, column: 11, scope: !12791)
!12815 = !DILocation(line: 847, column: 5, scope: !12777)
!12816 = !DILocation(line: 828, column: 48, scope: !12772)
!12817 = !DILocation(line: 828, column: 56, scope: !12772)
!12818 = !DILocation(line: 828, column: 46, scope: !12772)
!12819 = !DILocation(line: 828, column: 3, scope: !12772)
!12820 = distinct !{!12820, !12774, !12821}
!12821 = !DILocation(line: 847, column: 5, scope: !12768)
!12822 = !DILocation(line: 850, column: 3, scope: !12695)
!12823 = !DILocation(line: 851, column: 1, scope: !12695)
!12824 = distinct !DISubprogram(name: "hash_insert", scope: !1189, file: !1189, line: 1126, type: !12825, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12825 = !DISubroutineType(types: !12826)
!12826 = !{!167, !1228, !175}
!12827 = !DILocalVariable(name: "table", arg: 1, scope: !12824, file: !1189, line: 1126, type: !1228)
!12828 = !DILocation(line: 1126, column: 26, scope: !12824)
!12829 = !DILocalVariable(name: "entry", arg: 2, scope: !12824, file: !1189, line: 1126, type: !175)
!12830 = !DILocation(line: 1126, column: 45, scope: !12824)
!12831 = !DILocalVariable(name: "matched_ent", scope: !12824, file: !1189, line: 1128, type: !175)
!12832 = !DILocation(line: 1128, column: 15, scope: !12824)
!12833 = !DILocalVariable(name: "err", scope: !12824, file: !1189, line: 1129, type: !27)
!12834 = !DILocation(line: 1129, column: 7, scope: !12824)
!12835 = !DILocation(line: 1129, column: 36, scope: !12824)
!12836 = !DILocation(line: 1129, column: 43, scope: !12824)
!12837 = !DILocation(line: 1129, column: 13, scope: !12824)
!12838 = !DILocation(line: 1130, column: 11, scope: !12824)
!12839 = !DILocation(line: 1130, column: 15, scope: !12824)
!12840 = !DILocation(line: 1132, column: 23, scope: !12824)
!12841 = !DILocation(line: 1132, column: 27, scope: !12824)
!12842 = !DILocation(line: 1132, column: 34, scope: !12824)
!12843 = !DILocation(line: 1132, column: 48, scope: !12824)
!12844 = !DILocation(line: 1130, column: 3, scope: !12824)
!12845 = distinct !DISubprogram(name: "hash_delete", scope: !1189, file: !1189, line: 1140, type: !12825, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1183, retainedNodes: !152)
!12846 = !DILocalVariable(name: "table", arg: 1, scope: !12845, file: !1189, line: 1140, type: !1228)
!12847 = !DILocation(line: 1140, column: 26, scope: !12845)
!12848 = !DILocalVariable(name: "entry", arg: 2, scope: !12845, file: !1189, line: 1140, type: !175)
!12849 = !DILocation(line: 1140, column: 45, scope: !12845)
!12850 = !DILocalVariable(name: "data", scope: !12845, file: !1189, line: 1142, type: !167)
!12851 = !DILocation(line: 1142, column: 9, scope: !12845)
!12852 = !DILocalVariable(name: "bucket", scope: !12845, file: !1189, line: 1143, type: !1192)
!12853 = !DILocation(line: 1143, column: 22, scope: !12845)
!12854 = !DILocation(line: 1145, column: 27, scope: !12845)
!12855 = !DILocation(line: 1145, column: 34, scope: !12845)
!12856 = !DILocation(line: 1145, column: 10, scope: !12845)
!12857 = !DILocation(line: 1145, column: 8, scope: !12845)
!12858 = !DILocation(line: 1146, column: 8, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12845, file: !1189, line: 1146, column: 7)
!12860 = !DILocation(line: 1146, column: 7, scope: !12845)
!12861 = !DILocation(line: 1147, column: 5, scope: !12859)
!12862 = !DILocation(line: 1149, column: 3, scope: !12845)
!12863 = !DILocation(line: 1149, column: 10, scope: !12845)
!12864 = !DILocation(line: 1149, column: 19, scope: !12845)
!12865 = !DILocation(line: 1150, column: 8, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12845, file: !1189, line: 1150, column: 7)
!12867 = !DILocation(line: 1150, column: 16, scope: !12866)
!12868 = !DILocation(line: 1150, column: 7, scope: !12845)
!12869 = !DILocation(line: 1152, column: 7, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12866, file: !1189, line: 1151, column: 5)
!12871 = !DILocation(line: 1152, column: 14, scope: !12870)
!12872 = !DILocation(line: 1152, column: 28, scope: !12870)
!12873 = !DILocation(line: 1157, column: 11, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12870, file: !1189, line: 1157, column: 11)
!12875 = !DILocation(line: 1157, column: 18, scope: !12874)
!12876 = !DILocation(line: 1158, column: 13, scope: !12874)
!12877 = !DILocation(line: 1158, column: 20, scope: !12874)
!12878 = !DILocation(line: 1158, column: 28, scope: !12874)
!12879 = !DILocation(line: 1158, column: 47, scope: !12874)
!12880 = !DILocation(line: 1158, column: 54, scope: !12874)
!12881 = !DILocation(line: 1158, column: 45, scope: !12874)
!12882 = !DILocation(line: 1158, column: 11, scope: !12874)
!12883 = !DILocation(line: 1157, column: 11, scope: !12870)
!12884 = !DILocation(line: 1162, column: 25, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12874, file: !1189, line: 1159, column: 9)
!12886 = !DILocation(line: 1162, column: 11, scope: !12885)
!12887 = !DILocation(line: 1163, column: 15, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12885, file: !1189, line: 1163, column: 15)
!12889 = !DILocation(line: 1163, column: 22, scope: !12888)
!12890 = !DILocation(line: 1164, column: 17, scope: !12888)
!12891 = !DILocation(line: 1164, column: 24, scope: !12888)
!12892 = !DILocation(line: 1164, column: 32, scope: !12888)
!12893 = !DILocation(line: 1164, column: 51, scope: !12888)
!12894 = !DILocation(line: 1164, column: 58, scope: !12888)
!12895 = !DILocation(line: 1164, column: 49, scope: !12888)
!12896 = !DILocation(line: 1164, column: 15, scope: !12888)
!12897 = !DILocation(line: 1163, column: 15, scope: !12885)
!12898 = !DILocalVariable(name: "tuning", scope: !12899, file: !1189, line: 1166, type: !1204)
!12899 = distinct !DILexicalBlock(scope: !12888, file: !1189, line: 1165, column: 13)
!12900 = !DILocation(line: 1166, column: 34, scope: !12899)
!12901 = !DILocation(line: 1166, column: 43, scope: !12899)
!12902 = !DILocation(line: 1166, column: 50, scope: !12899)
!12903 = !DILocalVariable(name: "candidate", scope: !12899, file: !1189, line: 1167, type: !149)
!12904 = !DILocation(line: 1167, column: 22, scope: !12899)
!12905 = !DILocation(line: 1168, column: 18, scope: !12899)
!12906 = !DILocation(line: 1168, column: 26, scope: !12899)
!12907 = !DILocation(line: 1169, column: 20, scope: !12899)
!12908 = !DILocation(line: 1169, column: 27, scope: !12899)
!12909 = !DILocation(line: 1169, column: 39, scope: !12899)
!12910 = !DILocation(line: 1169, column: 47, scope: !12899)
!12911 = !DILocation(line: 1169, column: 37, scope: !12899)
!12912 = !DILocation(line: 1170, column: 21, scope: !12899)
!12913 = !DILocation(line: 1170, column: 28, scope: !12899)
!12914 = !DILocation(line: 1170, column: 40, scope: !12899)
!12915 = !DILocation(line: 1170, column: 48, scope: !12899)
!12916 = !DILocation(line: 1170, column: 38, scope: !12899)
!12917 = !DILocation(line: 1171, column: 23, scope: !12899)
!12918 = !DILocation(line: 1171, column: 31, scope: !12899)
!12919 = !DILocation(line: 1171, column: 21, scope: !12899)
!12920 = !DILocation(line: 1168, column: 17, scope: !12899)
!12921 = !DILocation(line: 1173, column: 33, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12899, file: !1189, line: 1173, column: 19)
!12923 = !DILocation(line: 1173, column: 40, scope: !12922)
!12924 = !DILocation(line: 1173, column: 20, scope: !12922)
!12925 = !DILocation(line: 1173, column: 19, scope: !12899)
!12926 = !DILocalVariable(name: "cursor", scope: !12927, file: !1189, line: 1181, type: !1192)
!12927 = distinct !DILexicalBlock(scope: !12922, file: !1189, line: 1174, column: 17)
!12928 = !DILocation(line: 1181, column: 38, scope: !12927)
!12929 = !DILocation(line: 1181, column: 47, scope: !12927)
!12930 = !DILocation(line: 1181, column: 54, scope: !12927)
!12931 = !DILocalVariable(name: "next", scope: !12927, file: !1189, line: 1182, type: !1192)
!12932 = !DILocation(line: 1182, column: 38, scope: !12927)
!12933 = !DILocation(line: 1183, column: 19, scope: !12927)
!12934 = !DILocation(line: 1183, column: 26, scope: !12927)
!12935 = !DILocation(line: 1185, column: 30, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12927, file: !1189, line: 1184, column: 21)
!12937 = !DILocation(line: 1185, column: 38, scope: !12936)
!12938 = !DILocation(line: 1185, column: 28, scope: !12936)
!12939 = !DILocation(line: 1186, column: 29, scope: !12936)
!12940 = !DILocation(line: 1186, column: 23, scope: !12936)
!12941 = !DILocation(line: 1187, column: 32, scope: !12936)
!12942 = !DILocation(line: 1187, column: 30, scope: !12936)
!12943 = distinct !{!12943, !12933, !12944}
!12944 = !DILocation(line: 1188, column: 21, scope: !12927)
!12945 = !DILocation(line: 1189, column: 19, scope: !12927)
!12946 = !DILocation(line: 1189, column: 26, scope: !12927)
!12947 = !DILocation(line: 1189, column: 42, scope: !12927)
!12948 = !DILocation(line: 1191, column: 17, scope: !12927)
!12949 = !DILocation(line: 1192, column: 13, scope: !12899)
!12950 = !DILocation(line: 1193, column: 9, scope: !12885)
!12951 = !DILocation(line: 1194, column: 5, scope: !12870)
!12952 = !DILocation(line: 1196, column: 10, scope: !12845)
!12953 = !DILocation(line: 1196, column: 3, scope: !12845)
!12954 = !DILocation(line: 1197, column: 1, scope: !12845)
!12955 = distinct !DISubprogram(name: "triple_hash", scope: !12956, file: !12956, line: 34, type: !1218, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1568, retainedNodes: !152)
!12956 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!12957 = !DILocalVariable(name: "x", arg: 1, scope: !12955, file: !12956, line: 34, type: !175)
!12958 = !DILocation(line: 34, column: 26, scope: !12955)
!12959 = !DILocalVariable(name: "table_size", arg: 2, scope: !12955, file: !12956, line: 34, type: !149)
!12960 = !DILocation(line: 34, column: 36, scope: !12955)
!12961 = !DILocalVariable(name: "p", scope: !12955, file: !12956, line: 36, type: !1571)
!12962 = !DILocation(line: 36, column: 26, scope: !12955)
!12963 = !DILocation(line: 36, column: 30, scope: !12955)
!12964 = !DILocalVariable(name: "tmp", scope: !12955, file: !12956, line: 37, type: !149)
!12965 = !DILocation(line: 37, column: 10, scope: !12955)
!12966 = !DILocation(line: 37, column: 26, scope: !12955)
!12967 = !DILocation(line: 37, column: 29, scope: !12955)
!12968 = !DILocation(line: 37, column: 35, scope: !12955)
!12969 = !DILocation(line: 37, column: 16, scope: !12955)
!12970 = !DILocation(line: 40, column: 11, scope: !12955)
!12971 = !DILocation(line: 40, column: 17, scope: !12955)
!12972 = !DILocation(line: 40, column: 20, scope: !12955)
!12973 = !DILocation(line: 40, column: 15, scope: !12955)
!12974 = !DILocation(line: 40, column: 30, scope: !12955)
!12975 = !DILocation(line: 40, column: 28, scope: !12955)
!12976 = !DILocation(line: 40, column: 3, scope: !12955)
!12977 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12956, file: !12956, line: 45, type: !1218, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1568, retainedNodes: !152)
!12978 = !DILocalVariable(name: "x", arg: 1, scope: !12977, file: !12956, line: 45, type: !175)
!12979 = !DILocation(line: 45, column: 34, scope: !12977)
!12980 = !DILocalVariable(name: "table_size", arg: 2, scope: !12977, file: !12956, line: 45, type: !149)
!12981 = !DILocation(line: 45, column: 44, scope: !12977)
!12982 = !DILocalVariable(name: "p", scope: !12977, file: !12956, line: 47, type: !1571)
!12983 = !DILocation(line: 47, column: 26, scope: !12977)
!12984 = !DILocation(line: 47, column: 30, scope: !12977)
!12985 = !DILocation(line: 50, column: 10, scope: !12977)
!12986 = !DILocation(line: 50, column: 13, scope: !12977)
!12987 = !DILocation(line: 50, column: 22, scope: !12977)
!12988 = !DILocation(line: 50, column: 20, scope: !12977)
!12989 = !DILocation(line: 50, column: 3, scope: !12977)
!12990 = distinct !DISubprogram(name: "triple_compare", scope: !12956, file: !12956, line: 55, type: !1223, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1568, retainedNodes: !152)
!12991 = !DILocalVariable(name: "x", arg: 1, scope: !12990, file: !12956, line: 55, type: !175)
!12992 = !DILocation(line: 55, column: 29, scope: !12990)
!12993 = !DILocalVariable(name: "y", arg: 2, scope: !12990, file: !12956, line: 55, type: !175)
!12994 = !DILocation(line: 55, column: 44, scope: !12990)
!12995 = !DILocalVariable(name: "a", scope: !12990, file: !12956, line: 57, type: !1571)
!12996 = !DILocation(line: 57, column: 26, scope: !12990)
!12997 = !DILocation(line: 57, column: 30, scope: !12990)
!12998 = !DILocalVariable(name: "b", scope: !12990, file: !12956, line: 58, type: !1571)
!12999 = !DILocation(line: 58, column: 26, scope: !12990)
!13000 = !DILocation(line: 58, column: 30, scope: !12990)
!13001 = !DILocation(line: 59, column: 11, scope: !12990)
!13002 = !DILocation(line: 59, column: 31, scope: !12990)
!13003 = !DILocation(line: 59, column: 45, scope: !12990)
!13004 = !DILocation(line: 59, column: 48, scope: !12990)
!13005 = !DILocation(line: 59, column: 54, scope: !12990)
!13006 = !DILocation(line: 59, column: 57, scope: !12990)
!13007 = !DILocation(line: 59, column: 34, scope: !12990)
!13008 = !DILocation(line: 0, scope: !12990)
!13009 = !DILocation(line: 59, column: 10, scope: !12990)
!13010 = !DILocation(line: 59, column: 3, scope: !12990)
!13011 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12956, file: !12956, line: 63, type: !1223, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1568, retainedNodes: !152)
!13012 = !DILocalVariable(name: "x", arg: 1, scope: !13011, file: !12956, line: 63, type: !175)
!13013 = !DILocation(line: 63, column: 37, scope: !13011)
!13014 = !DILocalVariable(name: "y", arg: 2, scope: !13011, file: !12956, line: 63, type: !175)
!13015 = !DILocation(line: 63, column: 52, scope: !13011)
!13016 = !DILocalVariable(name: "a", scope: !13011, file: !12956, line: 65, type: !1571)
!13017 = !DILocation(line: 65, column: 26, scope: !13011)
!13018 = !DILocation(line: 65, column: 30, scope: !13011)
!13019 = !DILocalVariable(name: "b", scope: !13011, file: !12956, line: 66, type: !1571)
!13020 = !DILocation(line: 66, column: 26, scope: !13011)
!13021 = !DILocation(line: 66, column: 30, scope: !13011)
!13022 = !DILocation(line: 67, column: 11, scope: !13011)
!13023 = !DILocation(line: 67, column: 31, scope: !13011)
!13024 = !DILocation(line: 67, column: 34, scope: !13011)
!13025 = !DILocation(line: 0, scope: !13011)
!13026 = !DILocation(line: 67, column: 10, scope: !13011)
!13027 = !DILocation(line: 67, column: 3, scope: !13011)
!13028 = distinct !DISubprogram(name: "triple_free", scope: !12956, file: !12956, line: 72, type: !490, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1568, retainedNodes: !152)
!13029 = !DILocalVariable(name: "x", arg: 1, scope: !13028, file: !12956, line: 72, type: !167)
!13030 = !DILocation(line: 72, column: 20, scope: !13028)
!13031 = !DILocalVariable(name: "a", scope: !13028, file: !12956, line: 74, type: !1578)
!13032 = !DILocation(line: 74, column: 20, scope: !13028)
!13033 = !DILocation(line: 74, column: 24, scope: !13028)
!13034 = !DILocation(line: 75, column: 9, scope: !13028)
!13035 = !DILocation(line: 75, column: 12, scope: !13028)
!13036 = !DILocation(line: 75, column: 3, scope: !13028)
!13037 = !DILocation(line: 76, column: 9, scope: !13028)
!13038 = !DILocation(line: 76, column: 3, scope: !13028)
!13039 = !DILocation(line: 77, column: 1, scope: !13028)
!13040 = distinct !DISubprogram(name: "human_readable", scope: !1273, file: !1273, line: 153, type: !13041, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1232, retainedNodes: !152)
!13041 = !DISubroutineType(types: !13042)
!13042 = !{!143, !168, !143, !27, !168, !168}
!13043 = !DILocalVariable(name: "n", arg: 1, scope: !13040, file: !1273, line: 153, type: !168)
!13044 = !DILocation(line: 153, column: 27, scope: !13040)
!13045 = !DILocalVariable(name: "buf", arg: 2, scope: !13040, file: !1273, line: 153, type: !143)
!13046 = !DILocation(line: 153, column: 36, scope: !13040)
!13047 = !DILocalVariable(name: "opts", arg: 3, scope: !13040, file: !1273, line: 153, type: !27)
!13048 = !DILocation(line: 153, column: 45, scope: !13040)
!13049 = !DILocalVariable(name: "from_block_size", arg: 4, scope: !13040, file: !1273, line: 154, type: !168)
!13050 = !DILocation(line: 154, column: 27, scope: !13040)
!13051 = !DILocalVariable(name: "to_block_size", arg: 5, scope: !13040, file: !1273, line: 154, type: !168)
!13052 = !DILocation(line: 154, column: 54, scope: !13040)
!13053 = !DILocalVariable(name: "inexact_style", scope: !13040, file: !1273, line: 156, type: !27)
!13054 = !DILocation(line: 156, column: 7, scope: !13040)
!13055 = !DILocation(line: 157, column: 5, scope: !13040)
!13056 = !DILocation(line: 157, column: 10, scope: !13040)
!13057 = !DILocalVariable(name: "base", scope: !13040, file: !1273, line: 158, type: !6)
!13058 = !DILocation(line: 158, column: 16, scope: !13040)
!13059 = !DILocation(line: 158, column: 23, scope: !13040)
!13060 = !DILocation(line: 158, column: 28, scope: !13040)
!13061 = !DILocalVariable(name: "amt", scope: !13040, file: !1273, line: 159, type: !168)
!13062 = !DILocation(line: 159, column: 13, scope: !13040)
!13063 = !DILocalVariable(name: "tenths", scope: !13040, file: !1273, line: 160, type: !27)
!13064 = !DILocation(line: 160, column: 7, scope: !13040)
!13065 = !DILocalVariable(name: "exponent", scope: !13040, file: !1273, line: 161, type: !27)
!13066 = !DILocation(line: 161, column: 7, scope: !13040)
!13067 = !DILocalVariable(name: "exponent_max", scope: !13040, file: !1273, line: 162, type: !27)
!13068 = !DILocation(line: 162, column: 7, scope: !13040)
!13069 = !DILocalVariable(name: "p", scope: !13040, file: !1273, line: 163, type: !143)
!13070 = !DILocation(line: 163, column: 9, scope: !13040)
!13071 = !DILocalVariable(name: "psuffix", scope: !13040, file: !1273, line: 164, type: !143)
!13072 = !DILocation(line: 164, column: 9, scope: !13040)
!13073 = !DILocalVariable(name: "integerlim", scope: !13040, file: !1273, line: 165, type: !146)
!13074 = !DILocation(line: 165, column: 15, scope: !13040)
!13075 = !DILocalVariable(name: "rounding", scope: !13040, file: !1273, line: 171, type: !27)
!13076 = !DILocation(line: 171, column: 7, scope: !13040)
!13077 = !DILocalVariable(name: "decimal_point", scope: !13040, file: !1273, line: 173, type: !146)
!13078 = !DILocation(line: 173, column: 15, scope: !13040)
!13079 = !DILocalVariable(name: "decimal_pointlen", scope: !13040, file: !1273, line: 174, type: !149)
!13080 = !DILocation(line: 174, column: 10, scope: !13040)
!13081 = !DILocalVariable(name: "grouping", scope: !13040, file: !1273, line: 175, type: !146)
!13082 = !DILocation(line: 175, column: 15, scope: !13040)
!13083 = !DILocalVariable(name: "thousands_sep", scope: !13040, file: !1273, line: 176, type: !146)
!13084 = !DILocation(line: 176, column: 15, scope: !13040)
!13085 = !DILocalVariable(name: "l", scope: !13040, file: !1273, line: 177, type: !1236)
!13086 = !DILocation(line: 177, column: 23, scope: !13040)
!13087 = !DILocation(line: 177, column: 27, scope: !13040)
!13088 = !DILocalVariable(name: "pointlen", scope: !13040, file: !1273, line: 178, type: !149)
!13089 = !DILocation(line: 178, column: 10, scope: !13040)
!13090 = !DILocation(line: 178, column: 29, scope: !13040)
!13091 = !DILocation(line: 178, column: 32, scope: !13040)
!13092 = !DILocation(line: 178, column: 21, scope: !13040)
!13093 = !DILocation(line: 179, column: 11, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 179, column: 7)
!13095 = !DILocation(line: 179, column: 9, scope: !13094)
!13096 = !DILocation(line: 179, column: 20, scope: !13094)
!13097 = !DILocation(line: 179, column: 23, scope: !13094)
!13098 = !DILocation(line: 179, column: 32, scope: !13094)
!13099 = !DILocation(line: 179, column: 7, scope: !13040)
!13100 = !DILocation(line: 181, column: 23, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13094, file: !1273, line: 180, column: 5)
!13102 = !DILocation(line: 181, column: 26, scope: !13101)
!13103 = !DILocation(line: 181, column: 21, scope: !13101)
!13104 = !DILocation(line: 182, column: 26, scope: !13101)
!13105 = !DILocation(line: 182, column: 24, scope: !13101)
!13106 = !DILocation(line: 183, column: 5, scope: !13101)
!13107 = !DILocation(line: 184, column: 14, scope: !13040)
!13108 = !DILocation(line: 184, column: 17, scope: !13040)
!13109 = !DILocation(line: 184, column: 12, scope: !13040)
!13110 = !DILocation(line: 185, column: 15, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 185, column: 7)
!13112 = !DILocation(line: 185, column: 18, scope: !13111)
!13113 = !DILocation(line: 185, column: 7, scope: !13111)
!13114 = !DILocation(line: 185, column: 33, scope: !13111)
!13115 = !DILocation(line: 185, column: 7, scope: !13040)
!13116 = !DILocation(line: 186, column: 21, scope: !13111)
!13117 = !DILocation(line: 186, column: 24, scope: !13111)
!13118 = !DILocation(line: 186, column: 19, scope: !13111)
!13119 = !DILocation(line: 186, column: 5, scope: !13111)
!13120 = !DILocation(line: 189, column: 13, scope: !13040)
!13121 = !DILocation(line: 189, column: 17, scope: !13040)
!13122 = !DILocation(line: 189, column: 42, scope: !13040)
!13123 = !DILocation(line: 189, column: 46, scope: !13040)
!13124 = !DILocation(line: 189, column: 11, scope: !13040)
!13125 = !DILocation(line: 190, column: 7, scope: !13040)
!13126 = !DILocation(line: 190, column: 5, scope: !13040)
!13127 = !DILocation(line: 195, column: 7, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 195, column: 7)
!13129 = !DILocation(line: 195, column: 24, scope: !13128)
!13130 = !DILocation(line: 195, column: 21, scope: !13128)
!13131 = !DILocation(line: 195, column: 7, scope: !13040)
!13132 = !DILocation(line: 197, column: 11, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13134, file: !1273, line: 197, column: 11)
!13134 = distinct !DILexicalBlock(scope: !13128, file: !1273, line: 196, column: 5)
!13135 = !DILocation(line: 197, column: 29, scope: !13133)
!13136 = !DILocation(line: 197, column: 27, scope: !13133)
!13137 = !DILocation(line: 197, column: 43, scope: !13133)
!13138 = !DILocation(line: 197, column: 11, scope: !13134)
!13139 = !DILocalVariable(name: "multiplier", scope: !13140, file: !1273, line: 199, type: !168)
!13140 = distinct !DILexicalBlock(scope: !13133, file: !1273, line: 198, column: 9)
!13141 = !DILocation(line: 199, column: 21, scope: !13140)
!13142 = !DILocation(line: 199, column: 34, scope: !13140)
!13143 = !DILocation(line: 199, column: 52, scope: !13140)
!13144 = !DILocation(line: 199, column: 50, scope: !13140)
!13145 = !DILocation(line: 200, column: 17, scope: !13140)
!13146 = !DILocation(line: 200, column: 21, scope: !13140)
!13147 = !DILocation(line: 200, column: 19, scope: !13140)
!13148 = !DILocation(line: 200, column: 15, scope: !13140)
!13149 = !DILocation(line: 201, column: 15, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13140, file: !1273, line: 201, column: 15)
!13151 = !DILocation(line: 201, column: 21, scope: !13150)
!13152 = !DILocation(line: 201, column: 19, scope: !13150)
!13153 = !DILocation(line: 201, column: 35, scope: !13150)
!13154 = !DILocation(line: 201, column: 32, scope: !13150)
!13155 = !DILocation(line: 201, column: 15, scope: !13140)
!13156 = !DILocation(line: 203, column: 22, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13150, file: !1273, line: 202, column: 13)
!13158 = !DILocation(line: 204, column: 24, scope: !13157)
!13159 = !DILocation(line: 205, column: 15, scope: !13157)
!13160 = !DILocation(line: 207, column: 9, scope: !13140)
!13161 = !DILocation(line: 208, column: 5, scope: !13134)
!13162 = !DILocation(line: 209, column: 12, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13128, file: !1273, line: 209, column: 12)
!13164 = !DILocation(line: 209, column: 28, scope: !13163)
!13165 = !DILocation(line: 209, column: 33, scope: !13163)
!13166 = !DILocation(line: 209, column: 36, scope: !13163)
!13167 = !DILocation(line: 209, column: 52, scope: !13163)
!13168 = !DILocation(line: 209, column: 50, scope: !13163)
!13169 = !DILocation(line: 209, column: 68, scope: !13163)
!13170 = !DILocation(line: 209, column: 12, scope: !13128)
!13171 = !DILocalVariable(name: "divisor", scope: !13172, file: !1273, line: 211, type: !168)
!13172 = distinct !DILexicalBlock(scope: !13163, file: !1273, line: 210, column: 5)
!13173 = !DILocation(line: 211, column: 17, scope: !13172)
!13174 = !DILocation(line: 211, column: 27, scope: !13172)
!13175 = !DILocation(line: 211, column: 43, scope: !13172)
!13176 = !DILocation(line: 211, column: 41, scope: !13172)
!13177 = !DILocalVariable(name: "r10", scope: !13172, file: !1273, line: 212, type: !168)
!13178 = !DILocation(line: 212, column: 17, scope: !13172)
!13179 = !DILocation(line: 212, column: 24, scope: !13172)
!13180 = !DILocation(line: 212, column: 28, scope: !13172)
!13181 = !DILocation(line: 212, column: 26, scope: !13172)
!13182 = !DILocation(line: 212, column: 37, scope: !13172)
!13183 = !DILocalVariable(name: "r2", scope: !13172, file: !1273, line: 213, type: !168)
!13184 = !DILocation(line: 213, column: 17, scope: !13172)
!13185 = !DILocation(line: 213, column: 23, scope: !13172)
!13186 = !DILocation(line: 213, column: 29, scope: !13172)
!13187 = !DILocation(line: 213, column: 27, scope: !13172)
!13188 = !DILocation(line: 213, column: 38, scope: !13172)
!13189 = !DILocation(line: 214, column: 13, scope: !13172)
!13190 = !DILocation(line: 214, column: 17, scope: !13172)
!13191 = !DILocation(line: 214, column: 15, scope: !13172)
!13192 = !DILocation(line: 214, column: 11, scope: !13172)
!13193 = !DILocation(line: 215, column: 16, scope: !13172)
!13194 = !DILocation(line: 215, column: 22, scope: !13172)
!13195 = !DILocation(line: 215, column: 20, scope: !13172)
!13196 = !DILocation(line: 215, column: 14, scope: !13172)
!13197 = !DILocation(line: 216, column: 18, scope: !13172)
!13198 = !DILocation(line: 216, column: 23, scope: !13172)
!13199 = !DILocation(line: 216, column: 21, scope: !13172)
!13200 = !DILocation(line: 216, column: 37, scope: !13172)
!13201 = !DILocation(line: 216, column: 35, scope: !13172)
!13202 = !DILocation(line: 216, column: 47, scope: !13172)
!13203 = !DILocation(line: 216, column: 57, scope: !13172)
!13204 = !DILocation(line: 216, column: 55, scope: !13172)
!13205 = !DILocation(line: 216, column: 44, scope: !13172)
!13206 = !DILocation(line: 216, column: 16, scope: !13172)
!13207 = !DILocation(line: 217, column: 7, scope: !13172)
!13208 = !DILocalVariable(name: "dto_block_size", scope: !13209, file: !1273, line: 225, type: !1265)
!13209 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 220, column: 3)
!13210 = !DILocation(line: 225, column: 17, scope: !13209)
!13211 = !DILocation(line: 225, column: 34, scope: !13209)
!13212 = !DILocalVariable(name: "damt", scope: !13209, file: !1273, line: 226, type: !1265)
!13213 = !DILocation(line: 226, column: 17, scope: !13209)
!13214 = !DILocation(line: 226, column: 24, scope: !13209)
!13215 = !DILocation(line: 226, column: 29, scope: !13209)
!13216 = !DILocation(line: 226, column: 47, scope: !13209)
!13217 = !DILocation(line: 226, column: 45, scope: !13209)
!13218 = !DILocation(line: 226, column: 26, scope: !13209)
!13219 = !DILocalVariable(name: "buflen", scope: !13209, file: !1273, line: 227, type: !149)
!13220 = !DILocation(line: 227, column: 12, scope: !13209)
!13221 = !DILocalVariable(name: "nonintegerlen", scope: !13209, file: !1273, line: 228, type: !149)
!13222 = !DILocation(line: 228, column: 12, scope: !13209)
!13223 = !DILocation(line: 230, column: 12, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13209, file: !1273, line: 230, column: 9)
!13225 = !DILocation(line: 230, column: 17, scope: !13224)
!13226 = !DILocation(line: 230, column: 9, scope: !13209)
!13227 = !DILocation(line: 232, column: 18, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13224, file: !1273, line: 231, column: 7)
!13229 = !DILocation(line: 232, column: 46, scope: !13228)
!13230 = !DILocation(line: 232, column: 61, scope: !13228)
!13231 = !DILocation(line: 232, column: 32, scope: !13228)
!13232 = !DILocation(line: 232, column: 9, scope: !13228)
!13233 = !DILocation(line: 233, column: 26, scope: !13228)
!13234 = !DILocation(line: 233, column: 18, scope: !13228)
!13235 = !DILocation(line: 233, column: 16, scope: !13228)
!13236 = !DILocation(line: 234, column: 23, scope: !13228)
!13237 = !DILocation(line: 235, column: 7, scope: !13228)
!13238 = !DILocalVariable(name: "e", scope: !13239, file: !1273, line: 238, type: !1265)
!13239 = distinct !DILexicalBlock(scope: !13224, file: !1273, line: 237, column: 7)
!13240 = !DILocation(line: 238, column: 21, scope: !13239)
!13241 = !DILocation(line: 239, column: 18, scope: !13239)
!13242 = !DILocation(line: 241, column: 9, scope: !13239)
!13243 = !DILocation(line: 243, column: 18, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13239, file: !1273, line: 242, column: 11)
!13245 = !DILocation(line: 243, column: 15, scope: !13244)
!13246 = !DILocation(line: 244, column: 21, scope: !13244)
!13247 = !DILocation(line: 245, column: 11, scope: !13244)
!13248 = !DILocation(line: 246, column: 16, scope: !13239)
!13249 = !DILocation(line: 246, column: 20, scope: !13239)
!13250 = !DILocation(line: 246, column: 18, scope: !13239)
!13251 = !DILocation(line: 246, column: 28, scope: !13239)
!13252 = !DILocation(line: 246, column: 25, scope: !13239)
!13253 = !DILocation(line: 246, column: 33, scope: !13239)
!13254 = !DILocation(line: 246, column: 36, scope: !13239)
!13255 = !DILocation(line: 246, column: 47, scope: !13239)
!13256 = !DILocation(line: 246, column: 45, scope: !13239)
!13257 = !DILocation(line: 0, scope: !13239)
!13258 = distinct !{!13258, !13242, !13259}
!13259 = !DILocation(line: 246, column: 59, scope: !13239)
!13260 = !DILocation(line: 248, column: 17, scope: !13239)
!13261 = !DILocation(line: 248, column: 14, scope: !13239)
!13262 = !DILocation(line: 250, column: 18, scope: !13239)
!13263 = !DILocation(line: 250, column: 46, scope: !13239)
!13264 = !DILocation(line: 250, column: 61, scope: !13239)
!13265 = !DILocation(line: 250, column: 32, scope: !13239)
!13266 = !DILocation(line: 250, column: 9, scope: !13239)
!13267 = !DILocation(line: 251, column: 26, scope: !13239)
!13268 = !DILocation(line: 251, column: 18, scope: !13239)
!13269 = !DILocation(line: 251, column: 16, scope: !13239)
!13270 = !DILocation(line: 252, column: 25, scope: !13239)
!13271 = !DILocation(line: 252, column: 42, scope: !13239)
!13272 = !DILocation(line: 252, column: 23, scope: !13239)
!13273 = !DILocation(line: 254, column: 17, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13239, file: !1273, line: 254, column: 13)
!13275 = !DILocation(line: 254, column: 15, scope: !13274)
!13276 = !DILocation(line: 254, column: 36, scope: !13274)
!13277 = !DILocation(line: 254, column: 41, scope: !13274)
!13278 = !DILocation(line: 254, column: 33, scope: !13274)
!13279 = !DILocation(line: 254, column: 31, scope: !13274)
!13280 = !DILocation(line: 254, column: 62, scope: !13274)
!13281 = !DILocation(line: 254, column: 60, scope: !13274)
!13282 = !DILocation(line: 255, column: 13, scope: !13274)
!13283 = !DILocation(line: 255, column: 18, scope: !13274)
!13284 = !DILocation(line: 255, column: 23, scope: !13274)
!13285 = !DILocation(line: 256, column: 17, scope: !13274)
!13286 = !DILocation(line: 256, column: 20, scope: !13274)
!13287 = !DILocation(line: 256, column: 24, scope: !13274)
!13288 = !DILocation(line: 256, column: 31, scope: !13274)
!13289 = !DILocation(line: 256, column: 36, scope: !13274)
!13290 = !DILocation(line: 254, column: 13, scope: !13239)
!13291 = !DILocation(line: 258, column: 22, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13274, file: !1273, line: 257, column: 11)
!13293 = !DILocation(line: 259, column: 36, scope: !13292)
!13294 = !DILocation(line: 259, column: 51, scope: !13292)
!13295 = !DILocation(line: 259, column: 56, scope: !13292)
!13296 = !DILocation(line: 259, column: 22, scope: !13292)
!13297 = !DILocation(line: 259, column: 62, scope: !13292)
!13298 = !DILocation(line: 258, column: 13, scope: !13292)
!13299 = !DILocation(line: 260, column: 30, scope: !13292)
!13300 = !DILocation(line: 260, column: 22, scope: !13292)
!13301 = !DILocation(line: 260, column: 20, scope: !13292)
!13302 = !DILocation(line: 261, column: 27, scope: !13292)
!13303 = !DILocation(line: 262, column: 11, scope: !13292)
!13304 = !DILocation(line: 265, column: 9, scope: !13209)
!13305 = !DILocation(line: 265, column: 19, scope: !13209)
!13306 = !DILocation(line: 265, column: 17, scope: !13209)
!13307 = !DILocation(line: 265, column: 7, scope: !13209)
!13308 = !DILocation(line: 266, column: 14, scope: !13209)
!13309 = !DILocation(line: 266, column: 17, scope: !13209)
!13310 = !DILocation(line: 266, column: 22, scope: !13209)
!13311 = !DILocation(line: 266, column: 5, scope: !13209)
!13312 = !DILocation(line: 267, column: 18, scope: !13209)
!13313 = !DILocation(line: 267, column: 22, scope: !13209)
!13314 = !DILocation(line: 267, column: 20, scope: !13209)
!13315 = !DILocation(line: 267, column: 31, scope: !13209)
!13316 = !DILocation(line: 267, column: 29, scope: !13209)
!13317 = !DILocation(line: 267, column: 16, scope: !13209)
!13318 = !DILocation(line: 269, column: 3, scope: !13040)
!13319 = !DILabel(scope: !13040, name: "use_integer_arithmetic", file: !1273, line: 271)
!13320 = !DILocation(line: 271, column: 2, scope: !13040)
!13321 = !DILocation(line: 278, column: 9, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !1273, line: 278, column: 9)
!13323 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 272, column: 3)
!13324 = !DILocation(line: 278, column: 14, scope: !13322)
!13325 = !DILocation(line: 278, column: 9, scope: !13323)
!13326 = !DILocation(line: 280, column: 18, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13322, file: !1273, line: 279, column: 7)
!13328 = !DILocation(line: 282, column: 13, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13327, file: !1273, line: 282, column: 13)
!13330 = !DILocation(line: 282, column: 21, scope: !13329)
!13331 = !DILocation(line: 282, column: 18, scope: !13329)
!13332 = !DILocation(line: 282, column: 13, scope: !13327)
!13333 = !DILocation(line: 284, column: 13, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13329, file: !1273, line: 283, column: 11)
!13335 = !DILocalVariable(name: "r10", scope: !13336, file: !1273, line: 286, type: !6)
!13336 = distinct !DILexicalBlock(scope: !13334, file: !1273, line: 285, column: 15)
!13337 = !DILocation(line: 286, column: 30, scope: !13336)
!13338 = !DILocation(line: 286, column: 37, scope: !13336)
!13339 = !DILocation(line: 286, column: 43, scope: !13336)
!13340 = !DILocation(line: 286, column: 41, scope: !13336)
!13341 = !DILocation(line: 286, column: 49, scope: !13336)
!13342 = !DILocation(line: 286, column: 56, scope: !13336)
!13343 = !DILocation(line: 286, column: 54, scope: !13336)
!13344 = !DILocation(line: 286, column: 36, scope: !13336)
!13345 = !DILocalVariable(name: "r2", scope: !13336, file: !1273, line: 287, type: !6)
!13346 = !DILocation(line: 287, column: 30, scope: !13336)
!13347 = !DILocation(line: 287, column: 36, scope: !13336)
!13348 = !DILocation(line: 287, column: 42, scope: !13336)
!13349 = !DILocation(line: 287, column: 40, scope: !13336)
!13350 = !DILocation(line: 287, column: 48, scope: !13336)
!13351 = !DILocation(line: 287, column: 55, scope: !13336)
!13352 = !DILocation(line: 287, column: 64, scope: !13336)
!13353 = !DILocation(line: 287, column: 52, scope: !13336)
!13354 = !DILocation(line: 288, column: 24, scope: !13336)
!13355 = !DILocation(line: 288, column: 21, scope: !13336)
!13356 = !DILocation(line: 289, column: 26, scope: !13336)
!13357 = !DILocation(line: 289, column: 32, scope: !13336)
!13358 = !DILocation(line: 289, column: 30, scope: !13336)
!13359 = !DILocation(line: 289, column: 24, scope: !13336)
!13360 = !DILocation(line: 290, column: 29, scope: !13336)
!13361 = !DILocation(line: 290, column: 34, scope: !13336)
!13362 = !DILocation(line: 290, column: 32, scope: !13336)
!13363 = !DILocation(line: 291, column: 32, scope: !13336)
!13364 = !DILocation(line: 291, column: 37, scope: !13336)
!13365 = !DILocation(line: 291, column: 35, scope: !13336)
!13366 = !DILocation(line: 291, column: 47, scope: !13336)
!13367 = !DILocation(line: 292, column: 36, scope: !13336)
!13368 = !DILocation(line: 292, column: 43, scope: !13336)
!13369 = !DILocation(line: 292, column: 48, scope: !13336)
!13370 = !DILocation(line: 292, column: 46, scope: !13336)
!13371 = !DILocation(line: 292, column: 41, scope: !13336)
!13372 = !DILocation(line: 292, column: 33, scope: !13336)
!13373 = !DILocation(line: 290, column: 26, scope: !13336)
!13374 = !DILocation(line: 293, column: 25, scope: !13336)
!13375 = !DILocation(line: 294, column: 15, scope: !13336)
!13376 = !DILocation(line: 295, column: 20, scope: !13334)
!13377 = !DILocation(line: 295, column: 28, scope: !13334)
!13378 = !DILocation(line: 295, column: 25, scope: !13334)
!13379 = !DILocation(line: 295, column: 32, scope: !13334)
!13380 = !DILocation(line: 295, column: 35, scope: !13334)
!13381 = !DILocation(line: 295, column: 46, scope: !13334)
!13382 = !DILocation(line: 295, column: 44, scope: !13334)
!13383 = !DILocation(line: 0, scope: !13334)
!13384 = distinct !{!13384, !13333, !13385}
!13385 = !DILocation(line: 295, column: 58, scope: !13334)
!13386 = !DILocation(line: 297, column: 17, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13334, file: !1273, line: 297, column: 17)
!13388 = !DILocation(line: 297, column: 21, scope: !13387)
!13389 = !DILocation(line: 297, column: 17, scope: !13334)
!13390 = !DILocation(line: 299, column: 21, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13392, file: !1273, line: 299, column: 21)
!13392 = distinct !DILexicalBlock(scope: !13387, file: !1273, line: 298, column: 15)
!13393 = !DILocation(line: 299, column: 35, scope: !13391)
!13394 = !DILocation(line: 299, column: 21, scope: !13392)
!13395 = !DILocation(line: 300, column: 27, scope: !13391)
!13396 = !DILocation(line: 300, column: 39, scope: !13391)
!13397 = !DILocation(line: 300, column: 46, scope: !13391)
!13398 = !DILocation(line: 300, column: 36, scope: !13391)
!13399 = !DILocation(line: 300, column: 25, scope: !13391)
!13400 = !DILocation(line: 301, column: 23, scope: !13391)
!13401 = !DILocation(line: 301, column: 37, scope: !13391)
!13402 = !DILocation(line: 301, column: 54, scope: !13391)
!13403 = !DILocation(line: 301, column: 61, scope: !13391)
!13404 = !DILocation(line: 301, column: 59, scope: !13391)
!13405 = !DILocation(line: 303, column: 27, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13391, file: !1273, line: 302, column: 19)
!13407 = !DILocation(line: 304, column: 30, scope: !13406)
!13408 = !DILocation(line: 306, column: 25, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13406, file: !1273, line: 306, column: 25)
!13410 = !DILocation(line: 306, column: 32, scope: !13409)
!13411 = !DILocation(line: 306, column: 25, scope: !13406)
!13412 = !DILocation(line: 308, column: 28, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13409, file: !1273, line: 307, column: 23)
!13414 = !DILocation(line: 309, column: 32, scope: !13413)
!13415 = !DILocation(line: 310, column: 23, scope: !13413)
!13416 = !DILocation(line: 311, column: 19, scope: !13406)
!13417 = !DILocation(line: 313, column: 21, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13392, file: !1273, line: 313, column: 21)
!13419 = !DILocation(line: 313, column: 25, scope: !13418)
!13420 = !DILocation(line: 314, column: 21, scope: !13418)
!13421 = !DILocation(line: 314, column: 25, scope: !13418)
!13422 = !DILocation(line: 314, column: 32, scope: !13418)
!13423 = !DILocation(line: 314, column: 38, scope: !13418)
!13424 = !DILocation(line: 314, column: 43, scope: !13418)
!13425 = !DILocation(line: 313, column: 21, scope: !13392)
!13426 = !DILocation(line: 316, column: 34, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13418, file: !1273, line: 315, column: 19)
!13428 = !DILocation(line: 316, column: 32, scope: !13427)
!13429 = !DILocation(line: 316, column: 28, scope: !13427)
!13430 = !DILocation(line: 316, column: 22, scope: !13427)
!13431 = !DILocation(line: 316, column: 26, scope: !13427)
!13432 = !DILocation(line: 317, column: 26, scope: !13427)
!13433 = !DILocation(line: 317, column: 23, scope: !13427)
!13434 = !DILocation(line: 318, column: 29, scope: !13427)
!13435 = !DILocation(line: 318, column: 32, scope: !13427)
!13436 = !DILocation(line: 318, column: 47, scope: !13427)
!13437 = !DILocation(line: 318, column: 21, scope: !13427)
!13438 = !DILocation(line: 319, column: 39, scope: !13427)
!13439 = !DILocation(line: 319, column: 28, scope: !13427)
!13440 = !DILocation(line: 320, column: 19, scope: !13427)
!13441 = !DILocation(line: 321, column: 15, scope: !13392)
!13442 = !DILocation(line: 322, column: 11, scope: !13334)
!13443 = !DILocation(line: 323, column: 7, scope: !13327)
!13444 = !DILocation(line: 325, column: 9, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13323, file: !1273, line: 325, column: 9)
!13446 = !DILocation(line: 325, column: 23, scope: !13445)
!13447 = !DILocation(line: 325, column: 9, scope: !13323)
!13448 = !DILocation(line: 326, column: 15, scope: !13445)
!13449 = !DILocation(line: 326, column: 29, scope: !13445)
!13450 = !DILocation(line: 326, column: 41, scope: !13445)
!13451 = !DILocation(line: 326, column: 45, scope: !13445)
!13452 = !DILocation(line: 326, column: 38, scope: !13445)
!13453 = !DILocation(line: 326, column: 27, scope: !13445)
!13454 = !DILocation(line: 326, column: 22, scope: !13445)
!13455 = !DILocation(line: 326, column: 13, scope: !13445)
!13456 = !DILocation(line: 327, column: 11, scope: !13445)
!13457 = !DILocation(line: 327, column: 25, scope: !13445)
!13458 = !DILocation(line: 327, column: 42, scope: !13445)
!13459 = !DILocation(line: 327, column: 49, scope: !13445)
!13460 = !DILocation(line: 327, column: 58, scope: !13445)
!13461 = !DILocation(line: 327, column: 56, scope: !13445)
!13462 = !DILocation(line: 327, column: 47, scope: !13445)
!13463 = !DILocation(line: 329, column: 12, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13445, file: !1273, line: 328, column: 7)
!13465 = !DILocation(line: 331, column: 14, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13464, file: !1273, line: 331, column: 13)
!13467 = !DILocation(line: 331, column: 19, scope: !13466)
!13468 = !DILocation(line: 332, column: 13, scope: !13466)
!13469 = !DILocation(line: 332, column: 16, scope: !13466)
!13470 = !DILocation(line: 332, column: 23, scope: !13466)
!13471 = !DILocation(line: 332, column: 20, scope: !13466)
!13472 = !DILocation(line: 332, column: 28, scope: !13466)
!13473 = !DILocation(line: 332, column: 31, scope: !13466)
!13474 = !DILocation(line: 332, column: 42, scope: !13466)
!13475 = !DILocation(line: 332, column: 40, scope: !13466)
!13476 = !DILocation(line: 331, column: 13, scope: !13464)
!13477 = !DILocation(line: 334, column: 21, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13466, file: !1273, line: 333, column: 11)
!13479 = !DILocation(line: 335, column: 20, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13478, file: !1273, line: 335, column: 17)
!13481 = !DILocation(line: 335, column: 25, scope: !13480)
!13482 = !DILocation(line: 335, column: 17, scope: !13478)
!13483 = !DILocation(line: 337, column: 18, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13480, file: !1273, line: 336, column: 15)
!13485 = !DILocation(line: 337, column: 22, scope: !13484)
!13486 = !DILocation(line: 338, column: 22, scope: !13484)
!13487 = !DILocation(line: 338, column: 19, scope: !13484)
!13488 = !DILocation(line: 339, column: 25, scope: !13484)
!13489 = !DILocation(line: 339, column: 28, scope: !13484)
!13490 = !DILocation(line: 339, column: 43, scope: !13484)
!13491 = !DILocation(line: 339, column: 17, scope: !13484)
!13492 = !DILocation(line: 340, column: 15, scope: !13484)
!13493 = !DILocation(line: 341, column: 17, scope: !13478)
!13494 = !DILocation(line: 342, column: 11, scope: !13478)
!13495 = !DILocation(line: 343, column: 7, scope: !13464)
!13496 = !DILocation(line: 345, column: 18, scope: !13323)
!13497 = !DILocation(line: 345, column: 16, scope: !13323)
!13498 = !DILocation(line: 347, column: 5, scope: !13323)
!13499 = !DILocalVariable(name: "digit", scope: !13500, file: !1273, line: 349, type: !27)
!13500 = distinct !DILexicalBlock(scope: !13323, file: !1273, line: 348, column: 7)
!13501 = !DILocation(line: 349, column: 13, scope: !13500)
!13502 = !DILocation(line: 349, column: 21, scope: !13500)
!13503 = !DILocation(line: 349, column: 25, scope: !13500)
!13504 = !DILocation(line: 350, column: 16, scope: !13500)
!13505 = !DILocation(line: 350, column: 22, scope: !13500)
!13506 = !DILocation(line: 350, column: 10, scope: !13500)
!13507 = !DILocation(line: 350, column: 14, scope: !13500)
!13508 = !DILocation(line: 351, column: 7, scope: !13500)
!13509 = !DILocation(line: 352, column: 17, scope: !13323)
!13510 = !DILocation(line: 352, column: 24, scope: !13323)
!13511 = distinct !{!13511, !13498, !13512}
!13512 = !DILocation(line: 352, column: 28, scope: !13323)
!13513 = !DILocation(line: 353, column: 3, scope: !13323)
!13514 = !DILabel(scope: !13040, name: "do_grouping", file: !1273, line: 355)
!13515 = !DILocation(line: 355, column: 2, scope: !13040)
!13516 = !DILocation(line: 356, column: 7, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 356, column: 7)
!13518 = !DILocation(line: 356, column: 12, scope: !13517)
!13519 = !DILocation(line: 356, column: 7, scope: !13040)
!13520 = !DILocation(line: 357, column: 23, scope: !13517)
!13521 = !DILocation(line: 357, column: 26, scope: !13517)
!13522 = !DILocation(line: 357, column: 39, scope: !13517)
!13523 = !DILocation(line: 357, column: 37, scope: !13517)
!13524 = !DILocation(line: 357, column: 42, scope: !13517)
!13525 = !DILocation(line: 357, column: 52, scope: !13517)
!13526 = !DILocation(line: 357, column: 9, scope: !13517)
!13527 = !DILocation(line: 357, column: 7, scope: !13517)
!13528 = !DILocation(line: 357, column: 5, scope: !13517)
!13529 = !DILocation(line: 359, column: 7, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13040, file: !1273, line: 359, column: 7)
!13531 = !DILocation(line: 359, column: 12, scope: !13530)
!13532 = !DILocation(line: 359, column: 7, scope: !13040)
!13533 = !DILocation(line: 361, column: 11, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13535, file: !1273, line: 361, column: 11)
!13535 = distinct !DILexicalBlock(scope: !13530, file: !1273, line: 360, column: 5)
!13536 = !DILocation(line: 361, column: 20, scope: !13534)
!13537 = !DILocation(line: 361, column: 11, scope: !13535)
!13538 = !DILocalVariable(name: "power", scope: !13539, file: !1273, line: 363, type: !168)
!13539 = distinct !DILexicalBlock(scope: !13534, file: !1273, line: 362, column: 9)
!13540 = !DILocation(line: 363, column: 21, scope: !13539)
!13541 = !DILocation(line: 364, column: 20, scope: !13539)
!13542 = !DILocation(line: 365, column: 22, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13539, file: !1273, line: 365, column: 11)
!13544 = !DILocation(line: 365, column: 16, scope: !13543)
!13545 = !DILocation(line: 365, column: 27, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13543, file: !1273, line: 365, column: 11)
!13547 = !DILocation(line: 365, column: 35, scope: !13546)
!13548 = !DILocation(line: 365, column: 33, scope: !13546)
!13549 = !DILocation(line: 365, column: 11, scope: !13543)
!13550 = !DILocation(line: 366, column: 17, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13546, file: !1273, line: 366, column: 17)
!13552 = !DILocation(line: 366, column: 31, scope: !13551)
!13553 = !DILocation(line: 366, column: 28, scope: !13551)
!13554 = !DILocation(line: 366, column: 17, scope: !13546)
!13555 = !DILocation(line: 367, column: 15, scope: !13551)
!13556 = !DILocation(line: 365, column: 59, scope: !13546)
!13557 = !DILocation(line: 365, column: 56, scope: !13546)
!13558 = !DILocation(line: 365, column: 11, scope: !13546)
!13559 = distinct !{!13559, !13549, !13560}
!13560 = !DILocation(line: 367, column: 15, scope: !13543)
!13561 = !DILocation(line: 368, column: 9, scope: !13539)
!13562 = !DILocation(line: 370, column: 12, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13535, file: !1273, line: 370, column: 11)
!13564 = !DILocation(line: 370, column: 24, scope: !13563)
!13565 = !DILocation(line: 370, column: 29, scope: !13563)
!13566 = !DILocation(line: 370, column: 21, scope: !13563)
!13567 = !DILocation(line: 370, column: 41, scope: !13563)
!13568 = !DILocation(line: 370, column: 45, scope: !13563)
!13569 = !DILocation(line: 370, column: 50, scope: !13563)
!13570 = !DILocation(line: 370, column: 11, scope: !13535)
!13571 = !DILocation(line: 371, column: 17, scope: !13563)
!13572 = !DILocation(line: 371, column: 20, scope: !13563)
!13573 = !DILocation(line: 371, column: 9, scope: !13563)
!13574 = !DILocation(line: 373, column: 11, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13535, file: !1273, line: 373, column: 11)
!13576 = !DILocation(line: 373, column: 11, scope: !13535)
!13577 = !DILocation(line: 374, column: 26, scope: !13575)
!13578 = !DILocation(line: 374, column: 31, scope: !13575)
!13579 = !DILocation(line: 374, column: 50, scope: !13575)
!13580 = !DILocation(line: 374, column: 53, scope: !13575)
!13581 = !DILocation(line: 374, column: 62, scope: !13575)
!13582 = !DILocation(line: 374, column: 23, scope: !13575)
!13583 = !DILocation(line: 376, column: 38, scope: !13575)
!13584 = !DILocation(line: 376, column: 25, scope: !13575)
!13585 = !DILocation(line: 374, column: 22, scope: !13575)
!13586 = !DILocation(line: 374, column: 17, scope: !13575)
!13587 = !DILocation(line: 374, column: 20, scope: !13575)
!13588 = !DILocation(line: 374, column: 9, scope: !13575)
!13589 = !DILocation(line: 378, column: 11, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13535, file: !1273, line: 378, column: 11)
!13591 = !DILocation(line: 378, column: 16, scope: !13590)
!13592 = !DILocation(line: 378, column: 11, scope: !13535)
!13593 = !DILocation(line: 380, column: 16, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !1273, line: 380, column: 15)
!13595 = distinct !DILexicalBlock(scope: !13590, file: !1273, line: 379, column: 9)
!13596 = !DILocation(line: 380, column: 21, scope: !13594)
!13597 = !DILocation(line: 380, column: 40, scope: !13594)
!13598 = !DILocation(line: 380, column: 43, scope: !13594)
!13599 = !DILocation(line: 380, column: 15, scope: !13595)
!13600 = !DILocation(line: 381, column: 21, scope: !13594)
!13601 = !DILocation(line: 381, column: 24, scope: !13594)
!13602 = !DILocation(line: 381, column: 13, scope: !13594)
!13603 = !DILocation(line: 382, column: 19, scope: !13595)
!13604 = !DILocation(line: 382, column: 22, scope: !13595)
!13605 = !DILocation(line: 383, column: 9, scope: !13595)
!13606 = !DILocation(line: 384, column: 5, scope: !13535)
!13607 = !DILocation(line: 386, column: 4, scope: !13040)
!13608 = !DILocation(line: 386, column: 12, scope: !13040)
!13609 = !DILocation(line: 388, column: 10, scope: !13040)
!13610 = !DILocation(line: 388, column: 3, scope: !13040)
!13611 = distinct !DISubprogram(name: "adjust_value", scope: !1273, file: !1273, line: 54, type: !13612, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !152)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!1265, !27, !1265}
!13614 = !DILocalVariable(name: "inexact_style", arg: 1, scope: !13611, file: !1273, line: 54, type: !27)
!13615 = !DILocation(line: 54, column: 19, scope: !13611)
!13616 = !DILocalVariable(name: "value", arg: 2, scope: !13611, file: !1273, line: 54, type: !1265)
!13617 = !DILocation(line: 54, column: 46, scope: !13611)
!13618 = !DILocation(line: 60, column: 7, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13611, file: !1273, line: 60, column: 7)
!13620 = !DILocation(line: 60, column: 21, scope: !13619)
!13621 = !DILocation(line: 60, column: 47, scope: !13619)
!13622 = !DILocation(line: 60, column: 50, scope: !13619)
!13623 = !DILocation(line: 60, column: 56, scope: !13619)
!13624 = !DILocation(line: 60, column: 7, scope: !13611)
!13625 = !DILocalVariable(name: "u", scope: !13626, file: !1273, line: 62, type: !168)
!13626 = distinct !DILexicalBlock(scope: !13619, file: !1273, line: 61, column: 5)
!13627 = !DILocation(line: 62, column: 17, scope: !13626)
!13628 = !DILocation(line: 62, column: 21, scope: !13626)
!13629 = !DILocation(line: 63, column: 15, scope: !13626)
!13630 = !DILocation(line: 63, column: 20, scope: !13626)
!13631 = !DILocation(line: 63, column: 34, scope: !13626)
!13632 = !DILocation(line: 63, column: 51, scope: !13626)
!13633 = !DILocation(line: 63, column: 54, scope: !13626)
!13634 = !DILocation(line: 63, column: 59, scope: !13626)
!13635 = !DILocation(line: 63, column: 56, scope: !13626)
!13636 = !DILocation(line: 0, scope: !13626)
!13637 = !DILocation(line: 63, column: 19, scope: !13626)
!13638 = !DILocation(line: 63, column: 17, scope: !13626)
!13639 = !DILocation(line: 63, column: 13, scope: !13626)
!13640 = !DILocation(line: 64, column: 5, scope: !13626)
!13641 = !DILocation(line: 66, column: 10, scope: !13611)
!13642 = !DILocation(line: 66, column: 3, scope: !13611)
!13643 = distinct !DISubprogram(name: "group_number", scope: !1273, file: !1273, line: 79, type: !13644, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !152)
!13644 = !DISubroutineType(types: !13645)
!13645 = !{!143, !143, !149, !146, !146}
!13646 = !DILocalVariable(name: "number", arg: 1, scope: !13643, file: !1273, line: 79, type: !143)
!13647 = !DILocation(line: 79, column: 21, scope: !13643)
!13648 = !DILocalVariable(name: "numberlen", arg: 2, scope: !13643, file: !1273, line: 79, type: !149)
!13649 = !DILocation(line: 79, column: 36, scope: !13643)
!13650 = !DILocalVariable(name: "grouping", arg: 3, scope: !13643, file: !1273, line: 80, type: !146)
!13651 = !DILocation(line: 80, column: 27, scope: !13643)
!13652 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !13643, file: !1273, line: 80, type: !146)
!13653 = !DILocation(line: 80, column: 49, scope: !13643)
!13654 = !DILocalVariable(name: "d", scope: !13643, file: !1273, line: 82, type: !143)
!13655 = !DILocation(line: 82, column: 18, scope: !13643)
!13656 = !DILocalVariable(name: "grouplen", scope: !13643, file: !1273, line: 83, type: !149)
!13657 = !DILocation(line: 83, column: 10, scope: !13643)
!13658 = !DILocalVariable(name: "thousands_seplen", scope: !13643, file: !1273, line: 84, type: !149)
!13659 = !DILocation(line: 84, column: 10, scope: !13643)
!13660 = !DILocation(line: 84, column: 37, scope: !13643)
!13661 = !DILocation(line: 84, column: 29, scope: !13643)
!13662 = !DILocalVariable(name: "i", scope: !13643, file: !1273, line: 85, type: !149)
!13663 = !DILocation(line: 85, column: 10, scope: !13643)
!13664 = !DILocation(line: 85, column: 14, scope: !13643)
!13665 = !DILocalVariable(name: "buf", scope: !13643, file: !1273, line: 89, type: !346)
!13666 = !DILocation(line: 89, column: 8, scope: !13643)
!13667 = !DILocation(line: 91, column: 3, scope: !13643)
!13668 = !DILocation(line: 91, column: 16, scope: !13643)
!13669 = !DILocation(line: 91, column: 24, scope: !13643)
!13670 = !DILocation(line: 92, column: 7, scope: !13643)
!13671 = !DILocation(line: 92, column: 16, scope: !13643)
!13672 = !DILocation(line: 92, column: 14, scope: !13643)
!13673 = !DILocation(line: 92, column: 5, scope: !13643)
!13674 = !DILocation(line: 94, column: 3, scope: !13643)
!13675 = !DILocalVariable(name: "g", scope: !13676, file: !1273, line: 96, type: !725)
!13676 = distinct !DILexicalBlock(scope: !13677, file: !1273, line: 95, column: 5)
!13677 = distinct !DILexicalBlock(scope: !13678, file: !1273, line: 94, column: 3)
!13678 = distinct !DILexicalBlock(scope: !13643, file: !1273, line: 94, column: 3)
!13679 = !DILocation(line: 96, column: 21, scope: !13676)
!13680 = !DILocation(line: 96, column: 26, scope: !13676)
!13681 = !DILocation(line: 96, column: 25, scope: !13676)
!13682 = !DILocation(line: 98, column: 11, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13676, file: !1273, line: 98, column: 11)
!13684 = !DILocation(line: 98, column: 11, scope: !13676)
!13685 = !DILocation(line: 100, column: 22, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13683, file: !1273, line: 99, column: 9)
!13687 = !DILocation(line: 100, column: 24, scope: !13686)
!13688 = !DILocation(line: 100, column: 37, scope: !13686)
!13689 = !DILocation(line: 100, column: 41, scope: !13686)
!13690 = !DILocation(line: 100, column: 20, scope: !13686)
!13691 = !DILocation(line: 101, column: 19, scope: !13686)
!13692 = !DILocation(line: 102, column: 9, scope: !13686)
!13693 = !DILocation(line: 104, column: 11, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13676, file: !1273, line: 104, column: 11)
!13695 = !DILocation(line: 104, column: 15, scope: !13694)
!13696 = !DILocation(line: 104, column: 13, scope: !13694)
!13697 = !DILocation(line: 104, column: 11, scope: !13676)
!13698 = !DILocation(line: 105, column: 20, scope: !13694)
!13699 = !DILocation(line: 105, column: 18, scope: !13694)
!13700 = !DILocation(line: 105, column: 9, scope: !13694)
!13701 = !DILocation(line: 107, column: 12, scope: !13676)
!13702 = !DILocation(line: 107, column: 9, scope: !13676)
!13703 = !DILocation(line: 108, column: 12, scope: !13676)
!13704 = !DILocation(line: 108, column: 9, scope: !13676)
!13705 = !DILocation(line: 109, column: 15, scope: !13676)
!13706 = !DILocation(line: 109, column: 18, scope: !13676)
!13707 = !DILocation(line: 109, column: 24, scope: !13676)
!13708 = !DILocation(line: 109, column: 22, scope: !13676)
!13709 = !DILocation(line: 109, column: 27, scope: !13676)
!13710 = !DILocation(line: 109, column: 7, scope: !13676)
!13711 = !DILocation(line: 110, column: 11, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13676, file: !1273, line: 110, column: 11)
!13713 = !DILocation(line: 110, column: 13, scope: !13712)
!13714 = !DILocation(line: 110, column: 11, scope: !13676)
!13715 = !DILocation(line: 111, column: 16, scope: !13712)
!13716 = !DILocation(line: 111, column: 9, scope: !13712)
!13717 = !DILocation(line: 113, column: 12, scope: !13676)
!13718 = !DILocation(line: 113, column: 9, scope: !13676)
!13719 = !DILocation(line: 114, column: 15, scope: !13676)
!13720 = !DILocation(line: 114, column: 18, scope: !13676)
!13721 = !DILocation(line: 114, column: 33, scope: !13676)
!13722 = !DILocation(line: 114, column: 7, scope: !13676)
!13723 = !DILocation(line: 94, column: 3, scope: !13677)
!13724 = distinct !{!13724, !13725, !13726}
!13725 = !DILocation(line: 94, column: 3, scope: !13678)
!13726 = !DILocation(line: 115, column: 5, scope: !13678)
!13727 = distinct !DISubprogram(name: "human_options", scope: !1273, file: !1273, line: 462, type: !13728, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1232, retainedNodes: !152)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{!109, !146, !630, !13730}
!13730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!13731 = !DILocalVariable(name: "spec", arg: 1, scope: !13727, file: !1273, line: 462, type: !146)
!13732 = !DILocation(line: 462, column: 28, scope: !13727)
!13733 = !DILocalVariable(name: "opts", arg: 2, scope: !13727, file: !1273, line: 462, type: !630)
!13734 = !DILocation(line: 462, column: 39, scope: !13727)
!13735 = !DILocalVariable(name: "block_size", arg: 3, scope: !13727, file: !1273, line: 462, type: !13730)
!13736 = !DILocation(line: 462, column: 56, scope: !13727)
!13737 = !DILocalVariable(name: "e", scope: !13727, file: !1273, line: 464, type: !1267)
!13738 = !DILocation(line: 464, column: 16, scope: !13727)
!13739 = !DILocation(line: 464, column: 30, scope: !13727)
!13740 = !DILocation(line: 464, column: 36, scope: !13727)
!13741 = !DILocation(line: 464, column: 48, scope: !13727)
!13742 = !DILocation(line: 464, column: 20, scope: !13727)
!13743 = !DILocation(line: 465, column: 8, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13727, file: !1273, line: 465, column: 7)
!13745 = !DILocation(line: 465, column: 7, scope: !13744)
!13746 = !DILocation(line: 465, column: 19, scope: !13744)
!13747 = !DILocation(line: 465, column: 7, scope: !13727)
!13748 = !DILocation(line: 467, column: 21, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13744, file: !1273, line: 466, column: 5)
!13750 = !DILocation(line: 467, column: 8, scope: !13749)
!13751 = !DILocation(line: 467, column: 19, scope: !13749)
!13752 = !DILocation(line: 468, column: 9, scope: !13749)
!13753 = !DILocation(line: 469, column: 5, scope: !13749)
!13754 = !DILocation(line: 470, column: 10, scope: !13727)
!13755 = !DILocation(line: 470, column: 3, scope: !13727)
!13756 = distinct !DISubprogram(name: "humblock", scope: !1273, file: !1273, line: 412, type: !13757, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !152)
!13757 = !DISubroutineType(types: !13758)
!13758 = !{!1267, !146, !13730, !630}
!13759 = !DILocalVariable(name: "spec", arg: 1, scope: !13756, file: !1273, line: 412, type: !146)
!13760 = !DILocation(line: 412, column: 23, scope: !13756)
!13761 = !DILocalVariable(name: "block_size", arg: 2, scope: !13756, file: !1273, line: 412, type: !13730)
!13762 = !DILocation(line: 412, column: 40, scope: !13756)
!13763 = !DILocalVariable(name: "options", arg: 3, scope: !13756, file: !1273, line: 412, type: !630)
!13764 = !DILocation(line: 412, column: 57, scope: !13756)
!13765 = !DILocalVariable(name: "i", scope: !13756, file: !1273, line: 414, type: !27)
!13766 = !DILocation(line: 414, column: 7, scope: !13756)
!13767 = !DILocalVariable(name: "opts", scope: !13756, file: !1273, line: 415, type: !27)
!13768 = !DILocation(line: 415, column: 7, scope: !13756)
!13769 = !DILocation(line: 417, column: 9, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13756, file: !1273, line: 417, column: 7)
!13771 = !DILocation(line: 418, column: 7, scope: !13770)
!13772 = !DILocation(line: 418, column: 20, scope: !13770)
!13773 = !DILocation(line: 418, column: 18, scope: !13770)
!13774 = !DILocation(line: 419, column: 7, scope: !13770)
!13775 = !DILocation(line: 419, column: 20, scope: !13770)
!13776 = !DILocation(line: 419, column: 18, scope: !13770)
!13777 = !DILocation(line: 417, column: 7, scope: !13756)
!13778 = !DILocation(line: 420, column: 19, scope: !13770)
!13779 = !DILocation(line: 420, column: 6, scope: !13770)
!13780 = !DILocation(line: 420, column: 17, scope: !13770)
!13781 = !DILocation(line: 420, column: 5, scope: !13770)
!13782 = !DILocation(line: 423, column: 12, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13784, file: !1273, line: 423, column: 11)
!13784 = distinct !DILexicalBlock(scope: !13770, file: !1273, line: 422, column: 5)
!13785 = !DILocation(line: 423, column: 11, scope: !13783)
!13786 = !DILocation(line: 423, column: 17, scope: !13783)
!13787 = !DILocation(line: 423, column: 11, scope: !13784)
!13788 = !DILocation(line: 425, column: 16, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13783, file: !1273, line: 424, column: 9)
!13790 = !DILocation(line: 426, column: 15, scope: !13789)
!13791 = !DILocation(line: 427, column: 9, scope: !13789)
!13792 = !DILocation(line: 429, column: 21, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13784, file: !1273, line: 429, column: 11)
!13794 = !DILocation(line: 429, column: 19, scope: !13793)
!13795 = !DILocation(line: 429, column: 13, scope: !13793)
!13796 = !DILocation(line: 429, column: 11, scope: !13784)
!13797 = !DILocation(line: 431, column: 35, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13793, file: !1273, line: 430, column: 9)
!13799 = !DILocation(line: 431, column: 19, scope: !13798)
!13800 = !DILocation(line: 431, column: 16, scope: !13798)
!13801 = !DILocation(line: 432, column: 12, scope: !13798)
!13802 = !DILocation(line: 432, column: 23, scope: !13798)
!13803 = !DILocation(line: 433, column: 9, scope: !13798)
!13804 = !DILocalVariable(name: "ptr", scope: !13805, file: !1273, line: 436, type: !143)
!13805 = distinct !DILexicalBlock(scope: !13793, file: !1273, line: 435, column: 9)
!13806 = !DILocation(line: 436, column: 17, scope: !13805)
!13807 = !DILocalVariable(name: "e", scope: !13805, file: !1273, line: 437, type: !1267)
!13808 = !DILocation(line: 437, column: 24, scope: !13805)
!13809 = !DILocation(line: 437, column: 40, scope: !13805)
!13810 = !DILocation(line: 437, column: 55, scope: !13805)
!13811 = !DILocation(line: 437, column: 28, scope: !13805)
!13812 = !DILocation(line: 439, column: 15, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13805, file: !1273, line: 439, column: 15)
!13814 = !DILocation(line: 439, column: 17, scope: !13813)
!13815 = !DILocation(line: 439, column: 15, scope: !13805)
!13816 = !DILocation(line: 441, column: 16, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13813, file: !1273, line: 440, column: 13)
!13818 = !DILocation(line: 441, column: 24, scope: !13817)
!13819 = !DILocation(line: 442, column: 22, scope: !13817)
!13820 = !DILocation(line: 442, column: 15, scope: !13817)
!13821 = !DILocation(line: 444, column: 11, scope: !13805)
!13822 = !DILocation(line: 444, column: 29, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !1273, line: 444, column: 11)
!13824 = distinct !DILexicalBlock(scope: !13805, file: !1273, line: 444, column: 11)
!13825 = !DILocation(line: 444, column: 28, scope: !13823)
!13826 = !DILocation(line: 444, column: 25, scope: !13823)
!13827 = !DILocation(line: 444, column: 34, scope: !13823)
!13828 = !DILocation(line: 444, column: 38, scope: !13823)
!13829 = !DILocation(line: 444, column: 37, scope: !13823)
!13830 = !DILocation(line: 444, column: 43, scope: !13823)
!13831 = !DILocation(line: 0, scope: !13823)
!13832 = !DILocation(line: 444, column: 18, scope: !13823)
!13833 = !DILocation(line: 444, column: 11, scope: !13824)
!13834 = !DILocation(line: 445, column: 17, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13823, file: !1273, line: 445, column: 17)
!13836 = !DILocation(line: 445, column: 25, scope: !13835)
!13837 = !DILocation(line: 445, column: 22, scope: !13835)
!13838 = !DILocation(line: 445, column: 17, scope: !13823)
!13839 = !DILocation(line: 447, column: 22, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13835, file: !1273, line: 446, column: 15)
!13841 = !DILocation(line: 448, column: 21, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13840, file: !1273, line: 448, column: 21)
!13843 = !DILocation(line: 448, column: 29, scope: !13842)
!13844 = !DILocation(line: 448, column: 21, scope: !13840)
!13845 = !DILocation(line: 449, column: 24, scope: !13842)
!13846 = !DILocation(line: 449, column: 19, scope: !13842)
!13847 = !DILocation(line: 450, column: 21, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13840, file: !1273, line: 450, column: 21)
!13849 = !DILocation(line: 450, column: 29, scope: !13848)
!13850 = !DILocation(line: 450, column: 36, scope: !13848)
!13851 = !DILocation(line: 450, column: 39, scope: !13848)
!13852 = !DILocation(line: 450, column: 47, scope: !13848)
!13853 = !DILocation(line: 450, column: 21, scope: !13840)
!13854 = !DILocation(line: 451, column: 24, scope: !13848)
!13855 = !DILocation(line: 451, column: 19, scope: !13848)
!13856 = !DILocation(line: 452, column: 17, scope: !13840)
!13857 = !DILocation(line: 444, column: 56, scope: !13823)
!13858 = !DILocation(line: 444, column: 11, scope: !13823)
!13859 = distinct !{!13859, !13833, !13860}
!13860 = !DILocation(line: 453, column: 15, scope: !13824)
!13861 = !DILocation(line: 457, column: 14, scope: !13756)
!13862 = !DILocation(line: 457, column: 4, scope: !13756)
!13863 = !DILocation(line: 457, column: 12, scope: !13756)
!13864 = !DILocation(line: 458, column: 3, scope: !13756)
!13865 = !DILocation(line: 459, column: 1, scope: !13756)
!13866 = distinct !DISubprogram(name: "default_block_size", scope: !1273, file: !1273, line: 406, type: !13867, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1232, retainedNodes: !152)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!168}
!13869 = !DILocation(line: 408, column: 10, scope: !13866)
!13870 = !DILocation(line: 408, column: 3, scope: !13866)
!13871 = distinct !DISubprogram(name: "getuser", scope: !1283, file: !1283, line: 69, type: !13872, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1278, retainedNodes: !152)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{!143, !1289}
!13874 = !DILocalVariable(name: "uid", arg: 1, scope: !13871, file: !1283, line: 69, type: !1289)
!13875 = !DILocation(line: 69, column: 16, scope: !13871)
!13876 = !DILocalVariable(name: "tail", scope: !13871, file: !1283, line: 71, type: !1281)
!13877 = !DILocation(line: 71, column: 18, scope: !13871)
!13878 = !DILocalVariable(name: "match", scope: !13871, file: !1283, line: 72, type: !1281)
!13879 = !DILocation(line: 72, column: 18, scope: !13871)
!13880 = !DILocation(line: 74, column: 15, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13871, file: !1283, line: 74, column: 3)
!13882 = !DILocation(line: 74, column: 13, scope: !13881)
!13883 = !DILocation(line: 74, column: 8, scope: !13881)
!13884 = !DILocation(line: 74, column: 27, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13881, file: !1283, line: 74, column: 3)
!13886 = !DILocation(line: 74, column: 3, scope: !13881)
!13887 = !DILocation(line: 76, column: 11, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13889, file: !1283, line: 76, column: 11)
!13889 = distinct !DILexicalBlock(scope: !13885, file: !1283, line: 75, column: 5)
!13890 = !DILocation(line: 76, column: 17, scope: !13888)
!13891 = !DILocation(line: 76, column: 20, scope: !13888)
!13892 = !DILocation(line: 76, column: 25, scope: !13888)
!13893 = !DILocation(line: 76, column: 22, scope: !13888)
!13894 = !DILocation(line: 76, column: 11, scope: !13889)
!13895 = !DILocation(line: 78, column: 19, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13888, file: !1283, line: 77, column: 9)
!13897 = !DILocation(line: 78, column: 17, scope: !13896)
!13898 = !DILocation(line: 79, column: 11, scope: !13896)
!13899 = !DILocation(line: 81, column: 5, scope: !13889)
!13900 = !DILocation(line: 74, column: 40, scope: !13885)
!13901 = !DILocation(line: 74, column: 46, scope: !13885)
!13902 = !DILocation(line: 74, column: 38, scope: !13885)
!13903 = !DILocation(line: 74, column: 3, scope: !13885)
!13904 = distinct !{!13904, !13886, !13905}
!13905 = !DILocation(line: 81, column: 5, scope: !13881)
!13906 = !DILocation(line: 83, column: 7, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13871, file: !1283, line: 83, column: 7)
!13908 = !DILocation(line: 83, column: 13, scope: !13907)
!13909 = !DILocation(line: 83, column: 7, scope: !13871)
!13910 = !DILocalVariable(name: "pwent", scope: !13911, file: !1283, line: 85, type: !1294)
!13911 = distinct !DILexicalBlock(scope: !13907, file: !1283, line: 84, column: 5)
!13912 = !DILocation(line: 85, column: 22, scope: !13911)
!13913 = !DILocation(line: 85, column: 40, scope: !13911)
!13914 = !DILocation(line: 85, column: 30, scope: !13911)
!13915 = !DILocalVariable(name: "name", scope: !13911, file: !1283, line: 86, type: !146)
!13916 = !DILocation(line: 86, column: 19, scope: !13911)
!13917 = !DILocation(line: 86, column: 26, scope: !13911)
!13918 = !DILocation(line: 86, column: 34, scope: !13911)
!13919 = !DILocation(line: 86, column: 41, scope: !13911)
!13920 = !DILocation(line: 87, column: 24, scope: !13911)
!13921 = !DILocation(line: 87, column: 15, scope: !13911)
!13922 = !DILocation(line: 87, column: 13, scope: !13911)
!13923 = !DILocation(line: 88, column: 21, scope: !13911)
!13924 = !DILocation(line: 88, column: 7, scope: !13911)
!13925 = !DILocation(line: 88, column: 14, scope: !13911)
!13926 = !DILocation(line: 88, column: 17, scope: !13911)
!13927 = !DILocation(line: 88, column: 19, scope: !13911)
!13928 = !DILocation(line: 89, column: 15, scope: !13911)
!13929 = !DILocation(line: 89, column: 22, scope: !13911)
!13930 = !DILocation(line: 89, column: 28, scope: !13911)
!13931 = !DILocation(line: 89, column: 7, scope: !13911)
!13932 = !DILocation(line: 92, column: 21, scope: !13911)
!13933 = !DILocation(line: 92, column: 7, scope: !13911)
!13934 = !DILocation(line: 92, column: 14, scope: !13911)
!13935 = !DILocation(line: 92, column: 19, scope: !13911)
!13936 = !DILocation(line: 93, column: 20, scope: !13911)
!13937 = !DILocation(line: 93, column: 18, scope: !13911)
!13938 = !DILocation(line: 94, column: 5, scope: !13911)
!13939 = !DILocation(line: 96, column: 10, scope: !13871)
!13940 = !DILocation(line: 96, column: 17, scope: !13871)
!13941 = !DILocation(line: 96, column: 27, scope: !13871)
!13942 = !DILocation(line: 96, column: 34, scope: !13871)
!13943 = !DILocation(line: 96, column: 3, scope: !13871)
!13944 = distinct !DISubprogram(name: "getuidbyname", scope: !1283, file: !1283, line: 105, type: !13945, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1278, retainedNodes: !152)
!13945 = !DISubroutineType(types: !13946)
!13946 = !{!13947, !146}
!13947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!13948 = !DILocalVariable(name: "user", arg: 1, scope: !13944, file: !1283, line: 105, type: !146)
!13949 = !DILocation(line: 105, column: 27, scope: !13944)
!13950 = !DILocalVariable(name: "tail", scope: !13944, file: !1283, line: 107, type: !1281)
!13951 = !DILocation(line: 107, column: 18, scope: !13944)
!13952 = !DILocalVariable(name: "pwent", scope: !13944, file: !1283, line: 108, type: !1294)
!13953 = !DILocation(line: 108, column: 18, scope: !13944)
!13954 = !DILocation(line: 110, column: 15, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13944, file: !1283, line: 110, column: 3)
!13956 = !DILocation(line: 110, column: 13, scope: !13955)
!13957 = !DILocation(line: 110, column: 8, scope: !13955)
!13958 = !DILocation(line: 110, column: 27, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13955, file: !1283, line: 110, column: 3)
!13960 = !DILocation(line: 110, column: 3, scope: !13955)
!13961 = !DILocation(line: 112, column: 10, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13959, file: !1283, line: 112, column: 9)
!13963 = !DILocation(line: 112, column: 16, scope: !13962)
!13964 = !DILocation(line: 112, column: 9, scope: !13962)
!13965 = !DILocation(line: 112, column: 25, scope: !13962)
!13966 = !DILocation(line: 112, column: 24, scope: !13962)
!13967 = !DILocation(line: 112, column: 21, scope: !13962)
!13968 = !DILocation(line: 112, column: 30, scope: !13962)
!13969 = !DILocation(line: 112, column: 42, scope: !13962)
!13970 = !DILocation(line: 112, column: 48, scope: !13962)
!13971 = !DILocation(line: 112, column: 54, scope: !13962)
!13972 = !DILocation(line: 112, column: 34, scope: !13962)
!13973 = !DILocation(line: 112, column: 9, scope: !13959)
!13974 = !DILocation(line: 113, column: 15, scope: !13962)
!13975 = !DILocation(line: 113, column: 21, scope: !13962)
!13976 = !DILocation(line: 113, column: 24, scope: !13962)
!13977 = !DILocation(line: 113, column: 7, scope: !13962)
!13978 = !DILocation(line: 112, column: 58, scope: !13962)
!13979 = !DILocation(line: 110, column: 40, scope: !13959)
!13980 = !DILocation(line: 110, column: 46, scope: !13959)
!13981 = !DILocation(line: 110, column: 38, scope: !13959)
!13982 = !DILocation(line: 110, column: 3, scope: !13959)
!13983 = distinct !{!13983, !13960, !13984}
!13984 = !DILocation(line: 113, column: 24, scope: !13955)
!13985 = !DILocation(line: 115, column: 15, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13944, file: !1283, line: 115, column: 3)
!13987 = !DILocation(line: 115, column: 13, scope: !13986)
!13988 = !DILocation(line: 115, column: 8, scope: !13986)
!13989 = !DILocation(line: 115, column: 29, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13986, file: !1283, line: 115, column: 3)
!13991 = !DILocation(line: 115, column: 3, scope: !13986)
!13992 = !DILocation(line: 117, column: 10, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13990, file: !1283, line: 117, column: 9)
!13994 = !DILocation(line: 117, column: 16, scope: !13993)
!13995 = !DILocation(line: 117, column: 9, scope: !13993)
!13996 = !DILocation(line: 117, column: 25, scope: !13993)
!13997 = !DILocation(line: 117, column: 24, scope: !13993)
!13998 = !DILocation(line: 117, column: 21, scope: !13993)
!13999 = !DILocation(line: 117, column: 30, scope: !13993)
!14000 = !DILocation(line: 117, column: 42, scope: !13993)
!14001 = !DILocation(line: 117, column: 48, scope: !13993)
!14002 = !DILocation(line: 117, column: 54, scope: !13993)
!14003 = !DILocation(line: 117, column: 34, scope: !13993)
!14004 = !DILocation(line: 117, column: 9, scope: !13990)
!14005 = !DILocation(line: 118, column: 7, scope: !13993)
!14006 = !DILocation(line: 117, column: 58, scope: !13993)
!14007 = !DILocation(line: 115, column: 42, scope: !13990)
!14008 = !DILocation(line: 115, column: 48, scope: !13990)
!14009 = !DILocation(line: 115, column: 40, scope: !13990)
!14010 = !DILocation(line: 115, column: 3, scope: !13990)
!14011 = distinct !{!14011, !13991, !14012}
!14012 = !DILocation(line: 118, column: 14, scope: !13986)
!14013 = !DILocation(line: 120, column: 21, scope: !13944)
!14014 = !DILocation(line: 120, column: 11, scope: !13944)
!14015 = !DILocation(line: 120, column: 9, scope: !13944)
!14016 = !DILocation(line: 131, column: 19, scope: !13944)
!14017 = !DILocation(line: 131, column: 10, scope: !13944)
!14018 = !DILocation(line: 131, column: 8, scope: !13944)
!14019 = !DILocation(line: 132, column: 11, scope: !13944)
!14020 = !DILocation(line: 132, column: 17, scope: !13944)
!14021 = !DILocation(line: 132, column: 23, scope: !13944)
!14022 = !DILocation(line: 132, column: 3, scope: !13944)
!14023 = !DILocation(line: 135, column: 7, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !13944, file: !1283, line: 135, column: 7)
!14025 = !DILocation(line: 135, column: 7, scope: !13944)
!14026 = !DILocation(line: 137, column: 20, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14024, file: !1283, line: 136, column: 5)
!14028 = !DILocation(line: 137, column: 27, scope: !14027)
!14029 = !DILocation(line: 137, column: 7, scope: !14027)
!14030 = !DILocation(line: 137, column: 13, scope: !14027)
!14031 = !DILocation(line: 137, column: 16, scope: !14027)
!14032 = !DILocation(line: 137, column: 18, scope: !14027)
!14033 = !DILocation(line: 138, column: 20, scope: !14027)
!14034 = !DILocation(line: 138, column: 7, scope: !14027)
!14035 = !DILocation(line: 138, column: 13, scope: !14027)
!14036 = !DILocation(line: 138, column: 18, scope: !14027)
!14037 = !DILocation(line: 139, column: 20, scope: !14027)
!14038 = !DILocation(line: 139, column: 18, scope: !14027)
!14039 = !DILocation(line: 140, column: 15, scope: !14027)
!14040 = !DILocation(line: 140, column: 21, scope: !14027)
!14041 = !DILocation(line: 140, column: 24, scope: !14027)
!14042 = !DILocation(line: 140, column: 7, scope: !14027)
!14043 = !DILocation(line: 143, column: 16, scope: !13944)
!14044 = !DILocation(line: 143, column: 3, scope: !13944)
!14045 = !DILocation(line: 143, column: 9, scope: !13944)
!14046 = !DILocation(line: 143, column: 14, scope: !13944)
!14047 = !DILocation(line: 144, column: 18, scope: !13944)
!14048 = !DILocation(line: 144, column: 16, scope: !13944)
!14049 = !DILocation(line: 145, column: 3, scope: !13944)
!14050 = !DILocation(line: 146, column: 1, scope: !13944)
!14051 = distinct !DISubprogram(name: "getgroup", scope: !1283, file: !1283, line: 151, type: !14052, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1278, retainedNodes: !152)
!14052 = !DISubroutineType(types: !14053)
!14053 = !{!143, !1291}
!14054 = !DILocalVariable(name: "gid", arg: 1, scope: !14051, file: !1283, line: 151, type: !1291)
!14055 = !DILocation(line: 151, column: 17, scope: !14051)
!14056 = !DILocalVariable(name: "tail", scope: !14051, file: !1283, line: 153, type: !1281)
!14057 = !DILocation(line: 153, column: 18, scope: !14051)
!14058 = !DILocalVariable(name: "match", scope: !14051, file: !1283, line: 154, type: !1281)
!14059 = !DILocation(line: 154, column: 18, scope: !14051)
!14060 = !DILocation(line: 156, column: 15, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14051, file: !1283, line: 156, column: 3)
!14062 = !DILocation(line: 156, column: 13, scope: !14061)
!14063 = !DILocation(line: 156, column: 8, scope: !14061)
!14064 = !DILocation(line: 156, column: 28, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14061, file: !1283, line: 156, column: 3)
!14066 = !DILocation(line: 156, column: 3, scope: !14061)
!14067 = !DILocation(line: 158, column: 11, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14069, file: !1283, line: 158, column: 11)
!14069 = distinct !DILexicalBlock(scope: !14065, file: !1283, line: 157, column: 5)
!14070 = !DILocation(line: 158, column: 17, scope: !14068)
!14071 = !DILocation(line: 158, column: 20, scope: !14068)
!14072 = !DILocation(line: 158, column: 25, scope: !14068)
!14073 = !DILocation(line: 158, column: 22, scope: !14068)
!14074 = !DILocation(line: 158, column: 11, scope: !14069)
!14075 = !DILocation(line: 160, column: 19, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14068, file: !1283, line: 159, column: 9)
!14077 = !DILocation(line: 160, column: 17, scope: !14076)
!14078 = !DILocation(line: 161, column: 11, scope: !14076)
!14079 = !DILocation(line: 163, column: 5, scope: !14069)
!14080 = !DILocation(line: 156, column: 41, scope: !14065)
!14081 = !DILocation(line: 156, column: 47, scope: !14065)
!14082 = !DILocation(line: 156, column: 39, scope: !14065)
!14083 = !DILocation(line: 156, column: 3, scope: !14065)
!14084 = distinct !{!14084, !14066, !14085}
!14085 = !DILocation(line: 163, column: 5, scope: !14061)
!14086 = !DILocation(line: 165, column: 7, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14051, file: !1283, line: 165, column: 7)
!14088 = !DILocation(line: 165, column: 13, scope: !14087)
!14089 = !DILocation(line: 165, column: 7, scope: !14051)
!14090 = !DILocalVariable(name: "grent", scope: !14091, file: !1283, line: 167, type: !1305)
!14091 = distinct !DILexicalBlock(scope: !14087, file: !1283, line: 166, column: 5)
!14092 = !DILocation(line: 167, column: 21, scope: !14091)
!14093 = !DILocation(line: 167, column: 39, scope: !14091)
!14094 = !DILocation(line: 167, column: 29, scope: !14091)
!14095 = !DILocalVariable(name: "name", scope: !14091, file: !1283, line: 168, type: !146)
!14096 = !DILocation(line: 168, column: 19, scope: !14091)
!14097 = !DILocation(line: 168, column: 26, scope: !14091)
!14098 = !DILocation(line: 168, column: 34, scope: !14091)
!14099 = !DILocation(line: 168, column: 41, scope: !14091)
!14100 = !DILocation(line: 169, column: 24, scope: !14091)
!14101 = !DILocation(line: 169, column: 15, scope: !14091)
!14102 = !DILocation(line: 169, column: 13, scope: !14091)
!14103 = !DILocation(line: 170, column: 21, scope: !14091)
!14104 = !DILocation(line: 170, column: 7, scope: !14091)
!14105 = !DILocation(line: 170, column: 14, scope: !14091)
!14106 = !DILocation(line: 170, column: 17, scope: !14091)
!14107 = !DILocation(line: 170, column: 19, scope: !14091)
!14108 = !DILocation(line: 171, column: 15, scope: !14091)
!14109 = !DILocation(line: 171, column: 22, scope: !14091)
!14110 = !DILocation(line: 171, column: 28, scope: !14091)
!14111 = !DILocation(line: 171, column: 7, scope: !14091)
!14112 = !DILocation(line: 174, column: 21, scope: !14091)
!14113 = !DILocation(line: 174, column: 7, scope: !14091)
!14114 = !DILocation(line: 174, column: 14, scope: !14091)
!14115 = !DILocation(line: 174, column: 19, scope: !14091)
!14116 = !DILocation(line: 175, column: 21, scope: !14091)
!14117 = !DILocation(line: 175, column: 19, scope: !14091)
!14118 = !DILocation(line: 176, column: 5, scope: !14091)
!14119 = !DILocation(line: 178, column: 10, scope: !14051)
!14120 = !DILocation(line: 178, column: 17, scope: !14051)
!14121 = !DILocation(line: 178, column: 27, scope: !14051)
!14122 = !DILocation(line: 178, column: 34, scope: !14051)
!14123 = !DILocation(line: 178, column: 3, scope: !14051)
!14124 = distinct !DISubprogram(name: "getgidbyname", scope: !1283, file: !1283, line: 187, type: !14125, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1278, retainedNodes: !152)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!14127, !146}
!14127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!14128 = !DILocalVariable(name: "group", arg: 1, scope: !14124, file: !1283, line: 187, type: !146)
!14129 = !DILocation(line: 187, column: 27, scope: !14124)
!14130 = !DILocalVariable(name: "tail", scope: !14124, file: !1283, line: 189, type: !1281)
!14131 = !DILocation(line: 189, column: 18, scope: !14124)
!14132 = !DILocalVariable(name: "grent", scope: !14124, file: !1283, line: 190, type: !1305)
!14133 = !DILocation(line: 190, column: 17, scope: !14124)
!14134 = !DILocation(line: 192, column: 15, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14124, file: !1283, line: 192, column: 3)
!14136 = !DILocation(line: 192, column: 13, scope: !14135)
!14137 = !DILocation(line: 192, column: 8, scope: !14135)
!14138 = !DILocation(line: 192, column: 28, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14135, file: !1283, line: 192, column: 3)
!14140 = !DILocation(line: 192, column: 3, scope: !14135)
!14141 = !DILocation(line: 194, column: 10, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14139, file: !1283, line: 194, column: 9)
!14143 = !DILocation(line: 194, column: 16, scope: !14142)
!14144 = !DILocation(line: 194, column: 9, scope: !14142)
!14145 = !DILocation(line: 194, column: 25, scope: !14142)
!14146 = !DILocation(line: 194, column: 24, scope: !14142)
!14147 = !DILocation(line: 194, column: 21, scope: !14142)
!14148 = !DILocation(line: 194, column: 31, scope: !14142)
!14149 = !DILocation(line: 194, column: 43, scope: !14142)
!14150 = !DILocation(line: 194, column: 49, scope: !14142)
!14151 = !DILocation(line: 194, column: 55, scope: !14142)
!14152 = !DILocation(line: 194, column: 35, scope: !14142)
!14153 = !DILocation(line: 194, column: 9, scope: !14139)
!14154 = !DILocation(line: 195, column: 15, scope: !14142)
!14155 = !DILocation(line: 195, column: 21, scope: !14142)
!14156 = !DILocation(line: 195, column: 24, scope: !14142)
!14157 = !DILocation(line: 195, column: 7, scope: !14142)
!14158 = !DILocation(line: 194, column: 60, scope: !14142)
!14159 = !DILocation(line: 192, column: 41, scope: !14139)
!14160 = !DILocation(line: 192, column: 47, scope: !14139)
!14161 = !DILocation(line: 192, column: 39, scope: !14139)
!14162 = !DILocation(line: 192, column: 3, scope: !14139)
!14163 = distinct !{!14163, !14140, !14164}
!14164 = !DILocation(line: 195, column: 24, scope: !14135)
!14165 = !DILocation(line: 197, column: 15, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14124, file: !1283, line: 197, column: 3)
!14167 = !DILocation(line: 197, column: 13, scope: !14166)
!14168 = !DILocation(line: 197, column: 8, scope: !14166)
!14169 = !DILocation(line: 197, column: 30, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14166, file: !1283, line: 197, column: 3)
!14171 = !DILocation(line: 197, column: 3, scope: !14166)
!14172 = !DILocation(line: 199, column: 10, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14170, file: !1283, line: 199, column: 9)
!14174 = !DILocation(line: 199, column: 16, scope: !14173)
!14175 = !DILocation(line: 199, column: 9, scope: !14173)
!14176 = !DILocation(line: 199, column: 25, scope: !14173)
!14177 = !DILocation(line: 199, column: 24, scope: !14173)
!14178 = !DILocation(line: 199, column: 21, scope: !14173)
!14179 = !DILocation(line: 199, column: 31, scope: !14173)
!14180 = !DILocation(line: 199, column: 43, scope: !14173)
!14181 = !DILocation(line: 199, column: 49, scope: !14173)
!14182 = !DILocation(line: 199, column: 55, scope: !14173)
!14183 = !DILocation(line: 199, column: 35, scope: !14173)
!14184 = !DILocation(line: 199, column: 9, scope: !14170)
!14185 = !DILocation(line: 200, column: 7, scope: !14173)
!14186 = !DILocation(line: 199, column: 60, scope: !14173)
!14187 = !DILocation(line: 197, column: 43, scope: !14170)
!14188 = !DILocation(line: 197, column: 49, scope: !14170)
!14189 = !DILocation(line: 197, column: 41, scope: !14170)
!14190 = !DILocation(line: 197, column: 3, scope: !14170)
!14191 = distinct !{!14191, !14171, !14192}
!14192 = !DILocation(line: 200, column: 14, scope: !14166)
!14193 = !DILocation(line: 202, column: 21, scope: !14124)
!14194 = !DILocation(line: 202, column: 11, scope: !14124)
!14195 = !DILocation(line: 202, column: 9, scope: !14124)
!14196 = !DILocation(line: 213, column: 19, scope: !14124)
!14197 = !DILocation(line: 213, column: 10, scope: !14124)
!14198 = !DILocation(line: 213, column: 8, scope: !14124)
!14199 = !DILocation(line: 214, column: 11, scope: !14124)
!14200 = !DILocation(line: 214, column: 17, scope: !14124)
!14201 = !DILocation(line: 214, column: 23, scope: !14124)
!14202 = !DILocation(line: 214, column: 3, scope: !14124)
!14203 = !DILocation(line: 217, column: 7, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14124, file: !1283, line: 217, column: 7)
!14205 = !DILocation(line: 217, column: 7, scope: !14124)
!14206 = !DILocation(line: 219, column: 20, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14204, file: !1283, line: 218, column: 5)
!14208 = !DILocation(line: 219, column: 27, scope: !14207)
!14209 = !DILocation(line: 219, column: 7, scope: !14207)
!14210 = !DILocation(line: 219, column: 13, scope: !14207)
!14211 = !DILocation(line: 219, column: 16, scope: !14207)
!14212 = !DILocation(line: 219, column: 18, scope: !14207)
!14213 = !DILocation(line: 220, column: 20, scope: !14207)
!14214 = !DILocation(line: 220, column: 7, scope: !14207)
!14215 = !DILocation(line: 220, column: 13, scope: !14207)
!14216 = !DILocation(line: 220, column: 18, scope: !14207)
!14217 = !DILocation(line: 221, column: 21, scope: !14207)
!14218 = !DILocation(line: 221, column: 19, scope: !14207)
!14219 = !DILocation(line: 222, column: 15, scope: !14207)
!14220 = !DILocation(line: 222, column: 21, scope: !14207)
!14221 = !DILocation(line: 222, column: 24, scope: !14207)
!14222 = !DILocation(line: 222, column: 7, scope: !14207)
!14223 = !DILocation(line: 225, column: 16, scope: !14124)
!14224 = !DILocation(line: 225, column: 3, scope: !14124)
!14225 = !DILocation(line: 225, column: 9, scope: !14124)
!14226 = !DILocation(line: 225, column: 14, scope: !14124)
!14227 = !DILocation(line: 226, column: 19, scope: !14124)
!14228 = !DILocation(line: 226, column: 17, scope: !14124)
!14229 = !DILocation(line: 227, column: 3, scope: !14124)
!14230 = !DILocation(line: 228, column: 1, scope: !14124)
!14231 = distinct !DISubprogram(name: "imaxtostr", scope: !14232, file: !14232, line: 36, type: !14233, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1579, retainedNodes: !152)
!14232 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/mohamad/clone/coreutils")
!14233 = !DISubroutineType(types: !14234)
!14234 = !{!143, !1582, !143}
!14235 = !DILocalVariable(name: "i", arg: 1, scope: !14231, file: !14232, line: 36, type: !1582)
!14236 = !DILocation(line: 36, column: 19, scope: !14231)
!14237 = !DILocalVariable(name: "buf", arg: 2, scope: !14231, file: !14232, line: 36, type: !143)
!14238 = !DILocation(line: 36, column: 28, scope: !14231)
!14239 = !DILocalVariable(name: "p", scope: !14231, file: !14232, line: 38, type: !143)
!14240 = !DILocation(line: 38, column: 9, scope: !14231)
!14241 = !DILocation(line: 38, column: 13, scope: !14231)
!14242 = !DILocation(line: 38, column: 17, scope: !14231)
!14243 = !DILocation(line: 39, column: 4, scope: !14231)
!14244 = !DILocation(line: 39, column: 6, scope: !14231)
!14245 = !DILocation(line: 41, column: 7, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14231, file: !14232, line: 41, column: 7)
!14247 = !DILocation(line: 41, column: 9, scope: !14246)
!14248 = !DILocation(line: 41, column: 7, scope: !14231)
!14249 = !DILocation(line: 43, column: 7, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !14232, line: 42, column: 5)
!14251 = !DILocation(line: 44, column: 22, scope: !14250)
!14252 = !DILocation(line: 44, column: 24, scope: !14250)
!14253 = !DILocation(line: 44, column: 20, scope: !14250)
!14254 = !DILocation(line: 44, column: 16, scope: !14250)
!14255 = !DILocation(line: 44, column: 10, scope: !14250)
!14256 = !DILocation(line: 44, column: 14, scope: !14250)
!14257 = !DILocation(line: 44, column: 9, scope: !14250)
!14258 = !DILocation(line: 45, column: 17, scope: !14250)
!14259 = !DILocation(line: 45, column: 24, scope: !14250)
!14260 = distinct !{!14260, !14249, !14261}
!14261 = !DILocation(line: 45, column: 28, scope: !14250)
!14262 = !DILocation(line: 47, column: 8, scope: !14250)
!14263 = !DILocation(line: 47, column: 12, scope: !14250)
!14264 = !DILocation(line: 48, column: 5, scope: !14250)
!14265 = !DILocation(line: 51, column: 7, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14246, file: !14232, line: 50, column: 5)
!14267 = !DILocation(line: 52, column: 22, scope: !14266)
!14268 = !DILocation(line: 52, column: 24, scope: !14266)
!14269 = !DILocation(line: 52, column: 20, scope: !14266)
!14270 = !DILocation(line: 52, column: 16, scope: !14266)
!14271 = !DILocation(line: 52, column: 10, scope: !14266)
!14272 = !DILocation(line: 52, column: 14, scope: !14266)
!14273 = !DILocation(line: 52, column: 9, scope: !14266)
!14274 = !DILocation(line: 53, column: 17, scope: !14266)
!14275 = !DILocation(line: 53, column: 24, scope: !14266)
!14276 = distinct !{!14276, !14265, !14277}
!14277 = !DILocation(line: 53, column: 28, scope: !14266)
!14278 = !DILocation(line: 56, column: 10, scope: !14231)
!14279 = !DILocation(line: 56, column: 3, scope: !14231)
!14280 = distinct !DISubprogram(name: "umaxtostr", scope: !14232, file: !14232, line: 36, type: !14281, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1583, retainedNodes: !152)
!14281 = !DISubroutineType(types: !14282)
!14282 = !{!143, !168, !143}
!14283 = !DILocalVariable(name: "i", arg: 1, scope: !14280, file: !14232, line: 36, type: !168)
!14284 = !DILocation(line: 36, column: 19, scope: !14280)
!14285 = !DILocalVariable(name: "buf", arg: 2, scope: !14280, file: !14232, line: 36, type: !143)
!14286 = !DILocation(line: 36, column: 28, scope: !14280)
!14287 = !DILocalVariable(name: "p", scope: !14280, file: !14232, line: 38, type: !143)
!14288 = !DILocation(line: 38, column: 9, scope: !14280)
!14289 = !DILocation(line: 38, column: 13, scope: !14280)
!14290 = !DILocation(line: 38, column: 17, scope: !14280)
!14291 = !DILocation(line: 39, column: 4, scope: !14280)
!14292 = !DILocation(line: 39, column: 6, scope: !14280)
!14293 = !DILocation(line: 41, column: 7, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14280, file: !14232, line: 41, column: 7)
!14295 = !DILocation(line: 41, column: 9, scope: !14294)
!14296 = !DILocation(line: 41, column: 7, scope: !14280)
!14297 = !DILocation(line: 43, column: 7, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14294, file: !14232, line: 42, column: 5)
!14299 = !DILocation(line: 44, column: 22, scope: !14298)
!14300 = !DILocation(line: 44, column: 24, scope: !14298)
!14301 = !DILocation(line: 44, column: 20, scope: !14298)
!14302 = !DILocation(line: 44, column: 16, scope: !14298)
!14303 = !DILocation(line: 44, column: 10, scope: !14298)
!14304 = !DILocation(line: 44, column: 14, scope: !14298)
!14305 = !DILocation(line: 44, column: 9, scope: !14298)
!14306 = !DILocation(line: 45, column: 17, scope: !14298)
!14307 = !DILocation(line: 45, column: 24, scope: !14298)
!14308 = distinct !{!14308, !14297, !14309}
!14309 = !DILocation(line: 45, column: 28, scope: !14298)
!14310 = !DILocation(line: 47, column: 8, scope: !14298)
!14311 = !DILocation(line: 47, column: 12, scope: !14298)
!14312 = !DILocation(line: 48, column: 5, scope: !14298)
!14313 = !DILocation(line: 51, column: 7, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14294, file: !14232, line: 50, column: 5)
!14315 = !DILocation(line: 52, column: 22, scope: !14314)
!14316 = !DILocation(line: 52, column: 24, scope: !14314)
!14317 = !DILocation(line: 52, column: 20, scope: !14314)
!14318 = !DILocation(line: 52, column: 16, scope: !14314)
!14319 = !DILocation(line: 52, column: 10, scope: !14314)
!14320 = !DILocation(line: 52, column: 14, scope: !14314)
!14321 = !DILocation(line: 52, column: 9, scope: !14314)
!14322 = !DILocation(line: 53, column: 17, scope: !14314)
!14323 = !DILocation(line: 53, column: 24, scope: !14314)
!14324 = distinct !{!14324, !14313, !14325}
!14325 = !DILocation(line: 53, column: 28, scope: !14314)
!14326 = !DILocation(line: 56, column: 10, scope: !14280)
!14327 = !DILocation(line: 56, column: 3, scope: !14280)
!14328 = distinct !DISubprogram(name: "mbsalign", scope: !14329, file: !14329, line: 112, type: !14330, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1586, retainedNodes: !152)
!14329 = !DIFile(filename: "lib/mbsalign.c", directory: "/home/mohamad/clone/coreutils")
!14330 = !DISubroutineType(types: !14331)
!14331 = !{!149, !146, !143, !149, !148, !695, !27}
!14332 = !DILocalVariable(name: "src", arg: 1, scope: !14328, file: !14329, line: 112, type: !146)
!14333 = !DILocation(line: 112, column: 23, scope: !14328)
!14334 = !DILocalVariable(name: "dest", arg: 2, scope: !14328, file: !14329, line: 112, type: !143)
!14335 = !DILocation(line: 112, column: 34, scope: !14328)
!14336 = !DILocalVariable(name: "dest_size", arg: 3, scope: !14328, file: !14329, line: 112, type: !149)
!14337 = !DILocation(line: 112, column: 47, scope: !14328)
!14338 = !DILocalVariable(name: "width", arg: 4, scope: !14328, file: !14329, line: 113, type: !148)
!14339 = !DILocation(line: 113, column: 19, scope: !14328)
!14340 = !DILocalVariable(name: "align", arg: 5, scope: !14328, file: !14329, line: 113, type: !695)
!14341 = !DILocation(line: 113, column: 38, scope: !14328)
!14342 = !DILocalVariable(name: "flags", arg: 6, scope: !14328, file: !14329, line: 113, type: !27)
!14343 = !DILocation(line: 113, column: 49, scope: !14328)
!14344 = !DILocalVariable(name: "ret", scope: !14328, file: !14329, line: 115, type: !149)
!14345 = !DILocation(line: 115, column: 10, scope: !14328)
!14346 = !DILocalVariable(name: "src_size", scope: !14328, file: !14329, line: 116, type: !149)
!14347 = !DILocation(line: 116, column: 10, scope: !14328)
!14348 = !DILocation(line: 116, column: 29, scope: !14328)
!14349 = !DILocation(line: 116, column: 21, scope: !14328)
!14350 = !DILocation(line: 116, column: 34, scope: !14328)
!14351 = !DILocalVariable(name: "newstr", scope: !14328, file: !14329, line: 117, type: !143)
!14352 = !DILocation(line: 117, column: 9, scope: !14328)
!14353 = !DILocalVariable(name: "str_wc", scope: !14328, file: !14329, line: 118, type: !1591)
!14354 = !DILocation(line: 118, column: 12, scope: !14328)
!14355 = !DILocalVariable(name: "str_to_print", scope: !14328, file: !14329, line: 119, type: !146)
!14356 = !DILocation(line: 119, column: 15, scope: !14328)
!14357 = !DILocation(line: 119, column: 30, scope: !14328)
!14358 = !DILocalVariable(name: "n_cols", scope: !14328, file: !14329, line: 120, type: !149)
!14359 = !DILocation(line: 120, column: 10, scope: !14328)
!14360 = !DILocation(line: 120, column: 19, scope: !14328)
!14361 = !DILocation(line: 120, column: 28, scope: !14328)
!14362 = !DILocalVariable(name: "n_used_bytes", scope: !14328, file: !14329, line: 121, type: !149)
!14363 = !DILocation(line: 121, column: 10, scope: !14328)
!14364 = !DILocation(line: 121, column: 25, scope: !14328)
!14365 = !DILocalVariable(name: "n_spaces", scope: !14328, file: !14329, line: 122, type: !149)
!14366 = !DILocation(line: 122, column: 10, scope: !14328)
!14367 = !DILocalVariable(name: "conversion", scope: !14328, file: !14329, line: 123, type: !141)
!14368 = !DILocation(line: 123, column: 8, scope: !14328)
!14369 = !DILocalVariable(name: "wc_enabled", scope: !14328, file: !14329, line: 124, type: !141)
!14370 = !DILocation(line: 124, column: 8, scope: !14328)
!14371 = !DILocation(line: 129, column: 9, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14328, file: !14329, line: 129, column: 7)
!14373 = !DILocation(line: 129, column: 15, scope: !14372)
!14374 = !DILocation(line: 129, column: 35, scope: !14372)
!14375 = !DILocation(line: 129, column: 38, scope: !14372)
!14376 = !DILocation(line: 129, column: 49, scope: !14372)
!14377 = !DILocation(line: 129, column: 7, scope: !14328)
!14378 = !DILocalVariable(name: "src_chars", scope: !14379, file: !14329, line: 131, type: !149)
!14379 = distinct !DILexicalBlock(scope: !14372, file: !14329, line: 130, column: 5)
!14380 = !DILocation(line: 131, column: 14, scope: !14379)
!14381 = !DILocation(line: 131, column: 42, scope: !14379)
!14382 = !DILocation(line: 131, column: 26, scope: !14379)
!14383 = !DILocation(line: 132, column: 11, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14379, file: !14329, line: 132, column: 11)
!14385 = !DILocation(line: 132, column: 21, scope: !14384)
!14386 = !DILocation(line: 132, column: 11, scope: !14379)
!14387 = !DILocation(line: 134, column: 15, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !14329, line: 134, column: 15)
!14389 = distinct !DILexicalBlock(scope: !14384, file: !14329, line: 133, column: 9)
!14390 = !DILocation(line: 134, column: 21, scope: !14388)
!14391 = !DILocation(line: 134, column: 15, scope: !14389)
!14392 = !DILocation(line: 135, column: 13, scope: !14388)
!14393 = !DILocation(line: 137, column: 13, scope: !14388)
!14394 = !DILocation(line: 139, column: 17, scope: !14379)
!14395 = !DILocation(line: 140, column: 24, scope: !14379)
!14396 = !DILocation(line: 140, column: 34, scope: !14379)
!14397 = !DILocation(line: 140, column: 16, scope: !14379)
!14398 = !DILocation(line: 140, column: 14, scope: !14379)
!14399 = !DILocation(line: 141, column: 11, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14379, file: !14329, line: 141, column: 11)
!14401 = !DILocation(line: 141, column: 18, scope: !14400)
!14402 = !DILocation(line: 141, column: 11, scope: !14379)
!14403 = !DILocation(line: 143, column: 15, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14405, file: !14329, line: 143, column: 15)
!14405 = distinct !DILexicalBlock(scope: !14400, file: !14329, line: 142, column: 9)
!14406 = !DILocation(line: 143, column: 21, scope: !14404)
!14407 = !DILocation(line: 143, column: 15, scope: !14405)
!14408 = !DILocation(line: 144, column: 13, scope: !14404)
!14409 = !DILocation(line: 146, column: 13, scope: !14404)
!14410 = !DILocation(line: 148, column: 21, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14379, file: !14329, line: 148, column: 11)
!14412 = !DILocation(line: 148, column: 29, scope: !14411)
!14413 = !DILocation(line: 148, column: 34, scope: !14411)
!14414 = !DILocation(line: 148, column: 11, scope: !14411)
!14415 = !DILocation(line: 148, column: 45, scope: !14411)
!14416 = !DILocation(line: 148, column: 11, scope: !14379)
!14417 = !DILocation(line: 150, column: 11, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14411, file: !14329, line: 149, column: 9)
!14419 = !DILocation(line: 150, column: 18, scope: !14418)
!14420 = !DILocation(line: 150, column: 28, scope: !14418)
!14421 = !DILocation(line: 150, column: 33, scope: !14418)
!14422 = !DILocation(line: 151, column: 22, scope: !14418)
!14423 = !DILocation(line: 152, column: 45, scope: !14418)
!14424 = !DILocation(line: 152, column: 24, scope: !14418)
!14425 = !DILocation(line: 152, column: 22, scope: !14418)
!14426 = !DILocation(line: 153, column: 30, scope: !14418)
!14427 = !DILocation(line: 153, column: 38, scope: !14418)
!14428 = !DILocation(line: 153, column: 20, scope: !14418)
!14429 = !DILocation(line: 153, column: 18, scope: !14418)
!14430 = !DILocation(line: 154, column: 9, scope: !14418)
!14431 = !DILocation(line: 155, column: 5, scope: !14379)
!14432 = !DILocation(line: 159, column: 7, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14328, file: !14329, line: 159, column: 7)
!14434 = !DILocation(line: 159, column: 18, scope: !14433)
!14435 = !DILocation(line: 159, column: 22, scope: !14433)
!14436 = !DILocation(line: 159, column: 33, scope: !14433)
!14437 = !DILocation(line: 159, column: 37, scope: !14433)
!14438 = !DILocation(line: 159, column: 47, scope: !14433)
!14439 = !DILocation(line: 159, column: 46, scope: !14433)
!14440 = !DILocation(line: 159, column: 44, scope: !14433)
!14441 = !DILocation(line: 159, column: 7, scope: !14328)
!14442 = !DILocation(line: 161, column: 13, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !14329, line: 161, column: 13)
!14444 = distinct !DILexicalBlock(scope: !14433, file: !14329, line: 160, column: 5)
!14445 = !DILocation(line: 161, column: 13, scope: !14444)
!14446 = !DILocation(line: 165, column: 40, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14443, file: !14329, line: 162, column: 11)
!14448 = !DILocation(line: 165, column: 24, scope: !14447)
!14449 = !DILocation(line: 165, column: 51, scope: !14447)
!14450 = !DILocation(line: 165, column: 22, scope: !14447)
!14451 = !DILocation(line: 166, column: 11, scope: !14447)
!14452 = !DILocation(line: 167, column: 26, scope: !14444)
!14453 = !DILocation(line: 167, column: 18, scope: !14444)
!14454 = !DILocation(line: 167, column: 16, scope: !14444)
!14455 = !DILocation(line: 168, column: 13, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14444, file: !14329, line: 168, column: 13)
!14457 = !DILocation(line: 168, column: 20, scope: !14456)
!14458 = !DILocation(line: 168, column: 13, scope: !14444)
!14459 = !DILocation(line: 170, column: 15, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !14329, line: 170, column: 15)
!14461 = distinct !DILexicalBlock(scope: !14456, file: !14329, line: 169, column: 9)
!14462 = !DILocation(line: 170, column: 21, scope: !14460)
!14463 = !DILocation(line: 170, column: 15, scope: !14461)
!14464 = !DILocation(line: 171, column: 13, scope: !14460)
!14465 = !DILocation(line: 173, column: 13, scope: !14460)
!14466 = !DILocation(line: 175, column: 24, scope: !14444)
!14467 = !DILocation(line: 175, column: 22, scope: !14444)
!14468 = !DILocation(line: 176, column: 31, scope: !14444)
!14469 = !DILocation(line: 176, column: 40, scope: !14444)
!14470 = !DILocation(line: 176, column: 39, scope: !14444)
!14471 = !DILocation(line: 176, column: 18, scope: !14444)
!14472 = !DILocation(line: 176, column: 16, scope: !14444)
!14473 = !DILocation(line: 177, column: 34, scope: !14444)
!14474 = !DILocation(line: 177, column: 42, scope: !14444)
!14475 = !DILocation(line: 177, column: 50, scope: !14444)
!14476 = !DILocation(line: 177, column: 24, scope: !14444)
!14477 = !DILocation(line: 177, column: 22, scope: !14444)
!14478 = !DILocation(line: 178, column: 5, scope: !14444)
!14479 = !DILocation(line: 159, column: 53, scope: !14433)
!14480 = !DILabel(scope: !14328, name: "mbsalign_unibyte", file: !14329, line: 180)
!14481 = !DILocation(line: 180, column: 1, scope: !14328)
!14482 = !DILocation(line: 182, column: 7, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14328, file: !14329, line: 182, column: 7)
!14484 = !DILocation(line: 182, column: 17, scope: !14483)
!14485 = !DILocation(line: 182, column: 16, scope: !14483)
!14486 = !DILocation(line: 182, column: 14, scope: !14483)
!14487 = !DILocation(line: 182, column: 7, scope: !14328)
!14488 = !DILocation(line: 184, column: 17, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14483, file: !14329, line: 183, column: 5)
!14490 = !DILocation(line: 184, column: 16, scope: !14489)
!14491 = !DILocation(line: 184, column: 14, scope: !14489)
!14492 = !DILocation(line: 185, column: 22, scope: !14489)
!14493 = !DILocation(line: 185, column: 20, scope: !14489)
!14494 = !DILocation(line: 186, column: 5, scope: !14489)
!14495 = !DILocation(line: 188, column: 8, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14328, file: !14329, line: 188, column: 7)
!14497 = !DILocation(line: 188, column: 7, scope: !14496)
!14498 = !DILocation(line: 188, column: 16, scope: !14496)
!14499 = !DILocation(line: 188, column: 14, scope: !14496)
!14500 = !DILocation(line: 188, column: 7, scope: !14328)
!14501 = !DILocation(line: 189, column: 17, scope: !14496)
!14502 = !DILocation(line: 189, column: 16, scope: !14496)
!14503 = !DILocation(line: 189, column: 25, scope: !14496)
!14504 = !DILocation(line: 189, column: 23, scope: !14496)
!14505 = !DILocation(line: 189, column: 14, scope: !14496)
!14506 = !DILocation(line: 189, column: 5, scope: !14496)
!14507 = !DILocation(line: 192, column: 12, scope: !14328)
!14508 = !DILocation(line: 192, column: 4, scope: !14328)
!14509 = !DILocation(line: 192, column: 10, scope: !14328)
!14510 = !DILocalVariable(name: "start_spaces", scope: !14511, file: !14329, line: 195, type: !149)
!14511 = distinct !DILexicalBlock(scope: !14328, file: !14329, line: 194, column: 3)
!14512 = !DILocation(line: 195, column: 12, scope: !14511)
!14513 = !DILocalVariable(name: "end_spaces", scope: !14511, file: !14329, line: 195, type: !149)
!14514 = !DILocation(line: 195, column: 26, scope: !14511)
!14515 = !DILocation(line: 197, column: 13, scope: !14511)
!14516 = !DILocation(line: 197, column: 5, scope: !14511)
!14517 = !DILocation(line: 200, column: 22, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14511, file: !14329, line: 198, column: 7)
!14519 = !DILocation(line: 201, column: 22, scope: !14518)
!14520 = !DILocation(line: 201, column: 20, scope: !14518)
!14521 = !DILocation(line: 202, column: 9, scope: !14518)
!14522 = !DILocation(line: 204, column: 24, scope: !14518)
!14523 = !DILocation(line: 204, column: 22, scope: !14518)
!14524 = !DILocation(line: 205, column: 20, scope: !14518)
!14525 = !DILocation(line: 206, column: 9, scope: !14518)
!14526 = !DILocation(line: 209, column: 24, scope: !14518)
!14527 = !DILocation(line: 209, column: 33, scope: !14518)
!14528 = !DILocation(line: 209, column: 39, scope: !14518)
!14529 = !DILocation(line: 209, column: 48, scope: !14518)
!14530 = !DILocation(line: 209, column: 37, scope: !14518)
!14531 = !DILocation(line: 209, column: 22, scope: !14518)
!14532 = !DILocation(line: 210, column: 22, scope: !14518)
!14533 = !DILocation(line: 210, column: 31, scope: !14518)
!14534 = !DILocation(line: 210, column: 20, scope: !14518)
!14535 = !DILocation(line: 211, column: 9, scope: !14518)
!14536 = !DILocation(line: 214, column: 11, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14511, file: !14329, line: 214, column: 11)
!14538 = !DILocation(line: 214, column: 17, scope: !14537)
!14539 = !DILocation(line: 214, column: 11, scope: !14511)
!14540 = !DILocation(line: 215, column: 22, scope: !14537)
!14541 = !DILocation(line: 215, column: 9, scope: !14537)
!14542 = !DILocation(line: 216, column: 11, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14511, file: !14329, line: 216, column: 11)
!14544 = !DILocation(line: 216, column: 17, scope: !14543)
!14545 = !DILocation(line: 216, column: 11, scope: !14511)
!14546 = !DILocation(line: 217, column: 20, scope: !14543)
!14547 = !DILocation(line: 217, column: 9, scope: !14543)
!14548 = !DILocation(line: 220, column: 11, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14511, file: !14329, line: 220, column: 11)
!14550 = !DILocation(line: 220, column: 21, scope: !14549)
!14551 = !DILocation(line: 220, column: 11, scope: !14511)
!14552 = !DILocalVariable(name: "space_left", scope: !14553, file: !14329, line: 222, type: !149)
!14553 = distinct !DILexicalBlock(scope: !14549, file: !14329, line: 221, column: 9)
!14554 = !DILocation(line: 222, column: 18, scope: !14553)
!14555 = !DILocalVariable(name: "dest_end", scope: !14553, file: !14329, line: 223, type: !143)
!14556 = !DILocation(line: 223, column: 17, scope: !14553)
!14557 = !DILocation(line: 223, column: 28, scope: !14553)
!14558 = !DILocation(line: 223, column: 35, scope: !14553)
!14559 = !DILocation(line: 223, column: 33, scope: !14553)
!14560 = !DILocation(line: 223, column: 45, scope: !14553)
!14561 = !DILocation(line: 225, column: 33, scope: !14553)
!14562 = !DILocation(line: 225, column: 39, scope: !14553)
!14563 = !DILocation(line: 225, column: 49, scope: !14553)
!14564 = !DILocation(line: 225, column: 18, scope: !14553)
!14565 = !DILocation(line: 225, column: 16, scope: !14553)
!14566 = !DILocation(line: 226, column: 24, scope: !14553)
!14567 = !DILocation(line: 226, column: 35, scope: !14553)
!14568 = !DILocation(line: 226, column: 33, scope: !14553)
!14569 = !DILocation(line: 226, column: 22, scope: !14553)
!14570 = !DILocation(line: 227, column: 27, scope: !14553)
!14571 = !DILocation(line: 227, column: 33, scope: !14553)
!14572 = !DILocation(line: 227, column: 47, scope: !14553)
!14573 = !DILocation(line: 227, column: 18, scope: !14553)
!14574 = !DILocation(line: 227, column: 16, scope: !14553)
!14575 = !DILocation(line: 228, column: 26, scope: !14553)
!14576 = !DILocation(line: 228, column: 32, scope: !14553)
!14577 = !DILocation(line: 228, column: 42, scope: !14553)
!14578 = !DILocation(line: 228, column: 11, scope: !14553)
!14579 = !DILocation(line: 229, column: 9, scope: !14553)
!14580 = !DILocation(line: 232, column: 11, scope: !14511)
!14581 = !DILocation(line: 232, column: 28, scope: !14511)
!14582 = !DILocation(line: 232, column: 43, scope: !14511)
!14583 = !DILocation(line: 232, column: 41, scope: !14511)
!14584 = !DILocation(line: 232, column: 55, scope: !14511)
!14585 = !DILocation(line: 232, column: 24, scope: !14511)
!14586 = !DILocation(line: 232, column: 9, scope: !14511)
!14587 = !DILocation(line: 233, column: 3, scope: !14511)
!14588 = !DILabel(scope: !14328, name: "mbsalign_cleanup", file: !14329, line: 235)
!14589 = !DILocation(line: 235, column: 1, scope: !14328)
!14590 = !DILocation(line: 237, column: 9, scope: !14328)
!14591 = !DILocation(line: 237, column: 3, scope: !14328)
!14592 = !DILocation(line: 238, column: 9, scope: !14328)
!14593 = !DILocation(line: 238, column: 3, scope: !14328)
!14594 = !DILocation(line: 240, column: 10, scope: !14328)
!14595 = !DILocation(line: 240, column: 3, scope: !14328)
!14596 = distinct !DISubprogram(name: "wc_ensure_printable", scope: !14329, file: !14329, line: 40, type: !14597, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1586, retainedNodes: !152)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{!141, !1591}
!14599 = !DILocalVariable(name: "wchars", arg: 1, scope: !14596, file: !14329, line: 40, type: !1591)
!14600 = !DILocation(line: 40, column: 31, scope: !14596)
!14601 = !DILocalVariable(name: "replaced", scope: !14596, file: !14329, line: 42, type: !141)
!14602 = !DILocation(line: 42, column: 8, scope: !14596)
!14603 = !DILocalVariable(name: "wc", scope: !14596, file: !14329, line: 43, type: !1591)
!14604 = !DILocation(line: 43, column: 12, scope: !14596)
!14605 = !DILocation(line: 43, column: 17, scope: !14596)
!14606 = !DILocation(line: 44, column: 3, scope: !14596)
!14607 = !DILocation(line: 44, column: 11, scope: !14596)
!14608 = !DILocation(line: 44, column: 10, scope: !14596)
!14609 = !DILocation(line: 46, column: 32, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14611, file: !14329, line: 46, column: 11)
!14611 = distinct !DILexicalBlock(scope: !14596, file: !14329, line: 45, column: 5)
!14612 = !DILocation(line: 46, column: 31, scope: !14610)
!14613 = !DILocation(line: 46, column: 12, scope: !14610)
!14614 = !DILocation(line: 46, column: 11, scope: !14611)
!14615 = !DILocation(line: 48, column: 12, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14610, file: !14329, line: 47, column: 9)
!14617 = !DILocation(line: 48, column: 15, scope: !14616)
!14618 = !DILocation(line: 49, column: 20, scope: !14616)
!14619 = !DILocation(line: 50, column: 9, scope: !14616)
!14620 = !DILocation(line: 51, column: 9, scope: !14611)
!14621 = distinct !{!14621, !14606, !14622}
!14622 = !DILocation(line: 52, column: 5, scope: !14596)
!14623 = !DILocation(line: 53, column: 10, scope: !14596)
!14624 = !DILocation(line: 53, column: 3, scope: !14596)
!14625 = distinct !DISubprogram(name: "wc_truncate", scope: !14329, file: !14329, line: 60, type: !14626, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1586, retainedNodes: !152)
!14626 = !DISubroutineType(types: !14627)
!14627 = !{!149, !1591, !149}
!14628 = !DILocalVariable(name: "wc", arg: 1, scope: !14625, file: !14329, line: 60, type: !1591)
!14629 = !DILocation(line: 60, column: 23, scope: !14625)
!14630 = !DILocalVariable(name: "width", arg: 2, scope: !14625, file: !14329, line: 60, type: !149)
!14631 = !DILocation(line: 60, column: 34, scope: !14625)
!14632 = !DILocalVariable(name: "cells", scope: !14625, file: !14329, line: 62, type: !149)
!14633 = !DILocation(line: 62, column: 10, scope: !14625)
!14634 = !DILocalVariable(name: "next_cells", scope: !14625, file: !14329, line: 63, type: !27)
!14635 = !DILocation(line: 63, column: 7, scope: !14625)
!14636 = !DILocation(line: 65, column: 3, scope: !14625)
!14637 = !DILocation(line: 65, column: 11, scope: !14625)
!14638 = !DILocation(line: 65, column: 10, scope: !14625)
!14639 = !DILocation(line: 67, column: 30, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14625, file: !14329, line: 66, column: 5)
!14641 = !DILocation(line: 67, column: 29, scope: !14640)
!14642 = !DILocation(line: 67, column: 20, scope: !14640)
!14643 = !DILocation(line: 67, column: 18, scope: !14640)
!14644 = !DILocation(line: 68, column: 11, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14640, file: !14329, line: 68, column: 11)
!14646 = !DILocation(line: 68, column: 22, scope: !14645)
!14647 = !DILocation(line: 68, column: 11, scope: !14640)
!14648 = !DILocation(line: 70, column: 12, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14645, file: !14329, line: 69, column: 9)
!14650 = !DILocation(line: 70, column: 15, scope: !14649)
!14651 = !DILocation(line: 71, column: 22, scope: !14649)
!14652 = !DILocation(line: 72, column: 9, scope: !14649)
!14653 = !DILocation(line: 73, column: 11, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14640, file: !14329, line: 73, column: 11)
!14655 = !DILocation(line: 73, column: 19, scope: !14654)
!14656 = !DILocation(line: 73, column: 17, scope: !14654)
!14657 = !DILocation(line: 73, column: 32, scope: !14654)
!14658 = !DILocation(line: 73, column: 30, scope: !14654)
!14659 = !DILocation(line: 73, column: 11, scope: !14640)
!14660 = !DILocation(line: 74, column: 9, scope: !14654)
!14661 = !DILocation(line: 75, column: 16, scope: !14640)
!14662 = !DILocation(line: 75, column: 13, scope: !14640)
!14663 = !DILocation(line: 76, column: 9, scope: !14640)
!14664 = distinct !{!14664, !14636, !14665}
!14665 = !DILocation(line: 77, column: 5, scope: !14625)
!14666 = !DILocation(line: 78, column: 4, scope: !14625)
!14667 = !DILocation(line: 78, column: 7, scope: !14625)
!14668 = !DILocation(line: 79, column: 10, scope: !14625)
!14669 = !DILocation(line: 79, column: 3, scope: !14625)
!14670 = distinct !DISubprogram(name: "mbs_align_pad", scope: !14329, file: !14329, line: 88, type: !14671, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1586, retainedNodes: !152)
!14671 = !DISubroutineType(types: !14672)
!14672 = !{!143, !143, !146, !149}
!14673 = !DILocalVariable(name: "dest", arg: 1, scope: !14670, file: !14329, line: 88, type: !143)
!14674 = !DILocation(line: 88, column: 22, scope: !14670)
!14675 = !DILocalVariable(name: "dest_end", arg: 2, scope: !14670, file: !14329, line: 88, type: !146)
!14676 = !DILocation(line: 88, column: 40, scope: !14670)
!14677 = !DILocalVariable(name: "n_spaces", arg: 3, scope: !14670, file: !14329, line: 88, type: !149)
!14678 = !DILocation(line: 88, column: 57, scope: !14670)
!14679 = !DILocation(line: 92, column: 3, scope: !14670)
!14680 = !DILocation(line: 92, column: 18, scope: !14670)
!14681 = !DILocation(line: 92, column: 21, scope: !14670)
!14682 = !DILocation(line: 92, column: 25, scope: !14670)
!14683 = !DILocation(line: 92, column: 32, scope: !14670)
!14684 = !DILocation(line: 92, column: 30, scope: !14670)
!14685 = !DILocation(line: 0, scope: !14670)
!14686 = !DILocation(line: 93, column: 10, scope: !14670)
!14687 = !DILocation(line: 93, column: 13, scope: !14670)
!14688 = distinct !{!14688, !14679, !14689}
!14689 = !DILocation(line: 93, column: 15, scope: !14670)
!14690 = !DILocation(line: 94, column: 4, scope: !14670)
!14691 = !DILocation(line: 94, column: 9, scope: !14670)
!14692 = !DILocation(line: 95, column: 10, scope: !14670)
!14693 = !DILocation(line: 95, column: 3, scope: !14670)
!14694 = distinct !DISubprogram(name: "ambsalign", scope: !14329, file: !14329, line: 248, type: !14695, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1586, retainedNodes: !152)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{!143, !146, !148, !695, !27}
!14697 = !DILocalVariable(name: "src", arg: 1, scope: !14694, file: !14329, line: 248, type: !146)
!14698 = !DILocation(line: 248, column: 24, scope: !14694)
!14699 = !DILocalVariable(name: "width", arg: 2, scope: !14694, file: !14329, line: 248, type: !148)
!14700 = !DILocation(line: 248, column: 37, scope: !14694)
!14701 = !DILocalVariable(name: "align", arg: 3, scope: !14694, file: !14329, line: 248, type: !695)
!14702 = !DILocation(line: 248, column: 56, scope: !14694)
!14703 = !DILocalVariable(name: "flags", arg: 4, scope: !14694, file: !14329, line: 248, type: !27)
!14704 = !DILocation(line: 248, column: 67, scope: !14694)
!14705 = !DILocalVariable(name: "orig_width", scope: !14694, file: !14329, line: 250, type: !149)
!14706 = !DILocation(line: 250, column: 10, scope: !14694)
!14707 = !DILocation(line: 250, column: 24, scope: !14694)
!14708 = !DILocation(line: 250, column: 23, scope: !14694)
!14709 = !DILocalVariable(name: "size", scope: !14694, file: !14329, line: 251, type: !149)
!14710 = !DILocation(line: 251, column: 10, scope: !14694)
!14711 = !DILocation(line: 251, column: 18, scope: !14694)
!14712 = !DILocation(line: 251, column: 17, scope: !14694)
!14713 = !DILocalVariable(name: "req", scope: !14694, file: !14329, line: 252, type: !149)
!14714 = !DILocation(line: 252, column: 10, scope: !14694)
!14715 = !DILocation(line: 252, column: 16, scope: !14694)
!14716 = !DILocalVariable(name: "buf", scope: !14694, file: !14329, line: 253, type: !143)
!14717 = !DILocation(line: 253, column: 9, scope: !14694)
!14718 = !DILocation(line: 255, column: 3, scope: !14694)
!14719 = !DILocation(line: 255, column: 10, scope: !14694)
!14720 = !DILocation(line: 255, column: 17, scope: !14694)
!14721 = !DILocation(line: 255, column: 14, scope: !14694)
!14722 = !DILocalVariable(name: "nbuf", scope: !14723, file: !14329, line: 257, type: !143)
!14723 = distinct !DILexicalBlock(scope: !14694, file: !14329, line: 256, column: 5)
!14724 = !DILocation(line: 257, column: 13, scope: !14723)
!14725 = !DILocation(line: 258, column: 14, scope: !14723)
!14726 = !DILocation(line: 258, column: 18, scope: !14723)
!14727 = !DILocation(line: 258, column: 12, scope: !14723)
!14728 = !DILocation(line: 259, column: 23, scope: !14723)
!14729 = !DILocation(line: 259, column: 28, scope: !14723)
!14730 = !DILocation(line: 259, column: 14, scope: !14723)
!14731 = !DILocation(line: 259, column: 12, scope: !14723)
!14732 = !DILocation(line: 260, column: 11, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14723, file: !14329, line: 260, column: 11)
!14734 = !DILocation(line: 260, column: 16, scope: !14733)
!14735 = !DILocation(line: 260, column: 11, scope: !14723)
!14736 = !DILocation(line: 262, column: 17, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14733, file: !14329, line: 261, column: 9)
!14738 = !DILocation(line: 262, column: 11, scope: !14737)
!14739 = !DILocation(line: 263, column: 15, scope: !14737)
!14740 = !DILocation(line: 264, column: 11, scope: !14737)
!14741 = !DILocation(line: 266, column: 13, scope: !14723)
!14742 = !DILocation(line: 266, column: 11, scope: !14723)
!14743 = !DILocation(line: 267, column: 16, scope: !14723)
!14744 = !DILocation(line: 267, column: 8, scope: !14723)
!14745 = !DILocation(line: 267, column: 14, scope: !14723)
!14746 = !DILocation(line: 268, column: 23, scope: !14723)
!14747 = !DILocation(line: 268, column: 28, scope: !14723)
!14748 = !DILocation(line: 268, column: 33, scope: !14723)
!14749 = !DILocation(line: 268, column: 39, scope: !14723)
!14750 = !DILocation(line: 268, column: 46, scope: !14723)
!14751 = !DILocation(line: 268, column: 53, scope: !14723)
!14752 = !DILocation(line: 268, column: 13, scope: !14723)
!14753 = !DILocation(line: 268, column: 11, scope: !14723)
!14754 = !DILocation(line: 269, column: 11, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14723, file: !14329, line: 269, column: 11)
!14756 = !DILocation(line: 269, column: 15, scope: !14755)
!14757 = !DILocation(line: 269, column: 11, scope: !14723)
!14758 = !DILocation(line: 271, column: 17, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14755, file: !14329, line: 270, column: 9)
!14760 = !DILocation(line: 271, column: 11, scope: !14759)
!14761 = !DILocation(line: 272, column: 15, scope: !14759)
!14762 = !DILocation(line: 273, column: 11, scope: !14759)
!14763 = distinct !{!14763, !14718, !14764}
!14764 = !DILocation(line: 275, column: 5, scope: !14694)
!14765 = !DILocation(line: 277, column: 10, scope: !14694)
!14766 = !DILocation(line: 277, column: 3, scope: !14694)
!14767 = distinct !DISubprogram(name: "gnu_mbswidth", scope: !14768, file: !14768, line: 47, type: !14769, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1592, retainedNodes: !152)
!14768 = !DIFile(filename: "lib/mbswidth.c", directory: "/home/mohamad/clone/coreutils")
!14769 = !DISubroutineType(types: !14770)
!14770 = !{!27, !146, !27}
!14771 = !DILocalVariable(name: "string", arg: 1, scope: !14767, file: !14768, line: 47, type: !146)
!14772 = !DILocation(line: 47, column: 23, scope: !14767)
!14773 = !DILocalVariable(name: "flags", arg: 2, scope: !14767, file: !14768, line: 47, type: !27)
!14774 = !DILocation(line: 47, column: 35, scope: !14767)
!14775 = !DILocation(line: 49, column: 21, scope: !14767)
!14776 = !DILocation(line: 49, column: 37, scope: !14767)
!14777 = !DILocation(line: 49, column: 29, scope: !14767)
!14778 = !DILocation(line: 49, column: 46, scope: !14767)
!14779 = !DILocation(line: 49, column: 10, scope: !14767)
!14780 = !DILocation(line: 49, column: 3, scope: !14767)
!14781 = distinct !DISubprogram(name: "mbsnwidth", scope: !14768, file: !14768, line: 57, type: !14782, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1592, retainedNodes: !152)
!14782 = !DISubroutineType(types: !14783)
!14783 = !{!27, !146, !149, !27}
!14784 = !DILocalVariable(name: "string", arg: 1, scope: !14781, file: !14768, line: 57, type: !146)
!14785 = !DILocation(line: 57, column: 24, scope: !14781)
!14786 = !DILocalVariable(name: "nbytes", arg: 2, scope: !14781, file: !14768, line: 57, type: !149)
!14787 = !DILocation(line: 57, column: 39, scope: !14781)
!14788 = !DILocalVariable(name: "flags", arg: 3, scope: !14781, file: !14768, line: 57, type: !27)
!14789 = !DILocation(line: 57, column: 51, scope: !14781)
!14790 = !DILocalVariable(name: "p", scope: !14781, file: !14768, line: 59, type: !146)
!14791 = !DILocation(line: 59, column: 15, scope: !14781)
!14792 = !DILocation(line: 59, column: 19, scope: !14781)
!14793 = !DILocalVariable(name: "plimit", scope: !14781, file: !14768, line: 60, type: !146)
!14794 = !DILocation(line: 60, column: 15, scope: !14781)
!14795 = !DILocation(line: 60, column: 24, scope: !14781)
!14796 = !DILocation(line: 60, column: 28, scope: !14781)
!14797 = !DILocation(line: 60, column: 26, scope: !14781)
!14798 = !DILocalVariable(name: "width", scope: !14781, file: !14768, line: 61, type: !27)
!14799 = !DILocation(line: 61, column: 7, scope: !14781)
!14800 = !DILocation(line: 63, column: 9, scope: !14781)
!14801 = !DILocation(line: 64, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14781, file: !14768, line: 64, column: 7)
!14803 = !DILocation(line: 64, column: 18, scope: !14802)
!14804 = !DILocation(line: 64, column: 7, scope: !14781)
!14805 = !DILocation(line: 66, column: 7, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14802, file: !14768, line: 65, column: 5)
!14807 = !DILocation(line: 66, column: 14, scope: !14806)
!14808 = !DILocation(line: 66, column: 18, scope: !14806)
!14809 = !DILocation(line: 66, column: 16, scope: !14806)
!14810 = !DILocation(line: 67, column: 18, scope: !14806)
!14811 = !DILocation(line: 67, column: 17, scope: !14806)
!14812 = !DILocation(line: 67, column: 9, scope: !14806)
!14813 = !DILocation(line: 90, column: 16, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14806, file: !14768, line: 68, column: 11)
!14815 = !DILocation(line: 91, column: 20, scope: !14814)
!14816 = !DILocation(line: 92, column: 15, scope: !14814)
!14817 = !DILocalVariable(name: "mbstate", scope: !14818, file: !14768, line: 96, type: !1595)
!14818 = distinct !DILexicalBlock(scope: !14814, file: !14768, line: 95, column: 15)
!14819 = !DILocation(line: 96, column: 27, scope: !14818)
!14820 = !DILocation(line: 97, column: 17, scope: !14818)
!14821 = !DILocation(line: 98, column: 17, scope: !14818)
!14822 = !DILocalVariable(name: "wc", scope: !14823, file: !14768, line: 100, type: !751)
!14823 = distinct !DILexicalBlock(scope: !14818, file: !14768, line: 99, column: 19)
!14824 = !DILocation(line: 100, column: 29, scope: !14823)
!14825 = !DILocalVariable(name: "bytes", scope: !14823, file: !14768, line: 101, type: !149)
!14826 = !DILocation(line: 101, column: 28, scope: !14823)
!14827 = !DILocalVariable(name: "w", scope: !14823, file: !14768, line: 102, type: !27)
!14828 = !DILocation(line: 102, column: 25, scope: !14823)
!14829 = !DILocation(line: 104, column: 43, scope: !14823)
!14830 = !DILocation(line: 104, column: 46, scope: !14823)
!14831 = !DILocation(line: 104, column: 55, scope: !14823)
!14832 = !DILocation(line: 104, column: 53, scope: !14823)
!14833 = !DILocation(line: 104, column: 29, scope: !14823)
!14834 = !DILocation(line: 104, column: 27, scope: !14823)
!14835 = !DILocation(line: 106, column: 25, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14823, file: !14768, line: 106, column: 25)
!14837 = !DILocation(line: 106, column: 31, scope: !14836)
!14838 = !DILocation(line: 106, column: 25, scope: !14823)
!14839 = !DILocation(line: 109, column: 31, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14841, file: !14768, line: 109, column: 29)
!14841 = distinct !DILexicalBlock(scope: !14836, file: !14768, line: 108, column: 23)
!14842 = !DILocation(line: 109, column: 37, scope: !14840)
!14843 = !DILocation(line: 109, column: 29, scope: !14841)
!14844 = !DILocation(line: 111, column: 30, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14840, file: !14768, line: 110, column: 27)
!14846 = !DILocation(line: 112, column: 34, scope: !14845)
!14847 = !DILocation(line: 113, column: 29, scope: !14845)
!14848 = !DILocation(line: 116, column: 27, scope: !14840)
!14849 = !DILocation(line: 119, column: 25, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14823, file: !14768, line: 119, column: 25)
!14851 = !DILocation(line: 119, column: 31, scope: !14850)
!14852 = !DILocation(line: 119, column: 25, scope: !14823)
!14853 = !DILocation(line: 122, column: 31, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14855, file: !14768, line: 122, column: 29)
!14855 = distinct !DILexicalBlock(scope: !14850, file: !14768, line: 121, column: 23)
!14856 = !DILocation(line: 122, column: 37, scope: !14854)
!14857 = !DILocation(line: 122, column: 29, scope: !14855)
!14858 = !DILocation(line: 124, column: 33, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14854, file: !14768, line: 123, column: 27)
!14860 = !DILocation(line: 124, column: 31, scope: !14859)
!14861 = !DILocation(line: 125, column: 34, scope: !14859)
!14862 = !DILocation(line: 126, column: 29, scope: !14859)
!14863 = !DILocation(line: 129, column: 27, scope: !14854)
!14864 = !DILocation(line: 132, column: 25, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14823, file: !14768, line: 132, column: 25)
!14866 = !DILocation(line: 132, column: 31, scope: !14865)
!14867 = !DILocation(line: 132, column: 25, scope: !14823)
!14868 = !DILocation(line: 134, column: 29, scope: !14865)
!14869 = !DILocation(line: 134, column: 23, scope: !14865)
!14870 = !DILocation(line: 136, column: 34, scope: !14823)
!14871 = !DILocation(line: 136, column: 25, scope: !14823)
!14872 = !DILocation(line: 136, column: 23, scope: !14823)
!14873 = !DILocation(line: 137, column: 25, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14823, file: !14768, line: 137, column: 25)
!14875 = !DILocation(line: 137, column: 27, scope: !14874)
!14876 = !DILocation(line: 137, column: 25, scope: !14823)
!14877 = !DILocation(line: 140, column: 29, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14879, file: !14768, line: 140, column: 29)
!14879 = distinct !DILexicalBlock(scope: !14874, file: !14768, line: 139, column: 23)
!14880 = !DILocation(line: 140, column: 43, scope: !14878)
!14881 = !DILocation(line: 140, column: 41, scope: !14878)
!14882 = !DILocation(line: 140, column: 31, scope: !14878)
!14883 = !DILocation(line: 140, column: 29, scope: !14879)
!14884 = !DILocation(line: 141, column: 27, scope: !14878)
!14885 = !DILocation(line: 142, column: 34, scope: !14879)
!14886 = !DILocation(line: 142, column: 31, scope: !14879)
!14887 = !DILocation(line: 143, column: 23, scope: !14879)
!14888 = !DILocation(line: 146, column: 29, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14874, file: !14768, line: 146, column: 27)
!14890 = !DILocation(line: 146, column: 35, scope: !14889)
!14891 = !DILocation(line: 146, column: 27, scope: !14874)
!14892 = !DILocation(line: 148, column: 42, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14894, file: !14768, line: 148, column: 31)
!14894 = distinct !DILexicalBlock(scope: !14889, file: !14768, line: 147, column: 25)
!14895 = !DILocation(line: 148, column: 32, scope: !14893)
!14896 = !DILocation(line: 148, column: 31, scope: !14894)
!14897 = !DILocation(line: 150, column: 35, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !14768, line: 150, column: 35)
!14899 = distinct !DILexicalBlock(scope: !14893, file: !14768, line: 149, column: 29)
!14900 = !DILocation(line: 150, column: 41, scope: !14898)
!14901 = !DILocation(line: 150, column: 35, scope: !14899)
!14902 = !DILocation(line: 151, column: 33, scope: !14898)
!14903 = !DILocation(line: 152, column: 36, scope: !14899)
!14904 = !DILocation(line: 153, column: 29, scope: !14899)
!14905 = !DILocation(line: 154, column: 25, scope: !14894)
!14906 = !DILocation(line: 156, column: 25, scope: !14889)
!14907 = !DILocation(line: 158, column: 26, scope: !14823)
!14908 = !DILocation(line: 158, column: 23, scope: !14823)
!14909 = !DILocation(line: 159, column: 19, scope: !14823)
!14910 = !DILocation(line: 160, column: 26, scope: !14818)
!14911 = !DILocation(line: 160, column: 24, scope: !14818)
!14912 = distinct !{!14912, !14821, !14913}
!14913 = !DILocation(line: 160, column: 44, scope: !14818)
!14914 = !DILocation(line: 162, column: 15, scope: !14814)
!14915 = distinct !{!14915, !14805, !14916}
!14916 = !DILocation(line: 163, column: 11, scope: !14806)
!14917 = !DILocation(line: 164, column: 14, scope: !14806)
!14918 = !DILocation(line: 164, column: 7, scope: !14806)
!14919 = !DILocation(line: 167, column: 3, scope: !14781)
!14920 = !DILocation(line: 167, column: 10, scope: !14781)
!14921 = !DILocation(line: 167, column: 14, scope: !14781)
!14922 = !DILocation(line: 167, column: 12, scope: !14781)
!14923 = !DILocalVariable(name: "c", scope: !14924, file: !14768, line: 169, type: !725)
!14924 = distinct !DILexicalBlock(scope: !14781, file: !14768, line: 168, column: 5)
!14925 = !DILocation(line: 169, column: 21, scope: !14924)
!14926 = !DILocation(line: 169, column: 43, scope: !14924)
!14927 = !DILocation(line: 169, column: 41, scope: !14924)
!14928 = !DILocation(line: 171, column: 11, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14924, file: !14768, line: 171, column: 11)
!14930 = !DILocation(line: 171, column: 11, scope: !14924)
!14931 = !DILocation(line: 173, column: 15, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14933, file: !14768, line: 173, column: 15)
!14933 = distinct !DILexicalBlock(scope: !14929, file: !14768, line: 172, column: 9)
!14934 = !DILocation(line: 173, column: 21, scope: !14932)
!14935 = !DILocation(line: 173, column: 15, scope: !14933)
!14936 = !DILocation(line: 174, column: 13, scope: !14932)
!14937 = !DILocation(line: 175, column: 16, scope: !14933)
!14938 = !DILocation(line: 176, column: 9, scope: !14933)
!14939 = !DILocation(line: 177, column: 18, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14929, file: !14768, line: 177, column: 16)
!14941 = !DILocation(line: 177, column: 24, scope: !14940)
!14942 = !DILocation(line: 177, column: 16, scope: !14929)
!14943 = !DILocation(line: 179, column: 16, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14945, file: !14768, line: 179, column: 15)
!14945 = distinct !DILexicalBlock(scope: !14940, file: !14768, line: 178, column: 9)
!14946 = !DILocation(line: 179, column: 15, scope: !14945)
!14947 = !DILocation(line: 181, column: 19, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14949, file: !14768, line: 181, column: 19)
!14949 = distinct !DILexicalBlock(scope: !14944, file: !14768, line: 180, column: 13)
!14950 = !DILocation(line: 181, column: 25, scope: !14948)
!14951 = !DILocation(line: 181, column: 19, scope: !14949)
!14952 = !DILocation(line: 182, column: 17, scope: !14948)
!14953 = !DILocation(line: 183, column: 20, scope: !14949)
!14954 = !DILocation(line: 184, column: 13, scope: !14949)
!14955 = !DILocation(line: 185, column: 9, scope: !14945)
!14956 = !DILocation(line: 187, column: 9, scope: !14940)
!14957 = distinct !{!14957, !14919, !14958}
!14958 = !DILocation(line: 188, column: 5, scope: !14781)
!14959 = !DILocation(line: 189, column: 10, scope: !14781)
!14960 = !DILocation(line: 189, column: 3, scope: !14781)
!14961 = !DILabel(scope: !14781, name: "overflow", file: !14768, line: 191)
!14962 = !DILocation(line: 191, column: 2, scope: !14781)
!14963 = !DILocation(line: 192, column: 3, scope: !14781)
!14964 = !DILocation(line: 193, column: 1, scope: !14781)
!14965 = distinct !DISubprogram(name: "mpsort", scope: !14966, file: !14966, line: 153, type: !14967, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1605, retainedNodes: !152)
!14966 = !DIFile(filename: "lib/mpsort.c", directory: "/home/mohamad/clone/coreutils")
!14967 = !DISubroutineType(types: !14968)
!14968 = !{null, !181, !149, !14969}
!14969 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !14966, line: 28, baseType: !14970)
!14970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14971, size: 64)
!14971 = !DISubroutineType(types: !14972)
!14972 = !{!27, !175, !175}
!14973 = !DILocalVariable(name: "base", arg: 1, scope: !14965, file: !14966, line: 153, type: !181)
!14974 = !DILocation(line: 153, column: 22, scope: !14965)
!14975 = !DILocalVariable(name: "n", arg: 2, scope: !14965, file: !14966, line: 153, type: !149)
!14976 = !DILocation(line: 153, column: 35, scope: !14965)
!14977 = !DILocalVariable(name: "cmp", arg: 3, scope: !14965, file: !14966, line: 153, type: !14969)
!14978 = !DILocation(line: 153, column: 58, scope: !14965)
!14979 = !DILocation(line: 155, column: 20, scope: !14965)
!14980 = !DILocation(line: 155, column: 26, scope: !14965)
!14981 = !DILocation(line: 155, column: 29, scope: !14965)
!14982 = !DILocation(line: 155, column: 36, scope: !14965)
!14983 = !DILocation(line: 155, column: 34, scope: !14965)
!14984 = !DILocation(line: 155, column: 39, scope: !14965)
!14985 = !DILocation(line: 155, column: 3, scope: !14965)
!14986 = !DILocation(line: 156, column: 1, scope: !14965)
!14987 = distinct !DISubprogram(name: "mpsort_with_tmp", scope: !14966, file: !14966, line: 86, type: !14988, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1605, retainedNodes: !152)
!14988 = !DISubroutineType(types: !14989)
!14989 = !{null, !14990, !149, !14990, !14969}
!14990 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !181)
!14991 = !DILocalVariable(name: "base", arg: 1, scope: !14987, file: !14966, line: 86, type: !14990)
!14992 = !DILocation(line: 86, column: 40, scope: !14987)
!14993 = !DILocalVariable(name: "n", arg: 2, scope: !14987, file: !14966, line: 86, type: !149)
!14994 = !DILocation(line: 86, column: 53, scope: !14987)
!14995 = !DILocalVariable(name: "tmp", arg: 3, scope: !14987, file: !14966, line: 87, type: !14990)
!14996 = !DILocation(line: 87, column: 40, scope: !14987)
!14997 = !DILocalVariable(name: "cmp", arg: 4, scope: !14987, file: !14966, line: 88, type: !14969)
!14998 = !DILocation(line: 88, column: 38, scope: !14987)
!14999 = !DILocation(line: 90, column: 7, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14987, file: !14966, line: 90, column: 7)
!15001 = !DILocation(line: 90, column: 9, scope: !15000)
!15002 = !DILocation(line: 90, column: 7, scope: !14987)
!15003 = !DILocation(line: 92, column: 11, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15005, file: !14966, line: 92, column: 11)
!15005 = distinct !DILexicalBlock(scope: !15000, file: !14966, line: 91, column: 5)
!15006 = !DILocation(line: 92, column: 13, scope: !15004)
!15007 = !DILocation(line: 92, column: 11, scope: !15005)
!15008 = !DILocalVariable(name: "p0", scope: !15009, file: !14966, line: 94, type: !175)
!15009 = distinct !DILexicalBlock(scope: !15004, file: !14966, line: 93, column: 9)
!15010 = !DILocation(line: 94, column: 23, scope: !15009)
!15011 = !DILocation(line: 94, column: 28, scope: !15009)
!15012 = !DILocalVariable(name: "p1", scope: !15009, file: !14966, line: 95, type: !175)
!15013 = !DILocation(line: 95, column: 23, scope: !15009)
!15014 = !DILocation(line: 95, column: 28, scope: !15009)
!15015 = !DILocation(line: 96, column: 18, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15009, file: !14966, line: 96, column: 15)
!15017 = !DILocation(line: 96, column: 23, scope: !15016)
!15018 = !DILocation(line: 96, column: 27, scope: !15016)
!15019 = !DILocation(line: 96, column: 31, scope: !15016)
!15020 = !DILocation(line: 96, column: 15, scope: !15009)
!15021 = !DILocation(line: 98, column: 25, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15016, file: !14966, line: 97, column: 13)
!15023 = !DILocation(line: 98, column: 15, scope: !15022)
!15024 = !DILocation(line: 98, column: 23, scope: !15022)
!15025 = !DILocation(line: 99, column: 25, scope: !15022)
!15026 = !DILocation(line: 99, column: 15, scope: !15022)
!15027 = !DILocation(line: 99, column: 23, scope: !15022)
!15028 = !DILocation(line: 100, column: 13, scope: !15022)
!15029 = !DILocation(line: 101, column: 9, scope: !15009)
!15030 = !DILocation(line: 102, column: 5, scope: !15005)
!15031 = !DILocalVariable(name: "n1", scope: !15032, file: !14966, line: 105, type: !149)
!15032 = distinct !DILexicalBlock(scope: !15000, file: !14966, line: 104, column: 5)
!15033 = !DILocation(line: 105, column: 14, scope: !15032)
!15034 = !DILocation(line: 105, column: 19, scope: !15032)
!15035 = !DILocation(line: 105, column: 21, scope: !15032)
!15036 = !DILocalVariable(name: "n2", scope: !15032, file: !14966, line: 106, type: !149)
!15037 = !DILocation(line: 106, column: 14, scope: !15032)
!15038 = !DILocation(line: 106, column: 19, scope: !15032)
!15039 = !DILocation(line: 106, column: 23, scope: !15032)
!15040 = !DILocation(line: 106, column: 21, scope: !15032)
!15041 = !DILocalVariable(name: "i", scope: !15032, file: !14966, line: 107, type: !149)
!15042 = !DILocation(line: 107, column: 14, scope: !15032)
!15043 = !DILocalVariable(name: "t", scope: !15032, file: !14966, line: 108, type: !149)
!15044 = !DILocation(line: 108, column: 14, scope: !15032)
!15045 = !DILocalVariable(name: "tlim", scope: !15032, file: !14966, line: 109, type: !149)
!15046 = !DILocation(line: 109, column: 14, scope: !15032)
!15047 = !DILocation(line: 109, column: 21, scope: !15032)
!15048 = !DILocalVariable(name: "b", scope: !15032, file: !14966, line: 110, type: !149)
!15049 = !DILocation(line: 110, column: 14, scope: !15032)
!15050 = !DILocation(line: 110, column: 18, scope: !15032)
!15051 = !DILocalVariable(name: "blim", scope: !15032, file: !14966, line: 111, type: !149)
!15052 = !DILocation(line: 111, column: 14, scope: !15032)
!15053 = !DILocation(line: 111, column: 21, scope: !15032)
!15054 = !DILocalVariable(name: "bb", scope: !15032, file: !14966, line: 112, type: !175)
!15055 = !DILocation(line: 112, column: 19, scope: !15032)
!15056 = !DILocalVariable(name: "tt", scope: !15032, file: !14966, line: 113, type: !175)
!15057 = !DILocation(line: 113, column: 19, scope: !15032)
!15058 = !DILocation(line: 115, column: 24, scope: !15032)
!15059 = !DILocation(line: 115, column: 31, scope: !15032)
!15060 = !DILocation(line: 115, column: 29, scope: !15032)
!15061 = !DILocation(line: 115, column: 35, scope: !15032)
!15062 = !DILocation(line: 115, column: 39, scope: !15032)
!15063 = !DILocation(line: 115, column: 44, scope: !15032)
!15064 = !DILocation(line: 115, column: 7, scope: !15032)
!15065 = !DILocation(line: 117, column: 11, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15032, file: !14966, line: 117, column: 11)
!15067 = !DILocation(line: 117, column: 14, scope: !15066)
!15068 = !DILocation(line: 117, column: 11, scope: !15032)
!15069 = !DILocation(line: 118, column: 18, scope: !15066)
!15070 = !DILocation(line: 118, column: 9, scope: !15066)
!15071 = !DILocation(line: 118, column: 16, scope: !15066)
!15072 = !DILocation(line: 120, column: 26, scope: !15066)
!15073 = !DILocation(line: 120, column: 32, scope: !15066)
!15074 = !DILocation(line: 120, column: 36, scope: !15066)
!15075 = !DILocation(line: 120, column: 41, scope: !15066)
!15076 = !DILocation(line: 120, column: 9, scope: !15066)
!15077 = !DILocation(line: 122, column: 12, scope: !15032)
!15078 = !DILocation(line: 122, column: 16, scope: !15032)
!15079 = !DILocation(line: 122, column: 10, scope: !15032)
!15080 = !DILocation(line: 123, column: 12, scope: !15032)
!15081 = !DILocation(line: 123, column: 17, scope: !15032)
!15082 = !DILocation(line: 123, column: 10, scope: !15032)
!15083 = !DILocation(line: 125, column: 14, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15032, file: !14966, line: 125, column: 7)
!15085 = !DILocation(line: 125, column: 12, scope: !15084)
!15086 = !DILocation(line: 126, column: 13, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15088, file: !14966, line: 126, column: 13)
!15088 = distinct !DILexicalBlock(scope: !15084, file: !14966, line: 125, column: 7)
!15089 = !DILocation(line: 126, column: 18, scope: !15087)
!15090 = !DILocation(line: 126, column: 22, scope: !15087)
!15091 = !DILocation(line: 126, column: 26, scope: !15087)
!15092 = !DILocation(line: 126, column: 13, scope: !15088)
!15093 = !DILocation(line: 128, column: 25, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15087, file: !14966, line: 127, column: 11)
!15095 = !DILocation(line: 128, column: 13, scope: !15094)
!15096 = !DILocation(line: 128, column: 19, scope: !15094)
!15097 = !DILocation(line: 128, column: 23, scope: !15094)
!15098 = !DILocation(line: 129, column: 14, scope: !15094)
!15099 = !DILocation(line: 130, column: 17, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15094, file: !14966, line: 130, column: 17)
!15101 = !DILocation(line: 130, column: 22, scope: !15100)
!15102 = !DILocation(line: 130, column: 19, scope: !15100)
!15103 = !DILocation(line: 130, column: 17, scope: !15094)
!15104 = !DILocation(line: 131, column: 15, scope: !15100)
!15105 = !DILocation(line: 132, column: 18, scope: !15094)
!15106 = !DILocation(line: 132, column: 22, scope: !15094)
!15107 = !DILocation(line: 132, column: 16, scope: !15094)
!15108 = !DILocation(line: 133, column: 11, scope: !15094)
!15109 = !DILocation(line: 136, column: 25, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15087, file: !14966, line: 135, column: 11)
!15111 = !DILocation(line: 136, column: 13, scope: !15110)
!15112 = !DILocation(line: 136, column: 19, scope: !15110)
!15113 = !DILocation(line: 136, column: 23, scope: !15110)
!15114 = !DILocation(line: 137, column: 14, scope: !15110)
!15115 = !DILocation(line: 138, column: 17, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15110, file: !14966, line: 138, column: 17)
!15117 = !DILocation(line: 138, column: 22, scope: !15116)
!15118 = !DILocation(line: 138, column: 19, scope: !15116)
!15119 = !DILocation(line: 138, column: 17, scope: !15110)
!15120 = !DILocation(line: 140, column: 25, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15116, file: !14966, line: 139, column: 15)
!15122 = !DILocation(line: 140, column: 32, scope: !15121)
!15123 = !DILocation(line: 140, column: 30, scope: !15121)
!15124 = !DILocation(line: 140, column: 17, scope: !15121)
!15125 = !DILocation(line: 140, column: 35, scope: !15121)
!15126 = !DILocation(line: 140, column: 41, scope: !15121)
!15127 = !DILocation(line: 140, column: 39, scope: !15121)
!15128 = !DILocation(line: 140, column: 45, scope: !15121)
!15129 = !DILocation(line: 140, column: 52, scope: !15121)
!15130 = !DILocation(line: 140, column: 50, scope: !15121)
!15131 = !DILocation(line: 140, column: 55, scope: !15121)
!15132 = !DILocation(line: 141, column: 17, scope: !15121)
!15133 = !DILocation(line: 143, column: 18, scope: !15110)
!15134 = !DILocation(line: 143, column: 23, scope: !15110)
!15135 = !DILocation(line: 143, column: 16, scope: !15110)
!15136 = !DILocation(line: 125, column: 7, scope: !15088)
!15137 = distinct !{!15137, !15138, !15139}
!15138 = !DILocation(line: 125, column: 7, scope: !15084)
!15139 = !DILocation(line: 144, column: 11, scope: !15084)
!15140 = !DILocation(line: 146, column: 1, scope: !14987)
!15141 = distinct !DISubprogram(name: "mpsort_into_tmp", scope: !14966, file: !14966, line: 37, type: !14988, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1605, retainedNodes: !152)
!15142 = !DILocalVariable(name: "base", arg: 1, scope: !15141, file: !14966, line: 37, type: !14990)
!15143 = !DILocation(line: 37, column: 40, scope: !15141)
!15144 = !DILocalVariable(name: "n", arg: 2, scope: !15141, file: !14966, line: 37, type: !149)
!15145 = !DILocation(line: 37, column: 53, scope: !15141)
!15146 = !DILocalVariable(name: "tmp", arg: 3, scope: !15141, file: !14966, line: 38, type: !14990)
!15147 = !DILocation(line: 38, column: 40, scope: !15141)
!15148 = !DILocalVariable(name: "cmp", arg: 4, scope: !15141, file: !14966, line: 39, type: !14969)
!15149 = !DILocation(line: 39, column: 38, scope: !15141)
!15150 = !DILocalVariable(name: "n1", scope: !15141, file: !14966, line: 41, type: !149)
!15151 = !DILocation(line: 41, column: 10, scope: !15141)
!15152 = !DILocation(line: 41, column: 15, scope: !15141)
!15153 = !DILocation(line: 41, column: 17, scope: !15141)
!15154 = !DILocalVariable(name: "n2", scope: !15141, file: !14966, line: 42, type: !149)
!15155 = !DILocation(line: 42, column: 10, scope: !15141)
!15156 = !DILocation(line: 42, column: 15, scope: !15141)
!15157 = !DILocation(line: 42, column: 19, scope: !15141)
!15158 = !DILocation(line: 42, column: 17, scope: !15141)
!15159 = !DILocalVariable(name: "a", scope: !15141, file: !14966, line: 43, type: !149)
!15160 = !DILocation(line: 43, column: 10, scope: !15141)
!15161 = !DILocalVariable(name: "alim", scope: !15141, file: !14966, line: 44, type: !149)
!15162 = !DILocation(line: 44, column: 10, scope: !15141)
!15163 = !DILocation(line: 44, column: 17, scope: !15141)
!15164 = !DILocalVariable(name: "b", scope: !15141, file: !14966, line: 45, type: !149)
!15165 = !DILocation(line: 45, column: 10, scope: !15141)
!15166 = !DILocation(line: 45, column: 14, scope: !15141)
!15167 = !DILocalVariable(name: "blim", scope: !15141, file: !14966, line: 46, type: !149)
!15168 = !DILocation(line: 46, column: 10, scope: !15141)
!15169 = !DILocation(line: 46, column: 17, scope: !15141)
!15170 = !DILocalVariable(name: "ba", scope: !15141, file: !14966, line: 47, type: !175)
!15171 = !DILocation(line: 47, column: 15, scope: !15141)
!15172 = !DILocalVariable(name: "bb", scope: !15141, file: !14966, line: 48, type: !175)
!15173 = !DILocation(line: 48, column: 15, scope: !15141)
!15174 = !DILocation(line: 50, column: 20, scope: !15141)
!15175 = !DILocation(line: 50, column: 27, scope: !15141)
!15176 = !DILocation(line: 50, column: 25, scope: !15141)
!15177 = !DILocation(line: 50, column: 31, scope: !15141)
!15178 = !DILocation(line: 50, column: 35, scope: !15141)
!15179 = !DILocation(line: 50, column: 40, scope: !15141)
!15180 = !DILocation(line: 50, column: 3, scope: !15141)
!15181 = !DILocation(line: 51, column: 20, scope: !15141)
!15182 = !DILocation(line: 51, column: 26, scope: !15141)
!15183 = !DILocation(line: 51, column: 30, scope: !15141)
!15184 = !DILocation(line: 51, column: 35, scope: !15141)
!15185 = !DILocation(line: 51, column: 3, scope: !15141)
!15186 = !DILocation(line: 53, column: 8, scope: !15141)
!15187 = !DILocation(line: 53, column: 13, scope: !15141)
!15188 = !DILocation(line: 53, column: 6, scope: !15141)
!15189 = !DILocation(line: 54, column: 8, scope: !15141)
!15190 = !DILocation(line: 54, column: 13, scope: !15141)
!15191 = !DILocation(line: 54, column: 6, scope: !15141)
!15192 = !DILocation(line: 56, column: 3, scope: !15141)
!15193 = !DILocation(line: 57, column: 9, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15195, file: !14966, line: 57, column: 9)
!15195 = distinct !DILexicalBlock(scope: !15196, file: !14966, line: 56, column: 3)
!15196 = distinct !DILexicalBlock(scope: !15141, file: !14966, line: 56, column: 3)
!15197 = !DILocation(line: 57, column: 14, scope: !15194)
!15198 = !DILocation(line: 57, column: 18, scope: !15194)
!15199 = !DILocation(line: 57, column: 22, scope: !15194)
!15200 = !DILocation(line: 57, column: 9, scope: !15195)
!15201 = !DILocation(line: 59, column: 18, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15194, file: !14966, line: 58, column: 7)
!15203 = !DILocation(line: 59, column: 13, scope: !15202)
!15204 = !DILocation(line: 59, column: 16, scope: !15202)
!15205 = !DILocation(line: 60, column: 10, scope: !15202)
!15206 = !DILocation(line: 61, column: 13, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15202, file: !14966, line: 61, column: 13)
!15208 = !DILocation(line: 61, column: 18, scope: !15207)
!15209 = !DILocation(line: 61, column: 15, scope: !15207)
!15210 = !DILocation(line: 61, column: 13, scope: !15202)
!15211 = !DILocation(line: 63, column: 17, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15207, file: !14966, line: 62, column: 11)
!15213 = !DILocation(line: 63, column: 15, scope: !15212)
!15214 = !DILocation(line: 64, column: 20, scope: !15212)
!15215 = !DILocation(line: 64, column: 18, scope: !15212)
!15216 = !DILocation(line: 65, column: 13, scope: !15212)
!15217 = !DILocation(line: 67, column: 14, scope: !15202)
!15218 = !DILocation(line: 67, column: 19, scope: !15202)
!15219 = !DILocation(line: 67, column: 12, scope: !15202)
!15220 = !DILocation(line: 68, column: 7, scope: !15202)
!15221 = !DILocation(line: 71, column: 18, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15194, file: !14966, line: 70, column: 7)
!15223 = !DILocation(line: 71, column: 13, scope: !15222)
!15224 = !DILocation(line: 71, column: 16, scope: !15222)
!15225 = !DILocation(line: 72, column: 10, scope: !15222)
!15226 = !DILocation(line: 73, column: 13, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15222, file: !14966, line: 73, column: 13)
!15228 = !DILocation(line: 73, column: 18, scope: !15227)
!15229 = !DILocation(line: 73, column: 15, scope: !15227)
!15230 = !DILocation(line: 73, column: 13, scope: !15222)
!15231 = !DILocation(line: 74, column: 11, scope: !15227)
!15232 = !DILocation(line: 75, column: 14, scope: !15222)
!15233 = !DILocation(line: 75, column: 19, scope: !15222)
!15234 = !DILocation(line: 75, column: 12, scope: !15222)
!15235 = !DILocation(line: 56, column: 3, scope: !15195)
!15236 = distinct !{!15236, !15237, !15238}
!15237 = !DILocation(line: 56, column: 3, scope: !15196)
!15238 = !DILocation(line: 76, column: 7, scope: !15196)
!15239 = !DILocation(line: 78, column: 11, scope: !15141)
!15240 = !DILocation(line: 78, column: 3, scope: !15141)
!15241 = !DILocation(line: 78, column: 16, scope: !15141)
!15242 = !DILocation(line: 78, column: 23, scope: !15141)
!15243 = !DILocation(line: 78, column: 21, scope: !15141)
!15244 = !DILocation(line: 78, column: 27, scope: !15141)
!15245 = !DILocation(line: 78, column: 34, scope: !15141)
!15246 = !DILocation(line: 78, column: 32, scope: !15141)
!15247 = !DILocation(line: 78, column: 37, scope: !15141)
!15248 = !DILocation(line: 79, column: 1, scope: !15141)
!15249 = distinct !DISubprogram(name: "nstrftime", scope: !15250, file: !15250, line: 431, type: !15251, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1608, retainedNodes: !152)
!15250 = !DIFile(filename: "lib/nstrftime.c", directory: "/home/mohamad/clone/coreutils")
!15251 = !DISubroutineType(types: !15252)
!15252 = !{!149, !143, !149, !146, !15253, !15268, !27}
!15253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15254, size: 64)
!15254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15255)
!15255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !163, line: 133, size: 448, elements: !15256)
!15256 = !{!15257, !15258, !15259, !15260, !15261, !15262, !15263, !15264, !15265, !15266, !15267}
!15257 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !15255, file: !163, line: 135, baseType: !27, size: 32)
!15258 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !15255, file: !163, line: 136, baseType: !27, size: 32, offset: 32)
!15259 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !15255, file: !163, line: 137, baseType: !27, size: 32, offset: 64)
!15260 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !15255, file: !163, line: 138, baseType: !27, size: 32, offset: 96)
!15261 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !15255, file: !163, line: 139, baseType: !27, size: 32, offset: 128)
!15262 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !15255, file: !163, line: 140, baseType: !27, size: 32, offset: 160)
!15263 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !15255, file: !163, line: 141, baseType: !27, size: 32, offset: 192)
!15264 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !15255, file: !163, line: 142, baseType: !27, size: 32, offset: 224)
!15265 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !15255, file: !163, line: 143, baseType: !27, size: 32, offset: 256)
!15266 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !15255, file: !163, line: 146, baseType: !166, size: 64, offset: 320)
!15267 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !15255, file: !163, line: 147, baseType: !146, size: 64, offset: 384)
!15268 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !255, line: 764, baseType: !15269)
!15269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15270, size: 64)
!15270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1743, line: 21, size: 128, elements: !15271)
!15271 = !{!15272, !15273, !15274}
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15270, file: !1743, line: 25, baseType: !15269, size: 64)
!15273 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !15270, file: !1743, line: 36, baseType: !144, size: 8, offset: 64)
!15274 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !15270, file: !1743, line: 48, baseType: !464, offset: 72)
!15275 = !DILocalVariable(name: "s", arg: 1, scope: !15249, file: !15250, line: 431, type: !143)
!15276 = !DILocation(line: 431, column: 32, scope: !15249)
!15277 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15249, file: !15250, line: 431, type: !149)
!15278 = !DILocation(line: 431, column: 35, scope: !15249)
!15279 = !DILocalVariable(name: "format", arg: 3, scope: !15249, file: !15250, line: 432, type: !146)
!15280 = !DILocation(line: 432, column: 28, scope: !15249)
!15281 = !DILocalVariable(name: "tp", arg: 4, scope: !15249, file: !15250, line: 433, type: !15253)
!15282 = !DILocation(line: 433, column: 31, scope: !15249)
!15283 = !DILocalVariable(name: "tz", arg: 5, scope: !15249, file: !15250, line: 433, type: !15268)
!15284 = !DILocation(line: 433, column: 34, scope: !15249)
!15285 = !DILocalVariable(name: "ns", arg: 6, scope: !15249, file: !15250, line: 433, type: !27)
!15286 = !DILocalVariable(name: "tzset_called", scope: !15249, file: !15250, line: 435, type: !141)
!15287 = !DILocation(line: 435, column: 8, scope: !15249)
!15288 = !DILocation(line: 436, column: 31, scope: !15249)
!15289 = !DILocation(line: 436, column: 34, scope: !15249)
!15290 = !DILocation(line: 436, column: 57, scope: !15249)
!15291 = !DILocation(line: 436, column: 65, scope: !15249)
!15292 = !DILocation(line: 437, column: 52, scope: !15249)
!15293 = !DILocation(line: 436, column: 10, scope: !15249)
!15294 = !DILocation(line: 436, column: 3, scope: !15249)
!15295 = distinct !DISubprogram(name: "__strftime_internal", scope: !15250, file: !15250, line: 447, type: !15296, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1608, retainedNodes: !152)
!15296 = !DISubroutineType(types: !15297)
!15297 = !{!149, !143, !149, !146, !15253, !141, !27, !27, !4954, !15268, !27}
!15298 = !DILocalVariable(name: "s", arg: 1, scope: !15295, file: !15250, line: 447, type: !143)
!15299 = !DILocation(line: 447, column: 40, scope: !15295)
!15300 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15295, file: !15250, line: 447, type: !149)
!15301 = !DILocation(line: 447, column: 43, scope: !15295)
!15302 = !DILocalVariable(name: "format", arg: 3, scope: !15295, file: !15250, line: 448, type: !146)
!15303 = !DILocation(line: 448, column: 36, scope: !15295)
!15304 = !DILocalVariable(name: "tp", arg: 4, scope: !15295, file: !15250, line: 449, type: !15253)
!15305 = !DILocation(line: 449, column: 39, scope: !15295)
!15306 = !DILocalVariable(name: "upcase", arg: 5, scope: !15295, file: !15250, line: 449, type: !141)
!15307 = !DILocation(line: 449, column: 48, scope: !15295)
!15308 = !DILocalVariable(name: "yr_spec", arg: 6, scope: !15295, file: !15250, line: 450, type: !27)
!15309 = !DILocation(line: 450, column: 26, scope: !15295)
!15310 = !DILocalVariable(name: "width", arg: 7, scope: !15295, file: !15250, line: 450, type: !27)
!15311 = !DILocation(line: 450, column: 39, scope: !15295)
!15312 = !DILocalVariable(name: "tzset_called", arg: 8, scope: !15295, file: !15250, line: 450, type: !4954)
!15313 = !DILocation(line: 450, column: 52, scope: !15295)
!15314 = !DILocalVariable(name: "tz", arg: 9, scope: !15295, file: !15250, line: 451, type: !15268)
!15315 = !DILocation(line: 451, column: 22, scope: !15295)
!15316 = !DILocalVariable(name: "ns", arg: 10, scope: !15295, file: !15250, line: 451, type: !27)
!15317 = !DILocalVariable(name: "hour12", scope: !15295, file: !15250, line: 460, type: !27)
!15318 = !DILocation(line: 460, column: 7, scope: !15295)
!15319 = !DILocation(line: 460, column: 16, scope: !15295)
!15320 = !DILocation(line: 460, column: 20, scope: !15295)
!15321 = !DILocalVariable(name: "zone", scope: !15295, file: !15250, line: 498, type: !146)
!15322 = !DILocation(line: 498, column: 15, scope: !15295)
!15323 = !DILocalVariable(name: "i", scope: !15295, file: !15250, line: 499, type: !149)
!15324 = !DILocation(line: 499, column: 10, scope: !15295)
!15325 = !DILocalVariable(name: "p", scope: !15295, file: !15250, line: 500, type: !143)
!15326 = !DILocation(line: 500, column: 21, scope: !15295)
!15327 = !DILocation(line: 500, column: 25, scope: !15295)
!15328 = !DILocalVariable(name: "f", scope: !15295, file: !15250, line: 501, type: !146)
!15329 = !DILocation(line: 501, column: 17, scope: !15295)
!15330 = !DILocation(line: 515, column: 8, scope: !15295)
!15331 = !DILocation(line: 523, column: 25, scope: !15295)
!15332 = !DILocation(line: 523, column: 29, scope: !15295)
!15333 = !DILocation(line: 523, column: 8, scope: !15295)
!15334 = !DILocation(line: 553, column: 9, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15295, file: !15250, line: 553, column: 7)
!15336 = !DILocation(line: 553, column: 7, scope: !15295)
!15337 = !DILocation(line: 554, column: 10, scope: !15335)
!15338 = !DILocation(line: 554, column: 5, scope: !15335)
!15339 = !DILocation(line: 556, column: 7, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15295, file: !15250, line: 556, column: 7)
!15341 = !DILocation(line: 556, column: 14, scope: !15340)
!15342 = !DILocation(line: 556, column: 7, scope: !15295)
!15343 = !DILocation(line: 557, column: 12, scope: !15340)
!15344 = !DILocation(line: 557, column: 5, scope: !15340)
!15345 = !DILocation(line: 559, column: 9, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15340, file: !15250, line: 559, column: 9)
!15347 = !DILocation(line: 559, column: 16, scope: !15346)
!15348 = !DILocation(line: 559, column: 9, scope: !15340)
!15349 = !DILocation(line: 560, column: 14, scope: !15346)
!15350 = !DILocation(line: 560, column: 7, scope: !15346)
!15351 = !DILocation(line: 562, column: 12, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15295, file: !15250, line: 562, column: 3)
!15353 = !DILocation(line: 562, column: 10, scope: !15352)
!15354 = !DILocation(line: 562, column: 8, scope: !15352)
!15355 = !DILocation(line: 562, column: 21, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15352, file: !15250, line: 562, column: 3)
!15357 = !DILocation(line: 562, column: 20, scope: !15356)
!15358 = !DILocation(line: 562, column: 23, scope: !15356)
!15359 = !DILocation(line: 562, column: 3, scope: !15352)
!15360 = !DILocalVariable(name: "pad", scope: !15361, file: !15250, line: 564, type: !27)
!15361 = distinct !DILexicalBlock(scope: !15356, file: !15250, line: 563, column: 5)
!15362 = !DILocation(line: 564, column: 11, scope: !15361)
!15363 = !DILocalVariable(name: "modifier", scope: !15361, file: !15250, line: 565, type: !27)
!15364 = !DILocation(line: 565, column: 11, scope: !15361)
!15365 = !DILocalVariable(name: "digits", scope: !15361, file: !15250, line: 566, type: !27)
!15366 = !DILocation(line: 566, column: 11, scope: !15361)
!15367 = !DILocalVariable(name: "number_value", scope: !15361, file: !15250, line: 567, type: !27)
!15368 = !DILocation(line: 567, column: 11, scope: !15361)
!15369 = !DILocalVariable(name: "u_number_value", scope: !15361, file: !15250, line: 568, type: !6)
!15370 = !DILocation(line: 568, column: 20, scope: !15361)
!15371 = !DILocalVariable(name: "negative_number", scope: !15361, file: !15250, line: 569, type: !141)
!15372 = !DILocation(line: 569, column: 12, scope: !15361)
!15373 = !DILocalVariable(name: "always_output_a_sign", scope: !15361, file: !15250, line: 570, type: !141)
!15374 = !DILocation(line: 570, column: 12, scope: !15361)
!15375 = !DILocalVariable(name: "tz_colon_mask", scope: !15361, file: !15250, line: 571, type: !27)
!15376 = !DILocation(line: 571, column: 11, scope: !15361)
!15377 = !DILocalVariable(name: "subfmt", scope: !15361, file: !15250, line: 572, type: !146)
!15378 = !DILocation(line: 572, column: 21, scope: !15361)
!15379 = !DILocalVariable(name: "sign_char", scope: !15361, file: !15250, line: 573, type: !144)
!15380 = !DILocation(line: 573, column: 14, scope: !15361)
!15381 = !DILocalVariable(name: "bufp", scope: !15361, file: !15250, line: 574, type: !143)
!15382 = !DILocation(line: 574, column: 15, scope: !15361)
!15383 = !DILocalVariable(name: "buf", scope: !15361, file: !15250, line: 575, type: !829)
!15384 = !DILocation(line: 575, column: 14, scope: !15361)
!15385 = !DILocalVariable(name: "to_lowcase", scope: !15361, file: !15250, line: 580, type: !141)
!15386 = !DILocation(line: 580, column: 12, scope: !15361)
!15387 = !DILocalVariable(name: "to_uppcase", scope: !15361, file: !15250, line: 581, type: !141)
!15388 = !DILocation(line: 581, column: 12, scope: !15361)
!15389 = !DILocation(line: 581, column: 25, scope: !15361)
!15390 = !DILocalVariable(name: "colons", scope: !15361, file: !15250, line: 582, type: !149)
!15391 = !DILocation(line: 582, column: 14, scope: !15361)
!15392 = !DILocalVariable(name: "change_case", scope: !15361, file: !15250, line: 583, type: !141)
!15393 = !DILocation(line: 583, column: 12, scope: !15361)
!15394 = !DILocalVariable(name: "format_char", scope: !15361, file: !15250, line: 584, type: !27)
!15395 = !DILocation(line: 584, column: 11, scope: !15361)
!15396 = !DILocalVariable(name: "subwidth", scope: !15361, file: !15250, line: 585, type: !27)
!15397 = !DILocation(line: 585, column: 11, scope: !15361)
!15398 = !DILocation(line: 667, column: 12, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15361, file: !15250, line: 667, column: 11)
!15400 = !DILocation(line: 667, column: 11, scope: !15399)
!15401 = !DILocation(line: 667, column: 14, scope: !15399)
!15402 = !DILocation(line: 667, column: 11, scope: !15361)
!15403 = !DILocation(line: 669, column: 11, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15399, file: !15250, line: 668, column: 9)
!15405 = !DILocalVariable(name: "_n", scope: !15406, file: !15250, line: 669, type: !149)
!15406 = distinct !DILexicalBlock(scope: !15404, file: !15250, line: 669, column: 11)
!15407 = !DILocation(line: 669, column: 11, scope: !15406)
!15408 = !DILocalVariable(name: "_w", scope: !15406, file: !15250, line: 669, type: !149)
!15409 = !DILocalVariable(name: "_incr", scope: !15406, file: !15250, line: 669, type: !149)
!15410 = !DILocation(line: 669, column: 11, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15406, file: !15250, line: 669, column: 11)
!15412 = !DILocation(line: 669, column: 11, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15406, file: !15250, line: 669, column: 11)
!15414 = !DILocation(line: 669, column: 11, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15416, file: !15250, line: 669, column: 11)
!15416 = distinct !DILexicalBlock(scope: !15413, file: !15250, line: 669, column: 11)
!15417 = !DILocation(line: 669, column: 11, scope: !15416)
!15418 = !DILocalVariable(name: "_delta", scope: !15419, file: !15250, line: 669, type: !149)
!15419 = distinct !DILexicalBlock(scope: !15415, file: !15250, line: 669, column: 11)
!15420 = !DILocation(line: 669, column: 11, scope: !15419)
!15421 = !DILocation(line: 669, column: 11, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15419, file: !15250, line: 669, column: 11)
!15423 = !DILocation(line: 670, column: 11, scope: !15404)
!15424 = !DILocation(line: 676, column: 7, scope: !15361)
!15425 = !DILocation(line: 678, column: 20, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15361, file: !15250, line: 677, column: 9)
!15427 = !DILocation(line: 678, column: 19, scope: !15426)
!15428 = !DILocation(line: 678, column: 11, scope: !15426)
!15429 = !DILocation(line: 685, column: 22, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15426, file: !15250, line: 679, column: 13)
!15431 = !DILocation(line: 685, column: 21, scope: !15430)
!15432 = !DILocation(line: 685, column: 19, scope: !15430)
!15433 = !DILocation(line: 686, column: 15, scope: !15430)
!15434 = distinct !{!15434, !15424, !15435}
!15435 = !DILocation(line: 700, column: 9, scope: !15361)
!15436 = !DILocation(line: 690, column: 26, scope: !15430)
!15437 = !DILocation(line: 691, column: 15, scope: !15430)
!15438 = !DILocation(line: 693, column: 27, scope: !15430)
!15439 = !DILocation(line: 694, column: 15, scope: !15430)
!15440 = !DILocation(line: 697, column: 15, scope: !15430)
!15441 = !DILocation(line: 699, column: 11, scope: !15426)
!15442 = !DILocation(line: 702, column: 11, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15361, file: !15250, line: 702, column: 11)
!15444 = !DILocation(line: 702, column: 11, scope: !15361)
!15445 = !DILocation(line: 704, column: 17, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15443, file: !15250, line: 703, column: 9)
!15447 = !DILocation(line: 705, column: 11, scope: !15446)
!15448 = !DILocation(line: 707, column: 19, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15450, file: !15250, line: 707, column: 19)
!15450 = distinct !DILexicalBlock(scope: !15446, file: !15250, line: 706, column: 13)
!15451 = !DILocation(line: 707, column: 25, scope: !15449)
!15452 = !DILocation(line: 708, column: 19, scope: !15449)
!15453 = !DILocation(line: 708, column: 23, scope: !15449)
!15454 = !DILocation(line: 708, column: 29, scope: !15449)
!15455 = !DILocation(line: 708, column: 45, scope: !15449)
!15456 = !DILocation(line: 708, column: 49, scope: !15449)
!15457 = !DILocation(line: 708, column: 48, scope: !15449)
!15458 = !DILocation(line: 708, column: 51, scope: !15449)
!15459 = !DILocation(line: 708, column: 61, scope: !15449)
!15460 = !DILocation(line: 707, column: 19, scope: !15450)
!15461 = !DILocation(line: 710, column: 23, scope: !15449)
!15462 = !DILocation(line: 710, column: 17, scope: !15449)
!15463 = !DILocation(line: 713, column: 25, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15449, file: !15250, line: 712, column: 17)
!15465 = !DILocation(line: 714, column: 29, scope: !15464)
!15466 = !DILocation(line: 714, column: 28, scope: !15464)
!15467 = !DILocation(line: 714, column: 31, scope: !15464)
!15468 = !DILocation(line: 714, column: 25, scope: !15464)
!15469 = !DILocation(line: 716, column: 15, scope: !15450)
!15470 = !DILocation(line: 717, column: 13, scope: !15450)
!15471 = !DILocation(line: 718, column: 18, scope: !15446)
!15472 = distinct !{!15472, !15447, !15473}
!15473 = !DILocation(line: 718, column: 30, scope: !15446)
!15474 = !DILocation(line: 719, column: 9, scope: !15446)
!15475 = !DILocation(line: 722, column: 16, scope: !15361)
!15476 = !DILocation(line: 722, column: 15, scope: !15361)
!15477 = !DILocation(line: 722, column: 7, scope: !15361)
!15478 = !DILocation(line: 726, column: 24, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15361, file: !15250, line: 723, column: 9)
!15480 = !DILocation(line: 726, column: 22, scope: !15479)
!15481 = !DILocation(line: 726, column: 20, scope: !15479)
!15482 = !DILocation(line: 727, column: 11, scope: !15479)
!15483 = !DILocation(line: 730, column: 20, scope: !15479)
!15484 = !DILocation(line: 731, column: 11, scope: !15479)
!15485 = !DILocation(line: 735, column: 22, scope: !15361)
!15486 = !DILocation(line: 735, column: 21, scope: !15361)
!15487 = !DILocation(line: 735, column: 19, scope: !15361)
!15488 = !DILocation(line: 736, column: 15, scope: !15361)
!15489 = !DILocation(line: 736, column: 7, scope: !15361)
!15490 = !DILocation(line: 782, column: 15, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 782, column: 15)
!15492 = distinct !DILexicalBlock(scope: !15361, file: !15250, line: 737, column: 9)
!15493 = !DILocation(line: 782, column: 24, scope: !15491)
!15494 = !DILocation(line: 782, column: 15, scope: !15492)
!15495 = !DILocation(line: 783, column: 13, scope: !15491)
!15496 = !DILocation(line: 784, column: 11, scope: !15492)
!15497 = !DILocalVariable(name: "_n", scope: !15498, file: !15250, line: 784, type: !149)
!15498 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 784, column: 11)
!15499 = !DILocation(line: 784, column: 11, scope: !15498)
!15500 = !DILocalVariable(name: "_w", scope: !15498, file: !15250, line: 784, type: !149)
!15501 = !DILocalVariable(name: "_incr", scope: !15498, file: !15250, line: 784, type: !149)
!15502 = !DILocation(line: 784, column: 11, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15498, file: !15250, line: 784, column: 11)
!15504 = !DILocation(line: 784, column: 11, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15498, file: !15250, line: 784, column: 11)
!15506 = !DILocation(line: 784, column: 11, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15508, file: !15250, line: 784, column: 11)
!15508 = distinct !DILexicalBlock(scope: !15505, file: !15250, line: 784, column: 11)
!15509 = !DILocation(line: 784, column: 11, scope: !15508)
!15510 = !DILocalVariable(name: "_delta", scope: !15511, file: !15250, line: 784, type: !149)
!15511 = distinct !DILexicalBlock(scope: !15507, file: !15250, line: 784, column: 11)
!15512 = !DILocation(line: 784, column: 11, scope: !15511)
!15513 = !DILocation(line: 784, column: 11, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15511, file: !15250, line: 784, column: 11)
!15515 = !DILocation(line: 785, column: 11, scope: !15492)
!15516 = !DILocation(line: 788, column: 15, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 788, column: 15)
!15518 = !DILocation(line: 788, column: 24, scope: !15517)
!15519 = !DILocation(line: 788, column: 15, scope: !15492)
!15520 = !DILocation(line: 789, column: 13, scope: !15517)
!15521 = !DILocation(line: 790, column: 15, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 790, column: 15)
!15523 = !DILocation(line: 790, column: 15, scope: !15492)
!15524 = !DILocation(line: 792, column: 26, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15522, file: !15250, line: 791, column: 13)
!15526 = !DILocation(line: 793, column: 26, scope: !15525)
!15527 = !DILocation(line: 794, column: 13, scope: !15525)
!15528 = !DILocation(line: 799, column: 11, scope: !15492)
!15529 = !DILocation(line: 803, column: 15, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 803, column: 15)
!15531 = !DILocation(line: 803, column: 24, scope: !15530)
!15532 = !DILocation(line: 803, column: 15, scope: !15492)
!15533 = !DILocation(line: 804, column: 13, scope: !15530)
!15534 = !DILocation(line: 805, column: 15, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 805, column: 15)
!15536 = !DILocation(line: 805, column: 15, scope: !15492)
!15537 = !DILocation(line: 807, column: 26, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15535, file: !15250, line: 806, column: 13)
!15539 = !DILocation(line: 808, column: 26, scope: !15538)
!15540 = !DILocation(line: 809, column: 13, scope: !15538)
!15541 = !DILocation(line: 814, column: 11, scope: !15492)
!15542 = !DILocation(line: 819, column: 15, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 819, column: 15)
!15544 = !DILocation(line: 819, column: 15, scope: !15492)
!15545 = !DILocation(line: 821, column: 26, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15543, file: !15250, line: 820, column: 13)
!15547 = !DILocation(line: 822, column: 26, scope: !15546)
!15548 = !DILocation(line: 823, column: 13, scope: !15546)
!15549 = !DILocation(line: 824, column: 15, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 824, column: 15)
!15551 = !DILocation(line: 824, column: 24, scope: !15550)
!15552 = !DILocation(line: 824, column: 15, scope: !15492)
!15553 = !DILocation(line: 825, column: 13, scope: !15550)
!15554 = !DILocation(line: 833, column: 11, scope: !15492)
!15555 = !DILocation(line: 837, column: 15, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 837, column: 15)
!15557 = !DILocation(line: 837, column: 24, scope: !15556)
!15558 = !DILocation(line: 837, column: 15, scope: !15492)
!15559 = !DILocation(line: 838, column: 13, scope: !15556)
!15560 = !DILocation(line: 839, column: 15, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 839, column: 15)
!15562 = !DILocation(line: 839, column: 15, scope: !15492)
!15563 = !DILocation(line: 841, column: 26, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15561, file: !15250, line: 840, column: 13)
!15565 = !DILocation(line: 842, column: 26, scope: !15564)
!15566 = !DILocation(line: 843, column: 13, scope: !15564)
!15567 = !DILocation(line: 851, column: 11, scope: !15492)
!15568 = !DILocation(line: 855, column: 15, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 855, column: 15)
!15570 = !DILocation(line: 855, column: 24, scope: !15569)
!15571 = !DILocation(line: 855, column: 15, scope: !15492)
!15572 = !DILocation(line: 856, column: 13, scope: !15569)
!15573 = !DILocation(line: 865, column: 11, scope: !15492)
!15574 = !DILabel(scope: !15492, name: "subformat", file: !15250, line: 868)
!15575 = !DILocation(line: 868, column: 9, scope: !15492)
!15576 = !DILocation(line: 869, column: 20, scope: !15492)
!15577 = !DILocation(line: 869, column: 11, scope: !15492)
!15578 = !DILabel(scope: !15492, name: "subformat_width", file: !15250, line: 870)
!15579 = !DILocation(line: 870, column: 9, scope: !15492)
!15580 = !DILocalVariable(name: "len", scope: !15581, file: !15250, line: 872, type: !149)
!15581 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 871, column: 11)
!15582 = !DILocation(line: 872, column: 20, scope: !15581)
!15583 = !DILocation(line: 873, column: 47, scope: !15581)
!15584 = !DILocation(line: 873, column: 55, scope: !15581)
!15585 = !DILocation(line: 873, column: 59, scope: !15581)
!15586 = !DILocation(line: 874, column: 47, scope: !15581)
!15587 = !DILocation(line: 874, column: 52, scope: !15581)
!15588 = !DILocation(line: 874, column: 62, scope: !15581)
!15589 = !DILocation(line: 875, column: 47, scope: !15581)
!15590 = !DILocation(line: 872, column: 26, scope: !15581)
!15591 = !DILocation(line: 876, column: 13, scope: !15581)
!15592 = !DILocalVariable(name: "_n", scope: !15593, file: !15250, line: 876, type: !149)
!15593 = distinct !DILexicalBlock(scope: !15581, file: !15250, line: 876, column: 13)
!15594 = !DILocation(line: 876, column: 13, scope: !15593)
!15595 = !DILocalVariable(name: "_w", scope: !15593, file: !15250, line: 876, type: !149)
!15596 = !DILocalVariable(name: "_incr", scope: !15593, file: !15250, line: 876, type: !149)
!15597 = !DILocation(line: 876, column: 13, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15593, file: !15250, line: 876, column: 13)
!15599 = !DILocation(line: 876, column: 13, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15593, file: !15250, line: 876, column: 13)
!15601 = !DILocation(line: 876, column: 13, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !15250, line: 876, column: 13)
!15603 = distinct !DILexicalBlock(scope: !15600, file: !15250, line: 876, column: 13)
!15604 = !DILocation(line: 876, column: 13, scope: !15603)
!15605 = !DILocalVariable(name: "_delta", scope: !15606, file: !15250, line: 876, type: !149)
!15606 = distinct !DILexicalBlock(scope: !15602, file: !15250, line: 876, column: 13)
!15607 = !DILocation(line: 876, column: 13, scope: !15606)
!15608 = !DILocation(line: 876, column: 13, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15606, file: !15250, line: 876, column: 13)
!15610 = !DILocation(line: 882, column: 11, scope: !15492)
!15611 = !DILabel(scope: !15492, name: "underlying_strftime", file: !15250, line: 885)
!15612 = !DILocation(line: 885, column: 9, scope: !15492)
!15613 = !DILocalVariable(name: "ufmt", scope: !15614, file: !15250, line: 889, type: !442)
!15614 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 886, column: 11)
!15615 = !DILocation(line: 889, column: 18, scope: !15614)
!15616 = !DILocalVariable(name: "u", scope: !15614, file: !15250, line: 890, type: !143)
!15617 = !DILocation(line: 890, column: 19, scope: !15614)
!15618 = !DILocation(line: 890, column: 23, scope: !15614)
!15619 = !DILocalVariable(name: "ubuf", scope: !15614, file: !15250, line: 891, type: !1611)
!15620 = !DILocation(line: 891, column: 18, scope: !15614)
!15621 = !DILocalVariable(name: "len", scope: !15614, file: !15250, line: 892, type: !149)
!15622 = !DILocation(line: 892, column: 20, scope: !15614)
!15623 = !DILocation(line: 903, column: 15, scope: !15614)
!15624 = !DILocation(line: 903, column: 18, scope: !15614)
!15625 = !DILocation(line: 904, column: 15, scope: !15614)
!15626 = !DILocation(line: 904, column: 18, scope: !15614)
!15627 = !DILocation(line: 905, column: 17, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15614, file: !15250, line: 905, column: 17)
!15629 = !DILocation(line: 905, column: 26, scope: !15628)
!15630 = !DILocation(line: 905, column: 17, scope: !15614)
!15631 = !DILocation(line: 906, column: 22, scope: !15628)
!15632 = !DILocation(line: 906, column: 17, scope: !15628)
!15633 = !DILocation(line: 906, column: 20, scope: !15628)
!15634 = !DILocation(line: 906, column: 15, scope: !15628)
!15635 = !DILocation(line: 907, column: 20, scope: !15614)
!15636 = !DILocation(line: 907, column: 15, scope: !15614)
!15637 = !DILocation(line: 907, column: 18, scope: !15614)
!15638 = !DILocation(line: 908, column: 14, scope: !15614)
!15639 = !DILocation(line: 908, column: 16, scope: !15614)
!15640 = !DILocation(line: 909, column: 29, scope: !15614)
!15641 = !DILocation(line: 909, column: 48, scope: !15614)
!15642 = !DILocation(line: 909, column: 54, scope: !15614)
!15643 = !DILocation(line: 909, column: 19, scope: !15614)
!15644 = !DILocation(line: 909, column: 17, scope: !15614)
!15645 = !DILocation(line: 910, column: 17, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15614, file: !15250, line: 910, column: 17)
!15647 = !DILocation(line: 910, column: 21, scope: !15646)
!15648 = !DILocation(line: 910, column: 17, scope: !15614)
!15649 = !DILocation(line: 911, column: 15, scope: !15646)
!15650 = !DILocalVariable(name: "_n", scope: !15651, file: !15250, line: 911, type: !149)
!15651 = distinct !DILexicalBlock(scope: !15646, file: !15250, line: 911, column: 15)
!15652 = !DILocation(line: 911, column: 15, scope: !15651)
!15653 = !DILocalVariable(name: "_w", scope: !15651, file: !15250, line: 911, type: !149)
!15654 = !DILocalVariable(name: "_incr", scope: !15651, file: !15250, line: 911, type: !149)
!15655 = !DILocation(line: 911, column: 15, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15651, file: !15250, line: 911, column: 15)
!15657 = !DILocation(line: 911, column: 15, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15651, file: !15250, line: 911, column: 15)
!15659 = !DILocation(line: 911, column: 15, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15661, file: !15250, line: 911, column: 15)
!15661 = distinct !DILexicalBlock(scope: !15658, file: !15250, line: 911, column: 15)
!15662 = !DILocation(line: 911, column: 15, scope: !15661)
!15663 = !DILocalVariable(name: "_delta", scope: !15664, file: !15250, line: 911, type: !149)
!15664 = distinct !DILexicalBlock(scope: !15660, file: !15250, line: 911, column: 15)
!15665 = !DILocation(line: 911, column: 15, scope: !15664)
!15666 = !DILocation(line: 911, column: 15, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15664, file: !15250, line: 911, column: 15)
!15668 = !DILocation(line: 911, column: 15, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15661, file: !15250, line: 911, column: 15)
!15670 = !DILocation(line: 911, column: 15, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15669, file: !15250, line: 911, column: 15)
!15672 = !DILocation(line: 913, column: 11, scope: !15492)
!15673 = !DILocation(line: 917, column: 15, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 917, column: 15)
!15675 = !DILocation(line: 917, column: 24, scope: !15674)
!15676 = !DILocation(line: 917, column: 15, scope: !15492)
!15677 = !DILocation(line: 933, column: 15, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15674, file: !15250, line: 918, column: 13)
!15679 = !DILocalVariable(name: "century", scope: !15680, file: !15250, line: 938, type: !27)
!15680 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 937, column: 11)
!15681 = !DILocation(line: 938, column: 17, scope: !15680)
!15682 = !DILocation(line: 938, column: 27, scope: !15680)
!15683 = !DILocation(line: 938, column: 31, scope: !15680)
!15684 = !DILocation(line: 938, column: 39, scope: !15680)
!15685 = !DILocation(line: 938, column: 45, scope: !15680)
!15686 = !DILocation(line: 939, column: 24, scope: !15680)
!15687 = !DILocation(line: 939, column: 28, scope: !15680)
!15688 = !DILocation(line: 939, column: 36, scope: !15680)
!15689 = !DILocation(line: 939, column: 42, scope: !15680)
!15690 = !DILocation(line: 939, column: 46, scope: !15680)
!15691 = !DILocation(line: 939, column: 53, scope: !15680)
!15692 = !DILocation(line: 939, column: 51, scope: !15680)
!15693 = !DILocation(line: 0, scope: !15680)
!15694 = !DILocation(line: 939, column: 21, scope: !15680)
!15695 = !DILocation(line: 940, column: 13, scope: !15680)
!15696 = !DILocation(line: 940, column: 13, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15680, file: !15250, line: 940, column: 13)
!15698 = !DILocation(line: 941, column: 11, scope: !15680)
!15699 = !DILocation(line: 944, column: 15, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 944, column: 15)
!15701 = !DILocation(line: 944, column: 24, scope: !15700)
!15702 = !DILocation(line: 944, column: 15, scope: !15492)
!15703 = !DILocation(line: 945, column: 13, scope: !15700)
!15704 = !DILocation(line: 954, column: 11, scope: !15492)
!15705 = !DILocation(line: 957, column: 15, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 957, column: 15)
!15707 = !DILocation(line: 957, column: 24, scope: !15706)
!15708 = !DILocation(line: 957, column: 15, scope: !15492)
!15709 = !DILocation(line: 958, column: 13, scope: !15706)
!15710 = !DILocation(line: 959, column: 18, scope: !15492)
!15711 = !DILocation(line: 960, column: 11, scope: !15492)
!15712 = !DILocation(line: 963, column: 15, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 963, column: 15)
!15714 = !DILocation(line: 963, column: 24, scope: !15713)
!15715 = !DILocation(line: 963, column: 15, scope: !15492)
!15716 = !DILocation(line: 964, column: 13, scope: !15713)
!15717 = !DILocation(line: 966, column: 11, scope: !15492)
!15718 = !DILocation(line: 966, column: 11, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 966, column: 11)
!15720 = !DILocation(line: 969, column: 15, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 969, column: 15)
!15722 = !DILocation(line: 969, column: 24, scope: !15721)
!15723 = !DILocation(line: 969, column: 15, scope: !15492)
!15724 = !DILocation(line: 970, column: 13, scope: !15721)
!15725 = !DILocation(line: 972, column: 11, scope: !15492)
!15726 = !DILocation(line: 972, column: 11, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 972, column: 11)
!15728 = !DILabel(scope: !15492, name: "do_tz_offset", file: !15250, line: 977)
!15729 = !DILocation(line: 977, column: 9, scope: !15492)
!15730 = !DILocation(line: 978, column: 32, scope: !15492)
!15731 = !DILocation(line: 979, column: 11, scope: !15492)
!15732 = !DILabel(scope: !15492, name: "do_yearish", file: !15250, line: 981)
!15733 = !DILocation(line: 981, column: 9, scope: !15492)
!15734 = !DILocation(line: 982, column: 15, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 982, column: 15)
!15736 = !DILocation(line: 982, column: 19, scope: !15735)
!15737 = !DILocation(line: 982, column: 15, scope: !15492)
!15738 = !DILocation(line: 983, column: 19, scope: !15735)
!15739 = !DILocation(line: 983, column: 17, scope: !15735)
!15740 = !DILocation(line: 983, column: 13, scope: !15735)
!15741 = !DILocation(line: 985, column: 16, scope: !15492)
!15742 = !DILocation(line: 985, column: 20, scope: !15492)
!15743 = !DILocation(line: 986, column: 16, scope: !15492)
!15744 = !DILocation(line: 986, column: 21, scope: !15492)
!15745 = !DILocation(line: 986, column: 28, scope: !15492)
!15746 = !DILocation(line: 986, column: 48, scope: !15492)
!15747 = !DILocation(line: 986, column: 46, scope: !15492)
!15748 = !DILocation(line: 987, column: 20, scope: !15492)
!15749 = !DILocation(line: 987, column: 23, scope: !15492)
!15750 = !DILocation(line: 987, column: 32, scope: !15492)
!15751 = !DILocation(line: 987, column: 30, scope: !15492)
!15752 = !DILocation(line: 0, scope: !15492)
!15753 = !DILocation(line: 985, column: 13, scope: !15492)
!15754 = !DILocation(line: 988, column: 11, scope: !15492)
!15755 = !DILabel(scope: !15492, name: "do_number_spacepad", file: !15250, line: 990)
!15756 = !DILocation(line: 990, column: 9, scope: !15492)
!15757 = !DILocation(line: 991, column: 15, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 991, column: 15)
!15759 = !DILocation(line: 991, column: 19, scope: !15758)
!15760 = !DILocation(line: 991, column: 15, scope: !15492)
!15761 = !DILocation(line: 992, column: 17, scope: !15758)
!15762 = !DILocation(line: 992, column: 13, scope: !15758)
!15763 = !DILocation(line: 991, column: 22, scope: !15758)
!15764 = !DILabel(scope: !15492, name: "do_number", file: !15250, line: 994)
!15765 = !DILocation(line: 994, column: 9, scope: !15492)
!15766 = !DILocation(line: 996, column: 29, scope: !15492)
!15767 = !DILocation(line: 996, column: 42, scope: !15492)
!15768 = !DILocation(line: 996, column: 27, scope: !15492)
!15769 = !DILocation(line: 997, column: 28, scope: !15492)
!15770 = !DILocation(line: 997, column: 26, scope: !15492)
!15771 = !DILocation(line: 997, column: 11, scope: !15492)
!15772 = !DILabel(scope: !15492, name: "do_signed_number", file: !15250, line: 999)
!15773 = !DILocation(line: 999, column: 9, scope: !15492)
!15774 = !DILocation(line: 1000, column: 32, scope: !15492)
!15775 = !DILocation(line: 1000, column: 11, scope: !15492)
!15776 = !DILabel(scope: !15492, name: "do_maybe_signed_number", file: !15250, line: 1002)
!15777 = !DILocation(line: 1002, column: 9, scope: !15492)
!15778 = !DILocation(line: 1003, column: 25, scope: !15492)
!15779 = !DILocation(line: 1003, column: 11, scope: !15492)
!15780 = !DILabel(scope: !15492, name: "do_number_body", file: !15250, line: 1005)
!15781 = !DILocation(line: 1005, column: 9, scope: !15492)
!15782 = !DILocation(line: 1011, column: 15, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1011, column: 15)
!15784 = !DILocation(line: 1011, column: 24, scope: !15783)
!15785 = !DILocation(line: 1011, column: 35, scope: !15783)
!15786 = !DILocation(line: 1011, column: 39, scope: !15783)
!15787 = !DILocation(line: 1011, column: 15, scope: !15492)
!15788 = !DILocation(line: 1029, column: 15, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15783, file: !15250, line: 1012, column: 13)
!15790 = !DILocation(line: 1033, column: 18, scope: !15492)
!15791 = !DILocation(line: 1033, column: 22, scope: !15492)
!15792 = !DILocation(line: 1033, column: 16, scope: !15492)
!15793 = !DILocation(line: 1035, column: 15, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1035, column: 15)
!15795 = !DILocation(line: 1035, column: 15, scope: !15492)
!15796 = !DILocation(line: 1036, column: 32, scope: !15794)
!15797 = !DILocation(line: 1036, column: 30, scope: !15794)
!15798 = !DILocation(line: 1036, column: 28, scope: !15794)
!15799 = !DILocation(line: 1036, column: 13, scope: !15794)
!15800 = !DILocation(line: 1038, column: 11, scope: !15492)
!15801 = !DILocation(line: 1040, column: 19, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15803, file: !15250, line: 1040, column: 19)
!15803 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1039, column: 13)
!15804 = !DILocation(line: 1040, column: 33, scope: !15802)
!15805 = !DILocation(line: 1040, column: 19, scope: !15803)
!15806 = !DILocation(line: 1041, column: 18, scope: !15802)
!15807 = !DILocation(line: 1041, column: 25, scope: !15802)
!15808 = !DILocation(line: 1041, column: 17, scope: !15802)
!15809 = !DILocation(line: 1042, column: 29, scope: !15803)
!15810 = !DILocation(line: 1043, column: 25, scope: !15803)
!15811 = !DILocation(line: 1043, column: 40, scope: !15803)
!15812 = !DILocation(line: 1043, column: 45, scope: !15803)
!15813 = !DILocation(line: 1043, column: 16, scope: !15803)
!15814 = !DILocation(line: 1043, column: 23, scope: !15803)
!15815 = !DILocation(line: 1044, column: 30, scope: !15803)
!15816 = !DILocation(line: 1045, column: 13, scope: !15803)
!15817 = !DILocation(line: 1046, column: 18, scope: !15492)
!15818 = !DILocation(line: 1046, column: 33, scope: !15492)
!15819 = !DILocation(line: 1046, column: 38, scope: !15492)
!15820 = !DILocation(line: 1046, column: 41, scope: !15492)
!15821 = !DILocation(line: 1046, column: 55, scope: !15492)
!15822 = distinct !{!15822, !15800, !15823}
!15823 = !DILocation(line: 1046, column: 59, scope: !15492)
!15824 = !DILabel(scope: !15492, name: "do_number_sign_and_padding", file: !15250, line: 1048)
!15825 = !DILocation(line: 1048, column: 9, scope: !15492)
!15826 = !DILocation(line: 1049, column: 15, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1049, column: 15)
!15828 = !DILocation(line: 1049, column: 24, scope: !15827)
!15829 = !DILocation(line: 1049, column: 22, scope: !15827)
!15830 = !DILocation(line: 1049, column: 15, scope: !15492)
!15831 = !DILocation(line: 1050, column: 22, scope: !15827)
!15832 = !DILocation(line: 1050, column: 20, scope: !15827)
!15833 = !DILocation(line: 1050, column: 13, scope: !15827)
!15834 = !DILocation(line: 1052, column: 24, scope: !15492)
!15835 = !DILocation(line: 1053, column: 26, scope: !15492)
!15836 = !DILocation(line: 1052, column: 23, scope: !15492)
!15837 = !DILocation(line: 1052, column: 21, scope: !15492)
!15838 = !DILocation(line: 1056, column: 15, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1056, column: 15)
!15840 = !DILocation(line: 1056, column: 19, scope: !15839)
!15841 = !DILocation(line: 1056, column: 15, scope: !15492)
!15842 = !DILocation(line: 1058, column: 19, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15844, file: !15250, line: 1058, column: 19)
!15844 = distinct !DILexicalBlock(scope: !15839, file: !15250, line: 1057, column: 13)
!15845 = !DILocation(line: 1058, column: 19, scope: !15844)
!15846 = !DILocation(line: 1059, column: 17, scope: !15843)
!15847 = !DILocalVariable(name: "_n", scope: !15848, file: !15250, line: 1059, type: !149)
!15848 = distinct !DILexicalBlock(scope: !15843, file: !15250, line: 1059, column: 17)
!15849 = !DILocation(line: 1059, column: 17, scope: !15848)
!15850 = !DILocalVariable(name: "_w", scope: !15848, file: !15250, line: 1059, type: !149)
!15851 = !DILocalVariable(name: "_incr", scope: !15848, file: !15250, line: 1059, type: !149)
!15852 = !DILocation(line: 1059, column: 17, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15848, file: !15250, line: 1059, column: 17)
!15854 = !DILocation(line: 1059, column: 17, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15848, file: !15250, line: 1059, column: 17)
!15856 = !DILocation(line: 1059, column: 17, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15858, file: !15250, line: 1059, column: 17)
!15858 = distinct !DILexicalBlock(scope: !15855, file: !15250, line: 1059, column: 17)
!15859 = !DILocation(line: 1059, column: 17, scope: !15858)
!15860 = !DILocalVariable(name: "_delta", scope: !15861, file: !15250, line: 1059, type: !149)
!15861 = distinct !DILexicalBlock(scope: !15857, file: !15250, line: 1059, column: 17)
!15862 = !DILocation(line: 1059, column: 17, scope: !15861)
!15863 = !DILocation(line: 1059, column: 17, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15861, file: !15250, line: 1059, column: 17)
!15865 = !DILocation(line: 1060, column: 13, scope: !15844)
!15866 = !DILocalVariable(name: "padding", scope: !15867, file: !15250, line: 1063, type: !27)
!15867 = distinct !DILexicalBlock(scope: !15839, file: !15250, line: 1062, column: 13)
!15868 = !DILocation(line: 1063, column: 19, scope: !15867)
!15869 = !DILocation(line: 1063, column: 29, scope: !15867)
!15870 = !DILocation(line: 1063, column: 39, scope: !15867)
!15871 = !DILocation(line: 1063, column: 43, scope: !15867)
!15872 = !DILocation(line: 1064, column: 41, scope: !15867)
!15873 = !DILocation(line: 1064, column: 39, scope: !15867)
!15874 = !DILocation(line: 1063, column: 36, scope: !15867)
!15875 = !DILocation(line: 1064, column: 51, scope: !15867)
!15876 = !DILocation(line: 1064, column: 50, scope: !15867)
!15877 = !DILocation(line: 1064, column: 49, scope: !15867)
!15878 = !DILocation(line: 1064, column: 47, scope: !15867)
!15879 = !DILocation(line: 1066, column: 19, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15867, file: !15250, line: 1066, column: 19)
!15881 = !DILocation(line: 1066, column: 27, scope: !15880)
!15882 = !DILocation(line: 1066, column: 19, scope: !15867)
!15883 = !DILocation(line: 1068, column: 23, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !15250, line: 1068, column: 23)
!15885 = distinct !DILexicalBlock(scope: !15880, file: !15250, line: 1067, column: 17)
!15886 = !DILocation(line: 1068, column: 27, scope: !15884)
!15887 = !DILocation(line: 1068, column: 23, scope: !15885)
!15888 = !DILocation(line: 1070, column: 36, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15890, file: !15250, line: 1070, column: 27)
!15890 = distinct !DILexicalBlock(scope: !15884, file: !15250, line: 1069, column: 21)
!15891 = !DILocation(line: 1070, column: 27, scope: !15889)
!15892 = !DILocation(line: 1070, column: 47, scope: !15889)
!15893 = !DILocation(line: 1070, column: 57, scope: !15889)
!15894 = !DILocation(line: 1070, column: 55, scope: !15889)
!15895 = !DILocation(line: 1070, column: 44, scope: !15889)
!15896 = !DILocation(line: 1070, column: 27, scope: !15890)
!15897 = !DILocation(line: 1071, column: 25, scope: !15889)
!15898 = !DILocation(line: 1073, column: 27, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15890, file: !15250, line: 1073, column: 27)
!15900 = !DILocation(line: 1073, column: 27, scope: !15890)
!15901 = !DILocation(line: 1074, column: 25, scope: !15899)
!15902 = !DILocation(line: 1075, column: 28, scope: !15890)
!15903 = !DILocation(line: 1075, column: 25, scope: !15890)
!15904 = !DILocation(line: 1076, column: 31, scope: !15890)
!15905 = !DILocation(line: 1076, column: 39, scope: !15890)
!15906 = !DILocation(line: 1076, column: 37, scope: !15890)
!15907 = !DILocation(line: 1076, column: 49, scope: !15890)
!15908 = !DILocation(line: 1076, column: 57, scope: !15890)
!15909 = !DILocation(line: 1076, column: 55, scope: !15890)
!15910 = !DILocation(line: 1076, column: 29, scope: !15890)
!15911 = !DILocation(line: 1077, column: 27, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15890, file: !15250, line: 1077, column: 27)
!15913 = !DILocation(line: 1077, column: 27, scope: !15890)
!15914 = !DILocation(line: 1078, column: 25, scope: !15912)
!15915 = !DILocalVariable(name: "_n", scope: !15916, file: !15250, line: 1078, type: !149)
!15916 = distinct !DILexicalBlock(scope: !15912, file: !15250, line: 1078, column: 25)
!15917 = !DILocation(line: 1078, column: 25, scope: !15916)
!15918 = !DILocalVariable(name: "_w", scope: !15916, file: !15250, line: 1078, type: !149)
!15919 = !DILocalVariable(name: "_incr", scope: !15916, file: !15250, line: 1078, type: !149)
!15920 = !DILocation(line: 1078, column: 25, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15916, file: !15250, line: 1078, column: 25)
!15922 = !DILocation(line: 1078, column: 25, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15916, file: !15250, line: 1078, column: 25)
!15924 = !DILocation(line: 1078, column: 25, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !15250, line: 1078, column: 25)
!15926 = distinct !DILexicalBlock(scope: !15923, file: !15250, line: 1078, column: 25)
!15927 = !DILocation(line: 1078, column: 25, scope: !15926)
!15928 = !DILocalVariable(name: "_delta", scope: !15929, file: !15250, line: 1078, type: !149)
!15929 = distinct !DILexicalBlock(scope: !15925, file: !15250, line: 1078, column: 25)
!15930 = !DILocation(line: 1078, column: 25, scope: !15929)
!15931 = !DILocation(line: 1078, column: 25, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15929, file: !15250, line: 1078, column: 25)
!15933 = !DILocation(line: 1079, column: 21, scope: !15890)
!15934 = !DILocation(line: 1082, column: 36, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15936, file: !15250, line: 1082, column: 27)
!15936 = distinct !DILexicalBlock(scope: !15884, file: !15250, line: 1081, column: 21)
!15937 = !DILocation(line: 1082, column: 27, scope: !15935)
!15938 = !DILocation(line: 1082, column: 46, scope: !15935)
!15939 = !DILocation(line: 1082, column: 56, scope: !15935)
!15940 = !DILocation(line: 1082, column: 54, scope: !15935)
!15941 = !DILocation(line: 1082, column: 43, scope: !15935)
!15942 = !DILocation(line: 1082, column: 27, scope: !15936)
!15943 = !DILocation(line: 1083, column: 25, scope: !15935)
!15944 = !DILocation(line: 1085, column: 27, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15936, file: !15250, line: 1085, column: 27)
!15946 = !DILocation(line: 1085, column: 27, scope: !15936)
!15947 = !DILocation(line: 1086, column: 25, scope: !15945)
!15948 = !DILocalVariable(name: "_n", scope: !15949, file: !15250, line: 1086, type: !149)
!15949 = distinct !DILexicalBlock(scope: !15945, file: !15250, line: 1086, column: 25)
!15950 = !DILocation(line: 1086, column: 25, scope: !15949)
!15951 = !DILocalVariable(name: "_w", scope: !15949, file: !15250, line: 1086, type: !149)
!15952 = !DILocalVariable(name: "_incr", scope: !15949, file: !15250, line: 1086, type: !149)
!15953 = !DILocation(line: 1086, column: 25, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15949, file: !15250, line: 1086, column: 25)
!15955 = !DILocation(line: 1086, column: 25, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15949, file: !15250, line: 1086, column: 25)
!15957 = !DILocation(line: 1086, column: 25, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15959, file: !15250, line: 1086, column: 25)
!15959 = distinct !DILexicalBlock(scope: !15956, file: !15250, line: 1086, column: 25)
!15960 = !DILocation(line: 1086, column: 25, scope: !15959)
!15961 = !DILocalVariable(name: "_delta", scope: !15962, file: !15250, line: 1086, type: !149)
!15962 = distinct !DILexicalBlock(scope: !15958, file: !15250, line: 1086, column: 25)
!15963 = !DILocation(line: 1086, column: 25, scope: !15962)
!15964 = !DILocation(line: 1086, column: 25, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15962, file: !15250, line: 1086, column: 25)
!15966 = !DILocation(line: 1088, column: 27, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15936, file: !15250, line: 1088, column: 27)
!15968 = !DILocation(line: 1088, column: 27, scope: !15936)
!15969 = !DILocation(line: 1089, column: 25, scope: !15967)
!15970 = !DILocation(line: 1090, column: 28, scope: !15936)
!15971 = !DILocation(line: 1090, column: 25, scope: !15936)
!15972 = !DILocation(line: 1091, column: 29, scope: !15936)
!15973 = !DILocation(line: 1093, column: 17, scope: !15885)
!15974 = !DILocation(line: 1096, column: 23, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15976, file: !15250, line: 1096, column: 23)
!15976 = distinct !DILexicalBlock(scope: !15880, file: !15250, line: 1095, column: 17)
!15977 = !DILocation(line: 1096, column: 23, scope: !15976)
!15978 = !DILocation(line: 1097, column: 21, scope: !15975)
!15979 = !DILocalVariable(name: "_n", scope: !15980, file: !15250, line: 1097, type: !149)
!15980 = distinct !DILexicalBlock(scope: !15975, file: !15250, line: 1097, column: 21)
!15981 = !DILocation(line: 1097, column: 21, scope: !15980)
!15982 = !DILocalVariable(name: "_w", scope: !15980, file: !15250, line: 1097, type: !149)
!15983 = !DILocalVariable(name: "_incr", scope: !15980, file: !15250, line: 1097, type: !149)
!15984 = !DILocation(line: 1097, column: 21, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15980, file: !15250, line: 1097, column: 21)
!15986 = !DILocation(line: 1097, column: 21, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15980, file: !15250, line: 1097, column: 21)
!15988 = !DILocation(line: 1097, column: 21, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15990, file: !15250, line: 1097, column: 21)
!15990 = distinct !DILexicalBlock(scope: !15987, file: !15250, line: 1097, column: 21)
!15991 = !DILocation(line: 1097, column: 21, scope: !15990)
!15992 = !DILocalVariable(name: "_delta", scope: !15993, file: !15250, line: 1097, type: !149)
!15993 = distinct !DILexicalBlock(scope: !15989, file: !15250, line: 1097, column: 21)
!15994 = !DILocation(line: 1097, column: 21, scope: !15993)
!15995 = !DILocation(line: 1097, column: 21, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15993, file: !15250, line: 1097, column: 21)
!15997 = !DILocation(line: 1101, column: 11, scope: !15492)
!15998 = !DILocalVariable(name: "_n", scope: !15999, file: !15250, line: 1101, type: !149)
!15999 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1101, column: 11)
!16000 = !DILocation(line: 1101, column: 11, scope: !15999)
!16001 = !DILocalVariable(name: "_w", scope: !15999, file: !15250, line: 1101, type: !149)
!16002 = !DILocalVariable(name: "_incr", scope: !15999, file: !15250, line: 1101, type: !149)
!16003 = !DILocation(line: 1101, column: 11, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15999, file: !15250, line: 1101, column: 11)
!16005 = !DILocation(line: 1101, column: 11, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !15999, file: !15250, line: 1101, column: 11)
!16007 = !DILocation(line: 1101, column: 11, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16009, file: !15250, line: 1101, column: 11)
!16009 = distinct !DILexicalBlock(scope: !16006, file: !15250, line: 1101, column: 11)
!16010 = !DILocation(line: 1101, column: 11, scope: !16009)
!16011 = !DILocalVariable(name: "_delta", scope: !16012, file: !15250, line: 1101, type: !149)
!16012 = distinct !DILexicalBlock(scope: !16008, file: !15250, line: 1101, column: 11)
!16013 = !DILocation(line: 1101, column: 11, scope: !16012)
!16014 = !DILocation(line: 1101, column: 11, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16012, file: !15250, line: 1101, column: 11)
!16016 = !DILocation(line: 1101, column: 11, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16009, file: !15250, line: 1101, column: 11)
!16018 = !DILocation(line: 1101, column: 11, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16017, file: !15250, line: 1101, column: 11)
!16020 = !DILocation(line: 1102, column: 11, scope: !15492)
!16021 = !DILocation(line: 1105, column: 15, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1105, column: 15)
!16023 = !DILocation(line: 1105, column: 24, scope: !16022)
!16024 = !DILocation(line: 1105, column: 15, scope: !15492)
!16025 = !DILocation(line: 1106, column: 13, scope: !16022)
!16026 = !DILocation(line: 1107, column: 15, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1107, column: 15)
!16028 = !DILocation(line: 1107, column: 19, scope: !16027)
!16029 = !DILocation(line: 1107, column: 24, scope: !16027)
!16030 = !DILocation(line: 1107, column: 27, scope: !16027)
!16031 = !DILocation(line: 1107, column: 33, scope: !16027)
!16032 = !DILocation(line: 1107, column: 15, scope: !15492)
!16033 = !DILocation(line: 1109, column: 19, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16027, file: !15250, line: 1108, column: 13)
!16035 = !DILocation(line: 1110, column: 24, scope: !16034)
!16036 = !DILocation(line: 1111, column: 13, scope: !16034)
!16037 = !DILocation(line: 1114, column: 26, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16027, file: !15250, line: 1113, column: 13)
!16039 = !DILocation(line: 1114, column: 32, scope: !16038)
!16040 = !DILocation(line: 1114, column: 24, scope: !16038)
!16041 = !DILocation(line: 1115, column: 19, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16038, file: !15250, line: 1115, column: 19)
!16043 = !DILocation(line: 1115, column: 28, scope: !16042)
!16044 = !DILocation(line: 1115, column: 19, scope: !16038)
!16045 = !DILocation(line: 1116, column: 26, scope: !16042)
!16046 = !DILocation(line: 1116, column: 17, scope: !16042)
!16047 = !DILocation(line: 1118, column: 18, scope: !15492)
!16048 = !DILocation(line: 1119, column: 11, scope: !15492)
!16049 = !DILocation(line: 1122, column: 15, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1122, column: 15)
!16051 = !DILocation(line: 1122, column: 24, scope: !16050)
!16052 = !DILocation(line: 1122, column: 15, scope: !15492)
!16053 = !DILocation(line: 1123, column: 13, scope: !16050)
!16054 = !DILocation(line: 1125, column: 11, scope: !15492)
!16055 = !DILocation(line: 1125, column: 11, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1125, column: 11)
!16057 = !DILocation(line: 1128, column: 15, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1128, column: 15)
!16059 = !DILocation(line: 1128, column: 24, scope: !16058)
!16060 = !DILocation(line: 1128, column: 15, scope: !15492)
!16061 = !DILocation(line: 1129, column: 13, scope: !16058)
!16062 = !DILocation(line: 1131, column: 11, scope: !15492)
!16063 = !DILocation(line: 1131, column: 11, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1131, column: 11)
!16065 = !DILocation(line: 1134, column: 15, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1134, column: 15)
!16067 = !DILocation(line: 1134, column: 24, scope: !16066)
!16068 = !DILocation(line: 1134, column: 15, scope: !15492)
!16069 = !DILocation(line: 1135, column: 13, scope: !16066)
!16070 = !DILocation(line: 1137, column: 11, scope: !15492)
!16071 = !DILocation(line: 1137, column: 11, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1137, column: 11)
!16073 = !DILocation(line: 1140, column: 15, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1140, column: 15)
!16075 = !DILocation(line: 1140, column: 24, scope: !16074)
!16076 = !DILocation(line: 1140, column: 15, scope: !15492)
!16077 = !DILocation(line: 1141, column: 13, scope: !16074)
!16078 = !DILocation(line: 1143, column: 11, scope: !15492)
!16079 = !DILocation(line: 1143, column: 11, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1143, column: 11)
!16081 = !DILocation(line: 1146, column: 15, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1146, column: 15)
!16083 = !DILocation(line: 1146, column: 24, scope: !16082)
!16084 = !DILocation(line: 1146, column: 15, scope: !15492)
!16085 = !DILocation(line: 1147, column: 13, scope: !16082)
!16086 = !DILocation(line: 1149, column: 11, scope: !15492)
!16087 = !DILocation(line: 1149, column: 11, scope: !16088)
!16088 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1149, column: 11)
!16089 = !DILocation(line: 1152, column: 15, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1152, column: 15)
!16091 = !DILocation(line: 1152, column: 24, scope: !16090)
!16092 = !DILocation(line: 1152, column: 15, scope: !15492)
!16093 = !DILocation(line: 1153, column: 13, scope: !16090)
!16094 = !DILocation(line: 1155, column: 11, scope: !15492)
!16095 = !DILocation(line: 1155, column: 11, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1155, column: 11)
!16097 = !DILocation(line: 1158, column: 15, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1158, column: 15)
!16099 = !DILocation(line: 1158, column: 24, scope: !16098)
!16100 = !DILocation(line: 1158, column: 15, scope: !15492)
!16101 = !DILocation(line: 1159, column: 13, scope: !16098)
!16102 = !DILocation(line: 1161, column: 11, scope: !15492)
!16103 = !DILocation(line: 1161, column: 11, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1161, column: 11)
!16105 = !DILocation(line: 1165, column: 15, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1165, column: 15)
!16107 = !DILocation(line: 1165, column: 24, scope: !16106)
!16108 = !DILocation(line: 1165, column: 15, scope: !15492)
!16109 = !DILocation(line: 1166, column: 13, scope: !16106)
!16110 = !DILocation(line: 1168, column: 26, scope: !15492)
!16111 = !DILocation(line: 1168, column: 24, scope: !15492)
!16112 = !DILocation(line: 1169, column: 15, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1169, column: 15)
!16114 = !DILocation(line: 1169, column: 21, scope: !16113)
!16115 = !DILocation(line: 1169, column: 15, scope: !15492)
!16116 = !DILocation(line: 1170, column: 19, scope: !16113)
!16117 = !DILocation(line: 1170, column: 13, scope: !16113)
!16118 = !DILocalVariable(name: "j", scope: !16119, file: !15250, line: 1174, type: !27)
!16119 = distinct !DILexicalBlock(scope: !16113, file: !15250, line: 1172, column: 13)
!16120 = !DILocation(line: 1174, column: 19, scope: !16119)
!16121 = !DILocation(line: 1175, column: 24, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16119, file: !15250, line: 1175, column: 15)
!16123 = !DILocation(line: 1175, column: 22, scope: !16122)
!16124 = !DILocation(line: 1175, column: 20, scope: !16122)
!16125 = !DILocation(line: 1175, column: 31, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16122, file: !15250, line: 1175, column: 15)
!16127 = !DILocation(line: 1175, column: 33, scope: !16126)
!16128 = !DILocation(line: 1175, column: 15, scope: !16122)
!16129 = !DILocation(line: 1176, column: 30, scope: !16126)
!16130 = !DILocation(line: 1176, column: 17, scope: !16126)
!16131 = !DILocation(line: 1175, column: 39, scope: !16126)
!16132 = !DILocation(line: 1175, column: 15, scope: !16126)
!16133 = distinct !{!16133, !16128, !16134}
!16134 = !DILocation(line: 1176, column: 33, scope: !16122)
!16135 = !DILocation(line: 1179, column: 11, scope: !15492)
!16136 = !DILocation(line: 1179, column: 11, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1179, column: 11)
!16138 = !DILocation(line: 1183, column: 11, scope: !15492)
!16139 = !DILocalVariable(name: "_n", scope: !16140, file: !15250, line: 1183, type: !149)
!16140 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1183, column: 11)
!16141 = !DILocation(line: 1183, column: 11, scope: !16140)
!16142 = !DILocalVariable(name: "_w", scope: !16140, file: !15250, line: 1183, type: !149)
!16143 = !DILocalVariable(name: "_incr", scope: !16140, file: !15250, line: 1183, type: !149)
!16144 = !DILocation(line: 1183, column: 11, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16140, file: !15250, line: 1183, column: 11)
!16146 = !DILocation(line: 1183, column: 11, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16140, file: !15250, line: 1183, column: 11)
!16148 = !DILocation(line: 1183, column: 11, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !15250, line: 1183, column: 11)
!16150 = distinct !DILexicalBlock(scope: !16147, file: !15250, line: 1183, column: 11)
!16151 = !DILocation(line: 1183, column: 11, scope: !16150)
!16152 = !DILocalVariable(name: "_delta", scope: !16153, file: !15250, line: 1183, type: !149)
!16153 = distinct !DILexicalBlock(scope: !16149, file: !15250, line: 1183, column: 11)
!16154 = !DILocation(line: 1183, column: 11, scope: !16153)
!16155 = !DILocation(line: 1183, column: 11, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16153, file: !15250, line: 1183, column: 11)
!16157 = !DILocation(line: 1184, column: 11, scope: !15492)
!16158 = !DILocation(line: 1187, column: 22, scope: !15492)
!16159 = !DILocation(line: 1189, column: 23, scope: !15492)
!16160 = !DILocation(line: 1191, column: 11, scope: !15492)
!16161 = !DILocation(line: 1193, column: 15, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1193, column: 15)
!16163 = !DILocation(line: 1193, column: 15, scope: !15492)
!16164 = !DILocation(line: 1195, column: 26, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16162, file: !15250, line: 1194, column: 13)
!16166 = !DILocation(line: 1196, column: 26, scope: !16165)
!16167 = !DILocation(line: 1197, column: 13, scope: !16165)
!16168 = !DILocation(line: 1202, column: 11, scope: !15492)
!16169 = !DILocation(line: 1206, column: 11, scope: !15492)
!16170 = !DILocation(line: 1206, column: 11, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1206, column: 11)
!16172 = !DILocation(line: 1207, column: 11, scope: !15492)
!16173 = !DILocation(line: 1210, column: 18, scope: !15492)
!16174 = !DILocation(line: 1211, column: 11, scope: !15492)
!16175 = !DILocation(line: 1221, column: 11, scope: !15492)
!16176 = !DILocation(line: 1225, column: 15, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1225, column: 15)
!16178 = !DILocation(line: 1225, column: 24, scope: !16177)
!16179 = !DILocation(line: 1225, column: 15, scope: !15492)
!16180 = !DILocation(line: 1226, column: 13, scope: !16177)
!16181 = !DILocation(line: 1228, column: 11, scope: !15492)
!16182 = !DILocation(line: 1228, column: 11, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1228, column: 11)
!16184 = !DILocalVariable(name: "ltm", scope: !16185, file: !15250, line: 1232, type: !15255)
!16185 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1231, column: 11)
!16186 = !DILocation(line: 1232, column: 23, scope: !16185)
!16187 = !DILocalVariable(name: "t", scope: !16185, file: !15250, line: 1233, type: !162)
!16188 = !DILocation(line: 1233, column: 20, scope: !16185)
!16189 = !DILocation(line: 1235, column: 20, scope: !16185)
!16190 = !DILocation(line: 1235, column: 19, scope: !16185)
!16191 = !DILocation(line: 1236, column: 27, scope: !16185)
!16192 = !DILocation(line: 1236, column: 17, scope: !16185)
!16193 = !DILocation(line: 1236, column: 15, scope: !16185)
!16194 = !DILocation(line: 1241, column: 20, scope: !16185)
!16195 = !DILocation(line: 1241, column: 24, scope: !16185)
!16196 = !DILocation(line: 1241, column: 18, scope: !16185)
!16197 = !DILocation(line: 1242, column: 31, scope: !16185)
!16198 = !DILocation(line: 1242, column: 33, scope: !16185)
!16199 = !DILocation(line: 1242, column: 29, scope: !16185)
!16200 = !DILocation(line: 1244, column: 13, scope: !16185)
!16201 = !DILocalVariable(name: "d", scope: !16202, file: !15250, line: 1246, type: !27)
!16202 = distinct !DILexicalBlock(scope: !16185, file: !15250, line: 1245, column: 15)
!16203 = !DILocation(line: 1246, column: 21, scope: !16202)
!16204 = !DILocation(line: 1246, column: 25, scope: !16202)
!16205 = !DILocation(line: 1246, column: 27, scope: !16202)
!16206 = !DILocation(line: 1247, column: 19, scope: !16202)
!16207 = !DILocation(line: 1248, column: 28, scope: !16202)
!16208 = !DILocation(line: 1248, column: 47, scope: !16202)
!16209 = !DILocation(line: 1248, column: 46, scope: !16202)
!16210 = !DILocation(line: 1248, column: 51, scope: !16202)
!16211 = !DILocation(line: 1248, column: 54, scope: !16202)
!16212 = !DILocation(line: 1248, column: 27, scope: !16202)
!16213 = !DILocation(line: 1248, column: 18, scope: !16202)
!16214 = !DILocation(line: 1248, column: 25, scope: !16202)
!16215 = !DILocation(line: 1249, column: 15, scope: !16202)
!16216 = !DILocation(line: 1250, column: 20, scope: !16185)
!16217 = !DILocation(line: 1250, column: 22, scope: !16185)
!16218 = distinct !{!16218, !16200, !16219}
!16219 = !DILocation(line: 1250, column: 26, scope: !16185)
!16220 = !DILocation(line: 1252, column: 20, scope: !16185)
!16221 = !DILocation(line: 1253, column: 34, scope: !16185)
!16222 = !DILocation(line: 1254, column: 13, scope: !16185)
!16223 = !DILocation(line: 1258, column: 15, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1258, column: 15)
!16225 = !DILocation(line: 1258, column: 24, scope: !16224)
!16226 = !DILocation(line: 1258, column: 15, scope: !15492)
!16227 = !DILocation(line: 1259, column: 13, scope: !16224)
!16228 = !DILocation(line: 1268, column: 11, scope: !15492)
!16229 = !DILocation(line: 1271, column: 18, scope: !15492)
!16230 = !DILocation(line: 1272, column: 11, scope: !15492)
!16231 = !DILocation(line: 1275, column: 11, scope: !15492)
!16232 = !DILocalVariable(name: "_n", scope: !16233, file: !15250, line: 1275, type: !149)
!16233 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1275, column: 11)
!16234 = !DILocation(line: 1275, column: 11, scope: !16233)
!16235 = !DILocalVariable(name: "_w", scope: !16233, file: !15250, line: 1275, type: !149)
!16236 = !DILocalVariable(name: "_incr", scope: !16233, file: !15250, line: 1275, type: !149)
!16237 = !DILocation(line: 1275, column: 11, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16233, file: !15250, line: 1275, column: 11)
!16239 = !DILocation(line: 1275, column: 11, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16233, file: !15250, line: 1275, column: 11)
!16241 = !DILocation(line: 1275, column: 11, scope: !16242)
!16242 = distinct !DILexicalBlock(scope: !16243, file: !15250, line: 1275, column: 11)
!16243 = distinct !DILexicalBlock(scope: !16240, file: !15250, line: 1275, column: 11)
!16244 = !DILocation(line: 1275, column: 11, scope: !16243)
!16245 = !DILocalVariable(name: "_delta", scope: !16246, file: !15250, line: 1275, type: !149)
!16246 = distinct !DILexicalBlock(scope: !16242, file: !15250, line: 1275, column: 11)
!16247 = !DILocation(line: 1275, column: 11, scope: !16246)
!16248 = !DILocation(line: 1275, column: 11, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16246, file: !15250, line: 1275, column: 11)
!16250 = !DILocation(line: 1276, column: 11, scope: !15492)
!16251 = !DILocation(line: 1279, column: 11, scope: !15492)
!16252 = !DILocation(line: 1279, column: 11, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1279, column: 11)
!16254 = !DILocation(line: 1282, column: 15, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1282, column: 15)
!16256 = !DILocation(line: 1282, column: 24, scope: !16255)
!16257 = !DILocation(line: 1282, column: 15, scope: !15492)
!16258 = !DILocation(line: 1283, column: 13, scope: !16255)
!16259 = !DILocation(line: 1285, column: 11, scope: !15492)
!16260 = !DILocation(line: 1285, column: 11, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1285, column: 11)
!16262 = !DILocation(line: 1290, column: 15, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1290, column: 15)
!16264 = !DILocation(line: 1290, column: 24, scope: !16263)
!16265 = !DILocation(line: 1290, column: 15, scope: !15492)
!16266 = !DILocation(line: 1291, column: 13, scope: !16263)
!16267 = !DILocalVariable(name: "year", scope: !16268, file: !15250, line: 1297, type: !27)
!16268 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1292, column: 11)
!16269 = !DILocation(line: 1297, column: 17, scope: !16268)
!16270 = !DILocation(line: 1297, column: 25, scope: !16268)
!16271 = !DILocation(line: 1297, column: 29, scope: !16268)
!16272 = !DILocation(line: 1298, column: 28, scope: !16268)
!16273 = !DILocation(line: 1298, column: 32, scope: !16268)
!16274 = !DILocation(line: 1298, column: 40, scope: !16268)
!16275 = !DILocation(line: 1298, column: 25, scope: !16268)
!16276 = !DILocalVariable(name: "year_adjust", scope: !16268, file: !15250, line: 1301, type: !27)
!16277 = !DILocation(line: 1301, column: 17, scope: !16268)
!16278 = !DILocalVariable(name: "days", scope: !16268, file: !15250, line: 1302, type: !27)
!16279 = !DILocation(line: 1302, column: 17, scope: !16268)
!16280 = !DILocation(line: 1302, column: 39, scope: !16268)
!16281 = !DILocation(line: 1302, column: 43, scope: !16268)
!16282 = !DILocation(line: 1302, column: 52, scope: !16268)
!16283 = !DILocation(line: 1302, column: 56, scope: !16268)
!16284 = !DILocation(line: 1302, column: 24, scope: !16268)
!16285 = !DILocation(line: 1304, column: 17, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16268, file: !15250, line: 1304, column: 17)
!16287 = !DILocation(line: 1304, column: 22, scope: !16286)
!16288 = !DILocation(line: 1304, column: 17, scope: !16268)
!16289 = !DILocation(line: 1307, column: 29, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16286, file: !15250, line: 1305, column: 15)
!16291 = !DILocation(line: 1308, column: 39, scope: !16290)
!16292 = !DILocation(line: 1308, column: 43, scope: !16290)
!16293 = !DILocation(line: 1308, column: 60, scope: !16290)
!16294 = !DILocation(line: 0, scope: !16290)
!16295 = !DILocation(line: 1308, column: 58, scope: !16290)
!16296 = !DILocation(line: 1308, column: 51, scope: !16290)
!16297 = !DILocation(line: 1309, column: 39, scope: !16290)
!16298 = !DILocation(line: 1309, column: 43, scope: !16290)
!16299 = !DILocation(line: 1308, column: 24, scope: !16290)
!16300 = !DILocation(line: 1308, column: 22, scope: !16290)
!16301 = !DILocation(line: 1310, column: 15, scope: !16290)
!16302 = !DILocalVariable(name: "d", scope: !16303, file: !15250, line: 1313, type: !27)
!16303 = distinct !DILexicalBlock(scope: !16286, file: !15250, line: 1312, column: 15)
!16304 = !DILocation(line: 1313, column: 21, scope: !16303)
!16305 = !DILocation(line: 1313, column: 40, scope: !16303)
!16306 = !DILocation(line: 1313, column: 44, scope: !16303)
!16307 = !DILocation(line: 1313, column: 61, scope: !16303)
!16308 = !DILocation(line: 0, scope: !16303)
!16309 = !DILocation(line: 1313, column: 59, scope: !16303)
!16310 = !DILocation(line: 1313, column: 52, scope: !16303)
!16311 = !DILocation(line: 1314, column: 40, scope: !16303)
!16312 = !DILocation(line: 1314, column: 44, scope: !16303)
!16313 = !DILocation(line: 1313, column: 25, scope: !16303)
!16314 = !DILocation(line: 1315, column: 26, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16303, file: !15250, line: 1315, column: 21)
!16316 = !DILocation(line: 1315, column: 23, scope: !16315)
!16317 = !DILocation(line: 1315, column: 21, scope: !16303)
!16318 = !DILocation(line: 1318, column: 33, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16315, file: !15250, line: 1316, column: 19)
!16320 = !DILocation(line: 1319, column: 28, scope: !16319)
!16321 = !DILocation(line: 1319, column: 26, scope: !16319)
!16322 = !DILocation(line: 1320, column: 19, scope: !16319)
!16323 = !DILocation(line: 1323, column: 22, scope: !16268)
!16324 = !DILocation(line: 1323, column: 21, scope: !16268)
!16325 = !DILocation(line: 1323, column: 13, scope: !16268)
!16326 = !DILocalVariable(name: "yy", scope: !16327, file: !15250, line: 1327, type: !27)
!16327 = distinct !DILexicalBlock(scope: !16328, file: !15250, line: 1326, column: 17)
!16328 = distinct !DILexicalBlock(scope: !16268, file: !15250, line: 1324, column: 15)
!16329 = !DILocation(line: 1327, column: 23, scope: !16327)
!16330 = !DILocation(line: 1327, column: 29, scope: !16327)
!16331 = !DILocation(line: 1327, column: 33, scope: !16327)
!16332 = !DILocation(line: 1327, column: 41, scope: !16327)
!16333 = !DILocation(line: 1327, column: 49, scope: !16327)
!16334 = !DILocation(line: 1327, column: 47, scope: !16327)
!16335 = !DILocation(line: 1327, column: 62, scope: !16327)
!16336 = !DILocation(line: 1328, column: 19, scope: !16327)
!16337 = !DILocation(line: 1328, column: 19, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16327, file: !15250, line: 1328, column: 19)
!16339 = !DILocation(line: 1334, column: 17, scope: !16327)
!16340 = !DILocation(line: 1337, column: 17, scope: !16328)
!16341 = !DILocation(line: 1337, column: 17, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16328, file: !15250, line: 1337, column: 17)
!16343 = !DILocation(line: 1342, column: 17, scope: !16328)
!16344 = !DILocation(line: 1342, column: 17, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16328, file: !15250, line: 1342, column: 17)
!16346 = !DILocation(line: 1343, column: 15, scope: !16328)
!16347 = !DILocation(line: 1344, column: 11, scope: !16268)
!16348 = !DILocation(line: 1347, column: 15, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1347, column: 15)
!16350 = !DILocation(line: 1347, column: 24, scope: !16349)
!16351 = !DILocation(line: 1347, column: 15, scope: !15492)
!16352 = !DILocation(line: 1348, column: 13, scope: !16349)
!16353 = !DILocation(line: 1350, column: 11, scope: !15492)
!16354 = !DILocation(line: 1350, column: 11, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1350, column: 11)
!16356 = !DILocation(line: 1353, column: 15, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1353, column: 15)
!16358 = !DILocation(line: 1353, column: 24, scope: !16357)
!16359 = !DILocation(line: 1353, column: 15, scope: !15492)
!16360 = !DILocation(line: 1354, column: 13, scope: !16357)
!16361 = !DILocation(line: 1356, column: 11, scope: !15492)
!16362 = !DILocation(line: 1356, column: 11, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1356, column: 11)
!16364 = !DILocation(line: 1359, column: 15, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1359, column: 15)
!16366 = !DILocation(line: 1359, column: 24, scope: !16365)
!16367 = !DILocation(line: 1359, column: 15, scope: !15492)
!16368 = !DILocation(line: 1375, column: 15, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16365, file: !15250, line: 1360, column: 13)
!16370 = !DILocation(line: 1378, column: 15, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1378, column: 15)
!16372 = !DILocation(line: 1378, column: 24, scope: !16371)
!16373 = !DILocation(line: 1378, column: 15, scope: !15492)
!16374 = !DILocation(line: 1379, column: 13, scope: !16371)
!16375 = !DILocation(line: 1381, column: 11, scope: !15492)
!16376 = !DILocation(line: 1381, column: 11, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1381, column: 11)
!16378 = !DILocation(line: 1385, column: 15, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1385, column: 15)
!16380 = !DILocation(line: 1385, column: 24, scope: !16379)
!16381 = !DILocation(line: 1385, column: 15, scope: !15492)
!16382 = !DILocation(line: 1398, column: 15, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16379, file: !15250, line: 1386, column: 13)
!16384 = !DILocalVariable(name: "yy", scope: !16385, file: !15250, line: 1403, type: !27)
!16385 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1402, column: 11)
!16386 = !DILocation(line: 1403, column: 17, scope: !16385)
!16387 = !DILocation(line: 1403, column: 22, scope: !16385)
!16388 = !DILocation(line: 1403, column: 26, scope: !16385)
!16389 = !DILocation(line: 1403, column: 34, scope: !16385)
!16390 = !DILocation(line: 1404, column: 17, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16385, file: !15250, line: 1404, column: 17)
!16392 = !DILocation(line: 1404, column: 20, scope: !16391)
!16393 = !DILocation(line: 1404, column: 17, scope: !16385)
!16394 = !DILocation(line: 1405, column: 20, scope: !16391)
!16395 = !DILocation(line: 1405, column: 24, scope: !16391)
!16396 = !DILocation(line: 1405, column: 32, scope: !16391)
!16397 = !DILocation(line: 1405, column: 52, scope: !16391)
!16398 = !DILocation(line: 1405, column: 51, scope: !16391)
!16399 = !DILocation(line: 1405, column: 57, scope: !16391)
!16400 = !DILocation(line: 1405, column: 60, scope: !16391)
!16401 = !DILocation(line: 1405, column: 18, scope: !16391)
!16402 = !DILocation(line: 1405, column: 15, scope: !16391)
!16403 = !DILocation(line: 1406, column: 13, scope: !16385)
!16404 = !DILocation(line: 1406, column: 13, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16385, file: !15250, line: 1406, column: 13)
!16406 = !DILocation(line: 1407, column: 11, scope: !16385)
!16407 = !DILocation(line: 1410, column: 15, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1410, column: 15)
!16409 = !DILocation(line: 1410, column: 15, scope: !15492)
!16410 = !DILocation(line: 1412, column: 26, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16408, file: !15250, line: 1411, column: 13)
!16412 = !DILocation(line: 1413, column: 26, scope: !16411)
!16413 = !DILocation(line: 1414, column: 13, scope: !16411)
!16414 = !DILocation(line: 1426, column: 11, scope: !15492)
!16415 = !DILocalVariable(name: "_n", scope: !16416, file: !15250, line: 1426, type: !149)
!16416 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1426, column: 11)
!16417 = !DILocation(line: 1426, column: 11, scope: !16416)
!16418 = !DILocalVariable(name: "_w", scope: !16416, file: !15250, line: 1426, type: !149)
!16419 = !DILocalVariable(name: "_incr", scope: !16416, file: !15250, line: 1426, type: !149)
!16420 = !DILocation(line: 1426, column: 11, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16416, file: !15250, line: 1426, column: 11)
!16422 = !DILocation(line: 1426, column: 11, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16416, file: !15250, line: 1426, column: 11)
!16424 = !DILocation(line: 1426, column: 11, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !16426, file: !15250, line: 1426, column: 11)
!16426 = distinct !DILexicalBlock(scope: !16423, file: !15250, line: 1426, column: 11)
!16427 = !DILocation(line: 1426, column: 11, scope: !16426)
!16428 = !DILocalVariable(name: "_delta", scope: !16429, file: !15250, line: 1426, type: !149)
!16429 = distinct !DILexicalBlock(scope: !16425, file: !15250, line: 1426, column: 11)
!16430 = !DILocation(line: 1426, column: 11, scope: !16429)
!16431 = !DILocation(line: 1426, column: 11, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16429, file: !15250, line: 1426, column: 11)
!16433 = !DILocation(line: 1426, column: 11, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16426, file: !15250, line: 1426, column: 11)
!16435 = !DILocation(line: 1426, column: 11, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16434, file: !15250, line: 1426, column: 11)
!16437 = !DILocation(line: 1428, column: 11, scope: !15492)
!16438 = !DILocation(line: 1433, column: 23, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1433, column: 11)
!16440 = !DILocation(line: 1433, column: 16, scope: !16439)
!16441 = !DILocation(line: 1433, column: 28, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16439, file: !15250, line: 1433, column: 11)
!16443 = !DILocation(line: 1433, column: 30, scope: !16442)
!16444 = !DILocation(line: 1433, column: 38, scope: !16442)
!16445 = !DILocation(line: 1433, column: 11, scope: !16439)
!16446 = !DILocation(line: 1434, column: 13, scope: !16442)
!16447 = !DILocation(line: 1433, column: 56, scope: !16442)
!16448 = !DILocation(line: 1433, column: 11, scope: !16442)
!16449 = distinct !{!16449, !16445, !16450}
!16450 = !DILocation(line: 1434, column: 13, scope: !16439)
!16451 = !DILocation(line: 1435, column: 15, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1435, column: 15)
!16453 = !DILocation(line: 1435, column: 17, scope: !16452)
!16454 = !DILocation(line: 1435, column: 25, scope: !16452)
!16455 = !DILocation(line: 1435, column: 15, scope: !15492)
!16456 = !DILocation(line: 1436, column: 13, scope: !16452)
!16457 = !DILocation(line: 1437, column: 16, scope: !15492)
!16458 = !DILocation(line: 1437, column: 13, scope: !15492)
!16459 = !DILocation(line: 1438, column: 11, scope: !15492)
!16460 = !DILocation(line: 1441, column: 18, scope: !15492)
!16461 = !DILocation(line: 1441, column: 11, scope: !15492)
!16462 = !DILabel(scope: !15492, name: "do_z_conversion", file: !15250, line: 1443)
!16463 = !DILocation(line: 1443, column: 9, scope: !15492)
!16464 = !DILocation(line: 1444, column: 15, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1444, column: 15)
!16466 = !DILocation(line: 1444, column: 19, scope: !16465)
!16467 = !DILocation(line: 1444, column: 28, scope: !16465)
!16468 = !DILocation(line: 1444, column: 15, scope: !15492)
!16469 = !DILocation(line: 1445, column: 13, scope: !16465)
!16470 = !DILocalVariable(name: "diff", scope: !16471, file: !15250, line: 1448, type: !27)
!16471 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1447, column: 11)
!16472 = !DILocation(line: 1448, column: 17, scope: !16471)
!16473 = !DILocalVariable(name: "hour_diff", scope: !16471, file: !15250, line: 1449, type: !27)
!16474 = !DILocation(line: 1449, column: 17, scope: !16471)
!16475 = !DILocalVariable(name: "min_diff", scope: !16471, file: !15250, line: 1450, type: !27)
!16476 = !DILocation(line: 1450, column: 17, scope: !16471)
!16477 = !DILocalVariable(name: "sec_diff", scope: !16471, file: !15250, line: 1451, type: !27)
!16478 = !DILocation(line: 1451, column: 17, scope: !16471)
!16479 = !DILocation(line: 1453, column: 20, scope: !16471)
!16480 = !DILocation(line: 1453, column: 24, scope: !16471)
!16481 = !DILocation(line: 1453, column: 18, scope: !16471)
!16482 = !DILocation(line: 1482, column: 31, scope: !16471)
!16483 = !DILocation(line: 1482, column: 36, scope: !16471)
!16484 = !DILocation(line: 1482, column: 40, scope: !16471)
!16485 = !DILocation(line: 1482, column: 44, scope: !16471)
!16486 = !DILocation(line: 1482, column: 49, scope: !16471)
!16487 = !DILocation(line: 1482, column: 54, scope: !16471)
!16488 = !DILocation(line: 1482, column: 58, scope: !16471)
!16489 = !DILocation(line: 1482, column: 57, scope: !16471)
!16490 = !DILocation(line: 1482, column: 63, scope: !16471)
!16491 = !DILocation(line: 0, scope: !16471)
!16492 = !DILocation(line: 1482, column: 29, scope: !16471)
!16493 = !DILocation(line: 1483, column: 25, scope: !16471)
!16494 = !DILocation(line: 1483, column: 30, scope: !16471)
!16495 = !DILocation(line: 1483, column: 35, scope: !16471)
!16496 = !DILocation(line: 1483, column: 23, scope: !16471)
!16497 = !DILocation(line: 1484, column: 24, scope: !16471)
!16498 = !DILocation(line: 1484, column: 29, scope: !16471)
!16499 = !DILocation(line: 1484, column: 34, scope: !16471)
!16500 = !DILocation(line: 1484, column: 22, scope: !16471)
!16501 = !DILocation(line: 1485, column: 24, scope: !16471)
!16502 = !DILocation(line: 1485, column: 29, scope: !16471)
!16503 = !DILocation(line: 1485, column: 22, scope: !16471)
!16504 = !DILocation(line: 1487, column: 21, scope: !16471)
!16505 = !DILocation(line: 1487, column: 13, scope: !16471)
!16506 = !DILocation(line: 1490, column: 17, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16471, file: !15250, line: 1488, column: 15)
!16508 = !DILocation(line: 1490, column: 17, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16507, file: !15250, line: 1490, column: 17)
!16510 = !DILabel(scope: !16507, name: "tz_hh_mm", file: !15250, line: 1492)
!16511 = !DILocation(line: 1492, column: 23, scope: !16507)
!16512 = !DILocation(line: 1493, column: 17, scope: !16507)
!16513 = !DILocation(line: 1493, column: 17, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16507, file: !15250, line: 1493, column: 17)
!16515 = !DILabel(scope: !16507, name: "tz_hh_mm_ss", file: !15250, line: 1495)
!16516 = !DILocation(line: 1495, column: 23, scope: !16507)
!16517 = !DILocation(line: 1496, column: 17, scope: !16507)
!16518 = !DILocation(line: 1496, column: 17, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16507, file: !15250, line: 1496, column: 17)
!16520 = !DILocation(line: 1500, column: 21, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16507, file: !15250, line: 1500, column: 21)
!16522 = !DILocation(line: 1500, column: 30, scope: !16521)
!16523 = !DILocation(line: 1500, column: 21, scope: !16507)
!16524 = !DILocation(line: 1501, column: 19, scope: !16521)
!16525 = !DILocation(line: 1502, column: 21, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16507, file: !15250, line: 1502, column: 21)
!16527 = !DILocation(line: 1502, column: 30, scope: !16526)
!16528 = !DILocation(line: 1502, column: 21, scope: !16507)
!16529 = !DILocation(line: 1503, column: 19, scope: !16526)
!16530 = !DILocation(line: 1504, column: 17, scope: !16507)
!16531 = !DILocation(line: 1504, column: 17, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16507, file: !15250, line: 1504, column: 17)
!16533 = !DILocation(line: 1507, column: 17, scope: !16507)
!16534 = !DILocation(line: 1512, column: 13, scope: !15492)
!16535 = !DILocation(line: 1513, column: 13, scope: !15492)
!16536 = !DILabel(scope: !15492, name: "bad_format", file: !15250, line: 1518)
!16537 = !DILocation(line: 1518, column: 9, scope: !15492)
!16538 = !DILocalVariable(name: "flen", scope: !16539, file: !15250, line: 1520, type: !27)
!16539 = distinct !DILexicalBlock(scope: !15492, file: !15250, line: 1519, column: 11)
!16540 = !DILocation(line: 1520, column: 17, scope: !16539)
!16541 = !DILocation(line: 1521, column: 23, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !16539, file: !15250, line: 1521, column: 13)
!16543 = !DILocation(line: 1521, column: 18, scope: !16542)
!16544 = !DILocation(line: 1521, column: 28, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16542, file: !15250, line: 1521, column: 13)
!16546 = !DILocation(line: 1521, column: 34, scope: !16545)
!16547 = !DILocation(line: 1521, column: 32, scope: !16545)
!16548 = !DILocation(line: 1521, column: 40, scope: !16545)
!16549 = !DILocation(line: 1521, column: 13, scope: !16542)
!16550 = !DILocation(line: 1522, column: 15, scope: !16545)
!16551 = !DILocation(line: 1521, column: 56, scope: !16545)
!16552 = !DILocation(line: 1521, column: 13, scope: !16545)
!16553 = distinct !{!16553, !16549, !16554}
!16554 = !DILocation(line: 1522, column: 15, scope: !16542)
!16555 = !DILocation(line: 1523, column: 13, scope: !16539)
!16556 = !DILocalVariable(name: "_n", scope: !16557, file: !15250, line: 1523, type: !149)
!16557 = distinct !DILexicalBlock(scope: !16539, file: !15250, line: 1523, column: 13)
!16558 = !DILocation(line: 1523, column: 13, scope: !16557)
!16559 = !DILocalVariable(name: "_w", scope: !16557, file: !15250, line: 1523, type: !149)
!16560 = !DILocalVariable(name: "_incr", scope: !16557, file: !15250, line: 1523, type: !149)
!16561 = !DILocation(line: 1523, column: 13, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16557, file: !15250, line: 1523, column: 13)
!16563 = !DILocation(line: 1523, column: 13, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16557, file: !15250, line: 1523, column: 13)
!16565 = !DILocation(line: 1523, column: 13, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16567, file: !15250, line: 1523, column: 13)
!16567 = distinct !DILexicalBlock(scope: !16564, file: !15250, line: 1523, column: 13)
!16568 = !DILocation(line: 1523, column: 13, scope: !16567)
!16569 = !DILocalVariable(name: "_delta", scope: !16570, file: !15250, line: 1523, type: !149)
!16570 = distinct !DILexicalBlock(scope: !16566, file: !15250, line: 1523, column: 13)
!16571 = !DILocation(line: 1523, column: 13, scope: !16570)
!16572 = !DILocation(line: 1523, column: 13, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16570, file: !15250, line: 1523, column: 13)
!16574 = !DILocation(line: 1523, column: 13, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16567, file: !15250, line: 1523, column: 13)
!16576 = !DILocation(line: 1523, column: 13, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16575, file: !15250, line: 1523, column: 13)
!16578 = !DILocation(line: 1525, column: 11, scope: !15492)
!16579 = !DILocation(line: 1527, column: 5, scope: !15361)
!16580 = !DILocation(line: 562, column: 38, scope: !15356)
!16581 = !DILocation(line: 562, column: 45, scope: !15356)
!16582 = !DILocation(line: 562, column: 3, scope: !15356)
!16583 = distinct !{!16583, !15359, !16584}
!16584 = !DILocation(line: 1527, column: 5, scope: !15352)
!16585 = !DILocation(line: 1530, column: 7, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !15295, file: !15250, line: 1530, column: 7)
!16587 = !DILocation(line: 1530, column: 9, scope: !16586)
!16588 = !DILocation(line: 1530, column: 12, scope: !16586)
!16589 = !DILocation(line: 1530, column: 20, scope: !16586)
!16590 = !DILocation(line: 1530, column: 7, scope: !15295)
!16591 = !DILocation(line: 1531, column: 6, scope: !16586)
!16592 = !DILocation(line: 1531, column: 8, scope: !16586)
!16593 = !DILocation(line: 1531, column: 5, scope: !16586)
!16594 = !DILocation(line: 1534, column: 10, scope: !15295)
!16595 = !DILocation(line: 1534, column: 3, scope: !15295)
!16596 = !DILocation(line: 1535, column: 1, scope: !15295)
!16597 = distinct !DISubprogram(name: "memcpy_lowcase", scope: !15250, file: !15250, line: 320, type: !14671, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1608, retainedNodes: !152)
!16598 = !DILocalVariable(name: "dest", arg: 1, scope: !16597, file: !15250, line: 320, type: !143)
!16599 = !DILocation(line: 320, column: 25, scope: !16597)
!16600 = !DILocalVariable(name: "src", arg: 2, scope: !16597, file: !15250, line: 320, type: !146)
!16601 = !DILocation(line: 320, column: 45, scope: !16597)
!16602 = !DILocalVariable(name: "len", arg: 3, scope: !16597, file: !15250, line: 320, type: !149)
!16603 = !DILocation(line: 320, column: 57, scope: !16597)
!16604 = !DILocation(line: 322, column: 3, scope: !16597)
!16605 = !DILocation(line: 322, column: 13, scope: !16597)
!16606 = !DILocation(line: 322, column: 16, scope: !16597)
!16607 = !DILocation(line: 323, column: 17, scope: !16597)
!16608 = !DILocation(line: 323, column: 5, scope: !16597)
!16609 = !DILocation(line: 323, column: 10, scope: !16597)
!16610 = !DILocation(line: 323, column: 15, scope: !16597)
!16611 = distinct !{!16611, !16604, !16607}
!16612 = !DILocation(line: 324, column: 10, scope: !16597)
!16613 = !DILocation(line: 324, column: 3, scope: !16597)
!16614 = distinct !DISubprogram(name: "memcpy_uppcase", scope: !15250, file: !15250, line: 331, type: !14671, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1608, retainedNodes: !152)
!16615 = !DILocalVariable(name: "dest", arg: 1, scope: !16614, file: !15250, line: 331, type: !143)
!16616 = !DILocation(line: 331, column: 25, scope: !16614)
!16617 = !DILocalVariable(name: "src", arg: 2, scope: !16614, file: !15250, line: 331, type: !146)
!16618 = !DILocation(line: 331, column: 45, scope: !16614)
!16619 = !DILocalVariable(name: "len", arg: 3, scope: !16614, file: !15250, line: 331, type: !149)
!16620 = !DILocation(line: 331, column: 57, scope: !16614)
!16621 = !DILocation(line: 333, column: 3, scope: !16614)
!16622 = !DILocation(line: 333, column: 13, scope: !16614)
!16623 = !DILocation(line: 333, column: 16, scope: !16614)
!16624 = !DILocation(line: 334, column: 17, scope: !16614)
!16625 = !DILocation(line: 334, column: 5, scope: !16614)
!16626 = !DILocation(line: 334, column: 10, scope: !16614)
!16627 = !DILocation(line: 334, column: 15, scope: !16614)
!16628 = distinct !{!16628, !16621, !16624}
!16629 = !DILocation(line: 335, column: 10, scope: !16614)
!16630 = !DILocation(line: 335, column: 3, scope: !16614)
!16631 = distinct !DISubprogram(name: "iso_week_days", scope: !15250, file: !15250, line: 381, type: !16632, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1608, retainedNodes: !152)
!16632 = !DISubroutineType(types: !16633)
!16633 = !{!27, !27, !27}
!16634 = !DILocalVariable(name: "yday", arg: 1, scope: !16631, file: !15250, line: 381, type: !27)
!16635 = !DILocation(line: 381, column: 20, scope: !16631)
!16636 = !DILocalVariable(name: "wday", arg: 2, scope: !16631, file: !15250, line: 381, type: !27)
!16637 = !DILocation(line: 381, column: 30, scope: !16631)
!16638 = !DILocalVariable(name: "big_enough_multiple_of_7", scope: !16631, file: !15250, line: 384, type: !27)
!16639 = !DILocation(line: 384, column: 7, scope: !16631)
!16640 = !DILocation(line: 385, column: 11, scope: !16631)
!16641 = !DILocation(line: 386, column: 14, scope: !16631)
!16642 = !DILocation(line: 386, column: 21, scope: !16631)
!16643 = !DILocation(line: 386, column: 19, scope: !16631)
!16644 = !DILocation(line: 386, column: 26, scope: !16631)
!16645 = !DILocation(line: 386, column: 45, scope: !16631)
!16646 = !DILocation(line: 386, column: 43, scope: !16631)
!16647 = !DILocation(line: 386, column: 71, scope: !16631)
!16648 = !DILocation(line: 386, column: 11, scope: !16631)
!16649 = !DILocation(line: 387, column: 11, scope: !16631)
!16650 = !DILocation(line: 387, column: 28, scope: !16631)
!16651 = !DILocation(line: 385, column: 3, scope: !16631)
!16652 = distinct !DISubprogram(name: "set_program_name", scope: !1367, file: !1367, line: 39, type: !823, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1322, retainedNodes: !152)
!16653 = !DILocalVariable(name: "argv0", arg: 1, scope: !16652, file: !1367, line: 39, type: !146)
!16654 = !DILocation(line: 39, column: 31, scope: !16652)
!16655 = !DILocalVariable(name: "slash", scope: !16652, file: !1367, line: 46, type: !146)
!16656 = !DILocation(line: 46, column: 15, scope: !16652)
!16657 = !DILocalVariable(name: "base", scope: !16652, file: !1367, line: 47, type: !146)
!16658 = !DILocation(line: 47, column: 15, scope: !16652)
!16659 = !DILocation(line: 51, column: 7, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16652, file: !1367, line: 51, column: 7)
!16661 = !DILocation(line: 51, column: 13, scope: !16660)
!16662 = !DILocation(line: 51, column: 7, scope: !16652)
!16663 = !DILocation(line: 55, column: 14, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16660, file: !1367, line: 52, column: 5)
!16665 = !DILocation(line: 54, column: 7, scope: !16664)
!16666 = !DILocation(line: 56, column: 7, scope: !16664)
!16667 = !DILocation(line: 59, column: 20, scope: !16652)
!16668 = !DILocation(line: 59, column: 11, scope: !16652)
!16669 = !DILocation(line: 59, column: 9, scope: !16652)
!16670 = !DILocation(line: 60, column: 11, scope: !16652)
!16671 = !DILocation(line: 60, column: 17, scope: !16652)
!16672 = !DILocation(line: 60, column: 27, scope: !16652)
!16673 = !DILocation(line: 60, column: 33, scope: !16652)
!16674 = !DILocation(line: 60, column: 39, scope: !16652)
!16675 = !DILocation(line: 60, column: 8, scope: !16652)
!16676 = !DILocation(line: 61, column: 7, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16652, file: !1367, line: 61, column: 7)
!16678 = !DILocation(line: 61, column: 14, scope: !16677)
!16679 = !DILocation(line: 61, column: 12, scope: !16677)
!16680 = !DILocation(line: 61, column: 20, scope: !16677)
!16681 = !DILocation(line: 61, column: 25, scope: !16677)
!16682 = !DILocation(line: 61, column: 37, scope: !16677)
!16683 = !DILocation(line: 61, column: 42, scope: !16677)
!16684 = !DILocation(line: 61, column: 28, scope: !16677)
!16685 = !DILocation(line: 61, column: 61, scope: !16677)
!16686 = !DILocation(line: 61, column: 7, scope: !16652)
!16687 = !DILocation(line: 63, column: 15, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16677, file: !1367, line: 62, column: 5)
!16689 = !DILocation(line: 63, column: 13, scope: !16688)
!16690 = !DILocation(line: 64, column: 20, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16688, file: !1367, line: 64, column: 11)
!16692 = !DILocation(line: 64, column: 11, scope: !16691)
!16693 = !DILocation(line: 64, column: 36, scope: !16691)
!16694 = !DILocation(line: 64, column: 11, scope: !16688)
!16695 = !DILocation(line: 66, column: 19, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16691, file: !1367, line: 65, column: 9)
!16697 = !DILocation(line: 66, column: 24, scope: !16696)
!16698 = !DILocation(line: 66, column: 17, scope: !16696)
!16699 = !DILocation(line: 70, column: 52, scope: !16696)
!16700 = !DILocation(line: 70, column: 41, scope: !16696)
!16701 = !DILocation(line: 72, column: 9, scope: !16696)
!16702 = !DILocation(line: 73, column: 5, scope: !16688)
!16703 = !DILocation(line: 84, column: 18, scope: !16652)
!16704 = !DILocation(line: 84, column: 16, scope: !16652)
!16705 = !DILocation(line: 90, column: 38, scope: !16652)
!16706 = !DILocation(line: 90, column: 27, scope: !16652)
!16707 = !DILocation(line: 92, column: 1, scope: !16652)
!16708 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1378, file: !1378, line: 122, type: !16709, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16709 = !DISubroutineType(types: !16710)
!16710 = !{!1376, !1376}
!16711 = !DILocalVariable(name: "o", arg: 1, scope: !16708, file: !1378, line: 122, type: !1376)
!16712 = !DILocation(line: 122, column: 48, scope: !16708)
!16713 = !DILocalVariable(name: "e", scope: !16708, file: !1378, line: 124, type: !27)
!16714 = !DILocation(line: 124, column: 7, scope: !16708)
!16715 = !DILocation(line: 124, column: 11, scope: !16708)
!16716 = !DILocalVariable(name: "p", scope: !16708, file: !1378, line: 125, type: !1376)
!16717 = !DILocation(line: 125, column: 27, scope: !16708)
!16718 = !DILocation(line: 125, column: 40, scope: !16708)
!16719 = !DILocation(line: 125, column: 44, scope: !16708)
!16720 = !DILocation(line: 125, column: 31, scope: !16708)
!16721 = !DILocation(line: 127, column: 11, scope: !16708)
!16722 = !DILocation(line: 127, column: 3, scope: !16708)
!16723 = !DILocation(line: 127, column: 9, scope: !16708)
!16724 = !DILocation(line: 128, column: 10, scope: !16708)
!16725 = !DILocation(line: 128, column: 3, scope: !16708)
!16726 = distinct !DISubprogram(name: "get_quoting_style", scope: !1378, file: !1378, line: 133, type: !16727, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16727 = !DISubroutineType(types: !16728)
!16728 = !{!95, !1387}
!16729 = !DILocalVariable(name: "o", arg: 1, scope: !16726, file: !1378, line: 133, type: !1387)
!16730 = !DILocation(line: 133, column: 50, scope: !16726)
!16731 = !DILocation(line: 135, column: 11, scope: !16726)
!16732 = !DILocation(line: 135, column: 15, scope: !16726)
!16733 = !DILocation(line: 135, column: 46, scope: !16726)
!16734 = !DILocation(line: 135, column: 3, scope: !16726)
!16735 = distinct !DISubprogram(name: "set_quoting_style", scope: !1378, file: !1378, line: 141, type: !16736, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{null, !1376, !95}
!16738 = !DILocalVariable(name: "o", arg: 1, scope: !16735, file: !1378, line: 141, type: !1376)
!16739 = !DILocation(line: 141, column: 44, scope: !16735)
!16740 = !DILocalVariable(name: "s", arg: 2, scope: !16735, file: !1378, line: 141, type: !95)
!16741 = !DILocation(line: 141, column: 66, scope: !16735)
!16742 = !DILocation(line: 143, column: 47, scope: !16735)
!16743 = !DILocation(line: 143, column: 4, scope: !16735)
!16744 = !DILocation(line: 143, column: 8, scope: !16735)
!16745 = !DILocation(line: 143, column: 39, scope: !16735)
!16746 = !DILocation(line: 143, column: 45, scope: !16735)
!16747 = !DILocation(line: 144, column: 1, scope: !16735)
!16748 = distinct !DISubprogram(name: "set_char_quoting", scope: !1378, file: !1378, line: 152, type: !16749, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16749 = !DISubroutineType(types: !16750)
!16750 = !{!27, !1376, !144, !27}
!16751 = !DILocalVariable(name: "o", arg: 1, scope: !16748, file: !1378, line: 152, type: !1376)
!16752 = !DILocation(line: 152, column: 43, scope: !16748)
!16753 = !DILocalVariable(name: "c", arg: 2, scope: !16748, file: !1378, line: 152, type: !144)
!16754 = !DILocation(line: 152, column: 51, scope: !16748)
!16755 = !DILocalVariable(name: "i", arg: 3, scope: !16748, file: !1378, line: 152, type: !27)
!16756 = !DILocation(line: 152, column: 58, scope: !16748)
!16757 = !DILocalVariable(name: "uc", scope: !16748, file: !1378, line: 154, type: !725)
!16758 = !DILocation(line: 154, column: 17, scope: !16748)
!16759 = !DILocation(line: 154, column: 22, scope: !16748)
!16760 = !DILocalVariable(name: "p", scope: !16748, file: !1378, line: 155, type: !1386)
!16761 = !DILocation(line: 155, column: 17, scope: !16748)
!16762 = !DILocation(line: 156, column: 6, scope: !16748)
!16763 = !DILocation(line: 156, column: 10, scope: !16748)
!16764 = !DILocation(line: 156, column: 41, scope: !16748)
!16765 = !DILocation(line: 156, column: 5, scope: !16748)
!16766 = !DILocation(line: 156, column: 59, scope: !16748)
!16767 = !DILocation(line: 156, column: 62, scope: !16748)
!16768 = !DILocation(line: 156, column: 57, scope: !16748)
!16769 = !DILocalVariable(name: "shift", scope: !16748, file: !1378, line: 157, type: !27)
!16770 = !DILocation(line: 157, column: 7, scope: !16748)
!16771 = !DILocation(line: 157, column: 15, scope: !16748)
!16772 = !DILocation(line: 157, column: 18, scope: !16748)
!16773 = !DILocalVariable(name: "r", scope: !16748, file: !1378, line: 158, type: !27)
!16774 = !DILocation(line: 158, column: 7, scope: !16748)
!16775 = !DILocation(line: 158, column: 13, scope: !16748)
!16776 = !DILocation(line: 158, column: 12, scope: !16748)
!16777 = !DILocation(line: 158, column: 18, scope: !16748)
!16778 = !DILocation(line: 158, column: 15, scope: !16748)
!16779 = !DILocation(line: 158, column: 25, scope: !16748)
!16780 = !DILocation(line: 159, column: 11, scope: !16748)
!16781 = !DILocation(line: 159, column: 13, scope: !16748)
!16782 = !DILocation(line: 159, column: 20, scope: !16748)
!16783 = !DILocation(line: 159, column: 18, scope: !16748)
!16784 = !DILocation(line: 159, column: 26, scope: !16748)
!16785 = !DILocation(line: 159, column: 23, scope: !16748)
!16786 = !DILocation(line: 159, column: 4, scope: !16748)
!16787 = !DILocation(line: 159, column: 6, scope: !16748)
!16788 = !DILocation(line: 160, column: 10, scope: !16748)
!16789 = !DILocation(line: 160, column: 3, scope: !16748)
!16790 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1378, file: !1378, line: 168, type: !16791, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16791 = !DISubroutineType(types: !16792)
!16792 = !{!27, !1376, !27}
!16793 = !DILocalVariable(name: "o", arg: 1, scope: !16790, file: !1378, line: 168, type: !1376)
!16794 = !DILocation(line: 168, column: 44, scope: !16790)
!16795 = !DILocalVariable(name: "i", arg: 2, scope: !16790, file: !1378, line: 168, type: !27)
!16796 = !DILocation(line: 168, column: 51, scope: !16790)
!16797 = !DILocalVariable(name: "r", scope: !16790, file: !1378, line: 170, type: !27)
!16798 = !DILocation(line: 170, column: 7, scope: !16790)
!16799 = !DILocation(line: 171, column: 8, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16790, file: !1378, line: 171, column: 7)
!16801 = !DILocation(line: 171, column: 7, scope: !16790)
!16802 = !DILocation(line: 172, column: 7, scope: !16800)
!16803 = !DILocation(line: 172, column: 5, scope: !16800)
!16804 = !DILocation(line: 173, column: 7, scope: !16790)
!16805 = !DILocation(line: 173, column: 10, scope: !16790)
!16806 = !DILocation(line: 173, column: 5, scope: !16790)
!16807 = !DILocation(line: 174, column: 14, scope: !16790)
!16808 = !DILocation(line: 174, column: 3, scope: !16790)
!16809 = !DILocation(line: 174, column: 6, scope: !16790)
!16810 = !DILocation(line: 174, column: 12, scope: !16790)
!16811 = !DILocation(line: 175, column: 10, scope: !16790)
!16812 = !DILocation(line: 175, column: 3, scope: !16790)
!16813 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1378, file: !1378, line: 179, type: !16814, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16814 = !DISubroutineType(types: !16815)
!16815 = !{null, !1376, !146, !146}
!16816 = !DILocalVariable(name: "o", arg: 1, scope: !16813, file: !1378, line: 179, type: !1376)
!16817 = !DILocation(line: 179, column: 45, scope: !16813)
!16818 = !DILocalVariable(name: "left_quote", arg: 2, scope: !16813, file: !1378, line: 180, type: !146)
!16819 = !DILocation(line: 180, column: 33, scope: !16813)
!16820 = !DILocalVariable(name: "right_quote", arg: 3, scope: !16813, file: !1378, line: 180, type: !146)
!16821 = !DILocation(line: 180, column: 57, scope: !16813)
!16822 = !DILocation(line: 182, column: 8, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16813, file: !1378, line: 182, column: 7)
!16824 = !DILocation(line: 182, column: 7, scope: !16813)
!16825 = !DILocation(line: 183, column: 7, scope: !16823)
!16826 = !DILocation(line: 183, column: 5, scope: !16823)
!16827 = !DILocation(line: 184, column: 3, scope: !16813)
!16828 = !DILocation(line: 184, column: 6, scope: !16813)
!16829 = !DILocation(line: 184, column: 12, scope: !16813)
!16830 = !DILocation(line: 185, column: 8, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16813, file: !1378, line: 185, column: 7)
!16832 = !DILocation(line: 185, column: 19, scope: !16831)
!16833 = !DILocation(line: 185, column: 23, scope: !16831)
!16834 = !DILocation(line: 185, column: 7, scope: !16813)
!16835 = !DILocation(line: 186, column: 5, scope: !16831)
!16836 = !DILocation(line: 187, column: 19, scope: !16813)
!16837 = !DILocation(line: 187, column: 3, scope: !16813)
!16838 = !DILocation(line: 187, column: 6, scope: !16813)
!16839 = !DILocation(line: 187, column: 17, scope: !16813)
!16840 = !DILocation(line: 188, column: 20, scope: !16813)
!16841 = !DILocation(line: 188, column: 3, scope: !16813)
!16842 = !DILocation(line: 188, column: 6, scope: !16813)
!16843 = !DILocation(line: 188, column: 18, scope: !16813)
!16844 = !DILocation(line: 189, column: 1, scope: !16813)
!16845 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1378, file: !1378, line: 784, type: !16846, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16846 = !DISubroutineType(types: !16847)
!16847 = !{!149, !143, !149, !146, !149, !1387}
!16848 = !DILocalVariable(name: "buffer", arg: 1, scope: !16845, file: !1378, line: 784, type: !143)
!16849 = !DILocation(line: 784, column: 24, scope: !16845)
!16850 = !DILocalVariable(name: "buffersize", arg: 2, scope: !16845, file: !1378, line: 784, type: !149)
!16851 = !DILocation(line: 784, column: 39, scope: !16845)
!16852 = !DILocalVariable(name: "arg", arg: 3, scope: !16845, file: !1378, line: 785, type: !146)
!16853 = !DILocation(line: 785, column: 30, scope: !16845)
!16854 = !DILocalVariable(name: "argsize", arg: 4, scope: !16845, file: !1378, line: 785, type: !149)
!16855 = !DILocation(line: 785, column: 42, scope: !16845)
!16856 = !DILocalVariable(name: "o", arg: 5, scope: !16845, file: !1378, line: 786, type: !1387)
!16857 = !DILocation(line: 786, column: 48, scope: !16845)
!16858 = !DILocalVariable(name: "p", scope: !16845, file: !1378, line: 788, type: !1387)
!16859 = !DILocation(line: 788, column: 33, scope: !16845)
!16860 = !DILocation(line: 788, column: 37, scope: !16845)
!16861 = !DILocation(line: 788, column: 41, scope: !16845)
!16862 = !DILocalVariable(name: "e", scope: !16845, file: !1378, line: 789, type: !27)
!16863 = !DILocation(line: 789, column: 7, scope: !16845)
!16864 = !DILocation(line: 789, column: 11, scope: !16845)
!16865 = !DILocalVariable(name: "r", scope: !16845, file: !1378, line: 790, type: !149)
!16866 = !DILocation(line: 790, column: 10, scope: !16845)
!16867 = !DILocation(line: 790, column: 40, scope: !16845)
!16868 = !DILocation(line: 790, column: 48, scope: !16845)
!16869 = !DILocation(line: 790, column: 60, scope: !16845)
!16870 = !DILocation(line: 790, column: 65, scope: !16845)
!16871 = !DILocation(line: 791, column: 40, scope: !16845)
!16872 = !DILocation(line: 791, column: 43, scope: !16845)
!16873 = !DILocation(line: 791, column: 50, scope: !16845)
!16874 = !DILocation(line: 791, column: 53, scope: !16845)
!16875 = !DILocation(line: 791, column: 60, scope: !16845)
!16876 = !DILocation(line: 791, column: 63, scope: !16845)
!16877 = !DILocation(line: 792, column: 40, scope: !16845)
!16878 = !DILocation(line: 792, column: 43, scope: !16845)
!16879 = !DILocation(line: 792, column: 55, scope: !16845)
!16880 = !DILocation(line: 792, column: 58, scope: !16845)
!16881 = !DILocation(line: 790, column: 14, scope: !16845)
!16882 = !DILocation(line: 793, column: 11, scope: !16845)
!16883 = !DILocation(line: 793, column: 3, scope: !16845)
!16884 = !DILocation(line: 793, column: 9, scope: !16845)
!16885 = !DILocation(line: 794, column: 10, scope: !16845)
!16886 = !DILocation(line: 794, column: 3, scope: !16845)
!16887 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1378, file: !1378, line: 256, type: !16888, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{!149, !143, !149, !146, !149, !95, !27, !1405, !146, !146}
!16890 = !DILocalVariable(name: "buffer", arg: 1, scope: !16887, file: !1378, line: 256, type: !143)
!16891 = !DILocation(line: 256, column: 33, scope: !16887)
!16892 = !DILocalVariable(name: "buffersize", arg: 2, scope: !16887, file: !1378, line: 256, type: !149)
!16893 = !DILocation(line: 256, column: 48, scope: !16887)
!16894 = !DILocalVariable(name: "arg", arg: 3, scope: !16887, file: !1378, line: 257, type: !146)
!16895 = !DILocation(line: 257, column: 39, scope: !16887)
!16896 = !DILocalVariable(name: "argsize", arg: 4, scope: !16887, file: !1378, line: 257, type: !149)
!16897 = !DILocation(line: 257, column: 51, scope: !16887)
!16898 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !16887, file: !1378, line: 258, type: !95)
!16899 = !DILocation(line: 258, column: 46, scope: !16887)
!16900 = !DILocalVariable(name: "flags", arg: 6, scope: !16887, file: !1378, line: 258, type: !27)
!16901 = !DILocation(line: 258, column: 65, scope: !16887)
!16902 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !16887, file: !1378, line: 259, type: !1405)
!16903 = !DILocation(line: 259, column: 47, scope: !16887)
!16904 = !DILocalVariable(name: "left_quote", arg: 8, scope: !16887, file: !1378, line: 260, type: !146)
!16905 = !DILocation(line: 260, column: 39, scope: !16887)
!16906 = !DILocalVariable(name: "right_quote", arg: 9, scope: !16887, file: !1378, line: 261, type: !146)
!16907 = !DILocation(line: 261, column: 39, scope: !16887)
!16908 = !DILocalVariable(name: "i", scope: !16887, file: !1378, line: 263, type: !149)
!16909 = !DILocation(line: 263, column: 10, scope: !16887)
!16910 = !DILocalVariable(name: "len", scope: !16887, file: !1378, line: 264, type: !149)
!16911 = !DILocation(line: 264, column: 10, scope: !16887)
!16912 = !DILocalVariable(name: "orig_buffersize", scope: !16887, file: !1378, line: 265, type: !149)
!16913 = !DILocation(line: 265, column: 10, scope: !16887)
!16914 = !DILocalVariable(name: "quote_string", scope: !16887, file: !1378, line: 266, type: !146)
!16915 = !DILocation(line: 266, column: 15, scope: !16887)
!16916 = !DILocalVariable(name: "quote_string_len", scope: !16887, file: !1378, line: 267, type: !149)
!16917 = !DILocation(line: 267, column: 10, scope: !16887)
!16918 = !DILocalVariable(name: "backslash_escapes", scope: !16887, file: !1378, line: 268, type: !141)
!16919 = !DILocation(line: 268, column: 8, scope: !16887)
!16920 = !DILocalVariable(name: "unibyte_locale", scope: !16887, file: !1378, line: 269, type: !141)
!16921 = !DILocation(line: 269, column: 8, scope: !16887)
!16922 = !DILocation(line: 269, column: 25, scope: !16887)
!16923 = !DILocation(line: 269, column: 36, scope: !16887)
!16924 = !DILocalVariable(name: "elide_outer_quotes", scope: !16887, file: !1378, line: 270, type: !141)
!16925 = !DILocation(line: 270, column: 8, scope: !16887)
!16926 = !DILocation(line: 270, column: 30, scope: !16887)
!16927 = !DILocation(line: 270, column: 36, scope: !16887)
!16928 = !DILocation(line: 270, column: 61, scope: !16887)
!16929 = !DILocalVariable(name: "pending_shell_escape_end", scope: !16887, file: !1378, line: 271, type: !141)
!16930 = !DILocation(line: 271, column: 8, scope: !16887)
!16931 = !DILocalVariable(name: "encountered_single_quote", scope: !16887, file: !1378, line: 272, type: !141)
!16932 = !DILocation(line: 272, column: 8, scope: !16887)
!16933 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !16887, file: !1378, line: 273, type: !141)
!16934 = !DILocation(line: 273, column: 8, scope: !16887)
!16935 = !DILocation(line: 273, column: 3, scope: !16887)
!16936 = !DILabel(scope: !16887, name: "process_input", file: !1378, line: 314)
!16937 = !DILocation(line: 314, column: 2, scope: !16887)
!16938 = !DILocation(line: 316, column: 11, scope: !16887)
!16939 = !DILocation(line: 316, column: 3, scope: !16887)
!16940 = !DILocation(line: 319, column: 21, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 317, column: 5)
!16942 = !DILocation(line: 320, column: 26, scope: !16941)
!16943 = !DILocation(line: 321, column: 7, scope: !16941)
!16944 = !DILocation(line: 323, column: 12, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16941, file: !1378, line: 323, column: 11)
!16946 = !DILocation(line: 323, column: 11, scope: !16941)
!16947 = !DILocation(line: 324, column: 9, scope: !16945)
!16948 = !DILocation(line: 324, column: 9, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16950, file: !1378, line: 324, column: 9)
!16950 = distinct !DILexicalBlock(scope: !16945, file: !1378, line: 324, column: 9)
!16951 = !DILocation(line: 324, column: 9, scope: !16950)
!16952 = !DILocation(line: 325, column: 25, scope: !16941)
!16953 = !DILocation(line: 326, column: 20, scope: !16941)
!16954 = !DILocation(line: 327, column: 24, scope: !16941)
!16955 = !DILocation(line: 328, column: 7, scope: !16941)
!16956 = !DILocation(line: 331, column: 25, scope: !16941)
!16957 = !DILocation(line: 332, column: 26, scope: !16941)
!16958 = !DILocation(line: 333, column: 7, scope: !16941)
!16959 = !DILocation(line: 339, column: 13, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16961, file: !1378, line: 339, column: 13)
!16961 = distinct !DILexicalBlock(scope: !16941, file: !1378, line: 338, column: 7)
!16962 = !DILocation(line: 339, column: 27, scope: !16960)
!16963 = !DILocation(line: 339, column: 13, scope: !16961)
!16964 = !DILocation(line: 362, column: 50, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16960, file: !1378, line: 340, column: 11)
!16966 = !DILocation(line: 362, column: 26, scope: !16965)
!16967 = !DILocation(line: 362, column: 24, scope: !16965)
!16968 = !DILocation(line: 363, column: 51, scope: !16965)
!16969 = !DILocation(line: 363, column: 27, scope: !16965)
!16970 = !DILocation(line: 363, column: 25, scope: !16965)
!16971 = !DILocation(line: 364, column: 11, scope: !16965)
!16972 = !DILocation(line: 365, column: 14, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16961, file: !1378, line: 365, column: 13)
!16974 = !DILocation(line: 365, column: 13, scope: !16961)
!16975 = !DILocation(line: 366, column: 31, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16973, file: !1378, line: 366, column: 11)
!16977 = !DILocation(line: 366, column: 29, scope: !16976)
!16978 = !DILocation(line: 366, column: 16, scope: !16976)
!16979 = !DILocation(line: 366, column: 44, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16976, file: !1378, line: 366, column: 11)
!16981 = !DILocation(line: 366, column: 43, scope: !16980)
!16982 = !DILocation(line: 366, column: 11, scope: !16976)
!16983 = !DILocation(line: 367, column: 13, scope: !16980)
!16984 = !DILocation(line: 367, column: 13, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16986, file: !1378, line: 367, column: 13)
!16986 = distinct !DILexicalBlock(scope: !16980, file: !1378, line: 367, column: 13)
!16987 = !DILocation(line: 367, column: 13, scope: !16986)
!16988 = !DILocation(line: 366, column: 70, scope: !16980)
!16989 = !DILocation(line: 366, column: 11, scope: !16980)
!16990 = distinct !{!16990, !16982, !16991}
!16991 = !DILocation(line: 367, column: 13, scope: !16976)
!16992 = !DILocation(line: 368, column: 27, scope: !16961)
!16993 = !DILocation(line: 369, column: 24, scope: !16961)
!16994 = !DILocation(line: 369, column: 22, scope: !16961)
!16995 = !DILocation(line: 370, column: 36, scope: !16961)
!16996 = !DILocation(line: 370, column: 28, scope: !16961)
!16997 = !DILocation(line: 370, column: 26, scope: !16961)
!16998 = !DILocation(line: 372, column: 7, scope: !16941)
!16999 = !DILocation(line: 375, column: 25, scope: !16941)
!17000 = !DILocation(line: 376, column: 7, scope: !16941)
!17001 = !DILocation(line: 378, column: 26, scope: !16941)
!17002 = !DILocation(line: 379, column: 7, scope: !16941)
!17003 = !DILocation(line: 381, column: 12, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16941, file: !1378, line: 381, column: 11)
!17005 = !DILocation(line: 381, column: 11, scope: !16941)
!17006 = !DILocation(line: 382, column: 27, scope: !17004)
!17007 = !DILocation(line: 382, column: 9, scope: !17004)
!17008 = !DILocation(line: 383, column: 7, scope: !16941)
!17009 = !DILocation(line: 385, column: 21, scope: !16941)
!17010 = !DILocation(line: 386, column: 12, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !16941, file: !1378, line: 386, column: 11)
!17012 = !DILocation(line: 386, column: 11, scope: !16941)
!17013 = !DILocation(line: 387, column: 9, scope: !17011)
!17014 = !DILocation(line: 387, column: 9, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !17016, file: !1378, line: 387, column: 9)
!17016 = distinct !DILexicalBlock(scope: !17011, file: !1378, line: 387, column: 9)
!17017 = !DILocation(line: 387, column: 9, scope: !17016)
!17018 = !DILocation(line: 388, column: 20, scope: !16941)
!17019 = !DILocation(line: 389, column: 24, scope: !16941)
!17020 = !DILocation(line: 390, column: 7, scope: !16941)
!17021 = !DILocation(line: 393, column: 26, scope: !16941)
!17022 = !DILocation(line: 394, column: 7, scope: !16941)
!17023 = !DILocation(line: 397, column: 7, scope: !16941)
!17024 = !DILocation(line: 400, column: 10, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 400, column: 3)
!17026 = !DILocation(line: 400, column: 8, scope: !17025)
!17027 = !DILocation(line: 400, column: 19, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17025, file: !1378, line: 400, column: 3)
!17029 = !DILocation(line: 400, column: 27, scope: !17028)
!17030 = !DILocation(line: 400, column: 41, scope: !17028)
!17031 = !DILocation(line: 400, column: 45, scope: !17028)
!17032 = !DILocation(line: 400, column: 48, scope: !17028)
!17033 = !DILocation(line: 400, column: 58, scope: !17028)
!17034 = !DILocation(line: 400, column: 63, scope: !17028)
!17035 = !DILocation(line: 400, column: 60, scope: !17028)
!17036 = !DILocation(line: 400, column: 16, scope: !17028)
!17037 = !DILocation(line: 400, column: 3, scope: !17025)
!17038 = !DILocalVariable(name: "c", scope: !17039, file: !1378, line: 402, type: !725)
!17039 = distinct !DILexicalBlock(scope: !17028, file: !1378, line: 401, column: 5)
!17040 = !DILocation(line: 402, column: 21, scope: !17039)
!17041 = !DILocalVariable(name: "esc", scope: !17039, file: !1378, line: 403, type: !725)
!17042 = !DILocation(line: 403, column: 21, scope: !17039)
!17043 = !DILocalVariable(name: "is_right_quote", scope: !17039, file: !1378, line: 404, type: !141)
!17044 = !DILocation(line: 404, column: 12, scope: !17039)
!17045 = !DILocalVariable(name: "escaping", scope: !17039, file: !1378, line: 405, type: !141)
!17046 = !DILocation(line: 405, column: 12, scope: !17039)
!17047 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !17039, file: !1378, line: 406, type: !141)
!17048 = !DILocation(line: 406, column: 12, scope: !17039)
!17049 = !DILocation(line: 408, column: 11, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 408, column: 11)
!17051 = !DILocation(line: 409, column: 11, scope: !17050)
!17052 = !DILocation(line: 409, column: 14, scope: !17050)
!17053 = !DILocation(line: 409, column: 28, scope: !17050)
!17054 = !DILocation(line: 410, column: 11, scope: !17050)
!17055 = !DILocation(line: 410, column: 14, scope: !17050)
!17056 = !DILocation(line: 411, column: 11, scope: !17050)
!17057 = !DILocation(line: 411, column: 15, scope: !17050)
!17058 = !DILocation(line: 411, column: 19, scope: !17050)
!17059 = !DILocation(line: 411, column: 17, scope: !17050)
!17060 = !DILocation(line: 412, column: 19, scope: !17050)
!17061 = !DILocation(line: 412, column: 27, scope: !17050)
!17062 = !DILocation(line: 412, column: 39, scope: !17050)
!17063 = !DILocation(line: 412, column: 46, scope: !17050)
!17064 = !DILocation(line: 412, column: 44, scope: !17050)
!17065 = !DILocation(line: 416, column: 40, scope: !17050)
!17066 = !DILocation(line: 416, column: 32, scope: !17050)
!17067 = !DILocation(line: 416, column: 30, scope: !17050)
!17068 = !DILocation(line: 416, column: 48, scope: !17050)
!17069 = !DILocation(line: 412, column: 15, scope: !17050)
!17070 = !DILocation(line: 417, column: 11, scope: !17050)
!17071 = !DILocation(line: 417, column: 22, scope: !17050)
!17072 = !DILocation(line: 417, column: 28, scope: !17050)
!17073 = !DILocation(line: 417, column: 26, scope: !17050)
!17074 = !DILocation(line: 417, column: 31, scope: !17050)
!17075 = !DILocation(line: 417, column: 45, scope: !17050)
!17076 = !DILocation(line: 417, column: 14, scope: !17050)
!17077 = !DILocation(line: 417, column: 63, scope: !17050)
!17078 = !DILocation(line: 408, column: 11, scope: !17039)
!17079 = !DILocation(line: 419, column: 15, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17081, file: !1378, line: 419, column: 15)
!17081 = distinct !DILexicalBlock(scope: !17050, file: !1378, line: 418, column: 9)
!17082 = !DILocation(line: 419, column: 15, scope: !17081)
!17083 = !DILocation(line: 420, column: 13, scope: !17080)
!17084 = !DILocation(line: 421, column: 26, scope: !17081)
!17085 = !DILocation(line: 422, column: 9, scope: !17081)
!17086 = !DILocation(line: 424, column: 11, scope: !17039)
!17087 = !DILocation(line: 424, column: 15, scope: !17039)
!17088 = !DILocation(line: 424, column: 9, scope: !17039)
!17089 = !DILocation(line: 425, column: 15, scope: !17039)
!17090 = !DILocation(line: 425, column: 7, scope: !17039)
!17091 = !DILocation(line: 428, column: 15, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 428, column: 15)
!17093 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 426, column: 9)
!17094 = !DILocation(line: 428, column: 15, scope: !17093)
!17095 = !DILocation(line: 430, column: 15, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17092, file: !1378, line: 429, column: 13)
!17097 = !DILocation(line: 430, column: 15, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !1378, line: 430, column: 15)
!17099 = distinct !DILexicalBlock(scope: !17096, file: !1378, line: 430, column: 15)
!17100 = !DILocation(line: 430, column: 15, scope: !17099)
!17101 = !DILocation(line: 430, column: 15, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17099, file: !1378, line: 430, column: 15)
!17103 = !DILocation(line: 430, column: 15, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17102, file: !1378, line: 430, column: 15)
!17105 = !DILocation(line: 430, column: 15, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17107, file: !1378, line: 430, column: 15)
!17107 = distinct !DILexicalBlock(scope: !17104, file: !1378, line: 430, column: 15)
!17108 = !DILocation(line: 430, column: 15, scope: !17107)
!17109 = !DILocation(line: 430, column: 15, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17111, file: !1378, line: 430, column: 15)
!17111 = distinct !DILexicalBlock(scope: !17104, file: !1378, line: 430, column: 15)
!17112 = !DILocation(line: 430, column: 15, scope: !17111)
!17113 = !DILocation(line: 430, column: 15, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17115, file: !1378, line: 430, column: 15)
!17115 = distinct !DILexicalBlock(scope: !17104, file: !1378, line: 430, column: 15)
!17116 = !DILocation(line: 430, column: 15, scope: !17115)
!17117 = !DILocation(line: 430, column: 15, scope: !17118)
!17118 = distinct !DILexicalBlock(scope: !17119, file: !1378, line: 430, column: 15)
!17119 = distinct !DILexicalBlock(scope: !17099, file: !1378, line: 430, column: 15)
!17120 = !DILocation(line: 430, column: 15, scope: !17119)
!17121 = !DILocation(line: 437, column: 19, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17096, file: !1378, line: 437, column: 19)
!17123 = !DILocation(line: 437, column: 33, scope: !17122)
!17124 = !DILocation(line: 438, column: 19, scope: !17122)
!17125 = !DILocation(line: 438, column: 22, scope: !17122)
!17126 = !DILocation(line: 438, column: 24, scope: !17122)
!17127 = !DILocation(line: 438, column: 30, scope: !17122)
!17128 = !DILocation(line: 438, column: 28, scope: !17122)
!17129 = !DILocation(line: 438, column: 38, scope: !17122)
!17130 = !DILocation(line: 438, column: 48, scope: !17122)
!17131 = !DILocation(line: 438, column: 52, scope: !17122)
!17132 = !DILocation(line: 438, column: 54, scope: !17122)
!17133 = !DILocation(line: 438, column: 45, scope: !17122)
!17134 = !DILocation(line: 438, column: 59, scope: !17122)
!17135 = !DILocation(line: 438, column: 62, scope: !17122)
!17136 = !DILocation(line: 438, column: 66, scope: !17122)
!17137 = !DILocation(line: 438, column: 68, scope: !17122)
!17138 = !DILocation(line: 438, column: 73, scope: !17122)
!17139 = !DILocation(line: 437, column: 19, scope: !17096)
!17140 = !DILocation(line: 440, column: 19, scope: !17141)
!17141 = distinct !DILexicalBlock(scope: !17122, file: !1378, line: 439, column: 17)
!17142 = !DILocation(line: 440, column: 19, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17144, file: !1378, line: 440, column: 19)
!17144 = distinct !DILexicalBlock(scope: !17141, file: !1378, line: 440, column: 19)
!17145 = !DILocation(line: 440, column: 19, scope: !17144)
!17146 = !DILocation(line: 441, column: 19, scope: !17141)
!17147 = !DILocation(line: 441, column: 19, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17149, file: !1378, line: 441, column: 19)
!17149 = distinct !DILexicalBlock(scope: !17141, file: !1378, line: 441, column: 19)
!17150 = !DILocation(line: 441, column: 19, scope: !17149)
!17151 = !DILocation(line: 442, column: 17, scope: !17141)
!17152 = !DILocation(line: 443, column: 17, scope: !17096)
!17153 = !DILocation(line: 448, column: 13, scope: !17096)
!17154 = !DILocation(line: 449, column: 20, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17092, file: !1378, line: 449, column: 20)
!17156 = !DILocation(line: 449, column: 26, scope: !17155)
!17157 = !DILocation(line: 449, column: 20, scope: !17092)
!17158 = !DILocation(line: 450, column: 13, scope: !17155)
!17159 = !DILocation(line: 451, column: 11, scope: !17093)
!17160 = !DILocation(line: 454, column: 19, scope: !17093)
!17161 = !DILocation(line: 454, column: 11, scope: !17093)
!17162 = !DILocation(line: 457, column: 19, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17164, file: !1378, line: 457, column: 19)
!17164 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 455, column: 13)
!17165 = !DILocation(line: 457, column: 19, scope: !17164)
!17166 = !DILocation(line: 458, column: 17, scope: !17163)
!17167 = !DILocation(line: 459, column: 15, scope: !17164)
!17168 = !DILocation(line: 462, column: 20, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17164, file: !1378, line: 462, column: 19)
!17170 = !DILocation(line: 462, column: 26, scope: !17169)
!17171 = !DILocation(line: 463, column: 19, scope: !17169)
!17172 = !DILocation(line: 463, column: 22, scope: !17169)
!17173 = !DILocation(line: 463, column: 24, scope: !17169)
!17174 = !DILocation(line: 463, column: 30, scope: !17169)
!17175 = !DILocation(line: 463, column: 28, scope: !17169)
!17176 = !DILocation(line: 463, column: 38, scope: !17169)
!17177 = !DILocation(line: 463, column: 41, scope: !17169)
!17178 = !DILocation(line: 463, column: 45, scope: !17169)
!17179 = !DILocation(line: 463, column: 47, scope: !17169)
!17180 = !DILocation(line: 463, column: 52, scope: !17169)
!17181 = !DILocation(line: 462, column: 19, scope: !17164)
!17182 = !DILocation(line: 464, column: 25, scope: !17169)
!17183 = !DILocation(line: 464, column: 29, scope: !17169)
!17184 = !DILocation(line: 464, column: 31, scope: !17169)
!17185 = !DILocation(line: 464, column: 17, scope: !17169)
!17186 = !DILocation(line: 471, column: 25, scope: !17187)
!17187 = distinct !DILexicalBlock(scope: !17188, file: !1378, line: 471, column: 25)
!17188 = distinct !DILexicalBlock(scope: !17169, file: !1378, line: 465, column: 19)
!17189 = !DILocation(line: 471, column: 25, scope: !17188)
!17190 = !DILocation(line: 472, column: 23, scope: !17187)
!17191 = !DILocation(line: 473, column: 25, scope: !17188)
!17192 = !DILocation(line: 473, column: 29, scope: !17188)
!17193 = !DILocation(line: 473, column: 31, scope: !17188)
!17194 = !DILocation(line: 473, column: 23, scope: !17188)
!17195 = !DILocation(line: 474, column: 23, scope: !17188)
!17196 = !DILocation(line: 475, column: 21, scope: !17188)
!17197 = !DILocation(line: 475, column: 21, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17199, file: !1378, line: 475, column: 21)
!17199 = distinct !DILexicalBlock(scope: !17188, file: !1378, line: 475, column: 21)
!17200 = !DILocation(line: 475, column: 21, scope: !17199)
!17201 = !DILocation(line: 476, column: 21, scope: !17188)
!17202 = !DILocation(line: 476, column: 21, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17204, file: !1378, line: 476, column: 21)
!17204 = distinct !DILexicalBlock(scope: !17188, file: !1378, line: 476, column: 21)
!17205 = !DILocation(line: 476, column: 21, scope: !17204)
!17206 = !DILocation(line: 477, column: 21, scope: !17188)
!17207 = !DILocation(line: 477, column: 21, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !17209, file: !1378, line: 477, column: 21)
!17209 = distinct !DILexicalBlock(scope: !17188, file: !1378, line: 477, column: 21)
!17210 = !DILocation(line: 477, column: 21, scope: !17209)
!17211 = !DILocation(line: 478, column: 21, scope: !17188)
!17212 = !DILocation(line: 478, column: 21, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17214, file: !1378, line: 478, column: 21)
!17214 = distinct !DILexicalBlock(scope: !17188, file: !1378, line: 478, column: 21)
!17215 = !DILocation(line: 478, column: 21, scope: !17214)
!17216 = !DILocation(line: 479, column: 21, scope: !17188)
!17217 = !DILocation(line: 482, column: 21, scope: !17188)
!17218 = !DILocation(line: 483, column: 19, scope: !17188)
!17219 = !DILocation(line: 484, column: 15, scope: !17164)
!17220 = !DILocation(line: 487, column: 15, scope: !17164)
!17221 = !DILocation(line: 489, column: 11, scope: !17093)
!17222 = !DILocation(line: 491, column: 24, scope: !17093)
!17223 = !DILocation(line: 491, column: 31, scope: !17093)
!17224 = !DILocation(line: 492, column: 24, scope: !17093)
!17225 = !DILocation(line: 492, column: 31, scope: !17093)
!17226 = !DILocation(line: 493, column: 24, scope: !17093)
!17227 = !DILocation(line: 493, column: 31, scope: !17093)
!17228 = !DILocation(line: 494, column: 24, scope: !17093)
!17229 = !DILocation(line: 494, column: 31, scope: !17093)
!17230 = !DILocation(line: 495, column: 24, scope: !17093)
!17231 = !DILocation(line: 495, column: 31, scope: !17093)
!17232 = !DILocation(line: 496, column: 24, scope: !17093)
!17233 = !DILocation(line: 496, column: 31, scope: !17093)
!17234 = !DILocation(line: 497, column: 24, scope: !17093)
!17235 = !DILocation(line: 497, column: 31, scope: !17093)
!17236 = !DILocation(line: 498, column: 26, scope: !17093)
!17237 = !DILocation(line: 498, column: 24, scope: !17093)
!17238 = !DILocation(line: 500, column: 15, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 500, column: 15)
!17240 = !DILocation(line: 500, column: 29, scope: !17239)
!17241 = !DILocation(line: 500, column: 15, scope: !17093)
!17242 = !DILocation(line: 502, column: 19, scope: !17243)
!17243 = distinct !DILexicalBlock(scope: !17244, file: !1378, line: 502, column: 19)
!17244 = distinct !DILexicalBlock(scope: !17239, file: !1378, line: 501, column: 13)
!17245 = !DILocation(line: 502, column: 19, scope: !17244)
!17246 = !DILocation(line: 503, column: 17, scope: !17243)
!17247 = !DILocation(line: 504, column: 15, scope: !17244)
!17248 = !DILocation(line: 509, column: 15, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 509, column: 15)
!17250 = !DILocation(line: 509, column: 33, scope: !17249)
!17251 = !DILocation(line: 509, column: 36, scope: !17249)
!17252 = !DILocation(line: 509, column: 55, scope: !17249)
!17253 = !DILocation(line: 509, column: 58, scope: !17249)
!17254 = !DILocation(line: 509, column: 15, scope: !17093)
!17255 = !DILocation(line: 510, column: 13, scope: !17249)
!17256 = !DILabel(scope: !17093, name: "c_and_shell_escape", file: !1378, line: 512)
!17257 = !DILocation(line: 512, column: 9, scope: !17093)
!17258 = !DILocation(line: 513, column: 15, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 513, column: 15)
!17260 = !DILocation(line: 513, column: 29, scope: !17259)
!17261 = !DILocation(line: 514, column: 15, scope: !17259)
!17262 = !DILocation(line: 514, column: 18, scope: !17259)
!17263 = !DILocation(line: 513, column: 15, scope: !17093)
!17264 = !DILocation(line: 515, column: 13, scope: !17259)
!17265 = !DILabel(scope: !17093, name: "c_escape", file: !1378, line: 517)
!17266 = !DILocation(line: 517, column: 9, scope: !17093)
!17267 = !DILocation(line: 518, column: 15, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 518, column: 15)
!17269 = !DILocation(line: 518, column: 15, scope: !17093)
!17270 = !DILocation(line: 520, column: 19, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17268, file: !1378, line: 519, column: 13)
!17272 = !DILocation(line: 520, column: 17, scope: !17271)
!17273 = !DILocation(line: 521, column: 15, scope: !17271)
!17274 = !DILocation(line: 523, column: 11, scope: !17093)
!17275 = !DILocation(line: 526, column: 18, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 526, column: 15)
!17277 = !DILocation(line: 526, column: 26, scope: !17276)
!17278 = !DILocation(line: 526, column: 15, scope: !17093)
!17279 = !DILocation(line: 526, column: 40, scope: !17276)
!17280 = !DILocation(line: 526, column: 47, scope: !17276)
!17281 = !DILocation(line: 526, column: 57, scope: !17276)
!17282 = !DILocation(line: 526, column: 65, scope: !17276)
!17283 = !DILocation(line: 527, column: 13, scope: !17276)
!17284 = !DILocation(line: 528, column: 11, scope: !17093)
!17285 = !DILocation(line: 530, column: 15, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 530, column: 15)
!17287 = !DILocation(line: 530, column: 17, scope: !17286)
!17288 = !DILocation(line: 530, column: 15, scope: !17093)
!17289 = !DILocation(line: 531, column: 13, scope: !17286)
!17290 = !DILocation(line: 532, column: 11, scope: !17093)
!17291 = !DILocation(line: 534, column: 36, scope: !17093)
!17292 = !DILocation(line: 535, column: 11, scope: !17093)
!17293 = !DILocation(line: 548, column: 15, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 548, column: 15)
!17295 = !DILocation(line: 548, column: 29, scope: !17294)
!17296 = !DILocation(line: 549, column: 15, scope: !17294)
!17297 = !DILocation(line: 549, column: 18, scope: !17294)
!17298 = !DILocation(line: 548, column: 15, scope: !17093)
!17299 = !DILocation(line: 550, column: 13, scope: !17294)
!17300 = !DILocation(line: 551, column: 11, scope: !17093)
!17301 = !DILocation(line: 554, column: 36, scope: !17093)
!17302 = !DILocation(line: 555, column: 36, scope: !17093)
!17303 = !DILocation(line: 556, column: 15, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 556, column: 15)
!17305 = !DILocation(line: 556, column: 29, scope: !17304)
!17306 = !DILocation(line: 556, column: 15, scope: !17093)
!17307 = !DILocation(line: 558, column: 19, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !1378, line: 558, column: 19)
!17309 = distinct !DILexicalBlock(scope: !17304, file: !1378, line: 557, column: 13)
!17310 = !DILocation(line: 558, column: 19, scope: !17309)
!17311 = !DILocation(line: 559, column: 17, scope: !17308)
!17312 = !DILocation(line: 561, column: 19, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17309, file: !1378, line: 561, column: 19)
!17314 = !DILocation(line: 561, column: 30, scope: !17313)
!17315 = !DILocation(line: 561, column: 35, scope: !17313)
!17316 = !DILocation(line: 561, column: 19, scope: !17309)
!17317 = !DILocation(line: 566, column: 37, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !17313, file: !1378, line: 562, column: 17)
!17319 = !DILocation(line: 566, column: 35, scope: !17318)
!17320 = !DILocation(line: 567, column: 30, scope: !17318)
!17321 = !DILocation(line: 568, column: 17, scope: !17318)
!17322 = !DILocation(line: 570, column: 15, scope: !17309)
!17323 = !DILocation(line: 570, column: 15, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !1378, line: 570, column: 15)
!17325 = distinct !DILexicalBlock(scope: !17309, file: !1378, line: 570, column: 15)
!17326 = !DILocation(line: 570, column: 15, scope: !17325)
!17327 = !DILocation(line: 571, column: 15, scope: !17309)
!17328 = !DILocation(line: 571, column: 15, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17330, file: !1378, line: 571, column: 15)
!17330 = distinct !DILexicalBlock(scope: !17309, file: !1378, line: 571, column: 15)
!17331 = !DILocation(line: 571, column: 15, scope: !17330)
!17332 = !DILocation(line: 572, column: 15, scope: !17309)
!17333 = !DILocation(line: 572, column: 15, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17335, file: !1378, line: 572, column: 15)
!17335 = distinct !DILexicalBlock(scope: !17309, file: !1378, line: 572, column: 15)
!17336 = !DILocation(line: 572, column: 15, scope: !17335)
!17337 = !DILocation(line: 573, column: 40, scope: !17309)
!17338 = !DILocation(line: 574, column: 13, scope: !17309)
!17339 = !DILocation(line: 575, column: 11, scope: !17093)
!17340 = !DILocation(line: 599, column: 36, scope: !17093)
!17341 = !DILocation(line: 600, column: 11, scope: !17093)
!17342 = !DILocalVariable(name: "m", scope: !17343, file: !1378, line: 610, type: !149)
!17343 = distinct !DILexicalBlock(scope: !17093, file: !1378, line: 608, column: 11)
!17344 = !DILocation(line: 610, column: 20, scope: !17343)
!17345 = !DILocalVariable(name: "printable", scope: !17343, file: !1378, line: 612, type: !141)
!17346 = !DILocation(line: 612, column: 18, scope: !17343)
!17347 = !DILocation(line: 614, column: 17, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17343, file: !1378, line: 614, column: 17)
!17349 = !DILocation(line: 614, column: 17, scope: !17343)
!17350 = !DILocation(line: 616, column: 19, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17348, file: !1378, line: 615, column: 15)
!17352 = !DILocation(line: 617, column: 29, scope: !17351)
!17353 = !DILocation(line: 617, column: 41, scope: !17351)
!17354 = !DILocation(line: 617, column: 27, scope: !17351)
!17355 = !DILocation(line: 618, column: 15, scope: !17351)
!17356 = !DILocalVariable(name: "mbstate", scope: !17357, file: !1378, line: 621, type: !1395)
!17357 = distinct !DILexicalBlock(scope: !17348, file: !1378, line: 620, column: 15)
!17358 = !DILocation(line: 621, column: 27, scope: !17357)
!17359 = !DILocation(line: 622, column: 17, scope: !17357)
!17360 = !DILocation(line: 624, column: 19, scope: !17357)
!17361 = !DILocation(line: 625, column: 27, scope: !17357)
!17362 = !DILocation(line: 626, column: 21, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !17357, file: !1378, line: 626, column: 21)
!17364 = !DILocation(line: 626, column: 29, scope: !17363)
!17365 = !DILocation(line: 626, column: 21, scope: !17357)
!17366 = !DILocation(line: 627, column: 37, scope: !17363)
!17367 = !DILocation(line: 627, column: 29, scope: !17363)
!17368 = !DILocation(line: 627, column: 27, scope: !17363)
!17369 = !DILocation(line: 627, column: 19, scope: !17363)
!17370 = !DILocation(line: 629, column: 17, scope: !17357)
!17371 = !DILocalVariable(name: "w", scope: !17372, file: !1378, line: 631, type: !751)
!17372 = distinct !DILexicalBlock(scope: !17357, file: !1378, line: 630, column: 19)
!17373 = !DILocation(line: 631, column: 29, scope: !17372)
!17374 = !DILocalVariable(name: "bytes", scope: !17372, file: !1378, line: 632, type: !149)
!17375 = !DILocation(line: 632, column: 28, scope: !17372)
!17376 = !DILocation(line: 632, column: 50, scope: !17372)
!17377 = !DILocation(line: 632, column: 54, scope: !17372)
!17378 = !DILocation(line: 632, column: 58, scope: !17372)
!17379 = !DILocation(line: 632, column: 56, scope: !17372)
!17380 = !DILocation(line: 633, column: 45, scope: !17372)
!17381 = !DILocation(line: 633, column: 56, scope: !17372)
!17382 = !DILocation(line: 633, column: 60, scope: !17372)
!17383 = !DILocation(line: 633, column: 58, scope: !17372)
!17384 = !DILocation(line: 633, column: 53, scope: !17372)
!17385 = !DILocation(line: 632, column: 36, scope: !17372)
!17386 = !DILocation(line: 634, column: 25, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17372, file: !1378, line: 634, column: 25)
!17388 = !DILocation(line: 634, column: 31, scope: !17387)
!17389 = !DILocation(line: 634, column: 25, scope: !17372)
!17390 = !DILocation(line: 635, column: 23, scope: !17387)
!17391 = !DILocation(line: 636, column: 30, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17387, file: !1378, line: 636, column: 30)
!17393 = !DILocation(line: 636, column: 36, scope: !17392)
!17394 = !DILocation(line: 636, column: 30, scope: !17387)
!17395 = !DILocation(line: 638, column: 35, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17392, file: !1378, line: 637, column: 23)
!17397 = !DILocation(line: 639, column: 25, scope: !17396)
!17398 = !DILocation(line: 641, column: 30, scope: !17399)
!17399 = distinct !DILexicalBlock(scope: !17392, file: !1378, line: 641, column: 30)
!17400 = !DILocation(line: 641, column: 36, scope: !17399)
!17401 = !DILocation(line: 641, column: 30, scope: !17392)
!17402 = !DILocation(line: 643, column: 35, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17399, file: !1378, line: 642, column: 23)
!17404 = !DILocation(line: 644, column: 25, scope: !17403)
!17405 = !DILocation(line: 644, column: 32, scope: !17403)
!17406 = !DILocation(line: 644, column: 36, scope: !17403)
!17407 = !DILocation(line: 644, column: 34, scope: !17403)
!17408 = !DILocation(line: 644, column: 40, scope: !17403)
!17409 = !DILocation(line: 644, column: 38, scope: !17403)
!17410 = !DILocation(line: 644, column: 48, scope: !17403)
!17411 = !DILocation(line: 644, column: 51, scope: !17403)
!17412 = !DILocation(line: 644, column: 55, scope: !17403)
!17413 = !DILocation(line: 644, column: 59, scope: !17403)
!17414 = !DILocation(line: 644, column: 57, scope: !17403)
!17415 = !DILocation(line: 0, scope: !17403)
!17416 = !DILocation(line: 645, column: 28, scope: !17403)
!17417 = distinct !{!17417, !17404, !17416}
!17418 = !DILocation(line: 646, column: 25, scope: !17403)
!17419 = !DILocation(line: 654, column: 44, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17421, file: !1378, line: 654, column: 29)
!17421 = distinct !DILexicalBlock(scope: !17399, file: !1378, line: 649, column: 23)
!17422 = !DILocation(line: 655, column: 29, scope: !17420)
!17423 = !DILocation(line: 655, column: 32, scope: !17420)
!17424 = !DILocation(line: 655, column: 46, scope: !17420)
!17425 = !DILocation(line: 654, column: 29, scope: !17421)
!17426 = !DILocalVariable(name: "j", scope: !17427, file: !1378, line: 657, type: !149)
!17427 = distinct !DILexicalBlock(scope: !17420, file: !1378, line: 656, column: 27)
!17428 = !DILocation(line: 657, column: 36, scope: !17427)
!17429 = !DILocation(line: 658, column: 36, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17427, file: !1378, line: 658, column: 29)
!17431 = !DILocation(line: 658, column: 34, scope: !17430)
!17432 = !DILocation(line: 658, column: 41, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17430, file: !1378, line: 658, column: 29)
!17434 = !DILocation(line: 658, column: 45, scope: !17433)
!17435 = !DILocation(line: 658, column: 43, scope: !17433)
!17436 = !DILocation(line: 658, column: 29, scope: !17430)
!17437 = !DILocation(line: 659, column: 39, scope: !17433)
!17438 = !DILocation(line: 659, column: 43, scope: !17433)
!17439 = !DILocation(line: 659, column: 47, scope: !17433)
!17440 = !DILocation(line: 659, column: 45, scope: !17433)
!17441 = !DILocation(line: 659, column: 51, scope: !17433)
!17442 = !DILocation(line: 659, column: 49, scope: !17433)
!17443 = !DILocation(line: 659, column: 31, scope: !17433)
!17444 = !DILocation(line: 663, column: 35, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17433, file: !1378, line: 660, column: 33)
!17446 = !DILocation(line: 666, column: 35, scope: !17445)
!17447 = !DILocation(line: 667, column: 33, scope: !17445)
!17448 = !DILocation(line: 658, column: 53, scope: !17433)
!17449 = !DILocation(line: 658, column: 29, scope: !17433)
!17450 = distinct !{!17450, !17436, !17451}
!17451 = !DILocation(line: 667, column: 33, scope: !17430)
!17452 = !DILocation(line: 668, column: 27, scope: !17427)
!17453 = !DILocation(line: 670, column: 41, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17421, file: !1378, line: 670, column: 29)
!17455 = !DILocation(line: 670, column: 31, scope: !17454)
!17456 = !DILocation(line: 670, column: 29, scope: !17421)
!17457 = !DILocation(line: 671, column: 37, scope: !17454)
!17458 = !DILocation(line: 671, column: 27, scope: !17454)
!17459 = !DILocation(line: 672, column: 30, scope: !17421)
!17460 = !DILocation(line: 672, column: 27, scope: !17421)
!17461 = !DILocation(line: 674, column: 19, scope: !17372)
!17462 = !DILocation(line: 675, column: 26, scope: !17357)
!17463 = !DILocation(line: 675, column: 24, scope: !17357)
!17464 = distinct !{!17464, !17370, !17465}
!17465 = !DILocation(line: 675, column: 44, scope: !17357)
!17466 = !DILocation(line: 678, column: 40, scope: !17343)
!17467 = !DILocation(line: 678, column: 38, scope: !17343)
!17468 = !DILocation(line: 680, column: 21, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17343, file: !1378, line: 680, column: 17)
!17470 = !DILocation(line: 680, column: 19, scope: !17469)
!17471 = !DILocation(line: 680, column: 23, scope: !17469)
!17472 = !DILocation(line: 680, column: 27, scope: !17469)
!17473 = !DILocation(line: 680, column: 45, scope: !17469)
!17474 = !DILocation(line: 680, column: 50, scope: !17469)
!17475 = !DILocation(line: 680, column: 17, scope: !17343)
!17476 = !DILocalVariable(name: "ilim", scope: !17477, file: !1378, line: 684, type: !149)
!17477 = distinct !DILexicalBlock(scope: !17469, file: !1378, line: 681, column: 15)
!17478 = !DILocation(line: 684, column: 24, scope: !17477)
!17479 = !DILocation(line: 684, column: 31, scope: !17477)
!17480 = !DILocation(line: 684, column: 35, scope: !17477)
!17481 = !DILocation(line: 684, column: 33, scope: !17477)
!17482 = !DILocation(line: 686, column: 17, scope: !17477)
!17483 = !DILocation(line: 688, column: 25, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17485, file: !1378, line: 688, column: 25)
!17485 = distinct !DILexicalBlock(scope: !17486, file: !1378, line: 687, column: 19)
!17486 = distinct !DILexicalBlock(scope: !17487, file: !1378, line: 686, column: 17)
!17487 = distinct !DILexicalBlock(scope: !17477, file: !1378, line: 686, column: 17)
!17488 = !DILocation(line: 688, column: 43, scope: !17484)
!17489 = !DILocation(line: 688, column: 48, scope: !17484)
!17490 = !DILocation(line: 688, column: 25, scope: !17485)
!17491 = !DILocation(line: 690, column: 25, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17484, file: !1378, line: 689, column: 23)
!17493 = !DILocation(line: 690, column: 25, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17495, file: !1378, line: 690, column: 25)
!17495 = distinct !DILexicalBlock(scope: !17492, file: !1378, line: 690, column: 25)
!17496 = !DILocation(line: 690, column: 25, scope: !17495)
!17497 = !DILocation(line: 690, column: 25, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17495, file: !1378, line: 690, column: 25)
!17499 = !DILocation(line: 690, column: 25, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17498, file: !1378, line: 690, column: 25)
!17501 = !DILocation(line: 690, column: 25, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17503, file: !1378, line: 690, column: 25)
!17503 = distinct !DILexicalBlock(scope: !17500, file: !1378, line: 690, column: 25)
!17504 = !DILocation(line: 690, column: 25, scope: !17503)
!17505 = !DILocation(line: 690, column: 25, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17507, file: !1378, line: 690, column: 25)
!17507 = distinct !DILexicalBlock(scope: !17500, file: !1378, line: 690, column: 25)
!17508 = !DILocation(line: 690, column: 25, scope: !17507)
!17509 = !DILocation(line: 690, column: 25, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17511, file: !1378, line: 690, column: 25)
!17511 = distinct !DILexicalBlock(scope: !17500, file: !1378, line: 690, column: 25)
!17512 = !DILocation(line: 690, column: 25, scope: !17511)
!17513 = !DILocation(line: 690, column: 25, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17515, file: !1378, line: 690, column: 25)
!17515 = distinct !DILexicalBlock(scope: !17495, file: !1378, line: 690, column: 25)
!17516 = !DILocation(line: 690, column: 25, scope: !17515)
!17517 = !DILocation(line: 691, column: 25, scope: !17492)
!17518 = !DILocation(line: 691, column: 25, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17520, file: !1378, line: 691, column: 25)
!17520 = distinct !DILexicalBlock(scope: !17492, file: !1378, line: 691, column: 25)
!17521 = !DILocation(line: 691, column: 25, scope: !17520)
!17522 = !DILocation(line: 692, column: 25, scope: !17492)
!17523 = !DILocation(line: 692, column: 25, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17525, file: !1378, line: 692, column: 25)
!17525 = distinct !DILexicalBlock(scope: !17492, file: !1378, line: 692, column: 25)
!17526 = !DILocation(line: 692, column: 25, scope: !17525)
!17527 = !DILocation(line: 693, column: 36, scope: !17492)
!17528 = !DILocation(line: 693, column: 38, scope: !17492)
!17529 = !DILocation(line: 693, column: 33, scope: !17492)
!17530 = !DILocation(line: 693, column: 29, scope: !17492)
!17531 = !DILocation(line: 693, column: 27, scope: !17492)
!17532 = !DILocation(line: 694, column: 23, scope: !17492)
!17533 = !DILocation(line: 695, column: 30, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17484, file: !1378, line: 695, column: 30)
!17535 = !DILocation(line: 695, column: 30, scope: !17484)
!17536 = !DILocation(line: 697, column: 25, scope: !17537)
!17537 = distinct !DILexicalBlock(scope: !17534, file: !1378, line: 696, column: 23)
!17538 = !DILocation(line: 697, column: 25, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17540, file: !1378, line: 697, column: 25)
!17540 = distinct !DILexicalBlock(scope: !17537, file: !1378, line: 697, column: 25)
!17541 = !DILocation(line: 697, column: 25, scope: !17540)
!17542 = !DILocation(line: 698, column: 40, scope: !17537)
!17543 = !DILocation(line: 699, column: 23, scope: !17537)
!17544 = !DILocation(line: 700, column: 25, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17485, file: !1378, line: 700, column: 25)
!17546 = !DILocation(line: 700, column: 33, scope: !17545)
!17547 = !DILocation(line: 700, column: 35, scope: !17545)
!17548 = !DILocation(line: 700, column: 30, scope: !17545)
!17549 = !DILocation(line: 700, column: 25, scope: !17485)
!17550 = !DILocation(line: 701, column: 23, scope: !17545)
!17551 = !DILocation(line: 702, column: 21, scope: !17485)
!17552 = !DILocation(line: 702, column: 21, scope: !17553)
!17553 = distinct !DILexicalBlock(scope: !17554, file: !1378, line: 702, column: 21)
!17554 = distinct !DILexicalBlock(scope: !17485, file: !1378, line: 702, column: 21)
!17555 = !DILocation(line: 702, column: 21, scope: !17554)
!17556 = !DILocation(line: 702, column: 21, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17553, file: !1378, line: 702, column: 21)
!17558 = !DILocation(line: 702, column: 21, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17560, file: !1378, line: 702, column: 21)
!17560 = distinct !DILexicalBlock(scope: !17557, file: !1378, line: 702, column: 21)
!17561 = !DILocation(line: 702, column: 21, scope: !17560)
!17562 = !DILocation(line: 702, column: 21, scope: !17563)
!17563 = distinct !DILexicalBlock(scope: !17564, file: !1378, line: 702, column: 21)
!17564 = distinct !DILexicalBlock(scope: !17557, file: !1378, line: 702, column: 21)
!17565 = !DILocation(line: 702, column: 21, scope: !17564)
!17566 = !DILocation(line: 703, column: 21, scope: !17485)
!17567 = !DILocation(line: 703, column: 21, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17569, file: !1378, line: 703, column: 21)
!17569 = distinct !DILexicalBlock(scope: !17485, file: !1378, line: 703, column: 21)
!17570 = !DILocation(line: 703, column: 21, scope: !17569)
!17571 = !DILocation(line: 704, column: 25, scope: !17485)
!17572 = !DILocation(line: 704, column: 29, scope: !17485)
!17573 = !DILocation(line: 704, column: 23, scope: !17485)
!17574 = !DILocation(line: 686, column: 17, scope: !17486)
!17575 = distinct !{!17575, !17576, !17577}
!17576 = !DILocation(line: 686, column: 17, scope: !17487)
!17577 = !DILocation(line: 705, column: 19, scope: !17487)
!17578 = !DILocation(line: 707, column: 17, scope: !17477)
!17579 = !DILocation(line: 710, column: 9, scope: !17093)
!17580 = !DILocation(line: 712, column: 16, scope: !17581)
!17581 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 712, column: 11)
!17582 = !DILocation(line: 712, column: 34, scope: !17581)
!17583 = !DILocation(line: 712, column: 37, scope: !17581)
!17584 = !DILocation(line: 712, column: 51, scope: !17581)
!17585 = !DILocation(line: 713, column: 15, scope: !17581)
!17586 = !DILocation(line: 713, column: 18, scope: !17581)
!17587 = !DILocation(line: 714, column: 14, scope: !17581)
!17588 = !DILocation(line: 714, column: 17, scope: !17581)
!17589 = !DILocation(line: 715, column: 14, scope: !17581)
!17590 = !DILocation(line: 715, column: 17, scope: !17581)
!17591 = !DILocation(line: 715, column: 33, scope: !17581)
!17592 = !DILocation(line: 715, column: 35, scope: !17581)
!17593 = !DILocation(line: 715, column: 51, scope: !17581)
!17594 = !DILocation(line: 715, column: 53, scope: !17581)
!17595 = !DILocation(line: 715, column: 47, scope: !17581)
!17596 = !DILocation(line: 715, column: 65, scope: !17581)
!17597 = !DILocation(line: 716, column: 11, scope: !17581)
!17598 = !DILocation(line: 716, column: 15, scope: !17581)
!17599 = !DILocation(line: 712, column: 11, scope: !17039)
!17600 = !DILocation(line: 717, column: 9, scope: !17581)
!17601 = !DILabel(scope: !17039, name: "store_escape", file: !1378, line: 719)
!17602 = !DILocation(line: 719, column: 5, scope: !17039)
!17603 = !DILocation(line: 720, column: 7, scope: !17039)
!17604 = !DILocation(line: 720, column: 7, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17606, file: !1378, line: 720, column: 7)
!17606 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 720, column: 7)
!17607 = !DILocation(line: 720, column: 7, scope: !17606)
!17608 = !DILocation(line: 720, column: 7, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17606, file: !1378, line: 720, column: 7)
!17610 = !DILocation(line: 720, column: 7, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17609, file: !1378, line: 720, column: 7)
!17612 = !DILocation(line: 720, column: 7, scope: !17613)
!17613 = distinct !DILexicalBlock(scope: !17614, file: !1378, line: 720, column: 7)
!17614 = distinct !DILexicalBlock(scope: !17611, file: !1378, line: 720, column: 7)
!17615 = !DILocation(line: 720, column: 7, scope: !17614)
!17616 = !DILocation(line: 720, column: 7, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17618, file: !1378, line: 720, column: 7)
!17618 = distinct !DILexicalBlock(scope: !17611, file: !1378, line: 720, column: 7)
!17619 = !DILocation(line: 720, column: 7, scope: !17618)
!17620 = !DILocation(line: 720, column: 7, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17622, file: !1378, line: 720, column: 7)
!17622 = distinct !DILexicalBlock(scope: !17611, file: !1378, line: 720, column: 7)
!17623 = !DILocation(line: 720, column: 7, scope: !17622)
!17624 = !DILocation(line: 720, column: 7, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17626, file: !1378, line: 720, column: 7)
!17626 = distinct !DILexicalBlock(scope: !17606, file: !1378, line: 720, column: 7)
!17627 = !DILocation(line: 720, column: 7, scope: !17626)
!17628 = !DILabel(scope: !17039, name: "store_c", file: !1378, line: 722)
!17629 = !DILocation(line: 722, column: 5, scope: !17039)
!17630 = !DILocation(line: 723, column: 7, scope: !17039)
!17631 = !DILocation(line: 723, column: 7, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17633, file: !1378, line: 723, column: 7)
!17633 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 723, column: 7)
!17634 = !DILocation(line: 723, column: 7, scope: !17633)
!17635 = !DILocation(line: 723, column: 7, scope: !17636)
!17636 = distinct !DILexicalBlock(scope: !17632, file: !1378, line: 723, column: 7)
!17637 = !DILocation(line: 723, column: 7, scope: !17638)
!17638 = distinct !DILexicalBlock(scope: !17639, file: !1378, line: 723, column: 7)
!17639 = distinct !DILexicalBlock(scope: !17636, file: !1378, line: 723, column: 7)
!17640 = !DILocation(line: 723, column: 7, scope: !17639)
!17641 = !DILocation(line: 723, column: 7, scope: !17642)
!17642 = distinct !DILexicalBlock(scope: !17643, file: !1378, line: 723, column: 7)
!17643 = distinct !DILexicalBlock(scope: !17636, file: !1378, line: 723, column: 7)
!17644 = !DILocation(line: 723, column: 7, scope: !17643)
!17645 = !DILocation(line: 724, column: 7, scope: !17039)
!17646 = !DILocation(line: 724, column: 7, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17648, file: !1378, line: 724, column: 7)
!17648 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 724, column: 7)
!17649 = !DILocation(line: 724, column: 7, scope: !17648)
!17650 = !DILocation(line: 726, column: 13, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17039, file: !1378, line: 726, column: 11)
!17652 = !DILocation(line: 726, column: 11, scope: !17039)
!17653 = !DILocation(line: 727, column: 38, scope: !17651)
!17654 = !DILocation(line: 727, column: 9, scope: !17651)
!17655 = !DILocation(line: 728, column: 5, scope: !17039)
!17656 = !DILocation(line: 400, column: 75, scope: !17028)
!17657 = !DILocation(line: 400, column: 3, scope: !17028)
!17658 = distinct !{!17658, !17037, !17659}
!17659 = !DILocation(line: 728, column: 5, scope: !17025)
!17660 = !DILocation(line: 730, column: 7, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 730, column: 7)
!17662 = !DILocation(line: 730, column: 11, scope: !17661)
!17663 = !DILocation(line: 730, column: 16, scope: !17661)
!17664 = !DILocation(line: 730, column: 19, scope: !17661)
!17665 = !DILocation(line: 730, column: 33, scope: !17661)
!17666 = !DILocation(line: 731, column: 7, scope: !17661)
!17667 = !DILocation(line: 731, column: 10, scope: !17661)
!17668 = !DILocation(line: 730, column: 7, scope: !16887)
!17669 = !DILocation(line: 732, column: 5, scope: !17661)
!17670 = !DILocation(line: 738, column: 7, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 738, column: 7)
!17672 = !DILocation(line: 738, column: 21, scope: !17671)
!17673 = !DILocation(line: 738, column: 51, scope: !17671)
!17674 = !DILocation(line: 738, column: 56, scope: !17671)
!17675 = !DILocation(line: 739, column: 7, scope: !17671)
!17676 = !DILocation(line: 739, column: 10, scope: !17671)
!17677 = !DILocation(line: 738, column: 7, scope: !16887)
!17678 = !DILocation(line: 741, column: 11, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17680, file: !1378, line: 741, column: 11)
!17680 = distinct !DILexicalBlock(scope: !17671, file: !1378, line: 740, column: 5)
!17681 = !DILocation(line: 741, column: 11, scope: !17680)
!17682 = !DILocation(line: 742, column: 42, scope: !17679)
!17683 = !DILocation(line: 742, column: 50, scope: !17679)
!17684 = !DILocation(line: 742, column: 67, scope: !17679)
!17685 = !DILocation(line: 742, column: 72, scope: !17679)
!17686 = !DILocation(line: 744, column: 42, scope: !17679)
!17687 = !DILocation(line: 744, column: 49, scope: !17679)
!17688 = !DILocation(line: 745, column: 42, scope: !17679)
!17689 = !DILocation(line: 745, column: 54, scope: !17679)
!17690 = !DILocation(line: 742, column: 16, scope: !17679)
!17691 = !DILocation(line: 742, column: 9, scope: !17679)
!17692 = !DILocation(line: 746, column: 18, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17679, file: !1378, line: 746, column: 16)
!17694 = !DILocation(line: 746, column: 29, scope: !17693)
!17695 = !DILocation(line: 746, column: 32, scope: !17693)
!17696 = !DILocation(line: 746, column: 16, scope: !17679)
!17697 = !DILocation(line: 749, column: 24, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17693, file: !1378, line: 747, column: 9)
!17699 = !DILocation(line: 749, column: 22, scope: !17698)
!17700 = !DILocation(line: 750, column: 15, scope: !17698)
!17701 = !DILocation(line: 751, column: 11, scope: !17698)
!17702 = !DILocation(line: 753, column: 5, scope: !17680)
!17703 = !DILocation(line: 755, column: 7, scope: !17704)
!17704 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 755, column: 7)
!17705 = !DILocation(line: 755, column: 20, scope: !17704)
!17706 = !DILocation(line: 755, column: 24, scope: !17704)
!17707 = !DILocation(line: 755, column: 7, scope: !16887)
!17708 = !DILocation(line: 756, column: 5, scope: !17704)
!17709 = !DILocation(line: 756, column: 13, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17711, file: !1378, line: 756, column: 5)
!17711 = distinct !DILexicalBlock(scope: !17704, file: !1378, line: 756, column: 5)
!17712 = !DILocation(line: 756, column: 12, scope: !17710)
!17713 = !DILocation(line: 756, column: 5, scope: !17711)
!17714 = !DILocation(line: 757, column: 7, scope: !17710)
!17715 = !DILocation(line: 757, column: 7, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17717, file: !1378, line: 757, column: 7)
!17717 = distinct !DILexicalBlock(scope: !17710, file: !1378, line: 757, column: 7)
!17718 = !DILocation(line: 757, column: 7, scope: !17717)
!17719 = !DILocation(line: 756, column: 39, scope: !17710)
!17720 = !DILocation(line: 756, column: 5, scope: !17710)
!17721 = distinct !{!17721, !17713, !17722}
!17722 = !DILocation(line: 757, column: 7, scope: !17711)
!17723 = !DILocation(line: 759, column: 7, scope: !17724)
!17724 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 759, column: 7)
!17725 = !DILocation(line: 759, column: 13, scope: !17724)
!17726 = !DILocation(line: 759, column: 11, scope: !17724)
!17727 = !DILocation(line: 759, column: 7, scope: !16887)
!17728 = !DILocation(line: 760, column: 5, scope: !17724)
!17729 = !DILocation(line: 760, column: 12, scope: !17724)
!17730 = !DILocation(line: 760, column: 17, scope: !17724)
!17731 = !DILocation(line: 761, column: 10, scope: !16887)
!17732 = !DILocation(line: 761, column: 3, scope: !16887)
!17733 = !DILabel(scope: !16887, name: "force_outer_quoting_style", file: !1378, line: 763)
!17734 = !DILocation(line: 763, column: 2, scope: !16887)
!17735 = !DILocation(line: 766, column: 7, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !16887, file: !1378, line: 766, column: 7)
!17737 = !DILocation(line: 766, column: 21, scope: !17736)
!17738 = !DILocation(line: 766, column: 51, scope: !17736)
!17739 = !DILocation(line: 766, column: 54, scope: !17736)
!17740 = !DILocation(line: 766, column: 7, scope: !16887)
!17741 = !DILocation(line: 767, column: 19, scope: !17736)
!17742 = !DILocation(line: 767, column: 5, scope: !17736)
!17743 = !DILocation(line: 768, column: 36, scope: !16887)
!17744 = !DILocation(line: 768, column: 44, scope: !16887)
!17745 = !DILocation(line: 768, column: 56, scope: !16887)
!17746 = !DILocation(line: 768, column: 61, scope: !16887)
!17747 = !DILocation(line: 769, column: 36, scope: !16887)
!17748 = !DILocation(line: 770, column: 36, scope: !16887)
!17749 = !DILocation(line: 770, column: 42, scope: !16887)
!17750 = !DILocation(line: 771, column: 36, scope: !16887)
!17751 = !DILocation(line: 771, column: 48, scope: !16887)
!17752 = !DILocation(line: 768, column: 10, scope: !16887)
!17753 = !DILocation(line: 768, column: 3, scope: !16887)
!17754 = !DILocation(line: 772, column: 1, scope: !16887)
!17755 = distinct !DISubprogram(name: "gettext_quote", scope: !1378, file: !1378, line: 207, type: !17756, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!17756 = !DISubroutineType(types: !17757)
!17757 = !{!146, !146, !95}
!17758 = !DILocalVariable(name: "msgid", arg: 1, scope: !17755, file: !1378, line: 207, type: !146)
!17759 = !DILocation(line: 207, column: 28, scope: !17755)
!17760 = !DILocalVariable(name: "s", arg: 2, scope: !17755, file: !1378, line: 207, type: !95)
!17761 = !DILocation(line: 207, column: 54, scope: !17755)
!17762 = !DILocalVariable(name: "translation", scope: !17755, file: !1378, line: 209, type: !146)
!17763 = !DILocation(line: 209, column: 15, scope: !17755)
!17764 = !DILocation(line: 209, column: 29, scope: !17755)
!17765 = !DILocalVariable(name: "locale_code", scope: !17755, file: !1378, line: 210, type: !146)
!17766 = !DILocation(line: 210, column: 15, scope: !17755)
!17767 = !DILocation(line: 212, column: 7, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17755, file: !1378, line: 212, column: 7)
!17769 = !DILocation(line: 212, column: 22, scope: !17768)
!17770 = !DILocation(line: 212, column: 19, scope: !17768)
!17771 = !DILocation(line: 212, column: 7, scope: !17755)
!17772 = !DILocation(line: 213, column: 12, scope: !17768)
!17773 = !DILocation(line: 213, column: 5, scope: !17768)
!17774 = !DILocation(line: 233, column: 17, scope: !17755)
!17775 = !DILocation(line: 233, column: 15, scope: !17755)
!17776 = !DILocation(line: 234, column: 7, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17755, file: !1378, line: 234, column: 7)
!17778 = !DILocation(line: 234, column: 7, scope: !17755)
!17779 = !DILocation(line: 235, column: 12, scope: !17777)
!17780 = !DILocation(line: 235, column: 21, scope: !17777)
!17781 = !DILocation(line: 235, column: 5, scope: !17777)
!17782 = !DILocation(line: 236, column: 7, scope: !17783)
!17783 = distinct !DILexicalBlock(scope: !17755, file: !1378, line: 236, column: 7)
!17784 = !DILocation(line: 236, column: 7, scope: !17755)
!17785 = !DILocation(line: 237, column: 12, scope: !17783)
!17786 = !DILocation(line: 237, column: 21, scope: !17783)
!17787 = !DILocation(line: 237, column: 5, scope: !17783)
!17788 = !DILocation(line: 239, column: 11, scope: !17755)
!17789 = !DILocation(line: 239, column: 13, scope: !17755)
!17790 = !DILocation(line: 239, column: 3, scope: !17755)
!17791 = !DILocation(line: 240, column: 1, scope: !17755)
!17792 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1378, file: !1378, line: 799, type: !17793, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!17793 = !DISubroutineType(types: !17794)
!17794 = !{!143, !146, !149, !1387}
!17795 = !DILocalVariable(name: "arg", arg: 1, scope: !17792, file: !1378, line: 799, type: !146)
!17796 = !DILocation(line: 799, column: 29, scope: !17792)
!17797 = !DILocalVariable(name: "argsize", arg: 2, scope: !17792, file: !1378, line: 799, type: !149)
!17798 = !DILocation(line: 799, column: 41, scope: !17792)
!17799 = !DILocalVariable(name: "o", arg: 3, scope: !17792, file: !1378, line: 800, type: !1387)
!17800 = !DILocation(line: 800, column: 47, scope: !17792)
!17801 = !DILocation(line: 802, column: 30, scope: !17792)
!17802 = !DILocation(line: 802, column: 35, scope: !17792)
!17803 = !DILocation(line: 802, column: 50, scope: !17792)
!17804 = !DILocation(line: 802, column: 10, scope: !17792)
!17805 = !DILocation(line: 802, column: 3, scope: !17792)
!17806 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1378, file: !1378, line: 812, type: !17807, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!17807 = !DISubroutineType(types: !17808)
!17808 = !{!143, !146, !149, !148, !1387}
!17809 = !DILocalVariable(name: "arg", arg: 1, scope: !17806, file: !1378, line: 812, type: !146)
!17810 = !DILocation(line: 812, column: 33, scope: !17806)
!17811 = !DILocalVariable(name: "argsize", arg: 2, scope: !17806, file: !1378, line: 812, type: !149)
!17812 = !DILocation(line: 812, column: 45, scope: !17806)
!17813 = !DILocalVariable(name: "size", arg: 3, scope: !17806, file: !1378, line: 812, type: !148)
!17814 = !DILocation(line: 812, column: 62, scope: !17806)
!17815 = !DILocalVariable(name: "o", arg: 4, scope: !17806, file: !1378, line: 813, type: !1387)
!17816 = !DILocation(line: 813, column: 51, scope: !17806)
!17817 = !DILocalVariable(name: "p", scope: !17806, file: !1378, line: 815, type: !1387)
!17818 = !DILocation(line: 815, column: 33, scope: !17806)
!17819 = !DILocation(line: 815, column: 37, scope: !17806)
!17820 = !DILocation(line: 815, column: 41, scope: !17806)
!17821 = !DILocalVariable(name: "e", scope: !17806, file: !1378, line: 816, type: !27)
!17822 = !DILocation(line: 816, column: 7, scope: !17806)
!17823 = !DILocation(line: 816, column: 11, scope: !17806)
!17824 = !DILocalVariable(name: "flags", scope: !17806, file: !1378, line: 818, type: !27)
!17825 = !DILocation(line: 818, column: 7, scope: !17806)
!17826 = !DILocation(line: 818, column: 15, scope: !17806)
!17827 = !DILocation(line: 818, column: 18, scope: !17806)
!17828 = !DILocation(line: 818, column: 27, scope: !17806)
!17829 = !DILocation(line: 818, column: 24, scope: !17806)
!17830 = !DILocalVariable(name: "bufsize", scope: !17806, file: !1378, line: 819, type: !149)
!17831 = !DILocation(line: 819, column: 10, scope: !17806)
!17832 = !DILocation(line: 819, column: 52, scope: !17806)
!17833 = !DILocation(line: 819, column: 57, scope: !17806)
!17834 = !DILocation(line: 819, column: 66, scope: !17806)
!17835 = !DILocation(line: 819, column: 69, scope: !17806)
!17836 = !DILocation(line: 820, column: 46, scope: !17806)
!17837 = !DILocation(line: 820, column: 53, scope: !17806)
!17838 = !DILocation(line: 820, column: 56, scope: !17806)
!17839 = !DILocation(line: 821, column: 46, scope: !17806)
!17840 = !DILocation(line: 821, column: 49, scope: !17806)
!17841 = !DILocation(line: 822, column: 46, scope: !17806)
!17842 = !DILocation(line: 822, column: 49, scope: !17806)
!17843 = !DILocation(line: 819, column: 20, scope: !17806)
!17844 = !DILocation(line: 822, column: 62, scope: !17806)
!17845 = !DILocalVariable(name: "buf", scope: !17806, file: !1378, line: 823, type: !143)
!17846 = !DILocation(line: 823, column: 9, scope: !17806)
!17847 = !DILocation(line: 823, column: 27, scope: !17806)
!17848 = !DILocation(line: 823, column: 15, scope: !17806)
!17849 = !DILocation(line: 824, column: 29, scope: !17806)
!17850 = !DILocation(line: 824, column: 34, scope: !17806)
!17851 = !DILocation(line: 824, column: 43, scope: !17806)
!17852 = !DILocation(line: 824, column: 48, scope: !17806)
!17853 = !DILocation(line: 824, column: 57, scope: !17806)
!17854 = !DILocation(line: 824, column: 60, scope: !17806)
!17855 = !DILocation(line: 824, column: 67, scope: !17806)
!17856 = !DILocation(line: 825, column: 29, scope: !17806)
!17857 = !DILocation(line: 825, column: 32, scope: !17806)
!17858 = !DILocation(line: 826, column: 29, scope: !17806)
!17859 = !DILocation(line: 826, column: 32, scope: !17806)
!17860 = !DILocation(line: 826, column: 44, scope: !17806)
!17861 = !DILocation(line: 826, column: 47, scope: !17806)
!17862 = !DILocation(line: 824, column: 3, scope: !17806)
!17863 = !DILocation(line: 827, column: 11, scope: !17806)
!17864 = !DILocation(line: 827, column: 3, scope: !17806)
!17865 = !DILocation(line: 827, column: 9, scope: !17806)
!17866 = !DILocation(line: 828, column: 7, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17806, file: !1378, line: 828, column: 7)
!17868 = !DILocation(line: 828, column: 7, scope: !17806)
!17869 = !DILocation(line: 829, column: 13, scope: !17867)
!17870 = !DILocation(line: 829, column: 21, scope: !17867)
!17871 = !DILocation(line: 829, column: 6, scope: !17867)
!17872 = !DILocation(line: 829, column: 11, scope: !17867)
!17873 = !DILocation(line: 829, column: 5, scope: !17867)
!17874 = !DILocation(line: 830, column: 10, scope: !17806)
!17875 = !DILocation(line: 830, column: 3, scope: !17806)
!17876 = distinct !DISubprogram(name: "quotearg_free", scope: !1378, file: !1378, line: 848, type: !526, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!17877 = !DILocalVariable(name: "sv", scope: !17876, file: !1378, line: 850, type: !1390)
!17878 = !DILocation(line: 850, column: 19, scope: !17876)
!17879 = !DILocation(line: 850, column: 24, scope: !17876)
!17880 = !DILocalVariable(name: "i", scope: !17876, file: !1378, line: 851, type: !27)
!17881 = !DILocation(line: 851, column: 7, scope: !17876)
!17882 = !DILocation(line: 852, column: 10, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17876, file: !1378, line: 852, column: 3)
!17884 = !DILocation(line: 852, column: 8, scope: !17883)
!17885 = !DILocation(line: 852, column: 15, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17883, file: !1378, line: 852, column: 3)
!17887 = !DILocation(line: 852, column: 19, scope: !17886)
!17888 = !DILocation(line: 852, column: 17, scope: !17886)
!17889 = !DILocation(line: 852, column: 3, scope: !17883)
!17890 = !DILocation(line: 853, column: 11, scope: !17886)
!17891 = !DILocation(line: 853, column: 14, scope: !17886)
!17892 = !DILocation(line: 853, column: 17, scope: !17886)
!17893 = !DILocation(line: 853, column: 5, scope: !17886)
!17894 = !DILocation(line: 852, column: 28, scope: !17886)
!17895 = !DILocation(line: 852, column: 3, scope: !17886)
!17896 = distinct !{!17896, !17889, !17897}
!17897 = !DILocation(line: 853, column: 20, scope: !17883)
!17898 = !DILocation(line: 854, column: 7, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17876, file: !1378, line: 854, column: 7)
!17900 = !DILocation(line: 854, column: 13, scope: !17899)
!17901 = !DILocation(line: 854, column: 17, scope: !17899)
!17902 = !DILocation(line: 854, column: 7, scope: !17876)
!17903 = !DILocation(line: 856, column: 13, scope: !17904)
!17904 = distinct !DILexicalBlock(scope: !17899, file: !1378, line: 855, column: 5)
!17905 = !DILocation(line: 856, column: 19, scope: !17904)
!17906 = !DILocation(line: 856, column: 7, scope: !17904)
!17907 = !DILocation(line: 857, column: 21, scope: !17904)
!17908 = !DILocation(line: 858, column: 20, scope: !17904)
!17909 = !DILocation(line: 859, column: 5, scope: !17904)
!17910 = !DILocation(line: 860, column: 7, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17876, file: !1378, line: 860, column: 7)
!17912 = !DILocation(line: 860, column: 10, scope: !17911)
!17913 = !DILocation(line: 860, column: 7, scope: !17876)
!17914 = !DILocation(line: 862, column: 13, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17911, file: !1378, line: 861, column: 5)
!17916 = !DILocation(line: 862, column: 7, scope: !17915)
!17917 = !DILocation(line: 863, column: 15, scope: !17915)
!17918 = !DILocation(line: 864, column: 5, scope: !17915)
!17919 = !DILocation(line: 865, column: 10, scope: !17876)
!17920 = !DILocation(line: 866, column: 1, scope: !17876)
!17921 = distinct !DISubprogram(name: "quotearg_n", scope: !1378, file: !1378, line: 931, type: !17922, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!17922 = !DISubroutineType(types: !17923)
!17923 = !{!143, !27, !146}
!17924 = !DILocalVariable(name: "n", arg: 1, scope: !17921, file: !1378, line: 931, type: !27)
!17925 = !DILocation(line: 931, column: 17, scope: !17921)
!17926 = !DILocalVariable(name: "arg", arg: 2, scope: !17921, file: !1378, line: 931, type: !146)
!17927 = !DILocation(line: 931, column: 32, scope: !17921)
!17928 = !DILocation(line: 933, column: 30, scope: !17921)
!17929 = !DILocation(line: 933, column: 33, scope: !17921)
!17930 = !DILocation(line: 933, column: 10, scope: !17921)
!17931 = !DILocation(line: 933, column: 3, scope: !17921)
!17932 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1378, file: !1378, line: 877, type: !17933, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!17933 = !DISubroutineType(types: !17934)
!17934 = !{!143, !27, !146, !149, !1387}
!17935 = !DILocalVariable(name: "n", arg: 1, scope: !17932, file: !1378, line: 877, type: !27)
!17936 = !DILocation(line: 877, column: 25, scope: !17932)
!17937 = !DILocalVariable(name: "arg", arg: 2, scope: !17932, file: !1378, line: 877, type: !146)
!17938 = !DILocation(line: 877, column: 40, scope: !17932)
!17939 = !DILocalVariable(name: "argsize", arg: 3, scope: !17932, file: !1378, line: 877, type: !149)
!17940 = !DILocation(line: 877, column: 52, scope: !17932)
!17941 = !DILocalVariable(name: "options", arg: 4, scope: !17932, file: !1378, line: 878, type: !1387)
!17942 = !DILocation(line: 878, column: 51, scope: !17932)
!17943 = !DILocalVariable(name: "e", scope: !17932, file: !1378, line: 880, type: !27)
!17944 = !DILocation(line: 880, column: 7, scope: !17932)
!17945 = !DILocation(line: 880, column: 11, scope: !17932)
!17946 = !DILocalVariable(name: "sv", scope: !17932, file: !1378, line: 882, type: !1390)
!17947 = !DILocation(line: 882, column: 19, scope: !17932)
!17948 = !DILocation(line: 882, column: 24, scope: !17932)
!17949 = !DILocation(line: 884, column: 7, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17932, file: !1378, line: 884, column: 7)
!17951 = !DILocation(line: 884, column: 9, scope: !17950)
!17952 = !DILocation(line: 884, column: 7, scope: !17932)
!17953 = !DILocation(line: 885, column: 5, scope: !17950)
!17954 = !DILocation(line: 887, column: 7, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17932, file: !1378, line: 887, column: 7)
!17956 = !DILocation(line: 887, column: 17, scope: !17955)
!17957 = !DILocation(line: 887, column: 14, scope: !17955)
!17958 = !DILocation(line: 887, column: 7, scope: !17932)
!17959 = !DILocalVariable(name: "preallocated", scope: !17960, file: !1378, line: 889, type: !141)
!17960 = distinct !DILexicalBlock(scope: !17955, file: !1378, line: 888, column: 5)
!17961 = !DILocation(line: 889, column: 12, scope: !17960)
!17962 = !DILocation(line: 889, column: 28, scope: !17960)
!17963 = !DILocation(line: 889, column: 31, scope: !17960)
!17964 = !DILocalVariable(name: "nmax", scope: !17960, file: !1378, line: 890, type: !27)
!17965 = !DILocation(line: 890, column: 11, scope: !17960)
!17966 = !DILocation(line: 892, column: 11, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !17960, file: !1378, line: 892, column: 11)
!17968 = !DILocation(line: 892, column: 18, scope: !17967)
!17969 = !DILocation(line: 892, column: 16, scope: !17967)
!17970 = !DILocation(line: 892, column: 11, scope: !17960)
!17971 = !DILocation(line: 893, column: 9, scope: !17967)
!17972 = !DILocation(line: 895, column: 32, scope: !17960)
!17973 = !DILocation(line: 895, column: 54, scope: !17960)
!17974 = !DILocation(line: 895, column: 59, scope: !17960)
!17975 = !DILocation(line: 895, column: 61, scope: !17960)
!17976 = !DILocation(line: 895, column: 58, scope: !17960)
!17977 = !DILocation(line: 895, column: 66, scope: !17960)
!17978 = !DILocation(line: 895, column: 22, scope: !17960)
!17979 = !DILocation(line: 895, column: 20, scope: !17960)
!17980 = !DILocation(line: 895, column: 15, scope: !17960)
!17981 = !DILocation(line: 896, column: 11, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !17960, file: !1378, line: 896, column: 11)
!17983 = !DILocation(line: 896, column: 11, scope: !17960)
!17984 = !DILocation(line: 897, column: 10, scope: !17982)
!17985 = !DILocation(line: 897, column: 15, scope: !17982)
!17986 = !DILocation(line: 897, column: 9, scope: !17982)
!17987 = !DILocation(line: 898, column: 15, scope: !17960)
!17988 = !DILocation(line: 898, column: 20, scope: !17960)
!17989 = !DILocation(line: 898, column: 18, scope: !17960)
!17990 = !DILocation(line: 898, column: 7, scope: !17960)
!17991 = !DILocation(line: 898, column: 32, scope: !17960)
!17992 = !DILocation(line: 898, column: 34, scope: !17960)
!17993 = !DILocation(line: 898, column: 40, scope: !17960)
!17994 = !DILocation(line: 898, column: 38, scope: !17960)
!17995 = !DILocation(line: 898, column: 31, scope: !17960)
!17996 = !DILocation(line: 898, column: 48, scope: !17960)
!17997 = !DILocation(line: 899, column: 16, scope: !17960)
!17998 = !DILocation(line: 899, column: 18, scope: !17960)
!17999 = !DILocation(line: 899, column: 14, scope: !17960)
!18000 = !DILocation(line: 900, column: 5, scope: !17960)
!18001 = !DILocalVariable(name: "size", scope: !18002, file: !1378, line: 903, type: !149)
!18002 = distinct !DILexicalBlock(scope: !17932, file: !1378, line: 902, column: 3)
!18003 = !DILocation(line: 903, column: 12, scope: !18002)
!18004 = !DILocation(line: 903, column: 19, scope: !18002)
!18005 = !DILocation(line: 903, column: 22, scope: !18002)
!18006 = !DILocation(line: 903, column: 25, scope: !18002)
!18007 = !DILocalVariable(name: "val", scope: !18002, file: !1378, line: 904, type: !143)
!18008 = !DILocation(line: 904, column: 11, scope: !18002)
!18009 = !DILocation(line: 904, column: 17, scope: !18002)
!18010 = !DILocation(line: 904, column: 20, scope: !18002)
!18011 = !DILocation(line: 904, column: 23, scope: !18002)
!18012 = !DILocalVariable(name: "flags", scope: !18002, file: !1378, line: 906, type: !27)
!18013 = !DILocation(line: 906, column: 9, scope: !18002)
!18014 = !DILocation(line: 906, column: 17, scope: !18002)
!18015 = !DILocation(line: 906, column: 26, scope: !18002)
!18016 = !DILocation(line: 906, column: 32, scope: !18002)
!18017 = !DILocalVariable(name: "qsize", scope: !18002, file: !1378, line: 907, type: !149)
!18018 = !DILocation(line: 907, column: 12, scope: !18002)
!18019 = !DILocation(line: 907, column: 46, scope: !18002)
!18020 = !DILocation(line: 907, column: 51, scope: !18002)
!18021 = !DILocation(line: 907, column: 57, scope: !18002)
!18022 = !DILocation(line: 907, column: 62, scope: !18002)
!18023 = !DILocation(line: 908, column: 46, scope: !18002)
!18024 = !DILocation(line: 908, column: 55, scope: !18002)
!18025 = !DILocation(line: 908, column: 62, scope: !18002)
!18026 = !DILocation(line: 909, column: 46, scope: !18002)
!18027 = !DILocation(line: 909, column: 55, scope: !18002)
!18028 = !DILocation(line: 910, column: 46, scope: !18002)
!18029 = !DILocation(line: 910, column: 55, scope: !18002)
!18030 = !DILocation(line: 911, column: 46, scope: !18002)
!18031 = !DILocation(line: 911, column: 55, scope: !18002)
!18032 = !DILocation(line: 907, column: 20, scope: !18002)
!18033 = !DILocation(line: 913, column: 9, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18002, file: !1378, line: 913, column: 9)
!18035 = !DILocation(line: 913, column: 17, scope: !18034)
!18036 = !DILocation(line: 913, column: 14, scope: !18034)
!18037 = !DILocation(line: 913, column: 9, scope: !18002)
!18038 = !DILocation(line: 915, column: 29, scope: !18039)
!18039 = distinct !DILexicalBlock(scope: !18034, file: !1378, line: 914, column: 7)
!18040 = !DILocation(line: 915, column: 35, scope: !18039)
!18041 = !DILocation(line: 915, column: 27, scope: !18039)
!18042 = !DILocation(line: 915, column: 9, scope: !18039)
!18043 = !DILocation(line: 915, column: 12, scope: !18039)
!18044 = !DILocation(line: 915, column: 15, scope: !18039)
!18045 = !DILocation(line: 915, column: 20, scope: !18039)
!18046 = !DILocation(line: 916, column: 13, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18039, file: !1378, line: 916, column: 13)
!18048 = !DILocation(line: 916, column: 17, scope: !18047)
!18049 = !DILocation(line: 916, column: 13, scope: !18039)
!18050 = !DILocation(line: 917, column: 17, scope: !18047)
!18051 = !DILocation(line: 917, column: 11, scope: !18047)
!18052 = !DILocation(line: 918, column: 39, scope: !18039)
!18053 = !DILocation(line: 918, column: 27, scope: !18039)
!18054 = !DILocation(line: 918, column: 25, scope: !18039)
!18055 = !DILocation(line: 918, column: 9, scope: !18039)
!18056 = !DILocation(line: 918, column: 12, scope: !18039)
!18057 = !DILocation(line: 918, column: 15, scope: !18039)
!18058 = !DILocation(line: 918, column: 19, scope: !18039)
!18059 = !DILocation(line: 919, column: 35, scope: !18039)
!18060 = !DILocation(line: 919, column: 40, scope: !18039)
!18061 = !DILocation(line: 919, column: 46, scope: !18039)
!18062 = !DILocation(line: 919, column: 51, scope: !18039)
!18063 = !DILocation(line: 919, column: 60, scope: !18039)
!18064 = !DILocation(line: 919, column: 69, scope: !18039)
!18065 = !DILocation(line: 920, column: 35, scope: !18039)
!18066 = !DILocation(line: 920, column: 42, scope: !18039)
!18067 = !DILocation(line: 920, column: 51, scope: !18039)
!18068 = !DILocation(line: 921, column: 35, scope: !18039)
!18069 = !DILocation(line: 921, column: 44, scope: !18039)
!18070 = !DILocation(line: 922, column: 35, scope: !18039)
!18071 = !DILocation(line: 922, column: 44, scope: !18039)
!18072 = !DILocation(line: 919, column: 9, scope: !18039)
!18073 = !DILocation(line: 923, column: 7, scope: !18039)
!18074 = !DILocation(line: 925, column: 13, scope: !18002)
!18075 = !DILocation(line: 925, column: 5, scope: !18002)
!18076 = !DILocation(line: 925, column: 11, scope: !18002)
!18077 = !DILocation(line: 926, column: 12, scope: !18002)
!18078 = !DILocation(line: 926, column: 5, scope: !18002)
!18079 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1378, file: !1378, line: 937, type: !18080, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18080 = !DISubroutineType(types: !18081)
!18081 = !{!143, !27, !146, !149}
!18082 = !DILocalVariable(name: "n", arg: 1, scope: !18079, file: !1378, line: 937, type: !27)
!18083 = !DILocation(line: 937, column: 21, scope: !18079)
!18084 = !DILocalVariable(name: "arg", arg: 2, scope: !18079, file: !1378, line: 937, type: !146)
!18085 = !DILocation(line: 937, column: 36, scope: !18079)
!18086 = !DILocalVariable(name: "argsize", arg: 3, scope: !18079, file: !1378, line: 937, type: !149)
!18087 = !DILocation(line: 937, column: 48, scope: !18079)
!18088 = !DILocation(line: 939, column: 30, scope: !18079)
!18089 = !DILocation(line: 939, column: 33, scope: !18079)
!18090 = !DILocation(line: 939, column: 38, scope: !18079)
!18091 = !DILocation(line: 939, column: 10, scope: !18079)
!18092 = !DILocation(line: 939, column: 3, scope: !18079)
!18093 = distinct !DISubprogram(name: "quotearg", scope: !1378, file: !1378, line: 943, type: !8560, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18094 = !DILocalVariable(name: "arg", arg: 1, scope: !18093, file: !1378, line: 943, type: !146)
!18095 = !DILocation(line: 943, column: 23, scope: !18093)
!18096 = !DILocation(line: 945, column: 25, scope: !18093)
!18097 = !DILocation(line: 945, column: 10, scope: !18093)
!18098 = !DILocation(line: 945, column: 3, scope: !18093)
!18099 = distinct !DISubprogram(name: "quotearg_mem", scope: !1378, file: !1378, line: 949, type: !8886, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18100 = !DILocalVariable(name: "arg", arg: 1, scope: !18099, file: !1378, line: 949, type: !146)
!18101 = !DILocation(line: 949, column: 27, scope: !18099)
!18102 = !DILocalVariable(name: "argsize", arg: 2, scope: !18099, file: !1378, line: 949, type: !149)
!18103 = !DILocation(line: 949, column: 39, scope: !18099)
!18104 = !DILocation(line: 951, column: 29, scope: !18099)
!18105 = !DILocation(line: 951, column: 34, scope: !18099)
!18106 = !DILocation(line: 951, column: 10, scope: !18099)
!18107 = !DILocation(line: 951, column: 3, scope: !18099)
!18108 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1378, file: !1378, line: 955, type: !18109, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18109 = !DISubroutineType(types: !18110)
!18110 = !{!143, !27, !95, !146}
!18111 = !DILocalVariable(name: "n", arg: 1, scope: !18108, file: !1378, line: 955, type: !27)
!18112 = !DILocation(line: 955, column: 23, scope: !18108)
!18113 = !DILocalVariable(name: "s", arg: 2, scope: !18108, file: !1378, line: 955, type: !95)
!18114 = !DILocation(line: 955, column: 45, scope: !18108)
!18115 = !DILocalVariable(name: "arg", arg: 3, scope: !18108, file: !1378, line: 955, type: !146)
!18116 = !DILocation(line: 955, column: 60, scope: !18108)
!18117 = !DILocalVariable(name: "o", scope: !18108, file: !1378, line: 957, type: !1388)
!18118 = !DILocation(line: 957, column: 32, scope: !18108)
!18119 = !DILocation(line: 957, column: 64, scope: !18108)
!18120 = !DILocation(line: 957, column: 36, scope: !18108)
!18121 = !DILocation(line: 958, column: 30, scope: !18108)
!18122 = !DILocation(line: 958, column: 33, scope: !18108)
!18123 = !DILocation(line: 958, column: 10, scope: !18108)
!18124 = !DILocation(line: 958, column: 3, scope: !18108)
!18125 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1378, file: !1378, line: 193, type: !18126, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18126 = !DISubroutineType(types: !18127)
!18127 = !{!1377, !95}
!18128 = !DILocalVariable(name: "style", arg: 1, scope: !18125, file: !1378, line: 193, type: !95)
!18129 = !DILocation(line: 193, column: 48, scope: !18125)
!18130 = !DILocalVariable(name: "o", scope: !18125, file: !1378, line: 195, type: !1377)
!18131 = !DILocation(line: 195, column: 26, scope: !18125)
!18132 = !DILocation(line: 196, column: 7, scope: !18133)
!18133 = distinct !DILexicalBlock(scope: !18125, file: !1378, line: 196, column: 7)
!18134 = !DILocation(line: 196, column: 13, scope: !18133)
!18135 = !DILocation(line: 196, column: 7, scope: !18125)
!18136 = !DILocation(line: 197, column: 5, scope: !18133)
!18137 = !DILocation(line: 198, column: 13, scope: !18125)
!18138 = !DILocation(line: 198, column: 5, scope: !18125)
!18139 = !DILocation(line: 198, column: 11, scope: !18125)
!18140 = !DILocation(line: 199, column: 3, scope: !18125)
!18141 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1378, file: !1378, line: 962, type: !18142, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18142 = !DISubroutineType(types: !18143)
!18143 = !{!143, !27, !95, !146, !149}
!18144 = !DILocalVariable(name: "n", arg: 1, scope: !18141, file: !1378, line: 962, type: !27)
!18145 = !DILocation(line: 962, column: 27, scope: !18141)
!18146 = !DILocalVariable(name: "s", arg: 2, scope: !18141, file: !1378, line: 962, type: !95)
!18147 = !DILocation(line: 962, column: 49, scope: !18141)
!18148 = !DILocalVariable(name: "arg", arg: 3, scope: !18141, file: !1378, line: 963, type: !146)
!18149 = !DILocation(line: 963, column: 35, scope: !18141)
!18150 = !DILocalVariable(name: "argsize", arg: 4, scope: !18141, file: !1378, line: 963, type: !149)
!18151 = !DILocation(line: 963, column: 47, scope: !18141)
!18152 = !DILocalVariable(name: "o", scope: !18141, file: !1378, line: 965, type: !1388)
!18153 = !DILocation(line: 965, column: 32, scope: !18141)
!18154 = !DILocation(line: 965, column: 64, scope: !18141)
!18155 = !DILocation(line: 965, column: 36, scope: !18141)
!18156 = !DILocation(line: 966, column: 30, scope: !18141)
!18157 = !DILocation(line: 966, column: 33, scope: !18141)
!18158 = !DILocation(line: 966, column: 38, scope: !18141)
!18159 = !DILocation(line: 966, column: 10, scope: !18141)
!18160 = !DILocation(line: 966, column: 3, scope: !18141)
!18161 = distinct !DISubprogram(name: "quotearg_style", scope: !1378, file: !1378, line: 970, type: !18162, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18162 = !DISubroutineType(types: !18163)
!18163 = !{!143, !95, !146}
!18164 = !DILocalVariable(name: "s", arg: 1, scope: !18161, file: !1378, line: 970, type: !95)
!18165 = !DILocation(line: 970, column: 36, scope: !18161)
!18166 = !DILocalVariable(name: "arg", arg: 2, scope: !18161, file: !1378, line: 970, type: !146)
!18167 = !DILocation(line: 970, column: 51, scope: !18161)
!18168 = !DILocation(line: 972, column: 31, scope: !18161)
!18169 = !DILocation(line: 972, column: 34, scope: !18161)
!18170 = !DILocation(line: 972, column: 10, scope: !18161)
!18171 = !DILocation(line: 972, column: 3, scope: !18161)
!18172 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1378, file: !1378, line: 976, type: !18173, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18173 = !DISubroutineType(types: !18174)
!18174 = !{!143, !95, !146, !149}
!18175 = !DILocalVariable(name: "s", arg: 1, scope: !18172, file: !1378, line: 976, type: !95)
!18176 = !DILocation(line: 976, column: 40, scope: !18172)
!18177 = !DILocalVariable(name: "arg", arg: 2, scope: !18172, file: !1378, line: 976, type: !146)
!18178 = !DILocation(line: 976, column: 55, scope: !18172)
!18179 = !DILocalVariable(name: "argsize", arg: 3, scope: !18172, file: !1378, line: 976, type: !149)
!18180 = !DILocation(line: 976, column: 67, scope: !18172)
!18181 = !DILocation(line: 978, column: 35, scope: !18172)
!18182 = !DILocation(line: 978, column: 38, scope: !18172)
!18183 = !DILocation(line: 978, column: 43, scope: !18172)
!18184 = !DILocation(line: 978, column: 10, scope: !18172)
!18185 = !DILocation(line: 978, column: 3, scope: !18172)
!18186 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1378, file: !1378, line: 982, type: !18187, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18187 = !DISubroutineType(types: !18188)
!18188 = !{!143, !146, !149, !144}
!18189 = !DILocalVariable(name: "arg", arg: 1, scope: !18186, file: !1378, line: 982, type: !146)
!18190 = !DILocation(line: 982, column: 32, scope: !18186)
!18191 = !DILocalVariable(name: "argsize", arg: 2, scope: !18186, file: !1378, line: 982, type: !149)
!18192 = !DILocation(line: 982, column: 44, scope: !18186)
!18193 = !DILocalVariable(name: "ch", arg: 3, scope: !18186, file: !1378, line: 982, type: !144)
!18194 = !DILocation(line: 982, column: 58, scope: !18186)
!18195 = !DILocalVariable(name: "options", scope: !18186, file: !1378, line: 984, type: !1377)
!18196 = !DILocation(line: 984, column: 26, scope: !18186)
!18197 = !DILocation(line: 985, column: 13, scope: !18186)
!18198 = !DILocation(line: 986, column: 31, scope: !18186)
!18199 = !DILocation(line: 986, column: 3, scope: !18186)
!18200 = !DILocation(line: 987, column: 33, scope: !18186)
!18201 = !DILocation(line: 987, column: 38, scope: !18186)
!18202 = !DILocation(line: 987, column: 10, scope: !18186)
!18203 = !DILocation(line: 987, column: 3, scope: !18186)
!18204 = distinct !DISubprogram(name: "quotearg_char", scope: !1378, file: !1378, line: 991, type: !18205, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18205 = !DISubroutineType(types: !18206)
!18206 = !{!143, !146, !144}
!18207 = !DILocalVariable(name: "arg", arg: 1, scope: !18204, file: !1378, line: 991, type: !146)
!18208 = !DILocation(line: 991, column: 28, scope: !18204)
!18209 = !DILocalVariable(name: "ch", arg: 2, scope: !18204, file: !1378, line: 991, type: !144)
!18210 = !DILocation(line: 991, column: 38, scope: !18204)
!18211 = !DILocation(line: 993, column: 29, scope: !18204)
!18212 = !DILocation(line: 993, column: 44, scope: !18204)
!18213 = !DILocation(line: 993, column: 10, scope: !18204)
!18214 = !DILocation(line: 993, column: 3, scope: !18204)
!18215 = distinct !DISubprogram(name: "quotearg_colon", scope: !1378, file: !1378, line: 997, type: !8560, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18216 = !DILocalVariable(name: "arg", arg: 1, scope: !18215, file: !1378, line: 997, type: !146)
!18217 = !DILocation(line: 997, column: 29, scope: !18215)
!18218 = !DILocation(line: 999, column: 25, scope: !18215)
!18219 = !DILocation(line: 999, column: 10, scope: !18215)
!18220 = !DILocation(line: 999, column: 3, scope: !18215)
!18221 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1378, file: !1378, line: 1003, type: !8886, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18222 = !DILocalVariable(name: "arg", arg: 1, scope: !18221, file: !1378, line: 1003, type: !146)
!18223 = !DILocation(line: 1003, column: 33, scope: !18221)
!18224 = !DILocalVariable(name: "argsize", arg: 2, scope: !18221, file: !1378, line: 1003, type: !149)
!18225 = !DILocation(line: 1003, column: 45, scope: !18221)
!18226 = !DILocation(line: 1005, column: 29, scope: !18221)
!18227 = !DILocation(line: 1005, column: 34, scope: !18221)
!18228 = !DILocation(line: 1005, column: 10, scope: !18221)
!18229 = !DILocation(line: 1005, column: 3, scope: !18221)
!18230 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1378, file: !1378, line: 1009, type: !18109, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18231 = !DILocalVariable(name: "n", arg: 1, scope: !18230, file: !1378, line: 1009, type: !27)
!18232 = !DILocation(line: 1009, column: 29, scope: !18230)
!18233 = !DILocalVariable(name: "s", arg: 2, scope: !18230, file: !1378, line: 1009, type: !95)
!18234 = !DILocation(line: 1009, column: 51, scope: !18230)
!18235 = !DILocalVariable(name: "arg", arg: 3, scope: !18230, file: !1378, line: 1009, type: !146)
!18236 = !DILocation(line: 1009, column: 66, scope: !18230)
!18237 = !DILocalVariable(name: "options", scope: !18230, file: !1378, line: 1011, type: !1377)
!18238 = !DILocation(line: 1011, column: 26, scope: !18230)
!18239 = !DILocation(line: 1012, column: 41, scope: !18230)
!18240 = !DILocation(line: 1012, column: 13, scope: !18230)
!18241 = !DILocation(line: 1013, column: 3, scope: !18230)
!18242 = !DILocation(line: 1014, column: 30, scope: !18230)
!18243 = !DILocation(line: 1014, column: 33, scope: !18230)
!18244 = !DILocation(line: 1014, column: 10, scope: !18230)
!18245 = !DILocation(line: 1014, column: 3, scope: !18230)
!18246 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1378, file: !1378, line: 1018, type: !18247, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18247 = !DISubroutineType(types: !18248)
!18248 = !{!143, !27, !146, !146, !146}
!18249 = !DILocalVariable(name: "n", arg: 1, scope: !18246, file: !1378, line: 1018, type: !27)
!18250 = !DILocation(line: 1018, column: 24, scope: !18246)
!18251 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18246, file: !1378, line: 1018, type: !146)
!18252 = !DILocation(line: 1018, column: 39, scope: !18246)
!18253 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18246, file: !1378, line: 1019, type: !146)
!18254 = !DILocation(line: 1019, column: 32, scope: !18246)
!18255 = !DILocalVariable(name: "arg", arg: 4, scope: !18246, file: !1378, line: 1019, type: !146)
!18256 = !DILocation(line: 1019, column: 57, scope: !18246)
!18257 = !DILocation(line: 1021, column: 33, scope: !18246)
!18258 = !DILocation(line: 1021, column: 36, scope: !18246)
!18259 = !DILocation(line: 1021, column: 48, scope: !18246)
!18260 = !DILocation(line: 1021, column: 61, scope: !18246)
!18261 = !DILocation(line: 1021, column: 10, scope: !18246)
!18262 = !DILocation(line: 1021, column: 3, scope: !18246)
!18263 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1378, file: !1378, line: 1026, type: !18264, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18264 = !DISubroutineType(types: !18265)
!18265 = !{!143, !27, !146, !146, !146, !149}
!18266 = !DILocalVariable(name: "n", arg: 1, scope: !18263, file: !1378, line: 1026, type: !27)
!18267 = !DILocation(line: 1026, column: 28, scope: !18263)
!18268 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18263, file: !1378, line: 1026, type: !146)
!18269 = !DILocation(line: 1026, column: 43, scope: !18263)
!18270 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18263, file: !1378, line: 1027, type: !146)
!18271 = !DILocation(line: 1027, column: 36, scope: !18263)
!18272 = !DILocalVariable(name: "arg", arg: 4, scope: !18263, file: !1378, line: 1028, type: !146)
!18273 = !DILocation(line: 1028, column: 36, scope: !18263)
!18274 = !DILocalVariable(name: "argsize", arg: 5, scope: !18263, file: !1378, line: 1028, type: !149)
!18275 = !DILocation(line: 1028, column: 48, scope: !18263)
!18276 = !DILocalVariable(name: "o", scope: !18263, file: !1378, line: 1030, type: !1377)
!18277 = !DILocation(line: 1030, column: 26, scope: !18263)
!18278 = !DILocation(line: 1030, column: 30, scope: !18263)
!18279 = !DILocation(line: 1031, column: 27, scope: !18263)
!18280 = !DILocation(line: 1031, column: 39, scope: !18263)
!18281 = !DILocation(line: 1031, column: 3, scope: !18263)
!18282 = !DILocation(line: 1032, column: 30, scope: !18263)
!18283 = !DILocation(line: 1032, column: 33, scope: !18263)
!18284 = !DILocation(line: 1032, column: 38, scope: !18263)
!18285 = !DILocation(line: 1032, column: 10, scope: !18263)
!18286 = !DILocation(line: 1032, column: 3, scope: !18263)
!18287 = distinct !DISubprogram(name: "quotearg_custom", scope: !1378, file: !1378, line: 1036, type: !18288, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18288 = !DISubroutineType(types: !18289)
!18289 = !{!143, !146, !146, !146}
!18290 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18287, file: !1378, line: 1036, type: !146)
!18291 = !DILocation(line: 1036, column: 30, scope: !18287)
!18292 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18287, file: !1378, line: 1036, type: !146)
!18293 = !DILocation(line: 1036, column: 54, scope: !18287)
!18294 = !DILocalVariable(name: "arg", arg: 3, scope: !18287, file: !1378, line: 1037, type: !146)
!18295 = !DILocation(line: 1037, column: 30, scope: !18287)
!18296 = !DILocation(line: 1039, column: 32, scope: !18287)
!18297 = !DILocation(line: 1039, column: 44, scope: !18287)
!18298 = !DILocation(line: 1039, column: 57, scope: !18287)
!18299 = !DILocation(line: 1039, column: 10, scope: !18287)
!18300 = !DILocation(line: 1039, column: 3, scope: !18287)
!18301 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1378, file: !1378, line: 1043, type: !18302, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18302 = !DISubroutineType(types: !18303)
!18303 = !{!143, !146, !146, !146, !149}
!18304 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18301, file: !1378, line: 1043, type: !146)
!18305 = !DILocation(line: 1043, column: 34, scope: !18301)
!18306 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18301, file: !1378, line: 1043, type: !146)
!18307 = !DILocation(line: 1043, column: 58, scope: !18301)
!18308 = !DILocalVariable(name: "arg", arg: 3, scope: !18301, file: !1378, line: 1044, type: !146)
!18309 = !DILocation(line: 1044, column: 34, scope: !18301)
!18310 = !DILocalVariable(name: "argsize", arg: 4, scope: !18301, file: !1378, line: 1044, type: !149)
!18311 = !DILocation(line: 1044, column: 46, scope: !18301)
!18312 = !DILocation(line: 1046, column: 36, scope: !18301)
!18313 = !DILocation(line: 1046, column: 48, scope: !18301)
!18314 = !DILocation(line: 1046, column: 61, scope: !18301)
!18315 = !DILocation(line: 1047, column: 33, scope: !18301)
!18316 = !DILocation(line: 1046, column: 10, scope: !18301)
!18317 = !DILocation(line: 1046, column: 3, scope: !18301)
!18318 = distinct !DISubprogram(name: "quote_n_mem", scope: !1378, file: !1378, line: 1061, type: !18319, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18319 = !DISubroutineType(types: !18320)
!18320 = !{!146, !27, !146, !149}
!18321 = !DILocalVariable(name: "n", arg: 1, scope: !18318, file: !1378, line: 1061, type: !27)
!18322 = !DILocation(line: 1061, column: 18, scope: !18318)
!18323 = !DILocalVariable(name: "arg", arg: 2, scope: !18318, file: !1378, line: 1061, type: !146)
!18324 = !DILocation(line: 1061, column: 33, scope: !18318)
!18325 = !DILocalVariable(name: "argsize", arg: 3, scope: !18318, file: !1378, line: 1061, type: !149)
!18326 = !DILocation(line: 1061, column: 45, scope: !18318)
!18327 = !DILocation(line: 1063, column: 30, scope: !18318)
!18328 = !DILocation(line: 1063, column: 33, scope: !18318)
!18329 = !DILocation(line: 1063, column: 38, scope: !18318)
!18330 = !DILocation(line: 1063, column: 10, scope: !18318)
!18331 = !DILocation(line: 1063, column: 3, scope: !18318)
!18332 = distinct !DISubprogram(name: "quote_mem", scope: !1378, file: !1378, line: 1067, type: !18333, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18333 = !DISubroutineType(types: !18334)
!18334 = !{!146, !146, !149}
!18335 = !DILocalVariable(name: "arg", arg: 1, scope: !18332, file: !1378, line: 1067, type: !146)
!18336 = !DILocation(line: 1067, column: 24, scope: !18332)
!18337 = !DILocalVariable(name: "argsize", arg: 2, scope: !18332, file: !1378, line: 1067, type: !149)
!18338 = !DILocation(line: 1067, column: 36, scope: !18332)
!18339 = !DILocation(line: 1069, column: 26, scope: !18332)
!18340 = !DILocation(line: 1069, column: 31, scope: !18332)
!18341 = !DILocation(line: 1069, column: 10, scope: !18332)
!18342 = !DILocation(line: 1069, column: 3, scope: !18332)
!18343 = distinct !DISubprogram(name: "quote_n", scope: !1378, file: !1378, line: 1073, type: !18344, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18344 = !DISubroutineType(types: !18345)
!18345 = !{!146, !27, !146}
!18346 = !DILocalVariable(name: "n", arg: 1, scope: !18343, file: !1378, line: 1073, type: !27)
!18347 = !DILocation(line: 1073, column: 14, scope: !18343)
!18348 = !DILocalVariable(name: "arg", arg: 2, scope: !18343, file: !1378, line: 1073, type: !146)
!18349 = !DILocation(line: 1073, column: 29, scope: !18343)
!18350 = !DILocation(line: 1075, column: 23, scope: !18343)
!18351 = !DILocation(line: 1075, column: 26, scope: !18343)
!18352 = !DILocation(line: 1075, column: 10, scope: !18343)
!18353 = !DILocation(line: 1075, column: 3, scope: !18343)
!18354 = distinct !DISubprogram(name: "quote", scope: !1378, file: !1378, line: 1079, type: !8732, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1370, retainedNodes: !152)
!18355 = !DILocalVariable(name: "arg", arg: 1, scope: !18354, file: !1378, line: 1079, type: !146)
!18356 = !DILocation(line: 1079, column: 20, scope: !18354)
!18357 = !DILocation(line: 1081, column: 22, scope: !18354)
!18358 = !DILocation(line: 1081, column: 10, scope: !18354)
!18359 = !DILocation(line: 1081, column: 3, scope: !18354)
!18360 = distinct !DISubprogram(name: "same_name", scope: !18361, file: !18361, line: 61, type: !18362, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !152)
!18361 = !DIFile(filename: "lib/same.c", directory: "/home/mohamad/clone/coreutils")
!18362 = !DISubroutineType(types: !18363)
!18363 = !{!141, !146, !146}
!18364 = !DILocalVariable(name: "source", arg: 1, scope: !18360, file: !18361, line: 61, type: !146)
!18365 = !DILocation(line: 61, column: 24, scope: !18360)
!18366 = !DILocalVariable(name: "dest", arg: 2, scope: !18360, file: !18361, line: 61, type: !146)
!18367 = !DILocation(line: 61, column: 44, scope: !18360)
!18368 = !DILocation(line: 63, column: 33, scope: !18360)
!18369 = !DILocation(line: 63, column: 51, scope: !18360)
!18370 = !DILocation(line: 63, column: 10, scope: !18360)
!18371 = !DILocation(line: 63, column: 3, scope: !18360)
!18372 = distinct !DISubprogram(name: "same_nameat", scope: !18361, file: !18361, line: 70, type: !18373, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !152)
!18373 = !DISubroutineType(types: !18374)
!18374 = !{!141, !27, !146, !27, !146}
!18375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !18376)
!18376 = !{!18377, !18378, !18379, !18380, !18381, !18382, !18383, !18384, !18385, !18386, !18387, !18388, !18393, !18394, !18395}
!18377 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !18375, file: !191, line: 48, baseType: !194, size: 64)
!18378 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !18375, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!18379 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !18375, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!18380 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !18375, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!18381 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !18375, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!18382 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !18375, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!18383 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !18375, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!18384 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !18375, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!18385 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !18375, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!18386 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !18375, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!18387 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !18375, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!18388 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !18375, file: !191, line: 91, baseType: !18389, size: 128, offset: 576)
!18389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !18390)
!18390 = !{!18391, !18392}
!18391 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !18389, file: !163, line: 122, baseType: !164, size: 64)
!18392 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !18389, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!18393 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !18375, file: !191, line: 92, baseType: !18389, size: 128, offset: 704)
!18394 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !18375, file: !191, line: 93, baseType: !18389, size: 128, offset: 832)
!18395 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !18375, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!18396 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !18372, file: !18361, line: 70, type: !27)
!18397 = !DILocation(line: 70, column: 18, scope: !18372)
!18398 = !DILocalVariable(name: "source", arg: 2, scope: !18372, file: !18361, line: 70, type: !146)
!18399 = !DILocation(line: 70, column: 42, scope: !18372)
!18400 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !18372, file: !18361, line: 71, type: !27)
!18401 = !DILocation(line: 71, column: 18, scope: !18372)
!18402 = !DILocalVariable(name: "dest", arg: 4, scope: !18372, file: !18361, line: 71, type: !146)
!18403 = !DILocation(line: 71, column: 40, scope: !18372)
!18404 = !DILocalVariable(name: "source_basename", scope: !18372, file: !18361, line: 74, type: !146)
!18405 = !DILocation(line: 74, column: 15, scope: !18372)
!18406 = !DILocation(line: 74, column: 49, scope: !18372)
!18407 = !DILocation(line: 74, column: 33, scope: !18372)
!18408 = !DILocalVariable(name: "dest_basename", scope: !18372, file: !18361, line: 75, type: !146)
!18409 = !DILocation(line: 75, column: 15, scope: !18372)
!18410 = !DILocation(line: 75, column: 47, scope: !18372)
!18411 = !DILocation(line: 75, column: 31, scope: !18372)
!18412 = !DILocalVariable(name: "source_baselen", scope: !18372, file: !18361, line: 76, type: !149)
!18413 = !DILocation(line: 76, column: 10, scope: !18372)
!18414 = !DILocation(line: 76, column: 37, scope: !18372)
!18415 = !DILocation(line: 76, column: 27, scope: !18372)
!18416 = !DILocalVariable(name: "dest_baselen", scope: !18372, file: !18361, line: 77, type: !149)
!18417 = !DILocation(line: 77, column: 10, scope: !18372)
!18418 = !DILocation(line: 77, column: 35, scope: !18372)
!18419 = !DILocation(line: 77, column: 25, scope: !18372)
!18420 = !DILocalVariable(name: "identical_basenames", scope: !18372, file: !18361, line: 78, type: !141)
!18421 = !DILocation(line: 78, column: 8, scope: !18372)
!18422 = !DILocation(line: 79, column: 6, scope: !18372)
!18423 = !DILocation(line: 79, column: 24, scope: !18372)
!18424 = !DILocation(line: 79, column: 21, scope: !18372)
!18425 = !DILocation(line: 80, column: 6, scope: !18372)
!18426 = !DILocation(line: 80, column: 17, scope: !18372)
!18427 = !DILocation(line: 80, column: 34, scope: !18372)
!18428 = !DILocation(line: 80, column: 49, scope: !18372)
!18429 = !DILocation(line: 80, column: 9, scope: !18372)
!18430 = !DILocation(line: 80, column: 63, scope: !18372)
!18431 = !DILocation(line: 0, scope: !18372)
!18432 = !DILocalVariable(name: "compare_dirs", scope: !18372, file: !18361, line: 81, type: !141)
!18433 = !DILocation(line: 81, column: 8, scope: !18372)
!18434 = !DILocation(line: 81, column: 23, scope: !18372)
!18435 = !DILocalVariable(name: "same", scope: !18372, file: !18361, line: 82, type: !141)
!18436 = !DILocation(line: 82, column: 8, scope: !18372)
!18437 = !DILocation(line: 92, column: 7, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18372, file: !18361, line: 92, column: 7)
!18439 = !DILocation(line: 92, column: 7, scope: !18372)
!18440 = !DILocalVariable(name: "source_dir_stats", scope: !18441, file: !18361, line: 94, type: !18375)
!18441 = distinct !DILexicalBlock(scope: !18438, file: !18361, line: 93, column: 5)
!18442 = !DILocation(line: 94, column: 19, scope: !18441)
!18443 = !DILocalVariable(name: "dest_dir_stats", scope: !18441, file: !18361, line: 95, type: !18375)
!18444 = !DILocation(line: 95, column: 19, scope: !18441)
!18445 = !DILocalVariable(name: "source_dirname", scope: !18441, file: !18361, line: 98, type: !143)
!18446 = !DILocation(line: 98, column: 13, scope: !18441)
!18447 = !DILocation(line: 98, column: 40, scope: !18441)
!18448 = !DILocation(line: 98, column: 30, scope: !18441)
!18449 = !DILocalVariable(name: "flags", scope: !18441, file: !18361, line: 99, type: !27)
!18450 = !DILocation(line: 99, column: 11, scope: !18441)
!18451 = !DILocation(line: 100, column: 20, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !18441, file: !18361, line: 100, column: 11)
!18453 = !DILocation(line: 100, column: 32, scope: !18452)
!18454 = !DILocation(line: 100, column: 67, scope: !18452)
!18455 = !DILocation(line: 100, column: 11, scope: !18452)
!18456 = !DILocation(line: 100, column: 74, scope: !18452)
!18457 = !DILocation(line: 100, column: 11, scope: !18441)
!18458 = !DILocation(line: 103, column: 21, scope: !18459)
!18459 = distinct !DILexicalBlock(scope: !18452, file: !18361, line: 101, column: 9)
!18460 = !DILocation(line: 103, column: 34, scope: !18459)
!18461 = !DILocation(line: 103, column: 11, scope: !18459)
!18462 = !DILocation(line: 104, column: 9, scope: !18459)
!18463 = !DILocation(line: 105, column: 13, scope: !18441)
!18464 = !DILocation(line: 105, column: 7, scope: !18441)
!18465 = !DILocalVariable(name: "dest_dirname", scope: !18441, file: !18361, line: 107, type: !143)
!18466 = !DILocation(line: 107, column: 13, scope: !18441)
!18467 = !DILocation(line: 107, column: 38, scope: !18441)
!18468 = !DILocation(line: 107, column: 28, scope: !18441)
!18469 = !DILocation(line: 137, column: 20, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18441, file: !18361, line: 137, column: 11)
!18471 = !DILocation(line: 137, column: 30, scope: !18470)
!18472 = !DILocation(line: 137, column: 61, scope: !18470)
!18473 = !DILocation(line: 137, column: 11, scope: !18470)
!18474 = !DILocation(line: 137, column: 68, scope: !18470)
!18475 = !DILocation(line: 137, column: 11, scope: !18441)
!18476 = !DILocation(line: 140, column: 21, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18470, file: !18361, line: 138, column: 9)
!18478 = !DILocation(line: 140, column: 34, scope: !18477)
!18479 = !DILocation(line: 140, column: 11, scope: !18477)
!18480 = !DILocation(line: 141, column: 9, scope: !18477)
!18481 = !DILocation(line: 142, column: 14, scope: !18441)
!18482 = !DILocation(line: 0, scope: !18441)
!18483 = !DILocation(line: 142, column: 12, scope: !18441)
!18484 = !DILocation(line: 145, column: 13, scope: !18441)
!18485 = !DILocation(line: 145, column: 7, scope: !18441)
!18486 = !DILocation(line: 146, column: 5, scope: !18441)
!18487 = !DILocation(line: 148, column: 10, scope: !18372)
!18488 = !DILocation(line: 148, column: 3, scope: !18372)
!18489 = distinct !DISubprogram(name: "getcon", scope: !18490, file: !18490, line: 87, type: !18491, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18490 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mohamad/clone/coreutils")
!18491 = !DISubroutineType(types: !18492)
!18492 = !{!27, !18493}
!18493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18494, size: 64)
!18494 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !18490, line: 83, baseType: !143)
!18495 = !DILocalVariable(name: "con", arg: 1, scope: !18489, file: !18490, line: 87, type: !18493)
!18496 = !DILocation(line: 87, column: 29, scope: !18489)
!18497 = !DILocation(line: 88, column: 5, scope: !18489)
!18498 = !DILocation(line: 88, column: 11, scope: !18489)
!18499 = !DILocation(line: 88, column: 22, scope: !18489)
!18500 = distinct !DISubprogram(name: "freecon", scope: !18490, file: !18490, line: 90, type: !18501, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18501 = !DISubroutineType(types: !18502)
!18502 = !{null, !18494}
!18503 = !DILocalVariable(name: "con", arg: 1, scope: !18500, file: !18490, line: 90, type: !18494)
!18504 = !DILocation(line: 90, column: 29, scope: !18500)
!18505 = !DILocation(line: 90, column: 56, scope: !18500)
!18506 = distinct !DISubprogram(name: "getfscreatecon", scope: !18490, file: !18490, line: 93, type: !18491, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18507 = !DILocalVariable(name: "con", arg: 1, scope: !18506, file: !18490, line: 93, type: !18493)
!18508 = !DILocation(line: 93, column: 37, scope: !18506)
!18509 = !DILocation(line: 94, column: 5, scope: !18506)
!18510 = !DILocation(line: 94, column: 11, scope: !18506)
!18511 = !DILocation(line: 94, column: 22, scope: !18506)
!18512 = distinct !DISubprogram(name: "setfscreatecon", scope: !18490, file: !18490, line: 96, type: !18513, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18513 = !DISubroutineType(types: !18514)
!18514 = !{!27, !18494}
!18515 = !DILocalVariable(name: "con", arg: 1, scope: !18512, file: !18490, line: 96, type: !18494)
!18516 = !DILocation(line: 96, column: 36, scope: !18512)
!18517 = !DILocation(line: 97, column: 5, scope: !18512)
!18518 = !DILocation(line: 97, column: 11, scope: !18512)
!18519 = !DILocation(line: 97, column: 22, scope: !18512)
!18520 = distinct !DISubprogram(name: "matchpathcon", scope: !18490, file: !18490, line: 99, type: !18521, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18521 = !DISubroutineType(types: !18522)
!18522 = !{!27, !146, !226, !18493}
!18523 = !DILocalVariable(name: "file", arg: 1, scope: !18520, file: !18490, line: 99, type: !146)
!18524 = !DILocation(line: 99, column: 27, scope: !18520)
!18525 = !DILocalVariable(name: "m", arg: 2, scope: !18520, file: !18490, line: 100, type: !226)
!18526 = !DILocation(line: 100, column: 22, scope: !18520)
!18527 = !DILocalVariable(name: "con", arg: 3, scope: !18520, file: !18490, line: 101, type: !18493)
!18528 = !DILocation(line: 101, column: 23, scope: !18520)
!18529 = !DILocation(line: 102, column: 5, scope: !18520)
!18530 = !DILocation(line: 102, column: 11, scope: !18520)
!18531 = !DILocation(line: 102, column: 22, scope: !18520)
!18532 = distinct !DISubprogram(name: "getfilecon", scope: !18490, file: !18490, line: 104, type: !18533, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18533 = !DISubroutineType(types: !18534)
!18534 = !{!27, !146, !18493}
!18535 = !DILocalVariable(name: "file", arg: 1, scope: !18532, file: !18490, line: 104, type: !146)
!18536 = !DILocation(line: 104, column: 25, scope: !18532)
!18537 = !DILocalVariable(name: "con", arg: 2, scope: !18532, file: !18490, line: 105, type: !18493)
!18538 = !DILocation(line: 105, column: 33, scope: !18532)
!18539 = !DILocation(line: 106, column: 5, scope: !18532)
!18540 = !DILocation(line: 106, column: 11, scope: !18532)
!18541 = !DILocation(line: 106, column: 22, scope: !18532)
!18542 = distinct !DISubprogram(name: "lgetfilecon", scope: !18490, file: !18490, line: 108, type: !18533, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18543 = !DILocalVariable(name: "file", arg: 1, scope: !18542, file: !18490, line: 108, type: !146)
!18544 = !DILocation(line: 108, column: 26, scope: !18542)
!18545 = !DILocalVariable(name: "con", arg: 2, scope: !18542, file: !18490, line: 109, type: !18493)
!18546 = !DILocation(line: 109, column: 34, scope: !18542)
!18547 = !DILocation(line: 110, column: 5, scope: !18542)
!18548 = !DILocation(line: 110, column: 11, scope: !18542)
!18549 = !DILocation(line: 110, column: 22, scope: !18542)
!18550 = distinct !DISubprogram(name: "fgetfilecon", scope: !18490, file: !18490, line: 112, type: !18551, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18551 = !DISubroutineType(types: !18552)
!18552 = !{!27, !27, !18493}
!18553 = !DILocalVariable(name: "fd", arg: 1, scope: !18550, file: !18490, line: 112, type: !27)
!18554 = !DILocation(line: 112, column: 18, scope: !18550)
!18555 = !DILocalVariable(name: "con", arg: 2, scope: !18550, file: !18490, line: 112, type: !18493)
!18556 = !DILocation(line: 112, column: 42, scope: !18550)
!18557 = !DILocation(line: 113, column: 5, scope: !18550)
!18558 = !DILocation(line: 113, column: 11, scope: !18550)
!18559 = !DILocation(line: 113, column: 22, scope: !18550)
!18560 = distinct !DISubprogram(name: "setfilecon", scope: !18490, file: !18490, line: 115, type: !18561, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18561 = !DISubroutineType(types: !18562)
!18562 = !{!27, !146, !18494}
!18563 = !DILocalVariable(name: "file", arg: 1, scope: !18560, file: !18490, line: 115, type: !146)
!18564 = !DILocation(line: 115, column: 25, scope: !18560)
!18565 = !DILocalVariable(name: "con", arg: 2, scope: !18560, file: !18490, line: 116, type: !18494)
!18566 = !DILocation(line: 116, column: 32, scope: !18560)
!18567 = !DILocation(line: 117, column: 5, scope: !18560)
!18568 = !DILocation(line: 117, column: 11, scope: !18560)
!18569 = !DILocation(line: 117, column: 22, scope: !18560)
!18570 = distinct !DISubprogram(name: "lsetfilecon", scope: !18490, file: !18490, line: 119, type: !18561, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18571 = !DILocalVariable(name: "file", arg: 1, scope: !18570, file: !18490, line: 119, type: !146)
!18572 = !DILocation(line: 119, column: 26, scope: !18570)
!18573 = !DILocalVariable(name: "con", arg: 2, scope: !18570, file: !18490, line: 120, type: !18494)
!18574 = !DILocation(line: 120, column: 33, scope: !18570)
!18575 = !DILocation(line: 121, column: 5, scope: !18570)
!18576 = !DILocation(line: 121, column: 11, scope: !18570)
!18577 = !DILocation(line: 121, column: 22, scope: !18570)
!18578 = distinct !DISubprogram(name: "fsetfilecon", scope: !18490, file: !18490, line: 123, type: !18579, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18579 = !DISubroutineType(types: !18580)
!18580 = !{!27, !27, !18494}
!18581 = !DILocalVariable(name: "fd", arg: 1, scope: !18578, file: !18490, line: 123, type: !27)
!18582 = !DILocation(line: 123, column: 18, scope: !18578)
!18583 = !DILocalVariable(name: "con", arg: 2, scope: !18578, file: !18490, line: 124, type: !18494)
!18584 = !DILocation(line: 124, column: 33, scope: !18578)
!18585 = !DILocation(line: 125, column: 5, scope: !18578)
!18586 = !DILocation(line: 125, column: 11, scope: !18578)
!18587 = !DILocation(line: 125, column: 22, scope: !18578)
!18588 = distinct !DISubprogram(name: "security_check_context", scope: !18490, file: !18490, line: 128, type: !18513, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18589 = !DILocalVariable(name: "con", arg: 1, scope: !18588, file: !18490, line: 128, type: !18494)
!18590 = !DILocation(line: 128, column: 44, scope: !18588)
!18591 = !DILocation(line: 129, column: 5, scope: !18588)
!18592 = !DILocation(line: 129, column: 11, scope: !18588)
!18593 = !DILocation(line: 129, column: 22, scope: !18588)
!18594 = distinct !DISubprogram(name: "security_check_context_raw", scope: !18490, file: !18490, line: 131, type: !18513, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18595 = !DILocalVariable(name: "con", arg: 1, scope: !18594, file: !18490, line: 131, type: !18494)
!18596 = !DILocation(line: 131, column: 48, scope: !18594)
!18597 = !DILocation(line: 132, column: 5, scope: !18594)
!18598 = !DILocation(line: 132, column: 11, scope: !18594)
!18599 = !DILocation(line: 132, column: 22, scope: !18594)
!18600 = distinct !DISubprogram(name: "setexeccon", scope: !18490, file: !18490, line: 134, type: !18513, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18601 = !DILocalVariable(name: "con", arg: 1, scope: !18600, file: !18490, line: 134, type: !18494)
!18602 = !DILocation(line: 134, column: 32, scope: !18600)
!18603 = !DILocation(line: 135, column: 5, scope: !18600)
!18604 = !DILocation(line: 135, column: 11, scope: !18600)
!18605 = !DILocation(line: 135, column: 22, scope: !18600)
!18606 = distinct !DISubprogram(name: "security_compute_create", scope: !18490, file: !18490, line: 137, type: !18607, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18607 = !DISubroutineType(types: !18608)
!18608 = !{!27, !18494, !18494, !18609, !18493}
!18609 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !18490, line: 82, baseType: !177)
!18610 = !DILocalVariable(name: "scon", arg: 1, scope: !18606, file: !18490, line: 137, type: !18494)
!18611 = !DILocation(line: 137, column: 45, scope: !18606)
!18612 = !DILocalVariable(name: "tcon", arg: 2, scope: !18606, file: !18490, line: 138, type: !18494)
!18613 = !DILocation(line: 138, column: 45, scope: !18606)
!18614 = !DILocalVariable(name: "tclass", arg: 3, scope: !18606, file: !18490, line: 139, type: !18609)
!18615 = !DILocation(line: 139, column: 43, scope: !18606)
!18616 = !DILocalVariable(name: "newcon", arg: 4, scope: !18606, file: !18490, line: 140, type: !18493)
!18617 = !DILocation(line: 140, column: 46, scope: !18606)
!18618 = !DILocation(line: 141, column: 5, scope: !18606)
!18619 = !DILocation(line: 141, column: 11, scope: !18606)
!18620 = !DILocation(line: 141, column: 22, scope: !18606)
!18621 = distinct !DISubprogram(name: "string_to_security_class", scope: !18490, file: !18490, line: 143, type: !18622, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18622 = !DISubroutineType(types: !18623)
!18623 = !{!18609, !146}
!18624 = !DILocalVariable(name: "name", arg: 1, scope: !18621, file: !18490, line: 143, type: !146)
!18625 = !DILocation(line: 143, column: 39, scope: !18621)
!18626 = !DILocation(line: 144, column: 5, scope: !18621)
!18627 = !DILocation(line: 144, column: 11, scope: !18621)
!18628 = !DILocation(line: 144, column: 22, scope: !18621)
!18629 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !18490, file: !18490, line: 146, type: !7722, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1617, retainedNodes: !152)
!18630 = !DILocalVariable(name: "path", arg: 1, scope: !18629, file: !18490, line: 146, type: !146)
!18631 = !DILocation(line: 146, column: 39, scope: !18629)
!18632 = !DILocalVariable(name: "prefix", arg: 2, scope: !18629, file: !18490, line: 147, type: !146)
!18633 = !DILocation(line: 147, column: 39, scope: !18629)
!18634 = !DILocation(line: 148, column: 5, scope: !18629)
!18635 = !DILocation(line: 148, column: 11, scope: !18629)
!18636 = !DILocation(line: 148, column: 22, scope: !18629)
!18637 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !18638, file: !18638, line: 66, type: !18639, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18638 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mohamad/clone/coreutils")
!18639 = !DISubroutineType(types: !18640)
!18640 = !{!166, !18641}
!18641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18642, size: 64)
!18642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18643)
!18643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !18644)
!18644 = !{!18645, !18646, !18647, !18648, !18649, !18650, !18651, !18652, !18653, !18654, !18655, !18656, !18661, !18662, !18663}
!18645 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !18643, file: !191, line: 48, baseType: !194, size: 64)
!18646 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !18643, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!18647 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !18643, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!18648 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !18643, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!18649 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !18643, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!18650 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !18643, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!18651 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !18643, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!18652 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !18643, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!18653 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !18643, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!18654 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !18643, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!18655 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !18643, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!18656 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !18643, file: !191, line: 91, baseType: !18657, size: 128, offset: 576)
!18657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !18658)
!18658 = !{!18659, !18660}
!18659 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !18657, file: !163, line: 122, baseType: !164, size: 64)
!18660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !18657, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!18661 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !18643, file: !191, line: 92, baseType: !18657, size: 128, offset: 704)
!18662 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !18643, file: !191, line: 93, baseType: !18657, size: 128, offset: 832)
!18663 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !18643, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!18664 = !DILocalVariable(name: "st", arg: 1, scope: !18637, file: !18638, line: 66, type: !18641)
!18665 = !DILocation(line: 66, column: 39, scope: !18637)
!18666 = !DILocation(line: 69, column: 10, scope: !18637)
!18667 = !DILocation(line: 69, column: 38, scope: !18637)
!18668 = !DILocation(line: 69, column: 3, scope: !18637)
!18669 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !18638, file: !18638, line: 79, type: !18639, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18670 = !DILocalVariable(name: "st", arg: 1, scope: !18669, file: !18638, line: 79, type: !18641)
!18671 = !DILocation(line: 79, column: 39, scope: !18669)
!18672 = !DILocation(line: 82, column: 10, scope: !18669)
!18673 = !DILocation(line: 82, column: 38, scope: !18669)
!18674 = !DILocation(line: 82, column: 3, scope: !18669)
!18675 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !18638, file: !18638, line: 92, type: !18639, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18676 = !DILocalVariable(name: "st", arg: 1, scope: !18675, file: !18638, line: 92, type: !18641)
!18677 = !DILocation(line: 92, column: 39, scope: !18675)
!18678 = !DILocation(line: 95, column: 10, scope: !18675)
!18679 = !DILocation(line: 95, column: 38, scope: !18675)
!18680 = !DILocation(line: 95, column: 3, scope: !18675)
!18681 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !18638, file: !18638, line: 105, type: !18639, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18682 = !DILocalVariable(name: "st", arg: 1, scope: !18681, file: !18638, line: 105, type: !18641)
!18683 = !DILocation(line: 105, column: 43, scope: !18681)
!18684 = !DILocation(line: 112, column: 3, scope: !18681)
!18685 = distinct !DISubprogram(name: "get_stat_atime", scope: !18638, file: !18638, line: 118, type: !18686, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18686 = !DISubroutineType(types: !18687)
!18687 = !{!18657, !18641}
!18688 = !DILocalVariable(name: "st", arg: 1, scope: !18685, file: !18638, line: 118, type: !18641)
!18689 = !DILocation(line: 118, column: 36, scope: !18685)
!18690 = !DILocation(line: 121, column: 10, scope: !18685)
!18691 = !DILocation(line: 121, column: 3, scope: !18685)
!18692 = distinct !DISubprogram(name: "get_stat_ctime", scope: !18638, file: !18638, line: 132, type: !18686, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18693 = !DILocalVariable(name: "st", arg: 1, scope: !18692, file: !18638, line: 132, type: !18641)
!18694 = !DILocation(line: 132, column: 36, scope: !18692)
!18695 = !DILocation(line: 135, column: 10, scope: !18692)
!18696 = !DILocation(line: 135, column: 3, scope: !18692)
!18697 = distinct !DISubprogram(name: "get_stat_mtime", scope: !18638, file: !18638, line: 146, type: !18686, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18698 = !DILocalVariable(name: "st", arg: 1, scope: !18697, file: !18638, line: 146, type: !18641)
!18699 = !DILocation(line: 146, column: 36, scope: !18697)
!18700 = !DILocation(line: 149, column: 10, scope: !18697)
!18701 = !DILocation(line: 149, column: 3, scope: !18697)
!18702 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !18638, file: !18638, line: 161, type: !18686, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18703 = !DILocalVariable(name: "st", arg: 1, scope: !18702, file: !18638, line: 161, type: !18641)
!18704 = !DILocation(line: 161, column: 40, scope: !18702)
!18705 = !DILocalVariable(name: "t", scope: !18702, file: !18638, line: 163, type: !18657)
!18706 = !DILocation(line: 163, column: 19, scope: !18702)
!18707 = !DILocation(line: 183, column: 5, scope: !18702)
!18708 = !DILocation(line: 183, column: 12, scope: !18702)
!18709 = !DILocation(line: 184, column: 5, scope: !18702)
!18710 = !DILocation(line: 184, column: 13, scope: !18702)
!18711 = !DILocation(line: 202, column: 3, scope: !18702)
!18712 = distinct !DISubprogram(name: "stat_time_normalize", scope: !18638, file: !18638, line: 211, type: !18713, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1619, retainedNodes: !152)
!18713 = !DISubroutineType(types: !18714)
!18714 = !{!27, !27, !18715}
!18715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18643, size: 64)
!18716 = !DILocalVariable(name: "result", arg: 1, scope: !18712, file: !18638, line: 211, type: !27)
!18717 = !DILocation(line: 211, column: 26, scope: !18712)
!18718 = !DILocalVariable(name: "st", arg: 2, scope: !18712, file: !18638, line: 211, type: !18715)
!18719 = !DILocation(line: 211, column: 47, scope: !18712)
!18720 = !DILocation(line: 243, column: 10, scope: !18712)
!18721 = !DILocation(line: 243, column: 3, scope: !18712)
!18722 = distinct !DISubprogram(name: "make_timespec", scope: !18723, file: !18723, line: 54, type: !18724, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1622, retainedNodes: !152)
!18723 = !DIFile(filename: "./lib/timespec.h", directory: "/home/mohamad/clone/coreutils")
!18724 = !DISubroutineType(types: !18725)
!18725 = !{!18726, !162, !166}
!18726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !18727)
!18727 = !{!18728, !18729}
!18728 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !18726, file: !163, line: 122, baseType: !164, size: 64)
!18729 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !18726, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!18730 = !DILocalVariable(name: "s", arg: 1, scope: !18722, file: !18723, line: 54, type: !162)
!18731 = !DILocation(line: 54, column: 23, scope: !18722)
!18732 = !DILocalVariable(name: "ns", arg: 2, scope: !18722, file: !18723, line: 54, type: !166)
!18733 = !DILocation(line: 54, column: 35, scope: !18722)
!18734 = !DILocalVariable(name: "r", scope: !18722, file: !18723, line: 56, type: !18726)
!18735 = !DILocation(line: 56, column: 19, scope: !18722)
!18736 = !DILocation(line: 57, column: 14, scope: !18722)
!18737 = !DILocation(line: 57, column: 5, scope: !18722)
!18738 = !DILocation(line: 57, column: 12, scope: !18722)
!18739 = !DILocation(line: 58, column: 15, scope: !18722)
!18740 = !DILocation(line: 58, column: 5, scope: !18722)
!18741 = !DILocation(line: 58, column: 13, scope: !18722)
!18742 = !DILocation(line: 59, column: 3, scope: !18722)
!18743 = distinct !DISubprogram(name: "timespec_cmp", scope: !18723, file: !18723, line: 89, type: !18744, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1622, retainedNodes: !152)
!18744 = !DISubroutineType(types: !18745)
!18745 = !{!27, !18726, !18726}
!18746 = !DILocalVariable(name: "a", arg: 1, scope: !18743, file: !18723, line: 89, type: !18726)
!18747 = !DILocation(line: 89, column: 31, scope: !18743)
!18748 = !DILocalVariable(name: "b", arg: 2, scope: !18743, file: !18723, line: 89, type: !18726)
!18749 = !DILocation(line: 89, column: 50, scope: !18743)
!18750 = !DILocation(line: 91, column: 9, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18743, file: !18723, line: 91, column: 7)
!18752 = !DILocation(line: 91, column: 20, scope: !18751)
!18753 = !DILocation(line: 91, column: 16, scope: !18751)
!18754 = !DILocation(line: 91, column: 7, scope: !18743)
!18755 = !DILocation(line: 92, column: 5, scope: !18751)
!18756 = !DILocation(line: 93, column: 9, scope: !18757)
!18757 = distinct !DILexicalBlock(scope: !18743, file: !18723, line: 93, column: 7)
!18758 = !DILocation(line: 93, column: 20, scope: !18757)
!18759 = !DILocation(line: 93, column: 16, scope: !18757)
!18760 = !DILocation(line: 93, column: 7, scope: !18743)
!18761 = !DILocation(line: 94, column: 5, scope: !18757)
!18762 = !DILocation(line: 98, column: 3, scope: !18743)
!18763 = !DILocation(line: 99, column: 3, scope: !18743)
!18764 = !DILocation(line: 101, column: 12, scope: !18743)
!18765 = !DILocation(line: 101, column: 24, scope: !18743)
!18766 = !DILocation(line: 101, column: 20, scope: !18743)
!18767 = !DILocation(line: 101, column: 10, scope: !18743)
!18768 = !DILocation(line: 101, column: 3, scope: !18743)
!18769 = !DILocation(line: 102, column: 1, scope: !18743)
!18770 = distinct !DISubprogram(name: "timespec_sign", scope: !18723, file: !18723, line: 107, type: !18771, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1622, retainedNodes: !152)
!18771 = !DISubroutineType(types: !18772)
!18772 = !{!27, !18726}
!18773 = !DILocalVariable(name: "a", arg: 1, scope: !18770, file: !18723, line: 107, type: !18726)
!18774 = !DILocation(line: 107, column: 32, scope: !18770)
!18775 = !DILocation(line: 109, column: 12, scope: !18770)
!18776 = !DILocation(line: 109, column: 19, scope: !18770)
!18777 = !DILocation(line: 109, column: 10, scope: !18770)
!18778 = !DILocation(line: 109, column: 32, scope: !18770)
!18779 = !DILocation(line: 109, column: 30, scope: !18770)
!18780 = !DILocation(line: 109, column: 39, scope: !18770)
!18781 = !DILocation(line: 109, column: 44, scope: !18770)
!18782 = !DILocation(line: 109, column: 3, scope: !18770)
!18783 = distinct !DISubprogram(name: "timespectod", scope: !18723, file: !18723, line: 121, type: !18784, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1622, retainedNodes: !152)
!18784 = !DISubroutineType(types: !18785)
!18785 = !{!18786, !18726}
!18786 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!18787 = !DILocalVariable(name: "a", arg: 1, scope: !18783, file: !18723, line: 121, type: !18726)
!18788 = !DILocation(line: 121, column: 30, scope: !18783)
!18789 = !DILocation(line: 123, column: 12, scope: !18783)
!18790 = !DILocation(line: 123, column: 10, scope: !18783)
!18791 = !DILocation(line: 123, column: 23, scope: !18783)
!18792 = !DILocation(line: 123, column: 21, scope: !18783)
!18793 = !DILocation(line: 123, column: 31, scope: !18783)
!18794 = !DILocation(line: 123, column: 19, scope: !18783)
!18795 = !DILocation(line: 123, column: 3, scope: !18783)
!18796 = distinct !DISubprogram(name: "version_etc_arn", scope: !18797, file: !18797, line: 61, type: !18798, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1625, retainedNodes: !152)
!18797 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!18798 = !DISubroutineType(types: !18799)
!18799 = !{null, !18800, !146, !146, !146, !681, !149}
!18800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18801, size: 64)
!18801 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1645, line: 48, baseType: !1657)
!18802 = !DILocalVariable(name: "stream", arg: 1, scope: !18796, file: !18797, line: 61, type: !18800)
!18803 = !DILocation(line: 61, column: 24, scope: !18796)
!18804 = !DILocalVariable(name: "command_name", arg: 2, scope: !18796, file: !18797, line: 62, type: !146)
!18805 = !DILocation(line: 62, column: 30, scope: !18796)
!18806 = !DILocalVariable(name: "package", arg: 3, scope: !18796, file: !18797, line: 62, type: !146)
!18807 = !DILocation(line: 62, column: 56, scope: !18796)
!18808 = !DILocalVariable(name: "version", arg: 4, scope: !18796, file: !18797, line: 63, type: !146)
!18809 = !DILocation(line: 63, column: 30, scope: !18796)
!18810 = !DILocalVariable(name: "authors", arg: 5, scope: !18796, file: !18797, line: 64, type: !681)
!18811 = !DILocation(line: 64, column: 39, scope: !18796)
!18812 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18796, file: !18797, line: 64, type: !149)
!18813 = !DILocation(line: 64, column: 55, scope: !18796)
!18814 = !DILocation(line: 66, column: 7, scope: !18815)
!18815 = distinct !DILexicalBlock(scope: !18796, file: !18797, line: 66, column: 7)
!18816 = !DILocation(line: 66, column: 7, scope: !18796)
!18817 = !DILocation(line: 67, column: 14, scope: !18815)
!18818 = !DILocation(line: 67, column: 38, scope: !18815)
!18819 = !DILocation(line: 67, column: 52, scope: !18815)
!18820 = !DILocation(line: 67, column: 61, scope: !18815)
!18821 = !DILocation(line: 67, column: 5, scope: !18815)
!18822 = !DILocation(line: 69, column: 14, scope: !18815)
!18823 = !DILocation(line: 69, column: 33, scope: !18815)
!18824 = !DILocation(line: 69, column: 42, scope: !18815)
!18825 = !DILocation(line: 69, column: 5, scope: !18815)
!18826 = !DILocation(line: 83, column: 12, scope: !18796)
!18827 = !DILocation(line: 83, column: 43, scope: !18796)
!18828 = !DILocation(line: 83, column: 3, scope: !18796)
!18829 = !DILocation(line: 85, column: 3, scope: !18796)
!18830 = !DILocation(line: 88, column: 12, scope: !18796)
!18831 = !DILocation(line: 88, column: 20, scope: !18796)
!18832 = !DILocation(line: 88, column: 3, scope: !18796)
!18833 = !DILocation(line: 95, column: 3, scope: !18796)
!18834 = !DILocation(line: 97, column: 11, scope: !18796)
!18835 = !DILocation(line: 97, column: 3, scope: !18796)
!18836 = !DILocation(line: 102, column: 7, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18796, file: !18797, line: 98, column: 5)
!18838 = !DILocation(line: 105, column: 16, scope: !18837)
!18839 = !DILocation(line: 105, column: 24, scope: !18837)
!18840 = !DILocation(line: 105, column: 47, scope: !18837)
!18841 = !DILocation(line: 105, column: 7, scope: !18837)
!18842 = !DILocation(line: 106, column: 7, scope: !18837)
!18843 = !DILocation(line: 109, column: 16, scope: !18837)
!18844 = !DILocation(line: 109, column: 24, scope: !18837)
!18845 = !DILocation(line: 109, column: 54, scope: !18837)
!18846 = !DILocation(line: 109, column: 66, scope: !18837)
!18847 = !DILocation(line: 109, column: 7, scope: !18837)
!18848 = !DILocation(line: 110, column: 7, scope: !18837)
!18849 = !DILocation(line: 113, column: 16, scope: !18837)
!18850 = !DILocation(line: 113, column: 24, scope: !18837)
!18851 = !DILocation(line: 114, column: 16, scope: !18837)
!18852 = !DILocation(line: 114, column: 28, scope: !18837)
!18853 = !DILocation(line: 114, column: 40, scope: !18837)
!18854 = !DILocation(line: 113, column: 7, scope: !18837)
!18855 = !DILocation(line: 115, column: 7, scope: !18837)
!18856 = !DILocation(line: 120, column: 16, scope: !18837)
!18857 = !DILocation(line: 120, column: 24, scope: !18837)
!18858 = !DILocation(line: 121, column: 16, scope: !18837)
!18859 = !DILocation(line: 121, column: 28, scope: !18837)
!18860 = !DILocation(line: 121, column: 40, scope: !18837)
!18861 = !DILocation(line: 121, column: 52, scope: !18837)
!18862 = !DILocation(line: 120, column: 7, scope: !18837)
!18863 = !DILocation(line: 122, column: 7, scope: !18837)
!18864 = !DILocation(line: 127, column: 16, scope: !18837)
!18865 = !DILocation(line: 127, column: 24, scope: !18837)
!18866 = !DILocation(line: 128, column: 16, scope: !18837)
!18867 = !DILocation(line: 128, column: 28, scope: !18837)
!18868 = !DILocation(line: 128, column: 40, scope: !18837)
!18869 = !DILocation(line: 128, column: 52, scope: !18837)
!18870 = !DILocation(line: 128, column: 64, scope: !18837)
!18871 = !DILocation(line: 127, column: 7, scope: !18837)
!18872 = !DILocation(line: 129, column: 7, scope: !18837)
!18873 = !DILocation(line: 134, column: 16, scope: !18837)
!18874 = !DILocation(line: 134, column: 24, scope: !18837)
!18875 = !DILocation(line: 135, column: 16, scope: !18837)
!18876 = !DILocation(line: 135, column: 28, scope: !18837)
!18877 = !DILocation(line: 135, column: 40, scope: !18837)
!18878 = !DILocation(line: 135, column: 52, scope: !18837)
!18879 = !DILocation(line: 135, column: 64, scope: !18837)
!18880 = !DILocation(line: 136, column: 16, scope: !18837)
!18881 = !DILocation(line: 134, column: 7, scope: !18837)
!18882 = !DILocation(line: 137, column: 7, scope: !18837)
!18883 = !DILocation(line: 142, column: 16, scope: !18837)
!18884 = !DILocation(line: 142, column: 24, scope: !18837)
!18885 = !DILocation(line: 143, column: 16, scope: !18837)
!18886 = !DILocation(line: 143, column: 28, scope: !18837)
!18887 = !DILocation(line: 143, column: 40, scope: !18837)
!18888 = !DILocation(line: 143, column: 52, scope: !18837)
!18889 = !DILocation(line: 143, column: 64, scope: !18837)
!18890 = !DILocation(line: 144, column: 16, scope: !18837)
!18891 = !DILocation(line: 144, column: 28, scope: !18837)
!18892 = !DILocation(line: 142, column: 7, scope: !18837)
!18893 = !DILocation(line: 145, column: 7, scope: !18837)
!18894 = !DILocation(line: 150, column: 16, scope: !18837)
!18895 = !DILocation(line: 150, column: 24, scope: !18837)
!18896 = !DILocation(line: 152, column: 17, scope: !18837)
!18897 = !DILocation(line: 152, column: 29, scope: !18837)
!18898 = !DILocation(line: 152, column: 41, scope: !18837)
!18899 = !DILocation(line: 152, column: 53, scope: !18837)
!18900 = !DILocation(line: 152, column: 65, scope: !18837)
!18901 = !DILocation(line: 153, column: 17, scope: !18837)
!18902 = !DILocation(line: 153, column: 29, scope: !18837)
!18903 = !DILocation(line: 153, column: 41, scope: !18837)
!18904 = !DILocation(line: 150, column: 7, scope: !18837)
!18905 = !DILocation(line: 154, column: 7, scope: !18837)
!18906 = !DILocation(line: 159, column: 16, scope: !18837)
!18907 = !DILocation(line: 159, column: 24, scope: !18837)
!18908 = !DILocation(line: 161, column: 16, scope: !18837)
!18909 = !DILocation(line: 161, column: 28, scope: !18837)
!18910 = !DILocation(line: 161, column: 40, scope: !18837)
!18911 = !DILocation(line: 161, column: 52, scope: !18837)
!18912 = !DILocation(line: 161, column: 64, scope: !18837)
!18913 = !DILocation(line: 162, column: 16, scope: !18837)
!18914 = !DILocation(line: 162, column: 28, scope: !18837)
!18915 = !DILocation(line: 162, column: 40, scope: !18837)
!18916 = !DILocation(line: 162, column: 52, scope: !18837)
!18917 = !DILocation(line: 159, column: 7, scope: !18837)
!18918 = !DILocation(line: 163, column: 7, scope: !18837)
!18919 = !DILocation(line: 170, column: 16, scope: !18837)
!18920 = !DILocation(line: 170, column: 24, scope: !18837)
!18921 = !DILocation(line: 172, column: 17, scope: !18837)
!18922 = !DILocation(line: 172, column: 29, scope: !18837)
!18923 = !DILocation(line: 172, column: 41, scope: !18837)
!18924 = !DILocation(line: 172, column: 53, scope: !18837)
!18925 = !DILocation(line: 172, column: 65, scope: !18837)
!18926 = !DILocation(line: 173, column: 17, scope: !18837)
!18927 = !DILocation(line: 173, column: 29, scope: !18837)
!18928 = !DILocation(line: 173, column: 41, scope: !18837)
!18929 = !DILocation(line: 173, column: 53, scope: !18837)
!18930 = !DILocation(line: 170, column: 7, scope: !18837)
!18931 = !DILocation(line: 174, column: 7, scope: !18837)
!18932 = !DILocation(line: 176, column: 1, scope: !18796)
!18933 = distinct !DISubprogram(name: "version_etc_ar", scope: !18797, file: !18797, line: 183, type: !18934, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1625, retainedNodes: !152)
!18934 = !DISubroutineType(types: !18935)
!18935 = !{null, !18800, !146, !146, !146, !681}
!18936 = !DILocalVariable(name: "stream", arg: 1, scope: !18933, file: !18797, line: 183, type: !18800)
!18937 = !DILocation(line: 183, column: 23, scope: !18933)
!18938 = !DILocalVariable(name: "command_name", arg: 2, scope: !18933, file: !18797, line: 184, type: !146)
!18939 = !DILocation(line: 184, column: 29, scope: !18933)
!18940 = !DILocalVariable(name: "package", arg: 3, scope: !18933, file: !18797, line: 184, type: !146)
!18941 = !DILocation(line: 184, column: 55, scope: !18933)
!18942 = !DILocalVariable(name: "version", arg: 4, scope: !18933, file: !18797, line: 185, type: !146)
!18943 = !DILocation(line: 185, column: 29, scope: !18933)
!18944 = !DILocalVariable(name: "authors", arg: 5, scope: !18933, file: !18797, line: 185, type: !681)
!18945 = !DILocation(line: 185, column: 59, scope: !18933)
!18946 = !DILocalVariable(name: "n_authors", scope: !18933, file: !18797, line: 187, type: !149)
!18947 = !DILocation(line: 187, column: 10, scope: !18933)
!18948 = !DILocation(line: 189, column: 18, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18933, file: !18797, line: 189, column: 3)
!18950 = !DILocation(line: 189, column: 8, scope: !18949)
!18951 = !DILocation(line: 189, column: 23, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18949, file: !18797, line: 189, column: 3)
!18953 = !DILocation(line: 189, column: 31, scope: !18952)
!18954 = !DILocation(line: 189, column: 3, scope: !18949)
!18955 = !DILocation(line: 189, column: 52, scope: !18952)
!18956 = !DILocation(line: 189, column: 3, scope: !18952)
!18957 = distinct !{!18957, !18954, !18958}
!18958 = !DILocation(line: 190, column: 5, scope: !18949)
!18959 = !DILocation(line: 191, column: 20, scope: !18933)
!18960 = !DILocation(line: 191, column: 28, scope: !18933)
!18961 = !DILocation(line: 191, column: 42, scope: !18933)
!18962 = !DILocation(line: 191, column: 51, scope: !18933)
!18963 = !DILocation(line: 191, column: 60, scope: !18933)
!18964 = !DILocation(line: 191, column: 69, scope: !18933)
!18965 = !DILocation(line: 191, column: 3, scope: !18933)
!18966 = !DILocation(line: 192, column: 1, scope: !18933)
!18967 = distinct !DISubprogram(name: "version_etc_va", scope: !18797, file: !18797, line: 199, type: !18968, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1625, retainedNodes: !152)
!18968 = !DISubroutineType(types: !18969)
!18969 = !{null, !18800, !146, !146, !146, !18970}
!18970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!18971 = !DILocalVariable(name: "stream", arg: 1, scope: !18967, file: !18797, line: 199, type: !18800)
!18972 = !DILocation(line: 199, column: 23, scope: !18967)
!18973 = !DILocalVariable(name: "command_name", arg: 2, scope: !18967, file: !18797, line: 200, type: !146)
!18974 = !DILocation(line: 200, column: 29, scope: !18967)
!18975 = !DILocalVariable(name: "package", arg: 3, scope: !18967, file: !18797, line: 200, type: !146)
!18976 = !DILocation(line: 200, column: 55, scope: !18967)
!18977 = !DILocalVariable(name: "version", arg: 4, scope: !18967, file: !18797, line: 201, type: !146)
!18978 = !DILocation(line: 201, column: 29, scope: !18967)
!18979 = !DILocalVariable(name: "authors", arg: 5, scope: !18967, file: !18797, line: 201, type: !18970)
!18980 = !DILocation(line: 201, column: 46, scope: !18967)
!18981 = !DILocalVariable(name: "n_authors", scope: !18967, file: !18797, line: 203, type: !149)
!18982 = !DILocation(line: 203, column: 10, scope: !18967)
!18983 = !DILocalVariable(name: "authtab", scope: !18967, file: !18797, line: 204, type: !1643)
!18984 = !DILocation(line: 204, column: 15, scope: !18967)
!18985 = !DILocation(line: 206, column: 18, scope: !18986)
!18986 = distinct !DILexicalBlock(scope: !18967, file: !18797, line: 206, column: 3)
!18987 = !DILocation(line: 206, column: 8, scope: !18986)
!18988 = !DILocation(line: 207, column: 8, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18986, file: !18797, line: 206, column: 3)
!18990 = !DILocation(line: 207, column: 18, scope: !18989)
!18991 = !DILocation(line: 208, column: 10, scope: !18989)
!18992 = !DILocation(line: 208, column: 35, scope: !18989)
!18993 = !DILocation(line: 208, column: 22, scope: !18989)
!18994 = !DILocation(line: 208, column: 14, scope: !18989)
!18995 = !DILocation(line: 208, column: 33, scope: !18989)
!18996 = !DILocation(line: 208, column: 67, scope: !18989)
!18997 = !DILocation(line: 0, scope: !18989)
!18998 = !DILocation(line: 206, column: 3, scope: !18986)
!18999 = !DILocation(line: 209, column: 17, scope: !18989)
!19000 = !DILocation(line: 206, column: 3, scope: !18989)
!19001 = distinct !{!19001, !18998, !19002}
!19002 = !DILocation(line: 210, column: 5, scope: !18986)
!19003 = !DILocation(line: 211, column: 20, scope: !18967)
!19004 = !DILocation(line: 211, column: 28, scope: !18967)
!19005 = !DILocation(line: 211, column: 42, scope: !18967)
!19006 = !DILocation(line: 211, column: 51, scope: !18967)
!19007 = !DILocation(line: 212, column: 20, scope: !18967)
!19008 = !DILocation(line: 212, column: 29, scope: !18967)
!19009 = !DILocation(line: 211, column: 3, scope: !18967)
!19010 = !DILocation(line: 213, column: 1, scope: !18967)
!19011 = distinct !DISubprogram(name: "version_etc", scope: !18797, file: !18797, line: 230, type: !19012, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1625, retainedNodes: !152)
!19012 = !DISubroutineType(types: !19013)
!19013 = !{null, !18800, !146, !146, !146, null}
!19014 = !DILocalVariable(name: "stream", arg: 1, scope: !19011, file: !18797, line: 230, type: !18800)
!19015 = !DILocation(line: 230, column: 20, scope: !19011)
!19016 = !DILocalVariable(name: "command_name", arg: 2, scope: !19011, file: !18797, line: 231, type: !146)
!19017 = !DILocation(line: 231, column: 26, scope: !19011)
!19018 = !DILocalVariable(name: "package", arg: 3, scope: !19011, file: !18797, line: 231, type: !146)
!19019 = !DILocation(line: 231, column: 52, scope: !19011)
!19020 = !DILocalVariable(name: "version", arg: 4, scope: !19011, file: !18797, line: 232, type: !146)
!19021 = !DILocation(line: 232, column: 26, scope: !19011)
!19022 = !DILocalVariable(name: "authors", scope: !19011, file: !18797, line: 234, type: !1644)
!19023 = !DILocation(line: 234, column: 11, scope: !19011)
!19024 = !DILocation(line: 236, column: 3, scope: !19011)
!19025 = !DILocation(line: 237, column: 19, scope: !19011)
!19026 = !DILocation(line: 237, column: 27, scope: !19011)
!19027 = !DILocation(line: 237, column: 41, scope: !19011)
!19028 = !DILocation(line: 237, column: 50, scope: !19011)
!19029 = !DILocation(line: 237, column: 59, scope: !19011)
!19030 = !DILocation(line: 237, column: 3, scope: !19011)
!19031 = !DILocation(line: 238, column: 3, scope: !19011)
!19032 = !DILocation(line: 239, column: 1, scope: !19011)
!19033 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18797, file: !18797, line: 242, type: !526, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1625, retainedNodes: !152)
!19034 = !DILocation(line: 244, column: 3, scope: !19033)
!19035 = !DILocation(line: 249, column: 11, scope: !19033)
!19036 = !DILocation(line: 249, column: 3, scope: !19033)
!19037 = !DILocation(line: 255, column: 11, scope: !19033)
!19038 = !DILocation(line: 255, column: 3, scope: !19033)
!19039 = !DILocation(line: 260, column: 11, scope: !19033)
!19040 = !DILocation(line: 260, column: 3, scope: !19033)
!19041 = !DILocation(line: 262, column: 1, scope: !19033)
!19042 = distinct !DISubprogram(name: "xnmalloc", scope: !19043, file: !19043, line: 99, type: !19044, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19043 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!19044 = !DISubroutineType(types: !19045)
!19045 = !{!167, !149, !149}
!19046 = !DILocalVariable(name: "n", arg: 1, scope: !19042, file: !19043, line: 99, type: !149)
!19047 = !DILocation(line: 99, column: 18, scope: !19042)
!19048 = !DILocalVariable(name: "s", arg: 2, scope: !19042, file: !19043, line: 99, type: !149)
!19049 = !DILocation(line: 99, column: 28, scope: !19042)
!19050 = !DILocation(line: 101, column: 7, scope: !19051)
!19051 = distinct !DILexicalBlock(scope: !19042, file: !19043, line: 101, column: 7)
!19052 = !DILocation(line: 101, column: 7, scope: !19042)
!19053 = !DILocation(line: 102, column: 5, scope: !19051)
!19054 = !DILocation(line: 103, column: 19, scope: !19042)
!19055 = !DILocation(line: 103, column: 23, scope: !19042)
!19056 = !DILocation(line: 103, column: 21, scope: !19042)
!19057 = !DILocation(line: 103, column: 10, scope: !19042)
!19058 = !DILocation(line: 103, column: 3, scope: !19042)
!19059 = distinct !DISubprogram(name: "xmalloc", scope: !19060, file: !19060, line: 39, type: !479, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19060 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!19061 = !DILocalVariable(name: "n", arg: 1, scope: !19059, file: !19060, line: 39, type: !149)
!19062 = !DILocation(line: 39, column: 17, scope: !19059)
!19063 = !DILocalVariable(name: "p", scope: !19059, file: !19060, line: 41, type: !167)
!19064 = !DILocation(line: 41, column: 9, scope: !19059)
!19065 = !DILocation(line: 41, column: 21, scope: !19059)
!19066 = !DILocation(line: 41, column: 13, scope: !19059)
!19067 = !DILocation(line: 42, column: 8, scope: !19068)
!19068 = distinct !DILexicalBlock(scope: !19059, file: !19060, line: 42, column: 7)
!19069 = !DILocation(line: 42, column: 10, scope: !19068)
!19070 = !DILocation(line: 42, column: 13, scope: !19068)
!19071 = !DILocation(line: 42, column: 15, scope: !19068)
!19072 = !DILocation(line: 42, column: 7, scope: !19059)
!19073 = !DILocation(line: 43, column: 5, scope: !19068)
!19074 = !DILocation(line: 44, column: 10, scope: !19059)
!19075 = !DILocation(line: 44, column: 3, scope: !19059)
!19076 = distinct !DISubprogram(name: "xnrealloc", scope: !19043, file: !19043, line: 112, type: !19077, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19077 = !DISubroutineType(types: !19078)
!19078 = !{!167, !167, !149, !149}
!19079 = !DILocalVariable(name: "p", arg: 1, scope: !19076, file: !19043, line: 112, type: !167)
!19080 = !DILocation(line: 112, column: 18, scope: !19076)
!19081 = !DILocalVariable(name: "n", arg: 2, scope: !19076, file: !19043, line: 112, type: !149)
!19082 = !DILocation(line: 112, column: 28, scope: !19076)
!19083 = !DILocalVariable(name: "s", arg: 3, scope: !19076, file: !19043, line: 112, type: !149)
!19084 = !DILocation(line: 112, column: 38, scope: !19076)
!19085 = !DILocation(line: 114, column: 7, scope: !19086)
!19086 = distinct !DILexicalBlock(scope: !19076, file: !19043, line: 114, column: 7)
!19087 = !DILocation(line: 114, column: 7, scope: !19076)
!19088 = !DILocation(line: 115, column: 5, scope: !19086)
!19089 = !DILocation(line: 116, column: 20, scope: !19076)
!19090 = !DILocation(line: 116, column: 23, scope: !19076)
!19091 = !DILocation(line: 116, column: 27, scope: !19076)
!19092 = !DILocation(line: 116, column: 25, scope: !19076)
!19093 = !DILocation(line: 116, column: 10, scope: !19076)
!19094 = !DILocation(line: 116, column: 3, scope: !19076)
!19095 = distinct !DISubprogram(name: "xrealloc", scope: !19060, file: !19060, line: 51, type: !483, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19096 = !DILocalVariable(name: "p", arg: 1, scope: !19095, file: !19060, line: 51, type: !167)
!19097 = !DILocation(line: 51, column: 17, scope: !19095)
!19098 = !DILocalVariable(name: "n", arg: 2, scope: !19095, file: !19060, line: 51, type: !149)
!19099 = !DILocation(line: 51, column: 27, scope: !19095)
!19100 = !DILocation(line: 53, column: 8, scope: !19101)
!19101 = distinct !DILexicalBlock(scope: !19095, file: !19060, line: 53, column: 7)
!19102 = !DILocation(line: 53, column: 10, scope: !19101)
!19103 = !DILocation(line: 53, column: 13, scope: !19101)
!19104 = !DILocation(line: 53, column: 7, scope: !19095)
!19105 = !DILocation(line: 57, column: 13, scope: !19106)
!19106 = distinct !DILexicalBlock(scope: !19101, file: !19060, line: 54, column: 5)
!19107 = !DILocation(line: 57, column: 7, scope: !19106)
!19108 = !DILocation(line: 58, column: 7, scope: !19106)
!19109 = !DILocation(line: 61, column: 16, scope: !19095)
!19110 = !DILocation(line: 61, column: 19, scope: !19095)
!19111 = !DILocation(line: 61, column: 7, scope: !19095)
!19112 = !DILocation(line: 61, column: 5, scope: !19095)
!19113 = !DILocation(line: 62, column: 8, scope: !19114)
!19114 = distinct !DILexicalBlock(scope: !19095, file: !19060, line: 62, column: 7)
!19115 = !DILocation(line: 62, column: 10, scope: !19114)
!19116 = !DILocation(line: 62, column: 13, scope: !19114)
!19117 = !DILocation(line: 62, column: 7, scope: !19095)
!19118 = !DILocation(line: 63, column: 5, scope: !19114)
!19119 = !DILocation(line: 64, column: 10, scope: !19095)
!19120 = !DILocation(line: 64, column: 3, scope: !19095)
!19121 = !DILocation(line: 65, column: 1, scope: !19095)
!19122 = distinct !DISubprogram(name: "x2nrealloc", scope: !19043, file: !19043, line: 174, type: !19123, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19123 = !DISubroutineType(types: !19124)
!19124 = !{!167, !167, !148, !149}
!19125 = !DILocalVariable(name: "p", arg: 1, scope: !19122, file: !19043, line: 174, type: !167)
!19126 = !DILocation(line: 174, column: 19, scope: !19122)
!19127 = !DILocalVariable(name: "pn", arg: 2, scope: !19122, file: !19043, line: 174, type: !148)
!19128 = !DILocation(line: 174, column: 30, scope: !19122)
!19129 = !DILocalVariable(name: "s", arg: 3, scope: !19122, file: !19043, line: 174, type: !149)
!19130 = !DILocation(line: 174, column: 41, scope: !19122)
!19131 = !DILocalVariable(name: "n", scope: !19122, file: !19043, line: 176, type: !149)
!19132 = !DILocation(line: 176, column: 10, scope: !19122)
!19133 = !DILocation(line: 176, column: 15, scope: !19122)
!19134 = !DILocation(line: 176, column: 14, scope: !19122)
!19135 = !DILocation(line: 178, column: 9, scope: !19136)
!19136 = distinct !DILexicalBlock(scope: !19122, file: !19043, line: 178, column: 7)
!19137 = !DILocation(line: 178, column: 7, scope: !19122)
!19138 = !DILocation(line: 180, column: 13, scope: !19139)
!19139 = distinct !DILexicalBlock(scope: !19140, file: !19043, line: 180, column: 11)
!19140 = distinct !DILexicalBlock(scope: !19136, file: !19043, line: 179, column: 5)
!19141 = !DILocation(line: 180, column: 11, scope: !19140)
!19142 = !DILocation(line: 188, column: 32, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19139, file: !19043, line: 181, column: 9)
!19144 = !DILocation(line: 188, column: 30, scope: !19143)
!19145 = !DILocation(line: 188, column: 13, scope: !19143)
!19146 = !DILocation(line: 189, column: 17, scope: !19143)
!19147 = !DILocation(line: 189, column: 16, scope: !19143)
!19148 = !DILocation(line: 189, column: 13, scope: !19143)
!19149 = !DILocation(line: 190, column: 9, scope: !19143)
!19150 = !DILocation(line: 191, column: 11, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19140, file: !19043, line: 191, column: 11)
!19152 = !DILocation(line: 191, column: 11, scope: !19140)
!19153 = !DILocation(line: 192, column: 9, scope: !19151)
!19154 = !DILocation(line: 193, column: 5, scope: !19140)
!19155 = !DILocation(line: 200, column: 71, scope: !19156)
!19156 = distinct !DILexicalBlock(scope: !19157, file: !19043, line: 200, column: 11)
!19157 = distinct !DILexicalBlock(scope: !19136, file: !19043, line: 195, column: 5)
!19158 = !DILocation(line: 200, column: 69, scope: !19156)
!19159 = !DILocation(line: 201, column: 14, scope: !19156)
!19160 = !DILocation(line: 201, column: 11, scope: !19156)
!19161 = !DILocation(line: 200, column: 11, scope: !19157)
!19162 = !DILocation(line: 202, column: 9, scope: !19156)
!19163 = !DILocation(line: 203, column: 12, scope: !19157)
!19164 = !DILocation(line: 203, column: 14, scope: !19157)
!19165 = !DILocation(line: 203, column: 18, scope: !19157)
!19166 = !DILocation(line: 203, column: 9, scope: !19157)
!19167 = !DILocation(line: 206, column: 9, scope: !19122)
!19168 = !DILocation(line: 206, column: 4, scope: !19122)
!19169 = !DILocation(line: 206, column: 7, scope: !19122)
!19170 = !DILocation(line: 207, column: 20, scope: !19122)
!19171 = !DILocation(line: 207, column: 23, scope: !19122)
!19172 = !DILocation(line: 207, column: 27, scope: !19122)
!19173 = !DILocation(line: 207, column: 25, scope: !19122)
!19174 = !DILocation(line: 207, column: 10, scope: !19122)
!19175 = !DILocation(line: 207, column: 3, scope: !19122)
!19176 = distinct !DISubprogram(name: "xcharalloc", scope: !19043, file: !19043, line: 216, type: !19177, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19177 = !DISubroutineType(types: !19178)
!19178 = !{!143, !149}
!19179 = !DILocalVariable(name: "n", arg: 1, scope: !19176, file: !19043, line: 216, type: !149)
!19180 = !DILocation(line: 216, column: 20, scope: !19176)
!19181 = !DILocation(line: 218, column: 10, scope: !19176)
!19182 = !DILocation(line: 218, column: 3, scope: !19176)
!19183 = distinct !DISubprogram(name: "x2realloc", scope: !19060, file: !19060, line: 74, type: !19184, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19184 = !DISubroutineType(types: !19185)
!19185 = !{!167, !167, !148}
!19186 = !DILocalVariable(name: "p", arg: 1, scope: !19183, file: !19060, line: 74, type: !167)
!19187 = !DILocation(line: 74, column: 18, scope: !19183)
!19188 = !DILocalVariable(name: "pn", arg: 2, scope: !19183, file: !19060, line: 74, type: !148)
!19189 = !DILocation(line: 74, column: 29, scope: !19183)
!19190 = !DILocation(line: 76, column: 22, scope: !19183)
!19191 = !DILocation(line: 76, column: 25, scope: !19183)
!19192 = !DILocation(line: 76, column: 10, scope: !19183)
!19193 = !DILocation(line: 76, column: 3, scope: !19183)
!19194 = distinct !DISubprogram(name: "xzalloc", scope: !19060, file: !19060, line: 84, type: !479, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19195 = !DILocalVariable(name: "s", arg: 1, scope: !19194, file: !19060, line: 84, type: !149)
!19196 = !DILocation(line: 84, column: 17, scope: !19194)
!19197 = !DILocation(line: 86, column: 27, scope: !19194)
!19198 = !DILocation(line: 86, column: 18, scope: !19194)
!19199 = !DILocation(line: 86, column: 34, scope: !19194)
!19200 = !DILocation(line: 86, column: 10, scope: !19194)
!19201 = !DILocation(line: 86, column: 3, scope: !19194)
!19202 = distinct !DISubprogram(name: "xcalloc", scope: !19060, file: !19060, line: 93, type: !19044, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19203 = !DILocalVariable(name: "n", arg: 1, scope: !19202, file: !19060, line: 93, type: !149)
!19204 = !DILocation(line: 93, column: 17, scope: !19202)
!19205 = !DILocalVariable(name: "s", arg: 2, scope: !19202, file: !19060, line: 93, type: !149)
!19206 = !DILocation(line: 93, column: 27, scope: !19202)
!19207 = !DILocalVariable(name: "p", scope: !19202, file: !19060, line: 95, type: !167)
!19208 = !DILocation(line: 95, column: 9, scope: !19202)
!19209 = !DILocation(line: 100, column: 7, scope: !19210)
!19210 = distinct !DILexicalBlock(scope: !19202, file: !19060, line: 100, column: 7)
!19211 = !DILocation(line: 101, column: 7, scope: !19210)
!19212 = !DILocation(line: 101, column: 26, scope: !19210)
!19213 = !DILocation(line: 101, column: 29, scope: !19210)
!19214 = !DILocation(line: 101, column: 18, scope: !19210)
!19215 = !DILocation(line: 101, column: 16, scope: !19210)
!19216 = !DILocation(line: 100, column: 7, scope: !19202)
!19217 = !DILocation(line: 102, column: 5, scope: !19210)
!19218 = !DILocation(line: 103, column: 10, scope: !19202)
!19219 = !DILocation(line: 103, column: 3, scope: !19202)
!19220 = distinct !DISubprogram(name: "xmemdup", scope: !19060, file: !19060, line: 111, type: !19221, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19221 = !DISubroutineType(types: !19222)
!19222 = !{!167, !175, !149}
!19223 = !DILocalVariable(name: "p", arg: 1, scope: !19220, file: !19060, line: 111, type: !175)
!19224 = !DILocation(line: 111, column: 22, scope: !19220)
!19225 = !DILocalVariable(name: "s", arg: 2, scope: !19220, file: !19060, line: 111, type: !149)
!19226 = !DILocation(line: 111, column: 32, scope: !19220)
!19227 = !DILocation(line: 113, column: 27, scope: !19220)
!19228 = !DILocation(line: 113, column: 18, scope: !19220)
!19229 = !DILocation(line: 113, column: 31, scope: !19220)
!19230 = !DILocation(line: 113, column: 34, scope: !19220)
!19231 = !DILocation(line: 113, column: 10, scope: !19220)
!19232 = !DILocation(line: 113, column: 3, scope: !19220)
!19233 = distinct !DISubprogram(name: "xstrdup", scope: !19060, file: !19060, line: 119, type: !8560, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !152)
!19234 = !DILocalVariable(name: "string", arg: 1, scope: !19233, file: !19060, line: 119, type: !146)
!19235 = !DILocation(line: 119, column: 22, scope: !19233)
!19236 = !DILocation(line: 121, column: 19, scope: !19233)
!19237 = !DILocation(line: 121, column: 35, scope: !19233)
!19238 = !DILocation(line: 121, column: 27, scope: !19233)
!19239 = !DILocation(line: 121, column: 43, scope: !19233)
!19240 = !DILocation(line: 121, column: 10, scope: !19233)
!19241 = !DILocation(line: 121, column: 3, scope: !19233)
!19242 = distinct !DISubprogram(name: "xalloc_die", scope: !19243, file: !19243, line: 32, type: !526, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1697, retainedNodes: !152)
!19243 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!19244 = !DILocation(line: 34, column: 10, scope: !19242)
!19245 = !DILocation(line: 34, column: 33, scope: !19242)
!19246 = !DILocation(line: 34, column: 3, scope: !19242)
!19247 = !DILocation(line: 40, column: 3, scope: !19242)
!19248 = distinct !DISubprogram(name: "xnumtoumax", scope: !19249, file: !19249, line: 36, type: !19250, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !152)
!19249 = !DIFile(filename: "./lib/xdectoint.c", directory: "/home/mohamad/clone/coreutils")
!19250 = !DISubroutineType(types: !19251)
!19251 = !{!168, !146, !27, !168, !168, !146, !146, !27}
!19252 = !DILocalVariable(name: "n_str", arg: 1, scope: !19248, file: !19249, line: 36, type: !146)
!19253 = !DILocation(line: 36, column: 26, scope: !19248)
!19254 = !DILocalVariable(name: "base", arg: 2, scope: !19248, file: !19249, line: 36, type: !27)
!19255 = !DILocation(line: 36, column: 37, scope: !19248)
!19256 = !DILocalVariable(name: "min", arg: 3, scope: !19248, file: !19249, line: 36, type: !168)
!19257 = !DILocation(line: 36, column: 57, scope: !19248)
!19258 = !DILocalVariable(name: "max", arg: 4, scope: !19248, file: !19249, line: 36, type: !168)
!19259 = !DILocation(line: 36, column: 76, scope: !19248)
!19260 = !DILocalVariable(name: "suffixes", arg: 5, scope: !19248, file: !19249, line: 37, type: !146)
!19261 = !DILocation(line: 37, column: 26, scope: !19248)
!19262 = !DILocalVariable(name: "err", arg: 6, scope: !19248, file: !19249, line: 37, type: !146)
!19263 = !DILocation(line: 37, column: 48, scope: !19248)
!19264 = !DILocalVariable(name: "err_exit", arg: 7, scope: !19248, file: !19249, line: 37, type: !27)
!19265 = !DILocation(line: 37, column: 57, scope: !19248)
!19266 = !DILocalVariable(name: "s_err", scope: !19248, file: !19249, line: 39, type: !1267)
!19267 = !DILocation(line: 39, column: 16, scope: !19248)
!19268 = !DILocalVariable(name: "tnum", scope: !19248, file: !19249, line: 41, type: !168)
!19269 = !DILocation(line: 41, column: 17, scope: !19248)
!19270 = !DILocation(line: 42, column: 22, scope: !19248)
!19271 = !DILocation(line: 42, column: 35, scope: !19248)
!19272 = !DILocation(line: 42, column: 48, scope: !19248)
!19273 = !DILocation(line: 42, column: 11, scope: !19248)
!19274 = !DILocation(line: 42, column: 9, scope: !19248)
!19275 = !DILocation(line: 44, column: 7, scope: !19276)
!19276 = distinct !DILexicalBlock(scope: !19248, file: !19249, line: 44, column: 7)
!19277 = !DILocation(line: 44, column: 13, scope: !19276)
!19278 = !DILocation(line: 44, column: 7, scope: !19248)
!19279 = !DILocation(line: 46, column: 11, scope: !19280)
!19280 = distinct !DILexicalBlock(scope: !19281, file: !19249, line: 46, column: 11)
!19281 = distinct !DILexicalBlock(scope: !19276, file: !19249, line: 45, column: 5)
!19282 = !DILocation(line: 46, column: 18, scope: !19280)
!19283 = !DILocation(line: 46, column: 16, scope: !19280)
!19284 = !DILocation(line: 46, column: 22, scope: !19280)
!19285 = !DILocation(line: 46, column: 25, scope: !19280)
!19286 = !DILocation(line: 46, column: 31, scope: !19280)
!19287 = !DILocation(line: 46, column: 29, scope: !19280)
!19288 = !DILocation(line: 46, column: 11, scope: !19281)
!19289 = !DILocation(line: 48, column: 17, scope: !19290)
!19290 = distinct !DILexicalBlock(scope: !19280, file: !19249, line: 47, column: 9)
!19291 = !DILocation(line: 51, column: 15, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19290, file: !19249, line: 51, column: 15)
!19293 = !DILocation(line: 51, column: 20, scope: !19292)
!19294 = !DILocation(line: 51, column: 15, scope: !19290)
!19295 = !DILocation(line: 52, column: 13, scope: !19292)
!19296 = !DILocation(line: 52, column: 19, scope: !19292)
!19297 = !DILocation(line: 58, column: 13, scope: !19292)
!19298 = !DILocation(line: 58, column: 19, scope: !19292)
!19299 = !DILocation(line: 59, column: 9, scope: !19290)
!19300 = !DILocation(line: 60, column: 5, scope: !19281)
!19301 = !DILocation(line: 61, column: 12, scope: !19302)
!19302 = distinct !DILexicalBlock(scope: !19276, file: !19249, line: 61, column: 12)
!19303 = !DILocation(line: 61, column: 18, scope: !19302)
!19304 = !DILocation(line: 61, column: 12, scope: !19276)
!19305 = !DILocation(line: 62, column: 5, scope: !19302)
!19306 = !DILocation(line: 62, column: 11, scope: !19302)
!19307 = !DILocation(line: 63, column: 12, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19302, file: !19249, line: 63, column: 12)
!19309 = !DILocation(line: 63, column: 18, scope: !19308)
!19310 = !DILocation(line: 63, column: 12, scope: !19302)
!19311 = !DILocation(line: 64, column: 5, scope: !19308)
!19312 = !DILocation(line: 64, column: 11, scope: !19308)
!19313 = !DILocation(line: 66, column: 7, scope: !19314)
!19314 = distinct !DILexicalBlock(scope: !19248, file: !19249, line: 66, column: 7)
!19315 = !DILocation(line: 66, column: 13, scope: !19314)
!19316 = !DILocation(line: 66, column: 7, scope: !19248)
!19317 = !DILocation(line: 69, column: 14, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19314, file: !19249, line: 67, column: 5)
!19319 = !DILocation(line: 69, column: 25, scope: !19318)
!19320 = !DILocation(line: 69, column: 50, scope: !19318)
!19321 = !DILocation(line: 69, column: 56, scope: !19318)
!19322 = !DILocation(line: 69, column: 72, scope: !19318)
!19323 = !DILocation(line: 70, column: 24, scope: !19318)
!19324 = !DILocation(line: 70, column: 36, scope: !19318)
!19325 = !DILocation(line: 70, column: 29, scope: !19318)
!19326 = !DILocation(line: 69, column: 7, scope: !19318)
!19327 = !DILocation(line: 71, column: 5, scope: !19318)
!19328 = !DILocation(line: 73, column: 10, scope: !19248)
!19329 = !DILocation(line: 73, column: 3, scope: !19248)
!19330 = distinct !DISubprogram(name: "xdectoumax", scope: !19249, file: !19249, line: 82, type: !19331, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !152)
!19331 = !DISubroutineType(types: !19332)
!19332 = !{!168, !146, !168, !168, !146, !146, !27}
!19333 = !DILocalVariable(name: "n_str", arg: 1, scope: !19330, file: !19249, line: 82, type: !146)
!19334 = !DILocation(line: 82, column: 26, scope: !19330)
!19335 = !DILocalVariable(name: "min", arg: 2, scope: !19330, file: !19249, line: 82, type: !168)
!19336 = !DILocation(line: 82, column: 47, scope: !19330)
!19337 = !DILocalVariable(name: "max", arg: 3, scope: !19330, file: !19249, line: 82, type: !168)
!19338 = !DILocation(line: 82, column: 66, scope: !19330)
!19339 = !DILocalVariable(name: "suffixes", arg: 4, scope: !19330, file: !19249, line: 83, type: !146)
!19340 = !DILocation(line: 83, column: 26, scope: !19330)
!19341 = !DILocalVariable(name: "err", arg: 5, scope: !19330, file: !19249, line: 83, type: !146)
!19342 = !DILocation(line: 83, column: 48, scope: !19330)
!19343 = !DILocalVariable(name: "err_exit", arg: 6, scope: !19330, file: !19249, line: 83, type: !27)
!19344 = !DILocation(line: 83, column: 57, scope: !19330)
!19345 = !DILocation(line: 85, column: 23, scope: !19330)
!19346 = !DILocation(line: 85, column: 34, scope: !19330)
!19347 = !DILocation(line: 85, column: 39, scope: !19330)
!19348 = !DILocation(line: 85, column: 44, scope: !19330)
!19349 = !DILocation(line: 85, column: 54, scope: !19330)
!19350 = !DILocation(line: 85, column: 59, scope: !19330)
!19351 = !DILocation(line: 85, column: 10, scope: !19330)
!19352 = !DILocation(line: 85, column: 3, scope: !19330)
!19353 = distinct !DISubprogram(name: "xgetcwd", scope: !19354, file: !19354, line: 35, type: !19355, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !152)
!19354 = !DIFile(filename: "lib/xgetcwd.c", directory: "/home/mohamad/clone/coreutils")
!19355 = !DISubroutineType(types: !1764)
!19356 = !DILocalVariable(name: "cwd", scope: !19353, file: !19354, line: 37, type: !143)
!19357 = !DILocation(line: 37, column: 9, scope: !19353)
!19358 = !DILocation(line: 37, column: 15, scope: !19353)
!19359 = !DILocation(line: 38, column: 9, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19353, file: !19354, line: 38, column: 7)
!19361 = !DILocation(line: 38, column: 13, scope: !19360)
!19362 = !DILocation(line: 38, column: 16, scope: !19360)
!19363 = !DILocation(line: 38, column: 22, scope: !19360)
!19364 = !DILocation(line: 38, column: 7, scope: !19353)
!19365 = !DILocation(line: 39, column: 5, scope: !19360)
!19366 = !DILocation(line: 40, column: 10, scope: !19353)
!19367 = !DILocation(line: 40, column: 3, scope: !19353)
!19368 = distinct !DISubprogram(name: "xgethostname", scope: !19369, file: !19369, line: 41, type: !19355, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1706, retainedNodes: !152)
!19369 = !DIFile(filename: "lib/xgethostname.c", directory: "/home/mohamad/clone/coreutils")
!19370 = !DILocalVariable(name: "hostname", scope: !19368, file: !19369, line: 43, type: !143)
!19371 = !DILocation(line: 43, column: 9, scope: !19368)
!19372 = !DILocalVariable(name: "size", scope: !19368, file: !19369, line: 44, type: !149)
!19373 = !DILocation(line: 44, column: 10, scope: !19368)
!19374 = !DILocation(line: 46, column: 3, scope: !19368)
!19375 = !DILocalVariable(name: "size_1", scope: !19376, file: !19369, line: 51, type: !149)
!19376 = distinct !DILexicalBlock(scope: !19368, file: !19369, line: 47, column: 5)
!19377 = !DILocation(line: 51, column: 14, scope: !19376)
!19378 = !DILocation(line: 53, column: 29, scope: !19376)
!19379 = !DILocation(line: 53, column: 18, scope: !19376)
!19380 = !DILocation(line: 53, column: 16, scope: !19376)
!19381 = !DILocation(line: 54, column: 16, scope: !19376)
!19382 = !DILocation(line: 54, column: 21, scope: !19376)
!19383 = !DILocation(line: 54, column: 14, scope: !19376)
!19384 = !DILocation(line: 55, column: 7, scope: !19376)
!19385 = !DILocation(line: 55, column: 16, scope: !19376)
!19386 = !DILocation(line: 55, column: 23, scope: !19376)
!19387 = !DILocation(line: 55, column: 28, scope: !19376)
!19388 = !DILocation(line: 56, column: 7, scope: !19376)
!19389 = !DILocation(line: 56, column: 13, scope: !19376)
!19390 = !DILocation(line: 58, column: 24, scope: !19391)
!19391 = distinct !DILexicalBlock(scope: !19376, file: !19369, line: 58, column: 11)
!19392 = !DILocation(line: 58, column: 34, scope: !19391)
!19393 = !DILocation(line: 58, column: 11, scope: !19391)
!19394 = !DILocation(line: 58, column: 42, scope: !19391)
!19395 = !DILocation(line: 58, column: 11, scope: !19376)
!19396 = !DILocation(line: 60, column: 17, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19398, file: !19369, line: 60, column: 15)
!19398 = distinct !DILexicalBlock(scope: !19391, file: !19369, line: 59, column: 9)
!19399 = !DILocation(line: 60, column: 26, scope: !19397)
!19400 = !DILocation(line: 60, column: 33, scope: !19397)
!19401 = !DILocation(line: 60, column: 15, scope: !19398)
!19402 = !DILocation(line: 61, column: 13, scope: !19397)
!19403 = !DILocation(line: 62, column: 9, scope: !19398)
!19404 = !DILocation(line: 63, column: 16, scope: !19405)
!19405 = distinct !DILexicalBlock(scope: !19391, file: !19369, line: 63, column: 16)
!19406 = !DILocation(line: 63, column: 22, scope: !19405)
!19407 = !DILocation(line: 63, column: 27, scope: !19405)
!19408 = !DILocation(line: 63, column: 30, scope: !19405)
!19409 = !DILocation(line: 63, column: 36, scope: !19405)
!19410 = !DILocation(line: 63, column: 52, scope: !19405)
!19411 = !DILocation(line: 63, column: 55, scope: !19405)
!19412 = !DILocation(line: 63, column: 61, scope: !19405)
!19413 = !DILocation(line: 65, column: 16, scope: !19405)
!19414 = !DILocation(line: 65, column: 19, scope: !19405)
!19415 = !DILocation(line: 65, column: 25, scope: !19405)
!19416 = !DILocation(line: 63, column: 16, scope: !19391)
!19417 = !DILocalVariable(name: "saved_errno", scope: !19418, file: !19369, line: 67, type: !27)
!19418 = distinct !DILexicalBlock(scope: !19405, file: !19369, line: 66, column: 9)
!19419 = !DILocation(line: 67, column: 15, scope: !19418)
!19420 = !DILocation(line: 67, column: 29, scope: !19418)
!19421 = !DILocation(line: 68, column: 17, scope: !19418)
!19422 = !DILocation(line: 68, column: 11, scope: !19418)
!19423 = !DILocation(line: 69, column: 19, scope: !19418)
!19424 = !DILocation(line: 69, column: 11, scope: !19418)
!19425 = !DILocation(line: 69, column: 17, scope: !19418)
!19426 = !DILocation(line: 70, column: 11, scope: !19418)
!19427 = distinct !{!19427, !19374, !19428}
!19428 = !DILocation(line: 72, column: 5, scope: !19368)
!19429 = !DILocalVariable(name: "actual_size", scope: !19430, file: !19369, line: 76, type: !149)
!19430 = distinct !DILexicalBlock(scope: !19368, file: !19369, line: 75, column: 3)
!19431 = !DILocation(line: 76, column: 12, scope: !19430)
!19432 = !DILocation(line: 76, column: 34, scope: !19430)
!19433 = !DILocation(line: 76, column: 26, scope: !19430)
!19434 = !DILocation(line: 76, column: 44, scope: !19430)
!19435 = !DILocation(line: 77, column: 9, scope: !19436)
!19436 = distinct !DILexicalBlock(scope: !19430, file: !19369, line: 77, column: 9)
!19437 = !DILocation(line: 77, column: 23, scope: !19436)
!19438 = !DILocation(line: 77, column: 21, scope: !19436)
!19439 = !DILocation(line: 77, column: 9, scope: !19430)
!19440 = !DILocalVariable(name: "shrinked_hostname", scope: !19441, file: !19369, line: 79, type: !143)
!19441 = distinct !DILexicalBlock(scope: !19436, file: !19369, line: 78, column: 7)
!19442 = !DILocation(line: 79, column: 15, scope: !19441)
!19443 = !DILocation(line: 79, column: 44, scope: !19441)
!19444 = !DILocation(line: 79, column: 54, scope: !19441)
!19445 = !DILocation(line: 79, column: 35, scope: !19441)
!19446 = !DILocation(line: 80, column: 13, scope: !19447)
!19447 = distinct !DILexicalBlock(scope: !19441, file: !19369, line: 80, column: 13)
!19448 = !DILocation(line: 80, column: 31, scope: !19447)
!19449 = !DILocation(line: 80, column: 13, scope: !19441)
!19450 = !DILocation(line: 81, column: 22, scope: !19447)
!19451 = !DILocation(line: 81, column: 20, scope: !19447)
!19452 = !DILocation(line: 81, column: 11, scope: !19447)
!19453 = !DILocation(line: 82, column: 7, scope: !19441)
!19454 = !DILocation(line: 85, column: 10, scope: !19368)
!19455 = !DILocation(line: 85, column: 3, scope: !19368)
!19456 = !DILocation(line: 86, column: 1, scope: !19368)
!19457 = distinct !DISubprogram(name: "xstrtoul", scope: !19458, file: !19458, line: 76, type: !19459, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!19458 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mohamad/clone/coreutils")
!19459 = !DISubroutineType(types: !19460)
!19460 = !{!1267, !146, !142, !27, !19461, !146}
!19461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!19462 = !DILocalVariable(name: "s", arg: 1, scope: !19457, file: !19458, line: 76, type: !146)
!19463 = !DILocation(line: 76, column: 24, scope: !19457)
!19464 = !DILocalVariable(name: "ptr", arg: 2, scope: !19457, file: !19458, line: 76, type: !142)
!19465 = !DILocation(line: 76, column: 34, scope: !19457)
!19466 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19457, file: !19458, line: 76, type: !27)
!19467 = !DILocation(line: 76, column: 43, scope: !19457)
!19468 = !DILocalVariable(name: "val", arg: 4, scope: !19457, file: !19458, line: 77, type: !19461)
!19469 = !DILocation(line: 77, column: 24, scope: !19457)
!19470 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19457, file: !19458, line: 77, type: !146)
!19471 = !DILocation(line: 77, column: 41, scope: !19457)
!19472 = !DILocalVariable(name: "t_ptr", scope: !19457, file: !19458, line: 79, type: !143)
!19473 = !DILocation(line: 79, column: 9, scope: !19457)
!19474 = !DILocalVariable(name: "p", scope: !19457, file: !19458, line: 80, type: !142)
!19475 = !DILocation(line: 80, column: 10, scope: !19457)
!19476 = !DILocalVariable(name: "tmp", scope: !19457, file: !19458, line: 81, type: !151)
!19477 = !DILocation(line: 81, column: 14, scope: !19457)
!19478 = !DILocalVariable(name: "err", scope: !19457, file: !19458, line: 82, type: !1267)
!19479 = !DILocation(line: 82, column: 16, scope: !19457)
!19480 = !DILocation(line: 84, column: 3, scope: !19457)
!19481 = !DILocation(line: 86, column: 8, scope: !19457)
!19482 = !DILocation(line: 86, column: 14, scope: !19457)
!19483 = !DILocation(line: 86, column: 5, scope: !19457)
!19484 = !DILocation(line: 88, column: 3, scope: !19457)
!19485 = !DILocation(line: 88, column: 9, scope: !19457)
!19486 = !DILocalVariable(name: "q", scope: !19487, file: !19458, line: 92, type: !146)
!19487 = distinct !DILexicalBlock(scope: !19488, file: !19458, line: 91, column: 5)
!19488 = distinct !DILexicalBlock(scope: !19457, file: !19458, line: 90, column: 7)
!19489 = !DILocation(line: 92, column: 19, scope: !19487)
!19490 = !DILocation(line: 92, column: 23, scope: !19487)
!19491 = !DILocalVariable(name: "ch", scope: !19487, file: !19458, line: 93, type: !725)
!19492 = !DILocation(line: 93, column: 21, scope: !19487)
!19493 = !DILocation(line: 93, column: 27, scope: !19487)
!19494 = !DILocation(line: 93, column: 26, scope: !19487)
!19495 = !DILocation(line: 94, column: 7, scope: !19487)
!19496 = !DILocation(line: 94, column: 14, scope: !19487)
!19497 = !DILocation(line: 95, column: 15, scope: !19487)
!19498 = !DILocation(line: 95, column: 14, scope: !19487)
!19499 = !DILocation(line: 95, column: 12, scope: !19487)
!19500 = distinct !{!19500, !19495, !19501}
!19501 = !DILocation(line: 95, column: 17, scope: !19487)
!19502 = !DILocation(line: 96, column: 11, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19487, file: !19458, line: 96, column: 11)
!19504 = !DILocation(line: 96, column: 14, scope: !19503)
!19505 = !DILocation(line: 96, column: 11, scope: !19487)
!19506 = !DILocation(line: 97, column: 9, scope: !19503)
!19507 = !DILocation(line: 100, column: 19, scope: !19457)
!19508 = !DILocation(line: 100, column: 22, scope: !19457)
!19509 = !DILocation(line: 100, column: 25, scope: !19457)
!19510 = !DILocation(line: 100, column: 9, scope: !19457)
!19511 = !DILocation(line: 100, column: 7, scope: !19457)
!19512 = !DILocation(line: 102, column: 8, scope: !19513)
!19513 = distinct !DILexicalBlock(scope: !19457, file: !19458, line: 102, column: 7)
!19514 = !DILocation(line: 102, column: 7, scope: !19513)
!19515 = !DILocation(line: 102, column: 13, scope: !19513)
!19516 = !DILocation(line: 102, column: 10, scope: !19513)
!19517 = !DILocation(line: 102, column: 7, scope: !19457)
!19518 = !DILocation(line: 106, column: 11, scope: !19519)
!19519 = distinct !DILexicalBlock(scope: !19520, file: !19458, line: 106, column: 11)
!19520 = distinct !DILexicalBlock(scope: !19513, file: !19458, line: 103, column: 5)
!19521 = !DILocation(line: 106, column: 26, scope: !19519)
!19522 = !DILocation(line: 106, column: 31, scope: !19519)
!19523 = !DILocation(line: 106, column: 30, scope: !19519)
!19524 = !DILocation(line: 106, column: 29, scope: !19519)
!19525 = !DILocation(line: 106, column: 33, scope: !19519)
!19526 = !DILocation(line: 106, column: 44, scope: !19519)
!19527 = !DILocation(line: 106, column: 62, scope: !19519)
!19528 = !DILocation(line: 106, column: 61, scope: !19519)
!19529 = !DILocation(line: 106, column: 60, scope: !19519)
!19530 = !DILocation(line: 106, column: 36, scope: !19519)
!19531 = !DILocation(line: 106, column: 11, scope: !19520)
!19532 = !DILocation(line: 107, column: 13, scope: !19519)
!19533 = !DILocation(line: 107, column: 9, scope: !19519)
!19534 = !DILocation(line: 109, column: 9, scope: !19519)
!19535 = !DILocation(line: 110, column: 5, scope: !19520)
!19536 = !DILocation(line: 111, column: 12, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19513, file: !19458, line: 111, column: 12)
!19538 = !DILocation(line: 111, column: 18, scope: !19537)
!19539 = !DILocation(line: 111, column: 12, scope: !19513)
!19540 = !DILocation(line: 113, column: 11, scope: !19541)
!19541 = distinct !DILexicalBlock(scope: !19542, file: !19458, line: 113, column: 11)
!19542 = distinct !DILexicalBlock(scope: !19537, file: !19458, line: 112, column: 5)
!19543 = !DILocation(line: 113, column: 17, scope: !19541)
!19544 = !DILocation(line: 113, column: 11, scope: !19542)
!19545 = !DILocation(line: 114, column: 9, scope: !19541)
!19546 = !DILocation(line: 115, column: 11, scope: !19542)
!19547 = !DILocation(line: 116, column: 5, scope: !19542)
!19548 = !DILocation(line: 121, column: 8, scope: !19549)
!19549 = distinct !DILexicalBlock(scope: !19457, file: !19458, line: 121, column: 7)
!19550 = !DILocation(line: 121, column: 7, scope: !19457)
!19551 = !DILocation(line: 123, column: 14, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19549, file: !19458, line: 122, column: 5)
!19553 = !DILocation(line: 123, column: 8, scope: !19552)
!19554 = !DILocation(line: 123, column: 12, scope: !19552)
!19555 = !DILocation(line: 124, column: 14, scope: !19552)
!19556 = !DILocation(line: 124, column: 7, scope: !19552)
!19557 = !DILocation(line: 127, column: 9, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19457, file: !19458, line: 127, column: 7)
!19559 = !DILocation(line: 127, column: 8, scope: !19558)
!19560 = !DILocation(line: 127, column: 7, scope: !19558)
!19561 = !DILocation(line: 127, column: 11, scope: !19558)
!19562 = !DILocation(line: 127, column: 7, scope: !19457)
!19563 = !DILocalVariable(name: "base", scope: !19564, file: !19458, line: 129, type: !27)
!19564 = distinct !DILexicalBlock(scope: !19558, file: !19458, line: 128, column: 5)
!19565 = !DILocation(line: 129, column: 11, scope: !19564)
!19566 = !DILocalVariable(name: "suffixes", scope: !19564, file: !19458, line: 130, type: !27)
!19567 = !DILocation(line: 130, column: 11, scope: !19564)
!19568 = !DILocalVariable(name: "overflow", scope: !19564, file: !19458, line: 131, type: !1267)
!19569 = !DILocation(line: 131, column: 20, scope: !19564)
!19570 = !DILocation(line: 133, column: 20, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19564, file: !19458, line: 133, column: 11)
!19572 = !DILocation(line: 133, column: 38, scope: !19571)
!19573 = !DILocation(line: 133, column: 37, scope: !19571)
!19574 = !DILocation(line: 133, column: 36, scope: !19571)
!19575 = !DILocation(line: 133, column: 12, scope: !19571)
!19576 = !DILocation(line: 133, column: 11, scope: !19564)
!19577 = !DILocation(line: 135, column: 18, scope: !19578)
!19578 = distinct !DILexicalBlock(scope: !19571, file: !19458, line: 134, column: 9)
!19579 = !DILocation(line: 135, column: 12, scope: !19578)
!19580 = !DILocation(line: 135, column: 16, scope: !19578)
!19581 = !DILocation(line: 136, column: 18, scope: !19578)
!19582 = !DILocation(line: 136, column: 22, scope: !19578)
!19583 = !DILocation(line: 136, column: 11, scope: !19578)
!19584 = !DILocation(line: 139, column: 17, scope: !19564)
!19585 = !DILocation(line: 139, column: 16, scope: !19564)
!19586 = !DILocation(line: 139, column: 15, scope: !19564)
!19587 = !DILocation(line: 139, column: 7, scope: !19564)
!19588 = !DILocation(line: 151, column: 23, scope: !19589)
!19589 = distinct !DILexicalBlock(scope: !19590, file: !19458, line: 151, column: 15)
!19590 = distinct !DILexicalBlock(scope: !19564, file: !19458, line: 140, column: 9)
!19591 = !DILocation(line: 151, column: 15, scope: !19589)
!19592 = !DILocation(line: 151, column: 15, scope: !19590)
!19593 = !DILocation(line: 152, column: 21, scope: !19589)
!19594 = !DILocation(line: 152, column: 13, scope: !19589)
!19595 = !DILocation(line: 155, column: 21, scope: !19596)
!19596 = distinct !DILexicalBlock(scope: !19597, file: !19458, line: 155, column: 21)
!19597 = distinct !DILexicalBlock(scope: !19589, file: !19458, line: 153, column: 15)
!19598 = !DILocation(line: 155, column: 29, scope: !19596)
!19599 = !DILocation(line: 155, column: 21, scope: !19597)
!19600 = !DILocation(line: 156, column: 28, scope: !19596)
!19601 = !DILocation(line: 156, column: 19, scope: !19596)
!19602 = !DILocation(line: 157, column: 17, scope: !19597)
!19603 = !DILocation(line: 161, column: 22, scope: !19597)
!19604 = !DILocation(line: 162, column: 25, scope: !19597)
!19605 = !DILocation(line: 163, column: 17, scope: !19597)
!19606 = !DILocation(line: 164, column: 15, scope: !19597)
!19607 = !DILocation(line: 165, column: 9, scope: !19590)
!19608 = !DILocation(line: 167, column: 17, scope: !19564)
!19609 = !DILocation(line: 167, column: 16, scope: !19564)
!19610 = !DILocation(line: 167, column: 15, scope: !19564)
!19611 = !DILocation(line: 167, column: 7, scope: !19564)
!19612 = !DILocation(line: 170, column: 22, scope: !19613)
!19613 = distinct !DILexicalBlock(scope: !19564, file: !19458, line: 168, column: 9)
!19614 = !DILocation(line: 170, column: 20, scope: !19613)
!19615 = !DILocation(line: 171, column: 11, scope: !19613)
!19616 = !DILocation(line: 177, column: 22, scope: !19613)
!19617 = !DILocation(line: 177, column: 20, scope: !19613)
!19618 = !DILocation(line: 178, column: 11, scope: !19613)
!19619 = !DILocation(line: 181, column: 20, scope: !19613)
!19620 = !DILocation(line: 182, column: 11, scope: !19613)
!19621 = !DILocation(line: 185, column: 48, scope: !19613)
!19622 = !DILocation(line: 185, column: 22, scope: !19613)
!19623 = !DILocation(line: 185, column: 20, scope: !19613)
!19624 = !DILocation(line: 186, column: 11, scope: !19613)
!19625 = !DILocation(line: 190, column: 48, scope: !19613)
!19626 = !DILocation(line: 190, column: 22, scope: !19613)
!19627 = !DILocation(line: 190, column: 20, scope: !19613)
!19628 = !DILocation(line: 191, column: 11, scope: !19613)
!19629 = !DILocation(line: 195, column: 48, scope: !19613)
!19630 = !DILocation(line: 195, column: 22, scope: !19613)
!19631 = !DILocation(line: 195, column: 20, scope: !19613)
!19632 = !DILocation(line: 196, column: 11, scope: !19613)
!19633 = !DILocation(line: 200, column: 48, scope: !19613)
!19634 = !DILocation(line: 200, column: 22, scope: !19613)
!19635 = !DILocation(line: 200, column: 20, scope: !19613)
!19636 = !DILocation(line: 201, column: 11, scope: !19613)
!19637 = !DILocation(line: 204, column: 48, scope: !19613)
!19638 = !DILocation(line: 204, column: 22, scope: !19613)
!19639 = !DILocation(line: 204, column: 20, scope: !19613)
!19640 = !DILocation(line: 205, column: 11, scope: !19613)
!19641 = !DILocation(line: 209, column: 48, scope: !19613)
!19642 = !DILocation(line: 209, column: 22, scope: !19613)
!19643 = !DILocation(line: 209, column: 20, scope: !19613)
!19644 = !DILocation(line: 210, column: 11, scope: !19613)
!19645 = !DILocation(line: 213, column: 22, scope: !19613)
!19646 = !DILocation(line: 213, column: 20, scope: !19613)
!19647 = !DILocation(line: 214, column: 11, scope: !19613)
!19648 = !DILocation(line: 217, column: 48, scope: !19613)
!19649 = !DILocation(line: 217, column: 22, scope: !19613)
!19650 = !DILocation(line: 217, column: 20, scope: !19613)
!19651 = !DILocation(line: 218, column: 11, scope: !19613)
!19652 = !DILocation(line: 221, column: 48, scope: !19613)
!19653 = !DILocation(line: 221, column: 22, scope: !19613)
!19654 = !DILocation(line: 221, column: 20, scope: !19613)
!19655 = !DILocation(line: 222, column: 11, scope: !19613)
!19656 = !DILocation(line: 225, column: 18, scope: !19613)
!19657 = !DILocation(line: 225, column: 12, scope: !19613)
!19658 = !DILocation(line: 225, column: 16, scope: !19613)
!19659 = !DILocation(line: 226, column: 18, scope: !19613)
!19660 = !DILocation(line: 226, column: 22, scope: !19613)
!19661 = !DILocation(line: 226, column: 11, scope: !19613)
!19662 = !DILocation(line: 229, column: 14, scope: !19564)
!19663 = !DILocation(line: 229, column: 11, scope: !19564)
!19664 = !DILocation(line: 230, column: 13, scope: !19564)
!19665 = !DILocation(line: 230, column: 8, scope: !19564)
!19666 = !DILocation(line: 230, column: 10, scope: !19564)
!19667 = !DILocation(line: 231, column: 13, scope: !19668)
!19668 = distinct !DILexicalBlock(scope: !19564, file: !19458, line: 231, column: 11)
!19669 = !DILocation(line: 231, column: 12, scope: !19668)
!19670 = !DILocation(line: 231, column: 11, scope: !19668)
!19671 = !DILocation(line: 231, column: 11, scope: !19564)
!19672 = !DILocation(line: 232, column: 13, scope: !19668)
!19673 = !DILocation(line: 232, column: 9, scope: !19668)
!19674 = !DILocation(line: 233, column: 5, scope: !19564)
!19675 = !DILocation(line: 235, column: 10, scope: !19457)
!19676 = !DILocation(line: 235, column: 4, scope: !19457)
!19677 = !DILocation(line: 235, column: 8, scope: !19457)
!19678 = !DILocation(line: 236, column: 10, scope: !19457)
!19679 = !DILocation(line: 236, column: 3, scope: !19457)
!19680 = !DILocation(line: 237, column: 1, scope: !19457)
!19681 = distinct !DISubprogram(name: "bkm_scale", scope: !19458, file: !19458, line: 48, type: !19682, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!19682 = !DISubroutineType(types: !19683)
!19683 = !{!1267, !19461, !27}
!19684 = !DILocalVariable(name: "x", arg: 1, scope: !19681, file: !19458, line: 48, type: !19461)
!19685 = !DILocation(line: 48, column: 24, scope: !19681)
!19686 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19681, file: !19458, line: 48, type: !27)
!19687 = !DILocation(line: 48, column: 31, scope: !19681)
!19688 = !DILocation(line: 55, column: 26, scope: !19689)
!19689 = distinct !DILexicalBlock(scope: !19681, file: !19458, line: 55, column: 7)
!19690 = !DILocation(line: 55, column: 24, scope: !19689)
!19691 = !DILocation(line: 55, column: 42, scope: !19689)
!19692 = !DILocation(line: 55, column: 41, scope: !19689)
!19693 = !DILocation(line: 55, column: 39, scope: !19689)
!19694 = !DILocation(line: 55, column: 7, scope: !19681)
!19695 = !DILocation(line: 57, column: 8, scope: !19696)
!19696 = distinct !DILexicalBlock(scope: !19689, file: !19458, line: 56, column: 5)
!19697 = !DILocation(line: 57, column: 10, scope: !19696)
!19698 = !DILocation(line: 58, column: 7, scope: !19696)
!19699 = !DILocation(line: 60, column: 9, scope: !19681)
!19700 = !DILocation(line: 60, column: 4, scope: !19681)
!19701 = !DILocation(line: 60, column: 6, scope: !19681)
!19702 = !DILocation(line: 61, column: 3, scope: !19681)
!19703 = !DILocation(line: 62, column: 1, scope: !19681)
!19704 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19458, file: !19458, line: 65, type: !19705, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!19705 = !DISubroutineType(types: !19706)
!19706 = !{!1267, !19461, !27, !27}
!19707 = !DILocalVariable(name: "x", arg: 1, scope: !19704, file: !19458, line: 65, type: !19461)
!19708 = !DILocation(line: 65, column: 33, scope: !19704)
!19709 = !DILocalVariable(name: "base", arg: 2, scope: !19704, file: !19458, line: 65, type: !27)
!19710 = !DILocation(line: 65, column: 40, scope: !19704)
!19711 = !DILocalVariable(name: "power", arg: 3, scope: !19704, file: !19458, line: 65, type: !27)
!19712 = !DILocation(line: 65, column: 50, scope: !19704)
!19713 = !DILocalVariable(name: "err", scope: !19704, file: !19458, line: 67, type: !1267)
!19714 = !DILocation(line: 67, column: 16, scope: !19704)
!19715 = !DILocation(line: 68, column: 3, scope: !19704)
!19716 = !DILocation(line: 68, column: 15, scope: !19704)
!19717 = !DILocation(line: 69, column: 23, scope: !19704)
!19718 = !DILocation(line: 69, column: 26, scope: !19704)
!19719 = !DILocation(line: 69, column: 12, scope: !19704)
!19720 = !DILocation(line: 69, column: 9, scope: !19704)
!19721 = distinct !{!19721, !19715, !19722}
!19722 = !DILocation(line: 69, column: 30, scope: !19704)
!19723 = !DILocation(line: 70, column: 10, scope: !19704)
!19724 = !DILocation(line: 70, column: 3, scope: !19704)
!19725 = distinct !DISubprogram(name: "xstrtol_fatal", scope: !19726, file: !19726, line: 92, type: !19727, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !152)
!19726 = !DIFile(filename: "lib/xstrtol-error.c", directory: "/home/mohamad/clone/coreutils")
!19727 = !DISubroutineType(types: !19728)
!19728 = !{null, !109, !27, !144, !1721, !146}
!19729 = !DILocalVariable(name: "err", arg: 1, scope: !19725, file: !19726, line: 92, type: !109)
!19730 = !DILocation(line: 92, column: 34, scope: !19725)
!19731 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19725, file: !19726, line: 93, type: !27)
!19732 = !DILocation(line: 93, column: 20, scope: !19725)
!19733 = !DILocalVariable(name: "c", arg: 3, scope: !19725, file: !19726, line: 93, type: !144)
!19734 = !DILocation(line: 93, column: 34, scope: !19725)
!19735 = !DILocalVariable(name: "long_options", arg: 4, scope: !19725, file: !19726, line: 93, type: !1721)
!19736 = !DILocation(line: 93, column: 58, scope: !19725)
!19737 = !DILocalVariable(name: "arg", arg: 5, scope: !19725, file: !19726, line: 94, type: !146)
!19738 = !DILocation(line: 94, column: 28, scope: !19725)
!19739 = !DILocation(line: 96, column: 18, scope: !19725)
!19740 = !DILocation(line: 96, column: 23, scope: !19725)
!19741 = !DILocation(line: 96, column: 32, scope: !19725)
!19742 = !DILocation(line: 96, column: 35, scope: !19725)
!19743 = !DILocation(line: 96, column: 49, scope: !19725)
!19744 = !DILocation(line: 96, column: 54, scope: !19725)
!19745 = !DILocation(line: 96, column: 3, scope: !19725)
!19746 = !DILocation(line: 97, column: 3, scope: !19725)
!19747 = distinct !DISubprogram(name: "xstrtol_error", scope: !19726, file: !19726, line: 47, type: !19748, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !152)
!19748 = !DISubroutineType(types: !19749)
!19749 = !{null, !109, !27, !144, !1721, !146, !27}
!19750 = !DILocalVariable(name: "err", arg: 1, scope: !19747, file: !19726, line: 47, type: !109)
!19751 = !DILocation(line: 47, column: 34, scope: !19747)
!19752 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19747, file: !19726, line: 48, type: !27)
!19753 = !DILocation(line: 48, column: 20, scope: !19747)
!19754 = !DILocalVariable(name: "c", arg: 3, scope: !19747, file: !19726, line: 48, type: !144)
!19755 = !DILocation(line: 48, column: 34, scope: !19747)
!19756 = !DILocalVariable(name: "long_options", arg: 4, scope: !19747, file: !19726, line: 48, type: !1721)
!19757 = !DILocation(line: 48, column: 58, scope: !19747)
!19758 = !DILocalVariable(name: "arg", arg: 5, scope: !19747, file: !19726, line: 49, type: !146)
!19759 = !DILocation(line: 49, column: 28, scope: !19747)
!19760 = !DILocalVariable(name: "exit_status", arg: 6, scope: !19747, file: !19726, line: 50, type: !27)
!19761 = !DILocation(line: 50, column: 20, scope: !19747)
!19762 = !DILocalVariable(name: "hyphens", scope: !19747, file: !19726, line: 52, type: !146)
!19763 = !DILocation(line: 52, column: 15, scope: !19747)
!19764 = !DILocalVariable(name: "msgid", scope: !19747, file: !19726, line: 53, type: !146)
!19765 = !DILocation(line: 53, column: 15, scope: !19747)
!19766 = !DILocalVariable(name: "option", scope: !19747, file: !19726, line: 54, type: !146)
!19767 = !DILocation(line: 54, column: 15, scope: !19747)
!19768 = !DILocalVariable(name: "option_buffer", scope: !19747, file: !19726, line: 55, type: !259)
!19769 = !DILocation(line: 55, column: 8, scope: !19747)
!19770 = !DILocation(line: 57, column: 11, scope: !19747)
!19771 = !DILocation(line: 57, column: 3, scope: !19747)
!19772 = !DILocation(line: 60, column: 7, scope: !19773)
!19773 = distinct !DILexicalBlock(scope: !19747, file: !19726, line: 58, column: 5)
!19774 = !DILocation(line: 63, column: 13, scope: !19773)
!19775 = !DILocation(line: 64, column: 7, scope: !19773)
!19776 = !DILocation(line: 68, column: 13, scope: !19773)
!19777 = !DILocation(line: 69, column: 7, scope: !19773)
!19778 = !DILocation(line: 72, column: 13, scope: !19773)
!19779 = !DILocation(line: 73, column: 7, scope: !19773)
!19780 = !DILocation(line: 76, column: 7, scope: !19781)
!19781 = distinct !DILexicalBlock(scope: !19747, file: !19726, line: 76, column: 7)
!19782 = !DILocation(line: 76, column: 15, scope: !19781)
!19783 = !DILocation(line: 76, column: 7, scope: !19747)
!19784 = !DILocation(line: 78, column: 18, scope: !19785)
!19785 = distinct !DILexicalBlock(scope: !19781, file: !19726, line: 77, column: 5)
!19786 = !DILocation(line: 78, column: 15, scope: !19785)
!19787 = !DILocation(line: 79, column: 26, scope: !19785)
!19788 = !DILocation(line: 79, column: 7, scope: !19785)
!19789 = !DILocation(line: 79, column: 24, scope: !19785)
!19790 = !DILocation(line: 80, column: 7, scope: !19785)
!19791 = !DILocation(line: 80, column: 24, scope: !19785)
!19792 = !DILocation(line: 81, column: 16, scope: !19785)
!19793 = !DILocation(line: 81, column: 14, scope: !19785)
!19794 = !DILocation(line: 82, column: 5, scope: !19785)
!19795 = !DILocation(line: 84, column: 14, scope: !19781)
!19796 = !DILocation(line: 84, column: 27, scope: !19781)
!19797 = !DILocation(line: 84, column: 36, scope: !19781)
!19798 = !DILocation(line: 84, column: 12, scope: !19781)
!19799 = !DILocation(line: 86, column: 10, scope: !19747)
!19800 = !DILocation(line: 86, column: 35, scope: !19747)
!19801 = !DILocation(line: 86, column: 26, scope: !19747)
!19802 = !DILocation(line: 86, column: 43, scope: !19747)
!19803 = !DILocation(line: 86, column: 52, scope: !19747)
!19804 = !DILocation(line: 86, column: 60, scope: !19747)
!19805 = !DILocation(line: 86, column: 3, scope: !19747)
!19806 = !DILocation(line: 87, column: 1, scope: !19747)
!19807 = distinct !DISubprogram(name: "xstrtoumax", scope: !19458, file: !19458, line: 76, type: !19808, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1729, retainedNodes: !152)
!19808 = !DISubroutineType(types: !19809)
!19809 = !{!1267, !146, !142, !27, !13730, !146}
!19810 = !DILocalVariable(name: "s", arg: 1, scope: !19807, file: !19458, line: 76, type: !146)
!19811 = !DILocation(line: 76, column: 24, scope: !19807)
!19812 = !DILocalVariable(name: "ptr", arg: 2, scope: !19807, file: !19458, line: 76, type: !142)
!19813 = !DILocation(line: 76, column: 34, scope: !19807)
!19814 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19807, file: !19458, line: 76, type: !27)
!19815 = !DILocation(line: 76, column: 43, scope: !19807)
!19816 = !DILocalVariable(name: "val", arg: 4, scope: !19807, file: !19458, line: 77, type: !13730)
!19817 = !DILocation(line: 77, column: 24, scope: !19807)
!19818 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19807, file: !19458, line: 77, type: !146)
!19819 = !DILocation(line: 77, column: 41, scope: !19807)
!19820 = !DILocalVariable(name: "t_ptr", scope: !19807, file: !19458, line: 79, type: !143)
!19821 = !DILocation(line: 79, column: 9, scope: !19807)
!19822 = !DILocalVariable(name: "p", scope: !19807, file: !19458, line: 80, type: !142)
!19823 = !DILocation(line: 80, column: 10, scope: !19807)
!19824 = !DILocalVariable(name: "tmp", scope: !19807, file: !19458, line: 81, type: !168)
!19825 = !DILocation(line: 81, column: 14, scope: !19807)
!19826 = !DILocalVariable(name: "err", scope: !19807, file: !19458, line: 82, type: !1267)
!19827 = !DILocation(line: 82, column: 16, scope: !19807)
!19828 = !DILocation(line: 84, column: 3, scope: !19807)
!19829 = !DILocation(line: 86, column: 8, scope: !19807)
!19830 = !DILocation(line: 86, column: 14, scope: !19807)
!19831 = !DILocation(line: 86, column: 5, scope: !19807)
!19832 = !DILocation(line: 88, column: 3, scope: !19807)
!19833 = !DILocation(line: 88, column: 9, scope: !19807)
!19834 = !DILocalVariable(name: "q", scope: !19835, file: !19458, line: 92, type: !146)
!19835 = distinct !DILexicalBlock(scope: !19836, file: !19458, line: 91, column: 5)
!19836 = distinct !DILexicalBlock(scope: !19807, file: !19458, line: 90, column: 7)
!19837 = !DILocation(line: 92, column: 19, scope: !19835)
!19838 = !DILocation(line: 92, column: 23, scope: !19835)
!19839 = !DILocalVariable(name: "ch", scope: !19835, file: !19458, line: 93, type: !725)
!19840 = !DILocation(line: 93, column: 21, scope: !19835)
!19841 = !DILocation(line: 93, column: 27, scope: !19835)
!19842 = !DILocation(line: 93, column: 26, scope: !19835)
!19843 = !DILocation(line: 94, column: 7, scope: !19835)
!19844 = !DILocation(line: 94, column: 14, scope: !19835)
!19845 = !DILocation(line: 95, column: 15, scope: !19835)
!19846 = !DILocation(line: 95, column: 14, scope: !19835)
!19847 = !DILocation(line: 95, column: 12, scope: !19835)
!19848 = distinct !{!19848, !19843, !19849}
!19849 = !DILocation(line: 95, column: 17, scope: !19835)
!19850 = !DILocation(line: 96, column: 11, scope: !19851)
!19851 = distinct !DILexicalBlock(scope: !19835, file: !19458, line: 96, column: 11)
!19852 = !DILocation(line: 96, column: 14, scope: !19851)
!19853 = !DILocation(line: 96, column: 11, scope: !19835)
!19854 = !DILocation(line: 97, column: 9, scope: !19851)
!19855 = !DILocation(line: 100, column: 19, scope: !19807)
!19856 = !DILocation(line: 100, column: 22, scope: !19807)
!19857 = !DILocation(line: 100, column: 25, scope: !19807)
!19858 = !DILocation(line: 100, column: 9, scope: !19807)
!19859 = !DILocation(line: 100, column: 7, scope: !19807)
!19860 = !DILocation(line: 102, column: 8, scope: !19861)
!19861 = distinct !DILexicalBlock(scope: !19807, file: !19458, line: 102, column: 7)
!19862 = !DILocation(line: 102, column: 7, scope: !19861)
!19863 = !DILocation(line: 102, column: 13, scope: !19861)
!19864 = !DILocation(line: 102, column: 10, scope: !19861)
!19865 = !DILocation(line: 102, column: 7, scope: !19807)
!19866 = !DILocation(line: 106, column: 11, scope: !19867)
!19867 = distinct !DILexicalBlock(scope: !19868, file: !19458, line: 106, column: 11)
!19868 = distinct !DILexicalBlock(scope: !19861, file: !19458, line: 103, column: 5)
!19869 = !DILocation(line: 106, column: 26, scope: !19867)
!19870 = !DILocation(line: 106, column: 31, scope: !19867)
!19871 = !DILocation(line: 106, column: 30, scope: !19867)
!19872 = !DILocation(line: 106, column: 29, scope: !19867)
!19873 = !DILocation(line: 106, column: 33, scope: !19867)
!19874 = !DILocation(line: 106, column: 44, scope: !19867)
!19875 = !DILocation(line: 106, column: 62, scope: !19867)
!19876 = !DILocation(line: 106, column: 61, scope: !19867)
!19877 = !DILocation(line: 106, column: 60, scope: !19867)
!19878 = !DILocation(line: 106, column: 36, scope: !19867)
!19879 = !DILocation(line: 106, column: 11, scope: !19868)
!19880 = !DILocation(line: 107, column: 13, scope: !19867)
!19881 = !DILocation(line: 107, column: 9, scope: !19867)
!19882 = !DILocation(line: 109, column: 9, scope: !19867)
!19883 = !DILocation(line: 110, column: 5, scope: !19868)
!19884 = !DILocation(line: 111, column: 12, scope: !19885)
!19885 = distinct !DILexicalBlock(scope: !19861, file: !19458, line: 111, column: 12)
!19886 = !DILocation(line: 111, column: 18, scope: !19885)
!19887 = !DILocation(line: 111, column: 12, scope: !19861)
!19888 = !DILocation(line: 113, column: 11, scope: !19889)
!19889 = distinct !DILexicalBlock(scope: !19890, file: !19458, line: 113, column: 11)
!19890 = distinct !DILexicalBlock(scope: !19885, file: !19458, line: 112, column: 5)
!19891 = !DILocation(line: 113, column: 17, scope: !19889)
!19892 = !DILocation(line: 113, column: 11, scope: !19890)
!19893 = !DILocation(line: 114, column: 9, scope: !19889)
!19894 = !DILocation(line: 115, column: 11, scope: !19890)
!19895 = !DILocation(line: 116, column: 5, scope: !19890)
!19896 = !DILocation(line: 121, column: 8, scope: !19897)
!19897 = distinct !DILexicalBlock(scope: !19807, file: !19458, line: 121, column: 7)
!19898 = !DILocation(line: 121, column: 7, scope: !19807)
!19899 = !DILocation(line: 123, column: 14, scope: !19900)
!19900 = distinct !DILexicalBlock(scope: !19897, file: !19458, line: 122, column: 5)
!19901 = !DILocation(line: 123, column: 8, scope: !19900)
!19902 = !DILocation(line: 123, column: 12, scope: !19900)
!19903 = !DILocation(line: 124, column: 14, scope: !19900)
!19904 = !DILocation(line: 124, column: 7, scope: !19900)
!19905 = !DILocation(line: 127, column: 9, scope: !19906)
!19906 = distinct !DILexicalBlock(scope: !19807, file: !19458, line: 127, column: 7)
!19907 = !DILocation(line: 127, column: 8, scope: !19906)
!19908 = !DILocation(line: 127, column: 7, scope: !19906)
!19909 = !DILocation(line: 127, column: 11, scope: !19906)
!19910 = !DILocation(line: 127, column: 7, scope: !19807)
!19911 = !DILocalVariable(name: "base", scope: !19912, file: !19458, line: 129, type: !27)
!19912 = distinct !DILexicalBlock(scope: !19906, file: !19458, line: 128, column: 5)
!19913 = !DILocation(line: 129, column: 11, scope: !19912)
!19914 = !DILocalVariable(name: "suffixes", scope: !19912, file: !19458, line: 130, type: !27)
!19915 = !DILocation(line: 130, column: 11, scope: !19912)
!19916 = !DILocalVariable(name: "overflow", scope: !19912, file: !19458, line: 131, type: !1267)
!19917 = !DILocation(line: 131, column: 20, scope: !19912)
!19918 = !DILocation(line: 133, column: 20, scope: !19919)
!19919 = distinct !DILexicalBlock(scope: !19912, file: !19458, line: 133, column: 11)
!19920 = !DILocation(line: 133, column: 38, scope: !19919)
!19921 = !DILocation(line: 133, column: 37, scope: !19919)
!19922 = !DILocation(line: 133, column: 36, scope: !19919)
!19923 = !DILocation(line: 133, column: 12, scope: !19919)
!19924 = !DILocation(line: 133, column: 11, scope: !19912)
!19925 = !DILocation(line: 135, column: 18, scope: !19926)
!19926 = distinct !DILexicalBlock(scope: !19919, file: !19458, line: 134, column: 9)
!19927 = !DILocation(line: 135, column: 12, scope: !19926)
!19928 = !DILocation(line: 135, column: 16, scope: !19926)
!19929 = !DILocation(line: 136, column: 18, scope: !19926)
!19930 = !DILocation(line: 136, column: 22, scope: !19926)
!19931 = !DILocation(line: 136, column: 11, scope: !19926)
!19932 = !DILocation(line: 139, column: 17, scope: !19912)
!19933 = !DILocation(line: 139, column: 16, scope: !19912)
!19934 = !DILocation(line: 139, column: 15, scope: !19912)
!19935 = !DILocation(line: 139, column: 7, scope: !19912)
!19936 = !DILocation(line: 151, column: 23, scope: !19937)
!19937 = distinct !DILexicalBlock(scope: !19938, file: !19458, line: 151, column: 15)
!19938 = distinct !DILexicalBlock(scope: !19912, file: !19458, line: 140, column: 9)
!19939 = !DILocation(line: 151, column: 15, scope: !19937)
!19940 = !DILocation(line: 151, column: 15, scope: !19938)
!19941 = !DILocation(line: 152, column: 21, scope: !19937)
!19942 = !DILocation(line: 152, column: 13, scope: !19937)
!19943 = !DILocation(line: 155, column: 21, scope: !19944)
!19944 = distinct !DILexicalBlock(scope: !19945, file: !19458, line: 155, column: 21)
!19945 = distinct !DILexicalBlock(scope: !19937, file: !19458, line: 153, column: 15)
!19946 = !DILocation(line: 155, column: 29, scope: !19944)
!19947 = !DILocation(line: 155, column: 21, scope: !19945)
!19948 = !DILocation(line: 156, column: 28, scope: !19944)
!19949 = !DILocation(line: 156, column: 19, scope: !19944)
!19950 = !DILocation(line: 157, column: 17, scope: !19945)
!19951 = !DILocation(line: 161, column: 22, scope: !19945)
!19952 = !DILocation(line: 162, column: 25, scope: !19945)
!19953 = !DILocation(line: 163, column: 17, scope: !19945)
!19954 = !DILocation(line: 164, column: 15, scope: !19945)
!19955 = !DILocation(line: 165, column: 9, scope: !19938)
!19956 = !DILocation(line: 167, column: 17, scope: !19912)
!19957 = !DILocation(line: 167, column: 16, scope: !19912)
!19958 = !DILocation(line: 167, column: 15, scope: !19912)
!19959 = !DILocation(line: 167, column: 7, scope: !19912)
!19960 = !DILocation(line: 170, column: 22, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19912, file: !19458, line: 168, column: 9)
!19962 = !DILocation(line: 170, column: 20, scope: !19961)
!19963 = !DILocation(line: 171, column: 11, scope: !19961)
!19964 = !DILocation(line: 177, column: 22, scope: !19961)
!19965 = !DILocation(line: 177, column: 20, scope: !19961)
!19966 = !DILocation(line: 178, column: 11, scope: !19961)
!19967 = !DILocation(line: 181, column: 20, scope: !19961)
!19968 = !DILocation(line: 182, column: 11, scope: !19961)
!19969 = !DILocation(line: 185, column: 48, scope: !19961)
!19970 = !DILocation(line: 185, column: 22, scope: !19961)
!19971 = !DILocation(line: 185, column: 20, scope: !19961)
!19972 = !DILocation(line: 186, column: 11, scope: !19961)
!19973 = !DILocation(line: 190, column: 48, scope: !19961)
!19974 = !DILocation(line: 190, column: 22, scope: !19961)
!19975 = !DILocation(line: 190, column: 20, scope: !19961)
!19976 = !DILocation(line: 191, column: 11, scope: !19961)
!19977 = !DILocation(line: 195, column: 48, scope: !19961)
!19978 = !DILocation(line: 195, column: 22, scope: !19961)
!19979 = !DILocation(line: 195, column: 20, scope: !19961)
!19980 = !DILocation(line: 196, column: 11, scope: !19961)
!19981 = !DILocation(line: 200, column: 48, scope: !19961)
!19982 = !DILocation(line: 200, column: 22, scope: !19961)
!19983 = !DILocation(line: 200, column: 20, scope: !19961)
!19984 = !DILocation(line: 201, column: 11, scope: !19961)
!19985 = !DILocation(line: 204, column: 48, scope: !19961)
!19986 = !DILocation(line: 204, column: 22, scope: !19961)
!19987 = !DILocation(line: 204, column: 20, scope: !19961)
!19988 = !DILocation(line: 205, column: 11, scope: !19961)
!19989 = !DILocation(line: 209, column: 48, scope: !19961)
!19990 = !DILocation(line: 209, column: 22, scope: !19961)
!19991 = !DILocation(line: 209, column: 20, scope: !19961)
!19992 = !DILocation(line: 210, column: 11, scope: !19961)
!19993 = !DILocation(line: 213, column: 22, scope: !19961)
!19994 = !DILocation(line: 213, column: 20, scope: !19961)
!19995 = !DILocation(line: 214, column: 11, scope: !19961)
!19996 = !DILocation(line: 217, column: 48, scope: !19961)
!19997 = !DILocation(line: 217, column: 22, scope: !19961)
!19998 = !DILocation(line: 217, column: 20, scope: !19961)
!19999 = !DILocation(line: 218, column: 11, scope: !19961)
!20000 = !DILocation(line: 221, column: 48, scope: !19961)
!20001 = !DILocation(line: 221, column: 22, scope: !19961)
!20002 = !DILocation(line: 221, column: 20, scope: !19961)
!20003 = !DILocation(line: 222, column: 11, scope: !19961)
!20004 = !DILocation(line: 225, column: 18, scope: !19961)
!20005 = !DILocation(line: 225, column: 12, scope: !19961)
!20006 = !DILocation(line: 225, column: 16, scope: !19961)
!20007 = !DILocation(line: 226, column: 18, scope: !19961)
!20008 = !DILocation(line: 226, column: 22, scope: !19961)
!20009 = !DILocation(line: 226, column: 11, scope: !19961)
!20010 = !DILocation(line: 229, column: 14, scope: !19912)
!20011 = !DILocation(line: 229, column: 11, scope: !19912)
!20012 = !DILocation(line: 230, column: 13, scope: !19912)
!20013 = !DILocation(line: 230, column: 8, scope: !19912)
!20014 = !DILocation(line: 230, column: 10, scope: !19912)
!20015 = !DILocation(line: 231, column: 13, scope: !20016)
!20016 = distinct !DILexicalBlock(scope: !19912, file: !19458, line: 231, column: 11)
!20017 = !DILocation(line: 231, column: 12, scope: !20016)
!20018 = !DILocation(line: 231, column: 11, scope: !20016)
!20019 = !DILocation(line: 231, column: 11, scope: !19912)
!20020 = !DILocation(line: 232, column: 13, scope: !20016)
!20021 = !DILocation(line: 232, column: 9, scope: !20016)
!20022 = !DILocation(line: 233, column: 5, scope: !19912)
!20023 = !DILocation(line: 235, column: 10, scope: !19807)
!20024 = !DILocation(line: 235, column: 4, scope: !19807)
!20025 = !DILocation(line: 235, column: 8, scope: !19807)
!20026 = !DILocation(line: 236, column: 10, scope: !19807)
!20027 = !DILocation(line: 236, column: 3, scope: !19807)
!20028 = !DILocation(line: 237, column: 1, scope: !19807)
!20029 = distinct !DISubprogram(name: "bkm_scale", scope: !19458, file: !19458, line: 48, type: !20030, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1729, retainedNodes: !152)
!20030 = !DISubroutineType(types: !20031)
!20031 = !{!1267, !13730, !27}
!20032 = !DILocalVariable(name: "x", arg: 1, scope: !20029, file: !19458, line: 48, type: !13730)
!20033 = !DILocation(line: 48, column: 24, scope: !20029)
!20034 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !20029, file: !19458, line: 48, type: !27)
!20035 = !DILocation(line: 48, column: 31, scope: !20029)
!20036 = !DILocation(line: 55, column: 26, scope: !20037)
!20037 = distinct !DILexicalBlock(scope: !20029, file: !19458, line: 55, column: 7)
!20038 = !DILocation(line: 55, column: 24, scope: !20037)
!20039 = !DILocation(line: 55, column: 42, scope: !20037)
!20040 = !DILocation(line: 55, column: 41, scope: !20037)
!20041 = !DILocation(line: 55, column: 39, scope: !20037)
!20042 = !DILocation(line: 55, column: 7, scope: !20029)
!20043 = !DILocation(line: 57, column: 8, scope: !20044)
!20044 = distinct !DILexicalBlock(scope: !20037, file: !19458, line: 56, column: 5)
!20045 = !DILocation(line: 57, column: 10, scope: !20044)
!20046 = !DILocation(line: 58, column: 7, scope: !20044)
!20047 = !DILocation(line: 60, column: 9, scope: !20029)
!20048 = !DILocation(line: 60, column: 4, scope: !20029)
!20049 = !DILocation(line: 60, column: 6, scope: !20029)
!20050 = !DILocation(line: 61, column: 3, scope: !20029)
!20051 = !DILocation(line: 62, column: 1, scope: !20029)
!20052 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19458, file: !19458, line: 65, type: !20053, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1729, retainedNodes: !152)
!20053 = !DISubroutineType(types: !20054)
!20054 = !{!1267, !13730, !27, !27}
!20055 = !DILocalVariable(name: "x", arg: 1, scope: !20052, file: !19458, line: 65, type: !13730)
!20056 = !DILocation(line: 65, column: 33, scope: !20052)
!20057 = !DILocalVariable(name: "base", arg: 2, scope: !20052, file: !19458, line: 65, type: !27)
!20058 = !DILocation(line: 65, column: 40, scope: !20052)
!20059 = !DILocalVariable(name: "power", arg: 3, scope: !20052, file: !19458, line: 65, type: !27)
!20060 = !DILocation(line: 65, column: 50, scope: !20052)
!20061 = !DILocalVariable(name: "err", scope: !20052, file: !19458, line: 67, type: !1267)
!20062 = !DILocation(line: 67, column: 16, scope: !20052)
!20063 = !DILocation(line: 68, column: 3, scope: !20052)
!20064 = !DILocation(line: 68, column: 15, scope: !20052)
!20065 = !DILocation(line: 69, column: 23, scope: !20052)
!20066 = !DILocation(line: 69, column: 26, scope: !20052)
!20067 = !DILocation(line: 69, column: 12, scope: !20052)
!20068 = !DILocation(line: 69, column: 9, scope: !20052)
!20069 = distinct !{!20069, !20063, !20070}
!20070 = !DILocation(line: 69, column: 30, scope: !20052)
!20071 = !DILocation(line: 70, column: 10, scope: !20052)
!20072 = !DILocation(line: 70, column: 3, scope: !20052)
!20073 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !20074, file: !20074, line: 461, type: !20075, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1732, retainedNodes: !152)
!20074 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!20075 = !DISubroutineType(types: !20076)
!20076 = !{!149, !1591, !146, !149, !20077}
!20077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20078, size: 64)
!20078 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !741, line: 106, baseType: !20079)
!20079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !741, line: 94, baseType: !20080)
!20080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 82, size: 64, elements: !20081)
!20081 = !{!20082, !20083}
!20082 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !20080, file: !741, line: 84, baseType: !27, size: 32)
!20083 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !20080, file: !741, line: 93, baseType: !20084, size: 32, offset: 32)
!20084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20080, file: !741, line: 85, size: 32, elements: !20085)
!20085 = !{!20086, !20087}
!20086 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !20084, file: !741, line: 88, baseType: !6, size: 32)
!20087 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !20084, file: !741, line: 92, baseType: !439, size: 32)
!20088 = !DILocalVariable(name: "pwc", arg: 1, scope: !20073, file: !20074, line: 461, type: !1591)
!20089 = !DILocation(line: 461, column: 23, scope: !20073)
!20090 = !DILocalVariable(name: "s", arg: 2, scope: !20073, file: !20074, line: 461, type: !146)
!20091 = !DILocation(line: 461, column: 40, scope: !20073)
!20092 = !DILocalVariable(name: "n", arg: 3, scope: !20073, file: !20074, line: 461, type: !149)
!20093 = !DILocation(line: 461, column: 50, scope: !20073)
!20094 = !DILocalVariable(name: "ps", arg: 4, scope: !20073, file: !20074, line: 461, type: !20077)
!20095 = !DILocation(line: 461, column: 64, scope: !20073)
!20096 = !DILocalVariable(name: "ret", scope: !20073, file: !20074, line: 463, type: !149)
!20097 = !DILocation(line: 463, column: 10, scope: !20073)
!20098 = !DILocalVariable(name: "wc", scope: !20073, file: !20074, line: 464, type: !751)
!20099 = !DILocation(line: 464, column: 11, scope: !20073)
!20100 = !DILocation(line: 480, column: 9, scope: !20101)
!20101 = distinct !DILexicalBlock(scope: !20073, file: !20074, line: 480, column: 7)
!20102 = !DILocation(line: 480, column: 7, scope: !20073)
!20103 = !DILocation(line: 481, column: 9, scope: !20101)
!20104 = !DILocation(line: 481, column: 5, scope: !20101)
!20105 = !DILocation(line: 515, column: 18, scope: !20073)
!20106 = !DILocation(line: 515, column: 23, scope: !20073)
!20107 = !DILocation(line: 515, column: 26, scope: !20073)
!20108 = !DILocation(line: 515, column: 29, scope: !20073)
!20109 = !DILocation(line: 515, column: 9, scope: !20073)
!20110 = !DILocation(line: 515, column: 7, scope: !20073)
!20111 = !DILocation(line: 523, column: 22, scope: !20112)
!20112 = distinct !DILexicalBlock(scope: !20073, file: !20074, line: 523, column: 7)
!20113 = !DILocation(line: 523, column: 19, scope: !20112)
!20114 = !DILocation(line: 523, column: 26, scope: !20112)
!20115 = !DILocation(line: 523, column: 29, scope: !20112)
!20116 = !DILocation(line: 523, column: 31, scope: !20112)
!20117 = !DILocation(line: 523, column: 36, scope: !20112)
!20118 = !DILocation(line: 523, column: 41, scope: !20112)
!20119 = !DILocation(line: 523, column: 7, scope: !20073)
!20120 = !DILocalVariable(name: "uc", scope: !20121, file: !20074, line: 525, type: !725)
!20121 = distinct !DILexicalBlock(scope: !20112, file: !20074, line: 524, column: 5)
!20122 = !DILocation(line: 525, column: 21, scope: !20121)
!20123 = !DILocation(line: 525, column: 27, scope: !20121)
!20124 = !DILocation(line: 525, column: 26, scope: !20121)
!20125 = !DILocation(line: 526, column: 14, scope: !20121)
!20126 = !DILocation(line: 526, column: 8, scope: !20121)
!20127 = !DILocation(line: 526, column: 12, scope: !20121)
!20128 = !DILocation(line: 527, column: 7, scope: !20121)
!20129 = !DILocation(line: 531, column: 10, scope: !20073)
!20130 = !DILocation(line: 531, column: 3, scope: !20073)
!20131 = !DILocation(line: 532, column: 1, scope: !20073)
!20132 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !20133, file: !20133, line: 99, type: !20134, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1735, retainedNodes: !152)
!20133 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!20134 = !DISubroutineType(types: !20135)
!20135 = !{!143, !20136}
!20136 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !20137, line: 36, baseType: !27)
!20137 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!20138 = !DILocalVariable(name: "item", arg: 1, scope: !20132, file: !20133, line: 99, type: !20136)
!20139 = !DILocation(line: 99, column: 26, scope: !20132)
!20140 = !DILocation(line: 101, column: 11, scope: !20132)
!20141 = !DILocation(line: 101, column: 3, scope: !20132)
!20142 = !DILocation(line: 126, column: 14, scope: !20143)
!20143 = distinct !DILexicalBlock(scope: !20132, file: !20133, line: 102, column: 5)
!20144 = !DILocation(line: 126, column: 19, scope: !20143)
!20145 = !DILocation(line: 126, column: 30, scope: !20143)
!20146 = !DILocation(line: 126, column: 12, scope: !20143)
!20147 = !DILocation(line: 127, column: 7, scope: !20143)
!20148 = !DILocation(line: 162, column: 7, scope: !20143)
!20149 = !DILocation(line: 164, column: 23, scope: !20132)
!20150 = !DILocation(line: 164, column: 10, scope: !20132)
!20151 = !DILocation(line: 164, column: 3, scope: !20132)
!20152 = distinct !DISubprogram(name: "print_and_abort", scope: !1509, file: !1509, line: 330, type: !526, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20153 = !DILocation(line: 340, column: 12, scope: !20152)
!20154 = !DILocation(line: 340, column: 28, scope: !20152)
!20155 = !DILocation(line: 340, column: 3, scope: !20152)
!20156 = !DILocation(line: 342, column: 9, scope: !20152)
!20157 = !DILocation(line: 342, column: 3, scope: !20152)
!20158 = distinct !DISubprogram(name: "_obstack_begin", scope: !1509, file: !1509, line: 150, type: !20159, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20159 = !DISubroutineType(types: !20160)
!20160 = !{!27, !20161, !149, !149, !478, !489}
!20161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!20162 = !DILocalVariable(name: "h", arg: 1, scope: !20158, file: !1509, line: 150, type: !20161)
!20163 = !DILocation(line: 150, column: 33, scope: !20158)
!20164 = !DILocalVariable(name: "size", arg: 2, scope: !20158, file: !1509, line: 151, type: !149)
!20165 = !DILocation(line: 151, column: 33, scope: !20158)
!20166 = !DILocalVariable(name: "alignment", arg: 3, scope: !20158, file: !1509, line: 151, type: !149)
!20167 = !DILocation(line: 151, column: 55, scope: !20158)
!20168 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20158, file: !1509, line: 152, type: !478)
!20169 = !DILocation(line: 152, column: 25, scope: !20158)
!20170 = !DILocalVariable(name: "freefun", arg: 5, scope: !20158, file: !1509, line: 153, type: !489)
!20171 = !DILocation(line: 153, column: 24, scope: !20158)
!20172 = !DILocation(line: 155, column: 23, scope: !20158)
!20173 = !DILocation(line: 155, column: 3, scope: !20158)
!20174 = !DILocation(line: 155, column: 6, scope: !20158)
!20175 = !DILocation(line: 155, column: 15, scope: !20158)
!20176 = !DILocation(line: 155, column: 21, scope: !20158)
!20177 = !DILocation(line: 156, column: 22, scope: !20158)
!20178 = !DILocation(line: 156, column: 3, scope: !20158)
!20179 = !DILocation(line: 156, column: 6, scope: !20158)
!20180 = !DILocation(line: 156, column: 14, scope: !20158)
!20181 = !DILocation(line: 156, column: 20, scope: !20158)
!20182 = !DILocation(line: 157, column: 3, scope: !20158)
!20183 = !DILocation(line: 157, column: 6, scope: !20158)
!20184 = !DILocation(line: 157, column: 20, scope: !20158)
!20185 = !DILocation(line: 158, column: 33, scope: !20158)
!20186 = !DILocation(line: 158, column: 36, scope: !20158)
!20187 = !DILocation(line: 158, column: 42, scope: !20158)
!20188 = !DILocation(line: 158, column: 10, scope: !20158)
!20189 = !DILocation(line: 158, column: 3, scope: !20158)
!20190 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !1509, file: !1509, line: 109, type: !20191, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20191 = !DISubroutineType(types: !20192)
!20192 = !{!27, !20161, !149, !149}
!20193 = !DILocalVariable(name: "h", arg: 1, scope: !20190, file: !1509, line: 109, type: !20161)
!20194 = !DILocation(line: 109, column: 40, scope: !20190)
!20195 = !DILocalVariable(name: "size", arg: 2, scope: !20190, file: !1509, line: 110, type: !149)
!20196 = !DILocation(line: 110, column: 40, scope: !20190)
!20197 = !DILocalVariable(name: "alignment", arg: 3, scope: !20190, file: !1509, line: 110, type: !149)
!20198 = !DILocation(line: 110, column: 62, scope: !20190)
!20199 = !DILocalVariable(name: "chunk", scope: !20190, file: !1509, line: 112, type: !1442)
!20200 = !DILocation(line: 112, column: 26, scope: !20190)
!20201 = !DILocation(line: 114, column: 7, scope: !20202)
!20202 = distinct !DILexicalBlock(scope: !20190, file: !1509, line: 114, column: 7)
!20203 = !DILocation(line: 114, column: 17, scope: !20202)
!20204 = !DILocation(line: 114, column: 7, scope: !20190)
!20205 = !DILocation(line: 115, column: 15, scope: !20202)
!20206 = !DILocation(line: 115, column: 5, scope: !20202)
!20207 = !DILocation(line: 116, column: 7, scope: !20208)
!20208 = distinct !DILexicalBlock(scope: !20190, file: !1509, line: 116, column: 7)
!20209 = !DILocation(line: 116, column: 12, scope: !20208)
!20210 = !DILocation(line: 116, column: 7, scope: !20190)
!20211 = !DILocalVariable(name: "extra", scope: !20212, file: !1509, line: 127, type: !27)
!20212 = distinct !DILexicalBlock(scope: !20208, file: !1509, line: 118, column: 5)
!20213 = !DILocation(line: 127, column: 11, scope: !20212)
!20214 = !DILocation(line: 130, column: 21, scope: !20212)
!20215 = !DILocation(line: 130, column: 19, scope: !20212)
!20216 = !DILocation(line: 130, column: 14, scope: !20212)
!20217 = !DILocation(line: 130, column: 12, scope: !20212)
!20218 = !DILocation(line: 131, column: 5, scope: !20212)
!20219 = !DILocation(line: 133, column: 19, scope: !20190)
!20220 = !DILocation(line: 133, column: 3, scope: !20190)
!20221 = !DILocation(line: 133, column: 6, scope: !20190)
!20222 = !DILocation(line: 133, column: 17, scope: !20190)
!20223 = !DILocation(line: 134, column: 23, scope: !20190)
!20224 = !DILocation(line: 134, column: 33, scope: !20190)
!20225 = !DILocation(line: 134, column: 3, scope: !20190)
!20226 = !DILocation(line: 134, column: 6, scope: !20190)
!20227 = !DILocation(line: 134, column: 21, scope: !20190)
!20228 = !DILocation(line: 136, column: 37, scope: !20190)
!20229 = !DILocation(line: 136, column: 40, scope: !20190)
!20230 = !DILocation(line: 136, column: 43, scope: !20190)
!20231 = !DILocation(line: 136, column: 22, scope: !20190)
!20232 = !DILocation(line: 136, column: 11, scope: !20190)
!20233 = !DILocation(line: 136, column: 14, scope: !20190)
!20234 = !DILocation(line: 136, column: 20, scope: !20190)
!20235 = !DILocation(line: 136, column: 9, scope: !20190)
!20236 = !DILocation(line: 137, column: 8, scope: !20237)
!20237 = distinct !DILexicalBlock(scope: !20190, file: !1509, line: 137, column: 7)
!20238 = !DILocation(line: 137, column: 7, scope: !20190)
!20239 = !DILocation(line: 138, column: 7, scope: !20237)
!20240 = !DILocation(line: 138, column: 5, scope: !20237)
!20241 = !DILocation(line: 139, column: 35, scope: !20190)
!20242 = !DILocation(line: 139, column: 18, scope: !20190)
!20243 = !DILocation(line: 139, column: 21, scope: !20190)
!20244 = !DILocation(line: 139, column: 33, scope: !20190)
!20245 = !DILocation(line: 139, column: 3, scope: !20190)
!20246 = !DILocation(line: 139, column: 6, scope: !20190)
!20247 = !DILocation(line: 139, column: 16, scope: !20190)
!20248 = !DILocation(line: 141, column: 44, scope: !20190)
!20249 = !DILocation(line: 141, column: 35, scope: !20190)
!20250 = !DILocation(line: 141, column: 52, scope: !20190)
!20251 = !DILocation(line: 141, column: 55, scope: !20190)
!20252 = !DILocation(line: 141, column: 50, scope: !20190)
!20253 = !DILocation(line: 141, column: 20, scope: !20190)
!20254 = !DILocation(line: 141, column: 27, scope: !20190)
!20255 = !DILocation(line: 141, column: 33, scope: !20190)
!20256 = !DILocation(line: 141, column: 3, scope: !20190)
!20257 = !DILocation(line: 141, column: 6, scope: !20190)
!20258 = !DILocation(line: 141, column: 18, scope: !20190)
!20259 = !DILocation(line: 142, column: 3, scope: !20190)
!20260 = !DILocation(line: 142, column: 10, scope: !20190)
!20261 = !DILocation(line: 142, column: 15, scope: !20190)
!20262 = !DILocation(line: 144, column: 3, scope: !20190)
!20263 = !DILocation(line: 144, column: 6, scope: !20190)
!20264 = !DILocation(line: 144, column: 25, scope: !20190)
!20265 = !DILocation(line: 145, column: 3, scope: !20190)
!20266 = !DILocation(line: 145, column: 6, scope: !20190)
!20267 = !DILocation(line: 145, column: 19, scope: !20190)
!20268 = !DILocation(line: 146, column: 3, scope: !20190)
!20269 = distinct !DISubprogram(name: "call_chunkfun", scope: !1509, file: !1509, line: 84, type: !20270, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20270 = !DISubroutineType(types: !20271)
!20271 = !{!167, !20161, !149}
!20272 = !DILocalVariable(name: "h", arg: 1, scope: !20269, file: !1509, line: 84, type: !20161)
!20273 = !DILocation(line: 84, column: 32, scope: !20269)
!20274 = !DILocalVariable(name: "size", arg: 2, scope: !20269, file: !1509, line: 84, type: !149)
!20275 = !DILocation(line: 84, column: 42, scope: !20269)
!20276 = !DILocation(line: 86, column: 7, scope: !20277)
!20277 = distinct !DILexicalBlock(scope: !20269, file: !1509, line: 86, column: 7)
!20278 = !DILocation(line: 86, column: 10, scope: !20277)
!20279 = !DILocation(line: 86, column: 7, scope: !20269)
!20280 = !DILocation(line: 87, column: 12, scope: !20277)
!20281 = !DILocation(line: 87, column: 15, scope: !20277)
!20282 = !DILocation(line: 87, column: 24, scope: !20277)
!20283 = !DILocation(line: 87, column: 31, scope: !20277)
!20284 = !DILocation(line: 87, column: 34, scope: !20277)
!20285 = !DILocation(line: 87, column: 45, scope: !20277)
!20286 = !DILocation(line: 87, column: 5, scope: !20277)
!20287 = !DILocation(line: 89, column: 12, scope: !20277)
!20288 = !DILocation(line: 89, column: 15, scope: !20277)
!20289 = !DILocation(line: 89, column: 24, scope: !20277)
!20290 = !DILocation(line: 89, column: 31, scope: !20277)
!20291 = !DILocation(line: 89, column: 5, scope: !20277)
!20292 = !DILocation(line: 90, column: 1, scope: !20269)
!20293 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !1509, file: !1509, line: 162, type: !20294, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20294 = !DISubroutineType(types: !20295)
!20295 = !{!27, !20161, !149, !149, !482, !493, !167}
!20296 = !DILocalVariable(name: "h", arg: 1, scope: !20293, file: !1509, line: 162, type: !20161)
!20297 = !DILocation(line: 162, column: 35, scope: !20293)
!20298 = !DILocalVariable(name: "size", arg: 2, scope: !20293, file: !1509, line: 163, type: !149)
!20299 = !DILocation(line: 163, column: 35, scope: !20293)
!20300 = !DILocalVariable(name: "alignment", arg: 3, scope: !20293, file: !1509, line: 163, type: !149)
!20301 = !DILocation(line: 163, column: 57, scope: !20293)
!20302 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20293, file: !1509, line: 164, type: !482)
!20303 = !DILocation(line: 164, column: 27, scope: !20293)
!20304 = !DILocalVariable(name: "freefun", arg: 5, scope: !20293, file: !1509, line: 165, type: !493)
!20305 = !DILocation(line: 165, column: 26, scope: !20293)
!20306 = !DILocalVariable(name: "arg", arg: 6, scope: !20293, file: !1509, line: 166, type: !167)
!20307 = !DILocation(line: 166, column: 25, scope: !20293)
!20308 = !DILocation(line: 168, column: 23, scope: !20293)
!20309 = !DILocation(line: 168, column: 3, scope: !20293)
!20310 = !DILocation(line: 168, column: 6, scope: !20293)
!20311 = !DILocation(line: 168, column: 15, scope: !20293)
!20312 = !DILocation(line: 168, column: 21, scope: !20293)
!20313 = !DILocation(line: 169, column: 22, scope: !20293)
!20314 = !DILocation(line: 169, column: 3, scope: !20293)
!20315 = !DILocation(line: 169, column: 6, scope: !20293)
!20316 = !DILocation(line: 169, column: 14, scope: !20293)
!20317 = !DILocation(line: 169, column: 20, scope: !20293)
!20318 = !DILocation(line: 170, column: 18, scope: !20293)
!20319 = !DILocation(line: 170, column: 3, scope: !20293)
!20320 = !DILocation(line: 170, column: 6, scope: !20293)
!20321 = !DILocation(line: 170, column: 16, scope: !20293)
!20322 = !DILocation(line: 171, column: 3, scope: !20293)
!20323 = !DILocation(line: 171, column: 6, scope: !20293)
!20324 = !DILocation(line: 171, column: 20, scope: !20293)
!20325 = !DILocation(line: 172, column: 33, scope: !20293)
!20326 = !DILocation(line: 172, column: 36, scope: !20293)
!20327 = !DILocation(line: 172, column: 42, scope: !20293)
!20328 = !DILocation(line: 172, column: 10, scope: !20293)
!20329 = !DILocation(line: 172, column: 3, scope: !20293)
!20330 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !1509, file: !1509, line: 182, type: !20331, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20331 = !DISubroutineType(types: !20332)
!20332 = !{null, !20161, !149}
!20333 = !DILocalVariable(name: "h", arg: 1, scope: !20330, file: !1509, line: 182, type: !20161)
!20334 = !DILocation(line: 182, column: 36, scope: !20330)
!20335 = !DILocalVariable(name: "length", arg: 2, scope: !20330, file: !1509, line: 182, type: !149)
!20336 = !DILocation(line: 182, column: 55, scope: !20330)
!20337 = !DILocalVariable(name: "old_chunk", scope: !20330, file: !1509, line: 184, type: !1442)
!20338 = !DILocation(line: 184, column: 26, scope: !20330)
!20339 = !DILocation(line: 184, column: 38, scope: !20330)
!20340 = !DILocation(line: 184, column: 41, scope: !20330)
!20341 = !DILocalVariable(name: "new_chunk", scope: !20330, file: !1509, line: 185, type: !1442)
!20342 = !DILocation(line: 185, column: 26, scope: !20330)
!20343 = !DILocalVariable(name: "obj_size", scope: !20330, file: !1509, line: 186, type: !149)
!20344 = !DILocation(line: 186, column: 10, scope: !20330)
!20345 = !DILocation(line: 186, column: 21, scope: !20330)
!20346 = !DILocation(line: 186, column: 24, scope: !20330)
!20347 = !DILocation(line: 186, column: 36, scope: !20330)
!20348 = !DILocation(line: 186, column: 39, scope: !20330)
!20349 = !DILocation(line: 186, column: 34, scope: !20330)
!20350 = !DILocalVariable(name: "object_base", scope: !20330, file: !1509, line: 187, type: !143)
!20351 = !DILocation(line: 187, column: 9, scope: !20330)
!20352 = !DILocalVariable(name: "sum1", scope: !20330, file: !1509, line: 190, type: !149)
!20353 = !DILocation(line: 190, column: 10, scope: !20330)
!20354 = !DILocation(line: 190, column: 17, scope: !20330)
!20355 = !DILocation(line: 190, column: 28, scope: !20330)
!20356 = !DILocation(line: 190, column: 26, scope: !20330)
!20357 = !DILocalVariable(name: "sum2", scope: !20330, file: !1509, line: 191, type: !149)
!20358 = !DILocation(line: 191, column: 10, scope: !20330)
!20359 = !DILocation(line: 191, column: 17, scope: !20330)
!20360 = !DILocation(line: 191, column: 24, scope: !20330)
!20361 = !DILocation(line: 191, column: 27, scope: !20330)
!20362 = !DILocation(line: 191, column: 22, scope: !20330)
!20363 = !DILocalVariable(name: "new_size", scope: !20330, file: !1509, line: 192, type: !149)
!20364 = !DILocation(line: 192, column: 10, scope: !20330)
!20365 = !DILocation(line: 192, column: 21, scope: !20330)
!20366 = !DILocation(line: 192, column: 29, scope: !20330)
!20367 = !DILocation(line: 192, column: 38, scope: !20330)
!20368 = !DILocation(line: 192, column: 26, scope: !20330)
!20369 = !DILocation(line: 192, column: 44, scope: !20330)
!20370 = !DILocation(line: 193, column: 7, scope: !20371)
!20371 = distinct !DILexicalBlock(scope: !20330, file: !1509, line: 193, column: 7)
!20372 = !DILocation(line: 193, column: 18, scope: !20371)
!20373 = !DILocation(line: 193, column: 16, scope: !20371)
!20374 = !DILocation(line: 193, column: 7, scope: !20330)
!20375 = !DILocation(line: 194, column: 16, scope: !20371)
!20376 = !DILocation(line: 194, column: 14, scope: !20371)
!20377 = !DILocation(line: 194, column: 5, scope: !20371)
!20378 = !DILocation(line: 195, column: 7, scope: !20379)
!20379 = distinct !DILexicalBlock(scope: !20330, file: !1509, line: 195, column: 7)
!20380 = !DILocation(line: 195, column: 18, scope: !20379)
!20381 = !DILocation(line: 195, column: 21, scope: !20379)
!20382 = !DILocation(line: 195, column: 16, scope: !20379)
!20383 = !DILocation(line: 195, column: 7, scope: !20330)
!20384 = !DILocation(line: 196, column: 16, scope: !20379)
!20385 = !DILocation(line: 196, column: 19, scope: !20379)
!20386 = !DILocation(line: 196, column: 14, scope: !20379)
!20387 = !DILocation(line: 196, column: 5, scope: !20379)
!20388 = !DILocation(line: 199, column: 7, scope: !20389)
!20389 = distinct !DILexicalBlock(scope: !20330, file: !1509, line: 199, column: 7)
!20390 = !DILocation(line: 199, column: 19, scope: !20389)
!20391 = !DILocation(line: 199, column: 16, scope: !20389)
!20392 = !DILocation(line: 199, column: 24, scope: !20389)
!20393 = !DILocation(line: 199, column: 27, scope: !20389)
!20394 = !DILocation(line: 199, column: 35, scope: !20389)
!20395 = !DILocation(line: 199, column: 32, scope: !20389)
!20396 = !DILocation(line: 199, column: 7, scope: !20330)
!20397 = !DILocation(line: 200, column: 32, scope: !20389)
!20398 = !DILocation(line: 200, column: 35, scope: !20389)
!20399 = !DILocation(line: 200, column: 17, scope: !20389)
!20400 = !DILocation(line: 200, column: 15, scope: !20389)
!20401 = !DILocation(line: 200, column: 5, scope: !20389)
!20402 = !DILocation(line: 201, column: 8, scope: !20403)
!20403 = distinct !DILexicalBlock(scope: !20330, file: !1509, line: 201, column: 7)
!20404 = !DILocation(line: 201, column: 7, scope: !20330)
!20405 = !DILocation(line: 202, column: 7, scope: !20403)
!20406 = !DILocation(line: 202, column: 5, scope: !20403)
!20407 = !DILocation(line: 203, column: 14, scope: !20330)
!20408 = !DILocation(line: 203, column: 3, scope: !20330)
!20409 = !DILocation(line: 203, column: 6, scope: !20330)
!20410 = !DILocation(line: 203, column: 12, scope: !20330)
!20411 = !DILocation(line: 204, column: 21, scope: !20330)
!20412 = !DILocation(line: 204, column: 3, scope: !20330)
!20413 = !DILocation(line: 204, column: 14, scope: !20330)
!20414 = !DILocation(line: 204, column: 19, scope: !20330)
!20415 = !DILocation(line: 205, column: 48, scope: !20330)
!20416 = !DILocation(line: 205, column: 39, scope: !20330)
!20417 = !DILocation(line: 205, column: 60, scope: !20330)
!20418 = !DILocation(line: 205, column: 58, scope: !20330)
!20419 = !DILocation(line: 205, column: 22, scope: !20330)
!20420 = !DILocation(line: 205, column: 25, scope: !20330)
!20421 = !DILocation(line: 205, column: 37, scope: !20330)
!20422 = !DILocation(line: 205, column: 3, scope: !20330)
!20423 = !DILocation(line: 205, column: 14, scope: !20330)
!20424 = !DILocation(line: 205, column: 20, scope: !20330)
!20425 = !DILocation(line: 209, column: 5, scope: !20330)
!20426 = !DILocation(line: 208, column: 15, scope: !20330)
!20427 = !DILocation(line: 212, column: 11, scope: !20330)
!20428 = !DILocation(line: 212, column: 24, scope: !20330)
!20429 = !DILocation(line: 212, column: 27, scope: !20330)
!20430 = !DILocation(line: 212, column: 40, scope: !20330)
!20431 = !DILocation(line: 212, column: 3, scope: !20330)
!20432 = !DILocation(line: 217, column: 8, scope: !20433)
!20433 = distinct !DILexicalBlock(scope: !20330, file: !1509, line: 217, column: 7)
!20434 = !DILocation(line: 217, column: 11, scope: !20433)
!20435 = !DILocation(line: 218, column: 7, scope: !20433)
!20436 = !DILocation(line: 218, column: 11, scope: !20433)
!20437 = !DILocation(line: 218, column: 14, scope: !20433)
!20438 = !DILocation(line: 219, column: 14, scope: !20433)
!20439 = !DILocation(line: 219, column: 11, scope: !20433)
!20440 = !DILocation(line: 217, column: 7, scope: !20330)
!20441 = !DILocation(line: 222, column: 25, scope: !20442)
!20442 = distinct !DILexicalBlock(scope: !20433, file: !1509, line: 221, column: 5)
!20443 = !DILocation(line: 222, column: 36, scope: !20442)
!20444 = !DILocation(line: 222, column: 7, scope: !20442)
!20445 = !DILocation(line: 222, column: 18, scope: !20442)
!20446 = !DILocation(line: 222, column: 23, scope: !20442)
!20447 = !DILocation(line: 223, column: 21, scope: !20442)
!20448 = !DILocation(line: 223, column: 24, scope: !20442)
!20449 = !DILocation(line: 223, column: 7, scope: !20442)
!20450 = !DILocation(line: 224, column: 5, scope: !20442)
!20451 = !DILocation(line: 226, column: 20, scope: !20330)
!20452 = !DILocation(line: 226, column: 3, scope: !20330)
!20453 = !DILocation(line: 226, column: 6, scope: !20330)
!20454 = !DILocation(line: 226, column: 18, scope: !20330)
!20455 = !DILocation(line: 227, column: 18, scope: !20330)
!20456 = !DILocation(line: 227, column: 21, scope: !20330)
!20457 = !DILocation(line: 227, column: 35, scope: !20330)
!20458 = !DILocation(line: 227, column: 33, scope: !20330)
!20459 = !DILocation(line: 227, column: 3, scope: !20330)
!20460 = !DILocation(line: 227, column: 6, scope: !20330)
!20461 = !DILocation(line: 227, column: 16, scope: !20330)
!20462 = !DILocation(line: 229, column: 3, scope: !20330)
!20463 = !DILocation(line: 229, column: 6, scope: !20330)
!20464 = !DILocation(line: 229, column: 25, scope: !20330)
!20465 = !DILocation(line: 230, column: 1, scope: !20330)
!20466 = distinct !DISubprogram(name: "call_freefun", scope: !1509, file: !1509, line: 93, type: !20467, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20467 = !DISubroutineType(types: !20468)
!20468 = !{null, !20161, !167}
!20469 = !DILocalVariable(name: "h", arg: 1, scope: !20466, file: !1509, line: 93, type: !20161)
!20470 = !DILocation(line: 93, column: 31, scope: !20466)
!20471 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !20466, file: !1509, line: 93, type: !167)
!20472 = !DILocation(line: 93, column: 40, scope: !20466)
!20473 = !DILocation(line: 95, column: 7, scope: !20474)
!20474 = distinct !DILexicalBlock(scope: !20466, file: !1509, line: 95, column: 7)
!20475 = !DILocation(line: 95, column: 10, scope: !20474)
!20476 = !DILocation(line: 95, column: 7, scope: !20466)
!20477 = !DILocation(line: 96, column: 5, scope: !20474)
!20478 = !DILocation(line: 96, column: 8, scope: !20474)
!20479 = !DILocation(line: 96, column: 16, scope: !20474)
!20480 = !DILocation(line: 96, column: 23, scope: !20474)
!20481 = !DILocation(line: 96, column: 26, scope: !20474)
!20482 = !DILocation(line: 96, column: 37, scope: !20474)
!20483 = !DILocation(line: 98, column: 5, scope: !20474)
!20484 = !DILocation(line: 98, column: 8, scope: !20474)
!20485 = !DILocation(line: 98, column: 16, scope: !20474)
!20486 = !DILocation(line: 98, column: 23, scope: !20474)
!20487 = !DILocation(line: 99, column: 1, scope: !20466)
!20488 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !1509, file: !1509, line: 241, type: !20489, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20489 = !DISubroutineType(types: !20490)
!20490 = !{!27, !20161, !167}
!20491 = !DILocalVariable(name: "h", arg: 1, scope: !20488, file: !1509, line: 241, type: !20161)
!20492 = !DILocation(line: 241, column: 39, scope: !20488)
!20493 = !DILocalVariable(name: "obj", arg: 2, scope: !20488, file: !1509, line: 241, type: !167)
!20494 = !DILocation(line: 241, column: 48, scope: !20488)
!20495 = !DILocalVariable(name: "lp", scope: !20488, file: !1509, line: 243, type: !1442)
!20496 = !DILocation(line: 243, column: 26, scope: !20488)
!20497 = !DILocalVariable(name: "plp", scope: !20488, file: !1509, line: 244, type: !1442)
!20498 = !DILocation(line: 244, column: 26, scope: !20488)
!20499 = !DILocation(line: 246, column: 9, scope: !20488)
!20500 = !DILocation(line: 246, column: 13, scope: !20488)
!20501 = !DILocation(line: 246, column: 6, scope: !20488)
!20502 = !DILocation(line: 250, column: 3, scope: !20488)
!20503 = !DILocation(line: 250, column: 10, scope: !20488)
!20504 = !DILocation(line: 250, column: 13, scope: !20488)
!20505 = !DILocation(line: 250, column: 18, scope: !20488)
!20506 = !DILocation(line: 250, column: 31, scope: !20488)
!20507 = !DILocation(line: 250, column: 22, scope: !20488)
!20508 = !DILocation(line: 250, column: 37, scope: !20488)
!20509 = !DILocation(line: 250, column: 34, scope: !20488)
!20510 = !DILocation(line: 250, column: 41, scope: !20488)
!20511 = !DILocation(line: 250, column: 54, scope: !20488)
!20512 = !DILocation(line: 250, column: 59, scope: !20488)
!20513 = !DILocation(line: 250, column: 67, scope: !20488)
!20514 = !DILocation(line: 250, column: 65, scope: !20488)
!20515 = !DILocation(line: 0, scope: !20488)
!20516 = !DILocation(line: 252, column: 13, scope: !20517)
!20517 = distinct !DILexicalBlock(scope: !20488, file: !1509, line: 251, column: 5)
!20518 = !DILocation(line: 252, column: 17, scope: !20517)
!20519 = !DILocation(line: 252, column: 11, scope: !20517)
!20520 = !DILocation(line: 253, column: 12, scope: !20517)
!20521 = !DILocation(line: 253, column: 10, scope: !20517)
!20522 = distinct !{!20522, !20502, !20523}
!20523 = !DILocation(line: 254, column: 5, scope: !20488)
!20524 = !DILocation(line: 255, column: 10, scope: !20488)
!20525 = !DILocation(line: 255, column: 13, scope: !20488)
!20526 = !DILocation(line: 255, column: 3, scope: !20488)
!20527 = distinct !DISubprogram(name: "_obstack_free", scope: !1509, file: !1509, line: 262, type: !20467, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20528 = !DILocalVariable(name: "h", arg: 1, scope: !20527, file: !1509, line: 262, type: !20161)
!20529 = !DILocation(line: 262, column: 32, scope: !20527)
!20530 = !DILocalVariable(name: "obj", arg: 2, scope: !20527, file: !1509, line: 262, type: !167)
!20531 = !DILocation(line: 262, column: 41, scope: !20527)
!20532 = !DILocalVariable(name: "lp", scope: !20527, file: !1509, line: 264, type: !1442)
!20533 = !DILocation(line: 264, column: 26, scope: !20527)
!20534 = !DILocalVariable(name: "plp", scope: !20527, file: !1509, line: 265, type: !1442)
!20535 = !DILocation(line: 265, column: 26, scope: !20527)
!20536 = !DILocation(line: 267, column: 8, scope: !20527)
!20537 = !DILocation(line: 267, column: 11, scope: !20527)
!20538 = !DILocation(line: 267, column: 6, scope: !20527)
!20539 = !DILocation(line: 271, column: 3, scope: !20527)
!20540 = !DILocation(line: 271, column: 10, scope: !20527)
!20541 = !DILocation(line: 271, column: 13, scope: !20527)
!20542 = !DILocation(line: 271, column: 18, scope: !20527)
!20543 = !DILocation(line: 271, column: 31, scope: !20527)
!20544 = !DILocation(line: 271, column: 22, scope: !20527)
!20545 = !DILocation(line: 271, column: 37, scope: !20527)
!20546 = !DILocation(line: 271, column: 34, scope: !20527)
!20547 = !DILocation(line: 271, column: 41, scope: !20527)
!20548 = !DILocation(line: 271, column: 54, scope: !20527)
!20549 = !DILocation(line: 271, column: 59, scope: !20527)
!20550 = !DILocation(line: 271, column: 67, scope: !20527)
!20551 = !DILocation(line: 271, column: 65, scope: !20527)
!20552 = !DILocation(line: 0, scope: !20527)
!20553 = !DILocation(line: 273, column: 13, scope: !20554)
!20554 = distinct !DILexicalBlock(scope: !20527, file: !1509, line: 272, column: 5)
!20555 = !DILocation(line: 273, column: 17, scope: !20554)
!20556 = !DILocation(line: 273, column: 11, scope: !20554)
!20557 = !DILocation(line: 274, column: 21, scope: !20554)
!20558 = !DILocation(line: 274, column: 24, scope: !20554)
!20559 = !DILocation(line: 274, column: 7, scope: !20554)
!20560 = !DILocation(line: 275, column: 12, scope: !20554)
!20561 = !DILocation(line: 275, column: 10, scope: !20554)
!20562 = !DILocation(line: 278, column: 7, scope: !20554)
!20563 = !DILocation(line: 278, column: 10, scope: !20554)
!20564 = !DILocation(line: 278, column: 29, scope: !20554)
!20565 = distinct !{!20565, !20539, !20566}
!20566 = !DILocation(line: 279, column: 5, scope: !20527)
!20567 = !DILocation(line: 280, column: 7, scope: !20568)
!20568 = distinct !DILexicalBlock(scope: !20527, file: !1509, line: 280, column: 7)
!20569 = !DILocation(line: 280, column: 7, scope: !20527)
!20570 = !DILocation(line: 282, column: 49, scope: !20571)
!20571 = distinct !DILexicalBlock(scope: !20568, file: !1509, line: 281, column: 5)
!20572 = !DILocation(line: 282, column: 24, scope: !20571)
!20573 = !DILocation(line: 282, column: 27, scope: !20571)
!20574 = !DILocation(line: 282, column: 37, scope: !20571)
!20575 = !DILocation(line: 282, column: 7, scope: !20571)
!20576 = !DILocation(line: 282, column: 10, scope: !20571)
!20577 = !DILocation(line: 282, column: 22, scope: !20571)
!20578 = !DILocation(line: 283, column: 24, scope: !20571)
!20579 = !DILocation(line: 283, column: 28, scope: !20571)
!20580 = !DILocation(line: 283, column: 7, scope: !20571)
!20581 = !DILocation(line: 283, column: 10, scope: !20571)
!20582 = !DILocation(line: 283, column: 22, scope: !20571)
!20583 = !DILocation(line: 284, column: 18, scope: !20571)
!20584 = !DILocation(line: 284, column: 7, scope: !20571)
!20585 = !DILocation(line: 284, column: 10, scope: !20571)
!20586 = !DILocation(line: 284, column: 16, scope: !20571)
!20587 = !DILocation(line: 285, column: 5, scope: !20571)
!20588 = !DILocation(line: 286, column: 12, scope: !20589)
!20589 = distinct !DILexicalBlock(scope: !20568, file: !1509, line: 286, column: 12)
!20590 = !DILocation(line: 286, column: 16, scope: !20589)
!20591 = !DILocation(line: 286, column: 12, scope: !20568)
!20592 = !DILocation(line: 288, column: 5, scope: !20589)
!20593 = !DILocation(line: 289, column: 1, scope: !20527)
!20594 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !1509, file: !1509, line: 292, type: !20595, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !152)
!20595 = !DISubroutineType(types: !20596)
!20596 = !{!149, !20161}
!20597 = !DILocalVariable(name: "h", arg: 1, scope: !20594, file: !1509, line: 292, type: !20161)
!20598 = !DILocation(line: 292, column: 39, scope: !20594)
!20599 = !DILocalVariable(name: "lp", scope: !20594, file: !1509, line: 294, type: !1442)
!20600 = !DILocation(line: 294, column: 26, scope: !20594)
!20601 = !DILocalVariable(name: "nbytes", scope: !20594, file: !1509, line: 295, type: !149)
!20602 = !DILocation(line: 295, column: 19, scope: !20594)
!20603 = !DILocation(line: 297, column: 13, scope: !20604)
!20604 = distinct !DILexicalBlock(scope: !20594, file: !1509, line: 297, column: 3)
!20605 = !DILocation(line: 297, column: 16, scope: !20604)
!20606 = !DILocation(line: 297, column: 11, scope: !20604)
!20607 = !DILocation(line: 297, column: 8, scope: !20604)
!20608 = !DILocation(line: 297, column: 23, scope: !20609)
!20609 = distinct !DILexicalBlock(scope: !20604, file: !1509, line: 297, column: 3)
!20610 = !DILocation(line: 297, column: 26, scope: !20609)
!20611 = !DILocation(line: 297, column: 3, scope: !20604)
!20612 = !DILocation(line: 299, column: 17, scope: !20613)
!20613 = distinct !DILexicalBlock(scope: !20609, file: !1509, line: 298, column: 5)
!20614 = !DILocation(line: 299, column: 21, scope: !20613)
!20615 = !DILocation(line: 299, column: 38, scope: !20613)
!20616 = !DILocation(line: 299, column: 29, scope: !20613)
!20617 = !DILocation(line: 299, column: 27, scope: !20613)
!20618 = !DILocation(line: 299, column: 14, scope: !20613)
!20619 = !DILocation(line: 300, column: 5, scope: !20613)
!20620 = !DILocation(line: 297, column: 37, scope: !20609)
!20621 = !DILocation(line: 297, column: 41, scope: !20609)
!20622 = !DILocation(line: 297, column: 35, scope: !20609)
!20623 = !DILocation(line: 297, column: 3, scope: !20609)
!20624 = distinct !{!20624, !20611, !20625}
!20625 = !DILocation(line: 300, column: 5, scope: !20604)
!20626 = !DILocation(line: 301, column: 10, scope: !20594)
!20627 = !DILocation(line: 301, column: 3, scope: !20594)
!20628 = distinct !DISubprogram(name: "tzalloc", scope: !1751, file: !1751, line: 95, type: !20629, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20629 = !DISubroutineType(types: !20630)
!20630 = !{!1740, !146}
!20631 = !DILocalVariable(name: "name", arg: 1, scope: !20628, file: !1751, line: 95, type: !146)
!20632 = !DILocation(line: 95, column: 22, scope: !20628)
!20633 = !DILocalVariable(name: "name_size", scope: !20628, file: !1751, line: 97, type: !149)
!20634 = !DILocation(line: 97, column: 10, scope: !20628)
!20635 = !DILocation(line: 97, column: 22, scope: !20628)
!20636 = !DILocation(line: 97, column: 37, scope: !20628)
!20637 = !DILocation(line: 97, column: 29, scope: !20628)
!20638 = !DILocation(line: 97, column: 43, scope: !20628)
!20639 = !DILocalVariable(name: "abbr_size", scope: !20628, file: !1751, line: 98, type: !149)
!20640 = !DILocation(line: 98, column: 10, scope: !20628)
!20641 = !DILocation(line: 98, column: 22, scope: !20628)
!20642 = !DILocation(line: 98, column: 32, scope: !20628)
!20643 = !DILocation(line: 98, column: 66, scope: !20628)
!20644 = !DILocation(line: 98, column: 76, scope: !20628)
!20645 = !DILocalVariable(name: "tz", scope: !20628, file: !1751, line: 99, type: !1740)
!20646 = !DILocation(line: 99, column: 14, scope: !20628)
!20647 = !DILocation(line: 99, column: 27, scope: !20628)
!20648 = !DILocation(line: 99, column: 19, scope: !20628)
!20649 = !DILocation(line: 100, column: 7, scope: !20650)
!20650 = distinct !DILexicalBlock(scope: !20628, file: !1751, line: 100, column: 7)
!20651 = !DILocation(line: 100, column: 7, scope: !20628)
!20652 = !DILocation(line: 102, column: 7, scope: !20653)
!20653 = distinct !DILexicalBlock(scope: !20650, file: !1751, line: 101, column: 5)
!20654 = !DILocation(line: 102, column: 11, scope: !20653)
!20655 = !DILocation(line: 102, column: 16, scope: !20653)
!20656 = !DILocation(line: 106, column: 25, scope: !20653)
!20657 = !DILocation(line: 106, column: 24, scope: !20653)
!20658 = !DILocation(line: 106, column: 23, scope: !20653)
!20659 = !DILocation(line: 106, column: 7, scope: !20653)
!20660 = !DILocation(line: 106, column: 11, scope: !20653)
!20661 = !DILocation(line: 106, column: 21, scope: !20653)
!20662 = !DILocation(line: 107, column: 7, scope: !20653)
!20663 = !DILocation(line: 107, column: 11, scope: !20653)
!20664 = !DILocation(line: 107, column: 20, scope: !20653)
!20665 = !DILocation(line: 108, column: 11, scope: !20666)
!20666 = distinct !DILexicalBlock(scope: !20653, file: !1751, line: 108, column: 11)
!20667 = !DILocation(line: 108, column: 11, scope: !20653)
!20668 = !DILocation(line: 109, column: 23, scope: !20666)
!20669 = !DILocation(line: 109, column: 27, scope: !20666)
!20670 = !DILocation(line: 109, column: 34, scope: !20666)
!20671 = !DILocation(line: 109, column: 40, scope: !20666)
!20672 = !DILocation(line: 109, column: 9, scope: !20666)
!20673 = !DILocation(line: 110, column: 5, scope: !20653)
!20674 = !DILocation(line: 111, column: 10, scope: !20628)
!20675 = !DILocation(line: 111, column: 3, scope: !20628)
!20676 = distinct !DISubprogram(name: "extend_abbrs", scope: !1751, file: !1751, line: 86, type: !20677, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20677 = !DISubroutineType(types: !20678)
!20678 = !{null, !143, !146, !149}
!20679 = !DILocalVariable(name: "abbrs", arg: 1, scope: !20676, file: !1751, line: 86, type: !143)
!20680 = !DILocation(line: 86, column: 21, scope: !20676)
!20681 = !DILocalVariable(name: "abbr", arg: 2, scope: !20676, file: !1751, line: 86, type: !146)
!20682 = !DILocation(line: 86, column: 40, scope: !20676)
!20683 = !DILocalVariable(name: "abbr_size", arg: 3, scope: !20676, file: !1751, line: 86, type: !149)
!20684 = !DILocation(line: 86, column: 53, scope: !20676)
!20685 = !DILocation(line: 88, column: 11, scope: !20676)
!20686 = !DILocation(line: 88, column: 18, scope: !20676)
!20687 = !DILocation(line: 88, column: 24, scope: !20676)
!20688 = !DILocation(line: 88, column: 3, scope: !20676)
!20689 = !DILocation(line: 89, column: 3, scope: !20676)
!20690 = !DILocation(line: 89, column: 9, scope: !20676)
!20691 = !DILocation(line: 89, column: 20, scope: !20676)
!20692 = !DILocation(line: 90, column: 1, scope: !20676)
!20693 = distinct !DISubprogram(name: "tzfree", scope: !1751, file: !1751, line: 196, type: !20694, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20694 = !DISubroutineType(types: !20695)
!20695 = !{null, !1740}
!20696 = !DILocalVariable(name: "tz", arg: 1, scope: !20693, file: !1751, line: 196, type: !1740)
!20697 = !DILocation(line: 196, column: 20, scope: !20693)
!20698 = !DILocation(line: 198, column: 7, scope: !20699)
!20699 = distinct !DILexicalBlock(scope: !20693, file: !1751, line: 198, column: 7)
!20700 = !DILocation(line: 198, column: 10, scope: !20699)
!20701 = !DILocation(line: 198, column: 7, scope: !20693)
!20702 = !DILocation(line: 199, column: 5, scope: !20699)
!20703 = !DILocation(line: 199, column: 12, scope: !20699)
!20704 = !DILocalVariable(name: "next", scope: !20705, file: !1751, line: 201, type: !1740)
!20705 = distinct !DILexicalBlock(scope: !20699, file: !1751, line: 200, column: 7)
!20706 = !DILocation(line: 201, column: 20, scope: !20705)
!20707 = !DILocation(line: 201, column: 27, scope: !20705)
!20708 = !DILocation(line: 201, column: 31, scope: !20705)
!20709 = !DILocation(line: 202, column: 15, scope: !20705)
!20710 = !DILocation(line: 202, column: 9, scope: !20705)
!20711 = !DILocation(line: 203, column: 14, scope: !20705)
!20712 = !DILocation(line: 203, column: 12, scope: !20705)
!20713 = distinct !{!20713, !20702, !20714}
!20714 = !DILocation(line: 204, column: 7, scope: !20699)
!20715 = !DILocation(line: 205, column: 1, scope: !20693)
!20716 = distinct !DISubprogram(name: "localtime_rz", scope: !1751, file: !1751, line: 287, type: !20717, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20717 = !DISubroutineType(types: !20718)
!20718 = !{!20719, !1740, !20733, !20719}
!20719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20720, size: 64)
!20720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !163, line: 133, size: 448, elements: !20721)
!20721 = !{!20722, !20723, !20724, !20725, !20726, !20727, !20728, !20729, !20730, !20731, !20732}
!20722 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !20720, file: !163, line: 135, baseType: !27, size: 32)
!20723 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !20720, file: !163, line: 136, baseType: !27, size: 32, offset: 32)
!20724 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !20720, file: !163, line: 137, baseType: !27, size: 32, offset: 64)
!20725 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !20720, file: !163, line: 138, baseType: !27, size: 32, offset: 96)
!20726 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !20720, file: !163, line: 139, baseType: !27, size: 32, offset: 128)
!20727 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !20720, file: !163, line: 140, baseType: !27, size: 32, offset: 160)
!20728 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !20720, file: !163, line: 141, baseType: !27, size: 32, offset: 192)
!20729 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !20720, file: !163, line: 142, baseType: !27, size: 32, offset: 224)
!20730 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !20720, file: !163, line: 143, baseType: !27, size: 32, offset: 256)
!20731 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !20720, file: !163, line: 146, baseType: !166, size: 64, offset: 320)
!20732 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !20720, file: !163, line: 147, baseType: !146, size: 64, offset: 384)
!20733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20734, size: 64)
!20734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!20735 = !DILocalVariable(name: "tz", arg: 1, scope: !20716, file: !1751, line: 287, type: !1740)
!20736 = !DILocation(line: 287, column: 26, scope: !20716)
!20737 = !DILocalVariable(name: "t", arg: 2, scope: !20716, file: !1751, line: 287, type: !20733)
!20738 = !DILocation(line: 287, column: 44, scope: !20716)
!20739 = !DILocalVariable(name: "tm", arg: 3, scope: !20716, file: !1751, line: 287, type: !20719)
!20740 = !DILocation(line: 287, column: 58, scope: !20716)
!20741 = !DILocation(line: 304, column: 8, scope: !20742)
!20742 = distinct !DILexicalBlock(scope: !20716, file: !1751, line: 304, column: 7)
!20743 = !DILocation(line: 304, column: 7, scope: !20716)
!20744 = !DILocation(line: 305, column: 22, scope: !20742)
!20745 = !DILocation(line: 305, column: 25, scope: !20742)
!20746 = !DILocation(line: 305, column: 12, scope: !20742)
!20747 = !DILocation(line: 305, column: 5, scope: !20742)
!20748 = !DILocalVariable(name: "old_tz", scope: !20749, file: !1751, line: 308, type: !1740)
!20749 = distinct !DILexicalBlock(scope: !20742, file: !1751, line: 307, column: 5)
!20750 = !DILocation(line: 308, column: 18, scope: !20749)
!20751 = !DILocation(line: 308, column: 35, scope: !20749)
!20752 = !DILocation(line: 308, column: 27, scope: !20749)
!20753 = !DILocation(line: 309, column: 11, scope: !20754)
!20754 = distinct !DILexicalBlock(scope: !20749, file: !1751, line: 309, column: 11)
!20755 = !DILocation(line: 309, column: 11, scope: !20749)
!20756 = !DILocalVariable(name: "abbr_saved", scope: !20757, file: !1751, line: 311, type: !141)
!20757 = distinct !DILexicalBlock(scope: !20754, file: !1751, line: 310, column: 9)
!20758 = !DILocation(line: 311, column: 16, scope: !20757)
!20759 = !DILocation(line: 311, column: 42, scope: !20757)
!20760 = !DILocation(line: 311, column: 45, scope: !20757)
!20761 = !DILocation(line: 311, column: 29, scope: !20757)
!20762 = !DILocation(line: 311, column: 49, scope: !20757)
!20763 = !DILocation(line: 311, column: 63, scope: !20757)
!20764 = !DILocation(line: 311, column: 67, scope: !20757)
!20765 = !DILocation(line: 311, column: 52, scope: !20757)
!20766 = !DILocation(line: 0, scope: !20757)
!20767 = !DILocation(line: 312, column: 26, scope: !20768)
!20768 = distinct !DILexicalBlock(scope: !20757, file: !1751, line: 312, column: 15)
!20769 = !DILocation(line: 312, column: 15, scope: !20768)
!20770 = !DILocation(line: 312, column: 34, scope: !20768)
!20771 = !DILocation(line: 312, column: 37, scope: !20768)
!20772 = !DILocation(line: 312, column: 15, scope: !20757)
!20773 = !DILocation(line: 313, column: 20, scope: !20768)
!20774 = !DILocation(line: 313, column: 13, scope: !20768)
!20775 = !DILocation(line: 314, column: 9, scope: !20757)
!20776 = !DILocation(line: 315, column: 7, scope: !20749)
!20777 = !DILocation(line: 317, column: 1, scope: !20716)
!20778 = distinct !DISubprogram(name: "set_tz", scope: !1751, file: !1751, line: 242, type: !20779, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20779 = !DISubroutineType(types: !20780)
!20780 = !{!1740, !1740}
!20781 = !DILocalVariable(name: "tz", arg: 1, scope: !20778, file: !1751, line: 242, type: !1740)
!20782 = !DILocation(line: 242, column: 20, scope: !20778)
!20783 = !DILocalVariable(name: "env_tz", scope: !20778, file: !1751, line: 244, type: !143)
!20784 = !DILocation(line: 244, column: 9, scope: !20778)
!20785 = !DILocation(line: 244, column: 18, scope: !20778)
!20786 = !DILocation(line: 245, column: 7, scope: !20787)
!20787 = distinct !DILexicalBlock(scope: !20778, file: !1751, line: 245, column: 7)
!20788 = !DILocation(line: 245, column: 7, scope: !20778)
!20789 = !DILocation(line: 246, column: 9, scope: !20787)
!20790 = !DILocation(line: 246, column: 13, scope: !20787)
!20791 = !DILocation(line: 246, column: 23, scope: !20787)
!20792 = !DILocation(line: 246, column: 34, scope: !20787)
!20793 = !DILocation(line: 246, column: 38, scope: !20787)
!20794 = !DILocation(line: 246, column: 45, scope: !20787)
!20795 = !DILocation(line: 246, column: 26, scope: !20787)
!20796 = !DILocation(line: 246, column: 53, scope: !20787)
!20797 = !DILocation(line: 247, column: 10, scope: !20787)
!20798 = !DILocation(line: 247, column: 14, scope: !20787)
!20799 = !DILocation(line: 248, column: 5, scope: !20787)
!20800 = !DILocalVariable(name: "old_tz", scope: !20801, file: !1751, line: 251, type: !1740)
!20801 = distinct !DILexicalBlock(scope: !20787, file: !1751, line: 250, column: 5)
!20802 = !DILocation(line: 251, column: 18, scope: !20801)
!20803 = !DILocation(line: 251, column: 36, scope: !20801)
!20804 = !DILocation(line: 251, column: 27, scope: !20801)
!20805 = !DILocation(line: 252, column: 12, scope: !20806)
!20806 = distinct !DILexicalBlock(scope: !20801, file: !1751, line: 252, column: 11)
!20807 = !DILocation(line: 252, column: 11, scope: !20801)
!20808 = !DILocation(line: 253, column: 16, scope: !20806)
!20809 = !DILocation(line: 253, column: 9, scope: !20806)
!20810 = !DILocation(line: 254, column: 25, scope: !20811)
!20811 = distinct !DILexicalBlock(scope: !20801, file: !1751, line: 254, column: 11)
!20812 = !DILocation(line: 254, column: 13, scope: !20811)
!20813 = !DILocation(line: 254, column: 11, scope: !20801)
!20814 = !DILocalVariable(name: "saved_errno", scope: !20815, file: !1751, line: 256, type: !27)
!20815 = distinct !DILexicalBlock(scope: !20811, file: !1751, line: 255, column: 9)
!20816 = !DILocation(line: 256, column: 15, scope: !20815)
!20817 = !DILocation(line: 256, column: 29, scope: !20815)
!20818 = !DILocation(line: 257, column: 19, scope: !20815)
!20819 = !DILocation(line: 257, column: 11, scope: !20815)
!20820 = !DILocation(line: 258, column: 19, scope: !20815)
!20821 = !DILocation(line: 258, column: 11, scope: !20815)
!20822 = !DILocation(line: 258, column: 17, scope: !20815)
!20823 = !DILocation(line: 259, column: 11, scope: !20815)
!20824 = !DILocation(line: 261, column: 14, scope: !20801)
!20825 = !DILocation(line: 261, column: 7, scope: !20801)
!20826 = !DILocation(line: 263, column: 1, scope: !20778)
!20827 = distinct !DISubprogram(name: "save_abbr", scope: !1751, file: !1751, line: 119, type: !20828, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20828 = !DISubroutineType(types: !20829)
!20829 = !{!141, !1740, !20719}
!20830 = !DILocalVariable(name: "tz", arg: 1, scope: !20827, file: !1751, line: 119, type: !1740)
!20831 = !DILocation(line: 119, column: 23, scope: !20827)
!20832 = !DILocalVariable(name: "tm", arg: 2, scope: !20827, file: !1751, line: 119, type: !20719)
!20833 = !DILocation(line: 119, column: 38, scope: !20827)
!20834 = !DILocalVariable(name: "zone", scope: !20827, file: !1751, line: 122, type: !146)
!20835 = !DILocation(line: 122, column: 15, scope: !20827)
!20836 = !DILocalVariable(name: "zone_copy", scope: !20827, file: !1751, line: 123, type: !143)
!20837 = !DILocation(line: 123, column: 9, scope: !20827)
!20838 = !DILocation(line: 130, column: 10, scope: !20827)
!20839 = !DILocation(line: 130, column: 14, scope: !20827)
!20840 = !DILocation(line: 130, column: 8, scope: !20827)
!20841 = !DILocation(line: 142, column: 8, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20827, file: !1751, line: 142, column: 7)
!20843 = !DILocation(line: 142, column: 13, scope: !20842)
!20844 = !DILocation(line: 142, column: 26, scope: !20842)
!20845 = !DILocation(line: 142, column: 17, scope: !20842)
!20846 = !DILocation(line: 142, column: 32, scope: !20842)
!20847 = !DILocation(line: 142, column: 29, scope: !20842)
!20848 = !DILocation(line: 142, column: 37, scope: !20842)
!20849 = !DILocation(line: 142, column: 40, scope: !20842)
!20850 = !DILocation(line: 142, column: 57, scope: !20842)
!20851 = !DILocation(line: 142, column: 60, scope: !20842)
!20852 = !DILocation(line: 142, column: 47, scope: !20842)
!20853 = !DILocation(line: 142, column: 45, scope: !20842)
!20854 = !DILocation(line: 142, column: 7, scope: !20827)
!20855 = !DILocation(line: 143, column: 5, scope: !20842)
!20856 = !DILocation(line: 145, column: 8, scope: !20857)
!20857 = distinct !DILexicalBlock(scope: !20827, file: !1751, line: 145, column: 7)
!20858 = !DILocation(line: 145, column: 7, scope: !20857)
!20859 = !DILocation(line: 145, column: 7, scope: !20827)
!20860 = !DILocation(line: 147, column: 19, scope: !20861)
!20861 = distinct !DILexicalBlock(scope: !20857, file: !1751, line: 146, column: 5)
!20862 = !DILocation(line: 147, column: 23, scope: !20861)
!20863 = !DILocation(line: 147, column: 17, scope: !20861)
!20864 = !DILocation(line: 149, column: 7, scope: !20861)
!20865 = !DILocation(line: 149, column: 22, scope: !20861)
!20866 = !DILocation(line: 149, column: 33, scope: !20861)
!20867 = !DILocation(line: 149, column: 14, scope: !20861)
!20868 = !DILocation(line: 149, column: 39, scope: !20861)
!20869 = !DILocation(line: 151, column: 19, scope: !20870)
!20870 = distinct !DILexicalBlock(scope: !20871, file: !1751, line: 151, column: 15)
!20871 = distinct !DILexicalBlock(scope: !20861, file: !1751, line: 150, column: 9)
!20872 = !DILocation(line: 151, column: 18, scope: !20870)
!20873 = !DILocation(line: 151, column: 29, scope: !20870)
!20874 = !DILocation(line: 151, column: 33, scope: !20870)
!20875 = !DILocation(line: 151, column: 46, scope: !20870)
!20876 = !DILocation(line: 151, column: 50, scope: !20870)
!20877 = !DILocation(line: 151, column: 43, scope: !20870)
!20878 = !DILocation(line: 151, column: 56, scope: !20870)
!20879 = !DILocation(line: 151, column: 59, scope: !20870)
!20880 = !DILocation(line: 151, column: 63, scope: !20870)
!20881 = !DILocation(line: 151, column: 15, scope: !20871)
!20882 = !DILocalVariable(name: "zone_size", scope: !20883, file: !1751, line: 153, type: !149)
!20883 = distinct !DILexicalBlock(scope: !20870, file: !1751, line: 152, column: 13)
!20884 = !DILocation(line: 153, column: 22, scope: !20883)
!20885 = !DILocation(line: 153, column: 42, scope: !20883)
!20886 = !DILocation(line: 153, column: 34, scope: !20883)
!20887 = !DILocation(line: 153, column: 48, scope: !20883)
!20888 = !DILocalVariable(name: "zone_used", scope: !20883, file: !1751, line: 154, type: !149)
!20889 = !DILocation(line: 154, column: 22, scope: !20883)
!20890 = !DILocation(line: 154, column: 34, scope: !20883)
!20891 = !DILocation(line: 154, column: 46, scope: !20883)
!20892 = !DILocation(line: 154, column: 50, scope: !20883)
!20893 = !DILocation(line: 154, column: 44, scope: !20883)
!20894 = !DILocation(line: 155, column: 30, scope: !20895)
!20895 = distinct !DILexicalBlock(scope: !20883, file: !1751, line: 155, column: 19)
!20896 = !DILocation(line: 155, column: 28, scope: !20895)
!20897 = !DILocation(line: 155, column: 42, scope: !20895)
!20898 = !DILocation(line: 155, column: 40, scope: !20895)
!20899 = !DILocation(line: 155, column: 19, scope: !20883)
!20900 = !DILocation(line: 157, column: 19, scope: !20901)
!20901 = distinct !DILexicalBlock(scope: !20895, file: !1751, line: 156, column: 17)
!20902 = !DILocation(line: 157, column: 25, scope: !20901)
!20903 = !DILocation(line: 158, column: 19, scope: !20901)
!20904 = !DILocation(line: 160, column: 19, scope: !20905)
!20905 = distinct !DILexicalBlock(scope: !20883, file: !1751, line: 160, column: 19)
!20906 = !DILocation(line: 160, column: 31, scope: !20905)
!20907 = !DILocation(line: 160, column: 29, scope: !20905)
!20908 = !DILocation(line: 160, column: 41, scope: !20905)
!20909 = !DILocation(line: 160, column: 19, scope: !20883)
!20910 = !DILocation(line: 161, column: 31, scope: !20905)
!20911 = !DILocation(line: 161, column: 42, scope: !20905)
!20912 = !DILocation(line: 161, column: 48, scope: !20905)
!20913 = !DILocation(line: 161, column: 17, scope: !20905)
!20914 = !DILocation(line: 164, column: 44, scope: !20915)
!20915 = distinct !DILexicalBlock(scope: !20905, file: !1751, line: 163, column: 17)
!20916 = !DILocation(line: 164, column: 35, scope: !20915)
!20917 = !DILocation(line: 164, column: 24, scope: !20915)
!20918 = !DILocation(line: 164, column: 28, scope: !20915)
!20919 = !DILocation(line: 164, column: 33, scope: !20915)
!20920 = !DILocation(line: 164, column: 22, scope: !20915)
!20921 = !DILocation(line: 165, column: 24, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20915, file: !1751, line: 165, column: 23)
!20923 = !DILocation(line: 165, column: 23, scope: !20915)
!20924 = !DILocation(line: 166, column: 21, scope: !20922)
!20925 = !DILocation(line: 167, column: 19, scope: !20915)
!20926 = !DILocation(line: 167, column: 23, scope: !20915)
!20927 = !DILocation(line: 167, column: 33, scope: !20915)
!20928 = !DILocation(line: 168, column: 31, scope: !20915)
!20929 = !DILocation(line: 168, column: 35, scope: !20915)
!20930 = !DILocation(line: 168, column: 29, scope: !20915)
!20931 = !DILocation(line: 170, column: 15, scope: !20883)
!20932 = !DILocation(line: 173, column: 32, scope: !20871)
!20933 = !DILocation(line: 173, column: 24, scope: !20871)
!20934 = !DILocation(line: 173, column: 43, scope: !20871)
!20935 = !DILocation(line: 173, column: 21, scope: !20871)
!20936 = !DILocation(line: 174, column: 17, scope: !20937)
!20937 = distinct !DILexicalBlock(scope: !20871, file: !1751, line: 174, column: 15)
!20938 = !DILocation(line: 174, column: 16, scope: !20937)
!20939 = !DILocation(line: 174, column: 27, scope: !20937)
!20940 = !DILocation(line: 174, column: 30, scope: !20937)
!20941 = !DILocation(line: 174, column: 34, scope: !20937)
!20942 = !DILocation(line: 174, column: 15, scope: !20871)
!20943 = !DILocation(line: 176, column: 20, scope: !20944)
!20944 = distinct !DILexicalBlock(scope: !20937, file: !1751, line: 175, column: 13)
!20945 = !DILocation(line: 176, column: 24, scope: !20944)
!20946 = !DILocation(line: 176, column: 18, scope: !20944)
!20947 = !DILocation(line: 177, column: 27, scope: !20944)
!20948 = !DILocation(line: 177, column: 31, scope: !20944)
!20949 = !DILocation(line: 177, column: 25, scope: !20944)
!20950 = !DILocation(line: 178, column: 13, scope: !20944)
!20951 = distinct !{!20951, !20864, !20952}
!20952 = !DILocation(line: 179, column: 9, scope: !20861)
!20953 = !DILocation(line: 180, column: 5, scope: !20861)
!20954 = !DILocation(line: 184, column: 17, scope: !20827)
!20955 = !DILocation(line: 184, column: 3, scope: !20827)
!20956 = !DILocation(line: 184, column: 7, scope: !20827)
!20957 = !DILocation(line: 184, column: 15, scope: !20827)
!20958 = !DILocation(line: 191, column: 3, scope: !20827)
!20959 = !DILocation(line: 192, column: 1, scope: !20827)
!20960 = distinct !DISubprogram(name: "revert_tz", scope: !1751, file: !1751, line: 269, type: !20961, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20961 = !DISubroutineType(types: !20962)
!20962 = !{!141, !1740}
!20963 = !DILocalVariable(name: "tz", arg: 1, scope: !20960, file: !1751, line: 269, type: !1740)
!20964 = !DILocation(line: 269, column: 23, scope: !20960)
!20965 = !DILocation(line: 271, column: 7, scope: !20966)
!20966 = distinct !DILexicalBlock(scope: !20960, file: !1751, line: 271, column: 7)
!20967 = !DILocation(line: 271, column: 10, scope: !20966)
!20968 = !DILocation(line: 271, column: 7, scope: !20960)
!20969 = !DILocation(line: 272, column: 5, scope: !20966)
!20970 = !DILocalVariable(name: "saved_errno", scope: !20971, file: !1751, line: 275, type: !27)
!20971 = distinct !DILexicalBlock(scope: !20966, file: !1751, line: 274, column: 5)
!20972 = !DILocation(line: 275, column: 11, scope: !20971)
!20973 = !DILocation(line: 275, column: 25, scope: !20971)
!20974 = !DILocalVariable(name: "ok", scope: !20971, file: !1751, line: 276, type: !141)
!20975 = !DILocation(line: 276, column: 12, scope: !20971)
!20976 = !DILocation(line: 276, column: 29, scope: !20971)
!20977 = !DILocation(line: 276, column: 17, scope: !20971)
!20978 = !DILocation(line: 277, column: 12, scope: !20979)
!20979 = distinct !DILexicalBlock(scope: !20971, file: !1751, line: 277, column: 11)
!20980 = !DILocation(line: 277, column: 11, scope: !20971)
!20981 = !DILocation(line: 278, column: 23, scope: !20979)
!20982 = !DILocation(line: 278, column: 21, scope: !20979)
!20983 = !DILocation(line: 278, column: 9, scope: !20979)
!20984 = !DILocation(line: 279, column: 15, scope: !20971)
!20985 = !DILocation(line: 279, column: 7, scope: !20971)
!20986 = !DILocation(line: 280, column: 15, scope: !20971)
!20987 = !DILocation(line: 280, column: 7, scope: !20971)
!20988 = !DILocation(line: 280, column: 13, scope: !20971)
!20989 = !DILocation(line: 281, column: 14, scope: !20971)
!20990 = !DILocation(line: 281, column: 7, scope: !20971)
!20991 = !DILocation(line: 283, column: 1, scope: !20960)
!20992 = distinct !DISubprogram(name: "change_env", scope: !1751, file: !1751, line: 229, type: !20961, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!20993 = !DILocalVariable(name: "tz", arg: 1, scope: !20992, file: !1751, line: 229, type: !1740)
!20994 = !DILocation(line: 229, column: 24, scope: !20992)
!20995 = !DILocation(line: 231, column: 18, scope: !20996)
!20996 = distinct !DILexicalBlock(scope: !20992, file: !1751, line: 231, column: 7)
!20997 = !DILocation(line: 231, column: 22, scope: !20996)
!20998 = !DILocation(line: 231, column: 34, scope: !20996)
!20999 = !DILocation(line: 231, column: 38, scope: !20996)
!21000 = !DILocation(line: 231, column: 7, scope: !20996)
!21001 = !DILocation(line: 231, column: 52, scope: !20996)
!21002 = !DILocation(line: 231, column: 7, scope: !20992)
!21003 = !DILocation(line: 232, column: 5, scope: !20996)
!21004 = !DILocation(line: 233, column: 3, scope: !20992)
!21005 = !DILocation(line: 234, column: 3, scope: !20992)
!21006 = !DILocation(line: 235, column: 1, scope: !20992)
!21007 = distinct !DISubprogram(name: "setenv_TZ", scope: !1751, file: !1751, line: 220, type: !21008, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!21008 = !DISubroutineType(types: !21009)
!21009 = !{!27, !146}
!21010 = !DILocalVariable(name: "tz", arg: 1, scope: !21007, file: !1751, line: 220, type: !146)
!21011 = !DILocation(line: 220, column: 24, scope: !21007)
!21012 = !DILocation(line: 222, column: 10, scope: !21007)
!21013 = !DILocation(line: 222, column: 29, scope: !21007)
!21014 = !DILocation(line: 222, column: 15, scope: !21007)
!21015 = !DILocation(line: 222, column: 38, scope: !21007)
!21016 = !DILocation(line: 222, column: 3, scope: !21007)
!21017 = distinct !DISubprogram(name: "getenv_TZ", scope: !1751, file: !1751, line: 212, type: !19355, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!21018 = !DILocation(line: 214, column: 10, scope: !21017)
!21019 = !DILocation(line: 214, column: 3, scope: !21017)
!21020 = distinct !DISubprogram(name: "mktime_z", scope: !1751, file: !1751, line: 321, type: !21021, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!21021 = !DISubroutineType(types: !21022)
!21022 = !{!162, !1740, !20719}
!21023 = !DILocalVariable(name: "tz", arg: 1, scope: !21020, file: !1751, line: 321, type: !1740)
!21024 = !DILocation(line: 321, column: 22, scope: !21020)
!21025 = !DILocalVariable(name: "tm", arg: 2, scope: !21020, file: !1751, line: 321, type: !20719)
!21026 = !DILocation(line: 321, column: 37, scope: !21020)
!21027 = !DILocation(line: 323, column: 8, scope: !21028)
!21028 = distinct !DILexicalBlock(scope: !21020, file: !1751, line: 323, column: 7)
!21029 = !DILocation(line: 323, column: 7, scope: !21020)
!21030 = !DILocation(line: 324, column: 20, scope: !21028)
!21031 = !DILocation(line: 324, column: 12, scope: !21028)
!21032 = !DILocation(line: 324, column: 5, scope: !21028)
!21033 = !DILocalVariable(name: "old_tz", scope: !21034, file: !1751, line: 327, type: !1740)
!21034 = distinct !DILexicalBlock(scope: !21028, file: !1751, line: 326, column: 5)
!21035 = !DILocation(line: 327, column: 18, scope: !21034)
!21036 = !DILocation(line: 327, column: 35, scope: !21034)
!21037 = !DILocation(line: 327, column: 27, scope: !21034)
!21038 = !DILocation(line: 328, column: 11, scope: !21039)
!21039 = distinct !DILexicalBlock(scope: !21034, file: !1751, line: 328, column: 11)
!21040 = !DILocation(line: 328, column: 11, scope: !21034)
!21041 = !DILocalVariable(name: "t", scope: !21042, file: !1751, line: 330, type: !162)
!21042 = distinct !DILexicalBlock(scope: !21039, file: !1751, line: 329, column: 9)
!21043 = !DILocation(line: 330, column: 18, scope: !21042)
!21044 = !DILocation(line: 330, column: 30, scope: !21042)
!21045 = !DILocation(line: 330, column: 22, scope: !21042)
!21046 = !DILocalVariable(name: "badtime", scope: !21042, file: !1751, line: 332, type: !162)
!21047 = !DILocation(line: 332, column: 18, scope: !21042)
!21048 = !DILocalVariable(name: "tm_1", scope: !21042, file: !1751, line: 333, type: !20720)
!21049 = !DILocation(line: 333, column: 21, scope: !21042)
!21050 = !DILocation(line: 334, column: 16, scope: !21051)
!21051 = distinct !DILexicalBlock(scope: !21042, file: !1751, line: 334, column: 15)
!21052 = !DILocation(line: 334, column: 21, scope: !21051)
!21053 = !DILocation(line: 334, column: 18, scope: !21051)
!21054 = !DILocation(line: 335, column: 16, scope: !21051)
!21055 = !DILocation(line: 335, column: 20, scope: !21051)
!21056 = !DILocation(line: 335, column: 44, scope: !21051)
!21057 = !DILocation(line: 335, column: 57, scope: !21051)
!21058 = !DILocation(line: 335, column: 47, scope: !21051)
!21059 = !DILocation(line: 336, column: 15, scope: !21051)
!21060 = !DILocation(line: 336, column: 30, scope: !21051)
!21061 = !DILocation(line: 336, column: 34, scope: !21051)
!21062 = !DILocation(line: 336, column: 19, scope: !21051)
!21063 = !DILocation(line: 334, column: 15, scope: !21042)
!21064 = !DILocation(line: 337, column: 17, scope: !21051)
!21065 = !DILocation(line: 337, column: 15, scope: !21051)
!21066 = !DILocation(line: 337, column: 13, scope: !21051)
!21067 = !DILocation(line: 339, column: 26, scope: !21068)
!21068 = distinct !DILexicalBlock(scope: !21042, file: !1751, line: 339, column: 15)
!21069 = !DILocation(line: 339, column: 15, scope: !21068)
!21070 = !DILocation(line: 339, column: 15, scope: !21042)
!21071 = !DILocation(line: 340, column: 20, scope: !21068)
!21072 = !DILocation(line: 340, column: 13, scope: !21068)
!21073 = !DILocation(line: 341, column: 9, scope: !21042)
!21074 = !DILocation(line: 342, column: 7, scope: !21034)
!21075 = !DILocation(line: 344, column: 1, scope: !21020)
!21076 = distinct !DISubprogram(name: "equal_tm", scope: !1751, file: !1751, line: 69, type: !21077, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!21077 = !DISubroutineType(types: !21078)
!21078 = !{!27, !21079, !21079}
!21079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21080, size: 64)
!21080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20720)
!21081 = !DILocalVariable(name: "a", arg: 1, scope: !21076, file: !1751, line: 69, type: !21079)
!21082 = !DILocation(line: 69, column: 28, scope: !21076)
!21083 = !DILocalVariable(name: "b", arg: 2, scope: !21076, file: !1751, line: 69, type: !21079)
!21084 = !DILocation(line: 69, column: 48, scope: !21076)
!21085 = !DILocation(line: 71, column: 14, scope: !21076)
!21086 = !DILocation(line: 71, column: 17, scope: !21076)
!21087 = !DILocation(line: 71, column: 26, scope: !21076)
!21088 = !DILocation(line: 71, column: 29, scope: !21076)
!21089 = !DILocation(line: 71, column: 24, scope: !21076)
!21090 = !DILocation(line: 72, column: 16, scope: !21076)
!21091 = !DILocation(line: 72, column: 19, scope: !21076)
!21092 = !DILocation(line: 72, column: 28, scope: !21076)
!21093 = !DILocation(line: 72, column: 31, scope: !21076)
!21094 = !DILocation(line: 72, column: 26, scope: !21076)
!21095 = !DILocation(line: 72, column: 13, scope: !21076)
!21096 = !DILocation(line: 73, column: 16, scope: !21076)
!21097 = !DILocation(line: 73, column: 19, scope: !21076)
!21098 = !DILocation(line: 73, column: 29, scope: !21076)
!21099 = !DILocation(line: 73, column: 32, scope: !21076)
!21100 = !DILocation(line: 73, column: 27, scope: !21076)
!21101 = !DILocation(line: 73, column: 13, scope: !21076)
!21102 = !DILocation(line: 74, column: 16, scope: !21076)
!21103 = !DILocation(line: 74, column: 19, scope: !21076)
!21104 = !DILocation(line: 74, column: 29, scope: !21076)
!21105 = !DILocation(line: 74, column: 32, scope: !21076)
!21106 = !DILocation(line: 74, column: 27, scope: !21076)
!21107 = !DILocation(line: 74, column: 13, scope: !21076)
!21108 = !DILocation(line: 75, column: 16, scope: !21076)
!21109 = !DILocation(line: 75, column: 19, scope: !21076)
!21110 = !DILocation(line: 75, column: 28, scope: !21076)
!21111 = !DILocation(line: 75, column: 31, scope: !21076)
!21112 = !DILocation(line: 75, column: 26, scope: !21076)
!21113 = !DILocation(line: 75, column: 13, scope: !21076)
!21114 = !DILocation(line: 76, column: 16, scope: !21076)
!21115 = !DILocation(line: 76, column: 19, scope: !21076)
!21116 = !DILocation(line: 76, column: 29, scope: !21076)
!21117 = !DILocation(line: 76, column: 32, scope: !21076)
!21118 = !DILocation(line: 76, column: 27, scope: !21076)
!21119 = !DILocation(line: 76, column: 13, scope: !21076)
!21120 = !DILocation(line: 77, column: 29, scope: !21076)
!21121 = !DILocation(line: 77, column: 32, scope: !21076)
!21122 = !DILocation(line: 77, column: 42, scope: !21076)
!21123 = !DILocation(line: 77, column: 45, scope: !21076)
!21124 = !DILocation(line: 77, column: 15, scope: !21076)
!21125 = !DILocation(line: 77, column: 13, scope: !21076)
!21126 = !DILocation(line: 71, column: 10, scope: !21076)
!21127 = !DILocation(line: 71, column: 3, scope: !21076)
!21128 = distinct !DISubprogram(name: "isdst_differ", scope: !1751, file: !1751, line: 62, type: !21129, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1737, retainedNodes: !152)
!21129 = !DISubroutineType(types: !21130)
!21130 = !{!141, !27, !27}
!21131 = !DILocalVariable(name: "a", arg: 1, scope: !21128, file: !1751, line: 62, type: !27)
!21132 = !DILocation(line: 62, column: 19, scope: !21128)
!21133 = !DILocalVariable(name: "b", arg: 2, scope: !21128, file: !1751, line: 62, type: !27)
!21134 = !DILocation(line: 62, column: 26, scope: !21128)
!21135 = !DILocation(line: 64, column: 11, scope: !21128)
!21136 = !DILocation(line: 64, column: 10, scope: !21128)
!21137 = !DILocation(line: 64, column: 17, scope: !21128)
!21138 = !DILocation(line: 64, column: 16, scope: !21128)
!21139 = !DILocation(line: 64, column: 13, scope: !21128)
!21140 = !DILocation(line: 64, column: 19, scope: !21128)
!21141 = !DILocation(line: 64, column: 27, scope: !21128)
!21142 = !DILocation(line: 64, column: 24, scope: !21128)
!21143 = !DILocation(line: 64, column: 29, scope: !21128)
!21144 = !DILocation(line: 64, column: 37, scope: !21128)
!21145 = !DILocation(line: 64, column: 34, scope: !21128)
!21146 = !DILocation(line: 0, scope: !21128)
!21147 = !DILocation(line: 64, column: 3, scope: !21128)
!21148 = distinct !DISubprogram(name: "rotl64", scope: !21149, file: !21149, line: 39, type: !21150, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21149 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!21150 = !DISubroutineType(types: !21151)
!21151 = !{!21152, !21152, !27}
!21152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !169, line: 55, baseType: !151)
!21153 = !DILocalVariable(name: "x", arg: 1, scope: !21148, file: !21149, line: 39, type: !21152)
!21154 = !DILocation(line: 39, column: 18, scope: !21148)
!21155 = !DILocalVariable(name: "n", arg: 2, scope: !21148, file: !21149, line: 39, type: !27)
!21156 = !DILocation(line: 39, column: 25, scope: !21148)
!21157 = !DILocation(line: 41, column: 12, scope: !21148)
!21158 = !DILocation(line: 41, column: 17, scope: !21148)
!21159 = !DILocation(line: 41, column: 14, scope: !21148)
!21160 = !DILocation(line: 41, column: 23, scope: !21148)
!21161 = !DILocation(line: 41, column: 34, scope: !21148)
!21162 = !DILocation(line: 41, column: 32, scope: !21148)
!21163 = !DILocation(line: 41, column: 25, scope: !21148)
!21164 = !DILocation(line: 41, column: 20, scope: !21148)
!21165 = !DILocation(line: 41, column: 3, scope: !21148)
!21166 = distinct !DISubprogram(name: "rotr64", scope: !21149, file: !21149, line: 48, type: !21150, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21167 = !DILocalVariable(name: "x", arg: 1, scope: !21166, file: !21149, line: 48, type: !21152)
!21168 = !DILocation(line: 48, column: 18, scope: !21166)
!21169 = !DILocalVariable(name: "n", arg: 2, scope: !21166, file: !21149, line: 48, type: !27)
!21170 = !DILocation(line: 48, column: 25, scope: !21166)
!21171 = !DILocation(line: 50, column: 12, scope: !21166)
!21172 = !DILocation(line: 50, column: 17, scope: !21166)
!21173 = !DILocation(line: 50, column: 14, scope: !21166)
!21174 = !DILocation(line: 50, column: 23, scope: !21166)
!21175 = !DILocation(line: 50, column: 34, scope: !21166)
!21176 = !DILocation(line: 50, column: 32, scope: !21166)
!21177 = !DILocation(line: 50, column: 25, scope: !21166)
!21178 = !DILocation(line: 50, column: 20, scope: !21166)
!21179 = !DILocation(line: 50, column: 3, scope: !21166)
!21180 = distinct !DISubprogram(name: "rotl32", scope: !21149, file: !21149, line: 58, type: !21181, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21181 = !DISubroutineType(types: !21182)
!21182 = !{!21183, !21183, !27}
!21183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !169, line: 51, baseType: !6)
!21184 = !DILocalVariable(name: "x", arg: 1, scope: !21180, file: !21149, line: 58, type: !21183)
!21185 = !DILocation(line: 58, column: 18, scope: !21180)
!21186 = !DILocalVariable(name: "n", arg: 2, scope: !21180, file: !21149, line: 58, type: !27)
!21187 = !DILocation(line: 58, column: 25, scope: !21180)
!21188 = !DILocation(line: 60, column: 12, scope: !21180)
!21189 = !DILocation(line: 60, column: 17, scope: !21180)
!21190 = !DILocation(line: 60, column: 14, scope: !21180)
!21191 = !DILocation(line: 60, column: 23, scope: !21180)
!21192 = !DILocation(line: 60, column: 34, scope: !21180)
!21193 = !DILocation(line: 60, column: 32, scope: !21180)
!21194 = !DILocation(line: 60, column: 25, scope: !21180)
!21195 = !DILocation(line: 60, column: 20, scope: !21180)
!21196 = !DILocation(line: 60, column: 3, scope: !21180)
!21197 = distinct !DISubprogram(name: "rotr32", scope: !21149, file: !21149, line: 67, type: !21181, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21198 = !DILocalVariable(name: "x", arg: 1, scope: !21197, file: !21149, line: 67, type: !21183)
!21199 = !DILocation(line: 67, column: 18, scope: !21197)
!21200 = !DILocalVariable(name: "n", arg: 2, scope: !21197, file: !21149, line: 67, type: !27)
!21201 = !DILocation(line: 67, column: 25, scope: !21197)
!21202 = !DILocation(line: 69, column: 12, scope: !21197)
!21203 = !DILocation(line: 69, column: 17, scope: !21197)
!21204 = !DILocation(line: 69, column: 14, scope: !21197)
!21205 = !DILocation(line: 69, column: 23, scope: !21197)
!21206 = !DILocation(line: 69, column: 34, scope: !21197)
!21207 = !DILocation(line: 69, column: 32, scope: !21197)
!21208 = !DILocation(line: 69, column: 25, scope: !21197)
!21209 = !DILocation(line: 69, column: 20, scope: !21197)
!21210 = !DILocation(line: 69, column: 3, scope: !21197)
!21211 = distinct !DISubprogram(name: "rotl_sz", scope: !21149, file: !21149, line: 76, type: !21212, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21212 = !DISubroutineType(types: !21213)
!21213 = !{!149, !149, !27}
!21214 = !DILocalVariable(name: "x", arg: 1, scope: !21211, file: !21149, line: 76, type: !149)
!21215 = !DILocation(line: 76, column: 17, scope: !21211)
!21216 = !DILocalVariable(name: "n", arg: 2, scope: !21211, file: !21149, line: 76, type: !27)
!21217 = !DILocation(line: 76, column: 24, scope: !21211)
!21218 = !DILocation(line: 78, column: 12, scope: !21211)
!21219 = !DILocation(line: 78, column: 17, scope: !21211)
!21220 = !DILocation(line: 78, column: 14, scope: !21211)
!21221 = !DILocation(line: 78, column: 23, scope: !21211)
!21222 = !DILocation(line: 78, column: 53, scope: !21211)
!21223 = !DILocation(line: 78, column: 51, scope: !21211)
!21224 = !DILocation(line: 78, column: 25, scope: !21211)
!21225 = !DILocation(line: 78, column: 20, scope: !21211)
!21226 = !DILocation(line: 78, column: 3, scope: !21211)
!21227 = distinct !DISubprogram(name: "rotr_sz", scope: !21149, file: !21149, line: 85, type: !21212, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21228 = !DILocalVariable(name: "x", arg: 1, scope: !21227, file: !21149, line: 85, type: !149)
!21229 = !DILocation(line: 85, column: 17, scope: !21227)
!21230 = !DILocalVariable(name: "n", arg: 2, scope: !21227, file: !21149, line: 85, type: !27)
!21231 = !DILocation(line: 85, column: 24, scope: !21227)
!21232 = !DILocation(line: 87, column: 12, scope: !21227)
!21233 = !DILocation(line: 87, column: 17, scope: !21227)
!21234 = !DILocation(line: 87, column: 14, scope: !21227)
!21235 = !DILocation(line: 87, column: 23, scope: !21227)
!21236 = !DILocation(line: 87, column: 53, scope: !21227)
!21237 = !DILocation(line: 87, column: 51, scope: !21227)
!21238 = !DILocation(line: 87, column: 25, scope: !21227)
!21239 = !DILocation(line: 87, column: 20, scope: !21227)
!21240 = !DILocation(line: 87, column: 3, scope: !21227)
!21241 = distinct !DISubprogram(name: "rotl16", scope: !21149, file: !21149, line: 96, type: !21242, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21242 = !DISubroutineType(types: !21243)
!21243 = !{!21244, !21244, !27}
!21244 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !169, line: 49, baseType: !177)
!21245 = !DILocalVariable(name: "x", arg: 1, scope: !21241, file: !21149, line: 96, type: !21244)
!21246 = !DILocation(line: 96, column: 18, scope: !21241)
!21247 = !DILocalVariable(name: "n", arg: 2, scope: !21241, file: !21149, line: 96, type: !27)
!21248 = !DILocation(line: 96, column: 25, scope: !21241)
!21249 = !DILocation(line: 98, column: 27, scope: !21241)
!21250 = !DILocation(line: 98, column: 12, scope: !21241)
!21251 = !DILocation(line: 98, column: 32, scope: !21241)
!21252 = !DILocation(line: 98, column: 29, scope: !21241)
!21253 = !DILocation(line: 98, column: 53, scope: !21241)
!21254 = !DILocation(line: 98, column: 38, scope: !21241)
!21255 = !DILocation(line: 98, column: 64, scope: !21241)
!21256 = !DILocation(line: 98, column: 62, scope: !21241)
!21257 = !DILocation(line: 98, column: 55, scope: !21241)
!21258 = !DILocation(line: 98, column: 35, scope: !21241)
!21259 = !DILocation(line: 99, column: 10, scope: !21241)
!21260 = !DILocation(line: 98, column: 10, scope: !21241)
!21261 = !DILocation(line: 98, column: 3, scope: !21241)
!21262 = distinct !DISubprogram(name: "rotr16", scope: !21149, file: !21149, line: 108, type: !21242, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21263 = !DILocalVariable(name: "x", arg: 1, scope: !21262, file: !21149, line: 108, type: !21244)
!21264 = !DILocation(line: 108, column: 18, scope: !21262)
!21265 = !DILocalVariable(name: "n", arg: 2, scope: !21262, file: !21149, line: 108, type: !27)
!21266 = !DILocation(line: 108, column: 25, scope: !21262)
!21267 = !DILocation(line: 110, column: 27, scope: !21262)
!21268 = !DILocation(line: 110, column: 12, scope: !21262)
!21269 = !DILocation(line: 110, column: 32, scope: !21262)
!21270 = !DILocation(line: 110, column: 29, scope: !21262)
!21271 = !DILocation(line: 110, column: 53, scope: !21262)
!21272 = !DILocation(line: 110, column: 38, scope: !21262)
!21273 = !DILocation(line: 110, column: 64, scope: !21262)
!21274 = !DILocation(line: 110, column: 62, scope: !21262)
!21275 = !DILocation(line: 110, column: 55, scope: !21262)
!21276 = !DILocation(line: 110, column: 35, scope: !21262)
!21277 = !DILocation(line: 111, column: 10, scope: !21262)
!21278 = !DILocation(line: 110, column: 10, scope: !21262)
!21279 = !DILocation(line: 110, column: 3, scope: !21262)
!21280 = distinct !DISubprogram(name: "rotl8", scope: !21149, file: !21149, line: 120, type: !21281, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21281 = !DISubroutineType(types: !21282)
!21282 = !{!21283, !21283, !27}
!21283 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !169, line: 48, baseType: !725)
!21284 = !DILocalVariable(name: "x", arg: 1, scope: !21280, file: !21149, line: 120, type: !21283)
!21285 = !DILocation(line: 120, column: 16, scope: !21280)
!21286 = !DILocalVariable(name: "n", arg: 2, scope: !21280, file: !21149, line: 120, type: !27)
!21287 = !DILocation(line: 120, column: 23, scope: !21280)
!21288 = !DILocation(line: 122, column: 27, scope: !21280)
!21289 = !DILocation(line: 122, column: 12, scope: !21280)
!21290 = !DILocation(line: 122, column: 32, scope: !21280)
!21291 = !DILocation(line: 122, column: 29, scope: !21280)
!21292 = !DILocation(line: 122, column: 53, scope: !21280)
!21293 = !DILocation(line: 122, column: 38, scope: !21280)
!21294 = !DILocation(line: 122, column: 63, scope: !21280)
!21295 = !DILocation(line: 122, column: 61, scope: !21280)
!21296 = !DILocation(line: 122, column: 55, scope: !21280)
!21297 = !DILocation(line: 122, column: 35, scope: !21280)
!21298 = !DILocation(line: 122, column: 68, scope: !21280)
!21299 = !DILocation(line: 122, column: 10, scope: !21280)
!21300 = !DILocation(line: 122, column: 3, scope: !21280)
!21301 = distinct !DISubprogram(name: "rotr8", scope: !21149, file: !21149, line: 131, type: !21281, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !152)
!21302 = !DILocalVariable(name: "x", arg: 1, scope: !21301, file: !21149, line: 131, type: !21283)
!21303 = !DILocation(line: 131, column: 16, scope: !21301)
!21304 = !DILocalVariable(name: "n", arg: 2, scope: !21301, file: !21149, line: 131, type: !27)
!21305 = !DILocation(line: 131, column: 23, scope: !21301)
!21306 = !DILocation(line: 133, column: 27, scope: !21301)
!21307 = !DILocation(line: 133, column: 12, scope: !21301)
!21308 = !DILocation(line: 133, column: 32, scope: !21301)
!21309 = !DILocation(line: 133, column: 29, scope: !21301)
!21310 = !DILocation(line: 133, column: 53, scope: !21301)
!21311 = !DILocation(line: 133, column: 38, scope: !21301)
!21312 = !DILocation(line: 133, column: 63, scope: !21301)
!21313 = !DILocation(line: 133, column: 61, scope: !21301)
!21314 = !DILocation(line: 133, column: 55, scope: !21301)
!21315 = !DILocation(line: 133, column: 35, scope: !21301)
!21316 = !DILocation(line: 133, column: 68, scope: !21301)
!21317 = !DILocation(line: 133, column: 10, scope: !21301)
!21318 = !DILocation(line: 133, column: 3, scope: !21301)
!21319 = distinct !DISubprogram(name: "c_strcasecmp", scope: !21320, file: !21320, line: 27, type: !7722, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1756, retainedNodes: !152)
!21320 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!21321 = !DILocalVariable(name: "s1", arg: 1, scope: !21319, file: !21320, line: 27, type: !146)
!21322 = !DILocation(line: 27, column: 27, scope: !21319)
!21323 = !DILocalVariable(name: "s2", arg: 2, scope: !21319, file: !21320, line: 27, type: !146)
!21324 = !DILocation(line: 27, column: 43, scope: !21319)
!21325 = !DILocalVariable(name: "p1", scope: !21319, file: !21320, line: 29, type: !1520)
!21326 = !DILocation(line: 29, column: 33, scope: !21319)
!21327 = !DILocation(line: 29, column: 62, scope: !21319)
!21328 = !DILocalVariable(name: "p2", scope: !21319, file: !21320, line: 30, type: !1520)
!21329 = !DILocation(line: 30, column: 33, scope: !21319)
!21330 = !DILocation(line: 30, column: 62, scope: !21319)
!21331 = !DILocalVariable(name: "c1", scope: !21319, file: !21320, line: 31, type: !725)
!21332 = !DILocation(line: 31, column: 17, scope: !21319)
!21333 = !DILocalVariable(name: "c2", scope: !21319, file: !21320, line: 31, type: !725)
!21334 = !DILocation(line: 31, column: 21, scope: !21319)
!21335 = !DILocation(line: 33, column: 7, scope: !21336)
!21336 = distinct !DILexicalBlock(scope: !21319, file: !21320, line: 33, column: 7)
!21337 = !DILocation(line: 33, column: 13, scope: !21336)
!21338 = !DILocation(line: 33, column: 10, scope: !21336)
!21339 = !DILocation(line: 33, column: 7, scope: !21319)
!21340 = !DILocation(line: 34, column: 5, scope: !21336)
!21341 = !DILocation(line: 36, column: 3, scope: !21319)
!21342 = !DILocation(line: 38, column: 24, scope: !21343)
!21343 = distinct !DILexicalBlock(scope: !21319, file: !21320, line: 37, column: 5)
!21344 = !DILocation(line: 38, column: 23, scope: !21343)
!21345 = !DILocation(line: 38, column: 12, scope: !21343)
!21346 = !DILocation(line: 38, column: 10, scope: !21343)
!21347 = !DILocation(line: 39, column: 24, scope: !21343)
!21348 = !DILocation(line: 39, column: 23, scope: !21343)
!21349 = !DILocation(line: 39, column: 12, scope: !21343)
!21350 = !DILocation(line: 39, column: 10, scope: !21343)
!21351 = !DILocation(line: 41, column: 11, scope: !21352)
!21352 = distinct !DILexicalBlock(scope: !21343, file: !21320, line: 41, column: 11)
!21353 = !DILocation(line: 41, column: 14, scope: !21352)
!21354 = !DILocation(line: 41, column: 11, scope: !21343)
!21355 = !DILocation(line: 42, column: 9, scope: !21352)
!21356 = !DILocation(line: 44, column: 7, scope: !21343)
!21357 = !DILocation(line: 45, column: 7, scope: !21343)
!21358 = !DILocation(line: 46, column: 5, scope: !21343)
!21359 = !DILocation(line: 47, column: 10, scope: !21319)
!21360 = !DILocation(line: 47, column: 16, scope: !21319)
!21361 = !DILocation(line: 47, column: 13, scope: !21319)
!21362 = distinct !{!21362, !21341, !21363}
!21363 = !DILocation(line: 47, column: 18, scope: !21319)
!21364 = !DILocation(line: 50, column: 12, scope: !21365)
!21365 = distinct !DILexicalBlock(scope: !21319, file: !21320, line: 49, column: 7)
!21366 = !DILocation(line: 50, column: 17, scope: !21365)
!21367 = !DILocation(line: 50, column: 15, scope: !21365)
!21368 = !DILocation(line: 50, column: 5, scope: !21365)
!21369 = !DILocation(line: 56, column: 1, scope: !21319)
!21370 = distinct !DISubprogram(name: "close_stream", scope: !21371, file: !21371, line: 56, type: !21372, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1758, retainedNodes: !152)
!21371 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!21372 = !DISubroutineType(types: !21373)
!21373 = !{!27, !21374}
!21374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21375, size: 64)
!21375 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1645, line: 48, baseType: !21376)
!21376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !21377)
!21377 = !{!21378, !21379, !21380, !21381, !21382, !21383, !21384, !21385, !21386, !21387, !21388, !21389, !21390, !21398, !21399, !21400, !21401, !21402, !21403, !21404, !21405, !21406, !21407, !21408, !21409, !21410, !21411, !21412, !21413}
!21378 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !21376, file: !286, line: 242, baseType: !27, size: 32)
!21379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !21376, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!21380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !21376, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!21381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !21376, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!21382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !21376, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!21383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !21376, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!21384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !21376, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!21385 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !21376, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!21386 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !21376, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!21387 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !21376, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!21388 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !21376, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!21389 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !21376, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!21390 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !21376, file: !286, line: 260, baseType: !21391, size: 64, offset: 768)
!21391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21392, size: 64)
!21392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !21393)
!21393 = !{!21394, !21395, !21397}
!21394 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21392, file: !286, line: 157, baseType: !21391, size: 64)
!21395 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21392, file: !286, line: 158, baseType: !21396, size: 64, offset: 64)
!21396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21376, size: 64)
!21397 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21392, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!21398 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !21376, file: !286, line: 262, baseType: !21396, size: 64, offset: 832)
!21399 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !21376, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!21400 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !21376, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!21401 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !21376, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!21402 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !21376, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!21403 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !21376, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!21404 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !21376, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!21405 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !21376, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!21406 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !21376, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!21407 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !21376, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!21408 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !21376, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!21409 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !21376, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!21410 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !21376, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!21411 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !21376, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!21412 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !21376, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!21413 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !21376, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!21414 = !DILocalVariable(name: "stream", arg: 1, scope: !21370, file: !21371, line: 56, type: !21374)
!21415 = !DILocation(line: 56, column: 21, scope: !21370)
!21416 = !DILocalVariable(name: "some_pending", scope: !21370, file: !21371, line: 58, type: !1761)
!21417 = !DILocation(line: 58, column: 14, scope: !21370)
!21418 = !DILocation(line: 58, column: 42, scope: !21370)
!21419 = !DILocation(line: 58, column: 30, scope: !21370)
!21420 = !DILocation(line: 58, column: 50, scope: !21370)
!21421 = !DILocalVariable(name: "prev_fail", scope: !21370, file: !21371, line: 59, type: !1761)
!21422 = !DILocation(line: 59, column: 14, scope: !21370)
!21423 = !DILocation(line: 59, column: 27, scope: !21370)
!21424 = !DILocation(line: 59, column: 43, scope: !21370)
!21425 = !DILocalVariable(name: "fclose_fail", scope: !21370, file: !21371, line: 60, type: !1761)
!21426 = !DILocation(line: 60, column: 14, scope: !21370)
!21427 = !DILocation(line: 60, column: 37, scope: !21370)
!21428 = !DILocation(line: 60, column: 29, scope: !21370)
!21429 = !DILocation(line: 60, column: 45, scope: !21370)
!21430 = !DILocation(line: 70, column: 7, scope: !21431)
!21431 = distinct !DILexicalBlock(scope: !21370, file: !21371, line: 70, column: 7)
!21432 = !DILocation(line: 70, column: 17, scope: !21431)
!21433 = !DILocation(line: 70, column: 21, scope: !21431)
!21434 = !DILocation(line: 70, column: 33, scope: !21431)
!21435 = !DILocation(line: 70, column: 37, scope: !21431)
!21436 = !DILocation(line: 70, column: 50, scope: !21431)
!21437 = !DILocation(line: 70, column: 53, scope: !21431)
!21438 = !DILocation(line: 70, column: 59, scope: !21431)
!21439 = !DILocation(line: 70, column: 7, scope: !21370)
!21440 = !DILocation(line: 72, column: 13, scope: !21441)
!21441 = distinct !DILexicalBlock(scope: !21442, file: !21371, line: 72, column: 11)
!21442 = distinct !DILexicalBlock(scope: !21431, file: !21371, line: 71, column: 5)
!21443 = !DILocation(line: 72, column: 11, scope: !21442)
!21444 = !DILocation(line: 73, column: 9, scope: !21441)
!21445 = !DILocation(line: 73, column: 15, scope: !21441)
!21446 = !DILocation(line: 74, column: 7, scope: !21442)
!21447 = !DILocation(line: 77, column: 3, scope: !21370)
!21448 = !DILocation(line: 78, column: 1, scope: !21370)
!21449 = distinct !DISubprogram(name: "dir_name", scope: !21450, file: !21450, line: 32, type: !8560, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1762, retainedNodes: !152)
!21450 = !DIFile(filename: "lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!21451 = !DILocalVariable(name: "file", arg: 1, scope: !21449, file: !21450, line: 32, type: !146)
!21452 = !DILocation(line: 32, column: 23, scope: !21449)
!21453 = !DILocalVariable(name: "result", scope: !21449, file: !21450, line: 34, type: !143)
!21454 = !DILocation(line: 34, column: 9, scope: !21449)
!21455 = !DILocation(line: 34, column: 29, scope: !21449)
!21456 = !DILocation(line: 34, column: 18, scope: !21449)
!21457 = !DILocation(line: 35, column: 8, scope: !21458)
!21458 = distinct !DILexicalBlock(scope: !21449, file: !21450, line: 35, column: 7)
!21459 = !DILocation(line: 35, column: 7, scope: !21449)
!21460 = !DILocation(line: 36, column: 5, scope: !21458)
!21461 = !DILocation(line: 37, column: 10, scope: !21449)
!21462 = !DILocation(line: 37, column: 3, scope: !21449)
!21463 = distinct !DISubprogram(name: "hash_pjw", scope: !21464, file: !21464, line: 31, type: !1218, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1765, retainedNodes: !152)
!21464 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!21465 = !DILocalVariable(name: "x", arg: 1, scope: !21463, file: !21464, line: 31, type: !175)
!21466 = !DILocation(line: 31, column: 23, scope: !21463)
!21467 = !DILocalVariable(name: "tablesize", arg: 2, scope: !21463, file: !21464, line: 31, type: !149)
!21468 = !DILocation(line: 31, column: 33, scope: !21463)
!21469 = !DILocalVariable(name: "s", scope: !21463, file: !21464, line: 33, type: !146)
!21470 = !DILocation(line: 33, column: 15, scope: !21463)
!21471 = !DILocalVariable(name: "h", scope: !21463, file: !21464, line: 34, type: !149)
!21472 = !DILocation(line: 34, column: 10, scope: !21463)
!21473 = !DILocation(line: 36, column: 12, scope: !21474)
!21474 = distinct !DILexicalBlock(scope: !21463, file: !21464, line: 36, column: 3)
!21475 = !DILocation(line: 36, column: 10, scope: !21474)
!21476 = !DILocation(line: 36, column: 8, scope: !21474)
!21477 = !DILocation(line: 36, column: 16, scope: !21478)
!21478 = distinct !DILexicalBlock(scope: !21474, file: !21464, line: 36, column: 3)
!21479 = !DILocation(line: 36, column: 15, scope: !21478)
!21480 = !DILocation(line: 36, column: 3, scope: !21474)
!21481 = !DILocation(line: 37, column: 10, scope: !21478)
!21482 = !DILocation(line: 37, column: 9, scope: !21478)
!21483 = !DILocation(line: 37, column: 16, scope: !21478)
!21484 = !DILocation(line: 37, column: 18, scope: !21478)
!21485 = !DILocation(line: 37, column: 27, scope: !21478)
!21486 = !DILocation(line: 37, column: 29, scope: !21478)
!21487 = !DILocation(line: 37, column: 24, scope: !21478)
!21488 = !DILocation(line: 37, column: 12, scope: !21478)
!21489 = !DILocation(line: 37, column: 7, scope: !21478)
!21490 = !DILocation(line: 37, column: 5, scope: !21478)
!21491 = !DILocation(line: 36, column: 20, scope: !21478)
!21492 = !DILocation(line: 36, column: 3, scope: !21478)
!21493 = distinct !{!21493, !21480, !21494}
!21494 = !DILocation(line: 37, column: 48, scope: !21474)
!21495 = !DILocation(line: 39, column: 10, scope: !21463)
!21496 = !DILocation(line: 39, column: 14, scope: !21463)
!21497 = !DILocation(line: 39, column: 12, scope: !21463)
!21498 = !DILocation(line: 39, column: 3, scope: !21463)
!21499 = distinct !DISubprogram(name: "locale_charset", scope: !21500, file: !21500, line: 826, type: !21501, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1768, retainedNodes: !152)
!21500 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!21501 = !DISubroutineType(types: !1080)
!21502 = !DILocalVariable(name: "codeset", scope: !21499, file: !21500, line: 828, type: !146)
!21503 = !DILocation(line: 828, column: 15, scope: !21499)
!21504 = !DILocation(line: 835, column: 13, scope: !21499)
!21505 = !DILocation(line: 835, column: 11, scope: !21499)
!21506 = !DILocation(line: 893, column: 7, scope: !21507)
!21507 = distinct !DILexicalBlock(scope: !21499, file: !21500, line: 893, column: 7)
!21508 = !DILocation(line: 893, column: 15, scope: !21507)
!21509 = !DILocation(line: 893, column: 7, scope: !21499)
!21510 = !DILocation(line: 895, column: 13, scope: !21507)
!21511 = !DILocation(line: 895, column: 5, scope: !21507)
!21512 = !DILocation(line: 1051, column: 13, scope: !21513)
!21513 = distinct !DILexicalBlock(scope: !21514, file: !21500, line: 1051, column: 13)
!21514 = distinct !DILexicalBlock(scope: !21515, file: !21500, line: 1041, column: 7)
!21515 = distinct !DILexicalBlock(scope: !21499, file: !21500, line: 1000, column: 3)
!21516 = !DILocation(line: 1051, column: 24, scope: !21513)
!21517 = !DILocation(line: 1051, column: 13, scope: !21514)
!21518 = !DILocation(line: 1052, column: 19, scope: !21513)
!21519 = !DILocation(line: 1052, column: 11, scope: !21513)
!21520 = !DILocation(line: 1139, column: 10, scope: !21499)
!21521 = !DILocation(line: 1139, column: 3, scope: !21499)
!21522 = distinct !DISubprogram(name: "rpl_fclose", scope: !21523, file: !21523, line: 58, type: !21524, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1771, retainedNodes: !152)
!21523 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!21524 = !DISubroutineType(types: !21525)
!21525 = !{!27, !21526}
!21526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21527, size: 64)
!21527 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1645, line: 48, baseType: !21528)
!21528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !286, line: 241, size: 1728, elements: !21529)
!21529 = !{!21530, !21531, !21532, !21533, !21534, !21535, !21536, !21537, !21538, !21539, !21540, !21541, !21542, !21550, !21551, !21552, !21553, !21554, !21555, !21556, !21557, !21558, !21559, !21560, !21561, !21562, !21563, !21564, !21565}
!21530 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !21528, file: !286, line: 242, baseType: !27, size: 32)
!21531 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !21528, file: !286, line: 247, baseType: !143, size: 64, offset: 64)
!21532 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !21528, file: !286, line: 248, baseType: !143, size: 64, offset: 128)
!21533 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !21528, file: !286, line: 249, baseType: !143, size: 64, offset: 192)
!21534 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !21528, file: !286, line: 250, baseType: !143, size: 64, offset: 256)
!21535 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !21528, file: !286, line: 251, baseType: !143, size: 64, offset: 320)
!21536 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !21528, file: !286, line: 252, baseType: !143, size: 64, offset: 384)
!21537 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !21528, file: !286, line: 253, baseType: !143, size: 64, offset: 448)
!21538 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !21528, file: !286, line: 254, baseType: !143, size: 64, offset: 512)
!21539 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !21528, file: !286, line: 256, baseType: !143, size: 64, offset: 576)
!21540 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !21528, file: !286, line: 257, baseType: !143, size: 64, offset: 640)
!21541 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !21528, file: !286, line: 258, baseType: !143, size: 64, offset: 704)
!21542 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !21528, file: !286, line: 260, baseType: !21543, size: 64, offset: 768)
!21543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21544, size: 64)
!21544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !286, line: 156, size: 192, elements: !21545)
!21545 = !{!21546, !21547, !21549}
!21546 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21544, file: !286, line: 157, baseType: !21543, size: 64)
!21547 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21544, file: !286, line: 158, baseType: !21548, size: 64, offset: 64)
!21548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21528, size: 64)
!21549 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21544, file: !286, line: 162, baseType: !27, size: 32, offset: 128)
!21550 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !21528, file: !286, line: 262, baseType: !21548, size: 64, offset: 832)
!21551 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !21528, file: !286, line: 264, baseType: !27, size: 32, offset: 896)
!21552 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !21528, file: !286, line: 268, baseType: !27, size: 32, offset: 928)
!21553 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !21528, file: !286, line: 270, baseType: !180, size: 64, offset: 960)
!21554 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !21528, file: !286, line: 274, baseType: !177, size: 16, offset: 1024)
!21555 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !21528, file: !286, line: 275, baseType: !313, size: 8, offset: 1040)
!21556 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !21528, file: !286, line: 276, baseType: !240, size: 8, offset: 1048)
!21557 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !21528, file: !286, line: 280, baseType: !316, size: 64, offset: 1088)
!21558 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !21528, file: !286, line: 289, baseType: !319, size: 64, offset: 1152)
!21559 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !21528, file: !286, line: 297, baseType: !167, size: 64, offset: 1216)
!21560 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !21528, file: !286, line: 298, baseType: !167, size: 64, offset: 1280)
!21561 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !21528, file: !286, line: 299, baseType: !167, size: 64, offset: 1344)
!21562 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !21528, file: !286, line: 300, baseType: !167, size: 64, offset: 1408)
!21563 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !21528, file: !286, line: 302, baseType: !149, size: 64, offset: 1472)
!21564 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !21528, file: !286, line: 303, baseType: !27, size: 32, offset: 1536)
!21565 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !21528, file: !286, line: 305, baseType: !327, size: 160, offset: 1568)
!21566 = !DILocalVariable(name: "fp", arg: 1, scope: !21522, file: !21523, line: 58, type: !21526)
!21567 = !DILocation(line: 58, column: 19, scope: !21522)
!21568 = !DILocalVariable(name: "saved_errno", scope: !21522, file: !21523, line: 60, type: !27)
!21569 = !DILocation(line: 60, column: 7, scope: !21522)
!21570 = !DILocalVariable(name: "fd", scope: !21522, file: !21523, line: 61, type: !27)
!21571 = !DILocation(line: 61, column: 7, scope: !21522)
!21572 = !DILocalVariable(name: "result", scope: !21522, file: !21523, line: 62, type: !27)
!21573 = !DILocation(line: 62, column: 7, scope: !21522)
!21574 = !DILocation(line: 65, column: 16, scope: !21522)
!21575 = !DILocation(line: 65, column: 8, scope: !21522)
!21576 = !DILocation(line: 65, column: 6, scope: !21522)
!21577 = !DILocation(line: 66, column: 7, scope: !21578)
!21578 = distinct !DILexicalBlock(scope: !21522, file: !21523, line: 66, column: 7)
!21579 = !DILocation(line: 66, column: 10, scope: !21578)
!21580 = !DILocation(line: 66, column: 7, scope: !21522)
!21581 = !DILocation(line: 67, column: 28, scope: !21578)
!21582 = !DILocation(line: 67, column: 12, scope: !21578)
!21583 = !DILocation(line: 67, column: 5, scope: !21578)
!21584 = !DILocation(line: 72, column: 9, scope: !21585)
!21585 = distinct !DILexicalBlock(scope: !21522, file: !21523, line: 72, column: 7)
!21586 = !DILocation(line: 72, column: 23, scope: !21585)
!21587 = !DILocation(line: 72, column: 41, scope: !21585)
!21588 = !DILocation(line: 72, column: 33, scope: !21585)
!21589 = !DILocation(line: 72, column: 26, scope: !21585)
!21590 = !DILocation(line: 72, column: 59, scope: !21585)
!21591 = !DILocation(line: 73, column: 7, scope: !21585)
!21592 = !DILocation(line: 73, column: 18, scope: !21585)
!21593 = !DILocation(line: 73, column: 10, scope: !21585)
!21594 = !DILocation(line: 72, column: 7, scope: !21522)
!21595 = !DILocation(line: 74, column: 19, scope: !21585)
!21596 = !DILocation(line: 74, column: 17, scope: !21585)
!21597 = !DILocation(line: 74, column: 5, scope: !21585)
!21598 = !DILocation(line: 100, column: 28, scope: !21522)
!21599 = !DILocation(line: 100, column: 12, scope: !21522)
!21600 = !DILocation(line: 100, column: 10, scope: !21522)
!21601 = !DILocation(line: 105, column: 7, scope: !21602)
!21602 = distinct !DILexicalBlock(scope: !21522, file: !21523, line: 105, column: 7)
!21603 = !DILocation(line: 105, column: 19, scope: !21602)
!21604 = !DILocation(line: 105, column: 7, scope: !21522)
!21605 = !DILocation(line: 107, column: 15, scope: !21606)
!21606 = distinct !DILexicalBlock(scope: !21602, file: !21523, line: 106, column: 5)
!21607 = !DILocation(line: 107, column: 7, scope: !21606)
!21608 = !DILocation(line: 107, column: 13, scope: !21606)
!21609 = !DILocation(line: 108, column: 14, scope: !21606)
!21610 = !DILocation(line: 109, column: 5, scope: !21606)
!21611 = !DILocation(line: 111, column: 10, scope: !21522)
!21612 = !DILocation(line: 111, column: 3, scope: !21522)
!21613 = !DILocation(line: 112, column: 1, scope: !21522)
!21614 = distinct !DISubprogram(name: "rpl_fflush", scope: !21615, file: !21615, line: 129, type: !21616, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1773, retainedNodes: !152)
!21615 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!21616 = !DISubroutineType(types: !21617)
!21617 = !{!27, !21618}
!21618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!21619 = !DILocalVariable(name: "stream", arg: 1, scope: !21614, file: !21615, line: 129, type: !21618)
!21620 = !DILocation(line: 129, column: 19, scope: !21614)
!21621 = !DILocation(line: 150, column: 7, scope: !21622)
!21622 = distinct !DILexicalBlock(scope: !21614, file: !21615, line: 150, column: 7)
!21623 = !DILocation(line: 150, column: 14, scope: !21622)
!21624 = !DILocation(line: 150, column: 22, scope: !21622)
!21625 = !DILocation(line: 150, column: 27, scope: !21622)
!21626 = !DILocation(line: 150, column: 7, scope: !21614)
!21627 = !DILocation(line: 151, column: 20, scope: !21622)
!21628 = !DILocation(line: 151, column: 12, scope: !21622)
!21629 = !DILocation(line: 151, column: 5, scope: !21622)
!21630 = !DILocation(line: 156, column: 44, scope: !21614)
!21631 = !DILocation(line: 156, column: 3, scope: !21614)
!21632 = !DILocation(line: 158, column: 18, scope: !21614)
!21633 = !DILocation(line: 158, column: 10, scope: !21614)
!21634 = !DILocation(line: 158, column: 3, scope: !21614)
!21635 = !DILocation(line: 232, column: 1, scope: !21614)
!21636 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !21615, file: !21615, line: 41, type: !21637, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1773, retainedNodes: !152)
!21637 = !DISubroutineType(types: !21638)
!21638 = !{null, !21618}
!21639 = !DILocalVariable(name: "fp", arg: 1, scope: !21636, file: !21615, line: 41, type: !21618)
!21640 = !DILocation(line: 41, column: 48, scope: !21636)
!21641 = !DILocation(line: 43, column: 7, scope: !21642)
!21642 = distinct !DILexicalBlock(scope: !21636, file: !21615, line: 43, column: 7)
!21643 = !DILocation(line: 43, column: 11, scope: !21642)
!21644 = !DILocation(line: 43, column: 18, scope: !21642)
!21645 = !DILocation(line: 43, column: 7, scope: !21636)
!21646 = !DILocation(line: 45, column: 13, scope: !21642)
!21647 = !DILocation(line: 45, column: 5, scope: !21642)
!21648 = !DILocation(line: 46, column: 1, scope: !21636)
!21649 = distinct !DISubprogram(name: "rpl_fseeko", scope: !21650, file: !21650, line: 28, type: !21651, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1815, retainedNodes: !152)
!21650 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!21651 = !DISubroutineType(types: !21652)
!21652 = !{!27, !21653, !1857, !27}
!21653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!21654 = !DILocalVariable(name: "fp", arg: 1, scope: !21649, file: !21650, line: 28, type: !21653)
!21655 = !DILocation(line: 28, column: 15, scope: !21649)
!21656 = !DILocalVariable(name: "offset", arg: 2, scope: !21649, file: !21650, line: 28, type: !1857)
!21657 = !DILocation(line: 28, column: 25, scope: !21649)
!21658 = !DILocalVariable(name: "whence", arg: 3, scope: !21649, file: !21650, line: 28, type: !27)
!21659 = !DILocation(line: 28, column: 37, scope: !21649)
!21660 = !DILocation(line: 52, column: 7, scope: !21661)
!21661 = distinct !DILexicalBlock(scope: !21649, file: !21650, line: 52, column: 7)
!21662 = !DILocation(line: 52, column: 11, scope: !21661)
!21663 = !DILocation(line: 52, column: 27, scope: !21661)
!21664 = !DILocation(line: 52, column: 31, scope: !21661)
!21665 = !DILocation(line: 52, column: 24, scope: !21661)
!21666 = !DILocation(line: 53, column: 7, scope: !21661)
!21667 = !DILocation(line: 53, column: 10, scope: !21661)
!21668 = !DILocation(line: 53, column: 14, scope: !21661)
!21669 = !DILocation(line: 53, column: 31, scope: !21661)
!21670 = !DILocation(line: 53, column: 35, scope: !21661)
!21671 = !DILocation(line: 53, column: 28, scope: !21661)
!21672 = !DILocation(line: 54, column: 7, scope: !21661)
!21673 = !DILocation(line: 54, column: 10, scope: !21661)
!21674 = !DILocation(line: 54, column: 14, scope: !21661)
!21675 = !DILocation(line: 54, column: 28, scope: !21661)
!21676 = !DILocation(line: 52, column: 7, scope: !21649)
!21677 = !DILocalVariable(name: "pos", scope: !21678, file: !21650, line: 117, type: !1857)
!21678 = distinct !DILexicalBlock(scope: !21661, file: !21650, line: 113, column: 5)
!21679 = !DILocation(line: 117, column: 13, scope: !21678)
!21680 = !DILocation(line: 117, column: 34, scope: !21678)
!21681 = !DILocation(line: 117, column: 26, scope: !21678)
!21682 = !DILocation(line: 117, column: 39, scope: !21678)
!21683 = !DILocation(line: 117, column: 47, scope: !21678)
!21684 = !DILocation(line: 117, column: 19, scope: !21678)
!21685 = !DILocation(line: 118, column: 11, scope: !21686)
!21686 = distinct !DILexicalBlock(scope: !21678, file: !21650, line: 118, column: 11)
!21687 = !DILocation(line: 118, column: 15, scope: !21686)
!21688 = !DILocation(line: 118, column: 11, scope: !21678)
!21689 = !DILocation(line: 124, column: 11, scope: !21690)
!21690 = distinct !DILexicalBlock(scope: !21686, file: !21650, line: 119, column: 9)
!21691 = !DILocation(line: 129, column: 7, scope: !21678)
!21692 = !DILocation(line: 129, column: 11, scope: !21678)
!21693 = !DILocation(line: 129, column: 18, scope: !21678)
!21694 = !DILocation(line: 130, column: 21, scope: !21678)
!21695 = !DILocation(line: 130, column: 7, scope: !21678)
!21696 = !DILocation(line: 130, column: 11, scope: !21678)
!21697 = !DILocation(line: 130, column: 19, scope: !21678)
!21698 = !DILocation(line: 161, column: 7, scope: !21678)
!21699 = !DILocation(line: 163, column: 18, scope: !21649)
!21700 = !DILocation(line: 163, column: 22, scope: !21649)
!21701 = !DILocation(line: 163, column: 30, scope: !21649)
!21702 = !DILocation(line: 163, column: 10, scope: !21649)
!21703 = !DILocation(line: 163, column: 3, scope: !21649)
!21704 = !DILocation(line: 164, column: 1, scope: !21649)
