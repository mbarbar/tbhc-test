; ModuleID = 'ls.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pending = type { i8*, i8*, i8, %struct.pending* }
%struct.dev_ino = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.tm_zone = type { %struct.tm_zone*, i8, [0 x i8] }
%struct.fileinfo = type { i8*, i8*, i8*, %struct.stat, i32, i32, i8*, i8, i8, i32, i8, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.bin_str = type { i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.ignore_pattern = type { i8*, %struct.ignore_pattern* }
%struct.color_ext_type = type { %struct.bin_str, %struct.bin_str, %struct.color_ext_type* }
%struct.column_info = type { i8, i64, i64* }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.userid = type { %union.anon.11, %struct.userid*, [0 x i8] }
%union.anon.11 = type { i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.sigaction = type { %union.anon.2, %struct.__sigset_t, i32, void ()* }
%union.anon.2 = type { void (i32)* }
%struct.__mbstate_t = type { i32, %union.anon.11 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.F_triple = type { i8*, i64, i64 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@exit_status = internal global i32 0, align 4, !dbg !0, !ctir !27
@print_dir_name = internal global i8 0, align 1, !dbg !843, !ctir !141
@pending_dirs = internal global %struct.pending* null, align 8, !dbg !811, !ctir !235
@current_time = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !813, !ctir !213
@print_with_color = internal global i8 0, align 1, !dbg !827, !ctir !141
@directories_first = internal global i8 0, align 1, !dbg !839, !ctir !141
@check_symlink_mode = internal global i8 0, align 1, !dbg !831, !ctir !141
@color_symlink_as_referent = internal global i8 0, align 1, !dbg !807, !ctir !141
@format = internal global i32 0, align 4, !dbg !817, !ctir !5
@dereference = internal global i32 0, align 4, !dbg !833, !ctir !13
@immediate_dirs = internal global i8 0, align 1, !dbg !837, !ctir !141
@indicator_style = internal global i32 0, align 4, !dbg !825, !ctir !20
@recursive = internal global i8 0, align 1, !dbg !835, !ctir !141
@active_dir_set = internal global %struct.hash_table* null, align 8, !dbg !799, !ctir !242
@dev_ino_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !861, !ctir !345
@.str.3 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@localtz = internal global %struct.tm_zone* null, align 8, !dbg !845, !ctir !246
@sort_type = internal global i32 0, align 4, !dbg !819, !ctir !26
@print_scontext = internal global i8 0, align 1, !dbg !815, !ctir !141
@print_block_size = internal global i8 0, align 1, !dbg !821, !ctir !141
@format_needs_stat = internal global i8 0, align 1, !dbg !847, !ctir !141
@format_needs_type = internal global i8 0, align 1, !dbg !849, !ctir !141
@dired = internal global i8 0, align 1, !dbg !823, !ctir !141
@dired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !857, !ctir !345
@subdired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !859, !ctir !345
@print_hyperlink = internal global i8 0, align 1, !dbg !829, !ctir !141
@hostname = internal global i8* null, align 8, !dbg !809, !ctir !146
@cwd_n_alloc = internal global i64 0, align 8, !dbg !803, !ctir !149
@cwd_file = internal global %struct.fileinfo* null, align 8, !dbg !801, !ctir !250
@cwd_n_used = internal global i64 0, align 8, !dbg !805, !ctir !149
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@dired_pos = internal global i64 0, align 8, !dbg !855, !ctir !149
@.str.5 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"src/ls.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@used_color = internal global i8 0, align 1, !dbg !865, !ctir !141
@color_indicator = internal global [24 x %struct.bin_str] [%struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0) }, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0) }, %struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }], align 16, !dbg !867, !ctir !259
@.str.7 = private unnamed_addr constant [3 x i8] c"\1B[\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !266
@stop_signal_count = internal global i32 0, align 4, !dbg !853, !ctir !315
@interrupt_signal = internal global i32 0, align 4, !dbg !851, !ctir !315
@.str.8 = private unnamed_addr constant [10 x i8] c"//DIRED//\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"//SUBDIRED//\00", align 1
@filename_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !841, !ctir !323
@.str.10 = private unnamed_addr constant [38 x i8] c"//DIRED-OPTIONS// --quoting-style=%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"hash_get_n_entries (active_dir_set) == 0\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c" %lu\00", align 1
@caught_signals = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !872, !ctir !398
@signal_setup.sig = internal constant [12 x i32] [i32 20, i32 14, i32 1, i32 2, i32 13, i32 3, i32 15, i32 29, i32 27, i32 26, i32 24, i32 25], align 16, !dbg !869
@.str.48 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"01;34\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"01;36\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"33\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"01;35\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"01;33\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"01;32\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"37;41\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"30;43\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"37;44\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"34;42\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"30;42\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"30;41\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"\1B[K\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"cannot open directory %s\00", align 1
@.str.204 = private unnamed_addr constant [40 x i8] c"cannot determine device and inode of %s\00", align 1
@.str.205 = private unnamed_addr constant [41 x i8] c"%s: not listing already-listed directory\00", align 1
@print_dir.first = internal global i8 1, align 1, !dbg !959
@.str.206 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.207 = private unnamed_addr constant [24 x i8] c"error canonicalizing %s\00", align 1
@dirname_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !938, !ctir !323
@.str.208 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.209 = private unnamed_addr constant [21 x i8] c"reading directory %s\00", align 1
@.str.210 = private unnamed_addr constant [21 x i8] c"closing directory %s\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@human_output_opts = internal global i32 0, align 4, !dbg !902, !ctir !27
@output_block_size = internal global i64 0, align 8, !dbg !906, !ctir !168
@ignore_mode = internal global i32 0, align 4, !dbg !888, !ctir !85
@hide_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !892, !ctir !499
@ignore_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !890, !ctir !499
@align_variable_outer_quotes = internal global i8 0, align 1, !dbg !936, !ctir !141
@cwd_some_quoted = internal global i8 0, align 1, !dbg !962, !ctir !141
@.str.213 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.212 = private unnamed_addr constant [20 x i8] c"\1B]8;;file://%s%s%s\07\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"\1B]8;;\07\00", align 1
@RFC3986 = internal global [256 x i8] zeroinitializer, align 16, !dbg !863, !ctir !338
@.str.215 = private unnamed_addr constant [7 x i8] c"%%%02x\00", align 1
@qmark_funny_chars = internal global i8 0, align 1, !dbg !878, !ctir !141
@.str.47 = private unnamed_addr constant [55 x i8] c"dev_ino_size <= obstack_object_size (&dev_ino_obstack)\00", align 1
@__PRETTY_FUNCTION__.dev_ino_pop = private unnamed_addr constant [33 x i8] c"struct dev_ino dev_ino_pop(void)\00", align 1
@sorted_file = internal global i8** null, align 8, !dbg !964, !ctir !650
@line_length = internal global i64 0, align 8, !dbg !894, !ctir !149
@filetype_letter = internal constant [11 x i8] c"?pcdb-lswd\00", align 1, !dbg !1013, !ctir !756
@any_has_acl = internal global i8 0, align 1, !dbg !968, !ctir !141
@time_type = internal global i32 0, align 4, !dbg !880, !ctir !79
@print_inode = internal global i8 0, align 1, !dbg !886, !ctir !141
@inode_number_width = internal global i32 0, align 4, !dbg !970, !ctir !27
@.str.224 = private unnamed_addr constant [5 x i8] c"%*s \00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@block_size_width = internal global i32 0, align 4, !dbg !972, !ctir !27
@nlink_width = internal global i32 0, align 4, !dbg !974, !ctir !27
@.str.227 = private unnamed_addr constant [8 x i8] c"%s %*s \00", align 1
@print_owner = internal global i8 1, align 1, !dbg !900, !ctir !141
@print_group = internal global i8 1, align 1, !dbg !910, !ctir !141
@print_author = internal global i8 0, align 1, !dbg !912, !ctir !141
@owner_width = internal global i32 0, align 4, !dbg !976, !ctir !27
@group_width = internal global i32 0, align 4, !dbg !978, !ctir !27
@author_width = internal global i32 0, align 4, !dbg !980, !ctir !27
@scontext_width = internal global i32 0, align 4, !dbg !982, !ctir !27
@file_size_width = internal global i32 0, align 4, !dbg !988, !ctir !27
@major_device_number_width = internal global i32 0, align 4, !dbg !984, !ctir !27
@minor_device_number_width = internal global i32 0, align 4, !dbg !986, !ctir !27
@.str.228 = private unnamed_addr constant [10 x i8] c"%*s, %*s \00", align 1
@file_human_output_opts = internal global i32 0, align 4, !dbg !904, !ctir !27
@file_output_block_size = internal global i64 1, align 8, !dbg !908, !ctir !168
@.str.229 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@get_color_indicator.filetype_indicator = internal global [10 x i32] [i32 13, i32 8, i32 11, i32 6, i32 10, i32 5, i32 7, i32 9, i32 5, i32 6], align 16, !dbg !1005
@color_ext_list = internal global %struct.color_ext_type* null, align 8, !dbg !955, !ctir !581
@long_time_expected_width.width = internal global i32 -1, align 4, !dbg !1015
@use_abformat = internal global i8 0, align 1, !dbg !948, !ctir !141
@abformat = internal global [2 x [12 x [128 x i8]]] zeroinitializer, align 16, !dbg !946, !ctir !565
@long_time_format = internal global [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.167, i32 0, i32 0)], align 16, !dbg !940, !ctir !549
@.str.166 = private unnamed_addr constant [10 x i8] c"%b %e  %Y\00", align 1
@.str.167 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"%*lu \00", align 1
@numeric_ids = internal global i8 0, align 1, !dbg !884, !ctir !141
@.str.226 = private unnamed_addr constant [40 x i8] c"INT_BUFSIZE_BOUND (uintmax_t) <= buflen\00", align 1
@__PRETTY_FUNCTION__.format_inode = private unnamed_addr constant [60 x i8] c"char *format_inode(char *, size_t, const struct fileinfo *)\00", align 1
@column_info = internal global %struct.column_info* null, align 8, !dbg !1011, !ctir !745
@tabsize = internal global i64 0, align 8, !dbg !896, !ctir !149
@max_idx = internal global i64 0, align 8, !dbg !934, !ctir !149
@init_column_info.column_info_alloc = internal global i64 0, align 8, !dbg !1008
@UNKNOWN_SECURITY_CONTEXT = internal global [2 x i8] c"?\00", align 1, !dbg !966, !ctir !653
@sorted_file_alloc = internal global i64 0, align 8, !dbg !999, !ctir !149
@failed_strcoll = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16, !dbg !1001, !ctir !687
@.str.222 = private unnamed_addr constant [26 x i8] c"sort_type != sort_version\00", align 1
@__PRETTY_FUNCTION__.sort_files = private unnamed_addr constant [22 x i8] c"void sort_files(void)\00", align 1
@sort_functions = internal constant [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]] [[2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_name, i32 (i8*, i8*)* @xstrcoll_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_name, i32 (i8*, i8*)* @rev_xstrcoll_df_name]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_name, i32 (i8*, i8*)* @strcmp_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_name, i32 (i8*, i8*)* @rev_strcmp_df_name]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_extension, i32 (i8*, i8*)* @xstrcoll_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_extension, i32 (i8*, i8*)* @rev_xstrcoll_df_extension]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_extension, i32 (i8*, i8*)* @strcmp_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_extension, i32 (i8*, i8*)* @rev_strcmp_df_extension]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_size, i32 (i8*, i8*)* @xstrcoll_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_size, i32 (i8*, i8*)* @rev_xstrcoll_df_size]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_size, i32 (i8*, i8*)* @strcmp_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_size, i32 (i8*, i8*)* @rev_strcmp_df_size]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_version, i32 (i8*, i8*)* @xstrcoll_df_version], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_version, i32 (i8*, i8*)* @rev_xstrcoll_df_version]], [2 x [2 x i32 (i8*, i8*)*]] zeroinitializer], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_mtime, i32 (i8*, i8*)* @xstrcoll_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_mtime, i32 (i8*, i8*)* @rev_xstrcoll_df_mtime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_mtime, i32 (i8*, i8*)* @strcmp_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_mtime, i32 (i8*, i8*)* @rev_strcmp_df_mtime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_ctime, i32 (i8*, i8*)* @xstrcoll_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_ctime, i32 (i8*, i8*)* @rev_xstrcoll_df_ctime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_ctime, i32 (i8*, i8*)* @strcmp_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_ctime, i32 (i8*, i8*)* @rev_strcmp_df_ctime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_atime, i32 (i8*, i8*)* @xstrcoll_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_atime, i32 (i8*, i8*)* @rev_xstrcoll_df_atime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_atime, i32 (i8*, i8*)* @strcmp_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_atime, i32 (i8*, i8*)* @rev_strcmp_df_atime]]]], align 16, !dbg !1003, !ctir !698
@sort_reverse = internal global i8 0, align 1, !dbg !882, !ctir !141
@.str.223 = private unnamed_addr constant [36 x i8] c"cannot compare file names %s and %s\00", align 1
@.str.216 = private unnamed_addr constant [51 x i8] c"! command_line_arg || inode == NOT_AN_INODE_NUMBER\00", align 1
@__PRETTY_FUNCTION__.gobble_file = private unnamed_addr constant [79 x i8] c"uintmax_t gobble_file(const char *, enum filetype, ino_t, _Bool, const char *)\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"unlabeled\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.221 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.220 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@file_has_acl_cache.unsupported_device = internal global i64 0, align 8, !dbg !996
@getfilecon_cache.unsupported_device = internal global i64 0, align 8, !dbg !993
@has_capability_cache.unsupported_device = internal global i64 0, align 8, !dbg !990
@.str.46 = private unnamed_addr constant [3 x i8] c"00\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"LS_COLORS\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"COLORTERM\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"??\00", align 1
@color_buf = internal global i8* null, align 8, !dbg !953, !ctir !143
@indicator_name = internal constant [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8* null], align 16, !dbg !957, !ctir !587
@.str.175 = private unnamed_addr constant [24 x i8] c"unrecognized prefix: %s\00", align 1
@.str.176 = private unnamed_addr constant [52 x i8] c"unparsable value for LS_COLORS environment variable\00", align 1
@.str.177 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"lc\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@.str.182 = private unnamed_addr constant [3 x i8] c"ec\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"rs\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.187 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.189 = private unnamed_addr constant [3 x i8] c"bd\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.193 = private unnamed_addr constant [3 x i8] c"ex\00", align 1
@.str.194 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.195 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@.str.196 = private unnamed_addr constant [3 x i8] c"sg\00", align 1
@.str.197 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"ow\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"tw\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"ca\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"mh\00", align 1
@.str.202 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@G_line = internal constant [4304 x i8] c"# Configuration file for dircolors, a utility to help you set the\00# LS_COLORS environment variable used by GNU ls with the --color option.\00# Copyright (C) 1996-2019 Free Software Foundation, Inc.\00# Copying and distribution of this file, with or without modification,\00# are permitted provided the copyright notice and this notice are preserved.\00# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the\00# slackware version of dircolors) are recognized but ignored.\00# Below are TERM entries, which can be a glob patterns, to match\00# against the TERM environment variable to determine if it is colorizable.\00TERM Eterm\00TERM ansi\00TERM *color*\00TERM con[0-9]*x[0-9]*\00TERM cons25\00TERM console\00TERM cygwin\00TERM dtterm\00TERM gnome\00TERM hurd\00TERM jfbterm\00TERM konsole\00TERM kterm\00TERM linux\00TERM linux-c\00TERM mlterm\00TERM putty\00TERM rxvt*\00TERM screen*\00TERM st\00TERM terminator\00TERM tmux*\00TERM vt100\00TERM xterm*\00# Below are the color init strings for the basic file types.\00# One can use codes for 256 or more colors supported by modern terminals.\00# The default color codes use the capabilities of an 8 color terminal\00# with some additional attributes as per the following codes:\00# Attribute codes:\00# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed\00# Text color codes:\00# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\00# Background color codes:\00# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\00#NORMAL 00 # no color code at all\00#FILE 00 # regular file: use no color at all\00RESET 0 # reset to \22normal\22 color\00DIR 01;34 # directory\00LINK 01;36 # symbolic link. (If you set this to 'target' instead of a\00 # numerical value, the color is as for the file pointed to.)\00MULTIHARDLINK 00 # regular file with more than one link\00FIFO 40;33 # pipe\00SOCK 01;35 # socket\00DOOR 01;35 # door\00BLK 40;33;01 # block device driver\00CHR 40;33;01 # character device driver\00ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'able file ...\00MISSING 00 # ... and the files they point to\00SETUID 37;41 # file that is setuid (u+s)\00SETGID 30;43 # file that is setgid (g+s)\00CAPABILITY 30;41 # file with capability\00STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)\00OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky\00STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable\00# This is for files with execute permission:\00EXEC 01;32\00# List any file extensions like '.gz' or '.tar' that you would like ls\00# to colorize below. Put the extension, a space, and the color init string.\00# (and any comments you want to add after a '#')\00# If you use DOS-style suffixes, you may want to uncomment the following:\00#.cmd 01;32 # executables (bright green)\00#.exe 01;32\00#.com 01;32\00#.btm 01;32\00#.bat 01;32\00# Or if you want to colorize scripts even if they do not have the\00# executable bit actually set.\00#.sh 01;32\00#.csh 01;32\00 # archives or compressed (bright red)\00.tar 01;31\00.tgz 01;31\00.arc 01;31\00.arj 01;31\00.taz 01;31\00.lha 01;31\00.lz4 01;31\00.lzh 01;31\00.lzma 01;31\00.tlz 01;31\00.txz 01;31\00.tzo 01;31\00.t7z 01;31\00.zip 01;31\00.z 01;31\00.dz 01;31\00.gz 01;31\00.lrz 01;31\00.lz 01;31\00.lzo 01;31\00.xz 01;31\00.zst 01;31\00.tzst 01;31\00.bz2 01;31\00.bz 01;31\00.tbz 01;31\00.tbz2 01;31\00.tz 01;31\00.deb 01;31\00.rpm 01;31\00.jar 01;31\00.war 01;31\00.ear 01;31\00.sar 01;31\00.rar 01;31\00.alz 01;31\00.ace 01;31\00.zoo 01;31\00.cpio 01;31\00.7z 01;31\00.rz 01;31\00.cab 01;31\00.wim 01;31\00.swm 01;31\00.dwm 01;31\00.esd 01;31\00# image formats\00.jpg 01;35\00.jpeg 01;35\00.mjpg 01;35\00.mjpeg 01;35\00.gif 01;35\00.bmp 01;35\00.pbm 01;35\00.pgm 01;35\00.ppm 01;35\00.tga 01;35\00.xbm 01;35\00.xpm 01;35\00.tif 01;35\00.tiff 01;35\00.png 01;35\00.svg 01;35\00.svgz 01;35\00.mng 01;35\00.pcx 01;35\00.mov 01;35\00.mpg 01;35\00.mpeg 01;35\00.m2v 01;35\00.mkv 01;35\00.webm 01;35\00.webp 01;35\00.ogm 01;35\00.mp4 01;35\00.m4v 01;35\00.mp4v 01;35\00.vob 01;35\00.qt 01;35\00.nuv 01;35\00.wmv 01;35\00.asf 01;35\00.rm 01;35\00.rmvb 01;35\00.flc 01;35\00.avi 01;35\00.fli 01;35\00.flv 01;35\00.gl 01;35\00.dl 01;35\00.xcf 01;35\00.xwd 01;35\00.yuv 01;35\00.cgm 01;35\00.emf 01;35\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.ogv 01;35\00.ogx 01;35\00# audio formats\00.aac 00;36\00.au 00;36\00.flac 00;36\00.m4a 00;36\00.mid 00;36\00.midi 00;36\00.mka 00;36\00.mp3 00;36\00.mpc 00;36\00.ogg 00;36\00.ra 00;36\00.wav 00;36\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.oga 00;36\00.opus 00;36\00.spx 00;36\00.xspf 00;36\00", align 16, !dbg !950, !ctir !592
@.str.179 = private unnamed_addr constant [6 x i8] c"TERM \00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"COLUMNS\00", align 1
@.str.64 = private unnamed_addr constant [59 x i8] c"ignoring invalid width in environment variable COLUMNS: %s\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"TABSIZE\00", align 1
@.str.66 = private unnamed_addr constant [62 x i8] c"ignoring invalid tab size in environment variable TABSIZE: %s\00", align 1
@.str.67 = private unnamed_addr constant [44 x i8] c"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\00", align 1
@long_options = internal constant [44 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.102, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i32 0, i32* null, i32 68 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i32 0, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.105, i32 0, i32 0), i32 0, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i32 0, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i32 1, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 0, i32* null, i32 65 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i32 0, i32* null, i32 66 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i32 0, i32* null, i32 70 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i32 0, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.119, i32 0, i32 0), i32 0, i32* null, i32 141 }, %struct.option { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.120, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i32 1, i32* null, i32 136 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0), i32 1, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), i32 1, i32* null, i32 138 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i32 0, i32* null, i32 81 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i32 1, i32* null, i32 139 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i32 1, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), i32 0, i32* null, i32 140 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i32 1, i32* null, i32 142 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i32 1, i32* null, i32 143 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i32 1, i32* null, i32 144 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i32 2, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i32 2, i32* null, i32 137 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !898, !ctir !504
@optarg = external dso_local global i8*, align 8, !ctir !143
@.str.69 = private unnamed_addr constant [19 x i8] c"invalid line width\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"*~\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c".*~\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"invalid tab size\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"--sort\00", align 1
@sort_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i8* null], align 16, !dbg !916, !ctir !520
@sort_types = internal constant [5 x i32] [i32 -1, i32 4, i32 2, i32 1, i32 3], align 16, !dbg !914, !ctir !516
@.str.74 = private unnamed_addr constant [7 x i8] c"--time\00", align 1
@time_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i8* null], align 16, !dbg !920, !ctir !520
@time_types = internal constant [5 x i32] [i32 2, i32 2, i32 2, i32 1, i32 1], align 16, !dbg !918, !ctir !525
@.str.75 = private unnamed_addr constant [9 x i8] c"--format\00", align 1
@format_args = internal constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), i8* null], align 16, !dbg !924, !ctir !531
@format_types = internal constant [7 x i32] [i32 0, i32 0, i32 4, i32 3, i32 3, i32 2, i32 1], align 16, !dbg !922, !ctir !527
@.str.76 = private unnamed_addr constant [9 x i8] c"full-iso\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"--color\00", align 1
@when_args = internal constant [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i8* null], align 16, !dbg !928, !ctir !538
@when_types = internal constant [9 x i32] [i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2], align 16, !dbg !926, !ctir !534
@.str.78 = private unnamed_addr constant [12 x i8] c"--hyperlink\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"--indicator-style\00", align 1
@indicator_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i8* null], align 16, !dbg !932, !ctir !545
@indicator_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !930, !ctir !541
@.str.80 = private unnamed_addr constant [16 x i8] c"--quoting-style\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"vdir\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"Richard M. Stallman\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"LS_BLOCK_SIZE\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"*=>@|\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"TIME_STYLE\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@decode_switches.posix_prefix = internal constant [7 x i8] c"posix-\00", align 1, !dbg !874
@optind = external dso_local global i32, align 4, !ctir !27
@.str.89 = private unnamed_addr constant [29 x i8] c"invalid time style format %s\00", align 1
@time_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* null], align 16, !dbg !942, !ctir !545
@time_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !944, !ctir !553
@.str.90 = private unnamed_addr constant [11 x i8] c"time style\00", align 1
@.str.91 = private unnamed_addr constant [22 x i8] c"Valid arguments are:\0A\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !266
@.str.92 = private unnamed_addr constant [16 x i8] c"  - [posix-]%s\0A\00", align 1
@.str.93 = private unnamed_addr constant [54 x i8] c"  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\0A\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"%Y-%m-%d %H:%M:%S.%N %z\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"%Y-%m-%d \00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"%m-%d %H:%M\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"%.*s%s%s\00", align 1
@.str.168 = private unnamed_addr constant [9 x i8] c"long-iso\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 1
@.str.14 = private unnamed_addr constant [144 x i8] c"List information about the FILEs (the current directory by default).\0ASort entries alphabetically if none of -cftuvSUX nor --sort is specified.\0A\00", align 1
@.str.15 = private unnamed_addr constant [271 x i8] c"  -a, --all                  do not ignore entries starting with .\0A  -A, --almost-all           do not list implied . and ..\0A      --author               with -l, print the author of each file\0A  -b, --escape               print C-style escapes for nongraphic characters\0A\00", align 1
@.str.16 = private unnamed_addr constant [156 x i8] c"      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\0A                               e.g., '--block-size=M'; see SIZE format below\0A\00", align 1
@.str.17 = private unnamed_addr constant [362 x i8] c"  -B, --ignore-backups       do not list implied entries ending with ~\0A  -c                         with -lt: sort by, and show, ctime (time of last\0A                               modification of file status information);\0A                               with -l: show ctime and sort by name;\0A                               otherwise: sort by ctime, newest first\0A\00", align 1
@.str.18 = private unnamed_addr constant [367 x i8] c"  -C                         list entries by columns\0A      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\0A                               if omitted), 'auto', or 'never'; more info below\0A  -d, --directory            list directories themselves, not their contents\0A  -D, --dired                generate output designed for Emacs' dired mode\0A\00", align 1
@.str.19 = private unnamed_addr constant [419 x i8] c"  -f                         do not sort, enable -aU, disable -ls --color\0A  -F, --classify             append indicator (one of */=>@|) to entries\0A      --file-type            likewise, except do not append '*'\0A      --format=WORD          across -x, commas -m, horizontal -x, long -l,\0A                               single-column -1, verbose -l, vertical -C\0A      --full-time            like -l --time-style=full-iso\0A\00", align 1
@.str.20 = private unnamed_addr constant [61 x i8] c"  -g                         like -l, but do not list owner\0A\00", align 1
@.str.21 = private unnamed_addr constant [245 x i8] c"      --group-directories-first\0A                             group directories before files;\0A                               can be augmented with a --sort option, but any\0A                               use of --sort=none (-U) disables grouping\0A\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"  -G, --no-group             in a long listing, don't print group names\0A\00", align 1
@.str.23 = private unnamed_addr constant [150 x i8] c"  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\0A      --si                   likewise, but use powers of 1000 not 1024\0A\00", align 1
@.str.24 = private unnamed_addr constant [422 x i8] c"  -H, --dereference-command-line\0A                             follow symbolic links listed on the command line\0A      --dereference-command-line-symlink-to-dir\0A                             follow each command line symbolic link\0A                               that points to a directory\0A      --hide=PATTERN         do not list implied entries matching shell PATTERN\0A                               (overridden by -a or -A)\0A\00", align 1
@.str.25 = private unnamed_addr constant [145 x i8] c"      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\0A                               (default if omitted), 'auto', or 'never'\0A\00", align 1
@.str.26 = private unnamed_addr constant [354 x i8] c"      --indicator-style=WORD  append indicator with style WORD to entry names:\0A                               none (default), slash (-p),\0A                               file-type (--file-type), classify (-F)\0A  -i, --inode                print the index number of each file\0A  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\0A\00", align 1
@.str.27 = private unnamed_addr constant [148 x i8] c"  -k, --kibibytes            default to 1024-byte blocks for disk usage;\0A                               used only with -s and per directory totals\0A\00", align 1
@.str.28 = private unnamed_addr constant [359 x i8] c"  -l                         use a long listing format\0A  -L, --dereference          when showing file information for a symbolic\0A                               link, show information for the file the link\0A                               references rather than for the link itself\0A  -m                         fill width with a comma separated list of entries\0A\00", align 1
@.str.29 = private unnamed_addr constant [303 x i8] c"  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\0A  -N, --literal              print entry names without quoting\0A  -o                         like -l, but do not list group information\0A  -p, --indicator-style=slash\0A                             append / indicator to directories\0A\00", align 1
@.str.30 = private unnamed_addr constant [585 x i8] c"  -q, --hide-control-chars   print ? instead of nongraphic characters\0A      --show-control-chars   show nongraphic characters as-is (the default,\0A                               unless program is 'ls' and output is a terminal)\0A  -Q, --quote-name           enclose entry names in double quotes\0A      --quoting-style=WORD   use quoting style WORD for entry names:\0A                               literal, locale, shell, shell-always,\0A                               shell-escape, shell-escape-always, c, escape\0A                               (overrides QUOTING_STYLE environment variable)\0A\00", align 1
@.str.31 = private unnamed_addr constant [197 x i8] c"  -r, --reverse              reverse order while sorting\0A  -R, --recursive            list subdirectories recursively\0A  -s, --size                 print the allocated size of each file, in blocks\0A\00", align 1
@.str.32 = private unnamed_addr constant [519 x i8] c"  -S                         sort by file size, largest first\0A      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\0A                               time (-t), version (-v), extension (-X)\0A      --time=WORD            with -l, show time as WORD instead of default\0A                               modification time: atime or access or use (-u);\0A                               ctime or status (-c); also use specified time\0A                               as sort key if --sort=time (newest first)\0A\00", align 1
@.str.33 = private unnamed_addr constant [79 x i8] c"      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\0A\00", align 1
@.str.34 = private unnamed_addr constant [142 x i8] c"  -t                         sort by modification time, newest first\0A  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\0A\00", align 1
@.str.35 = private unnamed_addr constant [372 x i8] c"  -u                         with -lt: sort by, and show, access time;\0A                               with -l: show access time and sort by name;\0A                               otherwise: sort by access time, newest first\0A  -U                         do not sort; list entries in directory order\0A  -v                         natural sort of (version) numbers within text\0A\00", align 1
@.str.36 = private unnamed_addr constant [363 x i8] c"  -w, --width=COLS           set output width to COLS.  0 means no limit\0A  -x                         list entries by lines instead of by columns\0A  -X                         sort alphabetically by entry extension\0A  -Z, --context              print any security context of each file\0A  -1                         list one file per line.  Avoid '\5Cn' with -q or -b\0A\00", align 1
@.str.37 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.38 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.39 = private unnamed_addr constant [376 x i8] c"\0AThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\0AFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\0Athen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\0ATIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\0AAlso the TIME_STYLE environment variable sets the default style to use.\0A\00", align 1
@.str.40 = private unnamed_addr constant [286 x i8] c"\0AUsing color to distinguish file types is disabled both by default and\0Awith --color=never.  With --color=auto, ls emits color codes only when\0Astandard output is connected to a terminal.  The LS_COLORS environment\0Avariable can change the settings.  Use the dircolors command to set it.\0A\00", align 1
@.str.41 = private unnamed_addr constant [152 x i8] c"\0AExit status:\0A 0  if OK,\0A 1  if minor problems (e.g., cannot access subdirectory),\0A 2  if serious trouble (e.g., cannot access command-line argument).\0A\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.235, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.241 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.242 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.243 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.244 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.245 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.246 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.233 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.235 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.237 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.238 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.240 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.232 = private unnamed_addr constant [212 x i8] c"\0AThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\0AUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\0ABinary prefixes can be used, too: KiB=K, MiB=M, and so on.\0A\00", align 1
@.str.231 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.165 = private unnamed_addr constant [6 x i8] c"slash\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"file-type\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"classify\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"if-tty\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"commas\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"horizontal\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"across\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"single-column\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"use\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.144 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.142 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"dired\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"full-time\00", align 1
@.str.105 = private unnamed_addr constant [24 x i8] c"group-directories-first\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"inode\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"kibibytes\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"numeric-uid-gid\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"no-group\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"hide-control-chars\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"almost-all\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"ignore-backups\00", align 1
@.str.119 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.120 = private unnamed_addr constant [25 x i8] c"dereference-command-line\00", align 1
@.str.121 = private unnamed_addr constant [40 x i8] c"dereference-command-line-symlink-to-dir\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"hide\00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"indicator-style\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"quote-name\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"quoting-style\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"show-control-chars\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"tabsize\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"time-style\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"hyperlink\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"block-size\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"author\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"QUOTING_STYLE\00", align 1
@.str.99 = private unnamed_addr constant [65 x i8] c"ignoring invalid value of environment variable QUOTING_STYLE: %s\00", align 1
@ls_mode = dso_local global i32 1, align 4, !dbg !1018, !ctir !27
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i32 0, i32 0), align 8, !dbg !1023, !ctir !146
@.str.248 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1029, !ctir !523
@.str.257 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.258 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.259 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.260 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.261 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.270 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@file_name = internal global i8* null, align 8, !dbg !1084, !ctir !146
@ignore_EPIPE = internal global i8 0, align 1, !dbg !1128, !ctir !141
@.str.273 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.274 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.275 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !1131, !ctir !325
@.str.296 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.297 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.302 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.306 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.307 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.308 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.309 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !1138, !ctir !1165
@.str.328 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.329 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.330 = private unnamed_addr constant [6 x i8] c"%.0Lf\00", align 1
@.str.3.331 = private unnamed_addr constant [6 x i8] c"%.1Lf\00", align 1
@power_letter = internal constant [9 x i8] c"\00KMGTPEZY", align 1, !dbg !1277, !ctir !1315
@.str.9.334 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.4.335 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.5.336 = private unnamed_addr constant [10 x i8] c"BLOCKSIZE\00", align 1
@block_size_args = internal constant [3 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.338, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.339, i32 0, i32 0), i8* null], align 16, !dbg !1334, !ctir !1329
@block_size_opts = internal constant [2 x i32] [i32 176, i32 144], align 4, !dbg !1337, !ctir !1330
@.str.6.337 = private unnamed_addr constant [18 x i8] c"eEgGkKmMpPtTyYzZ0\00", align 1
@.str.7.338 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.8.339 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@user_alist = internal global %struct.userid* null, align 8, !dbg !1339, !ctir !1346
@.str.342 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@nouser_alist = internal global %struct.userid* null, align 8, !dbg !1385, !ctir !1346
@group_alist = internal global %struct.userid* null, align 8, !dbg !1387, !ctir !1346
@nogroup_alist = internal global %struct.userid* null, align 8, !dbg !1389, !ctir !1346
@.str.359 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.360 = private unnamed_addr constant [9 x i8] c"%m/%d/%y\00", align 1
@.str.2.361 = private unnamed_addr constant [9 x i8] c"%Y-%m-%d\00", align 1
@.str.3.362 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.4.363 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !1391, !ctir !146
@.str.368 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.369 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.370 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !143
@program_invocation_name = external dso_local global i8*, align 8, !ctir !143
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.374, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.375, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.376, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.377, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.379, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.380, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.381, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.382, i32 0, i32 0), i8* null], align 16, !dbg !1436, !ctir !1442
@.str.373 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.374 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.375 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.376 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.377 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.378 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.379 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.380 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.381 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.382 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1533, !ctir !1443
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1535, !ctir !1447
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1537, !ctir !1447
@.str.10.395 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.396 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.397 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.398 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.399 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.400 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.401 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.402 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.403 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.bin_str* @slotvec0, align 8, !dbg !1541, !ctir !1475
@nslots = internal global i32 1, align 4, !dbg !1543, !ctir !27
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1539, !ctir !338
@slotvec0 = internal global %struct.bin_str { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1545, !ctir !1476
@.str.418 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.433 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.434 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.435 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.436 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.437 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.438 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.439 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.440 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.441 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.442 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.443 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.444 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.445 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.446 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.447 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.448 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.451 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.452 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.453 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.454 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.455 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.456 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.457 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1547, !ctir !1552
@.str.1.476 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.477 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.480 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.487 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.488 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.491 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1.492 = private unnamed_addr constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str.2.493 = private unnamed_addr constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 1
@.str.3.494 = private unnamed_addr constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str.497 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.498 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoumax = private unnamed_addr constant [79 x i8] c"strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)\00", align 1
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !1557, !ctir !419
@.str.1.505 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.506 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.515 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.1.516 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.531 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.532 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !2467 !ctir !233 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %argc.addr = alloca i32, align 4, !ctir !27
  %argv.addr = alloca i8**, align 8, !ctir !142
  %i = alloca i32, align 4, !ctir !27
  %thispend = alloca %struct.pending*, align 8, !ctir !235
  %n_files = alloca i32, align 4, !ctir !27
  %di = alloca %struct.dev_ino, align 8, !ctir !252
  %found = alloca %struct.dev_ino*, align 8, !ctir !251
  %j = alloca i32, align 4, !ctir !27
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2472, metadata !DIExpression()), !dbg !2473
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2476, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2478, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.declare(metadata %struct.pending** %thispend, metadata !2480, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2482, metadata !DIExpression()), !dbg !2483
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2484, !tbaa !2474
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2484, !ctir !142
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2484, !tbaa !2474
  call void @set_program_name(i8* %1), !dbg !2485
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13, !dbg !2486
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !2487
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !2488
  call void @initialize_exit_failure(i32 2), !dbg !2489
  %call3 = call i32 @atexit(void ()* @close_stdout) #13, !dbg !2490
  store i32 0, i32* @exit_status, align 4, !dbg !2491, !tbaa !2468
  store i8 1, i8* @print_dir_name, align 1, !dbg !2492, !tbaa !2493
  store %struct.pending* null, %struct.pending** @pending_dirs, align 8, !dbg !2495, !tbaa !2474
  store i64 -9223372036854775808, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !2496, !tbaa !2497, !ctir !164
  store i64 -1, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !2500, !tbaa !2501, !ctir !217
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2502, !tbaa !2468
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2503, !tbaa !2474
  %call4 = call i32 @decode_switches(i32 %2, i8** %3), !dbg !2504
  store i32 %call4, i32* %i, align 4, !dbg !2505, !tbaa !2468
  %4 = load i8, i8* @print_with_color, align 1, !dbg !2506, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !2506
  br i1 %tobool, label %if.then, label %if.end, !dbg !2508

if.then:                                          ; preds = %entry
  call void @parse_ls_color(), !dbg !2509
  br label %if.end, !dbg !2509

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* @directories_first, align 1, !dbg !2510, !tbaa !2493
  %tobool5 = trunc i8 %5 to i1, !dbg !2510
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !2512

if.then6:                                         ; preds = %if.end
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !2513, !tbaa !2493
  br label %if.end18, !dbg !2514

if.else:                                          ; preds = %if.end
  %6 = load i8, i8* @print_with_color, align 1, !dbg !2515, !tbaa !2493
  %tobool7 = trunc i8 %6 to i1, !dbg !2515
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !2517

if.then8:                                         ; preds = %if.else
  %call9 = call zeroext i1 @is_colored(i32 13), !dbg !2518
  br i1 %call9, label %if.then15, label %lor.lhs.false, !dbg !2521

lor.lhs.false:                                    ; preds = %if.then8
  %call10 = call zeroext i1 @is_colored(i32 14), !dbg !2522
  br i1 %call10, label %land.lhs.true, label %lor.lhs.false12, !dbg !2523

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !2524, !tbaa !2493
  %tobool11 = trunc i8 %7 to i1, !dbg !2524
  br i1 %tobool11, label %if.then15, label %lor.lhs.false12, !dbg !2525

lor.lhs.false12:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %call13 = call zeroext i1 @is_colored(i32 12), !dbg !2526
  br i1 %call13, label %land.lhs.true14, label %if.end16, !dbg !2527

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %8 = load i32, i32* @format, align 4, !dbg !2528, !tbaa !2529
  %cmp = icmp eq i32 %8, 0, !dbg !2530
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !2531

if.then15:                                        ; preds = %land.lhs.true14, %land.lhs.true, %if.then8
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !2532, !tbaa !2493
  br label %if.end16, !dbg !2533

if.end16:                                         ; preds = %if.then15, %land.lhs.true14, %lor.lhs.false12
  br label %if.end17, !dbg !2534

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then6
  %9 = load i32, i32* @dereference, align 4, !dbg !2535, !tbaa !2529
  %cmp19 = icmp eq i32 %9, 1, !dbg !2537
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !2538

if.then20:                                        ; preds = %if.end18
  %10 = load i8, i8* @immediate_dirs, align 1, !dbg !2539, !tbaa !2493
  %tobool21 = trunc i8 %10 to i1, !dbg !2539
  br i1 %tobool21, label %lor.end, label %lor.lhs.false22, !dbg !2540

lor.lhs.false22:                                  ; preds = %if.then20
  %11 = load i32, i32* @indicator_style, align 4, !dbg !2541, !tbaa !2529
  %cmp23 = icmp eq i32 %11, 3, !dbg !2542
  br i1 %cmp23, label %lor.end, label %lor.rhs, !dbg !2543

lor.rhs:                                          ; preds = %lor.lhs.false22
  %12 = load i32, i32* @format, align 4, !dbg !2544, !tbaa !2529
  %cmp24 = icmp eq i32 %12, 0, !dbg !2545
  br label %lor.end, !dbg !2543

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false22, %if.then20
  %13 = phi i1 [ true, %lor.lhs.false22 ], [ true, %if.then20 ], [ %cmp24, %lor.rhs ]
  %14 = zext i1 %13 to i64, !dbg !2546
  %cond = select i1 %13, i32 2, i32 4, !dbg !2546
  store i32 %cond, i32* @dereference, align 4, !dbg !2547, !tbaa !2529
  br label %if.end25, !dbg !2548

if.end25:                                         ; preds = %lor.end, %if.end18
  %15 = load i8, i8* @recursive, align 1, !dbg !2549, !tbaa !2493
  %tobool26 = trunc i8 %15 to i1, !dbg !2549
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !2551

if.then27:                                        ; preds = %if.end25
  %call28 = call %struct.hash_table* @hash_initialize(i64 30, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_ino_hash, i1 (i8*, i8*)* @dev_ino_compare, void (i8*)* @dev_ino_free), !dbg !2552
  store %struct.hash_table* %call28, %struct.hash_table** @active_dir_set, align 8, !dbg !2554, !tbaa !2474
  %16 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2555, !tbaa !2474
  %cmp29 = icmp eq %struct.hash_table* %16, null, !dbg !2557
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2558

if.then30:                                        ; preds = %if.then27
  call void @xalloc_die() #14, !dbg !2559
  unreachable, !dbg !2559

if.end31:                                         ; preds = %if.then27
  %call32 = call i32 @_obstack_begin(%struct.obstack* @dev_ino_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2560
  br label %if.end33, !dbg !2561

if.end33:                                         ; preds = %if.end31, %if.end25
  %call34 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !2562
  %call35 = call %struct.tm_zone* @tzalloc(i8* %call34), !dbg !2563
  store %struct.tm_zone* %call35, %struct.tm_zone** @localtz, align 8, !dbg !2564, !tbaa !2474
  %17 = load i32, i32* @sort_type, align 4, !dbg !2565, !tbaa !2529
  %cmp36 = icmp eq i32 %17, 4, !dbg !2566
  br i1 %cmp36, label %lor.end45, label %lor.lhs.false37, !dbg !2567

lor.lhs.false37:                                  ; preds = %if.end33
  %18 = load i32, i32* @sort_type, align 4, !dbg !2568, !tbaa !2529
  %cmp38 = icmp eq i32 %18, 2, !dbg !2569
  br i1 %cmp38, label %lor.end45, label %lor.lhs.false39, !dbg !2570

lor.lhs.false39:                                  ; preds = %lor.lhs.false37
  %19 = load i32, i32* @format, align 4, !dbg !2571, !tbaa !2529
  %cmp40 = icmp eq i32 %19, 0, !dbg !2572
  br i1 %cmp40, label %lor.end45, label %lor.lhs.false41, !dbg !2573

lor.lhs.false41:                                  ; preds = %lor.lhs.false39
  %20 = load i8, i8* @print_scontext, align 1, !dbg !2574, !tbaa !2493
  %tobool42 = trunc i8 %20 to i1, !dbg !2574
  br i1 %tobool42, label %lor.end45, label %lor.rhs43, !dbg !2575

lor.rhs43:                                        ; preds = %lor.lhs.false41
  %21 = load i8, i8* @print_block_size, align 1, !dbg !2576, !tbaa !2493
  %tobool44 = trunc i8 %21 to i1, !dbg !2576
  br label %lor.end45, !dbg !2575

lor.end45:                                        ; preds = %lor.rhs43, %lor.lhs.false41, %lor.lhs.false39, %lor.lhs.false37, %if.end33
  %22 = phi i1 [ true, %lor.lhs.false41 ], [ true, %lor.lhs.false39 ], [ true, %lor.lhs.false37 ], [ true, %if.end33 ], [ %tobool44, %lor.rhs43 ]
  %frombool = zext i1 %22 to i8, !dbg !2577
  store i8 %frombool, i8* @format_needs_stat, align 1, !dbg !2577, !tbaa !2493
  %23 = load i8, i8* @format_needs_stat, align 1, !dbg !2578, !tbaa !2493
  %tobool46 = trunc i8 %23 to i1, !dbg !2578
  br i1 %tobool46, label %land.end, label %land.rhs, !dbg !2579

land.rhs:                                         ; preds = %lor.end45
  %24 = load i8, i8* @recursive, align 1, !dbg !2580, !tbaa !2493
  %tobool47 = trunc i8 %24 to i1, !dbg !2580
  br i1 %tobool47, label %lor.end54, label %lor.lhs.false48, !dbg !2581

lor.lhs.false48:                                  ; preds = %land.rhs
  %25 = load i8, i8* @print_with_color, align 1, !dbg !2582, !tbaa !2493
  %tobool49 = trunc i8 %25 to i1, !dbg !2582
  br i1 %tobool49, label %lor.end54, label %lor.lhs.false50, !dbg !2583

lor.lhs.false50:                                  ; preds = %lor.lhs.false48
  %26 = load i32, i32* @indicator_style, align 4, !dbg !2584, !tbaa !2529
  %cmp51 = icmp ne i32 %26, 0, !dbg !2585
  br i1 %cmp51, label %lor.end54, label %lor.rhs52, !dbg !2586

lor.rhs52:                                        ; preds = %lor.lhs.false50
  %27 = load i8, i8* @directories_first, align 1, !dbg !2587, !tbaa !2493
  %tobool53 = trunc i8 %27 to i1, !dbg !2587
  br label %lor.end54, !dbg !2586

lor.end54:                                        ; preds = %lor.rhs52, %lor.lhs.false50, %lor.lhs.false48, %land.rhs
  %28 = phi i1 [ true, %lor.lhs.false50 ], [ true, %lor.lhs.false48 ], [ true, %land.rhs ], [ %tobool53, %lor.rhs52 ]
  br label %land.end

land.end:                                         ; preds = %lor.end54, %lor.end45
  %29 = phi i1 [ false, %lor.end45 ], [ %28, %lor.end54 ], !dbg !2588
  %frombool55 = zext i1 %29 to i8, !dbg !2589
  store i8 %frombool55, i8* @format_needs_type, align 1, !dbg !2589, !tbaa !2493
  %30 = load i8, i8* @dired, align 1, !dbg !2590, !tbaa !2493
  %tobool56 = trunc i8 %30 to i1, !dbg !2590
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !2592

if.then57:                                        ; preds = %land.end
  %call58 = call i32 @_obstack_begin(%struct.obstack* @dired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2593
  %call59 = call i32 @_obstack_begin(%struct.obstack* @subdired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2595
  br label %if.end60, !dbg !2596

if.end60:                                         ; preds = %if.then57, %land.end
  %31 = load i8, i8* @print_hyperlink, align 1, !dbg !2597, !tbaa !2493
  %tobool61 = trunc i8 %31 to i1, !dbg !2597
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !2599

if.then62:                                        ; preds = %if.end60
  call void @file_escape_init(), !dbg !2600
  %call63 = call i8* @xgethostname(), !dbg !2602
  store i8* %call63, i8** @hostname, align 8, !dbg !2603, !tbaa !2474
  %32 = load i8*, i8** @hostname, align 8, !dbg !2604, !tbaa !2474
  %tobool64 = icmp ne i8* %32, null, !dbg !2604
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !2606

if.then65:                                        ; preds = %if.then62
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** @hostname, align 8, !dbg !2607, !tbaa !2474
  br label %if.end66, !dbg !2608

if.end66:                                         ; preds = %if.then65, %if.then62
  br label %if.end67, !dbg !2609

if.end67:                                         ; preds = %if.end66, %if.end60
  store i64 100, i64* @cwd_n_alloc, align 8, !dbg !2610, !tbaa !2611
  %33 = load i64, i64* @cwd_n_alloc, align 8, !dbg !2612, !tbaa !2611
  %call68 = call noalias i8* @xnmalloc(i64 %33, i64 200), !dbg !2613
  %34 = bitcast i8* %call68 to %struct.fileinfo*, !dbg !2613
  store %struct.fileinfo* %34, %struct.fileinfo** @cwd_file, align 8, !dbg !2614, !tbaa !2474
  store i64 0, i64* @cwd_n_used, align 8, !dbg !2615, !tbaa !2611
  call void @clear_files(), !dbg !2616
  %35 = load i32, i32* %argc.addr, align 4, !dbg !2617, !tbaa !2468
  %36 = load i32, i32* %i, align 4, !dbg !2618, !tbaa !2468
  %sub = sub nsw i32 %35, %36, !dbg !2619
  store i32 %sub, i32* %n_files, align 4, !dbg !2620, !tbaa !2468
  %37 = load i32, i32* %n_files, align 4, !dbg !2621, !tbaa !2468
  %cmp69 = icmp sle i32 %37, 0, !dbg !2623
  br i1 %cmp69, label %if.then70, label %if.else76, !dbg !2624

if.then70:                                        ; preds = %if.end67
  %38 = load i8, i8* @immediate_dirs, align 1, !dbg !2625, !tbaa !2493
  %tobool71 = trunc i8 %38 to i1, !dbg !2625
  br i1 %tobool71, label %if.then72, label %if.else74, !dbg !2628

if.then72:                                        ; preds = %if.then70
  %call73 = call i64 @gobble_file(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 3, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2629
  br label %if.end75, !dbg !2629

if.else74:                                        ; preds = %if.then70
  call void @queue_directory(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* null, i1 zeroext true), !dbg !2630
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then72
  br label %if.end80, !dbg !2631

if.else76:                                        ; preds = %if.end67
  br label %do.body, !dbg !2632

do.body:                                          ; preds = %do.cond, %if.else76
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !2633, !tbaa !2474
  %40 = load i32, i32* %i, align 4, !dbg !2634, !tbaa !2468
  %inc = add nsw i32 %40, 1, !dbg !2634
  store i32 %inc, i32* %i, align 4, !dbg !2634, !tbaa !2468
  %idxprom = sext i32 %40 to i64, !dbg !2633
  %arrayidx77 = getelementptr inbounds i8*, i8** %39, i64 %idxprom, !dbg !2633, !ctir !142
  %41 = load i8*, i8** %arrayidx77, align 8, !dbg !2633, !tbaa !2474
  %call78 = call i64 @gobble_file(i8* %41, i32 0, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2635
  br label %do.cond, !dbg !2635

do.cond:                                          ; preds = %do.body
  %42 = load i32, i32* %i, align 4, !dbg !2636, !tbaa !2468
  %43 = load i32, i32* %argc.addr, align 4, !dbg !2637, !tbaa !2468
  %cmp79 = icmp slt i32 %42, %43, !dbg !2638
  br i1 %cmp79, label %do.body, label %do.end, !dbg !2635, !llvm.loop !2639

do.end:                                           ; preds = %do.cond
  br label %if.end80

if.end80:                                         ; preds = %do.end, %if.end75
  %44 = load i64, i64* @cwd_n_used, align 8, !dbg !2641, !tbaa !2611
  %tobool81 = icmp ne i64 %44, 0, !dbg !2641
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !2643

if.then82:                                        ; preds = %if.end80
  call void @sort_files(), !dbg !2644
  %45 = load i8, i8* @immediate_dirs, align 1, !dbg !2646, !tbaa !2493
  %tobool83 = trunc i8 %45 to i1, !dbg !2646
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !2648

if.then84:                                        ; preds = %if.then82
  call void @extract_dirs_from_files(i8* null, i1 zeroext true), !dbg !2649
  br label %if.end85, !dbg !2649

if.end85:                                         ; preds = %if.then84, %if.then82
  br label %if.end86, !dbg !2650

if.end86:                                         ; preds = %if.end85, %if.end80
  %46 = load i64, i64* @cwd_n_used, align 8, !dbg !2651, !tbaa !2611
  %tobool87 = icmp ne i64 %46, 0, !dbg !2651
  br i1 %tobool87, label %if.then88, label %if.else97, !dbg !2653

if.then88:                                        ; preds = %if.end86
  call void @print_current_files(), !dbg !2654
  %47 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2656, !tbaa !2474
  %tobool89 = icmp ne %struct.pending* %47, null, !dbg !2656
  br i1 %tobool89, label %if.then90, label %if.end96, !dbg !2658

if.then90:                                        ; preds = %if.then88
  br label %do.body91, !dbg !2659

do.body91:                                        ; preds = %if.then90
  %call92 = call i32 @putchar_unlocked(i32 10), !dbg !2660
  %48 = load i64, i64* @dired_pos, align 8, !dbg !2660, !tbaa !2611
  %inc93 = add i64 %48, 1, !dbg !2660
  store i64 %inc93, i64* @dired_pos, align 8, !dbg !2660, !tbaa !2611
  br label %do.end95, !dbg !2660

do.end95:                                         ; preds = %do.body91
  br label %if.end96, !dbg !2660

if.end96:                                         ; preds = %do.end95, %if.then88
  br label %if.end105, !dbg !2662

if.else97:                                        ; preds = %if.end86
  %49 = load i32, i32* %n_files, align 4, !dbg !2663, !tbaa !2468
  %cmp98 = icmp sle i32 %49, 1, !dbg !2665
  br i1 %cmp98, label %land.lhs.true99, label %if.end104, !dbg !2666

land.lhs.true99:                                  ; preds = %if.else97
  %50 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2667, !tbaa !2474
  %tobool100 = icmp ne %struct.pending* %50, null, !dbg !2667
  br i1 %tobool100, label %land.lhs.true101, label %if.end104, !dbg !2668

land.lhs.true101:                                 ; preds = %land.lhs.true99
  %51 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2669, !tbaa !2474
  %next = getelementptr inbounds %struct.pending, %struct.pending* %51, i32 0, i32 3, !dbg !2670, !ctir !236
  %52 = load %struct.pending*, %struct.pending** %next, align 8, !dbg !2670, !tbaa !2671, !ctir !235
  %cmp102 = icmp eq %struct.pending* %52, null, !dbg !2673
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !2674

if.then103:                                       ; preds = %land.lhs.true101
  store i8 0, i8* @print_dir_name, align 1, !dbg !2675, !tbaa !2493
  br label %if.end104, !dbg !2676

if.end104:                                        ; preds = %if.then103, %land.lhs.true101, %land.lhs.true99, %if.else97
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end96
  br label %while.cond, !dbg !2677

while.cond:                                       ; preds = %if.end116, %cond.end, %if.end105
  %53 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2678, !tbaa !2474
  %tobool106 = icmp ne %struct.pending* %53, null, !dbg !2677
  br i1 %tobool106, label %while.body, label %while.end, !dbg !2677

while.body:                                       ; preds = %while.cond
  %54 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2679, !tbaa !2474
  store %struct.pending* %54, %struct.pending** %thispend, align 8, !dbg !2681, !tbaa !2474
  %55 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2682, !tbaa !2474
  %next107 = getelementptr inbounds %struct.pending, %struct.pending* %55, i32 0, i32 3, !dbg !2683, !ctir !236
  %56 = load %struct.pending*, %struct.pending** %next107, align 8, !dbg !2683, !tbaa !2671, !ctir !235
  store %struct.pending* %56, %struct.pending** @pending_dirs, align 8, !dbg !2684, !tbaa !2474
  %57 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2685, !tbaa !2474
  %tobool108 = icmp ne %struct.hash_table* %57, null, !dbg !2685
  br i1 %tobool108, label %if.then109, label %if.end116, !dbg !2687

if.then109:                                       ; preds = %while.body
  %58 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2688, !tbaa !2474
  %name = getelementptr inbounds %struct.pending, %struct.pending* %58, i32 0, i32 0, !dbg !2691, !ctir !236
  %59 = load i8*, i8** %name, align 8, !dbg !2691, !tbaa !2692, !ctir !143
  %cmp110 = icmp eq i8* %59, null, !dbg !2693
  br i1 %cmp110, label %if.then111, label %if.end115, !dbg !2694

if.then111:                                       ; preds = %if.then109
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %di, metadata !2695, metadata !DIExpression()), !dbg !2697
  %call112 = call { i64, i64 } @dev_ino_pop(), !dbg !2698
  %60 = bitcast %struct.dev_ino* %di to { i64, i64 }*, !dbg !2698
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 0, !dbg !2698
  %62 = extractvalue { i64, i64 } %call112, 0, !dbg !2698
  store i64 %62, i64* %61, align 8, !dbg !2698
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 1, !dbg !2698
  %64 = extractvalue { i64, i64 } %call112, 1, !dbg !2698
  store i64 %64, i64* %63, align 8, !dbg !2698
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %found, metadata !2699, metadata !DIExpression()), !dbg !2700
  %65 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2701, !tbaa !2474
  %66 = bitcast %struct.dev_ino* %di to i8*, !dbg !2702
  %call113 = call i8* @hash_delete(%struct.hash_table* %65, i8* %66), !dbg !2703
  %67 = bitcast i8* %call113 to %struct.dev_ino*, !dbg !2703
  store %struct.dev_ino* %67, %struct.dev_ino** %found, align 8, !dbg !2700, !tbaa !2474
  %68 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2704, !tbaa !2474
  %tobool114 = icmp ne %struct.dev_ino* %68, null, !dbg !2704
  br i1 %tobool114, label %cond.true, label %cond.false, !dbg !2704

cond.true:                                        ; preds = %if.then111
  br label %cond.end, !dbg !2704

cond.false:                                       ; preds = %if.then111
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1600, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2704
  unreachable, !dbg !2704

69:                                               ; No predecessors!
  br label %cond.end, !dbg !2704

cond.end:                                         ; preds = %69, %cond.true
  %70 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2705, !tbaa !2474
  %71 = bitcast %struct.dev_ino* %70 to i8*, !dbg !2705
  call void @dev_ino_free(i8* %71), !dbg !2706
  %72 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2707, !tbaa !2474
  call void @free_pending_ent(%struct.pending* %72), !dbg !2708
  br label %while.cond, !dbg !2709, !llvm.loop !2710

if.end115:                                        ; preds = %if.then109
  br label %if.end116, !dbg !2712

if.end116:                                        ; preds = %if.end115, %while.body
  %73 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2713, !tbaa !2474
  %name117 = getelementptr inbounds %struct.pending, %struct.pending* %73, i32 0, i32 0, !dbg !2714, !ctir !236
  %74 = load i8*, i8** %name117, align 8, !dbg !2714, !tbaa !2692, !ctir !143
  %75 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2715, !tbaa !2474
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %75, i32 0, i32 1, !dbg !2716, !ctir !236
  %76 = load i8*, i8** %realname, align 8, !dbg !2716, !tbaa !2717, !ctir !143
  %77 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2718, !tbaa !2474
  %command_line_arg = getelementptr inbounds %struct.pending, %struct.pending* %77, i32 0, i32 2, !dbg !2719, !ctir !236
  %78 = load i8, i8* %command_line_arg, align 8, !dbg !2719, !tbaa !2720
  %tobool118 = trunc i8 %78 to i1, !dbg !2719, !ctir !141
  call void @print_dir(i8* %74, i8* %76, i1 zeroext %tobool118), !dbg !2721
  %79 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2722, !tbaa !2474
  call void @free_pending_ent(%struct.pending* %79), !dbg !2723
  store i8 1, i8* @print_dir_name, align 1, !dbg !2724, !tbaa !2493
  br label %while.cond, !dbg !2677, !llvm.loop !2710

while.end:                                        ; preds = %while.cond
  %80 = load i8, i8* @print_with_color, align 1, !dbg !2725, !tbaa !2493
  %tobool119 = trunc i8 %80 to i1, !dbg !2725
  br i1 %tobool119, label %land.lhs.true120, label %if.end142, !dbg !2727

land.lhs.true120:                                 ; preds = %while.end
  %81 = load i8, i8* @used_color, align 1, !dbg !2728, !tbaa !2493
  %tobool121 = trunc i8 %81 to i1, !dbg !2728
  br i1 %tobool121, label %if.then122, label %if.end142, !dbg !2729

if.then122:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2730, metadata !DIExpression()), !dbg !2732
  %82 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 0), align 16, !dbg !2733, !tbaa !2735, !ctir !149
  %cmp123 = icmp eq i64 %82, 2, !dbg !2737
  br i1 %cmp123, label %land.lhs.true124, label %if.then133, !dbg !2738

land.lhs.true124:                                 ; preds = %if.then122
  %83 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 1), align 8, !dbg !2739, !tbaa !2740, !ctir !146
  %call125 = call i32 @memcmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16, !dbg !2741
  %cmp126 = icmp eq i32 %call125, 0, !dbg !2742
  br i1 %cmp126, label %land.lhs.true127, label %if.then133, !dbg !2743

land.lhs.true127:                                 ; preds = %land.lhs.true124
  %84 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 0), align 16, !dbg !2744, !tbaa !2735, !ctir !149
  %cmp128 = icmp eq i64 %84, 1, !dbg !2745
  br i1 %cmp128, label %land.lhs.true129, label %if.then133, !dbg !2746

land.lhs.true129:                                 ; preds = %land.lhs.true127
  %85 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 1), align 8, !dbg !2747, !tbaa !2740, !ctir !146
  %arrayidx130 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !2748, !ctir !146
  %86 = load i8, i8* %arrayidx130, align 1, !dbg !2748, !tbaa !2529
  %conv = sext i8 %86 to i32, !dbg !2748
  %cmp131 = icmp eq i32 %conv, 109, !dbg !2749
  br i1 %cmp131, label %if.end134, label %if.then133, !dbg !2750

if.then133:                                       ; preds = %land.lhs.true129, %land.lhs.true127, %land.lhs.true124, %if.then122
  call void @restore_default_color(), !dbg !2751
  br label %if.end134, !dbg !2751

if.end134:                                        ; preds = %if.then133, %land.lhs.true129
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2752, !tbaa !2474
  %call135 = call i32 @fflush_unlocked(%struct._IO_FILE* %87), !dbg !2752
  call void @signal_restore(), !dbg !2753
  %88 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !2754, !tbaa !2468
  store i32 %88, i32* %j, align 4, !dbg !2756, !tbaa !2468
  br label %for.cond, !dbg !2757

for.cond:                                         ; preds = %for.inc, %if.end134
  %89 = load i32, i32* %j, align 4, !dbg !2758, !tbaa !2468
  %tobool136 = icmp ne i32 %89, 0, !dbg !2760
  br i1 %tobool136, label %for.body, label %for.end, !dbg !2760

for.body:                                         ; preds = %for.cond
  %call137 = call i32 @raise(i32 19) #13, !dbg !2761
  br label %for.inc, !dbg !2761

for.inc:                                          ; preds = %for.body
  %90 = load i32, i32* %j, align 4, !dbg !2762, !tbaa !2468
  %dec = add nsw i32 %90, -1, !dbg !2762
  store i32 %dec, i32* %j, align 4, !dbg !2762, !tbaa !2468
  br label %for.cond, !dbg !2763, !llvm.loop !2764

for.end:                                          ; preds = %for.cond
  %91 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !2766, !tbaa !2468
  store i32 %91, i32* %j, align 4, !dbg !2767, !tbaa !2468
  %92 = load i32, i32* %j, align 4, !dbg !2768, !tbaa !2468
  %tobool138 = icmp ne i32 %92, 0, !dbg !2768
  br i1 %tobool138, label %if.then139, label %if.end141, !dbg !2770

if.then139:                                       ; preds = %for.end
  %93 = load i32, i32* %j, align 4, !dbg !2771, !tbaa !2468
  %call140 = call i32 @raise(i32 %93) #13, !dbg !2772
  br label %if.end141, !dbg !2772

if.end141:                                        ; preds = %if.then139, %for.end
  br label %if.end142, !dbg !2773

if.end142:                                        ; preds = %if.end141, %land.lhs.true120, %while.end
  %94 = load i8, i8* @dired, align 1, !dbg !2774, !tbaa !2493
  %tobool143 = trunc i8 %94 to i1, !dbg !2774
  br i1 %tobool143, label %if.then144, label %if.end149, !dbg !2776

if.then144:                                       ; preds = %if.end142
  call void @dired_dump_obstack(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), %struct.obstack* @dired_obstack), !dbg !2777
  call void @dired_dump_obstack(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), %struct.obstack* @subdired_obstack), !dbg !2779
  %95 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2780, !tbaa !2474
  %call145 = call i32 @get_quoting_style(%struct.quoting_options* %95), !dbg !2781
  %idxprom146 = zext i32 %call145 to i64, !dbg !2782
  %arrayidx147 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @quoting_style_args to [0 x i8*]*), i64 0, i64 %idxprom146, !dbg !2782, !ctir !319
  %96 = load i8*, i8** %arrayidx147, align 8, !dbg !2782, !tbaa !2474
  %call148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* %96), !dbg !2783
  br label %if.end149, !dbg !2784

if.end149:                                        ; preds = %if.then144, %if.end142
  %97 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2785, !tbaa !2474
  %tobool150 = icmp ne %struct.hash_table* %97, null, !dbg !2785
  br i1 %tobool150, label %if.then151, label %if.end158, !dbg !2787

if.then151:                                       ; preds = %if.end149
  %98 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2788, !tbaa !2474
  %call152 = call i64 @hash_get_n_entries(%struct.hash_table* %98) #16, !dbg !2788
  %cmp153 = icmp eq i64 %call152, 0, !dbg !2788
  br i1 %cmp153, label %cond.true155, label %cond.false156, !dbg !2788

cond.true155:                                     ; preds = %if.then151
  br label %cond.end157, !dbg !2788

cond.false156:                                    ; preds = %if.then151
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1652, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2788
  unreachable, !dbg !2788

99:                                               ; No predecessors!
  br label %cond.end157, !dbg !2788

cond.end157:                                      ; preds = %99, %cond.true155
  %100 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2790, !tbaa !2474
  call void @hash_free(%struct.hash_table* %100), !dbg !2791
  br label %if.end158, !dbg !2792

if.end158:                                        ; preds = %cond.end157, %if.end149
  %101 = load i32, i32* @exit_status, align 4, !dbg !2793, !tbaa !2468
  ret i32 %101, !dbg !2794
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_exit_failure(i32 %status) #0 !dbg !2795 !ctir !173 {
entry:
  %status.addr = alloca i32, align 4, !ctir !27
  store i32 %status, i32* %status.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2796, metadata !DIExpression()), !dbg !2797
  %0 = load i32, i32* %status.addr, align 4, !dbg !2798, !tbaa !2468
  %cmp = icmp ne i32 %0, 1, !dbg !2800
  br i1 %cmp, label %if.then, label %if.end, !dbg !2801

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !2802, !tbaa !2468
  store volatile i32 %1, i32* @exit_failure, align 4, !dbg !2803, !tbaa !2468
  br label %if.end, !dbg !2804

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2805
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_switches(i32 %argc, i8** %argv) #0 !dbg !876 !ctir !233 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %argc.addr = alloca i32, align 4, !ctir !27
  %argv.addr = alloca i8**, align 8, !ctir !142
  %time_style_option = alloca i8*, align 8, !ctir !143
  %sort_type_specified = alloca i8, align 1, !ctir !141
  %kibibytes_specified = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %ws = alloca %struct.winsize, align 2, !ctir !2806
  %p29 = alloca i8*, align 8, !ctir !146
  %tmp_ulong = alloca i64, align 8, !ctir !151
  %oi = alloca i32, align 4, !ctir !27
  %c = alloca i32, align 4, !ctir !27
  %hide = alloca %struct.ignore_pattern*, align 8, !ctir !499
  %i = alloca i32, align 4, !ctir !27
  %i139 = alloca i32, align 4, !ctir !27
  %e = alloca i32, align 4, !ctir !109
  %ls_block_size = alloca i8*, align 8, !ctir !146
  %qs = alloca i32, align 4, !ctir !95
  %p231 = alloca i8*, align 8, !ctir !146
  %style = alloca i8*, align 8, !ctir !143
  %p0 = alloca i8*, align 8, !ctir !143
  %p1 = alloca i8*, align 8, !ctir !143
  %res = alloca i64, align 8, !ctir !552
  %p304 = alloca i8**, align 8, !ctir !555
  %i320 = alloca i32, align 4, !ctir !27
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2813, metadata !DIExpression()), !dbg !2814
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2815, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.declare(metadata i8** %time_style_option, metadata !2817, metadata !DIExpression()), !dbg !2818
  store i8* null, i8** %time_style_option, align 8, !dbg !2818, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %sort_type_specified, metadata !2819, metadata !DIExpression()), !dbg !2820
  store i8 0, i8* %sort_type_specified, align 1, !dbg !2820, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %kibibytes_specified, metadata !2821, metadata !DIExpression()), !dbg !2822
  store i8 0, i8* %kibibytes_specified, align 1, !dbg !2822, !tbaa !2493
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2823, !tbaa !2493
  %0 = load i32, i32* @ls_mode, align 4, !dbg !2824, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !2825

sw.bb:                                            ; preds = %entry
  store i32 2, i32* @format, align 4, !dbg !2826, !tbaa !2529
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2828
  br label %sw.epilog, !dbg !2829

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* @format, align 4, !dbg !2830, !tbaa !2529
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2831
  br label %sw.epilog, !dbg !2832

sw.bb2:                                           ; preds = %entry
  %call = call i32 @isatty(i32 1) #13, !dbg !2833
  %tobool = icmp ne i32 %call, 0, !dbg !2833
  br i1 %tobool, label %if.then, label %if.else, !dbg !2835

if.then:                                          ; preds = %sw.bb2
  store i32 2, i32* @format, align 4, !dbg !2836, !tbaa !2529
  call void @set_quoting_style(%struct.quoting_options* null, i32 3), !dbg !2838
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2839, !tbaa !2493
  br label %if.end, !dbg !2840

if.else:                                          ; preds = %sw.bb2
  store i32 1, i32* @format, align 4, !dbg !2841, !tbaa !2529
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2843, !tbaa !2493
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !2844

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !2845
  unreachable, !dbg !2845

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  store i32 0, i32* @time_type, align 4, !dbg !2846, !tbaa !2529
  store i32 0, i32* @sort_type, align 4, !dbg !2847, !tbaa !2529
  store i8 0, i8* @sort_reverse, align 1, !dbg !2848, !tbaa !2493
  store i8 0, i8* @numeric_ids, align 1, !dbg !2849, !tbaa !2493
  store i8 0, i8* @print_block_size, align 1, !dbg !2850, !tbaa !2493
  store i32 0, i32* @indicator_style, align 4, !dbg !2851, !tbaa !2529
  store i8 0, i8* @print_inode, align 1, !dbg !2852, !tbaa !2493
  store i32 1, i32* @dereference, align 4, !dbg !2853, !tbaa !2529
  store i8 0, i8* @recursive, align 1, !dbg !2854, !tbaa !2493
  store i8 0, i8* @immediate_dirs, align 1, !dbg !2855, !tbaa !2493
  store i32 0, i32* @ignore_mode, align 4, !dbg !2856, !tbaa !2529
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !2857, !tbaa !2474
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !2858, !tbaa !2474
  store i8 0, i8* @print_scontext, align 1, !dbg !2859, !tbaa !2493
  call void @getenv_quoting_style(), !dbg !2860
  store i64 80, i64* @line_length, align 8, !dbg !2861, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2862, metadata !DIExpression()), !dbg !2864
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !2865
  store i8* %call3, i8** %p, align 8, !dbg !2864, !tbaa !2474
  %1 = load i8*, i8** %p, align 8, !dbg !2866, !tbaa !2474
  %tobool4 = icmp ne i8* %1, null, !dbg !2866
  br i1 %tobool4, label %land.lhs.true, label %if.end11, !dbg !2868

land.lhs.true:                                    ; preds = %sw.epilog
  %2 = load i8*, i8** %p, align 8, !dbg !2869, !tbaa !2474
  %3 = load i8, i8* %2, align 1, !dbg !2870, !tbaa !2529, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !2870
  %tobool5 = icmp ne i32 %conv, 0, !dbg !2870
  br i1 %tobool5, label %land.lhs.true6, label %if.end11, !dbg !2871

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %p, align 8, !dbg !2872, !tbaa !2474
  %call7 = call zeroext i1 @set_line_length(i8* %4), !dbg !2873
  br i1 %call7, label %if.end11, label %if.then8, !dbg !2874

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.64, i64 0, i64 0)) #13, !dbg !2875
  %5 = load i8*, i8** %p, align 8, !dbg !2876, !tbaa !2474
  %call10 = call i8* @quote(i8* %5), !dbg !2877
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call9, i8* %call10), !dbg !2878
  br label %if.end11, !dbg !2878

if.end11:                                         ; preds = %if.then8, %land.lhs.true6, %land.lhs.true, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.winsize* %ws, metadata !2879, metadata !DIExpression()), !dbg !2881
  %call12 = call i32 (i32, i64, ...) @ioctl(i32 1, i64 21523, %struct.winsize* %ws) #13, !dbg !2882
  %cmp = icmp ne i32 %call12, -1, !dbg !2884
  br i1 %cmp, label %land.lhs.true14, label %if.end28, !dbg !2885

land.lhs.true14:                                  ; preds = %if.end11
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2886, !ctir !2806
  %6 = load i16, i16* %ws_col, align 2, !dbg !2886, !tbaa !2887, !ctir !177
  %conv15 = zext i16 %6 to i32, !dbg !2890
  %cmp16 = icmp slt i32 0, %conv15, !dbg !2891
  br i1 %cmp16, label %land.lhs.true18, label %if.end28, !dbg !2892

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %ws_col19 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2893, !ctir !2806
  %7 = load i16, i16* %ws_col19, align 2, !dbg !2893, !tbaa !2887, !ctir !177
  %conv20 = zext i16 %7 to i64, !dbg !2894
  %ws_col21 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2895, !ctir !2806
  %8 = load i16, i16* %ws_col21, align 2, !dbg !2895, !tbaa !2887, !ctir !177
  %conv22 = zext i16 %8 to i64, !dbg !2896
  %cmp23 = icmp eq i64 %conv20, %conv22, !dbg !2897
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !2898

if.then25:                                        ; preds = %land.lhs.true18
  %ws_col26 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2899, !ctir !2806
  %9 = load i16, i16* %ws_col26, align 2, !dbg !2899, !tbaa !2887, !ctir !177
  %conv27 = zext i16 %9 to i64, !dbg !2900
  store i64 %conv27, i64* @line_length, align 8, !dbg !2901, !tbaa !2611
  br label %if.end28, !dbg !2902

if.end28:                                         ; preds = %if.then25, %land.lhs.true18, %land.lhs.true14, %if.end11
  call void @llvm.dbg.declare(metadata i8** %p29, metadata !2903, metadata !DIExpression()), !dbg !2905
  %call30 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0)) #13, !dbg !2906
  store i8* %call30, i8** %p29, align 8, !dbg !2905, !tbaa !2474
  store i64 8, i64* @tabsize, align 8, !dbg !2907, !tbaa !2611
  %10 = load i8*, i8** %p29, align 8, !dbg !2908, !tbaa !2474
  %tobool31 = icmp ne i8* %10, null, !dbg !2908
  br i1 %tobool31, label %if.then32, label %if.end44, !dbg !2910

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i64* %tmp_ulong, metadata !2911, metadata !DIExpression()), !dbg !2913
  %11 = load i8*, i8** %p29, align 8, !dbg !2914, !tbaa !2474
  %call33 = call i32 @xstrtoul(i8* %11, i8** null, i32 0, i64* %tmp_ulong, i8* null), !dbg !2916
  %cmp34 = icmp eq i32 %call33, 0, !dbg !2917
  br i1 %cmp34, label %land.lhs.true36, label %if.else40, !dbg !2918

land.lhs.true36:                                  ; preds = %if.then32
  %12 = load i64, i64* %tmp_ulong, align 8, !dbg !2919, !tbaa !2611
  %cmp37 = icmp ule i64 %12, -1, !dbg !2920
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !2921

if.then39:                                        ; preds = %land.lhs.true36
  %13 = load i64, i64* %tmp_ulong, align 8, !dbg !2922, !tbaa !2611
  store i64 %13, i64* @tabsize, align 8, !dbg !2924, !tbaa !2611
  br label %if.end43, !dbg !2925

if.else40:                                        ; preds = %land.lhs.true36, %if.then32
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !2926
  %14 = load i8*, i8** %p29, align 8, !dbg !2928, !tbaa !2474
  %call42 = call i8* @quote(i8* %14), !dbg !2929
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call42), !dbg !2930
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then39
  br label %if.end44, !dbg !2931

if.end44:                                         ; preds = %if.end43, %if.end28
  br label %while.body, !dbg !2932

while.body:                                       ; preds = %if.end44, %sw.epilog182
  call void @llvm.dbg.declare(metadata i32* %oi, metadata !2933, metadata !DIExpression()), !dbg !2935
  store i32 -1, i32* %oi, align 4, !dbg !2935, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2936, metadata !DIExpression()), !dbg !2937
  %15 = load i32, i32* %argc.addr, align 4, !dbg !2938, !tbaa !2468
  %16 = load i8**, i8*** %argv.addr, align 8, !dbg !2939, !tbaa !2474
  %call45 = call i32 @getopt_long(i32 %15, i8** %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.67, i64 0, i64 0), %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) #13, !dbg !2940
  store i32 %call45, i32* %c, align 4, !dbg !2937, !tbaa !2468
  %17 = load i32, i32* %c, align 4, !dbg !2941, !tbaa !2468
  %cmp46 = icmp eq i32 %17, -1, !dbg !2943
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2944

if.then48:                                        ; preds = %while.body
  br label %while.end, !dbg !2945

if.end49:                                         ; preds = %while.body
  %18 = load i32, i32* %c, align 4, !dbg !2946, !tbaa !2468
  switch i32 %18, label %sw.default181 [
    i32 97, label %sw.bb50
    i32 98, label %sw.bb51
    i32 99, label %sw.bb52
    i32 100, label %sw.bb53
    i32 102, label %sw.bb54
    i32 132, label %sw.bb61
    i32 103, label %sw.bb62
    i32 104, label %sw.bb63
    i32 105, label %sw.bb64
    i32 107, label %sw.bb65
    i32 108, label %sw.bb66
    i32 109, label %sw.bb67
    i32 110, label %sw.bb68
    i32 111, label %sw.bb69
    i32 112, label %sw.bb70
    i32 113, label %sw.bb71
    i32 114, label %sw.bb72
    i32 115, label %sw.bb73
    i32 116, label %sw.bb74
    i32 117, label %sw.bb75
    i32 118, label %sw.bb76
    i32 119, label %sw.bb77
    i32 120, label %sw.bb83
    i32 65, label %sw.bb84
    i32 66, label %sw.bb85
    i32 67, label %sw.bb86
    i32 68, label %sw.bb87
    i32 70, label %sw.bb88
    i32 71, label %sw.bb89
    i32 72, label %sw.bb90
    i32 131, label %sw.bb91
    i32 73, label %sw.bb92
    i32 76, label %sw.bb93
    i32 78, label %sw.bb94
    i32 81, label %sw.bb95
    i32 82, label %sw.bb96
    i32 83, label %sw.bb97
    i32 84, label %sw.bb98
    i32 85, label %sw.bb101
    i32 88, label %sw.bb102
    i32 49, label %sw.bb103
    i32 128, label %sw.bb108
    i32 136, label %sw.bb109
    i32 142, label %sw.bb111
    i32 135, label %sw.bb113
    i32 143, label %sw.bb114
    i32 133, label %sw.bb117
    i32 134, label %sw.bb120
    i32 130, label %sw.bb122
    i32 137, label %sw.bb138
    i32 138, label %sw.bb157
    i32 139, label %sw.bb160
    i32 144, label %sw.bb163
    i32 140, label %sw.bb164
    i32 129, label %sw.bb165
    i32 141, label %sw.bb171
    i32 90, label %sw.bb172
    i32 -130, label %sw.bb173
    i32 -131, label %sw.bb174
  ], !dbg !2947

sw.bb50:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2948, !tbaa !2529
  br label %sw.epilog182, !dbg !2950

sw.bb51:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2951
  br label %sw.epilog182, !dbg !2952

sw.bb52:                                          ; preds = %if.end49
  store i32 1, i32* @time_type, align 4, !dbg !2953, !tbaa !2529
  br label %sw.epilog182, !dbg !2954

sw.bb53:                                          ; preds = %if.end49
  store i8 1, i8* @immediate_dirs, align 1, !dbg !2955, !tbaa !2493
  br label %sw.epilog182, !dbg !2956

sw.bb54:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2957, !tbaa !2529
  store i32 -1, i32* @sort_type, align 4, !dbg !2958, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2959, !tbaa !2493
  %19 = load i32, i32* @format, align 4, !dbg !2960, !tbaa !2529
  %cmp55 = icmp eq i32 %19, 0, !dbg !2962
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !2963

if.then57:                                        ; preds = %sw.bb54
  %call58 = call i32 @isatty(i32 1) #13, !dbg !2964
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2964
  %20 = zext i1 %tobool59 to i64, !dbg !2964
  %cond = select i1 %tobool59, i32 2, i32 1, !dbg !2964
  store i32 %cond, i32* @format, align 4, !dbg !2965, !tbaa !2529
  br label %if.end60, !dbg !2966

if.end60:                                         ; preds = %if.then57, %sw.bb54
  store i8 0, i8* @print_block_size, align 1, !dbg !2967, !tbaa !2493
  store i8 0, i8* @print_with_color, align 1, !dbg !2968, !tbaa !2493
  store i8 0, i8* @print_hyperlink, align 1, !dbg !2969, !tbaa !2493
  br label %sw.epilog182, !dbg !2970

sw.bb61:                                          ; preds = %if.end49
  store i32 2, i32* @indicator_style, align 4, !dbg !2971, !tbaa !2529
  br label %sw.epilog182, !dbg !2972

sw.bb62:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2973, !tbaa !2529
  store i8 0, i8* @print_owner, align 1, !dbg !2974, !tbaa !2493
  br label %sw.epilog182, !dbg !2975

sw.bb63:                                          ; preds = %if.end49
  store i32 176, i32* @human_output_opts, align 4, !dbg !2976, !tbaa !2468
  store i32 176, i32* @file_human_output_opts, align 4, !dbg !2977, !tbaa !2468
  store i64 1, i64* @output_block_size, align 8, !dbg !2978, !tbaa !2611
  store i64 1, i64* @file_output_block_size, align 8, !dbg !2979, !tbaa !2611
  br label %sw.epilog182, !dbg !2980

sw.bb64:                                          ; preds = %if.end49
  store i8 1, i8* @print_inode, align 1, !dbg !2981, !tbaa !2493
  br label %sw.epilog182, !dbg !2982

sw.bb65:                                          ; preds = %if.end49
  store i8 1, i8* %kibibytes_specified, align 1, !dbg !2983, !tbaa !2493
  br label %sw.epilog182, !dbg !2984

sw.bb66:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2985, !tbaa !2529
  br label %sw.epilog182, !dbg !2986

sw.bb67:                                          ; preds = %if.end49
  store i32 4, i32* @format, align 4, !dbg !2987, !tbaa !2529
  br label %sw.epilog182, !dbg !2988

sw.bb68:                                          ; preds = %if.end49
  store i8 1, i8* @numeric_ids, align 1, !dbg !2989, !tbaa !2493
  store i32 0, i32* @format, align 4, !dbg !2990, !tbaa !2529
  br label %sw.epilog182, !dbg !2991

sw.bb69:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2992, !tbaa !2529
  store i8 0, i8* @print_group, align 1, !dbg !2993, !tbaa !2493
  br label %sw.epilog182, !dbg !2994

sw.bb70:                                          ; preds = %if.end49
  store i32 1, i32* @indicator_style, align 4, !dbg !2995, !tbaa !2529
  br label %sw.epilog182, !dbg !2996

sw.bb71:                                          ; preds = %if.end49
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2997, !tbaa !2493
  br label %sw.epilog182, !dbg !2998

sw.bb72:                                          ; preds = %if.end49
  store i8 1, i8* @sort_reverse, align 1, !dbg !2999, !tbaa !2493
  br label %sw.epilog182, !dbg !3000

sw.bb73:                                          ; preds = %if.end49
  store i8 1, i8* @print_block_size, align 1, !dbg !3001, !tbaa !2493
  br label %sw.epilog182, !dbg !3002

sw.bb74:                                          ; preds = %if.end49
  store i32 4, i32* @sort_type, align 4, !dbg !3003, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3004, !tbaa !2493
  br label %sw.epilog182, !dbg !3005

sw.bb75:                                          ; preds = %if.end49
  store i32 2, i32* @time_type, align 4, !dbg !3006, !tbaa !2529
  br label %sw.epilog182, !dbg !3007

sw.bb76:                                          ; preds = %if.end49
  store i32 3, i32* @sort_type, align 4, !dbg !3008, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3009, !tbaa !2493
  br label %sw.epilog182, !dbg !3010

sw.bb77:                                          ; preds = %if.end49
  %21 = load i8*, i8** @optarg, align 8, !dbg !3011, !tbaa !2474
  %call78 = call zeroext i1 @set_line_length(i8* %21), !dbg !3013
  br i1 %call78, label %if.end82, label %if.then79, !dbg !3014

if.then79:                                        ; preds = %sw.bb77
  %call80 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !3015
  %22 = load i8*, i8** @optarg, align 8, !dbg !3015, !tbaa !2474
  %call81 = call i8* @quote(i8* %22), !dbg !3015
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0), i8* %call80, i8* %call81), !dbg !3015
  unreachable, !dbg !3015

if.end82:                                         ; preds = %sw.bb77
  br label %sw.epilog182, !dbg !3016

sw.bb83:                                          ; preds = %if.end49
  store i32 3, i32* @format, align 4, !dbg !3017, !tbaa !2529
  br label %sw.epilog182, !dbg !3018

sw.bb84:                                          ; preds = %if.end49
  store i32 1, i32* @ignore_mode, align 4, !dbg !3019, !tbaa !2529
  br label %sw.epilog182, !dbg !3020

sw.bb85:                                          ; preds = %if.end49
  call void @add_ignore_pattern(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i64 0, i64 0)), !dbg !3021
  call void @add_ignore_pattern(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0)), !dbg !3022
  br label %sw.epilog182, !dbg !3023

sw.bb86:                                          ; preds = %if.end49
  store i32 2, i32* @format, align 4, !dbg !3024, !tbaa !2529
  br label %sw.epilog182, !dbg !3025

sw.bb87:                                          ; preds = %if.end49
  store i8 1, i8* @dired, align 1, !dbg !3026, !tbaa !2493
  br label %sw.epilog182, !dbg !3027

sw.bb88:                                          ; preds = %if.end49
  store i32 3, i32* @indicator_style, align 4, !dbg !3028, !tbaa !2529
  br label %sw.epilog182, !dbg !3029

sw.bb89:                                          ; preds = %if.end49
  store i8 0, i8* @print_group, align 1, !dbg !3030, !tbaa !2493
  br label %sw.epilog182, !dbg !3031

sw.bb90:                                          ; preds = %if.end49
  store i32 3, i32* @dereference, align 4, !dbg !3032, !tbaa !2529
  br label %sw.epilog182, !dbg !3033

sw.bb91:                                          ; preds = %if.end49
  store i32 4, i32* @dereference, align 4, !dbg !3034, !tbaa !2529
  br label %sw.epilog182, !dbg !3035

sw.bb92:                                          ; preds = %if.end49
  %23 = load i8*, i8** @optarg, align 8, !dbg !3036, !tbaa !2474
  call void @add_ignore_pattern(i8* %23), !dbg !3037
  br label %sw.epilog182, !dbg !3038

sw.bb93:                                          ; preds = %if.end49
  store i32 5, i32* @dereference, align 4, !dbg !3039, !tbaa !2529
  br label %sw.epilog182, !dbg !3040

sw.bb94:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 0), !dbg !3041
  br label %sw.epilog182, !dbg !3042

sw.bb95:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 5), !dbg !3043
  br label %sw.epilog182, !dbg !3044

sw.bb96:                                          ; preds = %if.end49
  store i8 1, i8* @recursive, align 1, !dbg !3045, !tbaa !2493
  br label %sw.epilog182, !dbg !3046

sw.bb97:                                          ; preds = %if.end49
  store i32 2, i32* @sort_type, align 4, !dbg !3047, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3048, !tbaa !2493
  br label %sw.epilog182, !dbg !3049

sw.bb98:                                          ; preds = %if.end49
  %24 = load i8*, i8** @optarg, align 8, !dbg !3050, !tbaa !2474
  %call99 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #13, !dbg !3051
  %call100 = call i64 @xnumtoumax(i8* %24, i32 0, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %call99, i32 2), !dbg !3052
  store i64 %call100, i64* @tabsize, align 8, !dbg !3053, !tbaa !2611
  br label %sw.epilog182, !dbg !3054

sw.bb101:                                         ; preds = %if.end49
  store i32 -1, i32* @sort_type, align 4, !dbg !3055, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3056, !tbaa !2493
  br label %sw.epilog182, !dbg !3057

sw.bb102:                                         ; preds = %if.end49
  store i32 1, i32* @sort_type, align 4, !dbg !3058, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3059, !tbaa !2493
  br label %sw.epilog182, !dbg !3060

sw.bb103:                                         ; preds = %if.end49
  %25 = load i32, i32* @format, align 4, !dbg !3061, !tbaa !2529
  %cmp104 = icmp ne i32 %25, 0, !dbg !3063
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !3064

if.then106:                                       ; preds = %sw.bb103
  store i32 1, i32* @format, align 4, !dbg !3065, !tbaa !2529
  br label %if.end107, !dbg !3066

if.end107:                                        ; preds = %if.then106, %sw.bb103
  br label %sw.epilog182, !dbg !3067

sw.bb108:                                         ; preds = %if.end49
  store i8 1, i8* @print_author, align 1, !dbg !3068, !tbaa !2493
  br label %sw.epilog182, !dbg !3069

sw.bb109:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %hide, metadata !3070, metadata !DIExpression()), !dbg !3072
  %call110 = call noalias i8* @xmalloc(i64 16), !dbg !3073
  %26 = bitcast i8* %call110 to %struct.ignore_pattern*, !dbg !3073
  store %struct.ignore_pattern* %26, %struct.ignore_pattern** %hide, align 8, !dbg !3072, !tbaa !2474
  %27 = load i8*, i8** @optarg, align 8, !dbg !3074, !tbaa !2474
  %28 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3075, !tbaa !2474
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %28, i32 0, i32 0, !dbg !3076, !ctir !500
  store i8* %27, i8** %pattern, align 8, !dbg !3077, !tbaa !3078, !ctir !146
  %29 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !3080, !tbaa !2474
  %30 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3081, !tbaa !2474
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %30, i32 0, i32 1, !dbg !3082, !ctir !500
  store %struct.ignore_pattern* %29, %struct.ignore_pattern** %next, align 8, !dbg !3083, !tbaa !3084, !ctir !499
  %31 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3085, !tbaa !2474
  store %struct.ignore_pattern* %31, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !3086, !tbaa !2474
  br label %sw.epilog182, !dbg !3087

sw.bb111:                                         ; preds = %if.end49
  %32 = load i8*, i8** @optarg, align 8, !dbg !3088, !tbaa !2474
  %33 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3088, !tbaa !2474
  %call112 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i8* %32, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @sort_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @sort_types to i8*), i64 4, void ()* %33), !dbg !3088
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @sort_types, i64 0, i64 %call112, !dbg !3088, !ctir !516
  %34 = load i32, i32* %arrayidx, align 4, !dbg !3088, !tbaa !2529
  store i32 %34, i32* @sort_type, align 4, !dbg !3089, !tbaa !2529
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3090, !tbaa !2493
  br label %sw.epilog182, !dbg !3091

sw.bb113:                                         ; preds = %if.end49
  store i8 1, i8* @directories_first, align 1, !dbg !3092, !tbaa !2493
  br label %sw.epilog182, !dbg !3093

sw.bb114:                                         ; preds = %if.end49
  %35 = load i8*, i8** @optarg, align 8, !dbg !3094, !tbaa !2474
  %36 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3094, !tbaa !2474
  %call115 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i8* %35, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @time_types to i8*), i64 4, void ()* %36), !dbg !3094
  %arrayidx116 = getelementptr inbounds [5 x i32], [5 x i32]* @time_types, i64 0, i64 %call115, !dbg !3094, !ctir !525
  %37 = load i32, i32* %arrayidx116, align 4, !dbg !3094, !tbaa !2529
  store i32 %37, i32* @time_type, align 4, !dbg !3095, !tbaa !2529
  br label %sw.epilog182, !dbg !3096

sw.bb117:                                         ; preds = %if.end49
  %38 = load i8*, i8** @optarg, align 8, !dbg !3097, !tbaa !2474
  %39 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3097, !tbaa !2474
  %call118 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), i8* %38, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @format_args, i64 0, i64 0), i8* bitcast ([7 x i32]* @format_types to i8*), i64 4, void ()* %39), !dbg !3097
  %arrayidx119 = getelementptr inbounds [7 x i32], [7 x i32]* @format_types, i64 0, i64 %call118, !dbg !3097, !ctir !527
  %40 = load i32, i32* %arrayidx119, align 4, !dbg !3097, !tbaa !2529
  store i32 %40, i32* @format, align 4, !dbg !3098, !tbaa !2529
  br label %sw.epilog182, !dbg !3099

sw.bb120:                                         ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !3100, !tbaa !2529
  %call121 = call i8* @bad_cast(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)), !dbg !3101
  store i8* %call121, i8** %time_style_option, align 8, !dbg !3102, !tbaa !2474
  br label %sw.epilog182, !dbg !3103

sw.bb122:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3104, metadata !DIExpression()), !dbg !3106
  %41 = load i8*, i8** @optarg, align 8, !dbg !3107, !tbaa !2474
  %tobool123 = icmp ne i8* %41, null, !dbg !3107
  br i1 %tobool123, label %if.then124, label %if.else127, !dbg !3109

if.then124:                                       ; preds = %sw.bb122
  %42 = load i8*, i8** @optarg, align 8, !dbg !3110, !tbaa !2474
  %43 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3110, !tbaa !2474
  %call125 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %42, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %43), !dbg !3110
  %arrayidx126 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call125, !dbg !3110, !ctir !534
  %44 = load i32, i32* %arrayidx126, align 4, !dbg !3110, !tbaa !2529
  store i32 %44, i32* %i, align 4, !dbg !3111, !tbaa !2468
  br label %if.end128, !dbg !3112

if.else127:                                       ; preds = %sw.bb122
  store i32 1, i32* %i, align 4, !dbg !3113, !tbaa !2468
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then124
  %45 = load i32, i32* %i, align 4, !dbg !3114, !tbaa !2468
  %cmp129 = icmp eq i32 %45, 1, !dbg !3115
  br i1 %cmp129, label %lor.end, label %lor.rhs, !dbg !3116

lor.rhs:                                          ; preds = %if.end128
  %46 = load i32, i32* %i, align 4, !dbg !3117, !tbaa !2468
  %cmp131 = icmp eq i32 %46, 2, !dbg !3118
  br i1 %cmp131, label %land.rhs, label %land.end, !dbg !3119

land.rhs:                                         ; preds = %lor.rhs
  %call133 = call i32 @isatty(i32 1) #13, !dbg !3120
  %tobool134 = icmp ne i32 %call133, 0, !dbg !3119
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %47 = phi i1 [ false, %lor.rhs ], [ %tobool134, %land.rhs ], !dbg !3121
  br label %lor.end, !dbg !3116

lor.end:                                          ; preds = %land.end, %if.end128
  %48 = phi i1 [ true, %if.end128 ], [ %47, %land.end ]
  %frombool = zext i1 %48 to i8, !dbg !3122
  store i8 %frombool, i8* @print_with_color, align 1, !dbg !3122, !tbaa !2493
  %49 = load i8, i8* @print_with_color, align 1, !dbg !3123, !tbaa !2493
  %tobool135 = trunc i8 %49 to i1, !dbg !3123
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !3125

if.then136:                                       ; preds = %lor.end
  store i64 0, i64* @tabsize, align 8, !dbg !3126, !tbaa !2611
  br label %if.end137, !dbg !3128

if.end137:                                        ; preds = %if.then136, %lor.end
  br label %sw.epilog182, !dbg !3129

sw.bb138:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i139, metadata !3130, metadata !DIExpression()), !dbg !3132
  %50 = load i8*, i8** @optarg, align 8, !dbg !3133, !tbaa !2474
  %tobool140 = icmp ne i8* %50, null, !dbg !3133
  br i1 %tobool140, label %if.then141, label %if.else144, !dbg !3135

if.then141:                                       ; preds = %sw.bb138
  %51 = load i8*, i8** @optarg, align 8, !dbg !3136, !tbaa !2474
  %52 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3136, !tbaa !2474
  %call142 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i8* %51, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %52), !dbg !3136
  %arrayidx143 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call142, !dbg !3136, !ctir !534
  %53 = load i32, i32* %arrayidx143, align 4, !dbg !3136, !tbaa !2529
  store i32 %53, i32* %i139, align 4, !dbg !3137, !tbaa !2468
  br label %if.end145, !dbg !3138

if.else144:                                       ; preds = %sw.bb138
  store i32 1, i32* %i139, align 4, !dbg !3139, !tbaa !2468
  br label %if.end145

if.end145:                                        ; preds = %if.else144, %if.then141
  %54 = load i32, i32* %i139, align 4, !dbg !3140, !tbaa !2468
  %cmp146 = icmp eq i32 %54, 1, !dbg !3141
  br i1 %cmp146, label %lor.end155, label %lor.rhs148, !dbg !3142

lor.rhs148:                                       ; preds = %if.end145
  %55 = load i32, i32* %i139, align 4, !dbg !3143, !tbaa !2468
  %cmp149 = icmp eq i32 %55, 2, !dbg !3144
  br i1 %cmp149, label %land.rhs151, label %land.end154, !dbg !3145

land.rhs151:                                      ; preds = %lor.rhs148
  %call152 = call i32 @isatty(i32 1) #13, !dbg !3146
  %tobool153 = icmp ne i32 %call152, 0, !dbg !3145
  br label %land.end154

land.end154:                                      ; preds = %land.rhs151, %lor.rhs148
  %56 = phi i1 [ false, %lor.rhs148 ], [ %tobool153, %land.rhs151 ], !dbg !3147
  br label %lor.end155, !dbg !3142

lor.end155:                                       ; preds = %land.end154, %if.end145
  %57 = phi i1 [ true, %if.end145 ], [ %56, %land.end154 ]
  %frombool156 = zext i1 %57 to i8, !dbg !3148
  store i8 %frombool156, i8* @print_hyperlink, align 1, !dbg !3148, !tbaa !2493
  br label %sw.epilog182, !dbg !3149

sw.bb157:                                         ; preds = %if.end49
  %58 = load i8*, i8** @optarg, align 8, !dbg !3150, !tbaa !2474
  %59 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3150, !tbaa !2474
  %call158 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8* %58, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @indicator_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @indicator_style_types to i8*), i64 4, void ()* %59), !dbg !3150
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* @indicator_style_types, i64 0, i64 %call158, !dbg !3150, !ctir !541
  %60 = load i32, i32* %arrayidx159, align 4, !dbg !3150, !tbaa !2529
  store i32 %60, i32* @indicator_style, align 4, !dbg !3151, !tbaa !2529
  br label %sw.epilog182, !dbg !3152

sw.bb160:                                         ; preds = %if.end49
  %61 = load i8*, i8** @optarg, align 8, !dbg !3153, !tbaa !2474
  %62 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3153, !tbaa !2474
  %call161 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0), i8* %61, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4, void ()* %62), !dbg !3153
  %arrayidx162 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %call161, !dbg !3153, !ctir !546
  %63 = load i32, i32* %arrayidx162, align 4, !dbg !3153, !tbaa !2529
  call void @set_quoting_style(%struct.quoting_options* null, i32 %63), !dbg !3154
  br label %sw.epilog182, !dbg !3155

sw.bb163:                                         ; preds = %if.end49
  %64 = load i8*, i8** @optarg, align 8, !dbg !3156, !tbaa !2474
  store i8* %64, i8** %time_style_option, align 8, !dbg !3157, !tbaa !2474
  br label %sw.epilog182, !dbg !3158

sw.bb164:                                         ; preds = %if.end49
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !3159, !tbaa !2493
  br label %sw.epilog182, !dbg !3160

sw.bb165:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3161, metadata !DIExpression()), !dbg !3163
  %65 = load i8*, i8** @optarg, align 8, !dbg !3164, !tbaa !2474
  %call166 = call i32 @human_options(i8* %65, i32* @human_output_opts, i64* @output_block_size), !dbg !3165
  store i32 %call166, i32* %e, align 4, !dbg !3163, !tbaa !2529
  %66 = load i32, i32* %e, align 4, !dbg !3166, !tbaa !2529
  %cmp167 = icmp ne i32 %66, 0, !dbg !3168
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !3169

if.then169:                                       ; preds = %sw.bb165
  %67 = load i32, i32* %e, align 4, !dbg !3170, !tbaa !2529
  %68 = load i32, i32* %oi, align 4, !dbg !3171, !tbaa !2468
  %69 = load i8*, i8** @optarg, align 8, !dbg !3172, !tbaa !2474
  call void @xstrtol_fatal(i32 %67, i32 %68, i8 signext 0, %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i8* %69) #14, !dbg !3173
  unreachable, !dbg !3173

if.end170:                                        ; preds = %sw.bb165
  %70 = load i32, i32* @human_output_opts, align 4, !dbg !3174, !tbaa !2468
  store i32 %70, i32* @file_human_output_opts, align 4, !dbg !3175, !tbaa !2468
  %71 = load i64, i64* @output_block_size, align 8, !dbg !3176, !tbaa !2611
  store i64 %71, i64* @file_output_block_size, align 8, !dbg !3177, !tbaa !2611
  br label %sw.epilog182, !dbg !3178

sw.bb171:                                         ; preds = %if.end49
  store i32 144, i32* @human_output_opts, align 4, !dbg !3179, !tbaa !2468
  store i32 144, i32* @file_human_output_opts, align 4, !dbg !3180, !tbaa !2468
  store i64 1, i64* @output_block_size, align 8, !dbg !3181, !tbaa !2611
  store i64 1, i64* @file_output_block_size, align 8, !dbg !3182, !tbaa !2611
  br label %sw.epilog182, !dbg !3183

sw.bb172:                                         ; preds = %if.end49
  store i8 1, i8* @print_scontext, align 1, !dbg !3184, !tbaa !2493
  br label %sw.epilog182, !dbg !3185

sw.bb173:                                         ; preds = %if.end49
  call void @usage(i32 0) #14, !dbg !3186
  unreachable, !dbg !3186

sw.bb174:                                         ; preds = %if.end49
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3187, !tbaa !2474
  %73 = load i32, i32* @ls_mode, align 4, !dbg !3187, !tbaa !2468
  %cmp175 = icmp eq i32 %73, 1, !dbg !3187
  br i1 %cmp175, label %cond.true, label %cond.false, !dbg !3187

cond.true:                                        ; preds = %sw.bb174
  br label %cond.end, !dbg !3187

cond.false:                                       ; preds = %sw.bb174
  %74 = load i32, i32* @ls_mode, align 4, !dbg !3187, !tbaa !2468
  %cmp177 = icmp eq i32 %74, 2, !dbg !3187
  %75 = zext i1 %cmp177 to i64, !dbg !3187
  %cond179 = select i1 %cmp177, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !3187
  br label %cond.end, !dbg !3187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond180 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond179, %cond.false ], !dbg !3187
  %76 = load i8*, i8** @Version, align 8, !dbg !3187, !tbaa !2474
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %72, i8* %cond180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* %76, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8* null), !dbg !3187
  call void @exit(i32 0) #15, !dbg !3187
  unreachable, !dbg !3187

sw.default181:                                    ; preds = %if.end49
  call void @usage(i32 2) #14, !dbg !3188
  unreachable, !dbg !3188

sw.epilog182:                                     ; preds = %sw.bb172, %sw.bb171, %if.end170, %sw.bb164, %sw.bb163, %sw.bb160, %sw.bb157, %lor.end155, %if.end137, %sw.bb120, %sw.bb117, %sw.bb114, %sw.bb113, %sw.bb111, %sw.bb109, %sw.bb108, %if.end107, %sw.bb102, %sw.bb101, %sw.bb98, %sw.bb97, %sw.bb96, %sw.bb95, %sw.bb94, %sw.bb93, %sw.bb92, %sw.bb91, %sw.bb90, %sw.bb89, %sw.bb88, %sw.bb87, %sw.bb86, %sw.bb85, %sw.bb84, %sw.bb83, %if.end82, %sw.bb76, %sw.bb75, %sw.bb74, %sw.bb73, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %if.end60, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50
  br label %while.body, !dbg !2932, !llvm.loop !3189

while.end:                                        ; preds = %if.then48
  %77 = load i64, i64* @output_block_size, align 8, !dbg !3191, !tbaa !2611
  %tobool183 = icmp ne i64 %77, 0, !dbg !3191
  br i1 %tobool183, label %if.end195, label %if.then184, !dbg !3193

if.then184:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %ls_block_size, metadata !3194, metadata !DIExpression()), !dbg !3196
  %call185 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i64 0, i64 0)) #13, !dbg !3197
  store i8* %call185, i8** %ls_block_size, align 8, !dbg !3196, !tbaa !2474
  %78 = load i8*, i8** %ls_block_size, align 8, !dbg !3198, !tbaa !2474
  %call186 = call i32 @human_options(i8* %78, i32* @human_output_opts, i64* @output_block_size), !dbg !3199
  %79 = load i8*, i8** %ls_block_size, align 8, !dbg !3200, !tbaa !2474
  %tobool187 = icmp ne i8* %79, null, !dbg !3200
  br i1 %tobool187, label %if.then190, label %lor.lhs.false, !dbg !3202

lor.lhs.false:                                    ; preds = %if.then184
  %call188 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0)) #13, !dbg !3203
  %tobool189 = icmp ne i8* %call188, null, !dbg !3203
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !3204

if.then190:                                       ; preds = %lor.lhs.false, %if.then184
  %80 = load i32, i32* @human_output_opts, align 4, !dbg !3205, !tbaa !2468
  store i32 %80, i32* @file_human_output_opts, align 4, !dbg !3207, !tbaa !2468
  %81 = load i64, i64* @output_block_size, align 8, !dbg !3208, !tbaa !2611
  store i64 %81, i64* @file_output_block_size, align 8, !dbg !3209, !tbaa !2611
  br label %if.end191, !dbg !3210

if.end191:                                        ; preds = %if.then190, %lor.lhs.false
  %82 = load i8, i8* %kibibytes_specified, align 1, !dbg !3211, !tbaa !2493
  %tobool192 = trunc i8 %82 to i1, !dbg !3211
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !3213

if.then193:                                       ; preds = %if.end191
  store i32 0, i32* @human_output_opts, align 4, !dbg !3214, !tbaa !2468
  store i64 1024, i64* @output_block_size, align 8, !dbg !3216, !tbaa !2611
  br label %if.end194, !dbg !3217

if.end194:                                        ; preds = %if.then193, %if.end191
  br label %if.end195, !dbg !3218

if.end195:                                        ; preds = %if.end194, %while.end
  %83 = load i64, i64* @line_length, align 8, !dbg !3219, !tbaa !2611
  %div = udiv i64 %83, 3, !dbg !3220
  store i64 %div, i64* @max_idx, align 8, !dbg !3221, !tbaa !2611
  %84 = load i64, i64* @line_length, align 8, !dbg !3222, !tbaa !2611
  %rem = urem i64 %84, 3, !dbg !3223
  %cmp196 = icmp ne i64 %rem, 0, !dbg !3224
  %conv197 = zext i1 %cmp196 to i32, !dbg !3224
  %conv198 = sext i32 %conv197 to i64, !dbg !3222
  %85 = load i64, i64* @max_idx, align 8, !dbg !3225, !tbaa !2611
  %add = add i64 %85, %conv198, !dbg !3225
  store i64 %add, i64* @max_idx, align 8, !dbg !3225, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !3226, metadata !DIExpression()), !dbg !3227
  %call199 = call i32 @get_quoting_style(%struct.quoting_options* null), !dbg !3228
  store i32 %call199, i32* %qs, align 4, !dbg !3227, !tbaa !2529
  %86 = load i32, i32* @format, align 4, !dbg !3229, !tbaa !2529
  %cmp200 = icmp ne i32 %86, 4, !dbg !3230
  br i1 %cmp200, label %land.lhs.true202, label %land.end220, !dbg !3231

land.lhs.true202:                                 ; preds = %if.end195
  %87 = load i32, i32* @format, align 4, !dbg !3232, !tbaa !2529
  %cmp203 = icmp ne i32 %87, 1, !dbg !3233
  br i1 %cmp203, label %land.lhs.true205, label %land.end220, !dbg !3234

land.lhs.true205:                                 ; preds = %land.lhs.true202
  %88 = load i64, i64* @line_length, align 8, !dbg !3235, !tbaa !2611
  %tobool206 = icmp ne i64 %88, 0, !dbg !3235
  br i1 %tobool206, label %land.rhs210, label %lor.lhs.false207, !dbg !3236

lor.lhs.false207:                                 ; preds = %land.lhs.true205
  %89 = load i32, i32* @format, align 4, !dbg !3237, !tbaa !2529
  %cmp208 = icmp eq i32 %89, 0, !dbg !3238
  br i1 %cmp208, label %land.rhs210, label %land.end220, !dbg !3239

land.rhs210:                                      ; preds = %lor.lhs.false207, %land.lhs.true205
  %90 = load i32, i32* %qs, align 4, !dbg !3240, !tbaa !2529
  %cmp211 = icmp eq i32 %90, 1, !dbg !3241
  br i1 %cmp211, label %lor.end219, label %lor.lhs.false213, !dbg !3242

lor.lhs.false213:                                 ; preds = %land.rhs210
  %91 = load i32, i32* %qs, align 4, !dbg !3243, !tbaa !2529
  %cmp214 = icmp eq i32 %91, 3, !dbg !3244
  br i1 %cmp214, label %lor.end219, label %lor.rhs216, !dbg !3245

lor.rhs216:                                       ; preds = %lor.lhs.false213
  %92 = load i32, i32* %qs, align 4, !dbg !3246, !tbaa !2529
  %cmp217 = icmp eq i32 %92, 6, !dbg !3247
  br label %lor.end219, !dbg !3245

lor.end219:                                       ; preds = %lor.rhs216, %lor.lhs.false213, %land.rhs210
  %93 = phi i1 [ true, %lor.lhs.false213 ], [ true, %land.rhs210 ], [ %cmp217, %lor.rhs216 ]
  br label %land.end220

land.end220:                                      ; preds = %lor.end219, %lor.lhs.false207, %land.lhs.true202, %if.end195
  %94 = phi i1 [ false, %lor.lhs.false207 ], [ false, %land.lhs.true202 ], [ false, %if.end195 ], [ %93, %lor.end219 ], !dbg !3248
  %frombool221 = zext i1 %94 to i8, !dbg !3249
  store i8 %frombool221, i8* @align_variable_outer_quotes, align 1, !dbg !3249, !tbaa !2493
  %call222 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !3250
  store %struct.quoting_options* %call222, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3251, !tbaa !2474
  %95 = load i32, i32* %qs, align 4, !dbg !3252, !tbaa !2529
  %cmp223 = icmp eq i32 %95, 7, !dbg !3254
  br i1 %cmp223, label %if.then225, label %if.end227, !dbg !3255

if.then225:                                       ; preds = %land.end220
  %96 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3256, !tbaa !2474
  %call226 = call i32 @set_char_quoting(%struct.quoting_options* %96, i8 signext 32, i32 1), !dbg !3257
  br label %if.end227, !dbg !3257

if.end227:                                        ; preds = %if.then225, %land.end220
  %97 = load i32, i32* @indicator_style, align 4, !dbg !3258, !tbaa !2529
  %cmp228 = icmp ule i32 2, %97, !dbg !3260
  br i1 %cmp228, label %if.then230, label %if.end235, !dbg !3261

if.then230:                                       ; preds = %if.end227
  call void @llvm.dbg.declare(metadata i8** %p231, metadata !3262, metadata !DIExpression()), !dbg !3264
  %98 = load i32, i32* @indicator_style, align 4, !dbg !3265, !tbaa !2529
  %sub = sub i32 %98, 2, !dbg !3267
  %idxprom = zext i32 %sub to i64, !dbg !3268
  %arrayidx232 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.86, i64 0, i64 %idxprom, !dbg !3268, !ctir !548
  store i8* %arrayidx232, i8** %p231, align 8, !dbg !3269, !tbaa !2474
  br label %for.cond, !dbg !3270

for.cond:                                         ; preds = %for.inc, %if.then230
  %99 = load i8*, i8** %p231, align 8, !dbg !3271, !tbaa !2474
  %100 = load i8, i8* %99, align 1, !dbg !3273, !tbaa !2529, !ctir !147
  %tobool233 = icmp ne i8 %100, 0, !dbg !3274
  br i1 %tobool233, label %for.body, label %for.end, !dbg !3274

for.body:                                         ; preds = %for.cond
  %101 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3275, !tbaa !2474
  %102 = load i8*, i8** %p231, align 8, !dbg !3276, !tbaa !2474
  %103 = load i8, i8* %102, align 1, !dbg !3277, !tbaa !2529, !ctir !147
  %call234 = call i32 @set_char_quoting(%struct.quoting_options* %101, i8 signext %103, i32 1), !dbg !3278
  br label %for.inc, !dbg !3278

for.inc:                                          ; preds = %for.body
  %104 = load i8*, i8** %p231, align 8, !dbg !3279, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %104, i32 1, !dbg !3279
  store i8* %incdec.ptr, i8** %p231, align 8, !dbg !3279, !tbaa !2474
  br label %for.cond, !dbg !3280, !llvm.loop !3281

for.end:                                          ; preds = %for.cond
  br label %if.end235, !dbg !3283

if.end235:                                        ; preds = %for.end, %if.end227
  %call236 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !3284
  store %struct.quoting_options* %call236, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !3285, !tbaa !2474
  %105 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !3286, !tbaa !2474
  %call237 = call i32 @set_char_quoting(%struct.quoting_options* %105, i8 signext 58, i32 1), !dbg !3287
  %106 = load i8, i8* @dired, align 1, !dbg !3288, !tbaa !2493
  %tobool238 = trunc i8 %106 to i1, !dbg !3288
  br i1 %tobool238, label %land.lhs.true240, label %if.end247, !dbg !3290

land.lhs.true240:                                 ; preds = %if.end235
  %107 = load i32, i32* @format, align 4, !dbg !3291, !tbaa !2529
  %cmp241 = icmp ne i32 %107, 0, !dbg !3292
  br i1 %cmp241, label %if.then246, label %lor.lhs.false243, !dbg !3293

lor.lhs.false243:                                 ; preds = %land.lhs.true240
  %108 = load i8, i8* @print_hyperlink, align 1, !dbg !3294, !tbaa !2493
  %tobool244 = trunc i8 %108 to i1, !dbg !3294
  br i1 %tobool244, label %if.then246, label %if.end247, !dbg !3295

if.then246:                                       ; preds = %lor.lhs.false243, %land.lhs.true240
  store i8 0, i8* @dired, align 1, !dbg !3296, !tbaa !2493
  br label %if.end247, !dbg !3297

if.end247:                                        ; preds = %if.then246, %lor.lhs.false243, %if.end235
  %109 = load i32, i32* @time_type, align 4, !dbg !3298, !tbaa !2529
  %cmp248 = icmp eq i32 %109, 1, !dbg !3300
  br i1 %cmp248, label %land.lhs.true253, label %lor.lhs.false250, !dbg !3301

lor.lhs.false250:                                 ; preds = %if.end247
  %110 = load i32, i32* @time_type, align 4, !dbg !3302, !tbaa !2529
  %cmp251 = icmp eq i32 %110, 2, !dbg !3303
  br i1 %cmp251, label %land.lhs.true253, label %if.end259, !dbg !3304

land.lhs.true253:                                 ; preds = %lor.lhs.false250, %if.end247
  %111 = load i8, i8* %sort_type_specified, align 1, !dbg !3305, !tbaa !2493
  %tobool254 = trunc i8 %111 to i1, !dbg !3305
  br i1 %tobool254, label %if.end259, label %land.lhs.true255, !dbg !3306

land.lhs.true255:                                 ; preds = %land.lhs.true253
  %112 = load i32, i32* @format, align 4, !dbg !3307, !tbaa !2529
  %cmp256 = icmp ne i32 %112, 0, !dbg !3308
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !3309

if.then258:                                       ; preds = %land.lhs.true255
  store i32 4, i32* @sort_type, align 4, !dbg !3310, !tbaa !2529
  br label %if.end259, !dbg !3312

if.end259:                                        ; preds = %if.then258, %land.lhs.true255, %land.lhs.true253, %lor.lhs.false250
  %113 = load i32, i32* @format, align 4, !dbg !3313, !tbaa !2529
  %cmp260 = icmp eq i32 %113, 0, !dbg !3315
  br i1 %cmp260, label %if.then262, label %if.end335, !dbg !3316

if.then262:                                       ; preds = %if.end259
  call void @llvm.dbg.declare(metadata i8** %style, metadata !3317, metadata !DIExpression()), !dbg !3319
  %114 = load i8*, i8** %time_style_option, align 8, !dbg !3320, !tbaa !2474
  store i8* %114, i8** %style, align 8, !dbg !3319, !tbaa !2474
  %115 = load i8*, i8** %style, align 8, !dbg !3321, !tbaa !2474
  %tobool263 = icmp ne i8* %115, null, !dbg !3321
  br i1 %tobool263, label %if.end270, label %if.then264, !dbg !3323

if.then264:                                       ; preds = %if.then262
  %call265 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #13, !dbg !3324
  store i8* %call265, i8** %style, align 8, !dbg !3326, !tbaa !2474
  %tobool266 = icmp ne i8* %call265, null, !dbg !3326
  br i1 %tobool266, label %if.end269, label %if.then267, !dbg !3327

if.then267:                                       ; preds = %if.then264
  %call268 = call i8* @bad_cast(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0)), !dbg !3328
  store i8* %call268, i8** %style, align 8, !dbg !3329, !tbaa !2474
  br label %if.end269, !dbg !3330

if.end269:                                        ; preds = %if.then267, %if.then264
  br label %if.end270, !dbg !3331

if.end270:                                        ; preds = %if.end269, %if.then262
  br label %while.cond, !dbg !3332

while.cond:                                       ; preds = %if.end277, %if.end270
  %116 = load i8*, i8** %style, align 8, !dbg !3333, !tbaa !2474
  %call271 = call i32 @strncmp(i8* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @decode_switches.posix_prefix, i64 0, i64 0), i64 6) #16, !dbg !3333
  %cmp272 = icmp eq i32 %call271, 0, !dbg !3333
  br i1 %cmp272, label %while.body274, label %while.end278, !dbg !3332

while.body274:                                    ; preds = %while.cond
  %call275 = call zeroext i1 @hard_locale(i32 2), !dbg !3334
  br i1 %call275, label %if.end277, label %if.then276, !dbg !3337

if.then276:                                       ; preds = %while.body274
  %117 = load i32, i32* @optind, align 4, !dbg !3338, !tbaa !2468
  store i32 %117, i32* %retval, align 4, !dbg !3339
  br label %return, !dbg !3339

if.end277:                                        ; preds = %while.body274
  %118 = load i8*, i8** %style, align 8, !dbg !3340, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %118, i64 6, !dbg !3340
  store i8* %add.ptr, i8** %style, align 8, !dbg !3340, !tbaa !2474
  br label %while.cond, !dbg !3332, !llvm.loop !3341

while.end278:                                     ; preds = %while.cond
  %119 = load i8*, i8** %style, align 8, !dbg !3343, !tbaa !2474
  %120 = load i8, i8* %119, align 1, !dbg !3345, !tbaa !2529, !ctir !144
  %conv279 = sext i8 %120 to i32, !dbg !3345
  %cmp280 = icmp eq i32 %conv279, 43, !dbg !3346
  br i1 %cmp280, label %if.then282, label %if.else297, !dbg !3347

if.then282:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3348, metadata !DIExpression()), !dbg !3350
  %121 = load i8*, i8** %style, align 8, !dbg !3351, !tbaa !2474
  %add.ptr283 = getelementptr inbounds i8, i8* %121, i64 1, !dbg !3352
  store i8* %add.ptr283, i8** %p0, align 8, !dbg !3350, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !3353, metadata !DIExpression()), !dbg !3354
  %122 = load i8*, i8** %p0, align 8, !dbg !3355, !tbaa !2474
  %call284 = call i8* @strchr(i8* %122, i32 10) #16, !dbg !3356
  store i8* %call284, i8** %p1, align 8, !dbg !3354, !tbaa !2474
  %123 = load i8*, i8** %p1, align 8, !dbg !3357, !tbaa !2474
  %tobool285 = icmp ne i8* %123, null, !dbg !3357
  br i1 %tobool285, label %if.else287, label %if.then286, !dbg !3359

if.then286:                                       ; preds = %if.then282
  %124 = load i8*, i8** %p0, align 8, !dbg !3360, !tbaa !2474
  store i8* %124, i8** %p1, align 8, !dbg !3361, !tbaa !2474
  br label %if.end296, !dbg !3362

if.else287:                                       ; preds = %if.then282
  %125 = load i8*, i8** %p1, align 8, !dbg !3363, !tbaa !2474
  %add.ptr288 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !3366
  %call289 = call i8* @strchr(i8* %add.ptr288, i32 10) #16, !dbg !3367
  %tobool290 = icmp ne i8* %call289, null, !dbg !3367
  br i1 %tobool290, label %if.then291, label %if.end294, !dbg !3368

if.then291:                                       ; preds = %if.else287
  %call292 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i64 0, i64 0)) #13, !dbg !3369
  %126 = load i8*, i8** %p0, align 8, !dbg !3369, !tbaa !2474
  %call293 = call i8* @quote(i8* %126), !dbg !3369
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call292, i8* %call293), !dbg !3369
  unreachable, !dbg !3369

if.end294:                                        ; preds = %if.else287
  %127 = load i8*, i8** %p1, align 8, !dbg !3370, !tbaa !2474
  %incdec.ptr295 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !3370
  store i8* %incdec.ptr295, i8** %p1, align 8, !dbg !3370, !tbaa !2474
  store i8 0, i8* %127, align 1, !dbg !3371, !tbaa !2529, !ctir !144
  br label %if.end296

if.end296:                                        ; preds = %if.end294, %if.then286
  %128 = load i8*, i8** %p0, align 8, !dbg !3372, !tbaa !2474
  store i8* %128, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3373, !tbaa !2474
  %129 = load i8*, i8** %p1, align 8, !dbg !3374, !tbaa !2474
  store i8* %129, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3375, !tbaa !2474
  br label %if.end334, !dbg !3376

if.else297:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i64* %res, metadata !3377, metadata !DIExpression()), !dbg !3379
  %130 = load i8*, i8** %style, align 8, !dbg !3380, !tbaa !2474
  %call298 = call i64 @argmatch(i8* %130, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @time_style_types to i8*), i64 4) #16, !dbg !3381
  store i64 %call298, i64* %res, align 8, !dbg !3379, !tbaa !2611
  %131 = load i64, i64* %res, align 8, !dbg !3382, !tbaa !2611
  %cmp299 = icmp slt i64 %131, 0, !dbg !3384
  br i1 %cmp299, label %if.then301, label %if.end313, !dbg !3385

if.then301:                                       ; preds = %if.else297
  %132 = load i8*, i8** %style, align 8, !dbg !3386, !tbaa !2474
  %133 = load i64, i64* %res, align 8, !dbg !3388, !tbaa !2611
  call void @argmatch_invalid(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i8* %132, i64 %133), !dbg !3389
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0)) #13, !dbg !3390
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3390, !tbaa !2474
  %call303 = call i32 @fputs_unlocked(i8* %call302, %struct._IO_FILE* %134), !dbg !3390
  call void @llvm.dbg.declare(metadata i8*** %p304, metadata !3391, metadata !DIExpression()), !dbg !3392
  store i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8*** %p304, align 8, !dbg !3392, !tbaa !2474
  br label %while.cond305, !dbg !3393

while.cond305:                                    ; preds = %while.body307, %if.then301
  %135 = load i8**, i8*** %p304, align 8, !dbg !3394, !tbaa !2474
  %136 = load i8*, i8** %135, align 8, !dbg !3395, !tbaa !2474, !ctir !320
  %tobool306 = icmp ne i8* %136, null, !dbg !3393
  br i1 %tobool306, label %while.body307, label %while.end310, !dbg !3393

while.body307:                                    ; preds = %while.cond305
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3396, !tbaa !2474
  %138 = load i8**, i8*** %p304, align 8, !dbg !3397, !tbaa !2474
  %incdec.ptr308 = getelementptr inbounds i8*, i8** %138, i32 1, !dbg !3397
  store i8** %incdec.ptr308, i8*** %p304, align 8, !dbg !3397, !tbaa !2474
  %139 = load i8*, i8** %138, align 8, !dbg !3398, !tbaa !2474, !ctir !320
  %call309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0), i8* %139), !dbg !3399
  br label %while.cond305, !dbg !3393, !llvm.loop !3400

while.end310:                                     ; preds = %while.cond305
  %call311 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.93, i64 0, i64 0)) #13, !dbg !3402
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3402, !tbaa !2474
  %call312 = call i32 @fputs_unlocked(i8* %call311, %struct._IO_FILE* %140), !dbg !3402
  call void @usage(i32 2) #14, !dbg !3403
  unreachable, !dbg !3403

if.end313:                                        ; preds = %if.else297
  %141 = load i64, i64* %res, align 8, !dbg !3404, !tbaa !2611
  switch i64 %141, label %sw.epilog333 [
    i64 0, label %sw.bb314
    i64 1, label %sw.bb315
    i64 2, label %sw.bb316
    i64 3, label %sw.bb317
  ], !dbg !3405

sw.bb314:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3406, !tbaa !2474
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3408, !tbaa !2474
  br label %sw.epilog333, !dbg !3409

sw.bb315:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3410, !tbaa !2474
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3411, !tbaa !2474
  br label %sw.epilog333, !dbg !3412

sw.bb316:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3413, !tbaa !2474
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3414, !tbaa !2474
  br label %sw.epilog333, !dbg !3415

sw.bb317:                                         ; preds = %if.end313
  %call318 = call zeroext i1 @hard_locale(i32 2), !dbg !3416
  br i1 %call318, label %if.then319, label %if.end332, !dbg !3418

if.then319:                                       ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %i320, metadata !3419, metadata !DIExpression()), !dbg !3422
  store i32 0, i32* %i320, align 4, !dbg !3422, !tbaa !2468
  br label %for.cond321, !dbg !3423

for.cond321:                                      ; preds = %for.inc330, %if.then319
  %142 = load i32, i32* %i320, align 4, !dbg !3424, !tbaa !2468
  %cmp322 = icmp slt i32 %142, 2, !dbg !3426
  br i1 %cmp322, label %for.body324, label %for.end331, !dbg !3427

for.body324:                                      ; preds = %for.cond321
  %143 = load i32, i32* %i320, align 4, !dbg !3428, !tbaa !2468
  %idxprom325 = sext i32 %143 to i64, !dbg !3429
  %arrayidx326 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom325, !dbg !3429, !ctir !549
  %144 = load i8*, i8** %arrayidx326, align 8, !dbg !3429, !tbaa !2474
  %call327 = call i8* @dcgettext(i8* null, i8* %144, i32 2) #13, !dbg !3430
  %145 = load i32, i32* %i320, align 4, !dbg !3431, !tbaa !2468
  %idxprom328 = sext i32 %145 to i64, !dbg !3432
  %arrayidx329 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom328, !dbg !3432, !ctir !549
  store i8* %call327, i8** %arrayidx329, align 8, !dbg !3433, !tbaa !2474
  br label %for.inc330, !dbg !3432

for.inc330:                                       ; preds = %for.body324
  %146 = load i32, i32* %i320, align 4, !dbg !3434, !tbaa !2468
  %inc = add nsw i32 %146, 1, !dbg !3434
  store i32 %inc, i32* %i320, align 4, !dbg !3434, !tbaa !2468
  br label %for.cond321, !dbg !3435, !llvm.loop !3436

for.end331:                                       ; preds = %for.cond321
  br label %if.end332, !dbg !3438

if.end332:                                        ; preds = %for.end331, %sw.bb317
  br label %sw.epilog333, !dbg !3439

sw.epilog333:                                     ; preds = %if.end332, %if.end313, %sw.bb316, %sw.bb315, %sw.bb314
  br label %if.end334

if.end334:                                        ; preds = %sw.epilog333, %if.end296
  call void @abformat_init(), !dbg !3440
  br label %if.end335, !dbg !3441

if.end335:                                        ; preds = %if.end334, %if.end259
  %147 = load i32, i32* @optind, align 4, !dbg !3442, !tbaa !2468
  store i32 %147, i32* %retval, align 4, !dbg !3443
  br label %return, !dbg !3443

return:                                           ; preds = %if.end335, %if.then276
  %148 = load i32, i32* %retval, align 4, !dbg !3444
  ret i32 %148, !dbg !3444
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_ls_color() #0 !dbg !3445 !ctir !336 {
entry:
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca i8*, align 8, !ctir !143
  %ind_no = alloca i32, align 4, !ctir !27
  %label = alloca [3 x i8], align 1, !ctir !580
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !581
  %colorterm = alloca i8*, align 8, !ctir !146
  %state = alloca i32, align 4, !ctir !129
  %e = alloca %struct.color_ext_type*, align 8, !ctir !581
  %e2 = alloca %struct.color_ext_type*, align 8, !ctir !581
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3446, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3448, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.declare(metadata i32* %ind_no, metadata !3450, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.declare(metadata [3 x i8]* %label, metadata !3452, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !3454, metadata !DIExpression()), !dbg !3455
  %call = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.172, i64 0, i64 0)) #13, !dbg !3456
  store i8* %call, i8** %p, align 8, !dbg !3458, !tbaa !2474
  %cmp = icmp eq i8* %call, null, !dbg !3459
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3460

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8*, i8** %p, align 8, !dbg !3461, !tbaa !2474
  %1 = load i8, i8* %0, align 1, !dbg !3462, !tbaa !2529, !ctir !147
  %conv = sext i8 %1 to i32, !dbg !3462
  %cmp1 = icmp eq i32 %conv, 0, !dbg !3463
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !3464

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i8** %colorterm, metadata !3465, metadata !DIExpression()), !dbg !3467
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i64 0, i64 0)) #13, !dbg !3468
  store i8* %call3, i8** %colorterm, align 8, !dbg !3467, !tbaa !2474
  %2 = load i8*, i8** %colorterm, align 8, !dbg !3469, !tbaa !2474
  %tobool = icmp ne i8* %2, null, !dbg !3469
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true6, !dbg !3471

land.lhs.true:                                    ; preds = %if.then
  %3 = load i8*, i8** %colorterm, align 8, !dbg !3472, !tbaa !2474
  %4 = load i8, i8* %3, align 1, !dbg !3473, !tbaa !2529, !ctir !147
  %conv4 = sext i8 %4 to i32, !dbg !3473
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !3473
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !3474

land.lhs.true6:                                   ; preds = %land.lhs.true, %if.then
  %call7 = call zeroext i1 @known_term_type(), !dbg !3475
  br i1 %call7, label %if.end, label %if.then8, !dbg !3476

if.then8:                                         ; preds = %land.lhs.true6
  store i8 0, i8* @print_with_color, align 1, !dbg !3477, !tbaa !2493
  br label %if.end, !dbg !3478

if.end:                                           ; preds = %if.then8, %land.lhs.true6, %land.lhs.true
  br label %if.end97, !dbg !3479

if.end9:                                          ; preds = %lor.lhs.false
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !3480, !tbaa !2474
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3481
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0)) #13, !dbg !3482
  %5 = load i8*, i8** %p, align 8, !dbg !3483, !tbaa !2474
  %call11 = call noalias i8* @xstrdup(i8* %5), !dbg !3484
  store i8* %call11, i8** @color_buf, align 8, !dbg !3485, !tbaa !2474
  store i8* %call11, i8** %buf, align 8, !dbg !3486, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %state, metadata !3487, metadata !DIExpression()), !dbg !3488
  store i32 1, i32* %state, align 4, !dbg !3488, !tbaa !2529
  br label %while.body, !dbg !3489

while.body:                                       ; preds = %if.end9, %sw.epilog79
  %6 = load i32, i32* %state, align 4, !dbg !3490, !tbaa !2529
  switch i32 %6, label %sw.default78 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb29
    i32 4, label %sw.bb63
    i32 6, label %sw.bb77
  ], !dbg !3492

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !3493, !tbaa !2474
  %8 = load i8, i8* %7, align 1, !dbg !3495, !tbaa !2529, !ctir !147
  %conv12 = sext i8 %8 to i32, !dbg !3495
  switch i32 %conv12, label %sw.default [
    i32 58, label %sw.bb13
    i32 42, label %sw.bb14
    i32 0, label %sw.bb21
  ], !dbg !3496

sw.bb13:                                          ; preds = %sw.bb
  %9 = load i8*, i8** %p, align 8, !dbg !3497, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !3497
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3497, !tbaa !2474
  br label %sw.epilog, !dbg !3499

sw.bb14:                                          ; preds = %sw.bb
  %call15 = call noalias i8* @xmalloc(i64 40), !dbg !3500
  %10 = bitcast i8* %call15 to %struct.color_ext_type*, !dbg !3500
  store %struct.color_ext_type* %10, %struct.color_ext_type** %ext, align 8, !dbg !3501, !tbaa !2474
  %11 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3502, !tbaa !2474
  %12 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3503, !tbaa !2474
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %12, i32 0, i32 2, !dbg !3504, !ctir !582
  store %struct.color_ext_type* %11, %struct.color_ext_type** %next, align 8, !dbg !3505, !tbaa !3506, !ctir !581
  %13 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3508, !tbaa !2474
  store %struct.color_ext_type* %13, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3509, !tbaa !2474
  %14 = load i8*, i8** %p, align 8, !dbg !3510, !tbaa !2474
  %incdec.ptr16 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !3510
  store i8* %incdec.ptr16, i8** %p, align 8, !dbg !3510, !tbaa !2474
  %15 = load i8*, i8** %buf, align 8, !dbg !3511, !tbaa !2474
  %16 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3512, !tbaa !2474
  %ext17 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %16, i32 0, i32 0, !dbg !3513, !ctir !582
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext17, i32 0, i32 1, !dbg !3514, !ctir !260
  store i8* %15, i8** %string, align 8, !dbg !3515, !tbaa !3516, !ctir !146
  %17 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3517, !tbaa !2474
  %ext18 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %17, i32 0, i32 0, !dbg !3518, !ctir !582
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext18, i32 0, i32 0, !dbg !3519, !ctir !260
  %call19 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext true, i64* %len), !dbg !3520
  %18 = zext i1 %call19 to i64, !dbg !3520
  %cond = select i1 %call19, i32 4, i32 6, !dbg !3520
  store i32 %cond, i32* %state, align 4, !dbg !3521, !tbaa !2529
  br label %sw.epilog, !dbg !3522

sw.bb21:                                          ; preds = %sw.bb
  store i32 5, i32* %state, align 4, !dbg !3523, !tbaa !2529
  br label %done, !dbg !3524

sw.default:                                       ; preds = %sw.bb
  %19 = load i8*, i8** %p, align 8, !dbg !3525, !tbaa !2474
  %incdec.ptr22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !3525
  store i8* %incdec.ptr22, i8** %p, align 8, !dbg !3525, !tbaa !2474
  %20 = load i8, i8* %19, align 1, !dbg !3526, !tbaa !2529, !ctir !147
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3527, !ctir !580
  store i8 %20, i8* %arrayidx, align 1, !dbg !3528, !tbaa !2529
  store i32 2, i32* %state, align 4, !dbg !3529, !tbaa !2529
  br label %sw.epilog, !dbg !3530

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb13
  br label %sw.epilog79, !dbg !3531

sw.bb23:                                          ; preds = %while.body
  %21 = load i8*, i8** %p, align 8, !dbg !3532, !tbaa !2474
  %22 = load i8, i8* %21, align 1, !dbg !3534, !tbaa !2529, !ctir !147
  %tobool24 = icmp ne i8 %22, 0, !dbg !3534
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !3535

if.then25:                                        ; preds = %sw.bb23
  %23 = load i8*, i8** %p, align 8, !dbg !3536, !tbaa !2474
  %incdec.ptr26 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !3536
  store i8* %incdec.ptr26, i8** %p, align 8, !dbg !3536, !tbaa !2474
  %24 = load i8, i8* %23, align 1, !dbg !3538, !tbaa !2529, !ctir !147
  %arrayidx27 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 1, !dbg !3539, !ctir !580
  store i8 %24, i8* %arrayidx27, align 1, !dbg !3540, !tbaa !2529
  store i32 3, i32* %state, align 4, !dbg !3541, !tbaa !2529
  br label %if.end28, !dbg !3542

if.else:                                          ; preds = %sw.bb23
  store i32 6, i32* %state, align 4, !dbg !3543, !tbaa !2529
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %sw.epilog79, !dbg !3544

sw.bb29:                                          ; preds = %while.body
  store i32 6, i32* %state, align 4, !dbg !3545, !tbaa !2529
  %25 = load i8*, i8** %p, align 8, !dbg !3546, !tbaa !2474
  %incdec.ptr30 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !3546
  store i8* %incdec.ptr30, i8** %p, align 8, !dbg !3546, !tbaa !2474
  %26 = load i8, i8* %25, align 1, !dbg !3548, !tbaa !2529, !ctir !147
  %conv31 = sext i8 %26 to i32, !dbg !3548
  %cmp32 = icmp eq i32 %conv31, 61, !dbg !3549
  br i1 %cmp32, label %if.then34, label %if.end62, !dbg !3550

if.then34:                                        ; preds = %sw.bb29
  store i32 0, i32* %ind_no, align 4, !dbg !3551, !tbaa !2468
  br label %for.cond, !dbg !3554

for.cond:                                         ; preds = %for.inc, %if.then34
  %27 = load i32, i32* %ind_no, align 4, !dbg !3555, !tbaa !2468
  %idxprom = sext i32 %27 to i64, !dbg !3557
  %arrayidx35 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom, !dbg !3557, !ctir !587
  %28 = load i8*, i8** %arrayidx35, align 8, !dbg !3557, !tbaa !2474
  %cmp36 = icmp ne i8* %28, null, !dbg !3558
  br i1 %cmp36, label %for.body, label %for.end, !dbg !3559

for.body:                                         ; preds = %for.cond
  %arraydecay38 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3560
  %29 = load i32, i32* %ind_no, align 4, !dbg !3560, !tbaa !2468
  %idxprom39 = sext i32 %29 to i64, !dbg !3560
  %arrayidx40 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom39, !dbg !3560, !ctir !587
  %30 = load i8*, i8** %arrayidx40, align 8, !dbg !3560, !tbaa !2474
  %call41 = call i32 @strcmp(i8* %arraydecay38, i8* %30) #16, !dbg !3560
  %cmp42 = icmp eq i32 %call41, 0, !dbg !3560
  br i1 %cmp42, label %if.then44, label %if.end54, !dbg !3563

if.then44:                                        ; preds = %for.body
  %31 = load i8*, i8** %buf, align 8, !dbg !3564, !tbaa !2474
  %32 = load i32, i32* %ind_no, align 4, !dbg !3566, !tbaa !2468
  %idxprom45 = sext i32 %32 to i64, !dbg !3567
  %arrayidx46 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom45, !dbg !3567, !ctir !259
  %string47 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx46, i32 0, i32 1, !dbg !3568, !ctir !260
  store i8* %31, i8** %string47, align 8, !dbg !3569, !tbaa !2740, !ctir !146
  %33 = load i32, i32* %ind_no, align 4, !dbg !3570, !tbaa !2468
  %idxprom48 = sext i32 %33 to i64, !dbg !3571
  %arrayidx49 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom48, !dbg !3571, !ctir !259
  %len50 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx49, i32 0, i32 0, !dbg !3572, !ctir !260
  %call51 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len50), !dbg !3573
  %34 = zext i1 %call51 to i64, !dbg !3573
  %cond53 = select i1 %call51, i32 1, i32 6, !dbg !3573
  store i32 %cond53, i32* %state, align 4, !dbg !3574, !tbaa !2529
  br label %for.end, !dbg !3575

if.end54:                                         ; preds = %for.body
  br label %for.inc, !dbg !3576

for.inc:                                          ; preds = %if.end54
  %35 = load i32, i32* %ind_no, align 4, !dbg !3577, !tbaa !2468
  %inc = add nsw i32 %35, 1, !dbg !3577
  store i32 %inc, i32* %ind_no, align 4, !dbg !3577, !tbaa !2468
  br label %for.cond, !dbg !3578, !llvm.loop !3579

for.end:                                          ; preds = %if.then44, %for.cond
  %36 = load i32, i32* %state, align 4, !dbg !3581, !tbaa !2529
  %cmp55 = icmp eq i32 %36, 6, !dbg !3583
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !3584

if.then57:                                        ; preds = %for.end
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.175, i64 0, i64 0)) #13, !dbg !3585
  %arraydecay59 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3586
  %call60 = call i8* @quote(i8* %arraydecay59), !dbg !3587
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call58, i8* %call60), !dbg !3588
  br label %if.end61, !dbg !3588

if.end61:                                         ; preds = %if.then57, %for.end
  br label %if.end62, !dbg !3589

if.end62:                                         ; preds = %if.end61, %sw.bb29
  br label %sw.epilog79, !dbg !3590

sw.bb63:                                          ; preds = %while.body
  %37 = load i8*, i8** %p, align 8, !dbg !3591, !tbaa !2474
  %incdec.ptr64 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !3591
  store i8* %incdec.ptr64, i8** %p, align 8, !dbg !3591, !tbaa !2474
  %38 = load i8, i8* %37, align 1, !dbg !3593, !tbaa !2529, !ctir !147
  %conv65 = sext i8 %38 to i32, !dbg !3593
  %cmp66 = icmp eq i32 %conv65, 61, !dbg !3594
  br i1 %cmp66, label %if.then68, label %if.else75, !dbg !3595

if.then68:                                        ; preds = %sw.bb63
  %39 = load i8*, i8** %buf, align 8, !dbg !3596, !tbaa !2474
  %40 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3598, !tbaa !2474
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %40, i32 0, i32 1, !dbg !3599, !ctir !582
  %string69 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq, i32 0, i32 1, !dbg !3600, !ctir !260
  store i8* %39, i8** %string69, align 8, !dbg !3601, !tbaa !3602, !ctir !146
  %41 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3603, !tbaa !2474
  %seq70 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %41, i32 0, i32 1, !dbg !3604, !ctir !582
  %len71 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq70, i32 0, i32 0, !dbg !3605, !ctir !260
  %call72 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len71), !dbg !3606
  %42 = zext i1 %call72 to i64, !dbg !3606
  %cond74 = select i1 %call72, i32 1, i32 6, !dbg !3606
  store i32 %cond74, i32* %state, align 4, !dbg !3607, !tbaa !2529
  br label %if.end76, !dbg !3608

if.else75:                                        ; preds = %sw.bb63
  store i32 6, i32* %state, align 4, !dbg !3609, !tbaa !2529
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then68
  br label %sw.epilog79, !dbg !3610

sw.bb77:                                          ; preds = %while.body
  br label %done, !dbg !3611

sw.default78:                                     ; preds = %while.body
  call void @abort() #15, !dbg !3612
  unreachable, !dbg !3612

sw.epilog79:                                      ; preds = %if.end76, %if.end62, %if.end28, %sw.epilog
  br label %while.body, !dbg !3489, !llvm.loop !3613

done:                                             ; preds = %sw.bb77, %sw.bb21
  call void @llvm.dbg.label(metadata !3615), !dbg !3616
  %43 = load i32, i32* %state, align 4, !dbg !3617, !tbaa !2529
  %cmp80 = icmp eq i32 %43, 6, !dbg !3619
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !3620

if.then82:                                        ; preds = %done
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e, metadata !3621, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e2, metadata !3624, metadata !DIExpression()), !dbg !3625
  %call83 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.176, i64 0, i64 0)) #13, !dbg !3626
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call83), !dbg !3627
  %44 = load i8*, i8** @color_buf, align 8, !dbg !3628, !tbaa !2474
  call void @free(i8* %44) #13, !dbg !3629
  %45 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3630, !tbaa !2474
  store %struct.color_ext_type* %45, %struct.color_ext_type** %e, align 8, !dbg !3632, !tbaa !2474
  br label %for.cond84, !dbg !3633

for.cond84:                                       ; preds = %for.body87, %if.then82
  %46 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3634, !tbaa !2474
  %cmp85 = icmp ne %struct.color_ext_type* %46, null, !dbg !3636
  br i1 %cmp85, label %for.body87, label %for.end89, !dbg !3637

for.body87:                                       ; preds = %for.cond84
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3638, !tbaa !2474
  store %struct.color_ext_type* %47, %struct.color_ext_type** %e2, align 8, !dbg !3640, !tbaa !2474
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3641, !tbaa !2474
  %next88 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %48, i32 0, i32 2, !dbg !3642, !ctir !582
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %next88, align 8, !dbg !3642, !tbaa !3506, !ctir !581
  store %struct.color_ext_type* %49, %struct.color_ext_type** %e, align 8, !dbg !3643, !tbaa !2474
  %50 = load %struct.color_ext_type*, %struct.color_ext_type** %e2, align 8, !dbg !3644, !tbaa !2474
  %51 = bitcast %struct.color_ext_type* %50 to i8*, !dbg !3644
  call void @free(i8* %51) #13, !dbg !3645
  br label %for.cond84, !dbg !3646, !llvm.loop !3647

for.end89:                                        ; preds = %for.cond84
  store i8 0, i8* @print_with_color, align 1, !dbg !3649, !tbaa !2493
  br label %if.end90, !dbg !3650

if.end90:                                         ; preds = %for.end89, %done
  %52 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 0), align 16, !dbg !3651, !tbaa !2735, !ctir !149
  %cmp91 = icmp eq i64 %52, 6, !dbg !3653
  br i1 %cmp91, label %land.lhs.true93, label %if.end97, !dbg !3654

land.lhs.true93:                                  ; preds = %if.end90
  %53 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 1), align 8, !dbg !3655, !tbaa !2740, !ctir !146
  %call94 = call i32 @strncmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i64 0, i64 0), i64 6) #16, !dbg !3655
  %tobool95 = icmp ne i32 %call94, 0, !dbg !3655
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !3656

if.then96:                                        ; preds = %land.lhs.true93
  store i8 1, i8* @color_symlink_as_referent, align 1, !dbg !3657, !tbaa !2493
  br label %if.end97, !dbg !3658

if.end97:                                         ; preds = %if.end, %if.then96, %land.lhs.true93, %if.end90
  ret void, !dbg !3659
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_colored(i32 %type) #0 !dbg !3660 !ctir !326 {
entry:
  %type.addr = alloca i32, align 4, !ctir !53
  %len = alloca i64, align 8, !ctir !149
  %s = alloca i8*, align 8, !ctir !146
  store i32 %type, i32* %type.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3661, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3663, metadata !DIExpression()), !dbg !3664
  %0 = load i32, i32* %type.addr, align 4, !dbg !3665, !tbaa !2529
  %idxprom = zext i32 %0 to i64, !dbg !3666
  %arrayidx = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom, !dbg !3666, !ctir !259
  %len1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !3667, !ctir !260
  %1 = load i64, i64* %len1, align 16, !dbg !3667, !tbaa !2735, !ctir !149
  store i64 %1, i64* %len, align 8, !dbg !3664, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %s, metadata !3668, metadata !DIExpression()), !dbg !3669
  %2 = load i32, i32* %type.addr, align 4, !dbg !3670, !tbaa !2529
  %idxprom2 = zext i32 %2 to i64, !dbg !3671
  %arrayidx3 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom2, !dbg !3671, !ctir !259
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx3, i32 0, i32 1, !dbg !3672, !ctir !260
  %3 = load i8*, i8** %string, align 8, !dbg !3672, !tbaa !2740, !ctir !146
  store i8* %3, i8** %s, align 8, !dbg !3669, !tbaa !2474
  %4 = load i64, i64* %len, align 8, !dbg !3673, !tbaa !2611
  %cmp = icmp eq i64 %4, 0, !dbg !3674
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !3675

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %len, align 8, !dbg !3676, !tbaa !2611
  %cmp4 = icmp eq i64 %5, 1, !dbg !3677
  br i1 %cmp4, label %land.lhs.true, label %lor.rhs, !dbg !3678

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %s, align 8, !dbg !3679, !tbaa !2474
  %call = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1) #16, !dbg !3679
  %cmp5 = icmp eq i32 %call, 0, !dbg !3680
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3681

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i64, i64* %len, align 8, !dbg !3682, !tbaa !2611
  %cmp6 = icmp eq i64 %7, 2, !dbg !3683
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3684

land.rhs:                                         ; preds = %lor.rhs
  %8 = load i8*, i8** %s, align 8, !dbg !3685, !tbaa !2474
  %call7 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i64 2) #16, !dbg !3685
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3686
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %9 = phi i1 [ false, %lor.rhs ], [ %cmp8, %land.rhs ], !dbg !3687
  br label %lor.end, !dbg !3681

lor.end:                                          ; preds = %land.end, %land.lhs.true, %entry
  %10 = phi i1 [ true, %land.lhs.true ], [ true, %entry ], [ %9, %land.end ]
  %lnot = xor i1 %10, true, !dbg !3688
  ret i1 %lnot, !dbg !3689
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_ino_hash(i8* %x, i64 %table_size) #0 !dbg !3690 !ctir !328 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %table_size.addr = alloca i64, align 8, !ctir !149
  %p = alloca %struct.dev_ino*, align 8, !ctir !330
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3691, metadata !DIExpression()), !dbg !3692
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !3693, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %p, metadata !3695, metadata !DIExpression()), !dbg !3696
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3697, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3697
  store %struct.dev_ino* %1, %struct.dev_ino** %p, align 8, !dbg !3696, !tbaa !2474
  %2 = load %struct.dev_ino*, %struct.dev_ino** %p, align 8, !dbg !3698, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !3699, !ctir !331
  %3 = load i64, i64* %st_ino, align 8, !dbg !3699, !tbaa !3700, !ctir !256
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !3702, !tbaa !2611
  %rem = urem i64 %3, %4, !dbg !3703
  ret i64 %rem, !dbg !3704
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_ino_compare(i8* %x, i8* %y) #0 !dbg !3705 !ctir !332 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %y.addr = alloca i8*, align 8, !ctir !175
  %a = alloca %struct.dev_ino*, align 8, !ctir !330
  %b = alloca %struct.dev_ino*, align 8, !ctir !330
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3706, metadata !DIExpression()), !dbg !3707
  store i8* %y, i8** %y.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !3708, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %a, metadata !3710, metadata !DIExpression()), !dbg !3711
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3712, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3712
  store %struct.dev_ino* %1, %struct.dev_ino** %a, align 8, !dbg !3711, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %b, metadata !3713, metadata !DIExpression()), !dbg !3714
  %2 = load i8*, i8** %y.addr, align 8, !dbg !3715, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.dev_ino*, !dbg !3715
  store %struct.dev_ino* %3, %struct.dev_ino** %b, align 8, !dbg !3714, !tbaa !2474
  %4 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3716, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 0, !dbg !3716, !ctir !331
  %5 = load i64, i64* %st_ino, align 8, !dbg !3716, !tbaa !3700, !ctir !256
  %6 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3716, !tbaa !2474
  %st_ino1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %6, i32 0, i32 0, !dbg !3716, !ctir !331
  %7 = load i64, i64* %st_ino1, align 8, !dbg !3716, !tbaa !3700, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !3716
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3716

land.rhs:                                         ; preds = %entry
  %8 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3716, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %8, i32 0, i32 1, !dbg !3716, !ctir !331
  %9 = load i64, i64* %st_dev, align 8, !dbg !3716, !tbaa !3717, !ctir !258
  %10 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3716, !tbaa !2474
  %st_dev2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %10, i32 0, i32 1, !dbg !3716, !ctir !331
  %11 = load i64, i64* %st_dev2, align 8, !dbg !3716, !tbaa !3717, !ctir !258
  %cmp3 = icmp eq i64 %9, %11, !dbg !3716
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !3718
  %13 = zext i1 %12 to i64, !dbg !3716
  %cond = select i1 %12, i32 1, i32 0, !dbg !3716
  %tobool = icmp ne i32 %cond, 0, !dbg !3716
  ret i1 %tobool, !dbg !3719
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_free(i8* %x) #0 !dbg !3720 !ctir !334 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !167
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3721, metadata !DIExpression()), !dbg !3722
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3723, !tbaa !2474
  call void @free(i8* %0) #13, !dbg !3724
  ret void, !dbg !3725
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_escape_init() #0 !dbg !3726 !ctir !336 {
entry:
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3727, metadata !DIExpression()), !dbg !3729
  store i32 0, i32* %i, align 4, !dbg !3729, !tbaa !2468
  br label %for.cond, !dbg !3730

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3731, !tbaa !2468
  %cmp = icmp slt i32 %0, 256, !dbg !3733
  br i1 %cmp, label %for.body, label %for.end, !dbg !3734

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3735, !tbaa !2468
  %call = call zeroext i1 @c_isalnum(i32 %1), !dbg !3736
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !3737

lor.lhs.false:                                    ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3738, !tbaa !2468
  %cmp1 = icmp eq i32 %2, 126, !dbg !3739
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !3740

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %i, align 4, !dbg !3741, !tbaa !2468
  %cmp3 = icmp eq i32 %3, 45, !dbg !3742
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !3743

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %4 = load i32, i32* %i, align 4, !dbg !3744, !tbaa !2468
  %cmp5 = icmp eq i32 %4, 46, !dbg !3745
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3746

lor.rhs:                                          ; preds = %lor.lhs.false4
  %5 = load i32, i32* %i, align 4, !dbg !3747, !tbaa !2468
  %cmp6 = icmp eq i32 %5, 95, !dbg !3748
  br label %lor.end, !dbg !3746

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %for.body
  %6 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !3746
  %7 = load i32, i32* %i, align 4, !dbg !3749, !tbaa !2468
  %idxprom = sext i32 %7 to i64, !dbg !3750
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !3750, !ctir !338
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3751, !tbaa !2529
  %conv = sext i8 %8 to i32, !dbg !3751
  %or = or i32 %conv, %lor.ext, !dbg !3751
  %conv7 = trunc i32 %or to i8, !dbg !3751
  store i8 %conv7, i8* %arrayidx, align 1, !dbg !3751, !tbaa !2529
  br label %for.inc, !dbg !3750

for.inc:                                          ; preds = %lor.end
  %9 = load i32, i32* %i, align 4, !dbg !3752, !tbaa !2468
  %inc = add nsw i32 %9, 1, !dbg !3752
  store i32 %inc, i32* %i, align 4, !dbg !3752, !tbaa !2468
  br label %for.cond, !dbg !3753, !llvm.loop !3754

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3756
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_files() #0 !dbg !3757 !ctir !336 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !250
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3758, metadata !DIExpression()), !dbg !3760
  store i64 0, i64* %i, align 8, !dbg !3760, !tbaa !2611
  br label %for.cond, !dbg !3761

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !3762, !tbaa !2611
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !3764, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !3765
  br i1 %cmp, label %for.body, label %for.end, !dbg !3766

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3767, metadata !DIExpression()), !dbg !3769
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !3770, !tbaa !2474
  %3 = load i64, i64* %i, align 8, !dbg !3771, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !3770, !ctir !650
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !3770, !tbaa !2474
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !3770
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !3769, !tbaa !2474
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3772, !tbaa !2474
  call void @free_ent(%struct.fileinfo* %6), !dbg !3773
  br label %for.inc, !dbg !3774

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !3775, !tbaa !2611
  %inc = add i64 %7, 1, !dbg !3775
  store i64 %inc, i64* %i, align 8, !dbg !3775, !tbaa !2611
  br label %for.cond, !dbg !3776, !llvm.loop !3777

for.end:                                          ; preds = %for.cond
  store i64 0, i64* @cwd_n_used, align 8, !dbg !3779, !tbaa !2611
  store i8 0, i8* @cwd_some_quoted, align 1, !dbg !3780, !tbaa !2493
  store i8 0, i8* @any_has_acl, align 1, !dbg !3781, !tbaa !2493
  store i32 0, i32* @inode_number_width, align 4, !dbg !3782, !tbaa !2468
  store i32 0, i32* @block_size_width, align 4, !dbg !3783, !tbaa !2468
  store i32 0, i32* @nlink_width, align 4, !dbg !3784, !tbaa !2468
  store i32 0, i32* @owner_width, align 4, !dbg !3785, !tbaa !2468
  store i32 0, i32* @group_width, align 4, !dbg !3786, !tbaa !2468
  store i32 0, i32* @author_width, align 4, !dbg !3787, !tbaa !2468
  store i32 0, i32* @scontext_width, align 4, !dbg !3788, !tbaa !2468
  store i32 0, i32* @major_device_number_width, align 4, !dbg !3789, !tbaa !2468
  store i32 0, i32* @minor_device_number_width, align 4, !dbg !3790, !tbaa !2468
  store i32 0, i32* @file_size_width, align 4, !dbg !3791, !tbaa !2468
  ret void, !dbg !3792
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @gobble_file(i8* %name, i32 %type, i64 %inode, i1 zeroext %command_line_arg, i8* %dirname) #0 !dbg !3793 !ctir !654 {
entry:
  %retval = alloca i64, align 8, !ctir !168
  %name.addr = alloca i8*, align 8, !ctir !146
  %type.addr = alloca i32, align 4, !ctir !36
  %inode.addr = alloca i64, align 8, !ctir !256
  %command_line_arg.addr = alloca i8, align 1, !ctir !141
  %dirname.addr = alloca i8*, align 8, !ctir !146
  %blocks = alloca i64, align 8, !ctir !168
  %f = alloca %struct.fileinfo*, align 8, !ctir !250
  %full_name = alloca i8*, align 8, !ctir !143
  %do_deref = alloca i8, align 1, !ctir !141
  %err = alloca i32, align 4, !ctir !27
  %need_lstat = alloca i8, align 1, !ctir !141
  %have_scontext = alloca i8, align 1, !ctir !141
  %have_acl = alloca i8, align 1, !ctir !141
  %attr_len = alloca i32, align 4, !ctir !27
  %n = alloca i32, align 4, !ctir !27
  %linkstats = alloca %struct.stat, align 8, !ctir !190
  %linkname = alloca i8*, align 8, !ctir !143
  %buf = alloca [652 x i8], align 16, !ctir !610
  %len = alloca i32, align 4, !ctir !27
  %len345 = alloca i32, align 4, !ctir !27
  %len355 = alloca i32, align 4, !ctir !27
  %len365 = alloca i32, align 4, !ctir !27
  %len377 = alloca i32, align 4, !ctir !27
  %b = alloca [21 x i8], align 16, !ctir !656
  %b_len = alloca i32, align 4, !ctir !27
  %buf410 = alloca [21 x i8], align 16, !ctir !656
  %len411 = alloca i32, align 4, !ctir !27
  %buf442 = alloca [652 x i8], align 16, !ctir !610
  %size = alloca i64, align 8, !ctir !168
  %len445 = alloca i32, align 4, !ctir !27
  %buf458 = alloca [21 x i8], align 16, !ctir !656
  %len459 = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3794, metadata !DIExpression()), !dbg !3795
  store i32 %type, i32* %type.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i64 %inode, i64* %inode.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %inode.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.declare(metadata i64* %blocks, metadata !3804, metadata !DIExpression()), !dbg !3805
  store i64 0, i64* %blocks, align 8, !dbg !3805, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3806, metadata !DIExpression()), !dbg !3807
  %0 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3808, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !3808
  br i1 %tobool, label %lor.lhs.false, label %cond.true, !dbg !3808

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %inode.addr, align 8, !dbg !3808, !tbaa !2611
  %cmp = icmp eq i64 %1, 0, !dbg !3808
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3808

cond.true:                                        ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !3808

cond.false:                                       ; preds = %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3119, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.gobble_file, i64 0, i64 0)) #15, !dbg !3808
  unreachable, !dbg !3808

2:                                                ; No predecessors!
  br label %cond.end, !dbg !3808

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !3809, !tbaa !2611
  %4 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3811, !tbaa !2611
  %cmp1 = icmp eq i64 %3, %4, !dbg !3812
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3813

if.then:                                          ; preds = %cond.end
  %5 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3814, !tbaa !2474
  %6 = bitcast %struct.fileinfo* %5 to i8*, !dbg !3814
  %7 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3816, !tbaa !2611
  %call = call i8* @xnrealloc(i8* %6, i64 %7, i64 400), !dbg !3817
  %8 = bitcast i8* %call to %struct.fileinfo*, !dbg !3817
  store %struct.fileinfo* %8, %struct.fileinfo** @cwd_file, align 8, !dbg !3818, !tbaa !2474
  %9 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3819, !tbaa !2611
  %mul = mul i64 %9, 2, !dbg !3819
  store i64 %mul, i64* @cwd_n_alloc, align 8, !dbg !3819, !tbaa !2611
  br label %if.end, !dbg !3820

if.end:                                           ; preds = %if.then, %cond.end
  %10 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3821, !tbaa !2474
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !3822, !tbaa !2611
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i64 %11, !dbg !3821, !ctir !250
  store %struct.fileinfo* %arrayidx, %struct.fileinfo** %f, align 8, !dbg !3823, !tbaa !2474
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3824, !tbaa !2474
  %13 = bitcast %struct.fileinfo* %12 to i8*, !dbg !3825
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 200, i1 false), !dbg !3825
  %14 = load i64, i64* %inode.addr, align 8, !dbg !3826, !tbaa !2611
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3827, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 3, !dbg !3828, !ctir !184
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !3829, !ctir !190
  store i64 %14, i64* %st_ino, align 8, !dbg !3830, !tbaa !3831, !ctir !196
  %16 = load i32, i32* %type.addr, align 4, !dbg !3834, !tbaa !2529
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3835, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 4, !dbg !3836, !ctir !184
  store i32 %16, i32* %filetype, align 8, !dbg !3837, !tbaa !3838, !ctir !36
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3839, !tbaa !2474
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 11, !dbg !3840, !ctir !184
  store i32 -1, i32* %quoted, align 4, !dbg !3841, !tbaa !3842, !ctir !27
  %19 = load i8, i8* @cwd_some_quoted, align 1, !dbg !3843, !tbaa !2493
  %tobool2 = trunc i8 %19 to i1, !dbg !3843
  br i1 %tobool2, label %if.end11, label %land.lhs.true, !dbg !3845

land.lhs.true:                                    ; preds = %if.end
  %20 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !3846, !tbaa !2493
  %tobool3 = trunc i8 %20 to i1, !dbg !3846
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !3847

if.then4:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %name.addr, align 8, !dbg !3848, !tbaa !2474
  %call5 = call zeroext i1 @needs_quoting(i8* %21), !dbg !3850
  %conv = zext i1 %call5 to i32, !dbg !3850
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3851, !tbaa !2474
  %quoted6 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 11, !dbg !3852, !ctir !184
  store i32 %conv, i32* %quoted6, align 4, !dbg !3853, !tbaa !3842, !ctir !27
  %23 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3854, !tbaa !2474
  %quoted7 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %23, i32 0, i32 11, !dbg !3856, !ctir !184
  %24 = load i32, i32* %quoted7, align 4, !dbg !3856, !tbaa !3842, !ctir !27
  %tobool8 = icmp ne i32 %24, 0, !dbg !3854
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !3857

if.then9:                                         ; preds = %if.then4
  store i8 1, i8* @cwd_some_quoted, align 1, !dbg !3858, !tbaa !2493
  br label %if.end10, !dbg !3859

if.end10:                                         ; preds = %if.then9, %if.then4
  br label %if.end11, !dbg !3860

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %if.end
  %25 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3861, !tbaa !2493
  %tobool12 = trunc i8 %25 to i1, !dbg !3861
  br i1 %tobool12, label %if.then92, label %lor.lhs.false14, !dbg !3863

lor.lhs.false14:                                  ; preds = %if.end11
  %26 = load i8, i8* @print_hyperlink, align 1, !dbg !3864, !tbaa !2493
  %tobool15 = trunc i8 %26 to i1, !dbg !3864
  br i1 %tobool15, label %if.then92, label %lor.lhs.false17, !dbg !3865

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %27 = load i8, i8* @format_needs_stat, align 1, !dbg !3866, !tbaa !2493
  %tobool18 = trunc i8 %27 to i1, !dbg !3866
  br i1 %tobool18, label %if.then92, label %lor.lhs.false20, !dbg !3867

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %28 = load i32, i32* %type.addr, align 4, !dbg !3868, !tbaa !2529
  %cmp21 = icmp eq i32 %28, 3, !dbg !3869
  br i1 %cmp21, label %land.lhs.true23, label %lor.lhs.false35, !dbg !3870

land.lhs.true23:                                  ; preds = %lor.lhs.false20
  %29 = load i8, i8* @print_with_color, align 1, !dbg !3871, !tbaa !2493
  %tobool24 = trunc i8 %29 to i1, !dbg !3871
  br i1 %tobool24, label %land.lhs.true26, label %lor.lhs.false35, !dbg !3872

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %call27 = call zeroext i1 @is_colored(i32 19), !dbg !3873
  br i1 %call27, label %if.then92, label %lor.lhs.false29, !dbg !3874

lor.lhs.false29:                                  ; preds = %land.lhs.true26
  %call30 = call zeroext i1 @is_colored(i32 18), !dbg !3875
  br i1 %call30, label %if.then92, label %lor.lhs.false32, !dbg !3876

lor.lhs.false32:                                  ; preds = %lor.lhs.false29
  %call33 = call zeroext i1 @is_colored(i32 20), !dbg !3877
  br i1 %call33, label %if.then92, label %lor.lhs.false35, !dbg !3878

lor.lhs.false35:                                  ; preds = %lor.lhs.false32, %land.lhs.true23, %lor.lhs.false20
  %30 = load i8, i8* @print_inode, align 1, !dbg !3879, !tbaa !2493
  %tobool36 = trunc i8 %30 to i1, !dbg !3879
  br i1 %tobool36, label %land.lhs.true41, label %lor.lhs.false38, !dbg !3880

lor.lhs.false38:                                  ; preds = %lor.lhs.false35
  %31 = load i8, i8* @format_needs_type, align 1, !dbg !3881, !tbaa !2493
  %tobool39 = trunc i8 %31 to i1, !dbg !3881
  br i1 %tobool39, label %land.lhs.true41, label %lor.lhs.false56, !dbg !3882

land.lhs.true41:                                  ; preds = %lor.lhs.false38, %lor.lhs.false35
  %32 = load i32, i32* %type.addr, align 4, !dbg !3883, !tbaa !2529
  %cmp42 = icmp eq i32 %32, 6, !dbg !3884
  br i1 %cmp42, label %land.lhs.true47, label %lor.lhs.false44, !dbg !3885

lor.lhs.false44:                                  ; preds = %land.lhs.true41
  %33 = load i32, i32* %type.addr, align 4, !dbg !3886, !tbaa !2529
  %cmp45 = icmp eq i32 %33, 0, !dbg !3887
  br i1 %cmp45, label %land.lhs.true47, label %lor.lhs.false56, !dbg !3888

land.lhs.true47:                                  ; preds = %lor.lhs.false44, %land.lhs.true41
  %34 = load i32, i32* @dereference, align 4, !dbg !3889, !tbaa !2529
  %cmp48 = icmp eq i32 %34, 5, !dbg !3890
  br i1 %cmp48, label %if.then92, label %lor.lhs.false50, !dbg !3891

lor.lhs.false50:                                  ; preds = %land.lhs.true47
  %35 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !3892, !tbaa !2493
  %tobool51 = trunc i8 %35 to i1, !dbg !3892
  br i1 %tobool51, label %if.then92, label %lor.lhs.false53, !dbg !3893

lor.lhs.false53:                                  ; preds = %lor.lhs.false50
  %36 = load i8, i8* @check_symlink_mode, align 1, !dbg !3894, !tbaa !2493
  %tobool54 = trunc i8 %36 to i1, !dbg !3894
  br i1 %tobool54, label %if.then92, label %lor.lhs.false56, !dbg !3895

lor.lhs.false56:                                  ; preds = %lor.lhs.false53, %lor.lhs.false44, %lor.lhs.false38
  %37 = load i8, i8* @print_inode, align 1, !dbg !3896, !tbaa !2493
  %tobool57 = trunc i8 %37 to i1, !dbg !3896
  br i1 %tobool57, label %land.lhs.true59, label %lor.lhs.false62, !dbg !3897

land.lhs.true59:                                  ; preds = %lor.lhs.false56
  %38 = load i64, i64* %inode.addr, align 8, !dbg !3898, !tbaa !2611
  %cmp60 = icmp eq i64 %38, 0, !dbg !3899
  br i1 %cmp60, label %if.then92, label %lor.lhs.false62, !dbg !3900

lor.lhs.false62:                                  ; preds = %land.lhs.true59, %lor.lhs.false56
  %39 = load i8, i8* @format_needs_type, align 1, !dbg !3901, !tbaa !2493
  %tobool63 = trunc i8 %39 to i1, !dbg !3901
  br i1 %tobool63, label %land.lhs.true65, label %if.end455, !dbg !3902

land.lhs.true65:                                  ; preds = %lor.lhs.false62
  %40 = load i32, i32* %type.addr, align 4, !dbg !3903, !tbaa !2529
  %cmp66 = icmp eq i32 %40, 0, !dbg !3904
  br i1 %cmp66, label %if.then92, label %lor.lhs.false68, !dbg !3905

lor.lhs.false68:                                  ; preds = %land.lhs.true65
  %41 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3906, !tbaa !2493
  %tobool69 = trunc i8 %41 to i1, !dbg !3906
  br i1 %tobool69, label %if.then92, label %lor.lhs.false71, !dbg !3907

lor.lhs.false71:                                  ; preds = %lor.lhs.false68
  %42 = load i32, i32* %type.addr, align 4, !dbg !3908, !tbaa !2529
  %cmp72 = icmp eq i32 %42, 5, !dbg !3909
  br i1 %cmp72, label %land.lhs.true74, label %if.end455, !dbg !3910

land.lhs.true74:                                  ; preds = %lor.lhs.false71
  %43 = load i32, i32* @indicator_style, align 4, !dbg !3911, !tbaa !2529
  %cmp75 = icmp eq i32 %43, 3, !dbg !3912
  br i1 %cmp75, label %if.then92, label %lor.lhs.false77, !dbg !3913

lor.lhs.false77:                                  ; preds = %land.lhs.true74
  %44 = load i8, i8* @print_with_color, align 1, !dbg !3914, !tbaa !2493
  %tobool78 = trunc i8 %44 to i1, !dbg !3914
  br i1 %tobool78, label %land.lhs.true80, label %if.end455, !dbg !3915

land.lhs.true80:                                  ; preds = %lor.lhs.false77
  %call81 = call zeroext i1 @is_colored(i32 14), !dbg !3916
  br i1 %call81, label %if.then92, label %lor.lhs.false83, !dbg !3917

lor.lhs.false83:                                  ; preds = %land.lhs.true80
  %call84 = call zeroext i1 @is_colored(i32 16), !dbg !3918
  br i1 %call84, label %if.then92, label %lor.lhs.false86, !dbg !3919

lor.lhs.false86:                                  ; preds = %lor.lhs.false83
  %call87 = call zeroext i1 @is_colored(i32 17), !dbg !3920
  br i1 %call87, label %if.then92, label %lor.lhs.false89, !dbg !3921

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %call90 = call zeroext i1 @is_colored(i32 21), !dbg !3922
  br i1 %call90, label %if.then92, label %if.end455, !dbg !3923

if.then92:                                        ; preds = %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %land.lhs.true80, %land.lhs.true74, %lor.lhs.false68, %land.lhs.true65, %land.lhs.true59, %lor.lhs.false53, %lor.lhs.false50, %land.lhs.true47, %lor.lhs.false32, %lor.lhs.false29, %land.lhs.true26, %lor.lhs.false17, %lor.lhs.false14, %if.end11
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !3924, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.declare(metadata i8* %do_deref, metadata !3927, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3929, metadata !DIExpression()), !dbg !3930
  %45 = load i8*, i8** %name.addr, align 8, !dbg !3931, !tbaa !2474
  %arrayidx93 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !3931, !ctir !146
  %46 = load i8, i8* %arrayidx93, align 1, !dbg !3931, !tbaa !2529
  %conv94 = sext i8 %46 to i32, !dbg !3931
  %cmp95 = icmp eq i32 %conv94, 47, !dbg !3933
  br i1 %cmp95, label %if.then102, label %lor.lhs.false97, !dbg !3934

lor.lhs.false97:                                  ; preds = %if.then92
  %47 = load i8*, i8** %dirname.addr, align 8, !dbg !3935, !tbaa !2474
  %arrayidx98 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !3935, !ctir !146
  %48 = load i8, i8* %arrayidx98, align 1, !dbg !3935, !tbaa !2529
  %conv99 = sext i8 %48 to i32, !dbg !3935
  %cmp100 = icmp eq i32 %conv99, 0, !dbg !3936
  br i1 %cmp100, label %if.then102, label %if.else, !dbg !3937

if.then102:                                       ; preds = %lor.lhs.false97, %if.then92
  %49 = load i8*, i8** %name.addr, align 8, !dbg !3938, !tbaa !2474
  store i8* %49, i8** %full_name, align 8, !dbg !3939, !tbaa !2474
  br label %if.end106, !dbg !3940

if.else:                                          ; preds = %lor.lhs.false97
  %50 = load i8*, i8** %name.addr, align 8, !dbg !3941, !tbaa !2474
  %call103 = call i64 @strlen(i8* %50) #16, !dbg !3943
  %51 = load i8*, i8** %dirname.addr, align 8, !dbg !3944, !tbaa !2474
  %call104 = call i64 @strlen(i8* %51) #16, !dbg !3945
  %add = add i64 %call103, %call104, !dbg !3946
  %add105 = add i64 %add, 2, !dbg !3947
  %52 = alloca i8, i64 %add105, align 16, !dbg !3948
  store i8* %52, i8** %full_name, align 8, !dbg !3949, !tbaa !2474
  %53 = load i8*, i8** %full_name, align 8, !dbg !3950, !tbaa !2474
  %54 = load i8*, i8** %dirname.addr, align 8, !dbg !3951, !tbaa !2474
  %55 = load i8*, i8** %name.addr, align 8, !dbg !3952, !tbaa !2474
  call void @attach(i8* %53, i8* %54, i8* %55), !dbg !3953
  br label %if.end106

if.end106:                                        ; preds = %if.else, %if.then102
  %56 = load i8, i8* @print_hyperlink, align 1, !dbg !3954, !tbaa !2493
  %tobool107 = trunc i8 %56 to i1, !dbg !3954
  br i1 %tobool107, label %if.then108, label %if.end116, !dbg !3956

if.then108:                                       ; preds = %if.end106
  %57 = load i8*, i8** %full_name, align 8, !dbg !3957, !tbaa !2474
  %call109 = call i8* @canonicalize_filename_mode(i8* %57, i32 2), !dbg !3959
  %58 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3960, !tbaa !2474
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %58, i32 0, i32 2, !dbg !3961, !ctir !184
  store i8* %call109, i8** %absolute_name, align 8, !dbg !3962, !tbaa !3963, !ctir !143
  %59 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3964, !tbaa !2474
  %absolute_name110 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %59, i32 0, i32 2, !dbg !3966, !ctir !184
  %60 = load i8*, i8** %absolute_name110, align 8, !dbg !3966, !tbaa !3963, !ctir !143
  %tobool111 = icmp ne i8* %60, null, !dbg !3964
  br i1 %tobool111, label %if.end115, label %if.then112, !dbg !3967

if.then112:                                       ; preds = %if.then108
  %61 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3968, !tbaa !2493
  %tobool113 = trunc i8 %61 to i1, !dbg !3968
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !3969
  %62 = load i8*, i8** %full_name, align 8, !dbg !3970, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool113, i8* %call114, i8* %62), !dbg !3971
  br label %if.end115, !dbg !3971

if.end115:                                        ; preds = %if.then112, %if.then108
  br label %if.end116, !dbg !3972

if.end116:                                        ; preds = %if.end115, %if.end106
  %63 = load i32, i32* @dereference, align 4, !dbg !3973, !tbaa !2529
  switch i32 %63, label %sw.default [
    i32 5, label %sw.bb
    i32 3, label %sw.bb119
    i32 4, label %sw.bb119
  ], !dbg !3974

sw.bb:                                            ; preds = %if.end116
  %64 = load i8*, i8** %full_name, align 8, !dbg !3975, !tbaa !2474
  %65 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3977, !tbaa !2474
  %stat117 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %65, i32 0, i32 3, !dbg !3978, !ctir !184
  %call118 = call i32 @stat(i8* %64, %struct.stat* %stat117) #13, !dbg !3979
  store i32 %call118, i32* %err, align 4, !dbg !3980, !tbaa !2468
  store i8 1, i8* %do_deref, align 1, !dbg !3981, !tbaa !2493
  br label %sw.epilog, !dbg !3982

sw.bb119:                                         ; preds = %if.end116, %if.end116
  %66 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3983, !tbaa !2493
  %tobool120 = trunc i8 %66 to i1, !dbg !3983
  br i1 %tobool120, label %if.then121, label %if.end144, !dbg !3985

if.then121:                                       ; preds = %sw.bb119
  call void @llvm.dbg.declare(metadata i8* %need_lstat, metadata !3986, metadata !DIExpression()), !dbg !3988
  %67 = load i8*, i8** %full_name, align 8, !dbg !3989, !tbaa !2474
  %68 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3990, !tbaa !2474
  %stat122 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %68, i32 0, i32 3, !dbg !3991, !ctir !184
  %call123 = call i32 @stat(i8* %67, %struct.stat* %stat122) #13, !dbg !3992
  store i32 %call123, i32* %err, align 4, !dbg !3993, !tbaa !2468
  store i8 1, i8* %do_deref, align 1, !dbg !3994, !tbaa !2493
  %69 = load i32, i32* @dereference, align 4, !dbg !3995, !tbaa !2529
  %cmp124 = icmp eq i32 %69, 3, !dbg !3997
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !3998

if.then126:                                       ; preds = %if.then121
  br label %sw.epilog, !dbg !3999

if.end127:                                        ; preds = %if.then121
  %70 = load i32, i32* %err, align 4, !dbg !4000, !tbaa !2468
  %cmp128 = icmp slt i32 %70, 0, !dbg !4001
  br i1 %cmp128, label %cond.true130, label %cond.false134, !dbg !4000

cond.true130:                                     ; preds = %if.end127
  %call131 = call i32* @__errno_location() #17, !dbg !4002
  %71 = load i32, i32* %call131, align 4, !dbg !4002, !tbaa !2468, !ctir !27
  %cmp132 = icmp eq i32 %71, 2, !dbg !4003
  %conv133 = zext i1 %cmp132 to i32, !dbg !4003
  br label %cond.end138, !dbg !4000

cond.false134:                                    ; preds = %if.end127
  %72 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4004, !tbaa !2474
  %stat135 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %72, i32 0, i32 3, !dbg !4004, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat135, i32 0, i32 3, !dbg !4004, !ctir !190
  %73 = load i32, i32* %st_mode, align 8, !dbg !4004, !tbaa !4005, !ctir !200
  %and = and i32 %73, 61440, !dbg !4004
  %cmp136 = icmp eq i32 %and, 16384, !dbg !4004
  %lnot = xor i1 %cmp136, true, !dbg !4006
  %lnot.ext = zext i1 %lnot to i32, !dbg !4006
  br label %cond.end138, !dbg !4000

cond.end138:                                      ; preds = %cond.false134, %cond.true130
  %cond = phi i32 [ %conv133, %cond.true130 ], [ %lnot.ext, %cond.false134 ], !dbg !4000
  %tobool139 = icmp ne i32 %cond, 0, !dbg !4007
  %frombool140 = zext i1 %tobool139 to i8, !dbg !4008
  store i8 %frombool140, i8* %need_lstat, align 1, !dbg !4008, !tbaa !2493
  %74 = load i8, i8* %need_lstat, align 1, !dbg !4009, !tbaa !2493
  %tobool141 = trunc i8 %74 to i1, !dbg !4009
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !4011

if.then142:                                       ; preds = %cond.end138
  br label %sw.epilog, !dbg !4012

if.end143:                                        ; preds = %cond.end138
  br label %if.end144, !dbg !4013

if.end144:                                        ; preds = %if.end143, %sw.bb119
  br label %sw.default, !dbg !4014

sw.default:                                       ; preds = %if.end116, %if.end144
  %75 = load i8*, i8** %full_name, align 8, !dbg !4015, !tbaa !2474
  %76 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4016, !tbaa !2474
  %stat145 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %76, i32 0, i32 3, !dbg !4017, !ctir !184
  %call146 = call i32 @lstat(i8* %75, %struct.stat* %stat145) #13, !dbg !4018
  store i32 %call146, i32* %err, align 4, !dbg !4019, !tbaa !2468
  store i8 0, i8* %do_deref, align 1, !dbg !4020, !tbaa !2493
  br label %sw.epilog, !dbg !4021

sw.epilog:                                        ; preds = %sw.default, %if.then142, %if.then126, %sw.bb
  %77 = load i32, i32* %err, align 4, !dbg !4022, !tbaa !2468
  %cmp147 = icmp ne i32 %77, 0, !dbg !4024
  br i1 %cmp147, label %if.then149, label %if.end157, !dbg !4025

if.then149:                                       ; preds = %sw.epilog
  %78 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4026, !tbaa !2493
  %tobool150 = trunc i8 %78 to i1, !dbg !4026
  %call151 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0)) #13, !dbg !4028
  %79 = load i8*, i8** %full_name, align 8, !dbg !4029, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool150, i8* %call151, i8* %79), !dbg !4030
  %80 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4031, !tbaa !2493
  %tobool152 = trunc i8 %80 to i1, !dbg !4031
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !4033

if.then153:                                       ; preds = %if.then149
  store i64 0, i64* %retval, align 8, !dbg !4034
  br label %return, !dbg !4034

if.end154:                                        ; preds = %if.then149
  %81 = load i8*, i8** %name.addr, align 8, !dbg !4035, !tbaa !2474
  %call155 = call noalias i8* @xstrdup(i8* %81), !dbg !4036
  %82 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4037, !tbaa !2474
  %name156 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %82, i32 0, i32 0, !dbg !4038, !ctir !184
  store i8* %call155, i8** %name156, align 8, !dbg !4039, !tbaa !4040, !ctir !143
  %83 = load i64, i64* @cwd_n_used, align 8, !dbg !4041, !tbaa !2611
  %inc = add i64 %83, 1, !dbg !4041
  store i64 %inc, i64* @cwd_n_used, align 8, !dbg !4041, !tbaa !2611
  store i64 0, i64* %retval, align 8, !dbg !4042
  br label %return, !dbg !4042

if.end157:                                        ; preds = %sw.epilog
  %84 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4043, !tbaa !2474
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %84, i32 0, i32 7, !dbg !4044, !ctir !184
  store i8 1, i8* %stat_ok, align 8, !dbg !4045, !tbaa !4046, !ctir !141
  %85 = load i32, i32* %type.addr, align 4, !dbg !4047, !tbaa !2529
  %cmp158 = icmp eq i32 %85, 5, !dbg !4049
  br i1 %cmp158, label %land.lhs.true166, label %lor.lhs.false160, !dbg !4050

lor.lhs.false160:                                 ; preds = %if.end157
  %86 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4051, !tbaa !2474
  %stat161 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %86, i32 0, i32 3, !dbg !4051, !ctir !184
  %st_mode162 = getelementptr inbounds %struct.stat, %struct.stat* %stat161, i32 0, i32 3, !dbg !4051, !ctir !190
  %87 = load i32, i32* %st_mode162, align 8, !dbg !4051, !tbaa !4005, !ctir !200
  %and163 = and i32 %87, 61440, !dbg !4051
  %cmp164 = icmp eq i32 %and163, 32768, !dbg !4051
  br i1 %cmp164, label %land.lhs.true166, label %if.end175, !dbg !4052

land.lhs.true166:                                 ; preds = %lor.lhs.false160, %if.end157
  %88 = load i8, i8* @print_with_color, align 1, !dbg !4053, !tbaa !2493
  %tobool167 = trunc i8 %88 to i1, !dbg !4053
  br i1 %tobool167, label %land.lhs.true169, label %if.end175, !dbg !4054

land.lhs.true169:                                 ; preds = %land.lhs.true166
  %call170 = call zeroext i1 @is_colored(i32 21), !dbg !4055
  br i1 %call170, label %if.then172, label %if.end175, !dbg !4056

if.then172:                                       ; preds = %land.lhs.true169
  %89 = load i8*, i8** %full_name, align 8, !dbg !4057, !tbaa !2474
  %90 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4058, !tbaa !2474
  %call173 = call zeroext i1 @has_capability_cache(i8* %89, %struct.fileinfo* %90), !dbg !4059
  %91 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4060, !tbaa !2474
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %91, i32 0, i32 10, !dbg !4061, !ctir !184
  %frombool174 = zext i1 %call173 to i8, !dbg !4062
  store i8 %frombool174, i8* %has_capability, align 8, !dbg !4062, !tbaa !4063, !ctir !141
  br label %if.end175, !dbg !4060

if.end175:                                        ; preds = %if.then172, %land.lhs.true169, %land.lhs.true166, %lor.lhs.false160
  %92 = load i32, i32* @format, align 4, !dbg !4064, !tbaa !2529
  %cmp176 = icmp eq i32 %92, 0, !dbg !4066
  br i1 %cmp176, label %if.then181, label %lor.lhs.false178, !dbg !4067

lor.lhs.false178:                                 ; preds = %if.end175
  %93 = load i8, i8* @print_scontext, align 1, !dbg !4068, !tbaa !2493
  %tobool179 = trunc i8 %93 to i1, !dbg !4068
  br i1 %tobool179, label %if.then181, label %if.end256, !dbg !4069

if.then181:                                       ; preds = %lor.lhs.false178, %if.end175
  call void @llvm.dbg.declare(metadata i8* %have_scontext, metadata !4070, metadata !DIExpression()), !dbg !4072
  store i8 0, i8* %have_scontext, align 1, !dbg !4072, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %have_acl, metadata !4073, metadata !DIExpression()), !dbg !4074
  store i8 0, i8* %have_acl, align 1, !dbg !4074, !tbaa !2493
  call void @llvm.dbg.declare(metadata i32* %attr_len, metadata !4075, metadata !DIExpression()), !dbg !4076
  %94 = load i8*, i8** %full_name, align 8, !dbg !4077, !tbaa !2474
  %95 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4078, !tbaa !2474
  %96 = load i8, i8* %do_deref, align 1, !dbg !4079, !tbaa !2493
  %tobool182 = trunc i8 %96 to i1, !dbg !4079
  %call183 = call i32 @getfilecon_cache(i8* %94, %struct.fileinfo* %95, i1 zeroext %tobool182), !dbg !4080
  store i32 %call183, i32* %attr_len, align 4, !dbg !4076, !tbaa !2468
  %97 = load i32, i32* %attr_len, align 4, !dbg !4081, !tbaa !2468
  %cmp184 = icmp slt i32 %97, 0, !dbg !4082
  %conv185 = zext i1 %cmp184 to i32, !dbg !4082
  store i32 %conv185, i32* %err, align 4, !dbg !4083, !tbaa !2468
  %98 = load i32, i32* %err, align 4, !dbg !4084, !tbaa !2468
  %cmp186 = icmp eq i32 %98, 0, !dbg !4086
  br i1 %cmp186, label %if.then188, label %if.else206, !dbg !4087

if.then188:                                       ; preds = %if.then181
  %call189 = call zeroext i1 @is_smack_enabled(), !dbg !4088
  br i1 %call189, label %if.then190, label %if.else197, !dbg !4091

if.then190:                                       ; preds = %if.then188
  %99 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4092, !tbaa !2474
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %99, i32 0, i32 6, !dbg !4092, !ctir !184
  %100 = load i8*, i8** %scontext, align 8, !dbg !4092, !tbaa !4093, !ctir !143
  %call191 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i64 0, i64 0), i8* %100) #16, !dbg !4092
  %cmp192 = icmp eq i32 %call191, 0, !dbg !4092
  %lnot194 = xor i1 %cmp192, true, !dbg !4094
  %frombool196 = zext i1 %lnot194 to i8, !dbg !4095
  store i8 %frombool196, i8* %have_scontext, align 1, !dbg !4095, !tbaa !2493
  br label %if.end205, !dbg !4096

if.else197:                                       ; preds = %if.then188
  %101 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4097, !tbaa !2474
  %scontext198 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %101, i32 0, i32 6, !dbg !4097, !ctir !184
  %102 = load i8*, i8** %scontext198, align 8, !dbg !4097, !tbaa !4093, !ctir !143
  %call199 = call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i8* %102) #16, !dbg !4097
  %cmp200 = icmp eq i32 %call199, 0, !dbg !4097
  %lnot202 = xor i1 %cmp200, true, !dbg !4098
  %frombool204 = zext i1 %lnot202 to i8, !dbg !4099
  store i8 %frombool204, i8* %have_scontext, align 1, !dbg !4099, !tbaa !2493
  br label %if.end205

if.end205:                                        ; preds = %if.else197, %if.then190
  br label %if.end217, !dbg !4100

if.else206:                                       ; preds = %if.then181
  %103 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4101, !tbaa !2474
  %scontext207 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %103, i32 0, i32 6, !dbg !4103, !ctir !184
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), i8** %scontext207, align 8, !dbg !4104, !tbaa !4093, !ctir !143
  %call208 = call i32* @__errno_location() #17, !dbg !4105
  %104 = load i32, i32* %call208, align 4, !dbg !4105, !tbaa !2468, !ctir !27
  %call209 = call zeroext i1 @is_ENOTSUP(i32 %104), !dbg !4107
  br i1 %call209, label %if.then215, label %lor.lhs.false211, !dbg !4108

lor.lhs.false211:                                 ; preds = %if.else206
  %call212 = call i32* @__errno_location() #17, !dbg !4109
  %105 = load i32, i32* %call212, align 4, !dbg !4109, !tbaa !2468, !ctir !27
  %cmp213 = icmp eq i32 %105, 61, !dbg !4110
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4111

if.then215:                                       ; preds = %lor.lhs.false211, %if.else206
  store i32 0, i32* %err, align 4, !dbg !4112, !tbaa !2468
  br label %if.end216, !dbg !4113

if.end216:                                        ; preds = %if.then215, %lor.lhs.false211
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end205
  %106 = load i32, i32* %err, align 4, !dbg !4114, !tbaa !2468
  %cmp218 = icmp eq i32 %106, 0, !dbg !4116
  br i1 %cmp218, label %land.lhs.true220, label %if.end230, !dbg !4117

land.lhs.true220:                                 ; preds = %if.end217
  %107 = load i32, i32* @format, align 4, !dbg !4118, !tbaa !2529
  %cmp221 = icmp eq i32 %107, 0, !dbg !4119
  br i1 %cmp221, label %if.then223, label %if.end230, !dbg !4120

if.then223:                                       ; preds = %land.lhs.true220
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4121, metadata !DIExpression()), !dbg !4123
  %108 = load i8*, i8** %full_name, align 8, !dbg !4124, !tbaa !2474
  %109 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4125, !tbaa !2474
  %call224 = call i32 @file_has_acl_cache(i8* %108, %struct.fileinfo* %109), !dbg !4126
  store i32 %call224, i32* %n, align 4, !dbg !4123, !tbaa !2468
  %110 = load i32, i32* %n, align 4, !dbg !4127, !tbaa !2468
  %cmp225 = icmp slt i32 %110, 0, !dbg !4128
  %conv226 = zext i1 %cmp225 to i32, !dbg !4128
  store i32 %conv226, i32* %err, align 4, !dbg !4129, !tbaa !2468
  %111 = load i32, i32* %n, align 4, !dbg !4130, !tbaa !2468
  %cmp227 = icmp slt i32 0, %111, !dbg !4131
  %frombool229 = zext i1 %cmp227 to i8, !dbg !4132
  store i8 %frombool229, i8* %have_acl, align 1, !dbg !4132, !tbaa !2493
  br label %if.end230, !dbg !4133

if.end230:                                        ; preds = %if.then223, %land.lhs.true220, %if.end217
  %112 = load i8, i8* %have_scontext, align 1, !dbg !4134, !tbaa !2493
  %tobool231 = trunc i8 %112 to i1, !dbg !4134
  br i1 %tobool231, label %cond.false235, label %land.lhs.true232, !dbg !4135

land.lhs.true232:                                 ; preds = %if.end230
  %113 = load i8, i8* %have_acl, align 1, !dbg !4136, !tbaa !2493
  %tobool233 = trunc i8 %113 to i1, !dbg !4136
  br i1 %tobool233, label %cond.false235, label %cond.true234, !dbg !4137

cond.true234:                                     ; preds = %land.lhs.true232
  br label %cond.end242, !dbg !4137

cond.false235:                                    ; preds = %land.lhs.true232, %if.end230
  %114 = load i8, i8* %have_scontext, align 1, !dbg !4138, !tbaa !2493
  %tobool236 = trunc i8 %114 to i1, !dbg !4138
  br i1 %tobool236, label %land.rhs, label %land.end, !dbg !4139

land.rhs:                                         ; preds = %cond.false235
  %115 = load i8, i8* %have_acl, align 1, !dbg !4140, !tbaa !2493
  %tobool238 = trunc i8 %115 to i1, !dbg !4140
  %lnot239 = xor i1 %tobool238, true, !dbg !4141
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false235
  %116 = phi i1 [ false, %cond.false235 ], [ %lnot239, %land.rhs ], !dbg !4142
  %117 = zext i1 %116 to i64, !dbg !4138
  %cond241 = select i1 %116, i32 1, i32 2, !dbg !4138
  br label %cond.end242, !dbg !4137

cond.end242:                                      ; preds = %land.end, %cond.true234
  %cond243 = phi i32 [ 0, %cond.true234 ], [ %cond241, %land.end ], !dbg !4137
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4143, !tbaa !2474
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 9, !dbg !4144, !ctir !184
  store i32 %cond243, i32* %acl_type, align 4, !dbg !4145, !tbaa !4146, !ctir !48
  %119 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4147, !tbaa !2474
  %acl_type244 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %119, i32 0, i32 9, !dbg !4148, !ctir !184
  %120 = load i32, i32* %acl_type244, align 4, !dbg !4148, !tbaa !4146, !ctir !48
  %cmp245 = icmp ne i32 %120, 0, !dbg !4149
  %conv246 = zext i1 %cmp245 to i32, !dbg !4149
  %121 = load i8, i8* @any_has_acl, align 1, !dbg !4150, !tbaa !2493
  %tobool247 = trunc i8 %121 to i1, !dbg !4150
  %conv248 = zext i1 %tobool247 to i32, !dbg !4150
  %or = or i32 %conv248, %conv246, !dbg !4150
  %tobool249 = icmp ne i32 %or, 0, !dbg !4150
  %frombool250 = zext i1 %tobool249 to i8, !dbg !4150
  store i8 %frombool250, i8* @any_has_acl, align 1, !dbg !4150, !tbaa !2493
  %122 = load i32, i32* %err, align 4, !dbg !4151, !tbaa !2468
  %tobool251 = icmp ne i32 %122, 0, !dbg !4151
  br i1 %tobool251, label %if.then252, label %if.end255, !dbg !4153

if.then252:                                       ; preds = %cond.end242
  %call253 = call i32* @__errno_location() #17, !dbg !4154
  %123 = load i32, i32* %call253, align 4, !dbg !4154, !tbaa !2468, !ctir !27
  %124 = load i8*, i8** %full_name, align 8, !dbg !4155, !tbaa !2474
  %call254 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %124), !dbg !4155
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %call254), !dbg !4156
  br label %if.end255, !dbg !4156

if.end255:                                        ; preds = %if.then252, %cond.end242
  br label %if.end256, !dbg !4157

if.end256:                                        ; preds = %if.end255, %lor.lhs.false178
  %125 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4158, !tbaa !2474
  %stat257 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %125, i32 0, i32 3, !dbg !4158, !ctir !184
  %st_mode258 = getelementptr inbounds %struct.stat, %struct.stat* %stat257, i32 0, i32 3, !dbg !4158, !ctir !190
  %126 = load i32, i32* %st_mode258, align 8, !dbg !4158, !tbaa !4005, !ctir !200
  %and259 = and i32 %126, 61440, !dbg !4158
  %cmp260 = icmp eq i32 %and259, 40960, !dbg !4158
  br i1 %cmp260, label %land.lhs.true262, label %if.end298, !dbg !4160

land.lhs.true262:                                 ; preds = %if.end256
  %127 = load i32, i32* @format, align 4, !dbg !4161, !tbaa !2529
  %cmp263 = icmp eq i32 %127, 0, !dbg !4162
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265, !dbg !4163

lor.lhs.false265:                                 ; preds = %land.lhs.true262
  %128 = load i8, i8* @check_symlink_mode, align 1, !dbg !4164, !tbaa !2493
  %tobool266 = trunc i8 %128 to i1, !dbg !4164
  br i1 %tobool266, label %if.then268, label %if.end298, !dbg !4165

if.then268:                                       ; preds = %lor.lhs.false265, %land.lhs.true262
  call void @llvm.dbg.declare(metadata %struct.stat* %linkstats, metadata !4166, metadata !DIExpression()), !dbg !4168
  %129 = load i8*, i8** %full_name, align 8, !dbg !4169, !tbaa !2474
  %130 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4170, !tbaa !2474
  %131 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4171, !tbaa !2493
  %tobool269 = trunc i8 %131 to i1, !dbg !4171
  call void @get_link_name(i8* %129, %struct.fileinfo* %130, i1 zeroext %tobool269), !dbg !4172
  call void @llvm.dbg.declare(metadata i8** %linkname, metadata !4173, metadata !DIExpression()), !dbg !4174
  %132 = load i8*, i8** %full_name, align 8, !dbg !4175, !tbaa !2474
  %133 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4176, !tbaa !2474
  %linkname270 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %133, i32 0, i32 1, !dbg !4177, !ctir !184
  %134 = load i8*, i8** %linkname270, align 8, !dbg !4177, !tbaa !4178, !ctir !143
  %call271 = call i8* @make_link_name(i8* %132, i8* %134), !dbg !4179
  store i8* %call271, i8** %linkname, align 8, !dbg !4174, !tbaa !2474
  %135 = load i8*, i8** %linkname, align 8, !dbg !4180, !tbaa !2474
  %tobool272 = icmp ne i8* %135, null, !dbg !4180
  br i1 %tobool272, label %land.lhs.true273, label %if.end283, !dbg !4182

land.lhs.true273:                                 ; preds = %if.then268
  %136 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4183, !tbaa !2474
  %quoted274 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %136, i32 0, i32 11, !dbg !4184, !ctir !184
  %137 = load i32, i32* %quoted274, align 4, !dbg !4184, !tbaa !3842, !ctir !27
  %cmp275 = icmp eq i32 %137, 0, !dbg !4185
  br i1 %cmp275, label %land.lhs.true277, label %if.end283, !dbg !4186

land.lhs.true277:                                 ; preds = %land.lhs.true273
  %138 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4187, !tbaa !2474
  %linkname278 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %138, i32 0, i32 1, !dbg !4188, !ctir !184
  %139 = load i8*, i8** %linkname278, align 8, !dbg !4188, !tbaa !4178, !ctir !143
  %call279 = call zeroext i1 @needs_quoting(i8* %139), !dbg !4189
  br i1 %call279, label %if.then281, label %if.end283, !dbg !4190

if.then281:                                       ; preds = %land.lhs.true277
  %140 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4191, !tbaa !2474
  %quoted282 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %140, i32 0, i32 11, !dbg !4192, !ctir !184
  store i32 -1, i32* %quoted282, align 4, !dbg !4193, !tbaa !3842, !ctir !27
  br label %if.end283, !dbg !4191

if.end283:                                        ; preds = %if.then281, %land.lhs.true277, %land.lhs.true273, %if.then268
  %141 = load i8*, i8** %linkname, align 8, !dbg !4194, !tbaa !2474
  %tobool284 = icmp ne i8* %141, null, !dbg !4194
  br i1 %tobool284, label %land.lhs.true285, label %if.end297, !dbg !4196

land.lhs.true285:                                 ; preds = %if.end283
  %142 = load i32, i32* @indicator_style, align 4, !dbg !4197, !tbaa !2529
  %cmp286 = icmp ule i32 2, %142, !dbg !4198
  br i1 %cmp286, label %land.lhs.true291, label %lor.lhs.false288, !dbg !4199

lor.lhs.false288:                                 ; preds = %land.lhs.true285
  %143 = load i8, i8* @check_symlink_mode, align 1, !dbg !4200, !tbaa !2493
  %tobool289 = trunc i8 %143 to i1, !dbg !4200
  br i1 %tobool289, label %land.lhs.true291, label %if.end297, !dbg !4201

land.lhs.true291:                                 ; preds = %lor.lhs.false288, %land.lhs.true285
  %144 = load i8*, i8** %linkname, align 8, !dbg !4202, !tbaa !2474
  %call292 = call i32 @stat(i8* %144, %struct.stat* %linkstats) #13, !dbg !4203
  %cmp293 = icmp eq i32 %call292, 0, !dbg !4204
  br i1 %cmp293, label %if.then295, label %if.end297, !dbg !4205

if.then295:                                       ; preds = %land.lhs.true291
  %145 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4206, !tbaa !2474
  %linkok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %145, i32 0, i32 8, !dbg !4208, !ctir !184
  store i8 1, i8* %linkok, align 1, !dbg !4209, !tbaa !4210, !ctir !141
  %st_mode296 = getelementptr inbounds %struct.stat, %struct.stat* %linkstats, i32 0, i32 3, !dbg !4211, !ctir !190
  %146 = load i32, i32* %st_mode296, align 8, !dbg !4211, !tbaa !4212, !ctir !200
  %147 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4213, !tbaa !2474
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %147, i32 0, i32 5, !dbg !4214, !ctir !184
  store i32 %146, i32* %linkmode, align 4, !dbg !4215, !tbaa !4216, !ctir !226
  br label %if.end297, !dbg !4217

if.end297:                                        ; preds = %if.then295, %land.lhs.true291, %lor.lhs.false288, %if.end283
  %148 = load i8*, i8** %linkname, align 8, !dbg !4218, !tbaa !2474
  call void @free(i8* %148) #13, !dbg !4219
  br label %if.end298, !dbg !4220

if.end298:                                        ; preds = %if.end297, %lor.lhs.false265, %if.end256
  %149 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4221, !tbaa !2474
  %stat299 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %149, i32 0, i32 3, !dbg !4221, !ctir !184
  %st_mode300 = getelementptr inbounds %struct.stat, %struct.stat* %stat299, i32 0, i32 3, !dbg !4221, !ctir !190
  %150 = load i32, i32* %st_mode300, align 8, !dbg !4221, !tbaa !4005, !ctir !200
  %and301 = and i32 %150, 61440, !dbg !4221
  %cmp302 = icmp eq i32 %and301, 40960, !dbg !4221
  br i1 %cmp302, label %if.then304, label %if.else306, !dbg !4223

if.then304:                                       ; preds = %if.end298
  %151 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4224, !tbaa !2474
  %filetype305 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %151, i32 0, i32 4, !dbg !4225, !ctir !184
  store i32 6, i32* %filetype305, align 8, !dbg !4226, !tbaa !3838, !ctir !36
  br label %if.end325, !dbg !4224

if.else306:                                       ; preds = %if.end298
  %152 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4227, !tbaa !2474
  %stat307 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %152, i32 0, i32 3, !dbg !4227, !ctir !184
  %st_mode308 = getelementptr inbounds %struct.stat, %struct.stat* %stat307, i32 0, i32 3, !dbg !4227, !ctir !190
  %153 = load i32, i32* %st_mode308, align 8, !dbg !4227, !tbaa !4005, !ctir !200
  %and309 = and i32 %153, 61440, !dbg !4227
  %cmp310 = icmp eq i32 %and309, 16384, !dbg !4227
  br i1 %cmp310, label %if.then312, label %if.else322, !dbg !4229

if.then312:                                       ; preds = %if.else306
  %154 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4230, !tbaa !2493
  %tobool313 = trunc i8 %154 to i1, !dbg !4230
  br i1 %tobool313, label %land.lhs.true315, label %if.else319, !dbg !4233

land.lhs.true315:                                 ; preds = %if.then312
  %155 = load i8, i8* @immediate_dirs, align 1, !dbg !4234, !tbaa !2493
  %tobool316 = trunc i8 %155 to i1, !dbg !4234
  br i1 %tobool316, label %if.else319, label %if.then317, !dbg !4235

if.then317:                                       ; preds = %land.lhs.true315
  %156 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4236, !tbaa !2474
  %filetype318 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %156, i32 0, i32 4, !dbg !4237, !ctir !184
  store i32 9, i32* %filetype318, align 8, !dbg !4238, !tbaa !3838, !ctir !36
  br label %if.end321, !dbg !4236

if.else319:                                       ; preds = %land.lhs.true315, %if.then312
  %157 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4239, !tbaa !2474
  %filetype320 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %157, i32 0, i32 4, !dbg !4240, !ctir !184
  store i32 3, i32* %filetype320, align 8, !dbg !4241, !tbaa !3838, !ctir !36
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.then317
  br label %if.end324, !dbg !4242

if.else322:                                       ; preds = %if.else306
  %158 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4243, !tbaa !2474
  %filetype323 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %158, i32 0, i32 4, !dbg !4244, !ctir !184
  store i32 5, i32* %filetype323, align 8, !dbg !4245, !tbaa !3838, !ctir !36
  br label %if.end324

if.end324:                                        ; preds = %if.else322, %if.end321
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then304
  %159 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4246, !tbaa !2474
  %stat326 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %159, i32 0, i32 3, !dbg !4246, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat326, i32 0, i32 10, !dbg !4246, !ctir !190
  %160 = load i64, i64* %st_blocks, align 8, !dbg !4246, !tbaa !4247, !ctir !211
  store i64 %160, i64* %blocks, align 8, !dbg !4248, !tbaa !2611
  %161 = load i32, i32* @format, align 4, !dbg !4249, !tbaa !2529
  %cmp327 = icmp eq i32 %161, 0, !dbg !4251
  br i1 %cmp327, label %if.then332, label %lor.lhs.false329, !dbg !4252

lor.lhs.false329:                                 ; preds = %if.end325
  %162 = load i8, i8* @print_block_size, align 1, !dbg !4253, !tbaa !2493
  %tobool330 = trunc i8 %162 to i1, !dbg !4253
  br i1 %tobool330, label %if.then332, label %if.end339, !dbg !4254

if.then332:                                       ; preds = %lor.lhs.false329, %if.end325
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !4255, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4258, metadata !DIExpression()), !dbg !4259
  %163 = load i64, i64* %blocks, align 8, !dbg !4260, !tbaa !2611
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !4261
  %164 = load i32, i32* @human_output_opts, align 4, !dbg !4262, !tbaa !2468
  %165 = load i64, i64* @output_block_size, align 8, !dbg !4263, !tbaa !2611
  %call333 = call i8* @human_readable(i64 %163, i8* %arraydecay, i32 %164, i64 512, i64 %165), !dbg !4264
  %call334 = call i32 @gnu_mbswidth(i8* %call333, i32 0), !dbg !4265
  store i32 %call334, i32* %len, align 4, !dbg !4259, !tbaa !2468
  %166 = load i32, i32* @block_size_width, align 4, !dbg !4266, !tbaa !2468
  %167 = load i32, i32* %len, align 4, !dbg !4268, !tbaa !2468
  %cmp335 = icmp slt i32 %166, %167, !dbg !4269
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !4270

if.then337:                                       ; preds = %if.then332
  %168 = load i32, i32* %len, align 4, !dbg !4271, !tbaa !2468
  store i32 %168, i32* @block_size_width, align 4, !dbg !4272, !tbaa !2468
  br label %if.end338, !dbg !4273

if.end338:                                        ; preds = %if.then337, %if.then332
  br label %if.end339, !dbg !4274

if.end339:                                        ; preds = %if.end338, %lor.lhs.false329
  %169 = load i32, i32* @format, align 4, !dbg !4275, !tbaa !2529
  %cmp340 = icmp eq i32 %169, 0, !dbg !4277
  br i1 %cmp340, label %if.then342, label %if.end374, !dbg !4278

if.then342:                                       ; preds = %if.end339
  %170 = load i8, i8* @print_owner, align 1, !dbg !4279, !tbaa !2493
  %tobool343 = trunc i8 %170 to i1, !dbg !4279
  br i1 %tobool343, label %if.then344, label %if.end352, !dbg !4282

if.then344:                                       ; preds = %if.then342
  call void @llvm.dbg.declare(metadata i32* %len345, metadata !4283, metadata !DIExpression()), !dbg !4285
  %171 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4286, !tbaa !2474
  %stat346 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %171, i32 0, i32 3, !dbg !4287, !ctir !184
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat346, i32 0, i32 4, !dbg !4288, !ctir !190
  %172 = load i32, i32* %st_uid, align 4, !dbg !4288, !tbaa !4289, !ctir !202
  %call347 = call i32 @format_user_width(i32 %172), !dbg !4290
  store i32 %call347, i32* %len345, align 4, !dbg !4285, !tbaa !2468
  %173 = load i32, i32* @owner_width, align 4, !dbg !4291, !tbaa !2468
  %174 = load i32, i32* %len345, align 4, !dbg !4293, !tbaa !2468
  %cmp348 = icmp slt i32 %173, %174, !dbg !4294
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !4295

if.then350:                                       ; preds = %if.then344
  %175 = load i32, i32* %len345, align 4, !dbg !4296, !tbaa !2468
  store i32 %175, i32* @owner_width, align 4, !dbg !4297, !tbaa !2468
  br label %if.end351, !dbg !4298

if.end351:                                        ; preds = %if.then350, %if.then344
  br label %if.end352, !dbg !4299

if.end352:                                        ; preds = %if.end351, %if.then342
  %176 = load i8, i8* @print_group, align 1, !dbg !4300, !tbaa !2493
  %tobool353 = trunc i8 %176 to i1, !dbg !4300
  br i1 %tobool353, label %if.then354, label %if.end362, !dbg !4302

if.then354:                                       ; preds = %if.end352
  call void @llvm.dbg.declare(metadata i32* %len355, metadata !4303, metadata !DIExpression()), !dbg !4305
  %177 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4306, !tbaa !2474
  %stat356 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %177, i32 0, i32 3, !dbg !4307, !ctir !184
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat356, i32 0, i32 5, !dbg !4308, !ctir !190
  %178 = load i32, i32* %st_gid, align 8, !dbg !4308, !tbaa !4309, !ctir !204
  %call357 = call i32 @format_group_width(i32 %178), !dbg !4310
  store i32 %call357, i32* %len355, align 4, !dbg !4305, !tbaa !2468
  %179 = load i32, i32* @group_width, align 4, !dbg !4311, !tbaa !2468
  %180 = load i32, i32* %len355, align 4, !dbg !4313, !tbaa !2468
  %cmp358 = icmp slt i32 %179, %180, !dbg !4314
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !4315

if.then360:                                       ; preds = %if.then354
  %181 = load i32, i32* %len355, align 4, !dbg !4316, !tbaa !2468
  store i32 %181, i32* @group_width, align 4, !dbg !4317, !tbaa !2468
  br label %if.end361, !dbg !4318

if.end361:                                        ; preds = %if.then360, %if.then354
  br label %if.end362, !dbg !4319

if.end362:                                        ; preds = %if.end361, %if.end352
  %182 = load i8, i8* @print_author, align 1, !dbg !4320, !tbaa !2493
  %tobool363 = trunc i8 %182 to i1, !dbg !4320
  br i1 %tobool363, label %if.then364, label %if.end373, !dbg !4322

if.then364:                                       ; preds = %if.end362
  call void @llvm.dbg.declare(metadata i32* %len365, metadata !4323, metadata !DIExpression()), !dbg !4325
  %183 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4326, !tbaa !2474
  %stat366 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %183, i32 0, i32 3, !dbg !4327, !ctir !184
  %st_uid367 = getelementptr inbounds %struct.stat, %struct.stat* %stat366, i32 0, i32 4, !dbg !4328, !ctir !190
  %184 = load i32, i32* %st_uid367, align 4, !dbg !4328, !tbaa !4289, !ctir !202
  %call368 = call i32 @format_user_width(i32 %184), !dbg !4329
  store i32 %call368, i32* %len365, align 4, !dbg !4325, !tbaa !2468
  %185 = load i32, i32* @author_width, align 4, !dbg !4330, !tbaa !2468
  %186 = load i32, i32* %len365, align 4, !dbg !4332, !tbaa !2468
  %cmp369 = icmp slt i32 %185, %186, !dbg !4333
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !4334

if.then371:                                       ; preds = %if.then364
  %187 = load i32, i32* %len365, align 4, !dbg !4335, !tbaa !2468
  store i32 %187, i32* @author_width, align 4, !dbg !4336, !tbaa !2468
  br label %if.end372, !dbg !4337

if.end372:                                        ; preds = %if.then371, %if.then364
  br label %if.end373, !dbg !4338

if.end373:                                        ; preds = %if.end372, %if.end362
  br label %if.end374, !dbg !4339

if.end374:                                        ; preds = %if.end373, %if.end339
  %188 = load i8, i8* @print_scontext, align 1, !dbg !4340, !tbaa !2493
  %tobool375 = trunc i8 %188 to i1, !dbg !4340
  br i1 %tobool375, label %if.then376, label %if.end385, !dbg !4342

if.then376:                                       ; preds = %if.end374
  call void @llvm.dbg.declare(metadata i32* %len377, metadata !4343, metadata !DIExpression()), !dbg !4345
  %189 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4346, !tbaa !2474
  %scontext378 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %189, i32 0, i32 6, !dbg !4347, !ctir !184
  %190 = load i8*, i8** %scontext378, align 8, !dbg !4347, !tbaa !4093, !ctir !143
  %call379 = call i64 @strlen(i8* %190) #16, !dbg !4348
  %conv380 = trunc i64 %call379 to i32, !dbg !4348
  store i32 %conv380, i32* %len377, align 4, !dbg !4345, !tbaa !2468
  %191 = load i32, i32* @scontext_width, align 4, !dbg !4349, !tbaa !2468
  %192 = load i32, i32* %len377, align 4, !dbg !4351, !tbaa !2468
  %cmp381 = icmp slt i32 %191, %192, !dbg !4352
  br i1 %cmp381, label %if.then383, label %if.end384, !dbg !4353

if.then383:                                       ; preds = %if.then376
  %193 = load i32, i32* %len377, align 4, !dbg !4354, !tbaa !2468
  store i32 %193, i32* @scontext_width, align 4, !dbg !4355, !tbaa !2468
  br label %if.end384, !dbg !4356

if.end384:                                        ; preds = %if.then383, %if.then376
  br label %if.end385, !dbg !4357

if.end385:                                        ; preds = %if.end384, %if.end374
  %194 = load i32, i32* @format, align 4, !dbg !4358, !tbaa !2529
  %cmp386 = icmp eq i32 %194, 0, !dbg !4360
  br i1 %cmp386, label %if.then388, label %if.end454, !dbg !4361

if.then388:                                       ; preds = %if.end385
  call void @llvm.dbg.declare(metadata [21 x i8]* %b, metadata !4362, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.declare(metadata i32* %b_len, metadata !4365, metadata !DIExpression()), !dbg !4366
  %195 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4367, !tbaa !2474
  %stat389 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %195, i32 0, i32 3, !dbg !4368, !ctir !184
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat389, i32 0, i32 2, !dbg !4369, !ctir !190
  %196 = load i64, i64* %st_nlink, align 8, !dbg !4369, !tbaa !4370, !ctir !198
  %arraydecay390 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i64 0, i64 0, !dbg !4371
  %call391 = call i8* @umaxtostr(i64 %196, i8* %arraydecay390), !dbg !4372
  %call392 = call i64 @strlen(i8* %call391) #16, !dbg !4373
  %conv393 = trunc i64 %call392 to i32, !dbg !4373
  store i32 %conv393, i32* %b_len, align 4, !dbg !4366, !tbaa !2468
  %197 = load i32, i32* @nlink_width, align 4, !dbg !4374, !tbaa !2468
  %198 = load i32, i32* %b_len, align 4, !dbg !4376, !tbaa !2468
  %cmp394 = icmp slt i32 %197, %198, !dbg !4377
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !4378

if.then396:                                       ; preds = %if.then388
  %199 = load i32, i32* %b_len, align 4, !dbg !4379, !tbaa !2468
  store i32 %199, i32* @nlink_width, align 4, !dbg !4380, !tbaa !2468
  br label %if.end397, !dbg !4381

if.end397:                                        ; preds = %if.then396, %if.then388
  %200 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4382, !tbaa !2474
  %stat398 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %200, i32 0, i32 3, !dbg !4382, !ctir !184
  %st_mode399 = getelementptr inbounds %struct.stat, %struct.stat* %stat398, i32 0, i32 3, !dbg !4382, !ctir !190
  %201 = load i32, i32* %st_mode399, align 8, !dbg !4382, !tbaa !4005, !ctir !200
  %and400 = and i32 %201, 61440, !dbg !4382
  %cmp401 = icmp eq i32 %and400, 8192, !dbg !4382
  br i1 %cmp401, label %if.then409, label %lor.lhs.false403, !dbg !4384

lor.lhs.false403:                                 ; preds = %if.end397
  %202 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4385, !tbaa !2474
  %stat404 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %202, i32 0, i32 3, !dbg !4385, !ctir !184
  %st_mode405 = getelementptr inbounds %struct.stat, %struct.stat* %stat404, i32 0, i32 3, !dbg !4385, !ctir !190
  %203 = load i32, i32* %st_mode405, align 8, !dbg !4385, !tbaa !4005, !ctir !200
  %and406 = and i32 %203, 61440, !dbg !4385
  %cmp407 = icmp eq i32 %and406, 24576, !dbg !4385
  br i1 %cmp407, label %if.then409, label %if.else441, !dbg !4386

if.then409:                                       ; preds = %lor.lhs.false403, %if.end397
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf410, metadata !4387, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %len411, metadata !4390, metadata !DIExpression()), !dbg !4391
  %204 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4392, !tbaa !2474
  %stat412 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %204, i32 0, i32 3, !dbg !4392, !ctir !184
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat412, i32 0, i32 7, !dbg !4392, !ctir !190
  %205 = load i64, i64* %st_rdev, align 8, !dbg !4392, !tbaa !4393, !ctir !194
  %call413 = call i32 @gnu_dev_major(i64 %205) #17, !dbg !4392
  %conv414 = zext i32 %call413 to i64, !dbg !4392
  %arraydecay415 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !4394
  %call416 = call i8* @umaxtostr(i64 %conv414, i8* %arraydecay415), !dbg !4395
  %call417 = call i64 @strlen(i8* %call416) #16, !dbg !4396
  %conv418 = trunc i64 %call417 to i32, !dbg !4396
  store i32 %conv418, i32* %len411, align 4, !dbg !4391, !tbaa !2468
  %206 = load i32, i32* @major_device_number_width, align 4, !dbg !4397, !tbaa !2468
  %207 = load i32, i32* %len411, align 4, !dbg !4399, !tbaa !2468
  %cmp419 = icmp slt i32 %206, %207, !dbg !4400
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !4401

if.then421:                                       ; preds = %if.then409
  %208 = load i32, i32* %len411, align 4, !dbg !4402, !tbaa !2468
  store i32 %208, i32* @major_device_number_width, align 4, !dbg !4403, !tbaa !2468
  br label %if.end422, !dbg !4404

if.end422:                                        ; preds = %if.then421, %if.then409
  %209 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4405, !tbaa !2474
  %stat423 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %209, i32 0, i32 3, !dbg !4405, !ctir !184
  %st_rdev424 = getelementptr inbounds %struct.stat, %struct.stat* %stat423, i32 0, i32 7, !dbg !4405, !ctir !190
  %210 = load i64, i64* %st_rdev424, align 8, !dbg !4405, !tbaa !4393, !ctir !194
  %call425 = call i32 @gnu_dev_minor(i64 %210) #17, !dbg !4405
  %conv426 = zext i32 %call425 to i64, !dbg !4405
  %arraydecay427 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !4406
  %call428 = call i8* @umaxtostr(i64 %conv426, i8* %arraydecay427), !dbg !4407
  %call429 = call i64 @strlen(i8* %call428) #16, !dbg !4408
  %conv430 = trunc i64 %call429 to i32, !dbg !4408
  store i32 %conv430, i32* %len411, align 4, !dbg !4409, !tbaa !2468
  %211 = load i32, i32* @minor_device_number_width, align 4, !dbg !4410, !tbaa !2468
  %212 = load i32, i32* %len411, align 4, !dbg !4412, !tbaa !2468
  %cmp431 = icmp slt i32 %211, %212, !dbg !4413
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !4414

if.then433:                                       ; preds = %if.end422
  %213 = load i32, i32* %len411, align 4, !dbg !4415, !tbaa !2468
  store i32 %213, i32* @minor_device_number_width, align 4, !dbg !4416, !tbaa !2468
  br label %if.end434, !dbg !4417

if.end434:                                        ; preds = %if.then433, %if.end422
  %214 = load i32, i32* @major_device_number_width, align 4, !dbg !4418, !tbaa !2468
  %add435 = add nsw i32 %214, 2, !dbg !4419
  %215 = load i32, i32* @minor_device_number_width, align 4, !dbg !4420, !tbaa !2468
  %add436 = add nsw i32 %add435, %215, !dbg !4421
  store i32 %add436, i32* %len411, align 4, !dbg !4422, !tbaa !2468
  %216 = load i32, i32* @file_size_width, align 4, !dbg !4423, !tbaa !2468
  %217 = load i32, i32* %len411, align 4, !dbg !4425, !tbaa !2468
  %cmp437 = icmp slt i32 %216, %217, !dbg !4426
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !4427

if.then439:                                       ; preds = %if.end434
  %218 = load i32, i32* %len411, align 4, !dbg !4428, !tbaa !2468
  store i32 %218, i32* @file_size_width, align 4, !dbg !4429, !tbaa !2468
  br label %if.end440, !dbg !4430

if.end440:                                        ; preds = %if.then439, %if.end434
  br label %if.end453, !dbg !4431

if.else441:                                       ; preds = %lor.lhs.false403
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf442, metadata !4432, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4435, metadata !DIExpression()), !dbg !4436
  %219 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4437, !tbaa !2474
  %stat443 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %219, i32 0, i32 3, !dbg !4438, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat443, i32 0, i32 8, !dbg !4439, !ctir !190
  %220 = load i64, i64* %st_size, align 8, !dbg !4439, !tbaa !4440, !ctir !180
  %call444 = call i64 @unsigned_file_size(i64 %220), !dbg !4441
  store i64 %call444, i64* %size, align 8, !dbg !4436, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %len445, metadata !4442, metadata !DIExpression()), !dbg !4443
  %221 = load i64, i64* %size, align 8, !dbg !4444, !tbaa !2611
  %arraydecay446 = getelementptr inbounds [652 x i8], [652 x i8]* %buf442, i64 0, i64 0, !dbg !4445
  %222 = load i32, i32* @file_human_output_opts, align 4, !dbg !4446, !tbaa !2468
  %223 = load i64, i64* @file_output_block_size, align 8, !dbg !4447, !tbaa !2611
  %call447 = call i8* @human_readable(i64 %221, i8* %arraydecay446, i32 %222, i64 1, i64 %223), !dbg !4448
  %call448 = call i32 @gnu_mbswidth(i8* %call447, i32 0), !dbg !4449
  store i32 %call448, i32* %len445, align 4, !dbg !4443, !tbaa !2468
  %224 = load i32, i32* @file_size_width, align 4, !dbg !4450, !tbaa !2468
  %225 = load i32, i32* %len445, align 4, !dbg !4452, !tbaa !2468
  %cmp449 = icmp slt i32 %224, %225, !dbg !4453
  br i1 %cmp449, label %if.then451, label %if.end452, !dbg !4454

if.then451:                                       ; preds = %if.else441
  %226 = load i32, i32* %len445, align 4, !dbg !4455, !tbaa !2468
  store i32 %226, i32* @file_size_width, align 4, !dbg !4456, !tbaa !2468
  br label %if.end452, !dbg !4457

if.end452:                                        ; preds = %if.then451, %if.else441
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.end440
  br label %if.end454, !dbg !4458

if.end454:                                        ; preds = %if.end453, %if.end385
  br label %if.end455, !dbg !4459

if.end455:                                        ; preds = %if.end454, %lor.lhs.false89, %lor.lhs.false77, %lor.lhs.false71, %lor.lhs.false62
  %227 = load i8, i8* @print_inode, align 1, !dbg !4460, !tbaa !2493
  %tobool456 = trunc i8 %227 to i1, !dbg !4460
  br i1 %tobool456, label %if.then457, label %if.end470, !dbg !4462

if.then457:                                       ; preds = %if.end455
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf458, metadata !4463, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %len459, metadata !4466, metadata !DIExpression()), !dbg !4467
  %228 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4468, !tbaa !2474
  %stat460 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %228, i32 0, i32 3, !dbg !4469, !ctir !184
  %st_ino461 = getelementptr inbounds %struct.stat, %struct.stat* %stat460, i32 0, i32 1, !dbg !4470, !ctir !190
  %229 = load i64, i64* %st_ino461, align 8, !dbg !4470, !tbaa !3831, !ctir !196
  %arraydecay462 = getelementptr inbounds [21 x i8], [21 x i8]* %buf458, i64 0, i64 0, !dbg !4471
  %call463 = call i8* @umaxtostr(i64 %229, i8* %arraydecay462), !dbg !4472
  %call464 = call i64 @strlen(i8* %call463) #16, !dbg !4473
  %conv465 = trunc i64 %call464 to i32, !dbg !4473
  store i32 %conv465, i32* %len459, align 4, !dbg !4467, !tbaa !2468
  %230 = load i32, i32* @inode_number_width, align 4, !dbg !4474, !tbaa !2468
  %231 = load i32, i32* %len459, align 4, !dbg !4476, !tbaa !2468
  %cmp466 = icmp slt i32 %230, %231, !dbg !4477
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !4478

if.then468:                                       ; preds = %if.then457
  %232 = load i32, i32* %len459, align 4, !dbg !4479, !tbaa !2468
  store i32 %232, i32* @inode_number_width, align 4, !dbg !4480, !tbaa !2468
  br label %if.end469, !dbg !4481

if.end469:                                        ; preds = %if.then468, %if.then457
  br label %if.end470, !dbg !4482

if.end470:                                        ; preds = %if.end469, %if.end455
  %233 = load i8*, i8** %name.addr, align 8, !dbg !4483, !tbaa !2474
  %call471 = call noalias i8* @xstrdup(i8* %233), !dbg !4484
  %234 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4485, !tbaa !2474
  %name472 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %234, i32 0, i32 0, !dbg !4486, !ctir !184
  store i8* %call471, i8** %name472, align 8, !dbg !4487, !tbaa !4040, !ctir !143
  %235 = load i64, i64* @cwd_n_used, align 8, !dbg !4488, !tbaa !2611
  %inc473 = add i64 %235, 1, !dbg !4488
  store i64 %inc473, i64* @cwd_n_used, align 8, !dbg !4488, !tbaa !2611
  %236 = load i64, i64* %blocks, align 8, !dbg !4489, !tbaa !2611
  store i64 %236, i64* %retval, align 8, !dbg !4490
  br label %return, !dbg !4490

return:                                           ; preds = %if.end470, %if.end154, %if.then153
  %237 = load i64, i64* %retval, align 8, !dbg !4491
  ret i64 %237, !dbg !4491
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_directory(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !4492 !ctir !595 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %realname.addr = alloca i8*, align 8, !ctir !146
  %command_line_arg.addr = alloca i8, align 1, !ctir !141
  %new = alloca %struct.pending*, align 8, !ctir !235
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4493, metadata !DIExpression()), !dbg !4494
  store i8* %realname, i8** %realname.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4495, metadata !DIExpression()), !dbg !4496
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4497, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.declare(metadata %struct.pending** %new, metadata !4499, metadata !DIExpression()), !dbg !4500
  %call = call noalias i8* @xmalloc(i64 32), !dbg !4501
  %0 = bitcast i8* %call to %struct.pending*, !dbg !4501
  store %struct.pending* %0, %struct.pending** %new, align 8, !dbg !4500, !tbaa !2474
  %1 = load i8*, i8** %realname.addr, align 8, !dbg !4502, !tbaa !2474
  %tobool = icmp ne i8* %1, null, !dbg !4502
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4502

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %realname.addr, align 8, !dbg !4503, !tbaa !2474
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !4504
  br label %cond.end, !dbg !4502

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !4502
  %3 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4505, !tbaa !2474
  %realname2 = getelementptr inbounds %struct.pending, %struct.pending* %3, i32 0, i32 1, !dbg !4506, !ctir !236
  store i8* %cond, i8** %realname2, align 8, !dbg !4507, !tbaa !2717, !ctir !143
  %4 = load i8*, i8** %name.addr, align 8, !dbg !4508, !tbaa !2474
  %tobool3 = icmp ne i8* %4, null, !dbg !4508
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !4508

cond.true4:                                       ; preds = %cond.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !4509, !tbaa !2474
  %call5 = call noalias i8* @xstrdup(i8* %5), !dbg !4510
  br label %cond.end7, !dbg !4508

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !4508

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi i8* [ %call5, %cond.true4 ], [ null, %cond.false6 ], !dbg !4508
  %6 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4511, !tbaa !2474
  %name9 = getelementptr inbounds %struct.pending, %struct.pending* %6, i32 0, i32 0, !dbg !4512, !ctir !236
  store i8* %cond8, i8** %name9, align 8, !dbg !4513, !tbaa !2692, !ctir !143
  %7 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4514, !tbaa !2493
  %tobool10 = trunc i8 %7 to i1, !dbg !4514
  %8 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4515, !tbaa !2474
  %command_line_arg11 = getelementptr inbounds %struct.pending, %struct.pending* %8, i32 0, i32 2, !dbg !4516, !ctir !236
  %frombool12 = zext i1 %tobool10 to i8, !dbg !4517
  store i8 %frombool12, i8* %command_line_arg11, align 8, !dbg !4517, !tbaa !2720, !ctir !141
  %9 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !4518, !tbaa !2474
  %10 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4519, !tbaa !2474
  %next = getelementptr inbounds %struct.pending, %struct.pending* %10, i32 0, i32 3, !dbg !4520, !ctir !236
  store %struct.pending* %9, %struct.pending** %next, align 8, !dbg !4521, !tbaa !2671, !ctir !235
  %11 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4522, !tbaa !2474
  store %struct.pending* %11, %struct.pending** @pending_dirs, align 8, !dbg !4523, !tbaa !2474
  ret void, !dbg !4524
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sort_files() #0 !dbg !4525 !ctir !336 {
entry:
  %use_strcmp = alloca i8, align 1, !ctir !141
  call void @llvm.dbg.declare(metadata i8* %use_strcmp, metadata !4526, metadata !DIExpression()), !dbg !4527
  %0 = load i64, i64* @sorted_file_alloc, align 8, !dbg !4528, !tbaa !2611
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !4530, !tbaa !2611
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4531, !tbaa !2611
  %div = udiv i64 %2, 2, !dbg !4532
  %add = add i64 %1, %div, !dbg !4533
  %cmp = icmp ult i64 %0, %add, !dbg !4534
  br i1 %cmp, label %if.then, label %if.end, !dbg !4535

if.then:                                          ; preds = %entry
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4536, !tbaa !2474
  %4 = bitcast i8** %3 to i8*, !dbg !4536
  call void @free(i8* %4) #13, !dbg !4538
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !4539, !tbaa !2611
  %call = call noalias i8* @xnmalloc(i64 %5, i64 24), !dbg !4540
  %6 = bitcast i8* %call to i8**, !dbg !4540
  store i8** %6, i8*** @sorted_file, align 8, !dbg !4541, !tbaa !2474
  %7 = load i64, i64* @cwd_n_used, align 8, !dbg !4542, !tbaa !2611
  %mul = mul i64 3, %7, !dbg !4543
  store i64 %mul, i64* @sorted_file_alloc, align 8, !dbg !4544, !tbaa !2611
  br label %if.end, !dbg !4545

if.end:                                           ; preds = %if.then, %entry
  call void @initialize_ordering_vector(), !dbg !4546
  %8 = load i32, i32* @sort_type, align 4, !dbg !4547, !tbaa !2529
  %cmp1 = icmp eq i32 %8, -1, !dbg !4549
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4550

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !4551

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @_setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0)) #18, !dbg !4552
  %tobool = icmp ne i32 %call4, 0, !dbg !4552
  br i1 %tobool, label %if.else, label %if.then5, !dbg !4554

if.then5:                                         ; preds = %if.end3
  store i8 0, i8* %use_strcmp, align 1, !dbg !4555, !tbaa !2493
  br label %if.end7, !dbg !4556

if.else:                                          ; preds = %if.end3
  store i8 1, i8* %use_strcmp, align 1, !dbg !4557, !tbaa !2493
  %9 = load i32, i32* @sort_type, align 4, !dbg !4559, !tbaa !2529
  %cmp6 = icmp ne i32 %9, 3, !dbg !4559
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !4559

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !4559

cond.false:                                       ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3818, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.sort_files, i64 0, i64 0)) #15, !dbg !4559
  unreachable, !dbg !4559

10:                                               ; No predecessors!
  br label %cond.end, !dbg !4559

cond.end:                                         ; preds = %10, %cond.true
  call void @initialize_ordering_vector(), !dbg !4560
  br label %if.end7

if.end7:                                          ; preds = %cond.end, %if.then5
  %11 = load i8**, i8*** @sorted_file, align 8, !dbg !4561, !tbaa !2474
  %12 = load i64, i64* @cwd_n_used, align 8, !dbg !4562, !tbaa !2611
  %13 = load i32, i32* @sort_type, align 4, !dbg !4563, !tbaa !2529
  %14 = load i32, i32* @sort_type, align 4, !dbg !4564, !tbaa !2529
  %cmp8 = icmp eq i32 %14, 4, !dbg !4565
  br i1 %cmp8, label %cond.true9, label %cond.false10, !dbg !4564

cond.true9:                                       ; preds = %if.end7
  %15 = load i32, i32* @time_type, align 4, !dbg !4566, !tbaa !2529
  br label %cond.end11, !dbg !4564

cond.false10:                                     ; preds = %if.end7
  br label %cond.end11, !dbg !4564

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond = phi i32 [ %15, %cond.true9 ], [ 0, %cond.false10 ], !dbg !4564
  %add12 = add i32 %13, %cond, !dbg !4567
  %idxprom = zext i32 %add12 to i64, !dbg !4568
  %arrayidx = getelementptr inbounds [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]], [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]]* @sort_functions, i64 0, i64 %idxprom, !dbg !4568, !ctir !698
  %16 = load i8, i8* %use_strcmp, align 1, !dbg !4569, !tbaa !2493
  %tobool13 = trunc i8 %16 to i1, !dbg !4569
  %idxprom14 = zext i1 %tobool13 to i64, !dbg !4568
  %arrayidx15 = getelementptr inbounds [2 x [2 x [2 x i32 (i8*, i8*)*]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]]* %arrayidx, i64 0, i64 %idxprom14, !dbg !4568, !ctir !706
  %17 = load i8, i8* @sort_reverse, align 1, !dbg !4570, !tbaa !2493
  %tobool16 = trunc i8 %17 to i1, !dbg !4570
  %idxprom17 = zext i1 %tobool16 to i64, !dbg !4568
  %arrayidx18 = getelementptr inbounds [2 x [2 x i32 (i8*, i8*)*]], [2 x [2 x i32 (i8*, i8*)*]]* %arrayidx15, i64 0, i64 %idxprom17, !dbg !4568, !ctir !708
  %18 = load i8, i8* @directories_first, align 1, !dbg !4571, !tbaa !2493
  %tobool19 = trunc i8 %18 to i1, !dbg !4571
  %idxprom20 = zext i1 %tobool19 to i64, !dbg !4568
  %arrayidx21 = getelementptr inbounds [2 x i32 (i8*, i8*)*], [2 x i32 (i8*, i8*)*]* %arrayidx18, i64 0, i64 %idxprom20, !dbg !4568, !ctir !710
  %19 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx21, align 8, !dbg !4568, !tbaa !2474
  call void @mpsort(i8** %11, i64 %12, i32 (i8*, i8*)* %19), !dbg !4572
  br label %return, !dbg !4573

return:                                           ; preds = %cond.end11, %if.then2
  ret void, !dbg !4573
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extract_dirs_from_files(i8* %dirname, i1 zeroext %command_line_arg) #0 !dbg !4574 !ctir !683 {
entry:
  %dirname.addr = alloca i8*, align 8, !ctir !146
  %command_line_arg.addr = alloca i8, align 1, !ctir !141
  %i = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ignore_dot_and_dot_dot = alloca i8, align 1, !ctir !141
  %f = alloca %struct.fileinfo*, align 8, !ctir !250
  %name17 = alloca i8*, align 8, !ctir !143
  %f32 = alloca %struct.fileinfo*, align 8, !ctir !250
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !4575, metadata !DIExpression()), !dbg !4576
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4577, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4579, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4581, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.declare(metadata i8* %ignore_dot_and_dot_dot, metadata !4583, metadata !DIExpression()), !dbg !4584
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !4585, !tbaa !2474
  %cmp = icmp ne i8* %0, null, !dbg !4586
  %frombool1 = zext i1 %cmp to i8, !dbg !4584
  store i8 %frombool1, i8* %ignore_dot_and_dot_dot, align 1, !dbg !4584, !tbaa !2493
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !4587, !tbaa !2474
  %tobool = icmp ne i8* %1, null, !dbg !4587
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4589

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4590, !tbaa !2474
  %tobool2 = icmp ne %struct.hash_table* %2, null, !dbg !4590
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4591

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !4592, !tbaa !2474
  call void @queue_directory(i8* null, i8* %3, i1 zeroext false), !dbg !4594
  br label %if.end, !dbg !4595

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !4596, !tbaa !2611
  store i64 %4, i64* %i, align 8, !dbg !4598, !tbaa !2611
  br label %for.cond, !dbg !4599

for.cond:                                         ; preds = %if.end27, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !4600, !tbaa !2611
  %dec = add i64 %5, -1, !dbg !4600
  store i64 %dec, i64* %i, align 8, !dbg !4600, !tbaa !2611
  %cmp3 = icmp ne i64 %5, 0, !dbg !4602
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4603

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !4604, metadata !DIExpression()), !dbg !4606
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !4607, !tbaa !2474
  %7 = load i64, i64* %i, align 8, !dbg !4608, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !4607, !ctir !650
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !4607, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !4607
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !4606, !tbaa !2474
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4609, !tbaa !2474
  %call = call zeroext i1 @is_directory(%struct.fileinfo* %10), !dbg !4611
  br i1 %call, label %land.lhs.true4, label %if.end27, !dbg !4612

land.lhs.true4:                                   ; preds = %for.body
  %11 = load i8, i8* %ignore_dot_and_dot_dot, align 1, !dbg !4613, !tbaa !2493
  %tobool5 = trunc i8 %11 to i1, !dbg !4613
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !4614

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4615, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !4616, !ctir !184
  %13 = load i8*, i8** %name, align 8, !dbg !4616, !tbaa !4040, !ctir !143
  %call6 = call zeroext i1 @basename_is_dot_or_dotdot(i8* %13), !dbg !4617
  br i1 %call6, label %if.end27, label %if.then7, !dbg !4618

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true4
  %14 = load i8*, i8** %dirname.addr, align 8, !dbg !4619, !tbaa !2474
  %tobool8 = icmp ne i8* %14, null, !dbg !4619
  br i1 %tobool8, label %lor.lhs.false9, label %if.then14, !dbg !4622

lor.lhs.false9:                                   ; preds = %if.then7
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4623, !tbaa !2474
  %name10 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 0, !dbg !4624, !ctir !184
  %16 = load i8*, i8** %name10, align 8, !dbg !4624, !tbaa !4040, !ctir !143
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !4623, !ctir !143
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !4623, !tbaa !2529
  %conv = sext i8 %17 to i32, !dbg !4623
  %cmp12 = icmp eq i32 %conv, 47, !dbg !4625
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4626

if.then14:                                        ; preds = %lor.lhs.false9, %if.then7
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4627, !tbaa !2474
  %name15 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 0, !dbg !4628, !ctir !184
  %19 = load i8*, i8** %name15, align 8, !dbg !4628, !tbaa !4040, !ctir !143
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4629, !tbaa !2474
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 1, !dbg !4630, !ctir !184
  %21 = load i8*, i8** %linkname, align 8, !dbg !4630, !tbaa !4178, !ctir !143
  %22 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4631, !tbaa !2493
  %tobool16 = trunc i8 %22 to i1, !dbg !4631
  call void @queue_directory(i8* %19, i8* %21, i1 zeroext %tobool16), !dbg !4632
  br label %if.end22, !dbg !4632

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.dbg.declare(metadata i8** %name17, metadata !4633, metadata !DIExpression()), !dbg !4635
  %23 = load i8*, i8** %dirname.addr, align 8, !dbg !4636, !tbaa !2474
  %24 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4637, !tbaa !2474
  %name18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %24, i32 0, i32 0, !dbg !4638, !ctir !184
  %25 = load i8*, i8** %name18, align 8, !dbg !4638, !tbaa !4040, !ctir !143
  %call19 = call i8* @file_name_concat(i8* %23, i8* %25, i8** null), !dbg !4639
  store i8* %call19, i8** %name17, align 8, !dbg !4635, !tbaa !2474
  %26 = load i8*, i8** %name17, align 8, !dbg !4640, !tbaa !2474
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4641, !tbaa !2474
  %linkname20 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 1, !dbg !4642, !ctir !184
  %28 = load i8*, i8** %linkname20, align 8, !dbg !4642, !tbaa !4178, !ctir !143
  %29 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4643, !tbaa !2493
  %tobool21 = trunc i8 %29 to i1, !dbg !4643
  call void @queue_directory(i8* %26, i8* %28, i1 zeroext %tobool21), !dbg !4644
  %30 = load i8*, i8** %name17, align 8, !dbg !4645, !tbaa !2474
  call void @free(i8* %30) #13, !dbg !4646
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then14
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4647, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 4, !dbg !4649, !ctir !184
  %32 = load i32, i32* %filetype, align 8, !dbg !4649, !tbaa !3838, !ctir !36
  %cmp23 = icmp eq i32 %32, 9, !dbg !4650
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !4651

if.then25:                                        ; preds = %if.end22
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4652, !tbaa !2474
  call void @free_ent(%struct.fileinfo* %33), !dbg !4653
  br label %if.end26, !dbg !4653

if.end26:                                         ; preds = %if.then25, %if.end22
  br label %if.end27, !dbg !4654

if.end27:                                         ; preds = %if.end26, %lor.lhs.false, %for.body
  br label %for.cond, !dbg !4655, !llvm.loop !4656

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4658, !tbaa !2611
  store i64 0, i64* %j, align 8, !dbg !4660, !tbaa !2611
  br label %for.cond28, !dbg !4661

for.cond28:                                       ; preds = %for.inc, %for.end
  %34 = load i64, i64* %i, align 8, !dbg !4662, !tbaa !2611
  %35 = load i64, i64* @cwd_n_used, align 8, !dbg !4664, !tbaa !2611
  %cmp29 = icmp ult i64 %34, %35, !dbg !4665
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !4666

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f32, metadata !4667, metadata !DIExpression()), !dbg !4669
  %36 = load i8**, i8*** @sorted_file, align 8, !dbg !4670, !tbaa !2474
  %37 = load i64, i64* %i, align 8, !dbg !4671, !tbaa !2611
  %arrayidx33 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !4670, !ctir !650
  %38 = load i8*, i8** %arrayidx33, align 8, !dbg !4670, !tbaa !2474
  %39 = bitcast i8* %38 to %struct.fileinfo*, !dbg !4670
  store %struct.fileinfo* %39, %struct.fileinfo** %f32, align 8, !dbg !4669, !tbaa !2474
  %40 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4672, !tbaa !2474
  %41 = bitcast %struct.fileinfo* %40 to i8*, !dbg !4672
  %42 = load i8**, i8*** @sorted_file, align 8, !dbg !4673, !tbaa !2474
  %43 = load i64, i64* %j, align 8, !dbg !4674, !tbaa !2611
  %arrayidx34 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !4673, !ctir !650
  store i8* %41, i8** %arrayidx34, align 8, !dbg !4675, !tbaa !2474
  %44 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4676, !tbaa !2474
  %filetype35 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %44, i32 0, i32 4, !dbg !4677, !ctir !184
  %45 = load i32, i32* %filetype35, align 8, !dbg !4677, !tbaa !3838, !ctir !36
  %cmp36 = icmp ne i32 %45, 9, !dbg !4678
  %conv37 = zext i1 %cmp36 to i32, !dbg !4678
  %conv38 = sext i32 %conv37 to i64, !dbg !4679
  %46 = load i64, i64* %j, align 8, !dbg !4680, !tbaa !2611
  %add = add i64 %46, %conv38, !dbg !4680
  store i64 %add, i64* %j, align 8, !dbg !4680, !tbaa !2611
  br label %for.inc, !dbg !4681

for.inc:                                          ; preds = %for.body31
  %47 = load i64, i64* %i, align 8, !dbg !4682, !tbaa !2611
  %inc = add i64 %47, 1, !dbg !4682
  store i64 %inc, i64* %i, align 8, !dbg !4682, !tbaa !2611
  br label %for.cond28, !dbg !4683, !llvm.loop !4684

for.end39:                                        ; preds = %for.cond28
  %48 = load i64, i64* %j, align 8, !dbg !4686, !tbaa !2611
  store i64 %48, i64* @cwd_n_used, align 8, !dbg !4687, !tbaa !2611
  ret void, !dbg !4688
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_current_files() #0 !dbg !4689 !ctir !336 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4690, metadata !DIExpression()), !dbg !4691
  %0 = load i32, i32* @format, align 4, !dbg !4692, !tbaa !2529
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb8
    i32 0, label %sw.bb9
  ], !dbg !4693

sw.bb:                                            ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4694, !tbaa !2611
  br label %for.cond, !dbg !4697

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i64, i64* %i, align 8, !dbg !4698, !tbaa !2611
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4700, !tbaa !2611
  %cmp = icmp ult i64 %1, %2, !dbg !4701
  br i1 %cmp, label %for.body, label %for.end, !dbg !4702

for.body:                                         ; preds = %for.cond
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4703, !tbaa !2474
  %4 = load i64, i64* %i, align 8, !dbg !4705, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %4, !dbg !4703, !ctir !650
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4703, !tbaa !2474
  %6 = bitcast i8* %5 to %struct.fileinfo*, !dbg !4703
  %call = call i64 @print_file_name_and_frills(%struct.fileinfo* %6, i64 0), !dbg !4706
  %call1 = call i32 @putchar_unlocked(i32 10), !dbg !4707
  br label %for.inc, !dbg !4708

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !4709, !tbaa !2611
  %inc = add i64 %7, 1, !dbg !4709
  store i64 %inc, i64* %i, align 8, !dbg !4709, !tbaa !2611
  br label %for.cond, !dbg !4710, !llvm.loop !4711

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4713

sw.bb2:                                           ; preds = %entry
  %8 = load i64, i64* @line_length, align 8, !dbg !4714, !tbaa !2611
  %tobool = icmp ne i64 %8, 0, !dbg !4714
  br i1 %tobool, label %if.else, label %if.then, !dbg !4716

if.then:                                          ; preds = %sw.bb2
  call void @print_with_separator(i8 signext 32), !dbg !4717
  br label %if.end, !dbg !4717

if.else:                                          ; preds = %sw.bb2
  call void @print_many_per_line(), !dbg !4718
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !4719

sw.bb3:                                           ; preds = %entry
  %9 = load i64, i64* @line_length, align 8, !dbg !4720, !tbaa !2611
  %tobool4 = icmp ne i64 %9, 0, !dbg !4720
  br i1 %tobool4, label %if.else6, label %if.then5, !dbg !4722

if.then5:                                         ; preds = %sw.bb3
  call void @print_with_separator(i8 signext 32), !dbg !4723
  br label %if.end7, !dbg !4723

if.else6:                                         ; preds = %sw.bb3
  call void @print_horizontal(), !dbg !4724
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  br label %sw.epilog, !dbg !4725

sw.bb8:                                           ; preds = %entry
  call void @print_with_separator(i8 signext 44), !dbg !4726
  br label %sw.epilog, !dbg !4727

sw.bb9:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4728, !tbaa !2611
  br label %for.cond10, !dbg !4730

for.cond10:                                       ; preds = %for.inc16, %sw.bb9
  %10 = load i64, i64* %i, align 8, !dbg !4731, !tbaa !2611
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !4733, !tbaa !2611
  %cmp11 = icmp ult i64 %10, %11, !dbg !4734
  br i1 %cmp11, label %for.body12, label %for.end18, !dbg !4735

for.body12:                                       ; preds = %for.cond10
  call void @set_normal_color(), !dbg !4736
  %12 = load i8**, i8*** @sorted_file, align 8, !dbg !4738, !tbaa !2474
  %13 = load i64, i64* %i, align 8, !dbg !4739, !tbaa !2611
  %arrayidx13 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !4738, !ctir !650
  %14 = load i8*, i8** %arrayidx13, align 8, !dbg !4738, !tbaa !2474
  %15 = bitcast i8* %14 to %struct.fileinfo*, !dbg !4738
  call void @print_long_format(%struct.fileinfo* %15), !dbg !4740
  br label %do.body, !dbg !4741

do.body:                                          ; preds = %for.body12
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !4742
  %16 = load i64, i64* @dired_pos, align 8, !dbg !4742, !tbaa !2611
  %inc15 = add i64 %16, 1, !dbg !4742
  store i64 %inc15, i64* @dired_pos, align 8, !dbg !4742, !tbaa !2611
  br label %do.end, !dbg !4742

do.end:                                           ; preds = %do.body
  br label %for.inc16, !dbg !4744

for.inc16:                                        ; preds = %do.end
  %17 = load i64, i64* %i, align 8, !dbg !4745, !tbaa !2611
  %inc17 = add i64 %17, 1, !dbg !4745
  store i64 %inc17, i64* %i, align 8, !dbg !4745, !tbaa !2611
  br label %for.cond10, !dbg !4746, !llvm.loop !4747

for.end18:                                        ; preds = %for.cond10
  br label %sw.epilog, !dbg !4749

sw.epilog:                                        ; preds = %entry, %for.end18, %sw.bb8, %if.end7, %if.end, %for.end
  ret void, !dbg !4750
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal { i64, i64 } @dev_ino_pop() #0 !dbg !4751 !ctir !341 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !252
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !251
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !343
  %tmp = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !4752, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !4754, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !4756, metadata !DIExpression()), !dbg !4757
  store i32 16, i32* %dev_ino_size, align 4, !dbg !4757, !tbaa !2468
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !4758, !tbaa !2468
  %conv = sext i32 %0 to i64, !dbg !4758
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4759, metadata !DIExpression()), !dbg !4761
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !4761, !tbaa !2474
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4761, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !4761, !ctir !344
  %2 = load i8*, i8** %next_free, align 8, !dbg !4761, !tbaa !4762, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4761, !tbaa !2474
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !4761, !ctir !344
  %4 = load i8*, i8** %object_base, align 8, !dbg !4761, !tbaa !4764, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4761
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4761
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4761
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4761, !tbaa !2611
  %5 = load i64, i64* %tmp, align 8, !dbg !4761, !tbaa !2611
  %cmp = icmp ule i64 %conv, %5, !dbg !4758
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4758

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4758

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1027, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.dev_ino_pop, i64 0, i64 0)) #15, !dbg !4758
  unreachable, !dbg !4758

6:                                                ; No predecessors!
  br label %cond.end, !dbg !4758

cond.end:                                         ; preds = %6, %cond.true
  %7 = load i32, i32* %dev_ino_size, align 4, !dbg !4765, !tbaa !2468
  %sub = sub nsw i32 0, %7, !dbg !4765
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4765, !tbaa !4762, !ctir !143
  %idx.ext = sext i32 %sub to i64, !dbg !4765
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !4765
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4765, !tbaa !4762, !ctir !143
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4766, !tbaa !4762, !ctir !143
  store i8* %9, i8** %vdi, align 8, !dbg !4767, !tbaa !2474
  %10 = load i8*, i8** %vdi, align 8, !dbg !4768, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.dev_ino*, !dbg !4768
  store %struct.dev_ino* %11, %struct.dev_ino** %di, align 8, !dbg !4769, !tbaa !2474
  %12 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4770, !tbaa !2474
  %13 = bitcast %struct.dev_ino* %retval to i8*, !dbg !4771
  %14 = bitcast %struct.dev_ino* %12 to i8*, !dbg !4771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false), !dbg !4771, !tbaa.struct !4772
  %15 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !4773
  %16 = load { i64, i64 }, { i64, i64 }* %15, align 8, !dbg !4773
  ret { i64, i64 } %16, !dbg !4773
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_pending_ent(%struct.pending* %p) #0 !dbg !4774 !ctir !390 {
entry:
  %p.addr = alloca %struct.pending*, align 8, !ctir !235
  store %struct.pending* %p, %struct.pending** %p.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.pending** %p.addr, metadata !4775, metadata !DIExpression()), !dbg !4776
  %0 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4777, !tbaa !2474
  %name = getelementptr inbounds %struct.pending, %struct.pending* %0, i32 0, i32 0, !dbg !4778, !ctir !236
  %1 = load i8*, i8** %name, align 8, !dbg !4778, !tbaa !2692, !ctir !143
  call void @free(i8* %1) #13, !dbg !4779
  %2 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4780, !tbaa !2474
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %2, i32 0, i32 1, !dbg !4781, !ctir !236
  %3 = load i8*, i8** %realname, align 8, !dbg !4781, !tbaa !2717, !ctir !143
  call void @free(i8* %3) #13, !dbg !4782
  %4 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4783, !tbaa !2474
  %5 = bitcast %struct.pending* %4 to i8*, !dbg !4783
  call void @free(i8* %5) #13, !dbg !4784
  ret void, !dbg !4785
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_dir(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !961 !ctir !595 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %realname.addr = alloca i8*, align 8, !ctir !146
  %command_line_arg.addr = alloca i8, align 1, !ctir !141
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !597
  %next = alloca %struct.dirent*, align 8, !ctir !601
  %total_blocks = alloca i64, align 8, !ctir !168
  %dir_stat = alloca %struct.stat, align 8, !ctir !190
  %fd = alloca i32, align 4, !ctir !27
  %absolute_name = alloca i8*, align 8, !ctir !143
  %type = alloca i32, align 4, !ctir !36
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca [652 x i8], align 16, !ctir !610
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4786, metadata !DIExpression()), !dbg !4787
  store i8* %realname, i8** %realname.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4788, metadata !DIExpression()), !dbg !4789
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4790, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4792, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.declare(metadata %struct.dirent** %next, metadata !4794, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.declare(metadata i64* %total_blocks, metadata !4796, metadata !DIExpression()), !dbg !4797
  store i64 0, i64* %total_blocks, align 8, !dbg !4797, !tbaa !2611
  %call = call i32* @__errno_location() #17, !dbg !4798
  store i32 0, i32* %call, align 4, !dbg !4799, !tbaa !2468, !ctir !27
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4800, !tbaa !2474
  %call1 = call %struct.__dirstream* @opendir(i8* %0), !dbg !4801
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4802, !tbaa !2474
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4803, !tbaa !2474
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !4803
  br i1 %tobool, label %if.end, label %if.then, !dbg !4805

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4806, !tbaa !2493
  %tobool2 = trunc i8 %2 to i1, !dbg !4806
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i64 0, i64 0)) #13, !dbg !4808
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4809, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool2, i8* %call3, i8* %3), !dbg !4810
  br label %if.end150, !dbg !4811

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4812, !tbaa !2474
  %tobool4 = icmp ne %struct.hash_table* %4, null, !dbg !4812
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !4814

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.stat* %dir_stat, metadata !4815, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4818, metadata !DIExpression()), !dbg !4819
  %5 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4820, !tbaa !2474
  %call6 = call i32 @dirfd(%struct.__dirstream* %5) #13, !dbg !4821
  store i32 %call6, i32* %fd, align 4, !dbg !4819, !tbaa !2468
  %6 = load i32, i32* %fd, align 4, !dbg !4822, !tbaa !2468
  %cmp = icmp sle i32 0, %6, !dbg !4824
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4825

cond.true:                                        ; preds = %if.then5
  %7 = load i32, i32* %fd, align 4, !dbg !4826, !tbaa !2468
  %call7 = call i32 @fstat(i32 %7, %struct.stat* %dir_stat) #13, !dbg !4827
  br label %cond.end, !dbg !4825

cond.false:                                       ; preds = %if.then5
  %8 = load i8*, i8** %name.addr, align 8, !dbg !4828, !tbaa !2474
  %call8 = call i32 @stat(i8* %8, %struct.stat* %dir_stat) #13, !dbg !4829
  br label %cond.end, !dbg !4825

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %call8, %cond.false ], !dbg !4825
  %cmp9 = icmp slt i32 %cond, 0, !dbg !4830
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !4831

if.then10:                                        ; preds = %cond.end
  %9 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4832, !tbaa !2493
  %tobool11 = trunc i8 %9 to i1, !dbg !4832
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.204, i64 0, i64 0)) #13, !dbg !4834
  %10 = load i8*, i8** %name.addr, align 8, !dbg !4835, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool11, i8* %call12, i8* %10), !dbg !4836
  %11 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4837, !tbaa !2474
  %call13 = call i32 @closedir(%struct.__dirstream* %11), !dbg !4838
  br label %if.end150, !dbg !4839

if.end14:                                         ; preds = %cond.end
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4840, !ctir !190
  %12 = load i64, i64* %st_dev, align 8, !dbg !4840, !tbaa !4842, !ctir !194
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4843, !ctir !190
  %13 = load i64, i64* %st_ino, align 8, !dbg !4843, !tbaa !4844, !ctir !196
  %call15 = call zeroext i1 @visit_dir(i64 %12, i64 %13), !dbg !4845
  br i1 %call15, label %if.then16, label %if.end20, !dbg !4846

if.then16:                                        ; preds = %if.end14
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0)) #13, !dbg !4847
  %14 = load i8*, i8** %name.addr, align 8, !dbg !4849, !tbaa !2474
  %call18 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %14), !dbg !4849
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17, i8* %call18), !dbg !4850
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4851, !tbaa !2474
  %call19 = call i32 @closedir(%struct.__dirstream* %15), !dbg !4852
  call void @set_exit_status(i1 zeroext true), !dbg !4853
  br label %if.end150, !dbg !4854

if.end20:                                         ; preds = %if.end14
  %st_dev21 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4855, !ctir !190
  %16 = load i64, i64* %st_dev21, align 8, !dbg !4855, !tbaa !4842, !ctir !194
  %st_ino22 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4856, !ctir !190
  %17 = load i64, i64* %st_ino22, align 8, !dbg !4856, !tbaa !4844, !ctir !196
  call void @dev_ino_push(i64 %16, i64 %17), !dbg !4857
  br label %if.end23, !dbg !4858

if.end23:                                         ; preds = %if.end20, %if.end
  call void @clear_files(), !dbg !4859
  %18 = load i8, i8* @recursive, align 1, !dbg !4860, !tbaa !2493
  %tobool24 = trunc i8 %18 to i1, !dbg !4860
  br i1 %tobool24, label %if.then26, label %lor.lhs.false, !dbg !4862

lor.lhs.false:                                    ; preds = %if.end23
  %19 = load i8, i8* @print_dir_name, align 1, !dbg !4863, !tbaa !2493
  %tobool25 = trunc i8 %19 to i1, !dbg !4863
  br i1 %tobool25, label %if.then26, label %if.end58, !dbg !4864

if.then26:                                        ; preds = %lor.lhs.false, %if.end23
  %20 = load i8, i8* @print_dir.first, align 1, !dbg !4865, !tbaa !2493
  %tobool27 = trunc i8 %20 to i1, !dbg !4865
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4868

if.then28:                                        ; preds = %if.then26
  br label %do.body, !dbg !4869

do.body:                                          ; preds = %if.then28
  %call29 = call i32 @putchar_unlocked(i32 10), !dbg !4870
  %21 = load i64, i64* @dired_pos, align 8, !dbg !4870, !tbaa !2611
  %inc = add i64 %21, 1, !dbg !4870
  store i64 %inc, i64* @dired_pos, align 8, !dbg !4870, !tbaa !2611
  br label %do.end, !dbg !4870

do.end:                                           ; preds = %do.body
  br label %if.end30, !dbg !4870

if.end30:                                         ; preds = %do.end, %if.then26
  store i8 0, i8* @print_dir.first, align 1, !dbg !4872, !tbaa !2493
  br label %do.body31, !dbg !4873

do.body31:                                        ; preds = %if.end30
  %22 = load i8, i8* @dired, align 1, !dbg !4874, !tbaa !2493
  %tobool32 = trunc i8 %22 to i1, !dbg !4874
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !4877

if.then33:                                        ; preds = %do.body31
  br label %do.body34, !dbg !4874

do.body34:                                        ; preds = %if.then33
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4878, !tbaa !2474
  %call35 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %23), !dbg !4878
  %24 = load i64, i64* @dired_pos, align 8, !dbg !4878, !tbaa !2611
  %add = add i64 %24, 2, !dbg !4878
  store i64 %add, i64* @dired_pos, align 8, !dbg !4878, !tbaa !2611
  br label %do.end36, !dbg !4878

do.end36:                                         ; preds = %do.body34
  br label %if.end37, !dbg !4878

if.end37:                                         ; preds = %do.end36, %do.body31
  br label %do.end38, !dbg !4877

do.end38:                                         ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8** %absolute_name, metadata !4880, metadata !DIExpression()), !dbg !4881
  store i8* null, i8** %absolute_name, align 8, !dbg !4881, !tbaa !2474
  %25 = load i8, i8* @print_hyperlink, align 1, !dbg !4882, !tbaa !2493
  %tobool39 = trunc i8 %25 to i1, !dbg !4882
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !4884

if.then40:                                        ; preds = %do.end38
  %26 = load i8*, i8** %name.addr, align 8, !dbg !4885, !tbaa !2474
  %call41 = call i8* @canonicalize_filename_mode(i8* %26, i32 2), !dbg !4887
  store i8* %call41, i8** %absolute_name, align 8, !dbg !4888, !tbaa !2474
  %27 = load i8*, i8** %absolute_name, align 8, !dbg !4889, !tbaa !2474
  %tobool42 = icmp ne i8* %27, null, !dbg !4889
  br i1 %tobool42, label %if.end46, label %if.then43, !dbg !4891

if.then43:                                        ; preds = %if.then40
  %28 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4892, !tbaa !2493
  %tobool44 = trunc i8 %28 to i1, !dbg !4892
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !4893
  %29 = load i8*, i8** %name.addr, align 8, !dbg !4894, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool44, i8* %call45, i8* %29), !dbg !4895
  br label %if.end46, !dbg !4895

if.end46:                                         ; preds = %if.then43, %if.then40
  br label %if.end47, !dbg !4896

if.end47:                                         ; preds = %if.end46, %do.end38
  %30 = load i8*, i8** %realname.addr, align 8, !dbg !4897, !tbaa !2474
  %tobool48 = icmp ne i8* %30, null, !dbg !4897
  br i1 %tobool48, label %cond.true49, label %cond.false50, !dbg !4897

cond.true49:                                      ; preds = %if.end47
  %31 = load i8*, i8** %realname.addr, align 8, !dbg !4898, !tbaa !2474
  br label %cond.end51, !dbg !4897

cond.false50:                                     ; preds = %if.end47
  %32 = load i8*, i8** %name.addr, align 8, !dbg !4899, !tbaa !2474
  br label %cond.end51, !dbg !4897

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i8* [ %31, %cond.true49 ], [ %32, %cond.false50 ], !dbg !4897
  %33 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !4900, !tbaa !2474
  %34 = load i8*, i8** %absolute_name, align 8, !dbg !4901, !tbaa !2474
  %call53 = call i64 @quote_name(i8* %cond52, %struct.quoting_options* %33, i32 -1, %struct.bin_str* null, i1 zeroext true, %struct.obstack* @subdired_obstack, i8* %34), !dbg !4902
  %35 = load i8*, i8** %absolute_name, align 8, !dbg !4903, !tbaa !2474
  call void @free(i8* %35) #13, !dbg !4904
  br label %do.body54, !dbg !4905

do.body54:                                        ; preds = %cond.end51
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4906, !tbaa !2474
  %call55 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i64 0, i64 0), %struct._IO_FILE* %36), !dbg !4906
  %37 = load i64, i64* @dired_pos, align 8, !dbg !4906, !tbaa !2611
  %add56 = add i64 %37, 2, !dbg !4906
  store i64 %add56, i64* @dired_pos, align 8, !dbg !4906, !tbaa !2611
  br label %do.end57, !dbg !4906

do.end57:                                         ; preds = %do.body54
  br label %if.end58, !dbg !4908

if.end58:                                         ; preds = %do.end57, %lor.lhs.false
  br label %while.body, !dbg !4909

while.body:                                       ; preds = %if.end58, %if.end100
  %call59 = call i32* @__errno_location() #17, !dbg !4910
  store i32 0, i32* %call59, align 4, !dbg !4912, !tbaa !2468, !ctir !27
  %38 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4913, !tbaa !2474
  %call60 = call %struct.dirent* @readdir(%struct.__dirstream* %38), !dbg !4914
  store %struct.dirent* %call60, %struct.dirent** %next, align 8, !dbg !4915, !tbaa !2474
  %39 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4916, !tbaa !2474
  %tobool61 = icmp ne %struct.dirent* %39, null, !dbg !4916
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !4918

if.then62:                                        ; preds = %while.body
  %40 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4919, !tbaa !2474
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %40, i32 0, i32 4, !dbg !4922, !ctir !602
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4919
  %call63 = call zeroext i1 @file_ignored(i8* %arraydecay), !dbg !4923
  br i1 %call63, label %if.end86, label %if.then64, !dbg !4924

if.then64:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4925, metadata !DIExpression()), !dbg !4927
  store i32 0, i32* %type, align 4, !dbg !4927, !tbaa !2529
  %41 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4928, !tbaa !2474
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %41, i32 0, i32 3, !dbg !4929, !ctir !602
  %42 = load i8, i8* %d_type, align 2, !dbg !4929, !tbaa !4930, !ctir !579
  %conv = zext i8 %42 to i32, !dbg !4928
  switch i32 %conv, label %sw.epilog [
    i32 6, label %sw.bb
    i32 2, label %sw.bb65
    i32 4, label %sw.bb66
    i32 1, label %sw.bb67
    i32 10, label %sw.bb68
    i32 8, label %sw.bb69
    i32 12, label %sw.bb70
    i32 14, label %sw.bb71
  ], !dbg !4932

sw.bb:                                            ; preds = %if.then64
  store i32 4, i32* %type, align 4, !dbg !4933, !tbaa !2529
  br label %sw.epilog, !dbg !4935

sw.bb65:                                          ; preds = %if.then64
  store i32 2, i32* %type, align 4, !dbg !4936, !tbaa !2529
  br label %sw.epilog, !dbg !4937

sw.bb66:                                          ; preds = %if.then64
  store i32 3, i32* %type, align 4, !dbg !4938, !tbaa !2529
  br label %sw.epilog, !dbg !4939

sw.bb67:                                          ; preds = %if.then64
  store i32 1, i32* %type, align 4, !dbg !4940, !tbaa !2529
  br label %sw.epilog, !dbg !4941

sw.bb68:                                          ; preds = %if.then64
  store i32 6, i32* %type, align 4, !dbg !4942, !tbaa !2529
  br label %sw.epilog, !dbg !4943

sw.bb69:                                          ; preds = %if.then64
  store i32 5, i32* %type, align 4, !dbg !4944, !tbaa !2529
  br label %sw.epilog, !dbg !4945

sw.bb70:                                          ; preds = %if.then64
  store i32 7, i32* %type, align 4, !dbg !4946, !tbaa !2529
  br label %sw.epilog, !dbg !4947

sw.bb71:                                          ; preds = %if.then64
  store i32 8, i32* %type, align 4, !dbg !4948, !tbaa !2529
  br label %sw.epilog, !dbg !4949

sw.epilog:                                        ; preds = %if.then64, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb
  %43 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4950, !tbaa !2474
  %d_name72 = getelementptr inbounds %struct.dirent, %struct.dirent* %43, i32 0, i32 4, !dbg !4951, !ctir !602
  %arraydecay73 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name72, i64 0, i64 0, !dbg !4950
  %44 = load i32, i32* %type, align 4, !dbg !4952, !tbaa !2529
  %45 = load i8*, i8** %name.addr, align 8, !dbg !4953, !tbaa !2474
  %call74 = call i64 @gobble_file(i8* %arraydecay73, i32 %44, i64 0, i1 zeroext false, i8* %45), !dbg !4954
  %46 = load i64, i64* %total_blocks, align 8, !dbg !4955, !tbaa !2611
  %add75 = add i64 %46, %call74, !dbg !4955
  store i64 %add75, i64* %total_blocks, align 8, !dbg !4955, !tbaa !2611
  %47 = load i32, i32* @format, align 4, !dbg !4956, !tbaa !2529
  %cmp76 = icmp eq i32 %47, 1, !dbg !4958
  br i1 %cmp76, label %land.lhs.true, label %if.end85, !dbg !4959

land.lhs.true:                                    ; preds = %sw.epilog
  %48 = load i32, i32* @sort_type, align 4, !dbg !4960, !tbaa !2529
  %cmp78 = icmp eq i32 %48, -1, !dbg !4961
  br i1 %cmp78, label %land.lhs.true80, label %if.end85, !dbg !4962

land.lhs.true80:                                  ; preds = %land.lhs.true
  %49 = load i8, i8* @print_block_size, align 1, !dbg !4963, !tbaa !2493
  %tobool81 = trunc i8 %49 to i1, !dbg !4963
  br i1 %tobool81, label %if.end85, label %land.lhs.true82, !dbg !4964

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %50 = load i8, i8* @recursive, align 1, !dbg !4965, !tbaa !2493
  %tobool83 = trunc i8 %50 to i1, !dbg !4965
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !4966

if.then84:                                        ; preds = %land.lhs.true82
  call void @sort_files(), !dbg !4967
  call void @print_current_files(), !dbg !4969
  call void @clear_files(), !dbg !4970
  br label %if.end85, !dbg !4971

if.end85:                                         ; preds = %if.then84, %land.lhs.true82, %land.lhs.true80, %land.lhs.true, %sw.epilog
  br label %if.end86, !dbg !4972

if.end86:                                         ; preds = %if.end85, %if.then62
  br label %if.end100, !dbg !4973

if.else:                                          ; preds = %while.body
  %call87 = call i32* @__errno_location() #17, !dbg !4974
  %51 = load i32, i32* %call87, align 4, !dbg !4974, !tbaa !2468, !ctir !27
  %cmp88 = icmp ne i32 %51, 0, !dbg !4976
  br i1 %cmp88, label %if.then90, label %if.else98, !dbg !4977

if.then90:                                        ; preds = %if.else
  %52 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4978, !tbaa !2493
  %tobool91 = trunc i8 %52 to i1, !dbg !4978
  %call92 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.209, i64 0, i64 0)) #13, !dbg !4980
  %53 = load i8*, i8** %name.addr, align 8, !dbg !4981, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool91, i8* %call92, i8* %53), !dbg !4982
  %call93 = call i32* @__errno_location() #17, !dbg !4983
  %54 = load i32, i32* %call93, align 4, !dbg !4983, !tbaa !2468, !ctir !27
  %cmp94 = icmp ne i32 %54, 75, !dbg !4985
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4986

if.then96:                                        ; preds = %if.then90
  br label %while.end, !dbg !4987

if.end97:                                         ; preds = %if.then90
  br label %if.end99, !dbg !4988

if.else98:                                        ; preds = %if.else
  br label %while.end, !dbg !4989

if.end99:                                         ; preds = %if.end97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end86
  call void @process_signals(), !dbg !4990
  br label %while.body, !dbg !4909, !llvm.loop !4991

while.end:                                        ; preds = %if.else98, %if.then96
  %55 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4993, !tbaa !2474
  %call101 = call i32 @closedir(%struct.__dirstream* %55), !dbg !4995
  %cmp102 = icmp ne i32 %call101, 0, !dbg !4996
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !4997

if.then104:                                       ; preds = %while.end
  %56 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4998, !tbaa !2493
  %tobool105 = trunc i8 %56 to i1, !dbg !4998
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.210, i64 0, i64 0)) #13, !dbg !5000
  %57 = load i8*, i8** %name.addr, align 8, !dbg !5001, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool105, i8* %call106, i8* %57), !dbg !5002
  br label %if.end107, !dbg !5003

if.end107:                                        ; preds = %if.then104, %while.end
  call void @sort_files(), !dbg !5004
  %58 = load i8, i8* @recursive, align 1, !dbg !5005, !tbaa !2493
  %tobool108 = trunc i8 %58 to i1, !dbg !5005
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !5007

if.then109:                                       ; preds = %if.end107
  %59 = load i8*, i8** %name.addr, align 8, !dbg !5008, !tbaa !2474
  call void @extract_dirs_from_files(i8* %59, i1 zeroext false), !dbg !5009
  br label %if.end110, !dbg !5009

if.end110:                                        ; preds = %if.then109, %if.end107
  %60 = load i32, i32* @format, align 4, !dbg !5010, !tbaa !2529
  %cmp111 = icmp eq i32 %60, 0, !dbg !5012
  br i1 %cmp111, label %if.then116, label %lor.lhs.false113, !dbg !5013

lor.lhs.false113:                                 ; preds = %if.end110
  %61 = load i8, i8* @print_block_size, align 1, !dbg !5014, !tbaa !2493
  %tobool114 = trunc i8 %61 to i1, !dbg !5014
  br i1 %tobool114, label %if.then116, label %if.end147, !dbg !5015

if.then116:                                       ; preds = %lor.lhs.false113, %if.end110
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5016, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !5019, metadata !DIExpression()), !dbg !5020
  br label %do.body117, !dbg !5021

do.body117:                                       ; preds = %if.then116
  %62 = load i8, i8* @dired, align 1, !dbg !5022, !tbaa !2493
  %tobool118 = trunc i8 %62 to i1, !dbg !5022
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !5025

if.then119:                                       ; preds = %do.body117
  br label %do.body120, !dbg !5022

do.body120:                                       ; preds = %if.then119
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5026, !tbaa !2474
  %call121 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %63), !dbg !5026
  %64 = load i64, i64* @dired_pos, align 8, !dbg !5026, !tbaa !2611
  %add122 = add i64 %64, 2, !dbg !5026
  store i64 %add122, i64* @dired_pos, align 8, !dbg !5026, !tbaa !2611
  br label %do.end123, !dbg !5026

do.end123:                                        ; preds = %do.body120
  br label %if.end124, !dbg !5026

if.end124:                                        ; preds = %do.end123, %do.body117
  br label %do.end125, !dbg !5025

do.end125:                                        ; preds = %if.end124
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i64 0, i64 0)) #13, !dbg !5028
  store i8* %call126, i8** %p, align 8, !dbg !5029, !tbaa !2474
  br label %do.body127, !dbg !5030

do.body127:                                       ; preds = %do.end125
  %65 = load i8*, i8** %p, align 8, !dbg !5031, !tbaa !2474
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5031, !tbaa !2474
  %call128 = call i32 @fputs_unlocked(i8* %65, %struct._IO_FILE* %66), !dbg !5031
  %67 = load i8*, i8** %p, align 8, !dbg !5031, !tbaa !2474
  %call129 = call i64 @strlen(i8* %67) #16, !dbg !5031
  %68 = load i64, i64* @dired_pos, align 8, !dbg !5031, !tbaa !2611
  %add130 = add i64 %68, %call129, !dbg !5031
  store i64 %add130, i64* @dired_pos, align 8, !dbg !5031, !tbaa !2611
  br label %do.end131, !dbg !5031

do.end131:                                        ; preds = %do.body127
  br label %do.body132, !dbg !5033

do.body132:                                       ; preds = %do.end131
  %call133 = call i32 @putchar_unlocked(i32 32), !dbg !5034
  %69 = load i64, i64* @dired_pos, align 8, !dbg !5034, !tbaa !2611
  %inc134 = add i64 %69, 1, !dbg !5034
  store i64 %inc134, i64* @dired_pos, align 8, !dbg !5034, !tbaa !2611
  br label %do.end135, !dbg !5034

do.end135:                                        ; preds = %do.body132
  %70 = load i64, i64* %total_blocks, align 8, !dbg !5036, !tbaa !2611
  %arraydecay136 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5037
  %71 = load i32, i32* @human_output_opts, align 4, !dbg !5038, !tbaa !2468
  %72 = load i64, i64* @output_block_size, align 8, !dbg !5039, !tbaa !2611
  %call137 = call i8* @human_readable(i64 %70, i8* %arraydecay136, i32 %71, i64 512, i64 %72), !dbg !5040
  store i8* %call137, i8** %p, align 8, !dbg !5041, !tbaa !2474
  br label %do.body138, !dbg !5042

do.body138:                                       ; preds = %do.end135
  %73 = load i8*, i8** %p, align 8, !dbg !5043, !tbaa !2474
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5043, !tbaa !2474
  %call139 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !5043
  %75 = load i8*, i8** %p, align 8, !dbg !5043, !tbaa !2474
  %call140 = call i64 @strlen(i8* %75) #16, !dbg !5043
  %76 = load i64, i64* @dired_pos, align 8, !dbg !5043, !tbaa !2611
  %add141 = add i64 %76, %call140, !dbg !5043
  store i64 %add141, i64* @dired_pos, align 8, !dbg !5043, !tbaa !2611
  br label %do.end142, !dbg !5043

do.end142:                                        ; preds = %do.body138
  br label %do.body143, !dbg !5045

do.body143:                                       ; preds = %do.end142
  %call144 = call i32 @putchar_unlocked(i32 10), !dbg !5046
  %77 = load i64, i64* @dired_pos, align 8, !dbg !5046, !tbaa !2611
  %inc145 = add i64 %77, 1, !dbg !5046
  store i64 %inc145, i64* @dired_pos, align 8, !dbg !5046, !tbaa !2611
  br label %do.end146, !dbg !5046

do.end146:                                        ; preds = %do.body143
  br label %if.end147, !dbg !5048

if.end147:                                        ; preds = %do.end146, %lor.lhs.false113
  %78 = load i64, i64* @cwd_n_used, align 8, !dbg !5049, !tbaa !2611
  %tobool148 = icmp ne i64 %78, 0, !dbg !5049
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !5051

if.then149:                                       ; preds = %if.end147
  call void @print_current_files(), !dbg !5052
  br label %if.end150, !dbg !5052

if.end150:                                        ; preds = %if.then, %if.then10, %if.then16, %if.then149, %if.end147
  ret void, !dbg !5053
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_color() #0 !dbg !5054 !ctir !336 {
entry:
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5055
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5056
  ret void, !dbg !5057
}

declare dso_local i32 @fflush_unlocked(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_restore() #0 !dbg !5058 !ctir !336 {
entry:
  call void @signal_setup(i1 zeroext false), !dbg !5059
  ret void, !dbg !5060
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dired_dump_obstack(i8* %prefix, %struct.obstack* %os) #0 !dbg !5061 !ctir !496 {
entry:
  %prefix.addr = alloca i8*, align 8, !ctir !146
  %os.addr = alloca %struct.obstack*, align 8, !ctir !498
  %n_pos = alloca i64, align 8, !ctir !149
  %__o = alloca %struct.obstack*, align 8, !ctir !343
  %tmp = alloca i64, align 8, !ctir !149
  %pos = alloca i64*, align 8, !ctir !148
  %__o1 = alloca %struct.obstack*, align 8, !ctir !498
  %__value = alloca i8*, align 8, !ctir !167
  %tmp25 = alloca i8*, align 8, !ctir !167
  %i = alloca i64, align 8, !ctir !149
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !5062, metadata !DIExpression()), !dbg !5063
  store %struct.obstack* %os, %struct.obstack** %os.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %os.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.declare(metadata i64* %n_pos, metadata !5066, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5068, metadata !DIExpression()), !dbg !5070
  %0 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !5070, !tbaa !2474
  store %struct.obstack* %0, %struct.obstack** %__o, align 8, !dbg !5070, !tbaa !2474
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5070, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !5070, !ctir !344
  %2 = load i8*, i8** %next_free, align 8, !dbg !5070, !tbaa !4762, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5070, !tbaa !2474
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !5070, !ctir !344
  %4 = load i8*, i8** %object_base, align 8, !dbg !5070, !tbaa !4764, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !5070
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !5070
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5070
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5070, !tbaa !2611
  %5 = load i64, i64* %tmp, align 8, !dbg !5070, !tbaa !2611
  %div = udiv i64 %5, 8, !dbg !5071
  store i64 %div, i64* %n_pos, align 8, !dbg !5072, !tbaa !2611
  %6 = load i64, i64* %n_pos, align 8, !dbg !5073, !tbaa !2611
  %cmp = icmp ugt i64 %6, 0, !dbg !5075
  br i1 %cmp, label %if.then, label %if.end29, !dbg !5076

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64** %pos, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5080, metadata !DIExpression()), !dbg !5082
  %7 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !5082, !tbaa !2474
  store %struct.obstack* %7, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !5083, metadata !DIExpression()), !dbg !5082
  %8 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %object_base1 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 2, !dbg !5082, !ctir !345
  %9 = load i8*, i8** %object_base1, align 8, !dbg !5082, !tbaa !4764, !ctir !143
  store i8* %9, i8** %__value, align 8, !dbg !5082, !tbaa !2474
  %10 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5084, !tbaa !2474
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3, !dbg !5084, !ctir !345
  %11 = load i8*, i8** %next_free2, align 8, !dbg !5084, !tbaa !4762, !ctir !143
  %12 = load i8*, i8** %__value, align 8, !dbg !5084, !tbaa !2474
  %cmp3 = icmp eq i8* %11, %12, !dbg !5084
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !5082

if.then4:                                         ; preds = %if.then
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5084, !tbaa !2474
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 10, !dbg !5084, !ctir !345
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !5084
  %bf.clear = and i8 %bf.load, -3, !dbg !5084
  %bf.set = or i8 %bf.clear, 2, !dbg !5084
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !5084
  br label %if.end, !dbg !5084

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3, !dbg !5082, !ctir !345
  %15 = load i8*, i8** %next_free5, align 8, !dbg !5082, !tbaa !4762, !ctir !143
  %sub.ptr.lhs.cast6 = ptrtoint i8* %15 to i64, !dbg !5082
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast6, 0, !dbg !5082
  %16 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0, i32 6, !dbg !5082, !ctir !345
  %17 = load i64, i64* %alignment_mask, align 8, !dbg !5082, !tbaa !5086, !ctir !149
  %add = add i64 %sub.ptr.sub7, %17, !dbg !5082
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %alignment_mask8 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 6, !dbg !5082, !ctir !345
  %19 = load i64, i64* %alignment_mask8, align 8, !dbg !5082, !tbaa !5086, !ctir !149
  %neg = xor i64 %19, -1, !dbg !5082
  %and = and i64 %add, %neg, !dbg !5082
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !5082
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %next_free9 = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !5082, !ctir !345
  store i8* %add.ptr, i8** %next_free9, align 8, !dbg !5082, !tbaa !4762, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5087, !tbaa !2474
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3, !dbg !5087, !ctir !345
  %22 = load i8*, i8** %next_free10, align 8, !dbg !5087, !tbaa !4762, !ctir !143
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5087, !tbaa !2474
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 1, !dbg !5087, !ctir !345
  %24 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !5087, !tbaa !5089, !ctir !350
  %25 = bitcast %struct._obstack_chunk* %24 to i8*, !dbg !5087
  %sub.ptr.lhs.cast11 = ptrtoint i8* %22 to i64, !dbg !5087
  %sub.ptr.rhs.cast12 = ptrtoint i8* %25 to i64, !dbg !5087
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !5087
  %26 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5087, !tbaa !2474
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 4, !dbg !5087, !ctir !345
  %27 = load i8*, i8** %chunk_limit, align 8, !dbg !5087, !tbaa !5090, !ctir !143
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5087, !tbaa !2474
  %chunk14 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1, !dbg !5087, !ctir !345
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk14, align 8, !dbg !5087, !tbaa !5089, !ctir !350
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !5087
  %sub.ptr.lhs.cast15 = ptrtoint i8* %27 to i64, !dbg !5087
  %sub.ptr.rhs.cast16 = ptrtoint i8* %30 to i64, !dbg !5087
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !5087
  %cmp18 = icmp ugt i64 %sub.ptr.sub13, %sub.ptr.sub17, !dbg !5087
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !5082

if.then19:                                        ; preds = %if.end
  %31 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5087, !tbaa !2474
  %chunk_limit20 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 4, !dbg !5087, !ctir !345
  %32 = load i8*, i8** %chunk_limit20, align 8, !dbg !5087, !tbaa !5090, !ctir !143
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5087, !tbaa !2474
  %next_free21 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 3, !dbg !5087, !ctir !345
  store i8* %32, i8** %next_free21, align 8, !dbg !5087, !tbaa !4762, !ctir !143
  br label %if.end22, !dbg !5087

if.end22:                                         ; preds = %if.then19, %if.end
  %34 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %next_free23 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0, i32 3, !dbg !5082, !ctir !345
  %35 = load i8*, i8** %next_free23, align 8, !dbg !5082, !tbaa !4762, !ctir !143
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5082, !tbaa !2474
  %object_base24 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 2, !dbg !5082, !ctir !345
  store i8* %35, i8** %object_base24, align 8, !dbg !5082, !tbaa !4764, !ctir !143
  %37 = load i8*, i8** %__value, align 8, !dbg !5082, !tbaa !2474
  store i8* %37, i8** %tmp25, align 8, !dbg !5082, !tbaa !2474
  %38 = load i8*, i8** %tmp25, align 8, !dbg !5082, !tbaa !2474
  %39 = bitcast i8* %38 to i64*, !dbg !5091
  store i64* %39, i64** %pos, align 8, !dbg !5079, !tbaa !2474
  %40 = load i8*, i8** %prefix.addr, align 8, !dbg !5092, !tbaa !2474
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5092, !tbaa !2474
  %call = call i32 @fputs_unlocked(i8* %40, %struct._IO_FILE* %41), !dbg !5092
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5093, metadata !DIExpression()), !dbg !5095
  store i64 0, i64* %i, align 8, !dbg !5095, !tbaa !2611
  br label %for.cond, !dbg !5096

for.cond:                                         ; preds = %for.inc, %if.end22
  %42 = load i64, i64* %i, align 8, !dbg !5097, !tbaa !2611
  %43 = load i64, i64* %n_pos, align 8, !dbg !5099, !tbaa !2611
  %cmp26 = icmp ult i64 %42, %43, !dbg !5100
  br i1 %cmp26, label %for.body, label %for.end, !dbg !5101

for.body:                                         ; preds = %for.cond
  %44 = load i64*, i64** %pos, align 8, !dbg !5102, !tbaa !2474
  %45 = load i64, i64* %i, align 8, !dbg !5103, !tbaa !2611
  %arrayidx = getelementptr inbounds i64, i64* %44, i64 %45, !dbg !5102, !ctir !148
  %46 = load i64, i64* %arrayidx, align 8, !dbg !5102, !tbaa !2611
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 %46), !dbg !5104
  br label %for.inc, !dbg !5104

for.inc:                                          ; preds = %for.body
  %47 = load i64, i64* %i, align 8, !dbg !5105, !tbaa !2611
  %inc = add i64 %47, 1, !dbg !5105
  store i64 %inc, i64* %i, align 8, !dbg !5105, !tbaa !2611
  br label %for.cond, !dbg !5106, !llvm.loop !5107

for.end:                                          ; preds = %for.cond
  %call28 = call i32 @putchar_unlocked(i32 10), !dbg !5109
  br label %if.end29, !dbg !5110

if.end29:                                         ; preds = %for.end, %entry
  ret void, !dbg !5111
}

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_setup(i1 zeroext %init) #0 !dbg !871 !ctir !396 {
entry:
  %init.addr = alloca i8, align 1, !ctir !141
  %j = alloca i32, align 4, !ctir !27
  %act = alloca %struct.sigaction, align 8, !ctir !413
  %frombool = zext i1 %init to i8
  store i8 %frombool, i8* %init.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %init.addr, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5114, metadata !DIExpression()), !dbg !5115
  %0 = load i8, i8* %init.addr, align 1, !dbg !5116, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !5116
  br i1 %tobool, label %if.then, label %if.else, !dbg !5118

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !5119, metadata !DIExpression()), !dbg !5121
  %call = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #13, !dbg !5122
  store i32 0, i32* %j, align 4, !dbg !5123, !tbaa !2468
  br label %for.cond, !dbg !5125

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %j, align 4, !dbg !5126, !tbaa !2468
  %cmp = icmp slt i32 %1, 12, !dbg !5128
  br i1 %cmp, label %for.body, label %for.end, !dbg !5129

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4, !dbg !5130, !tbaa !2468
  %idxprom = sext i32 %2 to i64, !dbg !5132
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom, !dbg !5132, !ctir !407
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5132, !tbaa !2468
  %call1 = call i32 @sigaction(i32 %3, %struct.sigaction* null, %struct.sigaction* %act) #13, !dbg !5133
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !5134, !ctir !413
  %sa_handler = bitcast %union.anon.2* %__sigaction_handler to void (i32)**, !dbg !5134
  %4 = load void (i32)*, void (i32)** %sa_handler, align 8, !dbg !5134, !tbaa !2529, !ctir !411
  %cmp2 = icmp ne void (i32)* %4, inttoptr (i64 1 to void (i32)*), !dbg !5136
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5137

if.then3:                                         ; preds = %for.body
  %5 = load i32, i32* %j, align 4, !dbg !5138, !tbaa !2468
  %idxprom4 = sext i32 %5 to i64, !dbg !5139
  %arrayidx5 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom4, !dbg !5139, !ctir !407
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !5139, !tbaa !2468
  %call6 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %6) #13, !dbg !5140
  br label %if.end, !dbg !5140

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5141

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %j, align 4, !dbg !5142, !tbaa !2468
  %inc = add nsw i32 %7, 1, !dbg !5142
  store i32 %inc, i32* %j, align 4, !dbg !5142, !tbaa !2468
  br label %for.cond, !dbg !5143, !llvm.loop !5144

for.end:                                          ; preds = %for.cond
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 1, !dbg !5146, !ctir !413
  %8 = bitcast %struct.__sigset_t* %sa_mask to i8*, !dbg !5147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i1 false), !dbg !5147, !tbaa.struct !5148
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 2, !dbg !5149, !ctir !413
  store i32 268435456, i32* %sa_flags, align 8, !dbg !5150, !tbaa !5151, !ctir !27
  store i32 0, i32* %j, align 4, !dbg !5154, !tbaa !2468
  br label %for.cond7, !dbg !5156

for.cond7:                                        ; preds = %for.inc24, %for.end
  %9 = load i32, i32* %j, align 4, !dbg !5157, !tbaa !2468
  %cmp8 = icmp slt i32 %9, 12, !dbg !5159
  br i1 %cmp8, label %for.body9, label %for.end26, !dbg !5160

for.body9:                                        ; preds = %for.cond7
  %10 = load i32, i32* %j, align 4, !dbg !5161, !tbaa !2468
  %idxprom10 = sext i32 %10 to i64, !dbg !5163
  %arrayidx11 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom10, !dbg !5163, !ctir !407
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !5163, !tbaa !2468
  %call12 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %11) #13, !dbg !5164
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5164
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !5165

if.then14:                                        ; preds = %for.body9
  %12 = load i32, i32* %j, align 4, !dbg !5166, !tbaa !2468
  %idxprom15 = sext i32 %12 to i64, !dbg !5168
  %arrayidx16 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom15, !dbg !5168, !ctir !407
  %13 = load i32, i32* %arrayidx16, align 4, !dbg !5168, !tbaa !2468
  %cmp17 = icmp eq i32 %13, 20, !dbg !5169
  %14 = zext i1 %cmp17 to i64, !dbg !5168
  %cond = select i1 %cmp17, void (i32)* @stophandler, void (i32)* @sighandler, !dbg !5168
  %__sigaction_handler18 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !5170, !ctir !413
  %sa_handler19 = bitcast %union.anon.2* %__sigaction_handler18 to void (i32)**, !dbg !5170
  store void (i32)* %cond, void (i32)** %sa_handler19, align 8, !dbg !5171, !tbaa !2529, !ctir !411
  %15 = load i32, i32* %j, align 4, !dbg !5172, !tbaa !2468
  %idxprom20 = sext i32 %15 to i64, !dbg !5173
  %arrayidx21 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom20, !dbg !5173, !ctir !407
  %16 = load i32, i32* %arrayidx21, align 4, !dbg !5173, !tbaa !2468
  %call22 = call i32 @sigaction(i32 %16, %struct.sigaction* %act, %struct.sigaction* null) #13, !dbg !5174
  br label %if.end23, !dbg !5175

if.end23:                                         ; preds = %if.then14, %for.body9
  br label %for.inc24, !dbg !5176

for.inc24:                                        ; preds = %if.end23
  %17 = load i32, i32* %j, align 4, !dbg !5177, !tbaa !2468
  %inc25 = add nsw i32 %17, 1, !dbg !5177
  store i32 %inc25, i32* %j, align 4, !dbg !5177, !tbaa !2468
  br label %for.cond7, !dbg !5178, !llvm.loop !5179

for.end26:                                        ; preds = %for.cond7
  br label %if.end42, !dbg !5181

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !dbg !5182, !tbaa !2468
  br label %for.cond27, !dbg !5185

for.cond27:                                       ; preds = %for.inc39, %if.else
  %18 = load i32, i32* %j, align 4, !dbg !5186, !tbaa !2468
  %cmp28 = icmp slt i32 %18, 12, !dbg !5188
  br i1 %cmp28, label %for.body29, label %for.end41, !dbg !5189

for.body29:                                       ; preds = %for.cond27
  %19 = load i32, i32* %j, align 4, !dbg !5190, !tbaa !2468
  %idxprom30 = sext i32 %19 to i64, !dbg !5192
  %arrayidx31 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom30, !dbg !5192, !ctir !407
  %20 = load i32, i32* %arrayidx31, align 4, !dbg !5192, !tbaa !2468
  %call32 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %20) #13, !dbg !5193
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5193
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !5194

if.then34:                                        ; preds = %for.body29
  %21 = load i32, i32* %j, align 4, !dbg !5195, !tbaa !2468
  %idxprom35 = sext i32 %21 to i64, !dbg !5196
  %arrayidx36 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom35, !dbg !5196, !ctir !407
  %22 = load i32, i32* %arrayidx36, align 4, !dbg !5196, !tbaa !2468
  %call37 = call void (i32)* @signal(i32 %22, void (i32)* null) #13, !dbg !5197
  br label %if.end38, !dbg !5197

if.end38:                                         ; preds = %if.then34, %for.body29
  br label %for.inc39, !dbg !5198

for.inc39:                                        ; preds = %if.end38
  %23 = load i32, i32* %j, align 4, !dbg !5199, !tbaa !2468
  %inc40 = add nsw i32 %23, 1, !dbg !5199
  store i32 %inc40, i32* %j, align 4, !dbg !5199, !tbaa !2468
  br label %for.cond27, !dbg !5200, !llvm.loop !5201

for.end41:                                        ; preds = %for.cond27
  br label %if.end42

if.end42:                                         ; preds = %for.end41, %for.end26
  ret void, !dbg !5203
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @sigismember(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @stophandler(i32 %sig) #0 !dbg !5204 !ctir !173 {
entry:
  %sig.addr = alloca i32, align 4, !ctir !27
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !5205, metadata !DIExpression()), !dbg !5206
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5207, !tbaa !2468
  %tobool = icmp ne i32 %0, 0, !dbg !5207
  br i1 %tobool, label %if.end, label %if.then, !dbg !5209

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5210, !tbaa !2468
  %inc = add nsw i32 %1, 1, !dbg !5210
  store volatile i32 %inc, i32* @stop_signal_count, align 4, !dbg !5210, !tbaa !2468
  br label %if.end, !dbg !5211

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5212
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighandler(i32 %sig) #0 !dbg !5213 !ctir !173 {
entry:
  %sig.addr = alloca i32, align 4, !ctir !27
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !5214, metadata !DIExpression()), !dbg !5215
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5216, !tbaa !2468
  %tobool = icmp ne i32 %0, 0, !dbg !5216
  br i1 %tobool, label %if.end, label %if.then, !dbg !5218

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %sig.addr, align 4, !dbg !5219, !tbaa !2468
  store volatile i32 %1, i32* @interrupt_signal, align 4, !dbg !5220, !tbaa !2468
  br label %if.end, !dbg !5221

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5222
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @put_indicator(%struct.bin_str* %ind) #0 !dbg !5223 !ctir !392 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8, !ctir !394
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5224, metadata !DIExpression()), !dbg !5225
  %0 = load i8, i8* @used_color, align 1, !dbg !5226, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !5226
  br i1 %tobool, label %if.end2, label %if.then, !dbg !5228

if.then:                                          ; preds = %entry
  store i8 1, i8* @used_color, align 1, !dbg !5229, !tbaa !2493
  %call = call i32 @tcgetpgrp(i32 1) #13, !dbg !5231
  %cmp = icmp sle i32 0, %call, !dbg !5233
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5234

if.then1:                                         ; preds = %if.then
  call void @signal_init(), !dbg !5235
  br label %if.end, !dbg !5235

if.end:                                           ; preds = %if.then1, %if.then
  call void @prep_non_filename_text(), !dbg !5236
  br label %if.end2, !dbg !5237

if.end2:                                          ; preds = %if.end, %entry
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5238, !tbaa !2474
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %1, i32 0, i32 1, !dbg !5238, !ctir !395
  %2 = load i8*, i8** %string, align 8, !dbg !5238, !tbaa !2740, !ctir !146
  %3 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5238, !tbaa !2474
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i32 0, i32 0, !dbg !5238, !ctir !395
  %4 = load i64, i64* %len, align 8, !dbg !5238, !tbaa !2735, !ctir !149
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5238, !tbaa !2474
  %call3 = call i64 @fwrite_unlocked(i8* %2, i64 %4, i64 1, %struct._IO_FILE* %5), !dbg !5238
  ret void, !dbg !5239
}

; Function Attrs: nounwind
declare dso_local i32 @tcgetpgrp(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_init() #0 !dbg !5240 !ctir !336 {
entry:
  call void @signal_setup(i1 zeroext true), !dbg !5241
  ret void, !dbg !5242
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @prep_non_filename_text() #0 !dbg !5243 !ctir !336 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2, i32 1), align 8, !dbg !5244, !tbaa !2740, !ctir !146
  %cmp = icmp ne i8* %0, null, !dbg !5246
  br i1 %cmp, label %if.then, label %if.else, !dbg !5247

if.then:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2)), !dbg !5248
  br label %if.end, !dbg !5248

if.else:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5249
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 3)), !dbg !5251
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5253
}

declare dso_local i64 @fwrite_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_failure(i1 zeroext %serious, i8* %message, i8* %file) #0 !dbg !5254 !ctir !613 {
entry:
  %serious.addr = alloca i8, align 1, !ctir !141
  %message.addr = alloca i8*, align 8, !ctir !146
  %file.addr = alloca i8*, align 8, !ctir !146
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !5255, metadata !DIExpression()), !dbg !5256
  store i8* %message, i8** %message.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5257, metadata !DIExpression()), !dbg !5258
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5259, metadata !DIExpression()), !dbg !5260
  %call = call i32* @__errno_location() #17, !dbg !5261
  %0 = load i32, i32* %call, align 4, !dbg !5261, !tbaa !2468, !ctir !27
  %1 = load i8*, i8** %message.addr, align 8, !dbg !5262, !tbaa !2474
  %2 = load i8*, i8** %file.addr, align 8, !dbg !5263, !tbaa !2474
  %call1 = call i8* @quotearg_style(i32 4, i8* %2), !dbg !5263
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %0, i8* %1, i8* %call1), !dbg !5264
  %3 = load i8, i8* %serious.addr, align 1, !dbg !5265, !tbaa !2493
  %tobool = trunc i8 %3 to i1, !dbg !5265
  call void @set_exit_status(i1 zeroext %tobool), !dbg !5266
  ret void, !dbg !5267
}

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @visit_dir(i64 %dev, i64 %ino) #0 !dbg !5268 !ctir !615 {
entry:
  %dev.addr = alloca i64, align 8, !ctir !258
  %ino.addr = alloca i64, align 8, !ctir !256
  %ent = alloca %struct.dev_ino*, align 8, !ctir !251
  %ent_from_table = alloca %struct.dev_ino*, align 8, !ctir !251
  %found_match = alloca i8, align 1, !ctir !141
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !5271, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent, metadata !5273, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent_from_table, metadata !5275, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.declare(metadata i8* %found_match, metadata !5277, metadata !DIExpression()), !dbg !5278
  %call = call noalias i8* @xmalloc(i64 16), !dbg !5279
  %0 = bitcast i8* %call to %struct.dev_ino*, !dbg !5279
  store %struct.dev_ino* %0, %struct.dev_ino** %ent, align 8, !dbg !5280, !tbaa !2474
  %1 = load i64, i64* %ino.addr, align 8, !dbg !5281, !tbaa !2611
  %2 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5282, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !5283, !ctir !252
  store i64 %1, i64* %st_ino, align 8, !dbg !5284, !tbaa !3700, !ctir !256
  %3 = load i64, i64* %dev.addr, align 8, !dbg !5285, !tbaa !2611
  %4 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5286, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 1, !dbg !5287, !ctir !252
  store i64 %3, i64* %st_dev, align 8, !dbg !5288, !tbaa !3717, !ctir !258
  %5 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !5289, !tbaa !2474
  %6 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5290, !tbaa !2474
  %7 = bitcast %struct.dev_ino* %6 to i8*, !dbg !5290
  %call1 = call i8* @hash_insert(%struct.hash_table* %5, i8* %7), !dbg !5291
  %8 = bitcast i8* %call1 to %struct.dev_ino*, !dbg !5291
  store %struct.dev_ino* %8, %struct.dev_ino** %ent_from_table, align 8, !dbg !5292, !tbaa !2474
  %9 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !5293, !tbaa !2474
  %cmp = icmp eq %struct.dev_ino* %9, null, !dbg !5295
  br i1 %cmp, label %if.then, label %if.end, !dbg !5296

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !5297
  unreachable, !dbg !5297

if.end:                                           ; preds = %entry
  %10 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !5299, !tbaa !2474
  %11 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5300, !tbaa !2474
  %cmp2 = icmp ne %struct.dev_ino* %10, %11, !dbg !5301
  %frombool = zext i1 %cmp2 to i8, !dbg !5302
  store i8 %frombool, i8* %found_match, align 1, !dbg !5302, !tbaa !2493
  %12 = load i8, i8* %found_match, align 1, !dbg !5303, !tbaa !2493
  %tobool = trunc i8 %12 to i1, !dbg !5303
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !5305

if.then3:                                         ; preds = %if.end
  %13 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5306, !tbaa !2474
  %14 = bitcast %struct.dev_ino* %13 to i8*, !dbg !5306
  call void @free(i8* %14) #13, !dbg !5308
  br label %if.end4, !dbg !5309

if.end4:                                          ; preds = %if.then3, %if.end
  %15 = load i8, i8* %found_match, align 1, !dbg !5310, !tbaa !2493
  %tobool5 = trunc i8 %15 to i1, !dbg !5310
  ret i1 %tobool5, !dbg !5311
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_exit_status(i1 zeroext %serious) #0 !dbg !5312 !ctir !396 {
entry:
  %serious.addr = alloca i8, align 1, !ctir !141
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !5313, metadata !DIExpression()), !dbg !5314
  %0 = load i8, i8* %serious.addr, align 1, !dbg !5315, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !5315
  br i1 %tobool, label %if.then, label %if.else, !dbg !5317

if.then:                                          ; preds = %entry
  store i32 2, i32* @exit_status, align 4, !dbg !5318, !tbaa !2468
  br label %if.end2, !dbg !5319

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @exit_status, align 4, !dbg !5320, !tbaa !2468
  %cmp = icmp eq i32 %1, 0, !dbg !5322
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5323

if.then1:                                         ; preds = %if.else
  store i32 1, i32* @exit_status, align 4, !dbg !5324, !tbaa !2468
  br label %if.end, !dbg !5325

if.end:                                           ; preds = %if.then1, %if.else
  br label %if.end2

if.end2:                                          ; preds = %if.end, %if.then
  ret void, !dbg !5326
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_push(i64 %dev, i64 %ino) #0 !dbg !5327 !ctir !617 {
entry:
  %dev.addr = alloca i64, align 8, !ctir !258
  %ino.addr = alloca i64, align 8, !ctir !256
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !251
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !498
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !343
  %tmp = alloca i64, align 8, !ctir !149
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !5330, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !5332, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !5334, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !5336, metadata !DIExpression()), !dbg !5337
  store i32 16, i32* %dev_ino_size, align 4, !dbg !5337, !tbaa !2468
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5338, metadata !DIExpression()), !dbg !5340
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !5340, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5341, metadata !DIExpression()), !dbg !5340
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !5340, !tbaa !2468
  %conv = sext i32 %0 to i64, !dbg !5340
  store i64 %conv, i64* %__len, align 8, !dbg !5340, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5342, metadata !DIExpression()), !dbg !5345
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5345, !tbaa !2474
  store %struct.obstack* %1, %struct.obstack** %__o1, align 8, !dbg !5345, !tbaa !2474
  %2 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5345, !tbaa !2474
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 4, !dbg !5345, !ctir !344
  %3 = load i8*, i8** %chunk_limit, align 8, !dbg !5345, !tbaa !5090, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5345, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 3, !dbg !5345, !ctir !344
  %5 = load i8*, i8** %next_free, align 8, !dbg !5345, !tbaa !4762, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !5345
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !5345
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5345
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5345, !tbaa !2611
  %6 = load i64, i64* %tmp, align 8, !dbg !5345, !tbaa !2611
  %7 = load i64, i64* %__len, align 8, !dbg !5346, !tbaa !2611
  %cmp = icmp ult i64 %6, %7, !dbg !5346
  br i1 %cmp, label %if.then, label %if.end, !dbg !5340

if.then:                                          ; preds = %entry
  %8 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5346, !tbaa !2474
  %9 = load i64, i64* %__len, align 8, !dbg !5346, !tbaa !2611
  call void @_obstack_newchunk(%struct.obstack* %8, i64 %9), !dbg !5346
  br label %if.end, !dbg !5346

if.end:                                           ; preds = %if.then, %entry
  %10 = load i64, i64* %__len, align 8, !dbg !5340, !tbaa !2611
  %11 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5340, !tbaa !2474
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 3, !dbg !5340, !ctir !345
  %12 = load i8*, i8** %next_free2, align 8, !dbg !5340, !tbaa !4762, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %10, !dbg !5340
  store i8* %add.ptr, i8** %next_free2, align 8, !dbg !5340, !tbaa !4762, !ctir !143
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !5347, !tbaa !4762, !ctir !143
  store i8* %13, i8** %vdi, align 8, !dbg !5348, !tbaa !2474
  %14 = load i8*, i8** %vdi, align 8, !dbg !5349, !tbaa !2474
  %15 = bitcast i8* %14 to %struct.dev_ino*, !dbg !5349
  store %struct.dev_ino* %15, %struct.dev_ino** %di, align 8, !dbg !5350, !tbaa !2474
  %16 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5351, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %16, i32 -1, !dbg !5351
  store %struct.dev_ino* %incdec.ptr, %struct.dev_ino** %di, align 8, !dbg !5351, !tbaa !2474
  %17 = load i64, i64* %dev.addr, align 8, !dbg !5352, !tbaa !2611
  %18 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5353, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %18, i32 0, i32 1, !dbg !5354, !ctir !252
  store i64 %17, i64* %st_dev, align 8, !dbg !5355, !tbaa !3717, !ctir !258
  %19 = load i64, i64* %ino.addr, align 8, !dbg !5356, !tbaa !2611
  %20 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5357, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %20, i32 0, i32 0, !dbg !5358, !ctir !252
  store i64 %19, i64* %st_ino, align 8, !dbg !5359, !tbaa !3700, !ctir !256
  ret void, !dbg !5360
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, %struct.bin_str* %color, i1 zeroext %allow_pad, %struct.obstack* %stack, i8* %absolute_name) #0 !dbg !5361 !ctir !619 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !621
  %needs_general_quoting.addr = alloca i32, align 4, !ctir !27
  %color.addr = alloca %struct.bin_str*, align 8, !ctir !394
  %allow_pad.addr = alloca i8, align 1, !ctir !141
  %stack.addr = alloca %struct.obstack*, align 8, !ctir !498
  %absolute_name.addr = alloca i8*, align 8, !ctir !146
  %smallbuf = alloca [8192 x i8], align 16, !ctir !623
  %buf = alloca i8*, align 8, !ctir !143
  %len = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  %skip_quotes = alloca i8, align 1, !ctir !141
  %h = alloca i8*, align 8, !ctir !143
  %n = alloca i8*, align 8, !ctir !143
  %__o = alloca %struct.obstack*, align 8, !ctir !498
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !343
  %tmp = alloca i64, align 8, !ctir !149
  %__o49 = alloca %struct.obstack*, align 8, !ctir !498
  %__len50 = alloca i64, align 8, !ctir !149
  %__o151 = alloca %struct.obstack*, align 8, !ctir !343
  %tmp52 = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5362, metadata !DIExpression()), !dbg !5363
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !5364, metadata !DIExpression()), !dbg !5365
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !5366, metadata !DIExpression()), !dbg !5367
  store %struct.bin_str* %color, %struct.bin_str** %color.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color.addr, metadata !5368, metadata !DIExpression()), !dbg !5369
  %frombool = zext i1 %allow_pad to i8
  store i8 %frombool, i8* %allow_pad.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %allow_pad.addr, metadata !5370, metadata !DIExpression()), !dbg !5371
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  store i8* %absolute_name, i8** %absolute_name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %absolute_name.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5378, metadata !DIExpression()), !dbg !5379
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !5380
  store i8* %arraydecay, i8** %buf, align 8, !dbg !5379, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5381, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !5383, metadata !DIExpression()), !dbg !5384
  %0 = load i8*, i8** %name.addr, align 8, !dbg !5385, !tbaa !2474
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5386, !tbaa !2474
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !5387, !tbaa !2468
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* null, i8* %pad), !dbg !5388
  store i64 %call, i64* %len, align 8, !dbg !5389, !tbaa !2611
  %3 = load i8, i8* %pad, align 1, !dbg !5390, !tbaa !2493
  %tobool = trunc i8 %3 to i1, !dbg !5390
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5392

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* %allow_pad.addr, align 1, !dbg !5393, !tbaa !2493
  %tobool1 = trunc i8 %4 to i1, !dbg !5393
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5394

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !5395

do.body:                                          ; preds = %if.then
  %call2 = call i32 @putchar_unlocked(i32 32), !dbg !5396
  %5 = load i64, i64* @dired_pos, align 8, !dbg !5396, !tbaa !2611
  %inc = add i64 %5, 1, !dbg !5396
  store i64 %inc, i64* @dired_pos, align 8, !dbg !5396, !tbaa !2611
  br label %do.end, !dbg !5396

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !5396

if.end:                                           ; preds = %do.end, %land.lhs.true, %entry
  %6 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !5398, !tbaa !2474
  %tobool3 = icmp ne %struct.bin_str* %6, null, !dbg !5398
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5400

if.then4:                                         ; preds = %if.end
  %7 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !5401, !tbaa !2474
  %call5 = call zeroext i1 @print_color_indicator(%struct.bin_str* %7), !dbg !5402
  br label %if.end6, !dbg !5402

if.end6:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i8* %skip_quotes, metadata !5403, metadata !DIExpression()), !dbg !5404
  store i8 0, i8* %skip_quotes, align 1, !dbg !5404, !tbaa !2493
  %8 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5405, !tbaa !2474
  %tobool7 = icmp ne i8* %8, null, !dbg !5405
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !5407

if.then8:                                         ; preds = %if.end6
  %9 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5408, !tbaa !2493
  %tobool9 = trunc i8 %9 to i1, !dbg !5408
  br i1 %tobool9, label %land.lhs.true10, label %if.end16, !dbg !5411

land.lhs.true10:                                  ; preds = %if.then8
  %10 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5412, !tbaa !2493
  %tobool11 = trunc i8 %10 to i1, !dbg !5412
  br i1 %tobool11, label %land.lhs.true12, label %if.end16, !dbg !5413

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load i8, i8* %pad, align 1, !dbg !5414, !tbaa !2493
  %tobool13 = trunc i8 %11 to i1, !dbg !5414
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !5415

if.then14:                                        ; preds = %land.lhs.true12
  store i8 1, i8* %skip_quotes, align 1, !dbg !5416, !tbaa !2493
  %12 = load i8*, i8** %buf, align 8, !dbg !5418, !tbaa !2474
  %13 = load i8, i8* %12, align 1, !dbg !5418, !tbaa !2529, !ctir !144
  %conv = sext i8 %13 to i32, !dbg !5418
  %call15 = call i32 @putchar_unlocked(i32 %conv), !dbg !5418
  br label %if.end16, !dbg !5419

if.end16:                                         ; preds = %if.then14, %land.lhs.true12, %land.lhs.true10, %if.then8
  call void @llvm.dbg.declare(metadata i8** %h, metadata !5420, metadata !DIExpression()), !dbg !5421
  %14 = load i8*, i8** @hostname, align 8, !dbg !5422, !tbaa !2474
  %call17 = call i8* @file_escape(i8* %14, i1 zeroext false), !dbg !5423
  store i8* %call17, i8** %h, align 8, !dbg !5421, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %n, metadata !5424, metadata !DIExpression()), !dbg !5425
  %15 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5426, !tbaa !2474
  %call18 = call i8* @file_escape(i8* %15, i1 zeroext true), !dbg !5427
  store i8* %call18, i8** %n, align 8, !dbg !5425, !tbaa !2474
  %16 = load i8*, i8** %h, align 8, !dbg !5428, !tbaa !2474
  %17 = load i8*, i8** %n, align 8, !dbg !5429, !tbaa !2474
  %18 = load i8, i8* %17, align 1, !dbg !5430, !tbaa !2529, !ctir !144
  %conv19 = sext i8 %18 to i32, !dbg !5430
  %cmp = icmp eq i32 %conv19, 47, !dbg !5431
  %19 = zext i1 %cmp to i64, !dbg !5430
  %cond = select i1 %cmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i64 0, i64 0), !dbg !5430
  %20 = load i8*, i8** %n, align 8, !dbg !5432, !tbaa !2474
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i64 0, i64 0), i8* %16, i8* %cond, i8* %20), !dbg !5433
  %21 = load i8*, i8** %h, align 8, !dbg !5434, !tbaa !2474
  call void @free(i8* %21) #13, !dbg !5435
  %22 = load i8*, i8** %n, align 8, !dbg !5436, !tbaa !2474
  call void @free(i8* %22) #13, !dbg !5437
  br label %if.end22, !dbg !5438

if.end22:                                         ; preds = %if.end16, %if.end6
  %23 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5439, !tbaa !2474
  %tobool23 = icmp ne %struct.obstack* %23, null, !dbg !5439
  br i1 %tobool23, label %if.then24, label %if.end36, !dbg !5441

if.then24:                                        ; preds = %if.end22
  br label %do.body25, !dbg !5442

do.body25:                                        ; preds = %if.then24
  %24 = load i8, i8* @dired, align 1, !dbg !5443, !tbaa !2493
  %tobool26 = trunc i8 %24 to i1, !dbg !5443
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !5446

if.then27:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5447, metadata !DIExpression()), !dbg !5449
  %25 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5449, !tbaa !2474
  store %struct.obstack* %25, %struct.obstack** %__o, align 8, !dbg !5449, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5450, metadata !DIExpression()), !dbg !5449
  store i64 8, i64* %__len, align 8, !dbg !5449, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5451, metadata !DIExpression()), !dbg !5454
  %26 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5454, !tbaa !2474
  store %struct.obstack* %26, %struct.obstack** %__o1, align 8, !dbg !5454, !tbaa !2474
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5454, !tbaa !2474
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 4, !dbg !5454, !ctir !344
  %28 = load i8*, i8** %chunk_limit, align 8, !dbg !5454, !tbaa !5090, !ctir !143
  %29 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5454, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %29, i32 0, i32 3, !dbg !5454, !ctir !344
  %30 = load i8*, i8** %next_free, align 8, !dbg !5454, !tbaa !4762, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !5454
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !5454
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5454
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5454, !tbaa !2611
  %31 = load i64, i64* %tmp, align 8, !dbg !5454, !tbaa !2611
  %32 = load i64, i64* %__len, align 8, !dbg !5455, !tbaa !2611
  %cmp28 = icmp ult i64 %31, %32, !dbg !5455
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !5449

if.then30:                                        ; preds = %if.then27
  %33 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5455, !tbaa !2474
  %34 = load i64, i64* %__len, align 8, !dbg !5455, !tbaa !2611
  call void @_obstack_newchunk(%struct.obstack* %33, i64 %34), !dbg !5455
  br label %if.end31, !dbg !5455

if.end31:                                         ; preds = %if.then30, %if.then27
  %35 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5449, !tbaa !2474
  %next_free32 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 3, !dbg !5449, !ctir !345
  %36 = load i8*, i8** %next_free32, align 8, !dbg !5449, !tbaa !4762, !ctir !143
  %37 = load i64, i64* %__len, align 8, !dbg !5449, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %37, i1 false), !dbg !5449
  %38 = load i64, i64* %__len, align 8, !dbg !5449, !tbaa !2611
  %39 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5449, !tbaa !2474
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %39, i32 0, i32 3, !dbg !5449, !ctir !345
  %40 = load i8*, i8** %next_free33, align 8, !dbg !5449, !tbaa !4762, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %38, !dbg !5449
  store i8* %add.ptr, i8** %next_free33, align 8, !dbg !5449, !tbaa !4762, !ctir !143
  br label %if.end34, !dbg !5443

if.end34:                                         ; preds = %if.end31, %do.body25
  br label %do.end35, !dbg !5446

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !5446

if.end36:                                         ; preds = %do.end35, %if.end22
  %41 = load i8*, i8** %buf, align 8, !dbg !5456, !tbaa !2474
  %42 = load i8, i8* %skip_quotes, align 1, !dbg !5456, !tbaa !2493
  %tobool37 = trunc i8 %42 to i1, !dbg !5456
  %conv38 = zext i1 %tobool37 to i32, !dbg !5456
  %idx.ext = sext i32 %conv38 to i64, !dbg !5456
  %add.ptr39 = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !5456
  %43 = load i64, i64* %len, align 8, !dbg !5456, !tbaa !2611
  %44 = load i8, i8* %skip_quotes, align 1, !dbg !5456, !tbaa !2493
  %tobool40 = trunc i8 %44 to i1, !dbg !5456
  %conv41 = zext i1 %tobool40 to i32, !dbg !5456
  %mul = mul nsw i32 %conv41, 2, !dbg !5456
  %conv42 = sext i32 %mul to i64, !dbg !5456
  %sub = sub i64 %43, %conv42, !dbg !5456
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5456, !tbaa !2474
  %call43 = call i64 @fwrite_unlocked(i8* %add.ptr39, i64 1, i64 %sub, %struct._IO_FILE* %45), !dbg !5456
  %46 = load i64, i64* %len, align 8, !dbg !5457, !tbaa !2611
  %47 = load i64, i64* @dired_pos, align 8, !dbg !5458, !tbaa !2611
  %add = add i64 %47, %46, !dbg !5458
  store i64 %add, i64* @dired_pos, align 8, !dbg !5458, !tbaa !2611
  %48 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5459, !tbaa !2474
  %tobool44 = icmp ne %struct.obstack* %48, null, !dbg !5459
  br i1 %tobool44, label %if.then45, label %if.end67, !dbg !5461

if.then45:                                        ; preds = %if.end36
  br label %do.body46, !dbg !5462

do.body46:                                        ; preds = %if.then45
  %49 = load i8, i8* @dired, align 1, !dbg !5463, !tbaa !2493
  %tobool47 = trunc i8 %49 to i1, !dbg !5463
  br i1 %tobool47, label %if.then48, label %if.end65, !dbg !5466

if.then48:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o49, metadata !5467, metadata !DIExpression()), !dbg !5469
  %50 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5469, !tbaa !2474
  store %struct.obstack* %50, %struct.obstack** %__o49, align 8, !dbg !5469, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %__len50, metadata !5470, metadata !DIExpression()), !dbg !5469
  store i64 8, i64* %__len50, align 8, !dbg !5469, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o151, metadata !5471, metadata !DIExpression()), !dbg !5474
  %51 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5474, !tbaa !2474
  store %struct.obstack* %51, %struct.obstack** %__o151, align 8, !dbg !5474, !tbaa !2474
  %52 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !5474, !tbaa !2474
  %chunk_limit53 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 4, !dbg !5474, !ctir !344
  %53 = load i8*, i8** %chunk_limit53, align 8, !dbg !5474, !tbaa !5090, !ctir !143
  %54 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !5474, !tbaa !2474
  %next_free54 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 3, !dbg !5474, !ctir !344
  %55 = load i8*, i8** %next_free54, align 8, !dbg !5474, !tbaa !4762, !ctir !143
  %sub.ptr.lhs.cast55 = ptrtoint i8* %53 to i64, !dbg !5474
  %sub.ptr.rhs.cast56 = ptrtoint i8* %55 to i64, !dbg !5474
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !5474
  store i64 %sub.ptr.sub57, i64* %tmp52, align 8, !dbg !5474, !tbaa !2611
  %56 = load i64, i64* %tmp52, align 8, !dbg !5474, !tbaa !2611
  %57 = load i64, i64* %__len50, align 8, !dbg !5475, !tbaa !2611
  %cmp58 = icmp ult i64 %56, %57, !dbg !5475
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5469

if.then60:                                        ; preds = %if.then48
  %58 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5475, !tbaa !2474
  %59 = load i64, i64* %__len50, align 8, !dbg !5475, !tbaa !2611
  call void @_obstack_newchunk(%struct.obstack* %58, i64 %59), !dbg !5475
  br label %if.end61, !dbg !5475

if.end61:                                         ; preds = %if.then60, %if.then48
  %60 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5469, !tbaa !2474
  %next_free62 = getelementptr inbounds %struct.obstack, %struct.obstack* %60, i32 0, i32 3, !dbg !5469, !ctir !345
  %61 = load i8*, i8** %next_free62, align 8, !dbg !5469, !tbaa !4762, !ctir !143
  %62 = load i64, i64* %__len50, align 8, !dbg !5469, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %62, i1 false), !dbg !5469
  %63 = load i64, i64* %__len50, align 8, !dbg !5469, !tbaa !2611
  %64 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5469, !tbaa !2474
  %next_free63 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !5469, !ctir !345
  %65 = load i8*, i8** %next_free63, align 8, !dbg !5469, !tbaa !4762, !ctir !143
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %63, !dbg !5469
  store i8* %add.ptr64, i8** %next_free63, align 8, !dbg !5469, !tbaa !4762, !ctir !143
  br label %if.end65, !dbg !5463

if.end65:                                         ; preds = %if.end61, %do.body46
  br label %do.end66, !dbg !5466

do.end66:                                         ; preds = %if.end65
  br label %if.end67, !dbg !5466

if.end67:                                         ; preds = %do.end66, %if.end36
  %66 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5476, !tbaa !2474
  %tobool68 = icmp ne i8* %66, null, !dbg !5476
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !5478

if.then69:                                        ; preds = %if.end67
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5479, !tbaa !2474
  %call70 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !5479
  %68 = load i8, i8* %skip_quotes, align 1, !dbg !5481, !tbaa !2493
  %tobool71 = trunc i8 %68 to i1, !dbg !5481
  br i1 %tobool71, label %if.then72, label %if.end77, !dbg !5483

if.then72:                                        ; preds = %if.then69
  %69 = load i8*, i8** %buf, align 8, !dbg !5484, !tbaa !2474
  %70 = load i64, i64* %len, align 8, !dbg !5484, !tbaa !2611
  %add.ptr73 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !5484
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr73, i64 -1, !dbg !5484
  %71 = load i8, i8* %add.ptr74, align 1, !dbg !5484, !tbaa !2529, !ctir !144
  %conv75 = sext i8 %71 to i32, !dbg !5484
  %call76 = call i32 @putchar_unlocked(i32 %conv75), !dbg !5484
  br label %if.end77, !dbg !5484

if.end77:                                         ; preds = %if.then72, %if.then69
  br label %if.end78, !dbg !5485

if.end78:                                         ; preds = %if.end77, %if.end67
  %72 = load i8*, i8** %buf, align 8, !dbg !5486, !tbaa !2474
  %arraydecay79 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !5488
  %cmp80 = icmp ne i8* %72, %arraydecay79, !dbg !5489
  br i1 %cmp80, label %land.lhs.true82, label %if.end86, !dbg !5490

land.lhs.true82:                                  ; preds = %if.end78
  %73 = load i8*, i8** %buf, align 8, !dbg !5491, !tbaa !2474
  %74 = load i8*, i8** %name.addr, align 8, !dbg !5492, !tbaa !2474
  %cmp83 = icmp ne i8* %73, %74, !dbg !5493
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !5494

if.then85:                                        ; preds = %land.lhs.true82
  %75 = load i8*, i8** %buf, align 8, !dbg !5495, !tbaa !2474
  call void @free(i8* %75) #13, !dbg !5496
  br label %if.end86, !dbg !5496

if.end86:                                         ; preds = %if.then85, %land.lhs.true82, %if.end78
  %76 = load i64, i64* %len, align 8, !dbg !5497, !tbaa !2611
  %77 = load i8, i8* %pad, align 1, !dbg !5498, !tbaa !2493
  %tobool87 = trunc i8 %77 to i1, !dbg !5498
  %conv88 = zext i1 %tobool87 to i64, !dbg !5498
  %add89 = add i64 %76, %conv88, !dbg !5499
  ret i64 %add89, !dbg !5500
}

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @file_ignored(i8* %name) #0 !dbg !5501 !ctir !556 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5502, metadata !DIExpression()), !dbg !5503
  %0 = load i32, i32* @ignore_mode, align 4, !dbg !5504, !tbaa !2529
  %cmp = icmp ne i32 %0, 2, !dbg !5505
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false11, !dbg !5506

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5507, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !5507, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5507, !tbaa !2529
  %conv = sext i8 %2 to i32, !dbg !5507
  %cmp1 = icmp eq i32 %conv, 46, !dbg !5508
  br i1 %cmp1, label %land.lhs.true3, label %lor.lhs.false11, !dbg !5509

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* @ignore_mode, align 4, !dbg !5510, !tbaa !2529
  %cmp4 = icmp eq i32 %3, 0, !dbg !5511
  br i1 %cmp4, label %lor.end, label %lor.lhs.false, !dbg !5512

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5513, !tbaa !2474
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5514, !tbaa !2474
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5514, !ctir !146
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !5514, !tbaa !2529
  %conv7 = sext i8 %6 to i32, !dbg !5514
  %cmp8 = icmp eq i32 %conv7, 46, !dbg !5515
  %conv9 = zext i1 %cmp8 to i32, !dbg !5515
  %add = add nsw i32 1, %conv9, !dbg !5516
  %idxprom = sext i32 %add to i64, !dbg !5513
  %arrayidx10 = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5513, !ctir !146
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !5513, !tbaa !2529
  %tobool = icmp ne i8 %7, 0, !dbg !5513
  br i1 %tobool, label %lor.lhs.false11, label %lor.end, !dbg !5517

lor.lhs.false11:                                  ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %8 = load i32, i32* @ignore_mode, align 4, !dbg !5518, !tbaa !2529
  %cmp12 = icmp eq i32 %8, 0, !dbg !5519
  br i1 %cmp12, label %land.lhs.true14, label %lor.rhs, !dbg !5520

land.lhs.true14:                                  ; preds = %lor.lhs.false11
  %9 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !5521, !tbaa !2474
  %10 = load i8*, i8** %name.addr, align 8, !dbg !5522, !tbaa !2474
  %call = call zeroext i1 @patterns_match(%struct.ignore_pattern* %9, i8* %10), !dbg !5523
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !5524

lor.rhs:                                          ; preds = %land.lhs.true14, %lor.lhs.false11
  %11 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !5525, !tbaa !2474
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5526, !tbaa !2474
  %call16 = call zeroext i1 @patterns_match(%struct.ignore_pattern* %11, i8* %12), !dbg !5527
  br label %lor.end, !dbg !5524

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true14, %lor.lhs.false, %land.lhs.true3
  %13 = phi i1 [ true, %land.lhs.true14 ], [ true, %lor.lhs.false ], [ true, %land.lhs.true3 ], [ %call16, %lor.rhs ]
  ret i1 %13, !dbg !5528
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_signals() #0 !dbg !5529 !ctir !336 {
entry:
  %sig = alloca i32, align 4, !ctir !27
  %stops = alloca i32, align 4, !ctir !27
  %oldset = alloca %struct.__sigset_t, align 8, !ctir !398
  br label %while.cond, !dbg !5530

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5531, !tbaa !2468
  %tobool = icmp ne i32 %0, 0, !dbg !5531
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5532

lor.rhs:                                          ; preds = %while.cond
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5533, !tbaa !2468
  %tobool1 = icmp ne i32 %1, 0, !dbg !5532
  br label %lor.end, !dbg !5532

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %2 = phi i1 [ true, %while.cond ], [ %tobool1, %lor.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !5530

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %sig, metadata !5534, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %stops, metadata !5537, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %oldset, metadata !5539, metadata !DIExpression()), !dbg !5540
  %3 = load i8, i8* @used_color, align 1, !dbg !5541, !tbaa !2493
  %tobool2 = trunc i8 %3 to i1, !dbg !5541
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5543

if.then:                                          ; preds = %while.body
  call void @restore_default_color(), !dbg !5544
  br label %if.end, !dbg !5544

if.end:                                           ; preds = %if.then, %while.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5545, !tbaa !2474
  %call = call i32 @fflush_unlocked(%struct._IO_FILE* %4), !dbg !5545
  %call3 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #13, !dbg !5546
  %5 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5547, !tbaa !2468
  store i32 %5, i32* %sig, align 4, !dbg !5548, !tbaa !2468
  %6 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5549, !tbaa !2468
  store i32 %6, i32* %stops, align 4, !dbg !5550, !tbaa !2468
  %7 = load i32, i32* %stops, align 4, !dbg !5551, !tbaa !2468
  %tobool4 = icmp ne i32 %7, 0, !dbg !5551
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5553

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %stops, align 4, !dbg !5554, !tbaa !2468
  %sub = sub nsw i32 %8, 1, !dbg !5556
  store volatile i32 %sub, i32* @stop_signal_count, align 4, !dbg !5557, !tbaa !2468
  store i32 19, i32* %sig, align 4, !dbg !5558, !tbaa !2468
  br label %if.end7, !dbg !5559

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %sig, align 4, !dbg !5560, !tbaa !2468
  %call6 = call void (i32)* @signal(i32 %9, void (i32)* null) #13, !dbg !5561
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %10 = load i32, i32* %sig, align 4, !dbg !5562, !tbaa !2468
  %call8 = call i32 @raise(i32 %10) #13, !dbg !5563
  %call9 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #13, !dbg !5564
  br label %while.cond, !dbg !5530, !llvm.loop !5565

while.end:                                        ; preds = %lor.end
  ret void, !dbg !5567
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @patterns_match(%struct.ignore_pattern* %patterns, i8* %file) #0 !dbg !5568 !ctir !646 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %patterns.addr = alloca %struct.ignore_pattern*, align 8, !ctir !648
  %file.addr = alloca i8*, align 8, !ctir !146
  %p = alloca %struct.ignore_pattern*, align 8, !ctir !648
  store %struct.ignore_pattern* %patterns, %struct.ignore_pattern** %patterns.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %patterns.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5571, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %p, metadata !5573, metadata !DIExpression()), !dbg !5574
  %0 = load %struct.ignore_pattern*, %struct.ignore_pattern** %patterns.addr, align 8, !dbg !5575, !tbaa !2474
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %p, align 8, !dbg !5577, !tbaa !2474
  br label %for.cond, !dbg !5578

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5579, !tbaa !2474
  %tobool = icmp ne %struct.ignore_pattern* %1, null, !dbg !5581
  br i1 %tobool, label %for.body, label %for.end, !dbg !5581

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5582, !tbaa !2474
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !5584, !ctir !649
  %3 = load i8*, i8** %pattern, align 8, !dbg !5584, !tbaa !3078, !ctir !146
  %4 = load i8*, i8** %file.addr, align 8, !dbg !5585, !tbaa !2474
  %call = call i32 @fnmatch(i8* %3, i8* %4, i32 4), !dbg !5586
  %cmp = icmp eq i32 %call, 0, !dbg !5587
  br i1 %cmp, label %if.then, label %if.end, !dbg !5588

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !5589
  br label %return, !dbg !5589

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5590

for.inc:                                          ; preds = %if.end
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5591, !tbaa !2474
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %5, i32 0, i32 1, !dbg !5592, !ctir !649
  %6 = load %struct.ignore_pattern*, %struct.ignore_pattern** %next, align 8, !dbg !5592, !tbaa !3084, !ctir !499
  store %struct.ignore_pattern* %6, %struct.ignore_pattern** %p, align 8, !dbg !5593, !tbaa !2474
  br label %for.cond, !dbg !5594, !llvm.loop !5595

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !5597
  br label %return, !dbg !5597

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !5598
  ret i1 %7, !dbg !5598
}

declare dso_local i32 @fnmatch(i8*, i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_buf(i8** %inbuf, i64 %bufsize, i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, i64* %width, i8* %pad) #0 !dbg !5599 !ctir !626 {
entry:
  %inbuf.addr = alloca i8**, align 8, !ctir !142
  %bufsize.addr = alloca i64, align 8, !ctir !149
  %name.addr = alloca i8*, align 8, !ctir !143
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !621
  %needs_general_quoting.addr = alloca i32, align 4, !ctir !27
  %width.addr = alloca i64*, align 8, !ctir !148
  %pad.addr = alloca i8*, align 8, !ctir !628
  %buf = alloca i8*, align 8, !ctir !143
  %displayed_width = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %quoted = alloca i8, align 1, !ctir !141
  %qs = alloca i32, align 4, !ctir !95
  %needs_further_quoting = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !629
  %wc = alloca i32, align 4, !ctir !641
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %p83 = alloca i8*, align 8, !ctir !143
  %plimit84 = alloca i8*, align 8, !ctir !146
  %p111 = alloca i8*, align 8, !ctir !146
  %plimit112 = alloca i8*, align 8, !ctir !146
  store i8** %inbuf, i8*** %inbuf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %inbuf.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !5608, metadata !DIExpression()), !dbg !5609
  store i64* %width, i64** %width.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !5610, metadata !DIExpression()), !dbg !5611
  store i8* %pad, i8** %pad.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %pad.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5614, metadata !DIExpression()), !dbg !5615
  %0 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5616, !tbaa !2474
  %1 = load i8*, i8** %0, align 8, !dbg !5617, !tbaa !2474, !ctir !143
  store i8* %1, i8** %buf, align 8, !dbg !5615, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %displayed_width, metadata !5618, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5620, metadata !DIExpression()), !dbg !5621
  store i64 0, i64* %len, align 8, !dbg !5621, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %quoted, metadata !5622, metadata !DIExpression()), !dbg !5623
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !5624, metadata !DIExpression()), !dbg !5625
  %2 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5626, !tbaa !2474
  %call = call i32 @get_quoting_style(%struct.quoting_options* %2), !dbg !5627
  store i32 %call, i32* %qs, align 4, !dbg !5625, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %needs_further_quoting, metadata !5628, metadata !DIExpression()), !dbg !5629
  %3 = load i8, i8* @qmark_funny_chars, align 1, !dbg !5630, !tbaa !2493
  %tobool = trunc i8 %3 to i1, !dbg !5630
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5631

land.rhs:                                         ; preds = %entry
  %4 = load i32, i32* %qs, align 4, !dbg !5632, !tbaa !2529
  %cmp = icmp eq i32 %4, 1, !dbg !5633
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !5634

lor.lhs.false:                                    ; preds = %land.rhs
  %5 = load i32, i32* %qs, align 4, !dbg !5635, !tbaa !2529
  %cmp1 = icmp eq i32 %5, 2, !dbg !5636
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !5637

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %qs, align 4, !dbg !5638, !tbaa !2529
  %cmp2 = icmp eq i32 %6, 0, !dbg !5639
  br label %lor.end, !dbg !5637

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %8 = phi i1 [ false, %entry ], [ %7, %lor.end ], !dbg !5640
  %frombool = zext i1 %8 to i8, !dbg !5629
  store i8 %frombool, i8* %needs_further_quoting, align 1, !dbg !5629, !tbaa !2493
  %9 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !5641, !tbaa !2468
  %cmp3 = icmp ne i32 %9, 0, !dbg !5643
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5644

if.then:                                          ; preds = %land.end
  %10 = load i8*, i8** %buf, align 8, !dbg !5645, !tbaa !2474
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !5647, !tbaa !2611
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5648, !tbaa !2474
  %13 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5649, !tbaa !2474
  %call4 = call i64 @quotearg_buffer(i8* %10, i64 %11, i8* %12, i64 -1, %struct.quoting_options* %13), !dbg !5650
  store i64 %call4, i64* %len, align 8, !dbg !5651, !tbaa !2611
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !5652, !tbaa !2611
  %15 = load i64, i64* %len, align 8, !dbg !5654, !tbaa !2611
  %cmp5 = icmp ule i64 %14, %15, !dbg !5655
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5656

if.then6:                                         ; preds = %if.then
  %16 = load i64, i64* %len, align 8, !dbg !5657, !tbaa !2611
  %add = add i64 %16, 1, !dbg !5659
  %call7 = call noalias i8* @xmalloc(i64 %add), !dbg !5660
  store i8* %call7, i8** %buf, align 8, !dbg !5661, !tbaa !2474
  %17 = load i8*, i8** %buf, align 8, !dbg !5662, !tbaa !2474
  %18 = load i64, i64* %len, align 8, !dbg !5663, !tbaa !2611
  %add8 = add i64 %18, 1, !dbg !5664
  %19 = load i8*, i8** %name.addr, align 8, !dbg !5665, !tbaa !2474
  %20 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5666, !tbaa !2474
  %call9 = call i64 @quotearg_buffer(i8* %17, i64 %add8, i8* %19, i64 -1, %struct.quoting_options* %20), !dbg !5667
  br label %if.end, !dbg !5668

if.end:                                           ; preds = %if.then6, %if.then
  %21 = load i8*, i8** %name.addr, align 8, !dbg !5669, !tbaa !2474
  %22 = load i8, i8* %21, align 1, !dbg !5670, !tbaa !2529, !ctir !144
  %conv = sext i8 %22 to i32, !dbg !5670
  %23 = load i8*, i8** %buf, align 8, !dbg !5671, !tbaa !2474
  %24 = load i8, i8* %23, align 1, !dbg !5672, !tbaa !2529, !ctir !144
  %conv10 = sext i8 %24 to i32, !dbg !5672
  %cmp11 = icmp ne i32 %conv, %conv10, !dbg !5673
  br i1 %cmp11, label %lor.end17, label %lor.rhs13, !dbg !5674

lor.rhs13:                                        ; preds = %if.end
  %25 = load i8*, i8** %name.addr, align 8, !dbg !5675, !tbaa !2474
  %call14 = call i64 @strlen(i8* %25) #16, !dbg !5676
  %26 = load i64, i64* %len, align 8, !dbg !5677, !tbaa !2611
  %cmp15 = icmp ne i64 %call14, %26, !dbg !5678
  br label %lor.end17, !dbg !5674

lor.end17:                                        ; preds = %lor.rhs13, %if.end
  %27 = phi i1 [ true, %if.end ], [ %cmp15, %lor.rhs13 ]
  %frombool18 = zext i1 %27 to i8, !dbg !5679
  store i8 %frombool18, i8* %quoted, align 1, !dbg !5679, !tbaa !2493
  br label %if.end32, !dbg !5680

if.else:                                          ; preds = %land.end
  %28 = load i8, i8* %needs_further_quoting, align 1, !dbg !5681, !tbaa !2493
  %tobool19 = trunc i8 %28 to i1, !dbg !5681
  br i1 %tobool19, label %if.then20, label %if.else29, !dbg !5683

if.then20:                                        ; preds = %if.else
  %29 = load i8*, i8** %name.addr, align 8, !dbg !5684, !tbaa !2474
  %call21 = call i64 @strlen(i8* %29) #16, !dbg !5686
  store i64 %call21, i64* %len, align 8, !dbg !5687, !tbaa !2611
  %30 = load i64, i64* %bufsize.addr, align 8, !dbg !5688, !tbaa !2611
  %31 = load i64, i64* %len, align 8, !dbg !5690, !tbaa !2611
  %cmp22 = icmp ule i64 %30, %31, !dbg !5691
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !5692

if.then24:                                        ; preds = %if.then20
  %32 = load i64, i64* %len, align 8, !dbg !5693, !tbaa !2611
  %add25 = add i64 %32, 1, !dbg !5694
  %call26 = call noalias i8* @xmalloc(i64 %add25), !dbg !5695
  store i8* %call26, i8** %buf, align 8, !dbg !5696, !tbaa !2474
  br label %if.end27, !dbg !5697

if.end27:                                         ; preds = %if.then24, %if.then20
  %33 = load i8*, i8** %buf, align 8, !dbg !5698, !tbaa !2474
  %34 = load i8*, i8** %name.addr, align 8, !dbg !5699, !tbaa !2474
  %35 = load i64, i64* %len, align 8, !dbg !5700, !tbaa !2611
  %add28 = add i64 %35, 1, !dbg !5701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %add28, i1 false), !dbg !5702
  store i8 0, i8* %quoted, align 1, !dbg !5703, !tbaa !2493
  br label %if.end31, !dbg !5704

if.else29:                                        ; preds = %if.else
  %36 = load i8*, i8** %name.addr, align 8, !dbg !5705, !tbaa !2474
  %call30 = call i64 @strlen(i8* %36) #16, !dbg !5707
  store i64 %call30, i64* %len, align 8, !dbg !5708, !tbaa !2611
  %37 = load i8*, i8** %name.addr, align 8, !dbg !5709, !tbaa !2474
  store i8* %37, i8** %buf, align 8, !dbg !5710, !tbaa !2474
  store i8 0, i8* %quoted, align 1, !dbg !5711, !tbaa !2493
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.end27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %lor.end17
  %38 = load i8, i8* %needs_further_quoting, align 1, !dbg !5712, !tbaa !2493
  %tobool33 = trunc i8 %38 to i1, !dbg !5712
  br i1 %tobool33, label %if.then34, label %if.else100, !dbg !5714

if.then34:                                        ; preds = %if.end32
  %call35 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5715
  %cmp36 = icmp ugt i64 %call35, 1, !dbg !5718
  br i1 %cmp36, label %if.then38, label %if.else82, !dbg !5719

if.then38:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5720, metadata !DIExpression()), !dbg !5722
  %39 = load i8*, i8** %buf, align 8, !dbg !5723, !tbaa !2474
  store i8* %39, i8** %p, align 8, !dbg !5722, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !5724, metadata !DIExpression()), !dbg !5725
  %40 = load i8*, i8** %buf, align 8, !dbg !5726, !tbaa !2474
  %41 = load i64, i64* %len, align 8, !dbg !5727, !tbaa !2611
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !5728
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !5725, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %q, metadata !5729, metadata !DIExpression()), !dbg !5730
  %42 = load i8*, i8** %buf, align 8, !dbg !5731, !tbaa !2474
  store i8* %42, i8** %q, align 8, !dbg !5730, !tbaa !2474
  store i64 0, i64* %displayed_width, align 8, !dbg !5732, !tbaa !2611
  br label %while.cond, !dbg !5733

while.cond:                                       ; preds = %sw.epilog, %if.then38
  %43 = load i8*, i8** %p, align 8, !dbg !5734, !tbaa !2474
  %44 = load i8*, i8** %plimit, align 8, !dbg !5735, !tbaa !2474
  %cmp39 = icmp ult i8* %43, %44, !dbg !5736
  br i1 %cmp39, label %while.body, label %while.end, !dbg !5733

while.body:                                       ; preds = %while.cond
  %45 = load i8*, i8** %p, align 8, !dbg !5737, !tbaa !2474
  %46 = load i8, i8* %45, align 1, !dbg !5738, !tbaa !2529, !ctir !147
  %conv41 = sext i8 %46 to i32, !dbg !5738
  switch i32 %conv41, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !5739

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %47 = load i8*, i8** %p, align 8, !dbg !5740, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !5740
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5740, !tbaa !2474
  %48 = load i8, i8* %47, align 1, !dbg !5742, !tbaa !2529, !ctir !147
  %49 = load i8*, i8** %q, align 8, !dbg !5743, !tbaa !2474
  %incdec.ptr42 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !5743
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !5743, !tbaa !2474
  store i8 %48, i8* %49, align 1, !dbg !5744, !tbaa !2529, !ctir !144
  %50 = load i64, i64* %displayed_width, align 8, !dbg !5745, !tbaa !2611
  %add43 = add i64 %50, 1, !dbg !5745
  store i64 %add43, i64* %displayed_width, align 8, !dbg !5745, !tbaa !2611
  br label %sw.epilog, !dbg !5746

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !5747, metadata !DIExpression()), !dbg !5749
  %51 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !5749
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 8, i1 false), !dbg !5749
  br label %do.body, !dbg !5750

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !5751, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5756, metadata !DIExpression()), !dbg !5757
  %52 = load i8*, i8** %p, align 8, !dbg !5758, !tbaa !2474
  %53 = load i8*, i8** %plimit, align 8, !dbg !5759, !tbaa !2474
  %54 = load i8*, i8** %p, align 8, !dbg !5760, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %53 to i64, !dbg !5761
  %sub.ptr.rhs.cast = ptrtoint i8* %54 to i64, !dbg !5761
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5761
  %call44 = call i64 @rpl_mbrtowc(i32* %wc, i8* %52, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !5762
  store i64 %call44, i64* %bytes, align 8, !dbg !5763, !tbaa !2611
  %55 = load i64, i64* %bytes, align 8, !dbg !5764, !tbaa !2611
  %cmp45 = icmp eq i64 %55, -1, !dbg !5766
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !5767

if.then47:                                        ; preds = %do.body
  %56 = load i8*, i8** %p, align 8, !dbg !5768, !tbaa !2474
  %incdec.ptr48 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5768
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !5768, !tbaa !2474
  %57 = load i8*, i8** %q, align 8, !dbg !5770, !tbaa !2474
  %incdec.ptr49 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !5770
  store i8* %incdec.ptr49, i8** %q, align 8, !dbg !5770, !tbaa !2474
  store i8 63, i8* %57, align 1, !dbg !5771, !tbaa !2529, !ctir !144
  %58 = load i64, i64* %displayed_width, align 8, !dbg !5772, !tbaa !2611
  %add50 = add i64 %58, 1, !dbg !5772
  store i64 %add50, i64* %displayed_width, align 8, !dbg !5772, !tbaa !2611
  br label %do.end, !dbg !5773

if.end51:                                         ; preds = %do.body
  %59 = load i64, i64* %bytes, align 8, !dbg !5774, !tbaa !2611
  %cmp52 = icmp eq i64 %59, -2, !dbg !5776
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !5777

if.then54:                                        ; preds = %if.end51
  %60 = load i8*, i8** %plimit, align 8, !dbg !5778, !tbaa !2474
  store i8* %60, i8** %p, align 8, !dbg !5780, !tbaa !2474
  %61 = load i8*, i8** %q, align 8, !dbg !5781, !tbaa !2474
  %incdec.ptr55 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !5781
  store i8* %incdec.ptr55, i8** %q, align 8, !dbg !5781, !tbaa !2474
  store i8 63, i8* %61, align 1, !dbg !5782, !tbaa !2529, !ctir !144
  %62 = load i64, i64* %displayed_width, align 8, !dbg !5783, !tbaa !2611
  %add56 = add i64 %62, 1, !dbg !5783
  store i64 %add56, i64* %displayed_width, align 8, !dbg !5783, !tbaa !2611
  br label %do.end, !dbg !5784

if.end57:                                         ; preds = %if.end51
  %63 = load i64, i64* %bytes, align 8, !dbg !5785, !tbaa !2611
  %cmp58 = icmp eq i64 %63, 0, !dbg !5787
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5788

if.then60:                                        ; preds = %if.end57
  store i64 1, i64* %bytes, align 8, !dbg !5789, !tbaa !2611
  br label %if.end61, !dbg !5790

if.end61:                                         ; preds = %if.then60, %if.end57
  %64 = load i32, i32* %wc, align 4, !dbg !5791, !tbaa !2468
  %call62 = call i32 @wcwidth(i32 %64) #13, !dbg !5792
  store i32 %call62, i32* %w, align 4, !dbg !5793, !tbaa !2468
  %65 = load i32, i32* %w, align 4, !dbg !5794, !tbaa !2468
  %cmp63 = icmp sge i32 %65, 0, !dbg !5796
  br i1 %cmp63, label %if.then65, label %if.else72, !dbg !5797

if.then65:                                        ; preds = %if.end61
  br label %for.cond, !dbg !5798

for.cond:                                         ; preds = %for.inc, %if.then65
  %66 = load i64, i64* %bytes, align 8, !dbg !5800, !tbaa !2611
  %cmp66 = icmp ugt i64 %66, 0, !dbg !5803
  br i1 %cmp66, label %for.body, label %for.end, !dbg !5804

for.body:                                         ; preds = %for.cond
  %67 = load i8*, i8** %p, align 8, !dbg !5805, !tbaa !2474
  %incdec.ptr68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !5805
  store i8* %incdec.ptr68, i8** %p, align 8, !dbg !5805, !tbaa !2474
  %68 = load i8, i8* %67, align 1, !dbg !5806, !tbaa !2529, !ctir !147
  %69 = load i8*, i8** %q, align 8, !dbg !5807, !tbaa !2474
  %incdec.ptr69 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !5807
  store i8* %incdec.ptr69, i8** %q, align 8, !dbg !5807, !tbaa !2474
  store i8 %68, i8* %69, align 1, !dbg !5808, !tbaa !2529, !ctir !144
  br label %for.inc, !dbg !5809

for.inc:                                          ; preds = %for.body
  %70 = load i64, i64* %bytes, align 8, !dbg !5810, !tbaa !2611
  %dec = add i64 %70, -1, !dbg !5810
  store i64 %dec, i64* %bytes, align 8, !dbg !5810, !tbaa !2611
  br label %for.cond, !dbg !5811, !llvm.loop !5812

for.end:                                          ; preds = %for.cond
  %71 = load i32, i32* %w, align 4, !dbg !5814, !tbaa !2468
  %conv70 = sext i32 %71 to i64, !dbg !5814
  %72 = load i64, i64* %displayed_width, align 8, !dbg !5815, !tbaa !2611
  %add71 = add i64 %72, %conv70, !dbg !5815
  store i64 %add71, i64* %displayed_width, align 8, !dbg !5815, !tbaa !2611
  br label %if.end76, !dbg !5816

if.else72:                                        ; preds = %if.end61
  %73 = load i64, i64* %bytes, align 8, !dbg !5817, !tbaa !2611
  %74 = load i8*, i8** %p, align 8, !dbg !5819, !tbaa !2474
  %add.ptr73 = getelementptr inbounds i8, i8* %74, i64 %73, !dbg !5819
  store i8* %add.ptr73, i8** %p, align 8, !dbg !5819, !tbaa !2474
  %75 = load i8*, i8** %q, align 8, !dbg !5820, !tbaa !2474
  %incdec.ptr74 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !5820
  store i8* %incdec.ptr74, i8** %q, align 8, !dbg !5820, !tbaa !2474
  store i8 63, i8* %75, align 1, !dbg !5821, !tbaa !2529, !ctir !144
  %76 = load i64, i64* %displayed_width, align 8, !dbg !5822, !tbaa !2611
  %add75 = add i64 %76, 1, !dbg !5822
  store i64 %add75, i64* %displayed_width, align 8, !dbg !5822, !tbaa !2611
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %for.end
  br label %do.cond, !dbg !5823

do.cond:                                          ; preds = %if.end76
  %call77 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !5824
  %tobool78 = icmp ne i32 %call77, 0, !dbg !5825
  %lnot = xor i1 %tobool78, true, !dbg !5825
  br i1 %lnot, label %do.body, label %do.end, !dbg !5823, !llvm.loop !5826

do.end:                                           ; preds = %do.cond, %if.then54, %if.then47
  br label %sw.epilog, !dbg !5828

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !5733, !llvm.loop !5829

while.end:                                        ; preds = %while.cond
  %77 = load i8*, i8** %q, align 8, !dbg !5831, !tbaa !2474
  %78 = load i8*, i8** %buf, align 8, !dbg !5832, !tbaa !2474
  %sub.ptr.lhs.cast79 = ptrtoint i8* %77 to i64, !dbg !5833
  %sub.ptr.rhs.cast80 = ptrtoint i8* %78 to i64, !dbg !5833
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !5833
  store i64 %sub.ptr.sub81, i64* %len, align 8, !dbg !5834, !tbaa !2611
  br label %if.end99, !dbg !5835

if.else82:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p83, metadata !5836, metadata !DIExpression()), !dbg !5838
  %79 = load i8*, i8** %buf, align 8, !dbg !5839, !tbaa !2474
  store i8* %79, i8** %p83, align 8, !dbg !5838, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %plimit84, metadata !5840, metadata !DIExpression()), !dbg !5841
  %80 = load i8*, i8** %buf, align 8, !dbg !5842, !tbaa !2474
  %81 = load i64, i64* %len, align 8, !dbg !5843, !tbaa !2611
  %add.ptr85 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !5844
  store i8* %add.ptr85, i8** %plimit84, align 8, !dbg !5841, !tbaa !2474
  br label %while.cond86, !dbg !5845

while.cond86:                                     ; preds = %if.end96, %if.else82
  %82 = load i8*, i8** %p83, align 8, !dbg !5846, !tbaa !2474
  %83 = load i8*, i8** %plimit84, align 8, !dbg !5847, !tbaa !2474
  %cmp87 = icmp ult i8* %82, %83, !dbg !5848
  br i1 %cmp87, label %while.body89, label %while.end98, !dbg !5845

while.body89:                                     ; preds = %while.cond86
  %call90 = call i16** @__ctype_b_loc() #17, !dbg !5849
  %84 = load i16*, i16** %call90, align 8, !dbg !5849, !tbaa !2474, !ctir !575
  %85 = load i8*, i8** %p83, align 8, !dbg !5849, !tbaa !2474
  %86 = load i8, i8* %85, align 1, !dbg !5849, !tbaa !2529, !ctir !144
  %call91 = call zeroext i8 @to_uchar(i8 signext %86), !dbg !5849
  %conv92 = zext i8 %call91 to i32, !dbg !5849
  %idxprom = sext i32 %conv92 to i64, !dbg !5849
  %arrayidx = getelementptr inbounds i16, i16* %84, i64 %idxprom, !dbg !5849, !ctir !575
  %87 = load i16, i16* %arrayidx, align 2, !dbg !5849, !tbaa !5852
  %conv93 = zext i16 %87 to i32, !dbg !5849
  %and = and i32 %conv93, 16384, !dbg !5849
  %tobool94 = icmp ne i32 %and, 0, !dbg !5849
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !5853

if.then95:                                        ; preds = %while.body89
  %88 = load i8*, i8** %p83, align 8, !dbg !5854, !tbaa !2474
  store i8 63, i8* %88, align 1, !dbg !5855, !tbaa !2529, !ctir !144
  br label %if.end96, !dbg !5856

if.end96:                                         ; preds = %if.then95, %while.body89
  %89 = load i8*, i8** %p83, align 8, !dbg !5857, !tbaa !2474
  %incdec.ptr97 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !5857
  store i8* %incdec.ptr97, i8** %p83, align 8, !dbg !5857, !tbaa !2474
  br label %while.cond86, !dbg !5845, !llvm.loop !5858

while.end98:                                      ; preds = %while.cond86
  %90 = load i64, i64* %len, align 8, !dbg !5860, !tbaa !2611
  store i64 %90, i64* %displayed_width, align 8, !dbg !5861, !tbaa !2611
  br label %if.end99

if.end99:                                         ; preds = %while.end98, %while.end
  br label %if.end132, !dbg !5862

if.else100:                                       ; preds = %if.end32
  %91 = load i64*, i64** %width.addr, align 8, !dbg !5863, !tbaa !2474
  %cmp101 = icmp ne i64* %91, null, !dbg !5865
  br i1 %cmp101, label %if.then103, label %if.end131, !dbg !5866

if.then103:                                       ; preds = %if.else100
  %call104 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5867
  %cmp105 = icmp ugt i64 %call104, 1, !dbg !5870
  br i1 %cmp105, label %if.then107, label %if.else110, !dbg !5871

if.then107:                                       ; preds = %if.then103
  %92 = load i8*, i8** %buf, align 8, !dbg !5872, !tbaa !2474
  %93 = load i64, i64* %len, align 8, !dbg !5873, !tbaa !2611
  %call108 = call i32 @mbsnwidth(i8* %92, i64 %93, i32 0), !dbg !5874
  %conv109 = sext i32 %call108 to i64, !dbg !5874
  store i64 %conv109, i64* %displayed_width, align 8, !dbg !5875, !tbaa !2611
  br label %if.end130, !dbg !5876

if.else110:                                       ; preds = %if.then103
  call void @llvm.dbg.declare(metadata i8** %p111, metadata !5877, metadata !DIExpression()), !dbg !5879
  %94 = load i8*, i8** %buf, align 8, !dbg !5880, !tbaa !2474
  store i8* %94, i8** %p111, align 8, !dbg !5879, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %plimit112, metadata !5881, metadata !DIExpression()), !dbg !5882
  %95 = load i8*, i8** %buf, align 8, !dbg !5883, !tbaa !2474
  %96 = load i64, i64* %len, align 8, !dbg !5884, !tbaa !2611
  %add.ptr113 = getelementptr inbounds i8, i8* %95, i64 %96, !dbg !5885
  store i8* %add.ptr113, i8** %plimit112, align 8, !dbg !5882, !tbaa !2474
  store i64 0, i64* %displayed_width, align 8, !dbg !5886, !tbaa !2611
  br label %while.cond114, !dbg !5887

while.cond114:                                    ; preds = %if.end127, %if.else110
  %97 = load i8*, i8** %p111, align 8, !dbg !5888, !tbaa !2474
  %98 = load i8*, i8** %plimit112, align 8, !dbg !5889, !tbaa !2474
  %cmp115 = icmp ult i8* %97, %98, !dbg !5890
  br i1 %cmp115, label %while.body117, label %while.end129, !dbg !5887

while.body117:                                    ; preds = %while.cond114
  %call118 = call i16** @__ctype_b_loc() #17, !dbg !5891
  %99 = load i16*, i16** %call118, align 8, !dbg !5891, !tbaa !2474, !ctir !575
  %100 = load i8*, i8** %p111, align 8, !dbg !5891, !tbaa !2474
  %101 = load i8, i8* %100, align 1, !dbg !5891, !tbaa !2529, !ctir !147
  %call119 = call zeroext i8 @to_uchar(i8 signext %101), !dbg !5891
  %conv120 = zext i8 %call119 to i32, !dbg !5891
  %idxprom121 = sext i32 %conv120 to i64, !dbg !5891
  %arrayidx122 = getelementptr inbounds i16, i16* %99, i64 %idxprom121, !dbg !5891, !ctir !575
  %102 = load i16, i16* %arrayidx122, align 2, !dbg !5891, !tbaa !5852
  %conv123 = zext i16 %102 to i32, !dbg !5891
  %and124 = and i32 %conv123, 16384, !dbg !5891
  %tobool125 = icmp ne i32 %and124, 0, !dbg !5891
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !5894

if.then126:                                       ; preds = %while.body117
  %103 = load i64, i64* %displayed_width, align 8, !dbg !5895, !tbaa !2611
  %inc = add i64 %103, 1, !dbg !5895
  store i64 %inc, i64* %displayed_width, align 8, !dbg !5895, !tbaa !2611
  br label %if.end127, !dbg !5896

if.end127:                                        ; preds = %if.then126, %while.body117
  %104 = load i8*, i8** %p111, align 8, !dbg !5897, !tbaa !2474
  %incdec.ptr128 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !5897
  store i8* %incdec.ptr128, i8** %p111, align 8, !dbg !5897, !tbaa !2474
  br label %while.cond114, !dbg !5887, !llvm.loop !5898

while.end129:                                     ; preds = %while.cond114
  br label %if.end130

if.end130:                                        ; preds = %while.end129, %if.then107
  br label %if.end131, !dbg !5900

if.end131:                                        ; preds = %if.end130, %if.else100
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end99
  %105 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5901, !tbaa !2493
  %tobool133 = trunc i8 %105 to i1, !dbg !5901
  br i1 %tobool133, label %land.lhs.true, label %land.end140, !dbg !5902

land.lhs.true:                                    ; preds = %if.end132
  %106 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5903, !tbaa !2493
  %tobool135 = trunc i8 %106 to i1, !dbg !5903
  br i1 %tobool135, label %land.rhs137, label %land.end140, !dbg !5904

land.rhs137:                                      ; preds = %land.lhs.true
  %107 = load i8, i8* %quoted, align 1, !dbg !5905, !tbaa !2493
  %tobool138 = trunc i8 %107 to i1, !dbg !5905
  %lnot139 = xor i1 %tobool138, true, !dbg !5906
  br label %land.end140

land.end140:                                      ; preds = %land.rhs137, %land.lhs.true, %if.end132
  %108 = phi i1 [ false, %land.lhs.true ], [ false, %if.end132 ], [ %lnot139, %land.rhs137 ], !dbg !5640
  %109 = load i8*, i8** %pad.addr, align 8, !dbg !5907, !tbaa !2474
  %frombool141 = zext i1 %108 to i8, !dbg !5908
  store i8 %frombool141, i8* %109, align 1, !dbg !5908, !tbaa !2493, !ctir !141
  %110 = load i64*, i64** %width.addr, align 8, !dbg !5909, !tbaa !2474
  %cmp142 = icmp ne i64* %110, null, !dbg !5911
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !5912

if.then144:                                       ; preds = %land.end140
  %111 = load i64, i64* %displayed_width, align 8, !dbg !5913, !tbaa !2611
  %112 = load i64*, i64** %width.addr, align 8, !dbg !5914, !tbaa !2474
  store i64 %111, i64* %112, align 8, !dbg !5915, !tbaa !2611, !ctir !149
  br label %if.end145, !dbg !5916

if.end145:                                        ; preds = %if.then144, %land.end140
  %113 = load i8*, i8** %buf, align 8, !dbg !5917, !tbaa !2474
  %114 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5918, !tbaa !2474
  store i8* %113, i8** %114, align 8, !dbg !5919, !tbaa !2474, !ctir !143
  %115 = load i64, i64* %len, align 8, !dbg !5920, !tbaa !2611
  ret i64 %115, !dbg !5921
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_color_indicator(%struct.bin_str* %ind) #0 !dbg !5922 !ctir !642 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8, !ctir !394
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5923, metadata !DIExpression()), !dbg !5924
  %0 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5925, !tbaa !2474
  %tobool = icmp ne %struct.bin_str* %0, null, !dbg !5925
  br i1 %tobool, label %if.then, label %if.end2, !dbg !5927

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !5928
  br i1 %call, label %if.then1, label %if.end, !dbg !5931

if.then1:                                         ; preds = %if.then
  call void @restore_default_color(), !dbg !5932
  br label %if.end, !dbg !5932

if.end:                                           ; preds = %if.then1, %if.then
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5933
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5934, !tbaa !2474
  call void @put_indicator(%struct.bin_str* %1), !dbg !5935
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5936
  br label %if.end2, !dbg !5937

if.end2:                                          ; preds = %if.end, %entry
  %2 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5938, !tbaa !2474
  %cmp = icmp ne %struct.bin_str* %2, null, !dbg !5939
  ret i1 %cmp, !dbg !5940
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @file_escape(i8* %str, i1 zeroext %path) #0 !dbg !5941 !ctir !644 {
entry:
  %str.addr = alloca i8*, align 8, !ctir !146
  %path.addr = alloca i8, align 1, !ctir !141
  %esc = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %str, i8** %str.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  %frombool = zext i1 %path to i8
  store i8 %frombool, i8* %path.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %path.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata i8** %esc, metadata !5946, metadata !DIExpression()), !dbg !5947
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5948, !tbaa !2474
  %call = call i64 @strlen(i8* %0) #16, !dbg !5949
  %add = add i64 %call, 1, !dbg !5950
  %call1 = call noalias i8* @xnmalloc(i64 3, i64 %add), !dbg !5951
  store i8* %call1, i8** %esc, align 8, !dbg !5947, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5952, metadata !DIExpression()), !dbg !5953
  %1 = load i8*, i8** %esc, align 8, !dbg !5954, !tbaa !2474
  store i8* %1, i8** %p, align 8, !dbg !5953, !tbaa !2474
  br label %while.cond, !dbg !5955

while.cond:                                       ; preds = %if.end15, %entry
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5956, !tbaa !2474
  %3 = load i8, i8* %2, align 1, !dbg !5957, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %3, 0, !dbg !5955
  br i1 %tobool, label %while.body, label %while.end, !dbg !5955

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %path.addr, align 1, !dbg !5958, !tbaa !2493
  %tobool2 = trunc i8 %4 to i1, !dbg !5958
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !5961

land.lhs.true:                                    ; preds = %while.body
  %5 = load i8*, i8** %str.addr, align 8, !dbg !5962, !tbaa !2474
  %6 = load i8, i8* %5, align 1, !dbg !5962, !tbaa !2529, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !5962
  %cmp = icmp eq i32 %conv, 47, !dbg !5962
  br i1 %cmp, label %if.then, label %if.else, !dbg !5963

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8*, i8** %p, align 8, !dbg !5964, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5964
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5964, !tbaa !2474
  store i8 47, i8* %7, align 1, !dbg !5966, !tbaa !2529, !ctir !144
  %8 = load i8*, i8** %str.addr, align 8, !dbg !5967, !tbaa !2474
  %incdec.ptr4 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5967
  store i8* %incdec.ptr4, i8** %str.addr, align 8, !dbg !5967, !tbaa !2474
  br label %if.end15, !dbg !5968

if.else:                                          ; preds = %land.lhs.true, %while.body
  %9 = load i8*, i8** %str.addr, align 8, !dbg !5969, !tbaa !2474
  %10 = load i8, i8* %9, align 1, !dbg !5971, !tbaa !2529, !ctir !147
  %call5 = call zeroext i8 @to_uchar(i8 signext %10), !dbg !5972
  %idxprom = zext i8 %call5 to i64, !dbg !5973
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !5973, !ctir !338
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5973, !tbaa !2529
  %tobool6 = icmp ne i8 %11, 0, !dbg !5973
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !5974

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !5975, !tbaa !2474
  %incdec.ptr8 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !5975
  store i8* %incdec.ptr8, i8** %str.addr, align 8, !dbg !5975, !tbaa !2474
  %13 = load i8, i8* %12, align 1, !dbg !5976, !tbaa !2529, !ctir !147
  %14 = load i8*, i8** %p, align 8, !dbg !5977, !tbaa !2474
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5977
  store i8* %incdec.ptr9, i8** %p, align 8, !dbg !5977, !tbaa !2474
  store i8 %13, i8* %14, align 1, !dbg !5978, !tbaa !2529, !ctir !144
  br label %if.end, !dbg !5979

if.else10:                                        ; preds = %if.else
  %15 = load i8*, i8** %p, align 8, !dbg !5980, !tbaa !2474
  %16 = load i8*, i8** %str.addr, align 8, !dbg !5981, !tbaa !2474
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5981
  store i8* %incdec.ptr11, i8** %str.addr, align 8, !dbg !5981, !tbaa !2474
  %17 = load i8, i8* %16, align 1, !dbg !5982, !tbaa !2529, !ctir !147
  %call12 = call zeroext i8 @to_uchar(i8 signext %17), !dbg !5983
  %conv13 = zext i8 %call12 to i32, !dbg !5983
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), i32 %conv13) #13, !dbg !5984
  %18 = load i8*, i8** %p, align 8, !dbg !5985, !tbaa !2474
  %idx.ext = sext i32 %call14 to i64, !dbg !5985
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !5985
  store i8* %add.ptr, i8** %p, align 8, !dbg !5985, !tbaa !2474
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !5955, !llvm.loop !5986

while.end:                                        ; preds = %while.cond
  %19 = load i8*, i8** %p, align 8, !dbg !5988, !tbaa !2474
  store i8 0, i8* %19, align 1, !dbg !5989, !tbaa !2529, !ctir !144
  %20 = load i8*, i8** %esc, align 8, !dbg !5990, !tbaa !2474
  ret i8* %20, !dbg !5991
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %ch) #0 !dbg !5992 !ctir !577 {
entry:
  %ch.addr = alloca i8, align 1, !ctir !144
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !5993, metadata !DIExpression()), !dbg !5994
  %0 = load i8, i8* %ch.addr, align 1, !dbg !5995, !tbaa !2529
  ret i8 %0, !dbg !5996
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #5

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_file_name_and_frills(%struct.fileinfo* %f, i64 %start_col) #0 !dbg !5997 !ctir !718 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %start_col.addr = alloca i64, align 8, !ctir !149
  %buf = alloca [652 x i8], align 16, !ctir !610
  %width = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !5998, metadata !DIExpression()), !dbg !5999
  store i64 %start_col, i64* %start_col.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @set_normal_color(), !dbg !6004
  %0 = load i8, i8* @print_inode, align 1, !dbg !6005, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6005
  br i1 %tobool, label %if.then, label %if.end, !dbg !6007

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !6008, !tbaa !2529
  %cmp = icmp eq i32 %1, 4, !dbg !6009
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6008

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6008

cond.false:                                       ; preds = %if.then
  %2 = load i32, i32* @inode_number_width, align 4, !dbg !6010, !tbaa !2468
  br label %cond.end, !dbg !6008

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %2, %cond.false ], !dbg !6008
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !6011
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6012, !tbaa !2474
  %call = call i8* @format_inode(i8* %arraydecay, i64 652, %struct.fileinfo* %3), !dbg !6013
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond, i8* %call), !dbg !6014
  br label %if.end, !dbg !6014

if.end:                                           ; preds = %cond.end, %entry
  %4 = load i8, i8* @print_block_size, align 1, !dbg !6015, !tbaa !2493
  %tobool2 = trunc i8 %4 to i1, !dbg !6015
  br i1 %tobool2, label %if.then3, label %if.end17, !dbg !6017

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* @format, align 4, !dbg !6018, !tbaa !2529
  %cmp4 = icmp eq i32 %5, 4, !dbg !6019
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !6018

cond.true5:                                       ; preds = %if.then3
  br label %cond.end7, !dbg !6018

cond.false6:                                      ; preds = %if.then3
  %6 = load i32, i32* @block_size_width, align 4, !dbg !6020, !tbaa !2468
  br label %cond.end7, !dbg !6018

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ %6, %cond.false6 ], !dbg !6018
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6021, !tbaa !2474
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 7, !dbg !6022, !ctir !183
  %8 = load i8, i8* %stat_ok, align 8, !dbg !6022, !tbaa !4046
  %tobool9 = trunc i8 %8 to i1, !dbg !6022, !ctir !141
  br i1 %tobool9, label %cond.false11, label %cond.true10, !dbg !6023

cond.true10:                                      ; preds = %cond.end7
  br label %cond.end14, !dbg !6023

cond.false11:                                     ; preds = %cond.end7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6024, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 3, !dbg !6024, !ctir !183
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 10, !dbg !6024, !ctir !190
  %10 = load i64, i64* %st_blocks, align 8, !dbg !6024, !tbaa !4247, !ctir !211
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !6025
  %11 = load i32, i32* @human_output_opts, align 4, !dbg !6026, !tbaa !2468
  %12 = load i64, i64* @output_block_size, align 8, !dbg !6027, !tbaa !2611
  %call13 = call i8* @human_readable(i64 %10, i8* %arraydecay12, i32 %11, i64 512, i64 %12), !dbg !6028
  br label %cond.end14, !dbg !6023

cond.end14:                                       ; preds = %cond.false11, %cond.true10
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true10 ], [ %call13, %cond.false11 ], !dbg !6023
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond8, i8* %cond15), !dbg !6029
  br label %if.end17, !dbg !6029

if.end17:                                         ; preds = %cond.end14, %if.end
  %13 = load i8, i8* @print_scontext, align 1, !dbg !6030, !tbaa !2493
  %tobool18 = trunc i8 %13 to i1, !dbg !6030
  br i1 %tobool18, label %if.then19, label %if.end26, !dbg !6032

if.then19:                                        ; preds = %if.end17
  %14 = load i32, i32* @format, align 4, !dbg !6033, !tbaa !2529
  %cmp20 = icmp eq i32 %14, 4, !dbg !6034
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !6033

cond.true21:                                      ; preds = %if.then19
  br label %cond.end23, !dbg !6033

cond.false22:                                     ; preds = %if.then19
  %15 = load i32, i32* @scontext_width, align 4, !dbg !6035, !tbaa !2468
  br label %cond.end23, !dbg !6033

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ %15, %cond.false22 ], !dbg !6033
  %16 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6036, !tbaa !2474
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %16, i32 0, i32 6, !dbg !6037, !ctir !183
  %17 = load i8*, i8** %scontext, align 8, !dbg !6037, !tbaa !4093, !ctir !143
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond24, i8* %17), !dbg !6038
  br label %if.end26, !dbg !6038

if.end26:                                         ; preds = %cond.end23, %if.end17
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6039, metadata !DIExpression()), !dbg !6040
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6041, !tbaa !2474
  %19 = load i64, i64* %start_col.addr, align 8, !dbg !6042, !tbaa !2611
  %call27 = call i64 @print_name_with_quoting(%struct.fileinfo* %18, i1 zeroext false, %struct.obstack* null, i64 %19), !dbg !6043
  store i64 %call27, i64* %width, align 8, !dbg !6040, !tbaa !2611
  %20 = load i32, i32* @indicator_style, align 4, !dbg !6044, !tbaa !2529
  %cmp28 = icmp ne i32 %20, 0, !dbg !6046
  br i1 %cmp28, label %if.then29, label %if.end34, !dbg !6047

if.then29:                                        ; preds = %if.end26
  %21 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6048, !tbaa !2474
  %stat_ok30 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %21, i32 0, i32 7, !dbg !6049, !ctir !183
  %22 = load i8, i8* %stat_ok30, align 8, !dbg !6049, !tbaa !4046
  %tobool31 = trunc i8 %22 to i1, !dbg !6049, !ctir !141
  %23 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6050, !tbaa !2474
  %stat32 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %23, i32 0, i32 3, !dbg !6051, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat32, i32 0, i32 3, !dbg !6052, !ctir !190
  %24 = load i32, i32* %st_mode, align 8, !dbg !6052, !tbaa !4005, !ctir !200
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6053, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 4, !dbg !6054, !ctir !183
  %26 = load i32, i32* %filetype, align 8, !dbg !6054, !tbaa !3838, !ctir !36
  %call33 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool31, i32 %24, i32 %26), !dbg !6055
  %conv = zext i1 %call33 to i64, !dbg !6055
  %27 = load i64, i64* %width, align 8, !dbg !6056, !tbaa !2611
  %add = add i64 %27, %conv, !dbg !6056
  store i64 %add, i64* %width, align 8, !dbg !6056, !tbaa !2611
  br label %if.end34, !dbg !6057

if.end34:                                         ; preds = %if.then29, %if.end26
  %28 = load i64, i64* %width, align 8, !dbg !6058, !tbaa !2611
  ret i64 %28, !dbg !6059
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_with_separator(i8 signext %sep) #0 !dbg !6060 !ctir !732 {
entry:
  %sep.addr = alloca i8, align 1, !ctir !144
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %len = alloca i64, align 8, !ctir !149
  %separator = alloca i8, align 1, !ctir !144
  store i8 %sep, i8* %sep.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6063, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6065, metadata !DIExpression()), !dbg !6066
  store i64 0, i64* %pos, align 8, !dbg !6066, !tbaa !2611
  store i64 0, i64* %filesno, align 8, !dbg !6067, !tbaa !2611
  br label %for.cond, !dbg !6069

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %filesno, align 8, !dbg !6070, !tbaa !2611
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !6072, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !6073
  br i1 %cmp, label %for.body, label %for.end, !dbg !6074

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6075, metadata !DIExpression()), !dbg !6077
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !6078, !tbaa !2474
  %3 = load i64, i64* %filesno, align 8, !dbg !6079, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !6078, !ctir !650
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !6078, !tbaa !2474
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !6078
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !6077, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6080, metadata !DIExpression()), !dbg !6081
  %6 = load i64, i64* @line_length, align 8, !dbg !6082, !tbaa !2611
  %tobool = icmp ne i64 %6, 0, !dbg !6082
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6082

cond.true:                                        ; preds = %for.body
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6083, !tbaa !2474
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %7), !dbg !6084
  br label %cond.end, !dbg !6082

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !6082

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !6082
  store i64 %cond, i64* %len, align 8, !dbg !6081, !tbaa !2611
  %8 = load i64, i64* %filesno, align 8, !dbg !6085, !tbaa !2611
  %cmp1 = icmp ne i64 %8, 0, !dbg !6087
  br i1 %cmp1, label %if.then, label %if.end12, !dbg !6088

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %separator, metadata !6089, metadata !DIExpression()), !dbg !6091
  %9 = load i64, i64* @line_length, align 8, !dbg !6092, !tbaa !2611
  %tobool2 = icmp ne i64 %9, 0, !dbg !6092
  br i1 %tobool2, label %lor.lhs.false, label %if.then7, !dbg !6094

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i64, i64* %pos, align 8, !dbg !6095, !tbaa !2611
  %11 = load i64, i64* %len, align 8, !dbg !6096, !tbaa !2611
  %add = add i64 %10, %11, !dbg !6097
  %add3 = add i64 %add, 2, !dbg !6098
  %12 = load i64, i64* @line_length, align 8, !dbg !6099, !tbaa !2611
  %cmp4 = icmp ult i64 %add3, %12, !dbg !6100
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !6101

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load i64, i64* %pos, align 8, !dbg !6102, !tbaa !2611
  %14 = load i64, i64* %len, align 8, !dbg !6103, !tbaa !2611
  %sub = sub i64 -1, %14, !dbg !6104
  %sub5 = sub i64 %sub, 2, !dbg !6105
  %cmp6 = icmp ule i64 %13, %sub5, !dbg !6106
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !6107

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %15 = load i64, i64* %pos, align 8, !dbg !6108, !tbaa !2611
  %add8 = add i64 %15, 2, !dbg !6108
  store i64 %add8, i64* %pos, align 8, !dbg !6108, !tbaa !2611
  store i8 32, i8* %separator, align 1, !dbg !6110, !tbaa !2529
  br label %if.end, !dbg !6111

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i64 0, i64* %pos, align 8, !dbg !6112, !tbaa !2611
  store i8 10, i8* %separator, align 1, !dbg !6114, !tbaa !2529
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %16 = load i8, i8* %sep.addr, align 1, !dbg !6115, !tbaa !2529
  %conv = sext i8 %16 to i32, !dbg !6115
  %call9 = call i32 @putchar_unlocked(i32 %conv), !dbg !6115
  %17 = load i8, i8* %separator, align 1, !dbg !6116, !tbaa !2529
  %conv10 = sext i8 %17 to i32, !dbg !6116
  %call11 = call i32 @putchar_unlocked(i32 %conv10), !dbg !6116
  br label %if.end12, !dbg !6117

if.end12:                                         ; preds = %if.end, %cond.end
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6118, !tbaa !2474
  %19 = load i64, i64* %pos, align 8, !dbg !6119, !tbaa !2611
  %call13 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !6120
  %20 = load i64, i64* %len, align 8, !dbg !6121, !tbaa !2611
  %21 = load i64, i64* %pos, align 8, !dbg !6122, !tbaa !2611
  %add14 = add i64 %21, %20, !dbg !6122
  store i64 %add14, i64* %pos, align 8, !dbg !6122, !tbaa !2611
  br label %for.inc, !dbg !6123

for.inc:                                          ; preds = %if.end12
  %22 = load i64, i64* %filesno, align 8, !dbg !6124, !tbaa !2611
  %inc = add i64 %22, 1, !dbg !6124
  store i64 %inc, i64* %filesno, align 8, !dbg !6124, !tbaa !2611
  br label %for.cond, !dbg !6125, !llvm.loop !6126

for.end:                                          ; preds = %for.cond
  %call15 = call i32 @putchar_unlocked(i32 10), !dbg !6128
  ret void, !dbg !6129
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_many_per_line() #0 !dbg !6130 !ctir !336 {
entry:
  %row = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !738
  %rows = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %row, metadata !6131, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6133, metadata !DIExpression()), !dbg !6134
  %call = call i64 @calculate_columns(i1 zeroext true), !dbg !6135
  store i64 %call, i64* %cols, align 8, !dbg !6134, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !6136, metadata !DIExpression()), !dbg !6137
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6138, !tbaa !2474
  %1 = load i64, i64* %cols, align 8, !dbg !6139, !tbaa !2611
  %sub = sub i64 %1, 1, !dbg !6140
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !6138, !ctir !745
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !6137, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %rows, metadata !6141, metadata !DIExpression()), !dbg !6142
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !6143, !tbaa !2611
  %3 = load i64, i64* %cols, align 8, !dbg !6144, !tbaa !2611
  %div = udiv i64 %2, %3, !dbg !6145
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !6146, !tbaa !2611
  %5 = load i64, i64* %cols, align 8, !dbg !6147, !tbaa !2611
  %rem = urem i64 %4, %5, !dbg !6148
  %cmp = icmp ne i64 %rem, 0, !dbg !6149
  %conv = zext i1 %cmp to i32, !dbg !6149
  %conv1 = sext i32 %conv to i64, !dbg !6150
  %add = add i64 %div, %conv1, !dbg !6151
  store i64 %add, i64* %rows, align 8, !dbg !6142, !tbaa !2611
  store i64 0, i64* %row, align 8, !dbg !6152, !tbaa !2611
  br label %for.cond, !dbg !6154

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i64, i64* %row, align 8, !dbg !6155, !tbaa !2611
  %7 = load i64, i64* %rows, align 8, !dbg !6157, !tbaa !2611
  %cmp2 = icmp ult i64 %6, %7, !dbg !6158
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6159

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !6160, metadata !DIExpression()), !dbg !6162
  store i64 0, i64* %col, align 8, !dbg !6162, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6163, metadata !DIExpression()), !dbg !6164
  %8 = load i64, i64* %row, align 8, !dbg !6165, !tbaa !2611
  store i64 %8, i64* %filesno, align 8, !dbg !6164, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6166, metadata !DIExpression()), !dbg !6167
  store i64 0, i64* %pos, align 8, !dbg !6167, !tbaa !2611
  br label %while.body, !dbg !6168

while.body:                                       ; preds = %for.body, %if.end
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6169, metadata !DIExpression()), !dbg !6171
  %9 = load i8**, i8*** @sorted_file, align 8, !dbg !6172, !tbaa !2474
  %10 = load i64, i64* %filesno, align 8, !dbg !6173, !tbaa !2611
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !6172, !ctir !650
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !6172, !tbaa !2474
  %12 = bitcast i8* %11 to %struct.fileinfo*, !dbg !6172
  store %struct.fileinfo* %12, %struct.fileinfo** %f, align 8, !dbg !6171, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6174, metadata !DIExpression()), !dbg !6175
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6176, !tbaa !2474
  %call5 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %13), !dbg !6177
  store i64 %call5, i64* %name_length, align 8, !dbg !6175, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !6178, metadata !DIExpression()), !dbg !6179
  %14 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6180, !tbaa !2474
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %14, i32 0, i32 2, !dbg !6181, !ctir !739
  %15 = load i64*, i64** %col_arr, align 8, !dbg !6181, !tbaa !6182, !ctir !148
  %16 = load i64, i64* %col, align 8, !dbg !6184, !tbaa !2611
  %inc = add i64 %16, 1, !dbg !6184
  store i64 %inc, i64* %col, align 8, !dbg !6184, !tbaa !2611
  %arrayidx6 = getelementptr inbounds i64, i64* %15, i64 %16, !dbg !6180, !ctir !148
  %17 = load i64, i64* %arrayidx6, align 8, !dbg !6180, !tbaa !2611
  store i64 %17, i64* %max_name_length, align 8, !dbg !6179, !tbaa !2611
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6185, !tbaa !2474
  %19 = load i64, i64* %pos, align 8, !dbg !6186, !tbaa !2611
  %call7 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !6187
  %20 = load i64, i64* %rows, align 8, !dbg !6188, !tbaa !2611
  %21 = load i64, i64* %filesno, align 8, !dbg !6189, !tbaa !2611
  %add8 = add i64 %21, %20, !dbg !6189
  store i64 %add8, i64* %filesno, align 8, !dbg !6189, !tbaa !2611
  %22 = load i64, i64* %filesno, align 8, !dbg !6190, !tbaa !2611
  %23 = load i64, i64* @cwd_n_used, align 8, !dbg !6192, !tbaa !2611
  %cmp9 = icmp uge i64 %22, %23, !dbg !6193
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6194

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !6195

if.end:                                           ; preds = %while.body
  %24 = load i64, i64* %pos, align 8, !dbg !6196, !tbaa !2611
  %25 = load i64, i64* %name_length, align 8, !dbg !6197, !tbaa !2611
  %add11 = add i64 %24, %25, !dbg !6198
  %26 = load i64, i64* %pos, align 8, !dbg !6199, !tbaa !2611
  %27 = load i64, i64* %max_name_length, align 8, !dbg !6200, !tbaa !2611
  %add12 = add i64 %26, %27, !dbg !6201
  call void @indent(i64 %add11, i64 %add12), !dbg !6202
  %28 = load i64, i64* %max_name_length, align 8, !dbg !6203, !tbaa !2611
  %29 = load i64, i64* %pos, align 8, !dbg !6204, !tbaa !2611
  %add13 = add i64 %29, %28, !dbg !6204
  store i64 %add13, i64* %pos, align 8, !dbg !6204, !tbaa !2611
  br label %while.body, !dbg !6168, !llvm.loop !6205

while.end:                                        ; preds = %if.then
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !6207
  br label %for.inc, !dbg !6208

for.inc:                                          ; preds = %while.end
  %30 = load i64, i64* %row, align 8, !dbg !6209, !tbaa !2611
  %inc15 = add i64 %30, 1, !dbg !6209
  store i64 %inc15, i64* %row, align 8, !dbg !6209, !tbaa !2611
  br label %for.cond, !dbg !6210, !llvm.loop !6211

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6213
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_horizontal() #0 !dbg !6214 !ctir !336 {
entry:
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !738
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6217, metadata !DIExpression()), !dbg !6218
  store i64 0, i64* %pos, align 8, !dbg !6218, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6219, metadata !DIExpression()), !dbg !6220
  %call = call i64 @calculate_columns(i1 zeroext false), !dbg !6221
  store i64 %call, i64* %cols, align 8, !dbg !6220, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !6222, metadata !DIExpression()), !dbg !6223
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6224, !tbaa !2474
  %1 = load i64, i64* %cols, align 8, !dbg !6225, !tbaa !2611
  %sub = sub i64 %1, 1, !dbg !6226
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !6224, !ctir !745
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !6223, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6227, metadata !DIExpression()), !dbg !6228
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !6229, !tbaa !2474
  %arrayidx1 = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !6229, !ctir !650
  %3 = load i8*, i8** %arrayidx1, align 8, !dbg !6229, !tbaa !2474
  %4 = bitcast i8* %3 to %struct.fileinfo*, !dbg !6229
  store %struct.fileinfo* %4, %struct.fileinfo** %f, align 8, !dbg !6228, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6230, metadata !DIExpression()), !dbg !6231
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6232, !tbaa !2474
  %call2 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %5), !dbg !6233
  store i64 %call2, i64* %name_length, align 8, !dbg !6231, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !6234, metadata !DIExpression()), !dbg !6235
  %6 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6236, !tbaa !2474
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %6, i32 0, i32 2, !dbg !6237, !ctir !739
  %7 = load i64*, i64** %col_arr, align 8, !dbg !6237, !tbaa !6182, !ctir !148
  %arrayidx3 = getelementptr inbounds i64, i64* %7, i64 0, !dbg !6236, !ctir !148
  %8 = load i64, i64* %arrayidx3, align 8, !dbg !6236, !tbaa !2611
  store i64 %8, i64* %max_name_length, align 8, !dbg !6235, !tbaa !2611
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6238, !tbaa !2474
  %call4 = call i64 @print_file_name_and_frills(%struct.fileinfo* %9, i64 0), !dbg !6239
  store i64 1, i64* %filesno, align 8, !dbg !6240, !tbaa !2611
  br label %for.cond, !dbg !6242

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i64, i64* %filesno, align 8, !dbg !6243, !tbaa !2611
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !6245, !tbaa !2611
  %cmp = icmp ult i64 %10, %11, !dbg !6246
  br i1 %cmp, label %for.body, label %for.end, !dbg !6247

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !6248, metadata !DIExpression()), !dbg !6250
  %12 = load i64, i64* %filesno, align 8, !dbg !6251, !tbaa !2611
  %13 = load i64, i64* %cols, align 8, !dbg !6252, !tbaa !2611
  %rem = urem i64 %12, %13, !dbg !6253
  store i64 %rem, i64* %col, align 8, !dbg !6250, !tbaa !2611
  %14 = load i64, i64* %col, align 8, !dbg !6254, !tbaa !2611
  %cmp5 = icmp eq i64 %14, 0, !dbg !6256
  br i1 %cmp5, label %if.then, label %if.else, !dbg !6257

if.then:                                          ; preds = %for.body
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6258
  store i64 0, i64* %pos, align 8, !dbg !6260, !tbaa !2611
  br label %if.end, !dbg !6261

if.else:                                          ; preds = %for.body
  %15 = load i64, i64* %pos, align 8, !dbg !6262, !tbaa !2611
  %16 = load i64, i64* %name_length, align 8, !dbg !6264, !tbaa !2611
  %add = add i64 %15, %16, !dbg !6265
  %17 = load i64, i64* %pos, align 8, !dbg !6266, !tbaa !2611
  %18 = load i64, i64* %max_name_length, align 8, !dbg !6267, !tbaa !2611
  %add7 = add i64 %17, %18, !dbg !6268
  call void @indent(i64 %add, i64 %add7), !dbg !6269
  %19 = load i64, i64* %max_name_length, align 8, !dbg !6270, !tbaa !2611
  %20 = load i64, i64* %pos, align 8, !dbg !6271, !tbaa !2611
  %add8 = add i64 %20, %19, !dbg !6271
  store i64 %add8, i64* %pos, align 8, !dbg !6271, !tbaa !2611
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load i8**, i8*** @sorted_file, align 8, !dbg !6272, !tbaa !2474
  %22 = load i64, i64* %filesno, align 8, !dbg !6273, !tbaa !2611
  %arrayidx9 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !6272, !ctir !650
  %23 = load i8*, i8** %arrayidx9, align 8, !dbg !6272, !tbaa !2474
  %24 = bitcast i8* %23 to %struct.fileinfo*, !dbg !6272
  store %struct.fileinfo* %24, %struct.fileinfo** %f, align 8, !dbg !6274, !tbaa !2474
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6275, !tbaa !2474
  %26 = load i64, i64* %pos, align 8, !dbg !6276, !tbaa !2611
  %call10 = call i64 @print_file_name_and_frills(%struct.fileinfo* %25, i64 %26), !dbg !6277
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6278, !tbaa !2474
  %call11 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %27), !dbg !6279
  store i64 %call11, i64* %name_length, align 8, !dbg !6280, !tbaa !2611
  %28 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6281, !tbaa !2474
  %col_arr12 = getelementptr inbounds %struct.column_info, %struct.column_info* %28, i32 0, i32 2, !dbg !6282, !ctir !739
  %29 = load i64*, i64** %col_arr12, align 8, !dbg !6282, !tbaa !6182, !ctir !148
  %30 = load i64, i64* %col, align 8, !dbg !6283, !tbaa !2611
  %arrayidx13 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !6281, !ctir !148
  %31 = load i64, i64* %arrayidx13, align 8, !dbg !6281, !tbaa !2611
  store i64 %31, i64* %max_name_length, align 8, !dbg !6284, !tbaa !2611
  br label %for.inc, !dbg !6285

for.inc:                                          ; preds = %if.end
  %32 = load i64, i64* %filesno, align 8, !dbg !6286, !tbaa !2611
  %inc = add i64 %32, 1, !dbg !6286
  store i64 %inc, i64* %filesno, align 8, !dbg !6286, !tbaa !2611
  br label %for.cond, !dbg !6287, !llvm.loop !6288

for.end:                                          ; preds = %for.cond
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !6290
  ret void, !dbg !6291
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_normal_color() #0 !dbg !6292 !ctir !336 {
entry:
  %0 = load i8, i8* @print_with_color, align 1, !dbg !6293, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6293
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6295

land.lhs.true:                                    ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !6296
  br i1 %call, label %if.then, label %if.end, !dbg !6297

if.then:                                          ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !6298
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 4)), !dbg !6300
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !6301
  br label %if.end, !dbg !6302

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6303
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_long_format(%struct.fileinfo* %f) #0 !dbg !6304 !ctir !750 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %modebuf = alloca [12 x i8], align 1, !ctir !752
  %buf = alloca [3643 x i8], align 16, !ctir !753
  %s = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %when_timespec = alloca %struct.dev_ino, align 8, !ctir !213
  %when_local = alloca %struct.tm, align 8, !ctir !769
  %tmp = alloca %struct.dev_ino, align 8, !ctir !213
  %tmp20 = alloca %struct.dev_ino, align 8, !ctir !213
  %tmp24 = alloca %struct.dev_ino, align 8, !ctir !213
  %hbuf = alloca [21 x i8], align 16, !ctir !656
  %hbuf38 = alloca [652 x i8], align 16, !ctir !610
  %blocks = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %hbuf51 = alloca [21 x i8], align 16, !ctir !656
  %majorbuf = alloca [21 x i8], align 16, !ctir !656
  %minorbuf = alloca [21 x i8], align 16, !ctir !656
  %blanks_width = alloca i32, align 4, !ctir !27
  %hbuf141 = alloca [652 x i8], align 16, !ctir !610
  %size = alloca i8*, align 8, !ctir !146
  %pad152 = alloca i32, align 4, !ctir !27
  %six_months_ago = alloca %struct.dev_ino, align 8, !ctir !213
  %recent = alloca i8, align 1, !ctir !141
  %hbuf203 = alloca [21 x i8], align 16, !ctir !656
  %w = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.declare(metadata [12 x i8]* %modebuf, metadata !6307, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.declare(metadata [3643 x i8]* %buf, metadata !6309, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.declare(metadata i64* %s, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6313, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %when_timespec, metadata !6315, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.declare(metadata %struct.tm* %when_local, metadata !6317, metadata !DIExpression()), !dbg !6318
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6319, !tbaa !2474
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 7, !dbg !6321, !ctir !183
  %1 = load i8, i8* %stat_ok, align 8, !dbg !6321, !tbaa !4046
  %tobool = trunc i8 %1 to i1, !dbg !6321, !ctir !141
  br i1 %tobool, label %if.then, label %if.else, !dbg !6322

if.then:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6323, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !6324, !ctir !183
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6325
  call void @filemodestring(%struct.stat* %stat, i8* %arraydecay), !dbg !6326
  br label %if.end, !dbg !6326

if.else:                                          ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6327, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 4, !dbg !6329, !ctir !183
  %4 = load i32, i32* %filetype, align 8, !dbg !6329, !tbaa !3838, !ctir !36
  %idxprom = zext i32 %4 to i64, !dbg !6330
  %arrayidx = getelementptr inbounds [11 x i8], [11 x i8]* @filetype_letter, i64 0, i64 %idxprom, !dbg !6330, !ctir !756
  %5 = load i8, i8* %arrayidx, align 1, !dbg !6330, !tbaa !2529
  %arrayidx1 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6331, !ctir !752
  store i8 %5, i8* %arrayidx1, align 1, !dbg !6332, !tbaa !2529
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6333
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 1, !dbg !6334
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 63, i64 10, i1 false), !dbg !6335
  %arrayidx3 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 11, !dbg !6336, !ctir !752
  store i8 0, i8* %arrayidx3, align 1, !dbg !6337, !tbaa !2529
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* @any_has_acl, align 1, !dbg !6338, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !6338
  br i1 %tobool4, label %if.else7, label %if.then5, !dbg !6340

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6341, !ctir !752
  store i8 0, i8* %arrayidx6, align 1, !dbg !6342, !tbaa !2529
  br label %if.end17, !dbg !6341

if.else7:                                         ; preds = %if.end
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6343, !tbaa !2474
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 9, !dbg !6345, !ctir !183
  %8 = load i32, i32* %acl_type, align 4, !dbg !6345, !tbaa !4146, !ctir !48
  %cmp = icmp eq i32 %8, 1, !dbg !6346
  br i1 %cmp, label %if.then8, label %if.else10, !dbg !6347

if.then8:                                         ; preds = %if.else7
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6348, !ctir !752
  store i8 46, i8* %arrayidx9, align 1, !dbg !6349, !tbaa !2529
  br label %if.end16, !dbg !6348

if.else10:                                        ; preds = %if.else7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6350, !tbaa !2474
  %acl_type11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 9, !dbg !6352, !ctir !183
  %10 = load i32, i32* %acl_type11, align 4, !dbg !6352, !tbaa !4146, !ctir !48
  %cmp12 = icmp eq i32 %10, 2, !dbg !6353
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6354

if.then13:                                        ; preds = %if.else10
  %arrayidx14 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6355, !ctir !752
  store i8 43, i8* %arrayidx14, align 1, !dbg !6356, !tbaa !2529
  br label %if.end15, !dbg !6355

if.end15:                                         ; preds = %if.then13, %if.else10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  %11 = load i32, i32* @time_type, align 4, !dbg !6357, !tbaa !2529
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb19
    i32 2, label %sw.bb23
  ], !dbg !6358

sw.bb:                                            ; preds = %if.end17
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6359, !tbaa !2474
  %stat18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 3, !dbg !6361, !ctir !183
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat18) #16, !dbg !6362
  %13 = bitcast %struct.dev_ino* %tmp to { i64, i64 }*, !dbg !6362
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !6362
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !6362
  store i64 %15, i64* %14, align 8, !dbg !6362
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !6362
  %17 = extractvalue { i64, i64 } %call, 1, !dbg !6362
  store i64 %17, i64* %16, align 8, !dbg !6362
  %18 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6362
  %19 = bitcast %struct.dev_ino* %tmp to i8*, !dbg !6362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !6362, !tbaa.struct !4772
  br label %sw.epilog, !dbg !6363

sw.bb19:                                          ; preds = %if.end17
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6364, !tbaa !2474
  %stat21 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 3, !dbg !6365, !ctir !183
  %call22 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat21) #16, !dbg !6366
  %21 = bitcast %struct.dev_ino* %tmp20 to { i64, i64 }*, !dbg !6366
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0, !dbg !6366
  %23 = extractvalue { i64, i64 } %call22, 0, !dbg !6366
  store i64 %23, i64* %22, align 8, !dbg !6366
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1, !dbg !6366
  %25 = extractvalue { i64, i64 } %call22, 1, !dbg !6366
  store i64 %25, i64* %24, align 8, !dbg !6366
  %26 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6366
  %27 = bitcast %struct.dev_ino* %tmp20 to i8*, !dbg !6366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false), !dbg !6366, !tbaa.struct !4772
  br label %sw.epilog, !dbg !6367

sw.bb23:                                          ; preds = %if.end17
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6368, !tbaa !2474
  %stat25 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 3, !dbg !6369, !ctir !183
  %call26 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat25) #16, !dbg !6370
  %29 = bitcast %struct.dev_ino* %tmp24 to { i64, i64 }*, !dbg !6370
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !6370
  %31 = extractvalue { i64, i64 } %call26, 0, !dbg !6370
  store i64 %31, i64* %30, align 8, !dbg !6370
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !6370
  %33 = extractvalue { i64, i64 } %call26, 1, !dbg !6370
  store i64 %33, i64* %32, align 8, !dbg !6370
  %34 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6370
  %35 = bitcast %struct.dev_ino* %tmp24 to i8*, !dbg !6370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !6370, !tbaa.struct !4772
  br label %sw.epilog, !dbg !6371

sw.default:                                       ; preds = %if.end17
  call void @abort() #15, !dbg !6372
  unreachable, !dbg !6372

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb19, %sw.bb
  %arraydecay27 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6373
  store i8* %arraydecay27, i8** %p, align 8, !dbg !6374, !tbaa !2474
  %36 = load i8, i8* @print_inode, align 1, !dbg !6375, !tbaa !2493
  %tobool28 = trunc i8 %36 to i1, !dbg !6375
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !6377

if.then29:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf, metadata !6378, metadata !DIExpression()), !dbg !6380
  %37 = load i8*, i8** %p, align 8, !dbg !6381, !tbaa !2474
  %38 = load i32, i32* @inode_number_width, align 4, !dbg !6382, !tbaa !2468
  %arraydecay30 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf, i64 0, i64 0, !dbg !6383
  %39 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6384, !tbaa !2474
  %call31 = call i8* @format_inode(i8* %arraydecay30, i64 21, %struct.fileinfo* %39), !dbg !6385
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %38, i8* %call31) #13, !dbg !6386
  %40 = load i8*, i8** %p, align 8, !dbg !6387, !tbaa !2474
  %call33 = call i64 @strlen(i8* %40) #16, !dbg !6388
  %41 = load i8*, i8** %p, align 8, !dbg !6389, !tbaa !2474
  %add.ptr34 = getelementptr inbounds i8, i8* %41, i64 %call33, !dbg !6389
  store i8* %add.ptr34, i8** %p, align 8, !dbg !6389, !tbaa !2474
  br label %if.end35, !dbg !6390

if.end35:                                         ; preds = %if.then29, %sw.epilog
  %42 = load i8, i8* @print_block_size, align 1, !dbg !6391, !tbaa !2493
  %tobool36 = trunc i8 %42 to i1, !dbg !6391
  br i1 %tobool36, label %if.then37, label %if.end50, !dbg !6393

if.then37:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf38, metadata !6394, metadata !DIExpression()), !dbg !6396
  call void @llvm.dbg.declare(metadata i8** %blocks, metadata !6397, metadata !DIExpression()), !dbg !6398
  %43 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6399, !tbaa !2474
  %stat_ok39 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %43, i32 0, i32 7, !dbg !6400, !ctir !183
  %44 = load i8, i8* %stat_ok39, align 8, !dbg !6400, !tbaa !4046
  %tobool40 = trunc i8 %44 to i1, !dbg !6400, !ctir !141
  br i1 %tobool40, label %cond.false, label %cond.true, !dbg !6401

cond.true:                                        ; preds = %if.then37
  br label %cond.end, !dbg !6401

cond.false:                                       ; preds = %if.then37
  %45 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6402, !tbaa !2474
  %stat41 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %45, i32 0, i32 3, !dbg !6402, !ctir !183
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat41, i32 0, i32 10, !dbg !6402, !ctir !190
  %46 = load i64, i64* %st_blocks, align 8, !dbg !6402, !tbaa !4247, !ctir !211
  %arraydecay42 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf38, i64 0, i64 0, !dbg !6403
  %47 = load i32, i32* @human_output_opts, align 4, !dbg !6404, !tbaa !2468
  %48 = load i64, i64* @output_block_size, align 8, !dbg !6405, !tbaa !2611
  %call43 = call i8* @human_readable(i64 %46, i8* %arraydecay42, i32 %47, i64 512, i64 %48), !dbg !6406
  br label %cond.end, !dbg !6401

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %call43, %cond.false ], !dbg !6401
  store i8* %cond, i8** %blocks, align 8, !dbg !6398, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6407, metadata !DIExpression()), !dbg !6408
  %49 = load i32, i32* @block_size_width, align 4, !dbg !6409, !tbaa !2468
  %50 = load i8*, i8** %blocks, align 8, !dbg !6411, !tbaa !2474
  %call44 = call i32 @gnu_mbswidth(i8* %50, i32 0), !dbg !6412
  %sub = sub nsw i32 %49, %call44, !dbg !6413
  store i32 %sub, i32* %pad, align 4, !dbg !6414, !tbaa !2468
  br label %for.cond, !dbg !6415

for.cond:                                         ; preds = %for.inc, %cond.end
  %51 = load i32, i32* %pad, align 4, !dbg !6416, !tbaa !2468
  %cmp45 = icmp slt i32 0, %51, !dbg !6418
  br i1 %cmp45, label %for.body, label %for.end, !dbg !6419

for.body:                                         ; preds = %for.cond
  %52 = load i8*, i8** %p, align 8, !dbg !6420, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %52, i32 1, !dbg !6420
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6420, !tbaa !2474
  store i8 32, i8* %52, align 1, !dbg !6421, !tbaa !2529, !ctir !144
  br label %for.inc, !dbg !6422

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %pad, align 4, !dbg !6423, !tbaa !2468
  %dec = add nsw i32 %53, -1, !dbg !6423
  store i32 %dec, i32* %pad, align 4, !dbg !6423, !tbaa !2468
  br label %for.cond, !dbg !6424, !llvm.loop !6425

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !6427

while.cond:                                       ; preds = %while.body, %for.end
  %54 = load i8*, i8** %blocks, align 8, !dbg !6428, !tbaa !2474
  %incdec.ptr46 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !6428
  store i8* %incdec.ptr46, i8** %blocks, align 8, !dbg !6428, !tbaa !2474
  %55 = load i8, i8* %54, align 1, !dbg !6429, !tbaa !2529, !ctir !147
  %56 = load i8*, i8** %p, align 8, !dbg !6430, !tbaa !2474
  %incdec.ptr47 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !6430
  store i8* %incdec.ptr47, i8** %p, align 8, !dbg !6430, !tbaa !2474
  store i8 %55, i8* %56, align 1, !dbg !6431, !tbaa !2529, !ctir !144
  %tobool48 = icmp ne i8 %55, 0, !dbg !6427
  br i1 %tobool48, label %while.body, label %while.end, !dbg !6427

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !6432, !llvm.loop !6433

while.end:                                        ; preds = %while.cond
  %57 = load i8*, i8** %p, align 8, !dbg !6434, !tbaa !2474
  %arrayidx49 = getelementptr inbounds i8, i8* %57, i64 -1, !dbg !6434, !ctir !143
  store i8 32, i8* %arrayidx49, align 1, !dbg !6435, !tbaa !2529
  br label %if.end50, !dbg !6436

if.end50:                                         ; preds = %while.end, %if.end35
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf51, metadata !6437, metadata !DIExpression()), !dbg !6439
  %58 = load i8*, i8** %p, align 8, !dbg !6440, !tbaa !2474
  %arraydecay52 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6441
  %59 = load i32, i32* @nlink_width, align 4, !dbg !6442, !tbaa !2468
  %60 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6443, !tbaa !2474
  %stat_ok53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %60, i32 0, i32 7, !dbg !6444, !ctir !183
  %61 = load i8, i8* %stat_ok53, align 8, !dbg !6444, !tbaa !4046
  %tobool54 = trunc i8 %61 to i1, !dbg !6444, !ctir !141
  br i1 %tobool54, label %cond.false56, label %cond.true55, !dbg !6445

cond.true55:                                      ; preds = %if.end50
  br label %cond.end60, !dbg !6445

cond.false56:                                     ; preds = %if.end50
  %62 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6446, !tbaa !2474
  %stat57 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %62, i32 0, i32 3, !dbg !6447, !ctir !183
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat57, i32 0, i32 2, !dbg !6448, !ctir !190
  %63 = load i64, i64* %st_nlink, align 8, !dbg !6448, !tbaa !4370, !ctir !198
  %arraydecay58 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf51, i64 0, i64 0, !dbg !6449
  %call59 = call i8* @umaxtostr(i64 %63, i8* %arraydecay58), !dbg !6450
  br label %cond.end60, !dbg !6445

cond.end60:                                       ; preds = %cond.false56, %cond.true55
  %cond61 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true55 ], [ %call59, %cond.false56 ], !dbg !6445
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.227, i64 0, i64 0), i8* %arraydecay52, i32 %59, i8* %cond61) #13, !dbg !6451
  %64 = load i8*, i8** %p, align 8, !dbg !6452, !tbaa !2474
  %call63 = call i64 @strlen(i8* %64) #16, !dbg !6453
  %65 = load i8*, i8** %p, align 8, !dbg !6454, !tbaa !2474
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %call63, !dbg !6454
  store i8* %add.ptr64, i8** %p, align 8, !dbg !6454, !tbaa !2474
  br label %do.body, !dbg !6455

do.body:                                          ; preds = %cond.end60
  %66 = load i8, i8* @dired, align 1, !dbg !6456, !tbaa !2493
  %tobool65 = trunc i8 %66 to i1, !dbg !6456
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !6459

if.then66:                                        ; preds = %do.body
  br label %do.body67, !dbg !6456

do.body67:                                        ; preds = %if.then66
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6460, !tbaa !2474
  %call68 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !6460
  %68 = load i64, i64* @dired_pos, align 8, !dbg !6460, !tbaa !2611
  %add = add i64 %68, 2, !dbg !6460
  store i64 %add, i64* @dired_pos, align 8, !dbg !6460, !tbaa !2611
  br label %do.end, !dbg !6460

do.end:                                           ; preds = %do.body67
  br label %if.end69, !dbg !6460

if.end69:                                         ; preds = %do.end, %do.body
  br label %do.end70, !dbg !6459

do.end70:                                         ; preds = %if.end69
  %69 = load i8, i8* @print_owner, align 1, !dbg !6462, !tbaa !2493
  %tobool71 = trunc i8 %69 to i1, !dbg !6462
  br i1 %tobool71, label %if.then77, label %lor.lhs.false, !dbg !6464

lor.lhs.false:                                    ; preds = %do.end70
  %70 = load i8, i8* @print_group, align 1, !dbg !6465, !tbaa !2493
  %tobool72 = trunc i8 %70 to i1, !dbg !6465
  br i1 %tobool72, label %if.then77, label %lor.lhs.false73, !dbg !6466

lor.lhs.false73:                                  ; preds = %lor.lhs.false
  %71 = load i8, i8* @print_author, align 1, !dbg !6467, !tbaa !2493
  %tobool74 = trunc i8 %71 to i1, !dbg !6467
  br i1 %tobool74, label %if.then77, label %lor.lhs.false75, !dbg !6468

lor.lhs.false75:                                  ; preds = %lor.lhs.false73
  %72 = load i8, i8* @print_scontext, align 1, !dbg !6469, !tbaa !2493
  %tobool76 = trunc i8 %72 to i1, !dbg !6469
  br i1 %tobool76, label %if.then77, label %if.end107, !dbg !6470

if.then77:                                        ; preds = %lor.lhs.false75, %lor.lhs.false73, %lor.lhs.false, %do.end70
  br label %do.body78, !dbg !6471

do.body78:                                        ; preds = %if.then77
  %arraydecay79 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6473
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6473, !tbaa !2474
  %call80 = call i32 @fputs_unlocked(i8* %arraydecay79, %struct._IO_FILE* %73), !dbg !6473
  %74 = load i8*, i8** %p, align 8, !dbg !6473, !tbaa !2474
  %arraydecay81 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6473
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i64, !dbg !6473
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay81 to i64, !dbg !6473
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6473
  %75 = load i64, i64* @dired_pos, align 8, !dbg !6473, !tbaa !2611
  %add82 = add i64 %75, %sub.ptr.sub, !dbg !6473
  store i64 %add82, i64* @dired_pos, align 8, !dbg !6473, !tbaa !2611
  br label %do.end83, !dbg !6473

do.end83:                                         ; preds = %do.body78
  %76 = load i8, i8* @print_owner, align 1, !dbg !6475, !tbaa !2493
  %tobool84 = trunc i8 %76 to i1, !dbg !6475
  br i1 %tobool84, label %if.then85, label %if.end89, !dbg !6477

if.then85:                                        ; preds = %do.end83
  %77 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6478, !tbaa !2474
  %stat86 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %77, i32 0, i32 3, !dbg !6479, !ctir !183
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat86, i32 0, i32 4, !dbg !6480, !ctir !190
  %78 = load i32, i32* %st_uid, align 4, !dbg !6480, !tbaa !4289, !ctir !202
  %79 = load i32, i32* @owner_width, align 4, !dbg !6481, !tbaa !2468
  %80 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6482, !tbaa !2474
  %stat_ok87 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %80, i32 0, i32 7, !dbg !6483, !ctir !183
  %81 = load i8, i8* %stat_ok87, align 8, !dbg !6483, !tbaa !4046
  %tobool88 = trunc i8 %81 to i1, !dbg !6483, !ctir !141
  call void @format_user(i32 %78, i32 %79, i1 zeroext %tobool88), !dbg !6484
  br label %if.end89, !dbg !6484

if.end89:                                         ; preds = %if.then85, %do.end83
  %82 = load i8, i8* @print_group, align 1, !dbg !6485, !tbaa !2493
  %tobool90 = trunc i8 %82 to i1, !dbg !6485
  br i1 %tobool90, label %if.then91, label %if.end95, !dbg !6487

if.then91:                                        ; preds = %if.end89
  %83 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6488, !tbaa !2474
  %stat92 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %83, i32 0, i32 3, !dbg !6489, !ctir !183
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat92, i32 0, i32 5, !dbg !6490, !ctir !190
  %84 = load i32, i32* %st_gid, align 8, !dbg !6490, !tbaa !4309, !ctir !204
  %85 = load i32, i32* @group_width, align 4, !dbg !6491, !tbaa !2468
  %86 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6492, !tbaa !2474
  %stat_ok93 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %86, i32 0, i32 7, !dbg !6493, !ctir !183
  %87 = load i8, i8* %stat_ok93, align 8, !dbg !6493, !tbaa !4046
  %tobool94 = trunc i8 %87 to i1, !dbg !6493, !ctir !141
  call void @format_group(i32 %84, i32 %85, i1 zeroext %tobool94), !dbg !6494
  br label %if.end95, !dbg !6494

if.end95:                                         ; preds = %if.then91, %if.end89
  %88 = load i8, i8* @print_author, align 1, !dbg !6495, !tbaa !2493
  %tobool96 = trunc i8 %88 to i1, !dbg !6495
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !6497

if.then97:                                        ; preds = %if.end95
  %89 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6498, !tbaa !2474
  %stat98 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %89, i32 0, i32 3, !dbg !6499, !ctir !183
  %st_uid99 = getelementptr inbounds %struct.stat, %struct.stat* %stat98, i32 0, i32 4, !dbg !6500, !ctir !190
  %90 = load i32, i32* %st_uid99, align 4, !dbg !6500, !tbaa !4289, !ctir !202
  %91 = load i32, i32* @author_width, align 4, !dbg !6501, !tbaa !2468
  %92 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6502, !tbaa !2474
  %stat_ok100 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %92, i32 0, i32 7, !dbg !6503, !ctir !183
  %93 = load i8, i8* %stat_ok100, align 8, !dbg !6503, !tbaa !4046
  %tobool101 = trunc i8 %93 to i1, !dbg !6503, !ctir !141
  call void @format_user(i32 %90, i32 %91, i1 zeroext %tobool101), !dbg !6504
  br label %if.end102, !dbg !6504

if.end102:                                        ; preds = %if.then97, %if.end95
  %94 = load i8, i8* @print_scontext, align 1, !dbg !6505, !tbaa !2493
  %tobool103 = trunc i8 %94 to i1, !dbg !6505
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !6507

if.then104:                                       ; preds = %if.end102
  %95 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6508, !tbaa !2474
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %95, i32 0, i32 6, !dbg !6509, !ctir !183
  %96 = load i8*, i8** %scontext, align 8, !dbg !6509, !tbaa !4093, !ctir !143
  %97 = load i32, i32* @scontext_width, align 4, !dbg !6510, !tbaa !2468
  call void @format_user_or_group(i8* %96, i64 0, i32 %97), !dbg !6511
  br label %if.end105, !dbg !6511

if.end105:                                        ; preds = %if.then104, %if.end102
  %arraydecay106 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6512
  store i8* %arraydecay106, i8** %p, align 8, !dbg !6513, !tbaa !2474
  br label %if.end107, !dbg !6514

if.end107:                                        ; preds = %if.end105, %lor.lhs.false75
  %98 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6515, !tbaa !2474
  %stat_ok108 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %98, i32 0, i32 7, !dbg !6517, !ctir !183
  %99 = load i8, i8* %stat_ok108, align 8, !dbg !6517, !tbaa !4046
  %tobool109 = trunc i8 %99 to i1, !dbg !6517, !ctir !141
  br i1 %tobool109, label %land.lhs.true, label %if.else140, !dbg !6518

land.lhs.true:                                    ; preds = %if.end107
  %100 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6519, !tbaa !2474
  %stat110 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %100, i32 0, i32 3, !dbg !6519, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat110, i32 0, i32 3, !dbg !6519, !ctir !190
  %101 = load i32, i32* %st_mode, align 8, !dbg !6519, !tbaa !4005, !ctir !200
  %and = and i32 %101, 61440, !dbg !6519
  %cmp111 = icmp eq i32 %and, 8192, !dbg !6519
  br i1 %cmp111, label %if.then117, label %lor.lhs.false112, !dbg !6520

lor.lhs.false112:                                 ; preds = %land.lhs.true
  %102 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6521, !tbaa !2474
  %stat113 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %102, i32 0, i32 3, !dbg !6521, !ctir !183
  %st_mode114 = getelementptr inbounds %struct.stat, %struct.stat* %stat113, i32 0, i32 3, !dbg !6521, !ctir !190
  %103 = load i32, i32* %st_mode114, align 8, !dbg !6521, !tbaa !4005, !ctir !200
  %and115 = and i32 %103, 61440, !dbg !6521
  %cmp116 = icmp eq i32 %and115, 24576, !dbg !6521
  br i1 %cmp116, label %if.then117, label %if.else140, !dbg !6522

if.then117:                                       ; preds = %lor.lhs.false112, %land.lhs.true
  call void @llvm.dbg.declare(metadata [21 x i8]* %majorbuf, metadata !6523, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.declare(metadata [21 x i8]* %minorbuf, metadata !6526, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.declare(metadata i32* %blanks_width, metadata !6528, metadata !DIExpression()), !dbg !6529
  %104 = load i32, i32* @file_size_width, align 4, !dbg !6530, !tbaa !2468
  %105 = load i32, i32* @major_device_number_width, align 4, !dbg !6531, !tbaa !2468
  %add118 = add nsw i32 %105, 2, !dbg !6532
  %106 = load i32, i32* @minor_device_number_width, align 4, !dbg !6533, !tbaa !2468
  %add119 = add nsw i32 %add118, %106, !dbg !6534
  %sub120 = sub nsw i32 %104, %add119, !dbg !6535
  store i32 %sub120, i32* %blanks_width, align 4, !dbg !6529, !tbaa !2468
  %107 = load i8*, i8** %p, align 8, !dbg !6536, !tbaa !2474
  %108 = load i32, i32* @major_device_number_width, align 4, !dbg !6537, !tbaa !2468
  %109 = load i32, i32* %blanks_width, align 4, !dbg !6538, !tbaa !2468
  %cmp121 = icmp sgt i32 0, %109, !dbg !6538
  br i1 %cmp121, label %cond.true122, label %cond.false123, !dbg !6538

cond.true122:                                     ; preds = %if.then117
  br label %cond.end124, !dbg !6538

cond.false123:                                    ; preds = %if.then117
  %110 = load i32, i32* %blanks_width, align 4, !dbg !6538, !tbaa !2468
  br label %cond.end124, !dbg !6538

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ 0, %cond.true122 ], [ %110, %cond.false123 ], !dbg !6538
  %add126 = add nsw i32 %108, %cond125, !dbg !6539
  %111 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6540, !tbaa !2474
  %stat127 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %111, i32 0, i32 3, !dbg !6540, !ctir !183
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat127, i32 0, i32 7, !dbg !6540, !ctir !190
  %112 = load i64, i64* %st_rdev, align 8, !dbg !6540, !tbaa !4393, !ctir !194
  %call128 = call i32 @gnu_dev_major(i64 %112) #17, !dbg !6540
  %conv = zext i32 %call128 to i64, !dbg !6540
  %arraydecay129 = getelementptr inbounds [21 x i8], [21 x i8]* %majorbuf, i64 0, i64 0, !dbg !6541
  %call130 = call i8* @umaxtostr(i64 %conv, i8* %arraydecay129), !dbg !6542
  %113 = load i32, i32* @minor_device_number_width, align 4, !dbg !6543, !tbaa !2468
  %114 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6544, !tbaa !2474
  %stat131 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %114, i32 0, i32 3, !dbg !6544, !ctir !183
  %st_rdev132 = getelementptr inbounds %struct.stat, %struct.stat* %stat131, i32 0, i32 7, !dbg !6544, !ctir !190
  %115 = load i64, i64* %st_rdev132, align 8, !dbg !6544, !tbaa !4393, !ctir !194
  %call133 = call i32 @gnu_dev_minor(i64 %115) #17, !dbg !6544
  %conv134 = zext i32 %call133 to i64, !dbg !6544
  %arraydecay135 = getelementptr inbounds [21 x i8], [21 x i8]* %minorbuf, i64 0, i64 0, !dbg !6545
  %call136 = call i8* @umaxtostr(i64 %conv134, i8* %arraydecay135), !dbg !6546
  %call137 = call i32 (i8*, i8*, ...) @sprintf(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i64 0, i64 0), i32 %add126, i8* %call130, i32 %113, i8* %call136) #13, !dbg !6547
  %116 = load i32, i32* @file_size_width, align 4, !dbg !6548, !tbaa !2468
  %add138 = add nsw i32 %116, 1, !dbg !6549
  %117 = load i8*, i8** %p, align 8, !dbg !6550, !tbaa !2474
  %idx.ext = sext i32 %add138 to i64, !dbg !6550
  %add.ptr139 = getelementptr inbounds i8, i8* %117, i64 %idx.ext, !dbg !6550
  store i8* %add.ptr139, i8** %p, align 8, !dbg !6550, !tbaa !2474
  br label %if.end170, !dbg !6551

if.else140:                                       ; preds = %lor.lhs.false112, %if.end107
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf141, metadata !6552, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.declare(metadata i8** %size, metadata !6555, metadata !DIExpression()), !dbg !6556
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6557, !tbaa !2474
  %stat_ok142 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 7, !dbg !6558, !ctir !183
  %119 = load i8, i8* %stat_ok142, align 8, !dbg !6558, !tbaa !4046
  %tobool143 = trunc i8 %119 to i1, !dbg !6558, !ctir !141
  br i1 %tobool143, label %cond.false145, label %cond.true144, !dbg !6559

cond.true144:                                     ; preds = %if.else140
  br label %cond.end150, !dbg !6559

cond.false145:                                    ; preds = %if.else140
  %120 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6560, !tbaa !2474
  %stat146 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %120, i32 0, i32 3, !dbg !6561, !ctir !183
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat146, i32 0, i32 8, !dbg !6562, !ctir !190
  %121 = load i64, i64* %st_size, align 8, !dbg !6562, !tbaa !4440, !ctir !180
  %call147 = call i64 @unsigned_file_size(i64 %121), !dbg !6563
  %arraydecay148 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf141, i64 0, i64 0, !dbg !6564
  %122 = load i32, i32* @file_human_output_opts, align 4, !dbg !6565, !tbaa !2468
  %123 = load i64, i64* @file_output_block_size, align 8, !dbg !6566, !tbaa !2611
  %call149 = call i8* @human_readable(i64 %call147, i8* %arraydecay148, i32 %122, i64 1, i64 %123), !dbg !6567
  br label %cond.end150, !dbg !6559

cond.end150:                                      ; preds = %cond.false145, %cond.true144
  %cond151 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true144 ], [ %call149, %cond.false145 ], !dbg !6559
  store i8* %cond151, i8** %size, align 8, !dbg !6556, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %pad152, metadata !6568, metadata !DIExpression()), !dbg !6569
  %124 = load i32, i32* @file_size_width, align 4, !dbg !6570, !tbaa !2468
  %125 = load i8*, i8** %size, align 8, !dbg !6572, !tbaa !2474
  %call153 = call i32 @gnu_mbswidth(i8* %125, i32 0), !dbg !6573
  %sub154 = sub nsw i32 %124, %call153, !dbg !6574
  store i32 %sub154, i32* %pad152, align 4, !dbg !6575, !tbaa !2468
  br label %for.cond155, !dbg !6576

for.cond155:                                      ; preds = %for.inc160, %cond.end150
  %126 = load i32, i32* %pad152, align 4, !dbg !6577, !tbaa !2468
  %cmp156 = icmp slt i32 0, %126, !dbg !6579
  br i1 %cmp156, label %for.body158, label %for.end162, !dbg !6580

for.body158:                                      ; preds = %for.cond155
  %127 = load i8*, i8** %p, align 8, !dbg !6581, !tbaa !2474
  %incdec.ptr159 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !6581
  store i8* %incdec.ptr159, i8** %p, align 8, !dbg !6581, !tbaa !2474
  store i8 32, i8* %127, align 1, !dbg !6582, !tbaa !2529, !ctir !144
  br label %for.inc160, !dbg !6583

for.inc160:                                       ; preds = %for.body158
  %128 = load i32, i32* %pad152, align 4, !dbg !6584, !tbaa !2468
  %dec161 = add nsw i32 %128, -1, !dbg !6584
  store i32 %dec161, i32* %pad152, align 4, !dbg !6584, !tbaa !2468
  br label %for.cond155, !dbg !6585, !llvm.loop !6586

for.end162:                                       ; preds = %for.cond155
  br label %while.cond163, !dbg !6588

while.cond163:                                    ; preds = %while.body167, %for.end162
  %129 = load i8*, i8** %size, align 8, !dbg !6589, !tbaa !2474
  %incdec.ptr164 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !6589
  store i8* %incdec.ptr164, i8** %size, align 8, !dbg !6589, !tbaa !2474
  %130 = load i8, i8* %129, align 1, !dbg !6590, !tbaa !2529, !ctir !147
  %131 = load i8*, i8** %p, align 8, !dbg !6591, !tbaa !2474
  %incdec.ptr165 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !6591
  store i8* %incdec.ptr165, i8** %p, align 8, !dbg !6591, !tbaa !2474
  store i8 %130, i8* %131, align 1, !dbg !6592, !tbaa !2529, !ctir !144
  %tobool166 = icmp ne i8 %130, 0, !dbg !6588
  br i1 %tobool166, label %while.body167, label %while.end168, !dbg !6588

while.body167:                                    ; preds = %while.cond163
  br label %while.cond163, !dbg !6593, !llvm.loop !6594

while.end168:                                     ; preds = %while.cond163
  %132 = load i8*, i8** %p, align 8, !dbg !6595, !tbaa !2474
  %arrayidx169 = getelementptr inbounds i8, i8* %132, i64 -1, !dbg !6595, !ctir !143
  store i8 32, i8* %arrayidx169, align 1, !dbg !6596, !tbaa !2529
  br label %if.end170

if.end170:                                        ; preds = %while.end168, %cond.end124
  store i64 0, i64* %s, align 8, !dbg !6597, !tbaa !2611
  %133 = load i8*, i8** %p, align 8, !dbg !6598, !tbaa !2474
  store i8 1, i8* %133, align 1, !dbg !6599, !tbaa !2529, !ctir !144
  %134 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6600, !tbaa !2474
  %stat_ok171 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %134, i32 0, i32 7, !dbg !6602, !ctir !183
  %135 = load i8, i8* %stat_ok171, align 8, !dbg !6602, !tbaa !4046
  %tobool172 = trunc i8 %135 to i1, !dbg !6602, !ctir !141
  br i1 %tobool172, label %land.lhs.true174, label %if.end195, !dbg !6603

land.lhs.true174:                                 ; preds = %if.end170
  %136 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6604, !tbaa !2474
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6605, !ctir !213
  %call175 = call %struct.tm* @localtime_rz(%struct.tm_zone* %136, i64* %tv_sec, %struct.tm* %when_local), !dbg !6606
  %tobool176 = icmp ne %struct.tm* %call175, null, !dbg !6606
  br i1 %tobool176, label %if.then177, label %if.end195, !dbg !6607

if.then177:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %six_months_ago, metadata !6608, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.declare(metadata i8* %recent, metadata !6611, metadata !DIExpression()), !dbg !6612
  %137 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6613
  %138 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6613
  %139 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6613
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 0, !dbg !6613
  %141 = load i64, i64* %140, align 8, !dbg !6613
  %142 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 1, !dbg !6613
  %143 = load i64, i64* %142, align 8, !dbg !6613
  %call178 = call i32 @timespec_cmp(i64 %137, i64 %138, i64 %141, i64 %143) #16, !dbg !6613
  %cmp179 = icmp slt i32 %call178, 0, !dbg !6615
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !6616

if.then181:                                       ; preds = %if.then177
  call void @gettime(%struct.dev_ino* @current_time), !dbg !6617
  br label %if.end182, !dbg !6617

if.end182:                                        ; preds = %if.then181, %if.then177
  %144 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !6618, !tbaa !2497, !ctir !164
  %sub183 = sub nsw i64 %144, 15778476, !dbg !6619
  %tv_sec184 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 0, !dbg !6620, !ctir !213
  store i64 %sub183, i64* %tv_sec184, align 8, !dbg !6621, !tbaa !2497, !ctir !164
  %145 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !6622, !tbaa !2501, !ctir !217
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 1, !dbg !6623, !ctir !213
  store i64 %145, i64* %tv_nsec, align 8, !dbg !6624, !tbaa !2501, !ctir !217
  %146 = bitcast %struct.dev_ino* %six_months_ago to { i64, i64 }*, !dbg !6625
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 0, !dbg !6625
  %148 = load i64, i64* %147, align 8, !dbg !6625
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 1, !dbg !6625
  %150 = load i64, i64* %149, align 8, !dbg !6625
  %151 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6625
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 0, !dbg !6625
  %153 = load i64, i64* %152, align 8, !dbg !6625
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 1, !dbg !6625
  %155 = load i64, i64* %154, align 8, !dbg !6625
  %call185 = call i32 @timespec_cmp(i64 %148, i64 %150, i64 %153, i64 %155) #16, !dbg !6625
  %cmp186 = icmp slt i32 %call185, 0, !dbg !6626
  br i1 %cmp186, label %land.rhs, label %land.end, !dbg !6627

land.rhs:                                         ; preds = %if.end182
  %156 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6628
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 0, !dbg !6628
  %158 = load i64, i64* %157, align 8, !dbg !6628
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 1, !dbg !6628
  %160 = load i64, i64* %159, align 8, !dbg !6628
  %161 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6628
  %162 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6628
  %call188 = call i32 @timespec_cmp(i64 %158, i64 %160, i64 %161, i64 %162) #16, !dbg !6628
  %cmp189 = icmp slt i32 %call188, 0, !dbg !6629
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end182
  %163 = phi i1 [ false, %if.end182 ], [ %cmp189, %land.rhs ], !dbg !6630
  %frombool = zext i1 %163 to i8, !dbg !6631
  store i8 %frombool, i8* %recent, align 1, !dbg !6631, !tbaa !2493
  %164 = load i8*, i8** %p, align 8, !dbg !6632, !tbaa !2474
  %165 = load i8, i8* %recent, align 1, !dbg !6633, !tbaa !2493
  %tobool191 = trunc i8 %165 to i1, !dbg !6633
  %166 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6634, !tbaa !2474
  %tv_nsec192 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 1, !dbg !6635, !ctir !213
  %167 = load i64, i64* %tv_nsec192, align 8, !dbg !6635, !tbaa !2501, !ctir !217
  %conv193 = trunc i64 %167 to i32, !dbg !6636
  %call194 = call i64 @align_nstrftime(i8* %164, i64 1001, i1 zeroext %tobool191, %struct.tm* %when_local, %struct.tm_zone* %166, i32 %conv193), !dbg !6637
  store i64 %call194, i64* %s, align 8, !dbg !6638, !tbaa !2611
  br label %if.end195, !dbg !6639

if.end195:                                        ; preds = %land.end, %land.lhs.true174, %if.end170
  %168 = load i64, i64* %s, align 8, !dbg !6640, !tbaa !2611
  %tobool196 = icmp ne i64 %168, 0, !dbg !6640
  br i1 %tobool196, label %if.then199, label %lor.lhs.false197, !dbg !6642

lor.lhs.false197:                                 ; preds = %if.end195
  %169 = load i8*, i8** %p, align 8, !dbg !6643, !tbaa !2474
  %170 = load i8, i8* %169, align 1, !dbg !6644, !tbaa !2529, !ctir !144
  %tobool198 = icmp ne i8 %170, 0, !dbg !6644
  br i1 %tobool198, label %if.else202, label %if.then199, !dbg !6645

if.then199:                                       ; preds = %lor.lhs.false197, %if.end195
  %171 = load i64, i64* %s, align 8, !dbg !6646, !tbaa !2611
  %172 = load i8*, i8** %p, align 8, !dbg !6648, !tbaa !2474
  %add.ptr200 = getelementptr inbounds i8, i8* %172, i64 %171, !dbg !6648
  store i8* %add.ptr200, i8** %p, align 8, !dbg !6648, !tbaa !2474
  %173 = load i8*, i8** %p, align 8, !dbg !6649, !tbaa !2474
  %incdec.ptr201 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !6649
  store i8* %incdec.ptr201, i8** %p, align 8, !dbg !6649, !tbaa !2474
  store i8 32, i8* %173, align 1, !dbg !6650, !tbaa !2529, !ctir !144
  %174 = load i8*, i8** %p, align 8, !dbg !6651, !tbaa !2474
  store i8 0, i8* %174, align 1, !dbg !6652, !tbaa !2529, !ctir !144
  br label %if.end217, !dbg !6653

if.else202:                                       ; preds = %lor.lhs.false197
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf203, metadata !6654, metadata !DIExpression()), !dbg !6656
  %175 = load i8*, i8** %p, align 8, !dbg !6657, !tbaa !2474
  %call204 = call i32 @long_time_expected_width(), !dbg !6658
  %176 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6659, !tbaa !2474
  %stat_ok205 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %176, i32 0, i32 7, !dbg !6660, !ctir !183
  %177 = load i8, i8* %stat_ok205, align 8, !dbg !6660, !tbaa !4046
  %tobool206 = trunc i8 %177 to i1, !dbg !6660, !ctir !141
  br i1 %tobool206, label %cond.false208, label %cond.true207, !dbg !6661

cond.true207:                                     ; preds = %if.else202
  br label %cond.end212, !dbg !6661

cond.false208:                                    ; preds = %if.else202
  %tv_sec209 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6662, !ctir !213
  %178 = load i64, i64* %tv_sec209, align 8, !dbg !6662, !tbaa !2497, !ctir !164
  %arraydecay210 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf203, i64 0, i64 0, !dbg !6663
  %call211 = call i8* @timetostr(i64 %178, i8* %arraydecay210), !dbg !6664
  br label %cond.end212, !dbg !6661

cond.end212:                                      ; preds = %cond.false208, %cond.true207
  %cond213 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true207 ], [ %call211, %cond.false208 ], !dbg !6661
  %call214 = call i32 (i8*, i8*, ...) @sprintf(i8* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %call204, i8* %cond213) #13, !dbg !6665
  %179 = load i8*, i8** %p, align 8, !dbg !6666, !tbaa !2474
  %call215 = call i64 @strlen(i8* %179) #16, !dbg !6667
  %180 = load i8*, i8** %p, align 8, !dbg !6668, !tbaa !2474
  %add.ptr216 = getelementptr inbounds i8, i8* %180, i64 %call215, !dbg !6668
  store i8* %add.ptr216, i8** %p, align 8, !dbg !6668, !tbaa !2474
  br label %if.end217

if.end217:                                        ; preds = %cond.end212, %if.then199
  br label %do.body218, !dbg !6669

do.body218:                                       ; preds = %if.end217
  %arraydecay219 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6670
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6670, !tbaa !2474
  %call220 = call i32 @fputs_unlocked(i8* %arraydecay219, %struct._IO_FILE* %181), !dbg !6670
  %182 = load i8*, i8** %p, align 8, !dbg !6670, !tbaa !2474
  %arraydecay221 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6670
  %sub.ptr.lhs.cast222 = ptrtoint i8* %182 to i64, !dbg !6670
  %sub.ptr.rhs.cast223 = ptrtoint i8* %arraydecay221 to i64, !dbg !6670
  %sub.ptr.sub224 = sub i64 %sub.ptr.lhs.cast222, %sub.ptr.rhs.cast223, !dbg !6670
  %183 = load i64, i64* @dired_pos, align 8, !dbg !6670, !tbaa !2611
  %add225 = add i64 %183, %sub.ptr.sub224, !dbg !6670
  store i64 %add225, i64* @dired_pos, align 8, !dbg !6670, !tbaa !2611
  br label %do.end226, !dbg !6670

do.end226:                                        ; preds = %do.body218
  call void @llvm.dbg.declare(metadata i64* %w, metadata !6672, metadata !DIExpression()), !dbg !6673
  %184 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6674, !tbaa !2474
  %185 = load i8*, i8** %p, align 8, !dbg !6675, !tbaa !2474
  %arraydecay227 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6676
  %sub.ptr.lhs.cast228 = ptrtoint i8* %185 to i64, !dbg !6677
  %sub.ptr.rhs.cast229 = ptrtoint i8* %arraydecay227 to i64, !dbg !6677
  %sub.ptr.sub230 = sub i64 %sub.ptr.lhs.cast228, %sub.ptr.rhs.cast229, !dbg !6677
  %call231 = call i64 @print_name_with_quoting(%struct.fileinfo* %184, i1 zeroext false, %struct.obstack* @dired_obstack, i64 %sub.ptr.sub230), !dbg !6678
  store i64 %call231, i64* %w, align 8, !dbg !6673, !tbaa !2611
  %186 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6679, !tbaa !2474
  %filetype232 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %186, i32 0, i32 4, !dbg !6681, !ctir !183
  %187 = load i32, i32* %filetype232, align 8, !dbg !6681, !tbaa !3838, !ctir !36
  %cmp233 = icmp eq i32 %187, 6, !dbg !6682
  br i1 %cmp233, label %if.then235, label %if.else255, !dbg !6683

if.then235:                                       ; preds = %do.end226
  %188 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6684, !tbaa !2474
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %188, i32 0, i32 1, !dbg !6687, !ctir !183
  %189 = load i8*, i8** %linkname, align 8, !dbg !6687, !tbaa !4178, !ctir !143
  %tobool236 = icmp ne i8* %189, null, !dbg !6684
  br i1 %tobool236, label %if.then237, label %if.end254, !dbg !6688

if.then237:                                       ; preds = %if.then235
  br label %do.body238, !dbg !6689

do.body238:                                       ; preds = %if.then237
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6691, !tbaa !2474
  %call239 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i64 0, i64 0), %struct._IO_FILE* %190), !dbg !6691
  %191 = load i64, i64* @dired_pos, align 8, !dbg !6691, !tbaa !2611
  %add240 = add i64 %191, 4, !dbg !6691
  store i64 %add240, i64* @dired_pos, align 8, !dbg !6691, !tbaa !2611
  br label %do.end241, !dbg !6691

do.end241:                                        ; preds = %do.body238
  %192 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6693, !tbaa !2474
  %193 = load i8*, i8** %p, align 8, !dbg !6694, !tbaa !2474
  %arraydecay242 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6695
  %sub.ptr.lhs.cast243 = ptrtoint i8* %193 to i64, !dbg !6696
  %sub.ptr.rhs.cast244 = ptrtoint i8* %arraydecay242 to i64, !dbg !6696
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !6696
  %194 = load i64, i64* %w, align 8, !dbg !6697, !tbaa !2611
  %add246 = add i64 %sub.ptr.sub245, %194, !dbg !6698
  %add247 = add i64 %add246, 4, !dbg !6699
  %call248 = call i64 @print_name_with_quoting(%struct.fileinfo* %192, i1 zeroext true, %struct.obstack* null, i64 %add247), !dbg !6700
  %195 = load i32, i32* @indicator_style, align 4, !dbg !6701, !tbaa !2529
  %cmp249 = icmp ne i32 %195, 0, !dbg !6703
  br i1 %cmp249, label %if.then251, label %if.end253, !dbg !6704

if.then251:                                       ; preds = %do.end241
  %196 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6705, !tbaa !2474
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %196, i32 0, i32 5, !dbg !6706, !ctir !183
  %197 = load i32, i32* %linkmode, align 4, !dbg !6706, !tbaa !4216, !ctir !226
  %call252 = call zeroext i1 @print_type_indicator(i1 zeroext true, i32 %197, i32 0), !dbg !6707
  br label %if.end253, !dbg !6707

if.end253:                                        ; preds = %if.then251, %do.end241
  br label %if.end254, !dbg !6708

if.end254:                                        ; preds = %if.end253, %if.then235
  br label %if.end266, !dbg !6709

if.else255:                                       ; preds = %do.end226
  %198 = load i32, i32* @indicator_style, align 4, !dbg !6710, !tbaa !2529
  %cmp256 = icmp ne i32 %198, 0, !dbg !6712
  br i1 %cmp256, label %if.then258, label %if.end265, !dbg !6713

if.then258:                                       ; preds = %if.else255
  %199 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6714, !tbaa !2474
  %stat_ok259 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %199, i32 0, i32 7, !dbg !6715, !ctir !183
  %200 = load i8, i8* %stat_ok259, align 8, !dbg !6715, !tbaa !4046
  %tobool260 = trunc i8 %200 to i1, !dbg !6715, !ctir !141
  %201 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6716, !tbaa !2474
  %stat261 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %201, i32 0, i32 3, !dbg !6717, !ctir !183
  %st_mode262 = getelementptr inbounds %struct.stat, %struct.stat* %stat261, i32 0, i32 3, !dbg !6718, !ctir !190
  %202 = load i32, i32* %st_mode262, align 8, !dbg !6718, !tbaa !4005, !ctir !200
  %203 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6719, !tbaa !2474
  %filetype263 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %203, i32 0, i32 4, !dbg !6720, !ctir !183
  %204 = load i32, i32* %filetype263, align 8, !dbg !6720, !tbaa !3838, !ctir !36
  %call264 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool260, i32 %202, i32 %204), !dbg !6721
  br label %if.end265, !dbg !6721

if.end265:                                        ; preds = %if.then258, %if.else255
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end254
  ret void, !dbg !6722
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @format_inode(i8* %buf, i64 %buflen, %struct.fileinfo* %f) #0 !dbg !6723 !ctir !720 {
entry:
  %buf.addr = alloca i8*, align 8, !ctir !143
  %buflen.addr = alloca i64, align 8, !ctir !149
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6724, metadata !DIExpression()), !dbg !6725
  store i64 %buflen, i64* %buflen.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %buflen.addr, metadata !6726, metadata !DIExpression()), !dbg !6727
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  %0 = load i64, i64* %buflen.addr, align 8, !dbg !6730, !tbaa !2611
  %cmp = icmp ule i64 21, %0, !dbg !6730
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6730

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6730

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 4012, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.format_inode, i64 0, i64 0)) #15, !dbg !6730
  unreachable, !dbg !6730

1:                                                ; No predecessors!
  br label %cond.end, !dbg !6730

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6731, !tbaa !2474
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 7, !dbg !6732, !ctir !183
  %3 = load i8, i8* %stat_ok, align 8, !dbg !6732, !tbaa !4046
  %tobool = trunc i8 %3 to i1, !dbg !6732, !ctir !141
  br i1 %tobool, label %land.lhs.true, label %cond.false5, !dbg !6733

land.lhs.true:                                    ; preds = %cond.end
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6734, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !6735, !ctir !183
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !6736, !ctir !190
  %5 = load i64, i64* %st_ino, align 8, !dbg !6736, !tbaa !3831, !ctir !196
  %cmp1 = icmp ne i64 %5, 0, !dbg !6737
  br i1 %cmp1, label %cond.true2, label %cond.false5, !dbg !6731

cond.true2:                                       ; preds = %land.lhs.true
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6738, !tbaa !2474
  %stat3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !6739, !ctir !183
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %stat3, i32 0, i32 1, !dbg !6740, !ctir !190
  %7 = load i64, i64* %st_ino4, align 8, !dbg !6740, !tbaa !3831, !ctir !196
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !6741, !tbaa !2474
  %call = call i8* @umaxtostr(i64 %7, i8* %8), !dbg !6742
  br label %cond.end6, !dbg !6731

cond.false5:                                      ; preds = %land.lhs.true, %cond.end
  br label %cond.end6, !dbg !6731

cond.end6:                                        ; preds = %cond.false5, %cond.true2
  %cond = phi i8* [ %call, %cond.true2 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.false5 ], !dbg !6731
  ret i8* %cond, !dbg !6743
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user(i32 %u, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6744 !ctir !759 {
entry:
  %u.addr = alloca i32, align 4, !ctir !675
  %width.addr = alloca i32, align 4, !ctir !27
  %stat_ok.addr = alloca i8, align 1, !ctir !141
  store i32 %u, i32* %u.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !6745, metadata !DIExpression()), !dbg !6746
  store i32 %width, i32* %width.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6747, metadata !DIExpression()), !dbg !6748
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6751, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6751
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6752

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6752

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6753, !tbaa !2493
  %tobool1 = trunc i8 %1 to i1, !dbg !6753
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6753

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6753

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %u.addr, align 4, !dbg !6754, !tbaa !2468
  %call = call i8* @getuser(i32 %2), !dbg !6755
  br label %cond.end, !dbg !6753

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6753
  br label %cond.end4, !dbg !6752

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6752
  %3 = load i32, i32* %u.addr, align 4, !dbg !6756, !tbaa !2468
  %conv = zext i32 %3 to i64, !dbg !6756
  %4 = load i32, i32* %width.addr, align 4, !dbg !6757, !tbaa !2468
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6758
  ret void, !dbg !6759
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_group(i32 %g, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6760 !ctir !761 {
entry:
  %g.addr = alloca i32, align 4, !ctir !680
  %width.addr = alloca i32, align 4, !ctir !27
  %stat_ok.addr = alloca i8, align 1, !ctir !141
  store i32 %g, i32* %g.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !6761, metadata !DIExpression()), !dbg !6762
  store i32 %width, i32* %width.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6763, metadata !DIExpression()), !dbg !6764
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6767, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6767
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6768

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6768

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6769, !tbaa !2493
  %tobool1 = trunc i8 %1 to i1, !dbg !6769
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6769

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6769

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %g.addr, align 4, !dbg !6770, !tbaa !2468
  %call = call i8* @getgroup(i32 %2), !dbg !6771
  br label %cond.end, !dbg !6769

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6769
  br label %cond.end4, !dbg !6768

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6768
  %3 = load i32, i32* %g.addr, align 4, !dbg !6772, !tbaa !2468
  %conv = zext i32 %3 to i64, !dbg !6772
  %4 = load i32, i32* %width.addr, align 4, !dbg !6773, !tbaa !2468
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6774
  ret void, !dbg !6775
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user_or_group(i8* %name, i64 %id, i32 %width) #0 !dbg !6776 !ctir !763 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %id.addr = alloca i64, align 8, !ctir !151
  %width.addr = alloca i32, align 4, !ctir !27
  %len = alloca i64, align 8, !ctir !149
  %width_gap = alloca i32, align 4, !ctir !27
  %pad = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i64 %id, i64* %id.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  store i32 %width, i32* %width.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6785, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !6785
  br i1 %tobool, label %if.then, label %if.else, !dbg !6787

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %width_gap, metadata !6788, metadata !DIExpression()), !dbg !6790
  %1 = load i32, i32* %width.addr, align 4, !dbg !6791, !tbaa !2468
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6792, !tbaa !2474
  %call = call i32 @gnu_mbswidth(i8* %2, i32 0), !dbg !6793
  %sub = sub nsw i32 %1, %call, !dbg !6794
  store i32 %sub, i32* %width_gap, align 4, !dbg !6790, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6795, metadata !DIExpression()), !dbg !6796
  %3 = load i32, i32* %width_gap, align 4, !dbg !6797, !tbaa !2468
  %cmp = icmp sgt i32 0, %3, !dbg !6797
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6797

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6797

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* %width_gap, align 4, !dbg !6797, !tbaa !2468
  br label %cond.end, !dbg !6797

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !6797
  store i32 %cond, i32* %pad, align 4, !dbg !6796, !tbaa !2468
  %5 = load i8*, i8** %name.addr, align 8, !dbg !6798, !tbaa !2474
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6798, !tbaa !2474
  %call1 = call i32 @fputs_unlocked(i8* %5, %struct._IO_FILE* %6), !dbg !6798
  %7 = load i8*, i8** %name.addr, align 8, !dbg !6799, !tbaa !2474
  %call2 = call i64 @strlen(i8* %7) #16, !dbg !6800
  %8 = load i32, i32* %pad, align 4, !dbg !6801, !tbaa !2468
  %conv = sext i32 %8 to i64, !dbg !6801
  %add = add i64 %call2, %conv, !dbg !6802
  store i64 %add, i64* %len, align 8, !dbg !6803, !tbaa !2611
  br label %do.body, !dbg !6804

do.body:                                          ; preds = %do.cond, %cond.end
  %call3 = call i32 @putchar_unlocked(i32 32), !dbg !6805
  br label %do.cond, !dbg !6805

do.cond:                                          ; preds = %do.body
  %9 = load i32, i32* %pad, align 4, !dbg !6806, !tbaa !2468
  %dec = add nsw i32 %9, -1, !dbg !6806
  store i32 %dec, i32* %pad, align 4, !dbg !6806, !tbaa !2468
  %tobool4 = icmp ne i32 %9, 0, !dbg !6805
  br i1 %tobool4, label %do.body, label %do.end, !dbg !6805, !llvm.loop !6807

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !6809

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %width.addr, align 4, !dbg !6810, !tbaa !2468
  %11 = load i64, i64* %id.addr, align 8, !dbg !6812, !tbaa !2611
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i64 0, i64 0), i32 %10, i64 %11), !dbg !6813
  %12 = load i32, i32* %width.addr, align 4, !dbg !6814, !tbaa !2468
  %conv6 = sext i32 %12 to i64, !dbg !6814
  store i64 %conv6, i64* %len, align 8, !dbg !6815, !tbaa !2611
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %13 = load i64, i64* %len, align 8, !dbg !6816, !tbaa !2611
  %add7 = add i64 %13, 1, !dbg !6817
  %14 = load i64, i64* @dired_pos, align 8, !dbg !6818, !tbaa !2611
  %add8 = add i64 %14, %add7, !dbg !6818
  store i64 %add8, i64* @dired_pos, align 8, !dbg !6818, !tbaa !2611
  ret void, !dbg !6819
}

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_major(i64) #7

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_minor(i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @unsigned_file_size(i64 %size) #0 !dbg !6820 !ctir !681 {
entry:
  %size.addr = alloca i64, align 8, !ctir !178
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6821, metadata !DIExpression()), !dbg !6822
  %0 = load i64, i64* %size.addr, align 8, !dbg !6823, !tbaa !2611
  %1 = load i64, i64* %size.addr, align 8, !dbg !6824, !tbaa !2611
  %cmp = icmp slt i64 %1, 0, !dbg !6825
  %conv = zext i1 %cmp to i32, !dbg !6825
  %conv1 = sext i32 %conv to i64, !dbg !6826
  %mul = mul i64 %conv1, 0, !dbg !6827
  %add = add i64 %0, %mul, !dbg !6828
  ret i64 %add, !dbg !6829
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @align_nstrftime(i8* %buf, i64 %size, i1 zeroext %recent, %struct.tm* %tm, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !6830 !ctir !765 {
entry:
  %buf.addr = alloca i8*, align 8, !ctir !143
  %size.addr = alloca i64, align 8, !ctir !149
  %recent.addr = alloca i8, align 1, !ctir !141
  %tm.addr = alloca %struct.tm*, align 8, !ctir !767
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !246
  %ns.addr = alloca i32, align 4, !ctir !27
  %nfmt = alloca i8*, align 8, !ctir !146
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6833, metadata !DIExpression()), !dbg !6834
  %frombool = zext i1 %recent to i8
  store i8 %frombool, i8* %recent.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %recent.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !6843, metadata !DIExpression()), !dbg !6844
  %0 = load i8, i8* @use_abformat, align 1, !dbg !6845, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6845
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6845

cond.true:                                        ; preds = %entry
  %1 = load i8, i8* %recent.addr, align 1, !dbg !6846, !tbaa !2493
  %tobool1 = trunc i8 %1 to i1, !dbg !6846
  %idxprom = zext i1 %tobool1 to i64, !dbg !6847
  %arrayidx = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom, !dbg !6847, !ctir !565
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6848, !tbaa !2474
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 4, !dbg !6849, !ctir !768
  %3 = load i32, i32* %tm_mon, align 8, !dbg !6849, !tbaa !6850, !ctir !27
  %idxprom2 = sext i32 %3 to i64, !dbg !6847
  %arrayidx3 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx, i64 0, i64 %idxprom2, !dbg !6847, !ctir !562
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx3, i64 0, i64 0, !dbg !6847
  br label %cond.end, !dbg !6845

cond.false:                                       ; preds = %entry
  %4 = load i8, i8* %recent.addr, align 1, !dbg !6852, !tbaa !2493
  %tobool4 = trunc i8 %4 to i1, !dbg !6852
  %idxprom5 = zext i1 %tobool4 to i64, !dbg !6853
  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom5, !dbg !6853, !ctir !549
  %5 = load i8*, i8** %arrayidx6, align 8, !dbg !6853, !tbaa !2474
  br label %cond.end, !dbg !6845

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %5, %cond.false ], !dbg !6845
  store i8* %cond, i8** %nfmt, align 8, !dbg !6844, !tbaa !2474
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6854, !tbaa !2474
  %7 = load i64, i64* %size.addr, align 8, !dbg !6855, !tbaa !2611
  %8 = load i8*, i8** %nfmt, align 8, !dbg !6856, !tbaa !2474
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6857, !tbaa !2474
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !6858, !tbaa !2474
  %11 = load i32, i32* %ns.addr, align 4, !dbg !6859, !tbaa !2468
  %call = call i64 @nstrftime(i8* %6, i64 %7, i8* %8, %struct.tm* %9, %struct.tm_zone* %10, i32 %11), !dbg !6860
  ret i64 %call, !dbg !6861
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @long_time_expected_width() #0 !dbg !1017 !ctir !782 {
entry:
  %epoch = alloca i64, align 8, !ctir !162
  %tm = alloca %struct.tm, align 8, !ctir !769
  %buf = alloca [1001 x i8], align 16, !ctir !784
  %len = alloca i64, align 8, !ctir !149
  %0 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6862, !tbaa !2468
  %cmp = icmp slt i32 %0, 0, !dbg !6864
  br i1 %cmp, label %if.then, label %if.end11, !dbg !6865

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %epoch, metadata !6866, metadata !DIExpression()), !dbg !6868
  store i64 0, i64* %epoch, align 8, !dbg !6868, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !6869, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.declare(metadata [1001 x i8]* %buf, metadata !6871, metadata !DIExpression()), !dbg !6872
  %1 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6873, !tbaa !2474
  %call = call %struct.tm* @localtime_rz(%struct.tm_zone* %1, i64* %epoch, %struct.tm* %tm), !dbg !6875
  %tobool = icmp ne %struct.tm* %call, null, !dbg !6875
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !6876

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6877, metadata !DIExpression()), !dbg !6879
  %arraydecay = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6880
  %2 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6881, !tbaa !2474
  %call2 = call i64 @align_nstrftime(i8* %arraydecay, i64 1001, i1 zeroext false, %struct.tm* %tm, %struct.tm_zone* %2, i32 0), !dbg !6882
  store i64 %call2, i64* %len, align 8, !dbg !6879, !tbaa !2611
  %3 = load i64, i64* %len, align 8, !dbg !6883, !tbaa !2611
  %cmp3 = icmp ne i64 %3, 0, !dbg !6885
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6886

if.then4:                                         ; preds = %if.then1
  %arraydecay5 = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6887
  %4 = load i64, i64* %len, align 8, !dbg !6888, !tbaa !2611
  %call6 = call i32 @mbsnwidth(i8* %arraydecay5, i64 %4, i32 0), !dbg !6889
  store i32 %call6, i32* @long_time_expected_width.width, align 4, !dbg !6890, !tbaa !2468
  br label %if.end, !dbg !6891

if.end:                                           ; preds = %if.then4, %if.then1
  br label %if.end7, !dbg !6892

if.end7:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6893, !tbaa !2468
  %cmp8 = icmp slt i32 %5, 0, !dbg !6895
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !6896

if.then9:                                         ; preds = %if.end7
  store i32 0, i32* @long_time_expected_width.width, align 4, !dbg !6897, !tbaa !2468
  br label %if.end10, !dbg !6898

if.end10:                                         ; preds = %if.then9, %if.end7
  br label %if.end11, !dbg !6899

if.end11:                                         ; preds = %if.end10, %entry
  %6 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6900, !tbaa !2468
  ret i32 %6, !dbg !6901
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64 %t, i8* %buf) #0 !dbg !6902 !ctir !787 {
entry:
  %t.addr = alloca i64, align 8, !ctir !162
  %buf.addr = alloca i8*, align 8, !ctir !143
  store i64 %t, i64* %t.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %t.addr, metadata !6903, metadata !DIExpression()), !dbg !6904
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6905, metadata !DIExpression()), !dbg !6906
  %0 = load i64, i64* %t.addr, align 8, !dbg !6907, !tbaa !2611
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6908, !tbaa !2474
  %call = call i8* @imaxtostr(i64 %0, i8* %1), !dbg !6909
  ret i8* %call, !dbg !6910
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_name_with_quoting(%struct.fileinfo* %f, i1 zeroext %symlink_target, %struct.obstack* %stack, i64 %start_col) #0 !dbg !6911 !ctir !722 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %symlink_target.addr = alloca i8, align 1, !ctir !141
  %stack.addr = alloca %struct.obstack*, align 8, !ctir !498
  %start_col.addr = alloca i64, align 8, !ctir !149
  %name = alloca i8*, align 8, !ctir !146
  %color = alloca %struct.bin_str*, align 8, !ctir !394
  %used_color_this_time = alloca i8, align 1, !ctir !141
  %len = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i64 %start_col, i64* %start_col.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6920, metadata !DIExpression()), !dbg !6921
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !6922, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6922
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6922

cond.true:                                        ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6923, !tbaa !2474
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !6924, !ctir !183
  %2 = load i8*, i8** %linkname, align 8, !dbg !6924, !tbaa !4178, !ctir !143
  br label %cond.end, !dbg !6922

cond.false:                                       ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6925, !tbaa !2474
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !6926, !ctir !183
  %4 = load i8*, i8** %name1, align 8, !dbg !6926, !tbaa !4040, !ctir !143
  br label %cond.end, !dbg !6922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6922
  store i8* %cond, i8** %name, align 8, !dbg !6921, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color, metadata !6927, metadata !DIExpression()), !dbg !6928
  %5 = load i8, i8* @print_with_color, align 1, !dbg !6929, !tbaa !2493
  %tobool2 = trunc i8 %5 to i1, !dbg !6929
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !6929

cond.true3:                                       ; preds = %cond.end
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6930, !tbaa !2474
  %7 = load i8, i8* %symlink_target.addr, align 1, !dbg !6931, !tbaa !2493
  %tobool4 = trunc i8 %7 to i1, !dbg !6931
  %call = call %struct.bin_str* @get_color_indicator(%struct.fileinfo* %6, i1 zeroext %tobool4), !dbg !6932
  br label %cond.end6, !dbg !6929

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !6929

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.bin_str* [ %call, %cond.true3 ], [ null, %cond.false5 ], !dbg !6929
  store %struct.bin_str* %cond7, %struct.bin_str** %color, align 8, !dbg !6928, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %used_color_this_time, metadata !6933, metadata !DIExpression()), !dbg !6934
  %8 = load i8, i8* @print_with_color, align 1, !dbg !6935, !tbaa !2493
  %tobool8 = trunc i8 %8 to i1, !dbg !6935
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !6936

land.rhs:                                         ; preds = %cond.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6937, !tbaa !2474
  %tobool9 = icmp ne %struct.bin_str* %9, null, !dbg !6937
  br i1 %tobool9, label %lor.end, label %lor.rhs, !dbg !6938

lor.rhs:                                          ; preds = %land.rhs
  %call10 = call zeroext i1 @is_colored(i32 4), !dbg !6939
  br label %lor.end, !dbg !6938

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %call10, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.end6
  %11 = phi i1 [ false, %cond.end6 ], [ %10, %lor.end ], !dbg !6940
  %frombool11 = zext i1 %11 to i8, !dbg !6934
  store i8 %frombool11, i8* %used_color_this_time, align 1, !dbg !6934, !tbaa !2493
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6941, metadata !DIExpression()), !dbg !6942
  %12 = load i8*, i8** %name, align 8, !dbg !6943, !tbaa !2474
  %13 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !6944, !tbaa !2474
  %14 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6945, !tbaa !2474
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 11, !dbg !6946, !ctir !183
  %15 = load i32, i32* %quoted, align 4, !dbg !6946, !tbaa !3842, !ctir !27
  %16 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6947, !tbaa !2474
  %17 = load i8, i8* %symlink_target.addr, align 1, !dbg !6948, !tbaa !2493
  %tobool12 = trunc i8 %17 to i1, !dbg !6948
  %lnot = xor i1 %tobool12, true, !dbg !6949
  %18 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !6950, !tbaa !2474
  %19 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6951, !tbaa !2474
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %19, i32 0, i32 2, !dbg !6952, !ctir !183
  %20 = load i8*, i8** %absolute_name, align 8, !dbg !6952, !tbaa !3963, !ctir !143
  %call13 = call i64 @quote_name(i8* %12, %struct.quoting_options* %13, i32 %15, %struct.bin_str* %16, i1 zeroext %lnot, %struct.obstack* %18, i8* %20), !dbg !6953
  store i64 %call13, i64* %len, align 8, !dbg !6942, !tbaa !2611
  call void @process_signals(), !dbg !6954
  %21 = load i8, i8* %used_color_this_time, align 1, !dbg !6955, !tbaa !2493
  %tobool14 = trunc i8 %21 to i1, !dbg !6955
  br i1 %tobool14, label %if.then, label %if.end18, !dbg !6957

if.then:                                          ; preds = %land.end
  call void @prep_non_filename_text(), !dbg !6958
  %22 = load i64, i64* @line_length, align 8, !dbg !6960, !tbaa !2611
  %tobool15 = icmp ne i64 %22, 0, !dbg !6960
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !6962

land.lhs.true:                                    ; preds = %if.then
  %23 = load i64, i64* %start_col.addr, align 8, !dbg !6963, !tbaa !2611
  %24 = load i64, i64* @line_length, align 8, !dbg !6964, !tbaa !2611
  %div = udiv i64 %23, %24, !dbg !6965
  %25 = load i64, i64* %start_col.addr, align 8, !dbg !6966, !tbaa !2611
  %26 = load i64, i64* %len, align 8, !dbg !6967, !tbaa !2611
  %add = add i64 %25, %26, !dbg !6968
  %sub = sub i64 %add, 1, !dbg !6969
  %27 = load i64, i64* @line_length, align 8, !dbg !6970, !tbaa !2611
  %div16 = udiv i64 %sub, %27, !dbg !6971
  %cmp = icmp ne i64 %div, %div16, !dbg !6972
  br i1 %cmp, label %if.then17, label %if.end, !dbg !6973

if.then17:                                        ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 23)), !dbg !6974
  br label %if.end, !dbg !6974

if.end:                                           ; preds = %if.then17, %land.lhs.true, %if.then
  br label %if.end18, !dbg !6975

if.end18:                                         ; preds = %if.end, %land.end
  %28 = load i64, i64* %len, align 8, !dbg !6976, !tbaa !2611
  ret i64 %28, !dbg !6977
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6978 !ctir !728 {
entry:
  %stat_ok.addr = alloca i8, align 1, !ctir !141
  %mode.addr = alloca i32, align 4, !ctir !226
  %type.addr = alloca i32, align 4, !ctir !36
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6979, metadata !DIExpression()), !dbg !6980
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6981, metadata !DIExpression()), !dbg !6982
  store i32 %type, i32* %type.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6985, metadata !DIExpression()), !dbg !6986
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6987, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !6987
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6988, !tbaa !2468
  %2 = load i32, i32* %type.addr, align 4, !dbg !6989, !tbaa !2529
  %call = call signext i8 @get_type_indicator(i1 zeroext %tobool, i32 %1, i32 %2), !dbg !6990
  store i8 %call, i8* %c, align 1, !dbg !6986, !tbaa !2529
  %3 = load i8, i8* %c, align 1, !dbg !6991, !tbaa !2529
  %tobool1 = icmp ne i8 %3, 0, !dbg !6991
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6993

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6994

do.body:                                          ; preds = %if.then
  %4 = load i8, i8* %c, align 1, !dbg !6995, !tbaa !2529
  %conv = sext i8 %4 to i32, !dbg !6995
  %call2 = call i32 @putchar_unlocked(i32 %conv), !dbg !6995
  %5 = load i64, i64* @dired_pos, align 8, !dbg !6995, !tbaa !2611
  %inc = add i64 %5, 1, !dbg !6995
  store i64 %inc, i64* @dired_pos, align 8, !dbg !6995, !tbaa !2611
  br label %do.end, !dbg !6995

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !6995

if.end:                                           ; preds = %do.end, %entry
  %6 = load i8, i8* %c, align 1, !dbg !6997, !tbaa !2529
  %tobool3 = icmp ne i8 %6, 0, !dbg !6998
  %lnot = xor i1 %tobool3, true, !dbg !6998
  %lnot4 = xor i1 %lnot, true, !dbg !6999
  ret i1 %lnot4, !dbg !7000
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @get_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !7001 !ctir !730 {
entry:
  %stat_ok.addr = alloca i8, align 1, !ctir !141
  %mode.addr = alloca i32, align 4, !ctir !226
  %type.addr = alloca i32, align 4, !ctir !36
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7004, metadata !DIExpression()), !dbg !7005
  store i32 %type, i32* %type.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7008, metadata !DIExpression()), !dbg !7009
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !7010, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !7010
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7012

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7013, !tbaa !2468
  %and = and i32 %1, 61440, !dbg !7013
  %cmp = icmp eq i32 %and, 32768, !dbg !7013
  br i1 %cmp, label %if.then, label %if.else8, !dbg !7010

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !7014, !tbaa !2529
  %cmp1 = icmp eq i32 %2, 5, !dbg !7015
  br i1 %cmp1, label %if.then, label %if.else8, !dbg !7012

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load i8, i8* %stat_ok.addr, align 1, !dbg !7016, !tbaa !2493
  %tobool2 = trunc i8 %3 to i1, !dbg !7016
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !7019

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* @indicator_style, align 4, !dbg !7020, !tbaa !2529
  %cmp3 = icmp eq i32 %4, 3, !dbg !7021
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !7022

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7023, !tbaa !2468
  %and5 = and i32 %5, 73, !dbg !7024
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7024
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7025

if.then7:                                         ; preds = %land.lhs.true4
  store i8 42, i8* %c, align 1, !dbg !7026, !tbaa !2529
  br label %if.end, !dbg !7027

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.then
  store i8 0, i8* %c, align 1, !dbg !7028, !tbaa !2529
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end55, !dbg !7029

if.else8:                                         ; preds = %cond.false, %cond.true
  %6 = load i8, i8* %stat_ok.addr, align 1, !dbg !7030, !tbaa !2493
  %tobool9 = trunc i8 %6 to i1, !dbg !7030
  br i1 %tobool9, label %cond.true10, label %cond.false13, !dbg !7033

cond.true10:                                      ; preds = %if.else8
  %7 = load i32, i32* %mode.addr, align 4, !dbg !7034, !tbaa !2468
  %and11 = and i32 %7, 61440, !dbg !7034
  %cmp12 = icmp eq i32 %and11, 16384, !dbg !7034
  br i1 %cmp12, label %if.then16, label %if.else17, !dbg !7030

cond.false13:                                     ; preds = %if.else8
  %8 = load i32, i32* %type.addr, align 4, !dbg !7035, !tbaa !2529
  %cmp14 = icmp eq i32 %8, 3, !dbg !7036
  br i1 %cmp14, label %if.then16, label %lor.lhs.false, !dbg !7037

lor.lhs.false:                                    ; preds = %cond.false13
  %9 = load i32, i32* %type.addr, align 4, !dbg !7038, !tbaa !2529
  %cmp15 = icmp eq i32 %9, 9, !dbg !7039
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !7033

if.then16:                                        ; preds = %lor.lhs.false, %cond.false13, %cond.true10
  store i8 47, i8* %c, align 1, !dbg !7040, !tbaa !2529
  br label %if.end54, !dbg !7041

if.else17:                                        ; preds = %lor.lhs.false, %cond.true10
  %10 = load i32, i32* @indicator_style, align 4, !dbg !7042, !tbaa !2529
  %cmp18 = icmp eq i32 %10, 1, !dbg !7044
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !7045

if.then19:                                        ; preds = %if.else17
  store i8 0, i8* %c, align 1, !dbg !7046, !tbaa !2529
  br label %if.end53, !dbg !7047

if.else20:                                        ; preds = %if.else17
  %11 = load i8, i8* %stat_ok.addr, align 1, !dbg !7048, !tbaa !2493
  %tobool21 = trunc i8 %11 to i1, !dbg !7048
  br i1 %tobool21, label %cond.true22, label %cond.false25, !dbg !7050

cond.true22:                                      ; preds = %if.else20
  %12 = load i32, i32* %mode.addr, align 4, !dbg !7051, !tbaa !2468
  %and23 = and i32 %12, 61440, !dbg !7051
  %cmp24 = icmp eq i32 %and23, 40960, !dbg !7051
  br i1 %cmp24, label %if.then27, label %if.else28, !dbg !7048

cond.false25:                                     ; preds = %if.else20
  %13 = load i32, i32* %type.addr, align 4, !dbg !7052, !tbaa !2529
  %cmp26 = icmp eq i32 %13, 6, !dbg !7053
  br i1 %cmp26, label %if.then27, label %if.else28, !dbg !7050

if.then27:                                        ; preds = %cond.false25, %cond.true22
  store i8 64, i8* %c, align 1, !dbg !7054, !tbaa !2529
  br label %if.end52, !dbg !7055

if.else28:                                        ; preds = %cond.false25, %cond.true22
  %14 = load i8, i8* %stat_ok.addr, align 1, !dbg !7056, !tbaa !2493
  %tobool29 = trunc i8 %14 to i1, !dbg !7056
  br i1 %tobool29, label %cond.true30, label %cond.false33, !dbg !7058

cond.true30:                                      ; preds = %if.else28
  %15 = load i32, i32* %mode.addr, align 4, !dbg !7059, !tbaa !2468
  %and31 = and i32 %15, 61440, !dbg !7059
  %cmp32 = icmp eq i32 %and31, 4096, !dbg !7059
  br i1 %cmp32, label %if.then35, label %if.else36, !dbg !7056

cond.false33:                                     ; preds = %if.else28
  %16 = load i32, i32* %type.addr, align 4, !dbg !7060, !tbaa !2529
  %cmp34 = icmp eq i32 %16, 1, !dbg !7061
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !7058

if.then35:                                        ; preds = %cond.false33, %cond.true30
  store i8 124, i8* %c, align 1, !dbg !7062, !tbaa !2529
  br label %if.end51, !dbg !7063

if.else36:                                        ; preds = %cond.false33, %cond.true30
  %17 = load i8, i8* %stat_ok.addr, align 1, !dbg !7064, !tbaa !2493
  %tobool37 = trunc i8 %17 to i1, !dbg !7064
  br i1 %tobool37, label %cond.true38, label %cond.false41, !dbg !7066

cond.true38:                                      ; preds = %if.else36
  %18 = load i32, i32* %mode.addr, align 4, !dbg !7067, !tbaa !2468
  %and39 = and i32 %18, 61440, !dbg !7067
  %cmp40 = icmp eq i32 %and39, 49152, !dbg !7067
  br i1 %cmp40, label %if.then43, label %if.else44, !dbg !7064

cond.false41:                                     ; preds = %if.else36
  %19 = load i32, i32* %type.addr, align 4, !dbg !7068, !tbaa !2529
  %cmp42 = icmp eq i32 %19, 7, !dbg !7069
  br i1 %cmp42, label %if.then43, label %if.else44, !dbg !7066

if.then43:                                        ; preds = %cond.false41, %cond.true38
  store i8 61, i8* %c, align 1, !dbg !7070, !tbaa !2529
  br label %if.end50, !dbg !7071

if.else44:                                        ; preds = %cond.false41, %cond.true38
  %20 = load i8, i8* %stat_ok.addr, align 1, !dbg !7072, !tbaa !2493
  %tobool45 = trunc i8 %20 to i1, !dbg !7072
  br i1 %tobool45, label %land.lhs.true46, label %if.else48, !dbg !7074

land.lhs.true46:                                  ; preds = %if.else44
  br i1 false, label %if.then47, label %if.else48, !dbg !7075

if.then47:                                        ; preds = %land.lhs.true46
  store i8 62, i8* %c, align 1, !dbg !7076, !tbaa !2529
  br label %if.end49, !dbg !7077

if.else48:                                        ; preds = %land.lhs.true46, %if.else44
  store i8 0, i8* %c, align 1, !dbg !7078, !tbaa !2529
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then43
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then35
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then27
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then19
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then16
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end
  %21 = load i8, i8* %c, align 1, !dbg !7079, !tbaa !2529
  ret i8 %21, !dbg !7080
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.bin_str* @get_color_indicator(%struct.fileinfo* %f, i1 zeroext %symlink_target) #0 !dbg !1007 !ctir !724 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %symlink_target.addr = alloca i8, align 1, !ctir !141
  %type = alloca i32, align 4, !ctir !53
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !581
  %len = alloca i64, align 8, !ctir !149
  %name = alloca i8*, align 8, !ctir !146
  %mode = alloca i32, align 4, !ctir !226
  %linkok = alloca i32, align 4, !ctir !27
  %s = alloca %struct.bin_str*, align 8, !ctir !727
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %linkok, metadata !7095, metadata !DIExpression()), !dbg !7096
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !7097, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !7097
  br i1 %tobool, label %if.then, label %if.else, !dbg !7099

if.then:                                          ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7100, !tbaa !2474
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !7102, !ctir !183
  %2 = load i8*, i8** %linkname, align 8, !dbg !7102, !tbaa !4178, !ctir !143
  store i8* %2, i8** %name, align 8, !dbg !7103, !tbaa !2474
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7104, !tbaa !2474
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 5, !dbg !7105, !ctir !183
  %4 = load i32, i32* %linkmode, align 4, !dbg !7105, !tbaa !4216, !ctir !226
  store i32 %4, i32* %mode, align 4, !dbg !7106, !tbaa !2468
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7107, !tbaa !2474
  %linkok1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 8, !dbg !7108, !ctir !183
  %6 = load i8, i8* %linkok1, align 1, !dbg !7108, !tbaa !4210
  %tobool2 = trunc i8 %6 to i1, !dbg !7108, !ctir !141
  %7 = zext i1 %tobool2 to i64, !dbg !7107
  %cond = select i1 %tobool2, i32 0, i32 -1, !dbg !7107
  store i32 %cond, i32* %linkok, align 4, !dbg !7109, !tbaa !2468
  br label %if.end, !dbg !7110

if.else:                                          ; preds = %entry
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7111, !tbaa !2474
  %name3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 0, !dbg !7113, !ctir !183
  %9 = load i8*, i8** %name3, align 8, !dbg !7113, !tbaa !4040, !ctir !143
  store i8* %9, i8** %name, align 8, !dbg !7114, !tbaa !2474
  %10 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !7115, !tbaa !2493
  %tobool4 = trunc i8 %10 to i1, !dbg !7115
  br i1 %tobool4, label %land.lhs.true, label %cond.false, !dbg !7115

land.lhs.true:                                    ; preds = %if.else
  %11 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7115, !tbaa !2474
  %linkok5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 8, !dbg !7115, !ctir !183
  %12 = load i8, i8* %linkok5, align 1, !dbg !7115, !tbaa !4210
  %tobool6 = trunc i8 %12 to i1, !dbg !7115, !ctir !141
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !7115

cond.true:                                        ; preds = %land.lhs.true
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7115, !tbaa !2474
  %linkmode7 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 5, !dbg !7115, !ctir !183
  %14 = load i32, i32* %linkmode7, align 4, !dbg !7115, !tbaa !4216, !ctir !226
  br label %cond.end, !dbg !7115

cond.false:                                       ; preds = %land.lhs.true, %if.else
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7115, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 3, !dbg !7115, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 3, !dbg !7115, !ctir !190
  %16 = load i32, i32* %st_mode, align 8, !dbg !7115, !tbaa !4005, !ctir !200
  br label %cond.end, !dbg !7115

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i32 [ %14, %cond.true ], [ %16, %cond.false ], !dbg !7115
  store i32 %cond8, i32* %mode, align 4, !dbg !7116, !tbaa !2468
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7117, !tbaa !2474
  %linkok9 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 8, !dbg !7118, !ctir !183
  %18 = load i8, i8* %linkok9, align 1, !dbg !7118, !tbaa !4210
  %tobool10 = trunc i8 %18 to i1, !dbg !7118, !ctir !141
  %conv = zext i1 %tobool10 to i32, !dbg !7117
  store i32 %conv, i32* %linkok, align 4, !dbg !7119, !tbaa !2468
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %19 = load i32, i32* %linkok, align 4, !dbg !7120, !tbaa !2468
  %cmp = icmp eq i32 %19, -1, !dbg !7122
  br i1 %cmp, label %land.lhs.true12, label %if.else15, !dbg !7123

land.lhs.true12:                                  ; preds = %if.end
  %call = call zeroext i1 @is_colored(i32 12), !dbg !7124
  br i1 %call, label %if.then14, label %if.else15, !dbg !7125

if.then14:                                        ; preds = %land.lhs.true12
  store i32 12, i32* %type, align 4, !dbg !7126, !tbaa !2529
  br label %if.end132, !dbg !7127

if.else15:                                        ; preds = %land.lhs.true12, %if.end
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7128, !tbaa !2474
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 7, !dbg !7130, !ctir !183
  %21 = load i8, i8* %stat_ok, align 8, !dbg !7130, !tbaa !4046
  %tobool16 = trunc i8 %21 to i1, !dbg !7130, !ctir !141
  br i1 %tobool16, label %if.else18, label %if.then17, !dbg !7131

if.then17:                                        ; preds = %if.else15
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7132, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 4, !dbg !7134, !ctir !183
  %23 = load i32, i32* %filetype, align 8, !dbg !7134, !tbaa !3838, !ctir !36
  %idxprom = zext i32 %23 to i64, !dbg !7135
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @get_color_indicator.filetype_indicator, i64 0, i64 %idxprom, !dbg !7135, !ctir !726
  %24 = load i32, i32* %arrayidx, align 4, !dbg !7135, !tbaa !2529
  store i32 %24, i32* %type, align 4, !dbg !7136, !tbaa !2529
  br label %if.end131, !dbg !7137

if.else18:                                        ; preds = %if.else15
  %25 = load i32, i32* %mode, align 4, !dbg !7138, !tbaa !2468
  %and = and i32 %25, 61440, !dbg !7138
  %cmp19 = icmp eq i32 %and, 32768, !dbg !7138
  br i1 %cmp19, label %if.then21, label %if.else65, !dbg !7141

if.then21:                                        ; preds = %if.else18
  store i32 5, i32* %type, align 4, !dbg !7142, !tbaa !2529
  %26 = load i32, i32* %mode, align 4, !dbg !7144, !tbaa !2468
  %and22 = and i32 %26, 2048, !dbg !7146
  %cmp23 = icmp ne i32 %and22, 0, !dbg !7147
  br i1 %cmp23, label %land.lhs.true25, label %if.else29, !dbg !7148

land.lhs.true25:                                  ; preds = %if.then21
  %call26 = call zeroext i1 @is_colored(i32 16), !dbg !7149
  br i1 %call26, label %if.then28, label %if.else29, !dbg !7150

if.then28:                                        ; preds = %land.lhs.true25
  store i32 16, i32* %type, align 4, !dbg !7151, !tbaa !2529
  br label %if.end64, !dbg !7152

if.else29:                                        ; preds = %land.lhs.true25, %if.then21
  %27 = load i32, i32* %mode, align 4, !dbg !7153, !tbaa !2468
  %and30 = and i32 %27, 1024, !dbg !7155
  %cmp31 = icmp ne i32 %and30, 0, !dbg !7156
  br i1 %cmp31, label %land.lhs.true33, label %if.else37, !dbg !7157

land.lhs.true33:                                  ; preds = %if.else29
  %call34 = call zeroext i1 @is_colored(i32 17), !dbg !7158
  br i1 %call34, label %if.then36, label %if.else37, !dbg !7159

if.then36:                                        ; preds = %land.lhs.true33
  store i32 17, i32* %type, align 4, !dbg !7160, !tbaa !2529
  br label %if.end63, !dbg !7161

if.else37:                                        ; preds = %land.lhs.true33, %if.else29
  %call38 = call zeroext i1 @is_colored(i32 21), !dbg !7162
  br i1 %call38, label %land.lhs.true40, label %if.else44, !dbg !7164

land.lhs.true40:                                  ; preds = %if.else37
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7165, !tbaa !2474
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 10, !dbg !7166, !ctir !183
  %29 = load i8, i8* %has_capability, align 8, !dbg !7166, !tbaa !4063
  %tobool41 = trunc i8 %29 to i1, !dbg !7166, !ctir !141
  br i1 %tobool41, label %if.then43, label %if.else44, !dbg !7167

if.then43:                                        ; preds = %land.lhs.true40
  store i32 21, i32* %type, align 4, !dbg !7168, !tbaa !2529
  br label %if.end62, !dbg !7169

if.else44:                                        ; preds = %land.lhs.true40, %if.else37
  %30 = load i32, i32* %mode, align 4, !dbg !7170, !tbaa !2468
  %and45 = and i32 %30, 73, !dbg !7172
  %cmp46 = icmp ne i32 %and45, 0, !dbg !7173
  br i1 %cmp46, label %land.lhs.true48, label %if.else52, !dbg !7174

land.lhs.true48:                                  ; preds = %if.else44
  %call49 = call zeroext i1 @is_colored(i32 14), !dbg !7175
  br i1 %call49, label %if.then51, label %if.else52, !dbg !7176

if.then51:                                        ; preds = %land.lhs.true48
  store i32 14, i32* %type, align 4, !dbg !7177, !tbaa !2529
  br label %if.end61, !dbg !7178

if.else52:                                        ; preds = %land.lhs.true48, %if.else44
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7179, !tbaa !2474
  %stat53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !7181, !ctir !183
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat53, i32 0, i32 2, !dbg !7182, !ctir !190
  %32 = load i64, i64* %st_nlink, align 8, !dbg !7182, !tbaa !4370, !ctir !198
  %cmp54 = icmp ult i64 1, %32, !dbg !7183
  br i1 %cmp54, label %land.lhs.true56, label %if.end60, !dbg !7184

land.lhs.true56:                                  ; preds = %if.else52
  %call57 = call zeroext i1 @is_colored(i32 22), !dbg !7185
  br i1 %call57, label %if.then59, label %if.end60, !dbg !7186

if.then59:                                        ; preds = %land.lhs.true56
  store i32 22, i32* %type, align 4, !dbg !7187, !tbaa !2529
  br label %if.end60, !dbg !7188

if.end60:                                         ; preds = %if.then59, %land.lhs.true56, %if.else52
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then51
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then43
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then36
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then28
  br label %if.end130, !dbg !7189

if.else65:                                        ; preds = %if.else18
  %33 = load i32, i32* %mode, align 4, !dbg !7190, !tbaa !2468
  %and66 = and i32 %33, 61440, !dbg !7190
  %cmp67 = icmp eq i32 %and66, 16384, !dbg !7190
  br i1 %cmp67, label %if.then69, label %if.else98, !dbg !7192

if.then69:                                        ; preds = %if.else65
  store i32 6, i32* %type, align 4, !dbg !7193, !tbaa !2529
  %34 = load i32, i32* %mode, align 4, !dbg !7195, !tbaa !2468
  %and70 = and i32 %34, 512, !dbg !7197
  %tobool71 = icmp ne i32 %and70, 0, !dbg !7197
  br i1 %tobool71, label %land.lhs.true72, label %if.else79, !dbg !7198

land.lhs.true72:                                  ; preds = %if.then69
  %35 = load i32, i32* %mode, align 4, !dbg !7199, !tbaa !2468
  %and73 = and i32 %35, 2, !dbg !7200
  %tobool74 = icmp ne i32 %and73, 0, !dbg !7200
  br i1 %tobool74, label %land.lhs.true75, label %if.else79, !dbg !7201

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %call76 = call zeroext i1 @is_colored(i32 20), !dbg !7202
  br i1 %call76, label %if.then78, label %if.else79, !dbg !7203

if.then78:                                        ; preds = %land.lhs.true75
  store i32 20, i32* %type, align 4, !dbg !7204, !tbaa !2529
  br label %if.end97, !dbg !7205

if.else79:                                        ; preds = %land.lhs.true75, %land.lhs.true72, %if.then69
  %36 = load i32, i32* %mode, align 4, !dbg !7206, !tbaa !2468
  %and80 = and i32 %36, 2, !dbg !7208
  %cmp81 = icmp ne i32 %and80, 0, !dbg !7209
  br i1 %cmp81, label %land.lhs.true83, label %if.else87, !dbg !7210

land.lhs.true83:                                  ; preds = %if.else79
  %call84 = call zeroext i1 @is_colored(i32 19), !dbg !7211
  br i1 %call84, label %if.then86, label %if.else87, !dbg !7212

if.then86:                                        ; preds = %land.lhs.true83
  store i32 19, i32* %type, align 4, !dbg !7213, !tbaa !2529
  br label %if.end96, !dbg !7214

if.else87:                                        ; preds = %land.lhs.true83, %if.else79
  %37 = load i32, i32* %mode, align 4, !dbg !7215, !tbaa !2468
  %and88 = and i32 %37, 512, !dbg !7217
  %cmp89 = icmp ne i32 %and88, 0, !dbg !7218
  br i1 %cmp89, label %land.lhs.true91, label %if.end95, !dbg !7219

land.lhs.true91:                                  ; preds = %if.else87
  %call92 = call zeroext i1 @is_colored(i32 18), !dbg !7220
  br i1 %call92, label %if.then94, label %if.end95, !dbg !7221

if.then94:                                        ; preds = %land.lhs.true91
  store i32 18, i32* %type, align 4, !dbg !7222, !tbaa !2529
  br label %if.end95, !dbg !7223

if.end95:                                         ; preds = %if.then94, %land.lhs.true91, %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then86
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then78
  br label %if.end129, !dbg !7224

if.else98:                                        ; preds = %if.else65
  %38 = load i32, i32* %mode, align 4, !dbg !7225, !tbaa !2468
  %and99 = and i32 %38, 61440, !dbg !7225
  %cmp100 = icmp eq i32 %and99, 40960, !dbg !7225
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !7227

if.then102:                                       ; preds = %if.else98
  store i32 7, i32* %type, align 4, !dbg !7228, !tbaa !2529
  br label %if.end128, !dbg !7229

if.else103:                                       ; preds = %if.else98
  %39 = load i32, i32* %mode, align 4, !dbg !7230, !tbaa !2468
  %and104 = and i32 %39, 61440, !dbg !7230
  %cmp105 = icmp eq i32 %and104, 4096, !dbg !7230
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !7232

if.then107:                                       ; preds = %if.else103
  store i32 8, i32* %type, align 4, !dbg !7233, !tbaa !2529
  br label %if.end127, !dbg !7234

if.else108:                                       ; preds = %if.else103
  %40 = load i32, i32* %mode, align 4, !dbg !7235, !tbaa !2468
  %and109 = and i32 %40, 61440, !dbg !7235
  %cmp110 = icmp eq i32 %and109, 49152, !dbg !7235
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !7237

if.then112:                                       ; preds = %if.else108
  store i32 9, i32* %type, align 4, !dbg !7238, !tbaa !2529
  br label %if.end126, !dbg !7239

if.else113:                                       ; preds = %if.else108
  %41 = load i32, i32* %mode, align 4, !dbg !7240, !tbaa !2468
  %and114 = and i32 %41, 61440, !dbg !7240
  %cmp115 = icmp eq i32 %and114, 24576, !dbg !7240
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !7242

if.then117:                                       ; preds = %if.else113
  store i32 10, i32* %type, align 4, !dbg !7243, !tbaa !2529
  br label %if.end125, !dbg !7244

if.else118:                                       ; preds = %if.else113
  %42 = load i32, i32* %mode, align 4, !dbg !7245, !tbaa !2468
  %and119 = and i32 %42, 61440, !dbg !7245
  %cmp120 = icmp eq i32 %and119, 8192, !dbg !7245
  br i1 %cmp120, label %if.then122, label %if.else123, !dbg !7247

if.then122:                                       ; preds = %if.else118
  store i32 11, i32* %type, align 4, !dbg !7248, !tbaa !2529
  br label %if.end124, !dbg !7249

if.else123:                                       ; preds = %if.else118
  store i32 13, i32* %type, align 4, !dbg !7250, !tbaa !2529
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then117
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then112
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then107
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then102
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end97
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end64
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then17
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then14
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !7253, !tbaa !2474
  %43 = load i32, i32* %type, align 4, !dbg !7254, !tbaa !2529
  %cmp133 = icmp eq i32 %43, 5, !dbg !7256
  br i1 %cmp133, label %if.then135, label %if.end155, !dbg !7257

if.then135:                                       ; preds = %if.end132
  %44 = load i8*, i8** %name, align 8, !dbg !7258, !tbaa !2474
  %call136 = call i64 @strlen(i8* %44) #16, !dbg !7260
  store i64 %call136, i64* %len, align 8, !dbg !7261, !tbaa !2611
  %45 = load i64, i64* %len, align 8, !dbg !7262, !tbaa !2611
  %46 = load i8*, i8** %name, align 8, !dbg !7263, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !7263
  store i8* %add.ptr, i8** %name, align 8, !dbg !7263, !tbaa !2474
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !7264, !tbaa !2474
  store %struct.color_ext_type* %47, %struct.color_ext_type** %ext, align 8, !dbg !7266, !tbaa !2474
  br label %for.cond, !dbg !7267

for.cond:                                         ; preds = %for.inc, %if.then135
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7268, !tbaa !2474
  %cmp137 = icmp ne %struct.color_ext_type* %48, null, !dbg !7270
  br i1 %cmp137, label %for.body, label %for.end, !dbg !7271

for.body:                                         ; preds = %for.cond
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7272, !tbaa !2474
  %ext139 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %49, i32 0, i32 0, !dbg !7275, !ctir !582
  %len140 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext139, i32 0, i32 0, !dbg !7276, !ctir !260
  %50 = load i64, i64* %len140, align 8, !dbg !7276, !tbaa !7277, !ctir !149
  %51 = load i64, i64* %len, align 8, !dbg !7278, !tbaa !2611
  %cmp141 = icmp ule i64 %50, %51, !dbg !7279
  br i1 %cmp141, label %land.lhs.true143, label %if.end154, !dbg !7280

land.lhs.true143:                                 ; preds = %for.body
  %52 = load i8*, i8** %name, align 8, !dbg !7281, !tbaa !2474
  %53 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7282, !tbaa !2474
  %ext144 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %53, i32 0, i32 0, !dbg !7283, !ctir !582
  %len145 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext144, i32 0, i32 0, !dbg !7284, !ctir !260
  %54 = load i64, i64* %len145, align 8, !dbg !7284, !tbaa !7277, !ctir !149
  %idx.neg = sub i64 0, %54, !dbg !7285
  %add.ptr146 = getelementptr inbounds i8, i8* %52, i64 %idx.neg, !dbg !7285
  %55 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7286, !tbaa !2474
  %ext147 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %55, i32 0, i32 0, !dbg !7287, !ctir !582
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext147, i32 0, i32 1, !dbg !7288, !ctir !260
  %56 = load i8*, i8** %string, align 8, !dbg !7288, !tbaa !3516, !ctir !146
  %57 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7289, !tbaa !2474
  %ext148 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %57, i32 0, i32 0, !dbg !7290, !ctir !582
  %len149 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext148, i32 0, i32 0, !dbg !7291, !ctir !260
  %58 = load i64, i64* %len149, align 8, !dbg !7291, !tbaa !7277, !ctir !149
  %call150 = call i32 @c_strncasecmp(i8* %add.ptr146, i8* %56, i64 %58) #16, !dbg !7292
  %cmp151 = icmp eq i32 %call150, 0, !dbg !7293
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !7294

if.then153:                                       ; preds = %land.lhs.true143
  br label %for.end, !dbg !7295

if.end154:                                        ; preds = %land.lhs.true143, %for.body
  br label %for.inc, !dbg !7296

for.inc:                                          ; preds = %if.end154
  %59 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7297, !tbaa !2474
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %59, i32 0, i32 2, !dbg !7298, !ctir !582
  %60 = load %struct.color_ext_type*, %struct.color_ext_type** %next, align 8, !dbg !7298, !tbaa !3506, !ctir !581
  store %struct.color_ext_type* %60, %struct.color_ext_type** %ext, align 8, !dbg !7299, !tbaa !2474
  br label %for.cond, !dbg !7300, !llvm.loop !7301

for.end:                                          ; preds = %if.then153, %for.cond
  br label %if.end155, !dbg !7303

if.end155:                                        ; preds = %for.end, %if.end132
  %61 = load i32, i32* %type, align 4, !dbg !7304, !tbaa !2529
  %cmp156 = icmp eq i32 %61, 7, !dbg !7306
  br i1 %cmp156, label %land.lhs.true158, label %if.end167, !dbg !7307

land.lhs.true158:                                 ; preds = %if.end155
  %62 = load i32, i32* %linkok, align 4, !dbg !7308, !tbaa !2468
  %tobool159 = icmp ne i32 %62, 0, !dbg !7308
  br i1 %tobool159, label %if.end167, label %if.then160, !dbg !7309

if.then160:                                       ; preds = %land.lhs.true158
  %63 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !7310, !tbaa !2493
  %tobool161 = trunc i8 %63 to i1, !dbg !7310
  br i1 %tobool161, label %if.then165, label %lor.lhs.false, !dbg !7313

lor.lhs.false:                                    ; preds = %if.then160
  %call163 = call zeroext i1 @is_colored(i32 13), !dbg !7314
  br i1 %call163, label %if.then165, label %if.end166, !dbg !7315

if.then165:                                       ; preds = %lor.lhs.false, %if.then160
  store i32 13, i32* %type, align 4, !dbg !7316, !tbaa !2529
  br label %if.end166, !dbg !7317

if.end166:                                        ; preds = %if.then165, %lor.lhs.false
  br label %if.end167, !dbg !7318

if.end167:                                        ; preds = %if.end166, %land.lhs.true158, %if.end155
  call void @llvm.dbg.declare(metadata %struct.bin_str** %s, metadata !7319, metadata !DIExpression()), !dbg !7320
  %64 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7321, !tbaa !2474
  %tobool168 = icmp ne %struct.color_ext_type* %64, null, !dbg !7321
  br i1 %tobool168, label %cond.true169, label %cond.false170, !dbg !7321

cond.true169:                                     ; preds = %if.end167
  %65 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7322, !tbaa !2474
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %65, i32 0, i32 1, !dbg !7323, !ctir !582
  br label %cond.end173, !dbg !7321

cond.false170:                                    ; preds = %if.end167
  %66 = load i32, i32* %type, align 4, !dbg !7324, !tbaa !2529
  %idxprom171 = zext i32 %66 to i64, !dbg !7325
  %arrayidx172 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom171, !dbg !7325, !ctir !259
  br label %cond.end173, !dbg !7321

cond.end173:                                      ; preds = %cond.false170, %cond.true169
  %cond174 = phi %struct.bin_str* [ %seq, %cond.true169 ], [ %arrayidx172, %cond.false170 ], !dbg !7321
  store %struct.bin_str* %cond174, %struct.bin_str** %s, align 8, !dbg !7320, !tbaa !2474
  %67 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !7326, !tbaa !2474
  %string175 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %67, i32 0, i32 1, !dbg !7327, !ctir !395
  %68 = load i8*, i8** %string175, align 8, !dbg !7327, !tbaa !2740, !ctir !146
  %tobool176 = icmp ne i8* %68, null, !dbg !7326
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !7326

cond.true177:                                     ; preds = %cond.end173
  %69 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !7328, !tbaa !2474
  br label %cond.end179, !dbg !7326

cond.false178:                                    ; preds = %cond.end173
  br label %cond.end179, !dbg !7326

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi %struct.bin_str* [ %69, %cond.true177 ], [ null, %cond.false178 ], !dbg !7326
  ret %struct.bin_str* %cond180, !dbg !7329
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @calculate_columns(i1 zeroext %by_columns) #0 !dbg !7330 !ctir !746 {
entry:
  %by_columns.addr = alloca i8, align 1, !ctir !141
  %filesno = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !182
  %name_length = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %idx = alloca i64, align 8, !ctir !149
  %real_length = alloca i64, align 8, !ctir !149
  %frombool = zext i1 %by_columns to i8
  store i8 %frombool, i8* %by_columns.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %by_columns.addr, metadata !7331, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !7333, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7337, metadata !DIExpression()), !dbg !7338
  %0 = load i64, i64* @max_idx, align 8, !dbg !7339, !tbaa !2611
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7339, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !7339
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7339

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7339, !tbaa !2611
  br label %cond.end, !dbg !7339

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7339, !tbaa !2611
  br label %cond.end, !dbg !7339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7339
  store i64 %cond, i64* %max_cols, align 8, !dbg !7338, !tbaa !2611
  call void @init_column_info(), !dbg !7340
  store i64 0, i64* %filesno, align 8, !dbg !7341, !tbaa !2611
  br label %for.cond, !dbg !7343

for.cond:                                         ; preds = %for.inc38, %cond.end
  %4 = load i64, i64* %filesno, align 8, !dbg !7344, !tbaa !2611
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !7346, !tbaa !2611
  %cmp1 = icmp ult i64 %4, %5, !dbg !7347
  br i1 %cmp1, label %for.body, label %for.end40, !dbg !7348

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !7349, metadata !DIExpression()), !dbg !7351
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !7352, !tbaa !2474
  %7 = load i64, i64* %filesno, align 8, !dbg !7353, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !7352, !ctir !650
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !7352, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7352
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !7351, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !7354, metadata !DIExpression()), !dbg !7355
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !7356, !tbaa !2474
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %10), !dbg !7357
  store i64 %call, i64* %name_length, align 8, !dbg !7355, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7358, metadata !DIExpression()), !dbg !7360
  store i64 0, i64* %i, align 8, !dbg !7360, !tbaa !2611
  br label %for.cond2, !dbg !7361

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load i64, i64* %i, align 8, !dbg !7362, !tbaa !2611
  %12 = load i64, i64* %max_cols, align 8, !dbg !7364, !tbaa !2611
  %cmp3 = icmp ult i64 %11, %12, !dbg !7365
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !7366

for.body4:                                        ; preds = %for.cond2
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7367, !tbaa !2474
  %14 = load i64, i64* %i, align 8, !dbg !7370, !tbaa !2611
  %arrayidx5 = getelementptr inbounds %struct.column_info, %struct.column_info* %13, i64 %14, !dbg !7367, !ctir !745
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx5, i32 0, i32 0, !dbg !7371, !ctir !740
  %15 = load i8, i8* %valid_len, align 8, !dbg !7371, !tbaa !7372
  %tobool = trunc i8 %15 to i1, !dbg !7371, !ctir !141
  br i1 %tobool, label %if.then, label %if.end37, !dbg !7373

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata i64* %idx, metadata !7374, metadata !DIExpression()), !dbg !7376
  %16 = load i8, i8* %by_columns.addr, align 1, !dbg !7377, !tbaa !2493
  %tobool6 = trunc i8 %16 to i1, !dbg !7377
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !7377

cond.true7:                                       ; preds = %if.then
  %17 = load i64, i64* %filesno, align 8, !dbg !7378, !tbaa !2611
  %18 = load i64, i64* @cwd_n_used, align 8, !dbg !7379, !tbaa !2611
  %19 = load i64, i64* %i, align 8, !dbg !7380, !tbaa !2611
  %add = add i64 %18, %19, !dbg !7381
  %20 = load i64, i64* %i, align 8, !dbg !7382, !tbaa !2611
  %add8 = add i64 %20, 1, !dbg !7383
  %div = udiv i64 %add, %add8, !dbg !7384
  %div9 = udiv i64 %17, %div, !dbg !7385
  br label %cond.end12, !dbg !7377

cond.false10:                                     ; preds = %if.then
  %21 = load i64, i64* %filesno, align 8, !dbg !7386, !tbaa !2611
  %22 = load i64, i64* %i, align 8, !dbg !7387, !tbaa !2611
  %add11 = add i64 %22, 1, !dbg !7388
  %rem = urem i64 %21, %add11, !dbg !7389
  br label %cond.end12, !dbg !7377

cond.end12:                                       ; preds = %cond.false10, %cond.true7
  %cond13 = phi i64 [ %div9, %cond.true7 ], [ %rem, %cond.false10 ], !dbg !7377
  store i64 %cond13, i64* %idx, align 8, !dbg !7376, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %real_length, metadata !7390, metadata !DIExpression()), !dbg !7391
  %23 = load i64, i64* %name_length, align 8, !dbg !7392, !tbaa !2611
  %24 = load i64, i64* %idx, align 8, !dbg !7393, !tbaa !2611
  %25 = load i64, i64* %i, align 8, !dbg !7394, !tbaa !2611
  %cmp14 = icmp eq i64 %24, %25, !dbg !7395
  %26 = zext i1 %cmp14 to i64, !dbg !7393
  %cond15 = select i1 %cmp14, i32 0, i32 2, !dbg !7393
  %conv = sext i32 %cond15 to i64, !dbg !7396
  %add16 = add i64 %23, %conv, !dbg !7397
  store i64 %add16, i64* %real_length, align 8, !dbg !7391, !tbaa !2611
  %27 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7398, !tbaa !2474
  %28 = load i64, i64* %i, align 8, !dbg !7400, !tbaa !2611
  %arrayidx17 = getelementptr inbounds %struct.column_info, %struct.column_info* %27, i64 %28, !dbg !7398, !ctir !745
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx17, i32 0, i32 2, !dbg !7401, !ctir !740
  %29 = load i64*, i64** %col_arr, align 8, !dbg !7401, !tbaa !6182, !ctir !148
  %30 = load i64, i64* %idx, align 8, !dbg !7402, !tbaa !2611
  %arrayidx18 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !7398, !ctir !148
  %31 = load i64, i64* %arrayidx18, align 8, !dbg !7398, !tbaa !2611
  %32 = load i64, i64* %real_length, align 8, !dbg !7403, !tbaa !2611
  %cmp19 = icmp ult i64 %31, %32, !dbg !7404
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !7405

if.then21:                                        ; preds = %cond.end12
  %33 = load i64, i64* %real_length, align 8, !dbg !7406, !tbaa !2611
  %34 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7408, !tbaa !2474
  %35 = load i64, i64* %i, align 8, !dbg !7409, !tbaa !2611
  %arrayidx22 = getelementptr inbounds %struct.column_info, %struct.column_info* %34, i64 %35, !dbg !7408, !ctir !745
  %col_arr23 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx22, i32 0, i32 2, !dbg !7410, !ctir !740
  %36 = load i64*, i64** %col_arr23, align 8, !dbg !7410, !tbaa !6182, !ctir !148
  %37 = load i64, i64* %idx, align 8, !dbg !7411, !tbaa !2611
  %arrayidx24 = getelementptr inbounds i64, i64* %36, i64 %37, !dbg !7408, !ctir !148
  %38 = load i64, i64* %arrayidx24, align 8, !dbg !7408, !tbaa !2611
  %sub = sub i64 %33, %38, !dbg !7412
  %39 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7413, !tbaa !2474
  %40 = load i64, i64* %i, align 8, !dbg !7414, !tbaa !2611
  %arrayidx25 = getelementptr inbounds %struct.column_info, %struct.column_info* %39, i64 %40, !dbg !7413, !ctir !745
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx25, i32 0, i32 1, !dbg !7415, !ctir !740
  %41 = load i64, i64* %line_len, align 8, !dbg !7416, !tbaa !7417, !ctir !149
  %add26 = add i64 %41, %sub, !dbg !7416
  store i64 %add26, i64* %line_len, align 8, !dbg !7416, !tbaa !7417, !ctir !149
  %42 = load i64, i64* %real_length, align 8, !dbg !7418, !tbaa !2611
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7419, !tbaa !2474
  %44 = load i64, i64* %i, align 8, !dbg !7420, !tbaa !2611
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7419, !ctir !745
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7421, !ctir !740
  %45 = load i64*, i64** %col_arr28, align 8, !dbg !7421, !tbaa !6182, !ctir !148
  %46 = load i64, i64* %idx, align 8, !dbg !7422, !tbaa !2611
  %arrayidx29 = getelementptr inbounds i64, i64* %45, i64 %46, !dbg !7419, !ctir !148
  store i64 %42, i64* %arrayidx29, align 8, !dbg !7423, !tbaa !2611
  %47 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7424, !tbaa !2474
  %48 = load i64, i64* %i, align 8, !dbg !7425, !tbaa !2611
  %arrayidx30 = getelementptr inbounds %struct.column_info, %struct.column_info* %47, i64 %48, !dbg !7424, !ctir !745
  %line_len31 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx30, i32 0, i32 1, !dbg !7426, !ctir !740
  %49 = load i64, i64* %line_len31, align 8, !dbg !7426, !tbaa !7417, !ctir !149
  %50 = load i64, i64* @line_length, align 8, !dbg !7427, !tbaa !2611
  %cmp32 = icmp ult i64 %49, %50, !dbg !7428
  %51 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7429, !tbaa !2474
  %52 = load i64, i64* %i, align 8, !dbg !7430, !tbaa !2611
  %arrayidx34 = getelementptr inbounds %struct.column_info, %struct.column_info* %51, i64 %52, !dbg !7429, !ctir !745
  %valid_len35 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx34, i32 0, i32 0, !dbg !7431, !ctir !740
  %frombool36 = zext i1 %cmp32 to i8, !dbg !7432
  store i8 %frombool36, i8* %valid_len35, align 8, !dbg !7432, !tbaa !7372, !ctir !141
  br label %if.end, !dbg !7433

if.end:                                           ; preds = %if.then21, %cond.end12
  br label %if.end37, !dbg !7434

if.end37:                                         ; preds = %if.end, %for.body4
  br label %for.inc, !dbg !7435

for.inc:                                          ; preds = %if.end37
  %53 = load i64, i64* %i, align 8, !dbg !7436, !tbaa !2611
  %inc = add i64 %53, 1, !dbg !7436
  store i64 %inc, i64* %i, align 8, !dbg !7436, !tbaa !2611
  br label %for.cond2, !dbg !7437, !llvm.loop !7438

for.end:                                          ; preds = %for.cond2
  br label %for.inc38, !dbg !7440

for.inc38:                                        ; preds = %for.end
  %54 = load i64, i64* %filesno, align 8, !dbg !7441, !tbaa !2611
  %inc39 = add i64 %54, 1, !dbg !7441
  store i64 %inc39, i64* %filesno, align 8, !dbg !7441, !tbaa !2611
  br label %for.cond, !dbg !7442, !llvm.loop !7443

for.end40:                                        ; preds = %for.cond
  %55 = load i64, i64* %max_cols, align 8, !dbg !7445, !tbaa !2611
  store i64 %55, i64* %cols, align 8, !dbg !7447, !tbaa !2611
  br label %for.cond41, !dbg !7448

for.cond41:                                       ; preds = %for.inc51, %for.end40
  %56 = load i64, i64* %cols, align 8, !dbg !7449, !tbaa !2611
  %cmp42 = icmp ult i64 1, %56, !dbg !7451
  br i1 %cmp42, label %for.body44, label %for.end52, !dbg !7452

for.body44:                                       ; preds = %for.cond41
  %57 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7453, !tbaa !2474
  %58 = load i64, i64* %cols, align 8, !dbg !7456, !tbaa !2611
  %sub45 = sub i64 %58, 1, !dbg !7457
  %arrayidx46 = getelementptr inbounds %struct.column_info, %struct.column_info* %57, i64 %sub45, !dbg !7453, !ctir !745
  %valid_len47 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx46, i32 0, i32 0, !dbg !7458, !ctir !740
  %59 = load i8, i8* %valid_len47, align 8, !dbg !7458, !tbaa !7372
  %tobool48 = trunc i8 %59 to i1, !dbg !7458, !ctir !141
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !7459

if.then49:                                        ; preds = %for.body44
  br label %for.end52, !dbg !7460

if.end50:                                         ; preds = %for.body44
  br label %for.inc51, !dbg !7461

for.inc51:                                        ; preds = %if.end50
  %60 = load i64, i64* %cols, align 8, !dbg !7462, !tbaa !2611
  %dec = add i64 %60, -1, !dbg !7462
  store i64 %dec, i64* %cols, align 8, !dbg !7462, !tbaa !2611
  br label %for.cond41, !dbg !7463, !llvm.loop !7464

for.end52:                                        ; preds = %if.then49, %for.cond41
  %61 = load i64, i64* %cols, align 8, !dbg !7466, !tbaa !2611
  ret i64 %61, !dbg !7467
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @length_of_file_name_and_frills(%struct.fileinfo* %f) #0 !dbg !7468 !ctir !734 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %len = alloca i64, align 8, !ctir !149
  %buf = alloca [652 x i8], align 16, !ctir !610
  %c = alloca i8, align 1, !ctir !144
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7469, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7471, metadata !DIExpression()), !dbg !7472
  store i64 0, i64* %len, align 8, !dbg !7472, !tbaa !2611
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !7473, metadata !DIExpression()), !dbg !7474
  %0 = load i8, i8* @print_inode, align 1, !dbg !7475, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !7475
  br i1 %tobool, label %if.then, label %if.end, !dbg !7477

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !7478, !tbaa !2529
  %cmp = icmp eq i32 %1, 4, !dbg !7479
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7478

cond.true:                                        ; preds = %if.then
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7480, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !7481, !ctir !183
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !7482, !ctir !190
  %3 = load i64, i64* %st_ino, align 8, !dbg !7482, !tbaa !3831, !ctir !196
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !7483
  %call = call i8* @umaxtostr(i64 %3, i8* %arraydecay), !dbg !7484
  %call1 = call i64 @strlen(i8* %call) #16, !dbg !7485
  br label %cond.end, !dbg !7478

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* @inode_number_width, align 4, !dbg !7486, !tbaa !2468
  %conv = sext i32 %4 to i64, !dbg !7486
  br label %cond.end, !dbg !7478

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call1, %cond.true ], [ %conv, %cond.false ], !dbg !7478
  %add = add i64 1, %cond, !dbg !7487
  %5 = load i64, i64* %len, align 8, !dbg !7488, !tbaa !2611
  %add2 = add i64 %5, %add, !dbg !7488
  store i64 %add2, i64* %len, align 8, !dbg !7488, !tbaa !2611
  br label %if.end, !dbg !7489

if.end:                                           ; preds = %cond.end, %entry
  %6 = load i8, i8* @print_block_size, align 1, !dbg !7490, !tbaa !2493
  %tobool3 = trunc i8 %6 to i1, !dbg !7490
  br i1 %tobool3, label %if.then4, label %if.end23, !dbg !7492

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* @format, align 4, !dbg !7493, !tbaa !2529
  %cmp5 = icmp eq i32 %7, 4, !dbg !7494
  br i1 %cmp5, label %cond.true7, label %cond.false17, !dbg !7493

cond.true7:                                       ; preds = %if.then4
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7495, !tbaa !2474
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 7, !dbg !7496, !ctir !183
  %9 = load i8, i8* %stat_ok, align 8, !dbg !7496, !tbaa !4046
  %tobool8 = trunc i8 %9 to i1, !dbg !7496, !ctir !141
  br i1 %tobool8, label %cond.false10, label %cond.true9, !dbg !7497

cond.true9:                                       ; preds = %cond.true7
  br label %cond.end14, !dbg !7497

cond.false10:                                     ; preds = %cond.true7
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7498, !tbaa !2474
  %stat11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !7498, !ctir !183
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat11, i32 0, i32 10, !dbg !7498, !ctir !190
  %11 = load i64, i64* %st_blocks, align 8, !dbg !7498, !tbaa !4247, !ctir !211
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !7499
  %12 = load i32, i32* @human_output_opts, align 4, !dbg !7500, !tbaa !2468
  %13 = load i64, i64* @output_block_size, align 8, !dbg !7501, !tbaa !2611
  %call13 = call i8* @human_readable(i64 %11, i8* %arraydecay12, i32 %12, i64 512, i64 %13), !dbg !7502
  br label %cond.end14, !dbg !7497

cond.end14:                                       ; preds = %cond.false10, %cond.true9
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true9 ], [ %call13, %cond.false10 ], !dbg !7497
  %call16 = call i64 @strlen(i8* %cond15) #16, !dbg !7503
  br label %cond.end19, !dbg !7493

cond.false17:                                     ; preds = %if.then4
  %14 = load i32, i32* @block_size_width, align 4, !dbg !7504, !tbaa !2468
  %conv18 = sext i32 %14 to i64, !dbg !7504
  br label %cond.end19, !dbg !7493

cond.end19:                                       ; preds = %cond.false17, %cond.end14
  %cond20 = phi i64 [ %call16, %cond.end14 ], [ %conv18, %cond.false17 ], !dbg !7493
  %add21 = add i64 1, %cond20, !dbg !7505
  %15 = load i64, i64* %len, align 8, !dbg !7506, !tbaa !2611
  %add22 = add i64 %15, %add21, !dbg !7506
  store i64 %add22, i64* %len, align 8, !dbg !7506, !tbaa !2611
  br label %if.end23, !dbg !7507

if.end23:                                         ; preds = %cond.end19, %if.end
  %16 = load i8, i8* @print_scontext, align 1, !dbg !7508, !tbaa !2493
  %tobool24 = trunc i8 %16 to i1, !dbg !7508
  br i1 %tobool24, label %if.then25, label %if.end36, !dbg !7510

if.then25:                                        ; preds = %if.end23
  %17 = load i32, i32* @format, align 4, !dbg !7511, !tbaa !2529
  %cmp26 = icmp eq i32 %17, 4, !dbg !7512
  br i1 %cmp26, label %cond.true28, label %cond.false30, !dbg !7511

cond.true28:                                      ; preds = %if.then25
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7513, !tbaa !2474
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 6, !dbg !7514, !ctir !183
  %19 = load i8*, i8** %scontext, align 8, !dbg !7514, !tbaa !4093, !ctir !143
  %call29 = call i64 @strlen(i8* %19) #16, !dbg !7515
  br label %cond.end32, !dbg !7511

cond.false30:                                     ; preds = %if.then25
  %20 = load i32, i32* @scontext_width, align 4, !dbg !7516, !tbaa !2468
  %conv31 = sext i32 %20 to i64, !dbg !7516
  br label %cond.end32, !dbg !7511

cond.end32:                                       ; preds = %cond.false30, %cond.true28
  %cond33 = phi i64 [ %call29, %cond.true28 ], [ %conv31, %cond.false30 ], !dbg !7511
  %add34 = add i64 1, %cond33, !dbg !7517
  %21 = load i64, i64* %len, align 8, !dbg !7518, !tbaa !2611
  %add35 = add i64 %21, %add34, !dbg !7518
  store i64 %add35, i64* %len, align 8, !dbg !7518, !tbaa !2611
  br label %if.end36, !dbg !7519

if.end36:                                         ; preds = %cond.end32, %if.end23
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7520, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 0, !dbg !7521, !ctir !183
  %23 = load i8*, i8** %name, align 8, !dbg !7521, !tbaa !4040, !ctir !143
  %24 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !7522, !tbaa !2474
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7523, !tbaa !2474
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 11, !dbg !7524, !ctir !183
  %26 = load i32, i32* %quoted, align 4, !dbg !7524, !tbaa !3842, !ctir !27
  %call37 = call i64 @quote_name_width(i8* %23, %struct.quoting_options* %24, i32 %26), !dbg !7525
  %27 = load i64, i64* %len, align 8, !dbg !7526, !tbaa !2611
  %add38 = add i64 %27, %call37, !dbg !7526
  store i64 %add38, i64* %len, align 8, !dbg !7526, !tbaa !2611
  %28 = load i32, i32* @indicator_style, align 4, !dbg !7527, !tbaa !2529
  %cmp39 = icmp ne i32 %28, 0, !dbg !7529
  br i1 %cmp39, label %if.then41, label %if.end51, !dbg !7530

if.then41:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7531, metadata !DIExpression()), !dbg !7533
  %29 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7534, !tbaa !2474
  %stat_ok42 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %29, i32 0, i32 7, !dbg !7535, !ctir !183
  %30 = load i8, i8* %stat_ok42, align 8, !dbg !7535, !tbaa !4046
  %tobool43 = trunc i8 %30 to i1, !dbg !7535, !ctir !141
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7536, !tbaa !2474
  %stat44 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !7537, !ctir !183
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat44, i32 0, i32 3, !dbg !7538, !ctir !190
  %32 = load i32, i32* %st_mode, align 8, !dbg !7538, !tbaa !4005, !ctir !200
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7539, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %33, i32 0, i32 4, !dbg !7540, !ctir !183
  %34 = load i32, i32* %filetype, align 8, !dbg !7540, !tbaa !3838, !ctir !36
  %call45 = call signext i8 @get_type_indicator(i1 zeroext %tobool43, i32 %32, i32 %34), !dbg !7541
  store i8 %call45, i8* %c, align 1, !dbg !7533, !tbaa !2529
  %35 = load i8, i8* %c, align 1, !dbg !7542, !tbaa !2529
  %conv46 = sext i8 %35 to i32, !dbg !7542
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !7543
  %conv48 = zext i1 %cmp47 to i32, !dbg !7543
  %conv49 = sext i32 %conv48 to i64, !dbg !7544
  %36 = load i64, i64* %len, align 8, !dbg !7545, !tbaa !2611
  %add50 = add i64 %36, %conv49, !dbg !7545
  store i64 %add50, i64* %len, align 8, !dbg !7545, !tbaa !2611
  br label %if.end51, !dbg !7546

if.end51:                                         ; preds = %if.then41, %if.end36
  %37 = load i64, i64* %len, align 8, !dbg !7547, !tbaa !2611
  ret i64 %37, !dbg !7548
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @indent(i64 %from, i64 %to) #0 !dbg !7549 !ctir !748 {
entry:
  %from.addr = alloca i64, align 8, !ctir !149
  %to.addr = alloca i64, align 8, !ctir !149
  store i64 %from, i64* %from.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  store i64 %to, i64* %to.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  br label %while.cond, !dbg !7554

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %from.addr, align 8, !dbg !7555, !tbaa !2611
  %1 = load i64, i64* %to.addr, align 8, !dbg !7556, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !7557
  br i1 %cmp, label %while.body, label %while.end, !dbg !7554

while.body:                                       ; preds = %while.cond
  %2 = load i64, i64* @tabsize, align 8, !dbg !7558, !tbaa !2611
  %cmp1 = icmp ne i64 %2, 0, !dbg !7561
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !7562

land.lhs.true:                                    ; preds = %while.body
  %3 = load i64, i64* %to.addr, align 8, !dbg !7563, !tbaa !2611
  %4 = load i64, i64* @tabsize, align 8, !dbg !7564, !tbaa !2611
  %div = udiv i64 %3, %4, !dbg !7565
  %5 = load i64, i64* %from.addr, align 8, !dbg !7566, !tbaa !2611
  %add = add i64 %5, 1, !dbg !7567
  %6 = load i64, i64* @tabsize, align 8, !dbg !7568, !tbaa !2611
  %div2 = udiv i64 %add, %6, !dbg !7569
  %cmp3 = icmp ugt i64 %div, %div2, !dbg !7570
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7571

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @putchar_unlocked(i32 9), !dbg !7572
  %7 = load i64, i64* @tabsize, align 8, !dbg !7574, !tbaa !2611
  %8 = load i64, i64* %from.addr, align 8, !dbg !7575, !tbaa !2611
  %9 = load i64, i64* @tabsize, align 8, !dbg !7576, !tbaa !2611
  %rem = urem i64 %8, %9, !dbg !7577
  %sub = sub i64 %7, %rem, !dbg !7578
  %10 = load i64, i64* %from.addr, align 8, !dbg !7579, !tbaa !2611
  %add4 = add i64 %10, %sub, !dbg !7579
  store i64 %add4, i64* %from.addr, align 8, !dbg !7579, !tbaa !2611
  br label %if.end, !dbg !7580

if.else:                                          ; preds = %land.lhs.true, %while.body
  %call5 = call i32 @putchar_unlocked(i32 32), !dbg !7581
  %11 = load i64, i64* %from.addr, align 8, !dbg !7583, !tbaa !2611
  %inc = add i64 %11, 1, !dbg !7583
  store i64 %inc, i64* %from.addr, align 8, !dbg !7583, !tbaa !2611
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !7554, !llvm.loop !7584

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7586
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_width(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting) #0 !dbg !7587 !ctir !736 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !621
  %needs_general_quoting.addr = alloca i32, align 4, !ctir !27
  %smallbuf = alloca [8192 x i8], align 16, !ctir !623
  %buf = alloca i8*, align 8, !ctir !143
  %width = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7588, metadata !DIExpression()), !dbg !7589
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !7590, metadata !DIExpression()), !dbg !7591
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !7594, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7596, metadata !DIExpression()), !dbg !7597
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7598
  store i8* %arraydecay, i8** %buf, align 8, !dbg !7597, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %width, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !7601, metadata !DIExpression()), !dbg !7602
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7603, !tbaa !2474
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !7604, !tbaa !2474
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !7605, !tbaa !2468
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* %width, i8* %pad), !dbg !7606
  %3 = load i8*, i8** %buf, align 8, !dbg !7607, !tbaa !2474
  %arraydecay1 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7609
  %cmp = icmp ne i8* %3, %arraydecay1, !dbg !7610
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7611

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %buf, align 8, !dbg !7612, !tbaa !2474
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7613, !tbaa !2474
  %cmp2 = icmp ne i8* %4, %5, !dbg !7614
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7615

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %buf, align 8, !dbg !7616, !tbaa !2474
  call void @free(i8* %6) #13, !dbg !7617
  br label %if.end, !dbg !7617

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i8, i8* %pad, align 1, !dbg !7618, !tbaa !2493
  %tobool = trunc i8 %7 to i1, !dbg !7618
  %conv = zext i1 %tobool to i64, !dbg !7618
  %8 = load i64, i64* %width, align 8, !dbg !7619, !tbaa !2611
  %add = add i64 %8, %conv, !dbg !7619
  store i64 %add, i64* %width, align 8, !dbg !7619, !tbaa !2611
  %9 = load i64, i64* %width, align 8, !dbg !7620, !tbaa !2611
  ret i64 %9, !dbg !7621
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_column_info() #0 !dbg !1010 !ctir !336 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %new_column_info_alloc = alloca i64, align 8, !ctir !149
  %p = alloca i64*, align 8, !ctir !148
  %column_info_growth = alloca i64, align 8, !ctir !149
  %s = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7624, metadata !DIExpression()), !dbg !7625
  %0 = load i64, i64* @max_idx, align 8, !dbg !7626, !tbaa !2611
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7626, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !7626
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7626

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7626, !tbaa !2611
  br label %cond.end, !dbg !7626

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7626, !tbaa !2611
  br label %cond.end, !dbg !7626

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7626
  store i64 %cond, i64* %max_cols, align 8, !dbg !7625, !tbaa !2611
  %4 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7627, !tbaa !2611
  %5 = load i64, i64* %max_cols, align 8, !dbg !7629, !tbaa !2611
  %cmp1 = icmp ult i64 %4, %5, !dbg !7630
  br i1 %cmp1, label %if.then, label %if.end16, !dbg !7631

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %new_column_info_alloc, metadata !7632, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.declare(metadata i64** %p, metadata !7635, metadata !DIExpression()), !dbg !7636
  %6 = load i64, i64* %max_cols, align 8, !dbg !7637, !tbaa !2611
  %7 = load i64, i64* @max_idx, align 8, !dbg !7639, !tbaa !2611
  %div = udiv i64 %7, 2, !dbg !7640
  %cmp2 = icmp ult i64 %6, %div, !dbg !7641
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7642

if.then3:                                         ; preds = %if.then
  %8 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7643, !tbaa !2474
  %9 = bitcast %struct.column_info* %8 to i8*, !dbg !7643
  %10 = load i64, i64* %max_cols, align 8, !dbg !7645, !tbaa !2611
  %call = call i8* @xnrealloc(i8* %9, i64 %10, i64 48), !dbg !7646
  %11 = bitcast i8* %call to %struct.column_info*, !dbg !7646
  store %struct.column_info* %11, %struct.column_info** @column_info, align 8, !dbg !7647, !tbaa !2474
  %12 = load i64, i64* %max_cols, align 8, !dbg !7648, !tbaa !2611
  %mul = mul i64 2, %12, !dbg !7649
  store i64 %mul, i64* %new_column_info_alloc, align 8, !dbg !7650, !tbaa !2611
  br label %if.end, !dbg !7651

if.else:                                          ; preds = %if.then
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7652, !tbaa !2474
  %14 = bitcast %struct.column_info* %13 to i8*, !dbg !7652
  %15 = load i64, i64* @max_idx, align 8, !dbg !7654, !tbaa !2611
  %call4 = call i8* @xnrealloc(i8* %14, i64 %15, i64 24), !dbg !7655
  %16 = bitcast i8* %call4 to %struct.column_info*, !dbg !7655
  store %struct.column_info* %16, %struct.column_info** @column_info, align 8, !dbg !7656, !tbaa !2474
  %17 = load i64, i64* @max_idx, align 8, !dbg !7657, !tbaa !2611
  store i64 %17, i64* %new_column_info_alloc, align 8, !dbg !7658, !tbaa !2611
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  call void @llvm.dbg.declare(metadata i64* %column_info_growth, metadata !7659, metadata !DIExpression()), !dbg !7661
  %18 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7662, !tbaa !2611
  %19 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7663, !tbaa !2611
  %sub = sub i64 %18, %19, !dbg !7664
  store i64 %sub, i64* %column_info_growth, align 8, !dbg !7661, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s, metadata !7665, metadata !DIExpression()), !dbg !7666
  %20 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7667, !tbaa !2611
  %add = add i64 %20, 1, !dbg !7668
  %21 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7669, !tbaa !2611
  %add5 = add i64 %add, %21, !dbg !7670
  store i64 %add5, i64* %s, align 8, !dbg !7666, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %t, metadata !7671, metadata !DIExpression()), !dbg !7672
  %22 = load i64, i64* %s, align 8, !dbg !7673, !tbaa !2611
  %23 = load i64, i64* %column_info_growth, align 8, !dbg !7674, !tbaa !2611
  %mul6 = mul i64 %22, %23, !dbg !7675
  store i64 %mul6, i64* %t, align 8, !dbg !7672, !tbaa !2611
  %24 = load i64, i64* %s, align 8, !dbg !7676, !tbaa !2611
  %25 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7678, !tbaa !2611
  %cmp7 = icmp ult i64 %24, %25, !dbg !7679
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !7680

lor.lhs.false:                                    ; preds = %if.end
  %26 = load i64, i64* %t, align 8, !dbg !7681, !tbaa !2611
  %27 = load i64, i64* %column_info_growth, align 8, !dbg !7682, !tbaa !2611
  %div8 = udiv i64 %26, %27, !dbg !7683
  %28 = load i64, i64* %s, align 8, !dbg !7684, !tbaa !2611
  %cmp9 = icmp ne i64 %div8, %28, !dbg !7685
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7686

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  call void @xalloc_die() #14, !dbg !7687
  unreachable, !dbg !7687

if.end11:                                         ; preds = %lor.lhs.false
  %29 = load i64, i64* %t, align 8, !dbg !7688, !tbaa !2611
  %div12 = udiv i64 %29, 2, !dbg !7689
  %call13 = call noalias i8* @xnmalloc(i64 %div12, i64 8), !dbg !7690
  %30 = bitcast i8* %call13 to i64*, !dbg !7690
  store i64* %30, i64** %p, align 8, !dbg !7691, !tbaa !2474
  %31 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7692, !tbaa !2611
  store i64 %31, i64* %i, align 8, !dbg !7694, !tbaa !2611
  br label %for.cond, !dbg !7695

for.cond:                                         ; preds = %for.inc, %if.end11
  %32 = load i64, i64* %i, align 8, !dbg !7696, !tbaa !2611
  %33 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7698, !tbaa !2611
  %cmp14 = icmp ult i64 %32, %33, !dbg !7699
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7700

for.body:                                         ; preds = %for.cond
  %34 = load i64*, i64** %p, align 8, !dbg !7701, !tbaa !2474
  %35 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7703, !tbaa !2474
  %36 = load i64, i64* %i, align 8, !dbg !7704, !tbaa !2611
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %35, i64 %36, !dbg !7703, !ctir !745
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx, i32 0, i32 2, !dbg !7705, !ctir !740
  store i64* %34, i64** %col_arr, align 8, !dbg !7706, !tbaa !6182, !ctir !148
  %37 = load i64, i64* %i, align 8, !dbg !7707, !tbaa !2611
  %add15 = add i64 %37, 1, !dbg !7708
  %38 = load i64*, i64** %p, align 8, !dbg !7709, !tbaa !2474
  %add.ptr = getelementptr inbounds i64, i64* %38, i64 %add15, !dbg !7709
  store i64* %add.ptr, i64** %p, align 8, !dbg !7709, !tbaa !2474
  br label %for.inc, !dbg !7710

for.inc:                                          ; preds = %for.body
  %39 = load i64, i64* %i, align 8, !dbg !7711, !tbaa !2611
  %inc = add i64 %39, 1, !dbg !7711
  store i64 %inc, i64* %i, align 8, !dbg !7711, !tbaa !2611
  br label %for.cond, !dbg !7712, !llvm.loop !7713

for.end:                                          ; preds = %for.cond
  %40 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7715, !tbaa !2611
  store i64 %40, i64* @init_column_info.column_info_alloc, align 8, !dbg !7716, !tbaa !2611
  br label %if.end16, !dbg !7717

if.end16:                                         ; preds = %for.end, %cond.end
  store i64 0, i64* %i, align 8, !dbg !7718, !tbaa !2611
  br label %for.cond17, !dbg !7720

for.cond17:                                       ; preds = %for.inc33, %if.end16
  %41 = load i64, i64* %i, align 8, !dbg !7721, !tbaa !2611
  %42 = load i64, i64* %max_cols, align 8, !dbg !7723, !tbaa !2611
  %cmp18 = icmp ult i64 %41, %42, !dbg !7724
  br i1 %cmp18, label %for.body19, label %for.end35, !dbg !7725

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7726, metadata !DIExpression()), !dbg !7728
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7729, !tbaa !2474
  %44 = load i64, i64* %i, align 8, !dbg !7730, !tbaa !2611
  %arrayidx20 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7729, !ctir !745
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx20, i32 0, i32 0, !dbg !7731, !ctir !740
  store i8 1, i8* %valid_len, align 8, !dbg !7732, !tbaa !7372, !ctir !141
  %45 = load i64, i64* %i, align 8, !dbg !7733, !tbaa !2611
  %add21 = add i64 %45, 1, !dbg !7734
  %mul22 = mul i64 %add21, 3, !dbg !7735
  %46 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7736, !tbaa !2474
  %47 = load i64, i64* %i, align 8, !dbg !7737, !tbaa !2611
  %arrayidx23 = getelementptr inbounds %struct.column_info, %struct.column_info* %46, i64 %47, !dbg !7736, !ctir !745
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx23, i32 0, i32 1, !dbg !7738, !ctir !740
  store i64 %mul22, i64* %line_len, align 8, !dbg !7739, !tbaa !7417, !ctir !149
  store i64 0, i64* %j, align 8, !dbg !7740, !tbaa !2611
  br label %for.cond24, !dbg !7742

for.cond24:                                       ; preds = %for.inc30, %for.body19
  %48 = load i64, i64* %j, align 8, !dbg !7743, !tbaa !2611
  %49 = load i64, i64* %i, align 8, !dbg !7745, !tbaa !2611
  %cmp25 = icmp ule i64 %48, %49, !dbg !7746
  br i1 %cmp25, label %for.body26, label %for.end32, !dbg !7747

for.body26:                                       ; preds = %for.cond24
  %50 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7748, !tbaa !2474
  %51 = load i64, i64* %i, align 8, !dbg !7749, !tbaa !2611
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %50, i64 %51, !dbg !7748, !ctir !745
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7750, !ctir !740
  %52 = load i64*, i64** %col_arr28, align 8, !dbg !7750, !tbaa !6182, !ctir !148
  %53 = load i64, i64* %j, align 8, !dbg !7751, !tbaa !2611
  %arrayidx29 = getelementptr inbounds i64, i64* %52, i64 %53, !dbg !7748, !ctir !148
  store i64 3, i64* %arrayidx29, align 8, !dbg !7752, !tbaa !2611
  br label %for.inc30, !dbg !7748

for.inc30:                                        ; preds = %for.body26
  %54 = load i64, i64* %j, align 8, !dbg !7753, !tbaa !2611
  %inc31 = add i64 %54, 1, !dbg !7753
  store i64 %inc31, i64* %j, align 8, !dbg !7753, !tbaa !2611
  br label %for.cond24, !dbg !7754, !llvm.loop !7755

for.end32:                                        ; preds = %for.cond24
  br label %for.inc33, !dbg !7757

for.inc33:                                        ; preds = %for.end32
  %55 = load i64, i64* %i, align 8, !dbg !7758, !tbaa !2611
  %inc34 = add i64 %55, 1, !dbg !7758
  store i64 %inc34, i64* %i, align 8, !dbg !7758, !tbaa !2611
  br label %for.cond17, !dbg !7759, !llvm.loop !7760

for.end35:                                        ; preds = %for.cond17
  ret void, !dbg !7762
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_directory(%struct.fileinfo* %f) #0 !dbg !7763 !ctir !685 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7766, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !7767, !ctir !183
  %1 = load i32, i32* %filetype, align 8, !dbg !7767, !tbaa !3838, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !7768
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7769

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7770, !tbaa !2474
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !7771, !ctir !183
  %3 = load i32, i32* %filetype1, align 8, !dbg !7771, !tbaa !3838, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !7772
  br label %lor.end, !dbg !7769

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %4, !dbg !7773
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @basename_is_dot_or_dotdot(i8* %name) #0 !dbg !7774 !ctir !556 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %base = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7777, metadata !DIExpression()), !dbg !7778
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7779, !tbaa !2474
  %call = call i8* @last_component(i8* %0) #16, !dbg !7780
  store i8* %call, i8** %base, align 8, !dbg !7778, !tbaa !2474
  %1 = load i8*, i8** %base, align 8, !dbg !7781, !tbaa !2474
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %1), !dbg !7782
  ret i1 %call1, !dbg !7783
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_ent(%struct.fileinfo* %f) #0 !dbg !7784 !ctir !651 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !250
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7785, metadata !DIExpression()), !dbg !7786
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7787, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !7788, !ctir !184
  %1 = load i8*, i8** %name, align 8, !dbg !7788, !tbaa !4040, !ctir !143
  call void @free(i8* %1) #13, !dbg !7789
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7790, !tbaa !2474
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 1, !dbg !7791, !ctir !184
  %3 = load i8*, i8** %linkname, align 8, !dbg !7791, !tbaa !4178, !ctir !143
  call void @free(i8* %3) #13, !dbg !7792
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7793, !tbaa !2474
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 2, !dbg !7794, !ctir !184
  %5 = load i8*, i8** %absolute_name, align 8, !dbg !7794, !tbaa !3963, !ctir !143
  call void @free(i8* %5) #13, !dbg !7795
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7796, !tbaa !2474
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 6, !dbg !7798, !ctir !184
  %7 = load i8*, i8** %scontext, align 8, !dbg !7798, !tbaa !4093, !ctir !143
  %cmp = icmp ne i8* %7, getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), !dbg !7799
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7800

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_smack_enabled(), !dbg !7801
  br i1 %call, label %if.then1, label %if.else, !dbg !7804

if.then1:                                         ; preds = %if.then
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7805, !tbaa !2474
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 6, !dbg !7806, !ctir !184
  %9 = load i8*, i8** %scontext2, align 8, !dbg !7806, !tbaa !4093, !ctir !143
  call void @free(i8* %9) #13, !dbg !7807
  br label %if.end, !dbg !7807

if.else:                                          ; preds = %if.then
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7808, !tbaa !2474
  %scontext3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 6, !dbg !7809, !ctir !184
  %11 = load i8*, i8** %scontext3, align 8, !dbg !7809, !tbaa !4093, !ctir !143
  call void @freecon(i8* %11), !dbg !7810
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end4, !dbg !7811

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !7812
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #0 !dbg !7813 !ctir !590 {
entry:
  ret i1 false, !dbg !7815
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #0 !dbg !7816 !ctir !556 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %file_name.addr = alloca i8*, align 8, !ctir !146
  %sep = alloca i8, align 1, !ctir !144
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !7817, metadata !DIExpression()), !dbg !7818
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !7819, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7819, !ctir !146
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7819, !tbaa !2529
  %conv = sext i8 %1 to i32, !dbg !7819
  %cmp = icmp eq i32 %conv, 46, !dbg !7821
  br i1 %cmp, label %if.then, label %if.else, !dbg !7822

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !7823, metadata !DIExpression()), !dbg !7825
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !7826, !tbaa !2474
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !7827, !tbaa !2474
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7827, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7827, !tbaa !2529
  %conv3 = sext i8 %4 to i32, !dbg !7827
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !7828
  %conv5 = zext i1 %cmp4 to i32, !dbg !7828
  %add = add nsw i32 %conv5, 1, !dbg !7829
  %idxprom = sext i32 %add to i64, !dbg !7826
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !7826, !ctir !146
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !7826, !tbaa !2529
  store i8 %5, i8* %sep, align 1, !dbg !7825, !tbaa !2529
  %6 = load i8, i8* %sep, align 1, !dbg !7830, !tbaa !2529
  %tobool = icmp ne i8 %6, 0, !dbg !7830
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7831

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !7832, !tbaa !2529
  %conv7 = sext i8 %7 to i32, !dbg !7832
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !7832
  br label %lor.end, !dbg !7831

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !7833
  br label %return, !dbg !7833

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7834
  br label %return, !dbg !7834

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !7835
  ret i1 %9, !dbg !7835
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_ordering_vector() #0 !dbg !7836 !ctir !336 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7837, metadata !DIExpression()), !dbg !7839
  store i64 0, i64* %i, align 8, !dbg !7839, !tbaa !2611
  br label %for.cond, !dbg !7840

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !7841, !tbaa !2611
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7843, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !7844
  br i1 %cmp, label %for.body, label %for.end, !dbg !7845

for.body:                                         ; preds = %for.cond
  %2 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !7846, !tbaa !2474
  %3 = load i64, i64* %i, align 8, !dbg !7847, !tbaa !2611
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i64 %3, !dbg !7846, !ctir !250
  %4 = bitcast %struct.fileinfo* %arrayidx to i8*, !dbg !7848
  %5 = load i8**, i8*** @sorted_file, align 8, !dbg !7849, !tbaa !2474
  %6 = load i64, i64* %i, align 8, !dbg !7850, !tbaa !2611
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 %6, !dbg !7849, !ctir !650
  store i8* %4, i8** %arrayidx1, align 8, !dbg !7851, !tbaa !2474
  br label %for.inc, !dbg !7849

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !7852, !tbaa !2611
  %inc = add i64 %7, 1, !dbg !7852
  store i64 %inc, i64* %i, align 8, !dbg !7852, !tbaa !2611
  br label %for.cond, !dbg !7853, !llvm.loop !7854

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7856
}

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%struct.__jmp_buf_tag*) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7857 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7858, metadata !DIExpression()), !dbg !7859
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7860, metadata !DIExpression()), !dbg !7859
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7859, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7859
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7859, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7859
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7859
  ret i32 %call, !dbg !7859
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7861 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7862, metadata !DIExpression()), !dbg !7863
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7864, metadata !DIExpression()), !dbg !7863
  br label %do.body, !dbg !7863

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7865, metadata !DIExpression()), !dbg !7867
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7867, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7867
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7867
  %frombool = zext i1 %call to i8, !dbg !7867
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7867, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7868, metadata !DIExpression()), !dbg !7867
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7867, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7867
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7867
  %frombool2 = zext i1 %call1 to i8, !dbg !7867
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7867, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7869, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7869
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7869

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7869, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7869
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7867

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7869
  br label %return, !dbg !7869

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7871, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7871
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7871

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7871, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7871
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7867

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7871
  br label %return, !dbg !7871

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7867

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7863, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7863
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7863, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7863
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7863
  store i32 %call9, i32* %retval, align 4, !dbg !7863
  br label %return, !dbg !7863

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7863
  ret i32 %12, !dbg !7863
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7873 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7876, metadata !DIExpression()), !dbg !7875
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7875, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7875
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7875, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7875
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7875
  ret i32 %call, !dbg !7875
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7877 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7880, metadata !DIExpression()), !dbg !7879
  br label %do.body, !dbg !7879

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7881, metadata !DIExpression()), !dbg !7883
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7883, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7883
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7883
  %frombool = zext i1 %call to i8, !dbg !7883
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7883, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7884, metadata !DIExpression()), !dbg !7883
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7883, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7883
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7883
  %frombool2 = zext i1 %call1 to i8, !dbg !7883
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7883, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7885, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7885
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7885

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7885, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7885
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7883

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7885
  br label %return, !dbg !7885

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7887, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7887
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7887

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7887, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7887
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7883

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7887
  br label %return, !dbg !7887

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7883

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7879, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7879
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7879, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7879
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7879
  store i32 %call9, i32* %retval, align 4, !dbg !7879
  br label %return, !dbg !7879

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7879
  ret i32 %12, !dbg !7879
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_name(i8* %a, i8* %b) #9 !dbg !7889 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7890, metadata !DIExpression()), !dbg !7891
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7892, metadata !DIExpression()), !dbg !7891
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7891, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7891
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7891, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7891
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7891
  ret i32 %call, !dbg !7891
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7893 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7894, metadata !DIExpression()), !dbg !7895
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7896, metadata !DIExpression()), !dbg !7895
  br label %do.body, !dbg !7895

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7897, metadata !DIExpression()), !dbg !7899
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7899, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7899
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7899
  %frombool = zext i1 %call to i8, !dbg !7899
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7899, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7900, metadata !DIExpression()), !dbg !7899
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7899, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7899
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7899
  %frombool2 = zext i1 %call1 to i8, !dbg !7899
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7899, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7901, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7901
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7901

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7901, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7901
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7899

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7901
  br label %return, !dbg !7901

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7903, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7903
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7903

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7903, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7903
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7899

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7903
  br label %return, !dbg !7903

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7899

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7895, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7895
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7895, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7895
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7895
  store i32 %call9, i32* %retval, align 4, !dbg !7895
  br label %return, !dbg !7895

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7895
  ret i32 %12, !dbg !7895
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_name(i8* %a, i8* %b) #9 !dbg !7905 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7908, metadata !DIExpression()), !dbg !7907
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7907, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7907
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7907, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7907
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7907
  ret i32 %call, !dbg !7907
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7909 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7910, metadata !DIExpression()), !dbg !7911
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7912, metadata !DIExpression()), !dbg !7911
  br label %do.body, !dbg !7911

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7913, metadata !DIExpression()), !dbg !7915
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7915, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7915
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7915
  %frombool = zext i1 %call to i8, !dbg !7915
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7915, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7916, metadata !DIExpression()), !dbg !7915
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7915, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7915
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7915
  %frombool2 = zext i1 %call1 to i8, !dbg !7915
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7915, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7917, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7917
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7917

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7917, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7917
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7915

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7917
  br label %return, !dbg !7917

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7919, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7919
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7919

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7919, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7919
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7915

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7915

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7911, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7911
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7911, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7911
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7911
  store i32 %call9, i32* %retval, align 4, !dbg !7911
  br label %return, !dbg !7911

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7911
  ret i32 %12, !dbg !7911
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7921 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7924, metadata !DIExpression()), !dbg !7923
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7923, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7923
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7923, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7923
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7923
  ret i32 %call, !dbg !7923
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7925 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7926, metadata !DIExpression()), !dbg !7927
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7928, metadata !DIExpression()), !dbg !7927
  br label %do.body, !dbg !7927

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7929, metadata !DIExpression()), !dbg !7931
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7931, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7931
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7931
  %frombool = zext i1 %call to i8, !dbg !7931
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7931, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7932, metadata !DIExpression()), !dbg !7931
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7931, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7931
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7931
  %frombool2 = zext i1 %call1 to i8, !dbg !7931
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7931, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7933, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7933
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7933

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7933, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7933
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7931

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7933
  br label %return, !dbg !7933

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7935, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7935
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7935

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7935, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7935
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7931

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7931

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7927, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7927
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7927, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7927
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7927
  store i32 %call9, i32* %retval, align 4, !dbg !7927
  br label %return, !dbg !7927

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7927
  ret i32 %12, !dbg !7927
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7937 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7940, metadata !DIExpression()), !dbg !7939
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7939, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7939
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7939, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7939
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7939
  ret i32 %call, !dbg !7939
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7941 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7944, metadata !DIExpression()), !dbg !7943
  br label %do.body, !dbg !7943

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7945, metadata !DIExpression()), !dbg !7947
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7947, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7947
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7947
  %frombool = zext i1 %call to i8, !dbg !7947
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7947, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7948, metadata !DIExpression()), !dbg !7947
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7947, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7947
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7947
  %frombool2 = zext i1 %call1 to i8, !dbg !7947
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7947, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7949, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7949
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7949

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7949, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7949
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7947

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7949
  br label %return, !dbg !7949

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7951, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7951
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7951

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7951, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7951
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7947

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7951
  br label %return, !dbg !7951

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7947

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7943, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7943
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7943, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7943
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7943
  store i32 %call9, i32* %retval, align 4, !dbg !7943
  br label %return, !dbg !7943

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7943
  ret i32 %12, !dbg !7943
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_extension(i8* %a, i8* %b) #9 !dbg !7953 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7956, metadata !DIExpression()), !dbg !7955
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7955, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7955
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7955, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7955
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7955
  ret i32 %call, !dbg !7955
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7957 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7960, metadata !DIExpression()), !dbg !7959
  br label %do.body, !dbg !7959

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7961, metadata !DIExpression()), !dbg !7963
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7963, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7963
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7963
  %frombool = zext i1 %call to i8, !dbg !7963
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7963, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7964, metadata !DIExpression()), !dbg !7963
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7963, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7963
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7963
  %frombool2 = zext i1 %call1 to i8, !dbg !7963
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7963, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7965, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7965
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7965

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7965, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7965
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7963

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7965
  br label %return, !dbg !7965

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7967, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7967
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7967

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7967, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7967
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7963

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7967
  br label %return, !dbg !7967

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7963

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7959, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7959
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7959, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7959
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7959
  store i32 %call9, i32* %retval, align 4, !dbg !7959
  br label %return, !dbg !7959

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7959
  ret i32 %12, !dbg !7959
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_extension(i8* %a, i8* %b) #9 !dbg !7969 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7972, metadata !DIExpression()), !dbg !7971
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7971, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7971
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7971, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7971
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7971
  ret i32 %call, !dbg !7971
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7973 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7976, metadata !DIExpression()), !dbg !7975
  br label %do.body, !dbg !7975

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7977, metadata !DIExpression()), !dbg !7979
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7979, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7979
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7979
  %frombool = zext i1 %call to i8, !dbg !7979
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7979, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7980, metadata !DIExpression()), !dbg !7979
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7979, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7979
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7979
  %frombool2 = zext i1 %call1 to i8, !dbg !7979
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7979, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7981, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7981
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7981

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7981, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7981
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7979

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7981
  br label %return, !dbg !7981

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7983, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7983
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7983

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7983, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7983
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7979

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7983
  br label %return, !dbg !7983

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7979

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7975, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7975
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7975, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7975
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7975
  store i32 %call9, i32* %retval, align 4, !dbg !7975
  br label %return, !dbg !7975

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7975
  ret i32 %12, !dbg !7975
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7985 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7986, metadata !DIExpression()), !dbg !7987
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7988, metadata !DIExpression()), !dbg !7987
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7987, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7987
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7987, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7987
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7987
  ret i32 %call, !dbg !7987
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7989 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7990, metadata !DIExpression()), !dbg !7991
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7992, metadata !DIExpression()), !dbg !7991
  br label %do.body, !dbg !7991

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7993, metadata !DIExpression()), !dbg !7995
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7995, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7995
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7995
  %frombool = zext i1 %call to i8, !dbg !7995
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7995, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7996, metadata !DIExpression()), !dbg !7995
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7995, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7995
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7995
  %frombool2 = zext i1 %call1 to i8, !dbg !7995
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7995, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7997, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !7997
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7997

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7997, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !7997
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7995

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7997
  br label %return, !dbg !7997

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7999, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !7999
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7999

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7999, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !7999
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7995

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7999
  br label %return, !dbg !7999

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7995

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7991, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7991
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7991, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7991
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7991
  store i32 %call9, i32* %retval, align 4, !dbg !7991
  br label %return, !dbg !7991

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7991
  ret i32 %12, !dbg !7991
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_size(i8* %a, i8* %b) #0 !dbg !8001 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8004, metadata !DIExpression()), !dbg !8003
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8003, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8003
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8003, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8003
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8003
  ret i32 %call, !dbg !8003
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !8005 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8006, metadata !DIExpression()), !dbg !8007
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8008, metadata !DIExpression()), !dbg !8007
  br label %do.body, !dbg !8007

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8009, metadata !DIExpression()), !dbg !8011
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8011, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8011
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8011
  %frombool = zext i1 %call to i8, !dbg !8011
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8011, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8012, metadata !DIExpression()), !dbg !8011
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8011, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8011
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8011
  %frombool2 = zext i1 %call1 to i8, !dbg !8011
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8011, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8013, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8013
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8013

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8013, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8013
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8011

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8013
  br label %return, !dbg !8013

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8015, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8015
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8015

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8015, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8015
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8011

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8015
  br label %return, !dbg !8015

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8011

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8007, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8007
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8007, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8007
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8007
  store i32 %call9, i32* %retval, align 4, !dbg !8007
  br label %return, !dbg !8007

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8007
  ret i32 %12, !dbg !8007
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_size(i8* %a, i8* %b) #9 !dbg !8017 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8018, metadata !DIExpression()), !dbg !8019
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8020, metadata !DIExpression()), !dbg !8019
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8019, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8019
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8019, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8019
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8019
  ret i32 %call, !dbg !8019
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_size(i8* %a, i8* %b) #9 !dbg !8021 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8024, metadata !DIExpression()), !dbg !8023
  br label %do.body, !dbg !8023

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8025, metadata !DIExpression()), !dbg !8027
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8027, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8027
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8027
  %frombool = zext i1 %call to i8, !dbg !8027
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8027, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8028, metadata !DIExpression()), !dbg !8027
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8027, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8027
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8027
  %frombool2 = zext i1 %call1 to i8, !dbg !8027
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8027, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8029, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8029
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8029

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8029, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8029
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8027

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8029
  br label %return, !dbg !8029

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8031, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8031
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8031

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8031, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8031
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8027

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8031
  br label %return, !dbg !8031

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8027

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8023, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8023
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8023, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8023
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8023
  store i32 %call9, i32* %retval, align 4, !dbg !8023
  br label %return, !dbg !8023

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8023
  ret i32 %12, !dbg !8023
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_size(i8* %a, i8* %b) #9 !dbg !8033 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8036, metadata !DIExpression()), !dbg !8035
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8035, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8035
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8035, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8035
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8035
  ret i32 %call, !dbg !8035
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_size(i8* %a, i8* %b) #9 !dbg !8037 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8040, metadata !DIExpression()), !dbg !8039
  br label %do.body, !dbg !8039

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8041, metadata !DIExpression()), !dbg !8043
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8043, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8043
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8043
  %frombool = zext i1 %call to i8, !dbg !8043
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8043, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8044, metadata !DIExpression()), !dbg !8043
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8043, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8043
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8043
  %frombool2 = zext i1 %call1 to i8, !dbg !8043
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8043, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8045, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8045
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8045

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8045, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8045
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8043

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8045
  br label %return, !dbg !8045

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8047, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8047
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8047

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8047, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8047
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8043

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8047
  br label %return, !dbg !8047

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8043

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8039, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8039
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8039, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8039
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8039
  store i32 %call9, i32* %retval, align 4, !dbg !8039
  br label %return, !dbg !8039

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8039
  ret i32 %12, !dbg !8039
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_version(i8* %a, i8* %b) #0 !dbg !8049 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8050, metadata !DIExpression()), !dbg !8051
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8052, metadata !DIExpression()), !dbg !8053
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8054, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8054
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8055, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8055
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !8056
  ret i32 %call, !dbg !8057
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !8058 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8061, metadata !DIExpression()), !dbg !8062
  br label %do.body, !dbg !8063

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8064, metadata !DIExpression()), !dbg !8066
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8066, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8066
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8066
  %frombool = zext i1 %call to i8, !dbg !8066
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8066, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8067, metadata !DIExpression()), !dbg !8066
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8066, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8066
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8066
  %frombool2 = zext i1 %call1 to i8, !dbg !8066
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8066, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8068, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8068
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8068

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8068, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8068
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8066

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8068
  br label %return, !dbg !8068

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8070, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8070
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8070

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8070, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8070
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8066

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8070
  br label %return, !dbg !8070

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8066

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8072, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8072
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8073, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8073
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !8074
  store i32 %call9, i32* %retval, align 4, !dbg !8075
  br label %return, !dbg !8075

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8076
  ret i32 %12, !dbg !8076
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_version(i8* %a, i8* %b) #0 !dbg !8077 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8078, metadata !DIExpression()), !dbg !8079
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8080, metadata !DIExpression()), !dbg !8081
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8082, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8082
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8083, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8083
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !8084
  ret i32 %call, !dbg !8085
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !8086 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8089, metadata !DIExpression()), !dbg !8090
  br label %do.body, !dbg !8091

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8092, metadata !DIExpression()), !dbg !8094
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8094, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8094
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8094
  %frombool = zext i1 %call to i8, !dbg !8094
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8094, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8095, metadata !DIExpression()), !dbg !8094
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8094, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8094
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8094
  %frombool2 = zext i1 %call1 to i8, !dbg !8094
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8094, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8096, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8096
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8096

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8096, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8096
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8094

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8096
  br label %return, !dbg !8096

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8098, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8098
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8098

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8098, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8098
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8094

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8098
  br label %return, !dbg !8098

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8094

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8100, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8100
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8101, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8101
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !8102
  store i32 %call9, i32* %retval, align 4, !dbg !8103
  br label %return, !dbg !8103

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8104
  ret i32 %12, !dbg !8104
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !8105 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8106, metadata !DIExpression()), !dbg !8107
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8108, metadata !DIExpression()), !dbg !8107
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8107, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8107
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8107, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8107
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8107
  ret i32 %call, !dbg !8107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !8109 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8110, metadata !DIExpression()), !dbg !8111
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8112, metadata !DIExpression()), !dbg !8111
  br label %do.body, !dbg !8111

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8113, metadata !DIExpression()), !dbg !8115
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8115, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8115
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8115
  %frombool = zext i1 %call to i8, !dbg !8115
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8115, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8116, metadata !DIExpression()), !dbg !8115
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8115, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8115
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8115
  %frombool2 = zext i1 %call1 to i8, !dbg !8115
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8115, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8117, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8117
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8117

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8117, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8117
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8115

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8117
  br label %return, !dbg !8117

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8119, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8119
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8119

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8119, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8119
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8115

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8119
  br label %return, !dbg !8119

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8115

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8111, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8111
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8111, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8111
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8111
  store i32 %call9, i32* %retval, align 4, !dbg !8111
  br label %return, !dbg !8111

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8111
  ret i32 %12, !dbg !8111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !8121 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8122, metadata !DIExpression()), !dbg !8123
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8124, metadata !DIExpression()), !dbg !8123
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8123, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8123
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8123, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8123
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8123
  ret i32 %call, !dbg !8123
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !8125 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8128, metadata !DIExpression()), !dbg !8127
  br label %do.body, !dbg !8127

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8129, metadata !DIExpression()), !dbg !8131
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8131, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8131
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8131
  %frombool = zext i1 %call to i8, !dbg !8131
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8131, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8132, metadata !DIExpression()), !dbg !8131
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8131, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8131
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8131
  %frombool2 = zext i1 %call1 to i8, !dbg !8131
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8131, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8133, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8133
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8133

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8133, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8133
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8131

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8133
  br label %return, !dbg !8133

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8135, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8135
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8135

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8135, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8135
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8131

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8135
  br label %return, !dbg !8135

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8131

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8127, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8127
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8127, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8127
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8127
  store i32 %call9, i32* %retval, align 4, !dbg !8127
  br label %return, !dbg !8127

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8127
  ret i32 %12, !dbg !8127
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_mtime(i8* %a, i8* %b) #9 !dbg !8137 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8138, metadata !DIExpression()), !dbg !8139
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8140, metadata !DIExpression()), !dbg !8139
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8139, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8139
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8139, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8139
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8139
  ret i32 %call, !dbg !8139
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !8141 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8144, metadata !DIExpression()), !dbg !8143
  br label %do.body, !dbg !8143

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8145, metadata !DIExpression()), !dbg !8147
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8147, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8147
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8147
  %frombool = zext i1 %call to i8, !dbg !8147
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8147, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8148, metadata !DIExpression()), !dbg !8147
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8147, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8147
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8147
  %frombool2 = zext i1 %call1 to i8, !dbg !8147
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8147, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8149, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8149
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8149

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8149, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8149
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8147

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8149
  br label %return, !dbg !8149

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8151, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8151
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8151

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8151, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8151
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8147

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8151
  br label %return, !dbg !8151

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8147

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8143, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8143
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8143, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8143
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8143
  store i32 %call9, i32* %retval, align 4, !dbg !8143
  br label %return, !dbg !8143

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8143
  ret i32 %12, !dbg !8143
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_mtime(i8* %a, i8* %b) #9 !dbg !8153 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8156, metadata !DIExpression()), !dbg !8155
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8155, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8155
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8155, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8155
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8155
  ret i32 %call, !dbg !8155
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !8157 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8160, metadata !DIExpression()), !dbg !8159
  br label %do.body, !dbg !8159

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8161, metadata !DIExpression()), !dbg !8163
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8163, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8163
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8163
  %frombool = zext i1 %call to i8, !dbg !8163
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8163, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8164, metadata !DIExpression()), !dbg !8163
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8163, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8163
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8163
  %frombool2 = zext i1 %call1 to i8, !dbg !8163
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8163, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8165, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8165
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8165

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8165, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8165
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8163

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8165
  br label %return, !dbg !8165

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8167, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8167
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8167

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8167, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8167
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8163

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8167
  br label %return, !dbg !8167

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8163

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8159, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8159
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8159, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8159
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8159
  store i32 %call9, i32* %retval, align 4, !dbg !8159
  br label %return, !dbg !8159

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8159
  ret i32 %12, !dbg !8159
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !8169 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8172, metadata !DIExpression()), !dbg !8171
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8171, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8171
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8171, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8171
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8171
  ret i32 %call, !dbg !8171
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !8173 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8174, metadata !DIExpression()), !dbg !8175
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8176, metadata !DIExpression()), !dbg !8175
  br label %do.body, !dbg !8175

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8177, metadata !DIExpression()), !dbg !8179
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8179, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8179
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8179
  %frombool = zext i1 %call to i8, !dbg !8179
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8179, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8180, metadata !DIExpression()), !dbg !8179
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8179, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8179
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8179
  %frombool2 = zext i1 %call1 to i8, !dbg !8179
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8179, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8181, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8181
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8181

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8181, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8181
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8179

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8181
  br label %return, !dbg !8181

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8183, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8183
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8183

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8183, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8183
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8179

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8183
  br label %return, !dbg !8183

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8179

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8175, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8175
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8175, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8175
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8175
  store i32 %call9, i32* %retval, align 4, !dbg !8175
  br label %return, !dbg !8175

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8175
  ret i32 %12, !dbg !8175
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !8185 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8188, metadata !DIExpression()), !dbg !8187
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8187, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8187
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8187, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8187
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8187
  ret i32 %call, !dbg !8187
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !8189 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8192, metadata !DIExpression()), !dbg !8191
  br label %do.body, !dbg !8191

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8193, metadata !DIExpression()), !dbg !8195
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8195, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8195
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8195
  %frombool = zext i1 %call to i8, !dbg !8195
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8195, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8196, metadata !DIExpression()), !dbg !8195
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8195, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8195
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8195
  %frombool2 = zext i1 %call1 to i8, !dbg !8195
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8195, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8197, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8197
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8197

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8197, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8197
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8195

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8197
  br label %return, !dbg !8197

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8199, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8199
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8199

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8199, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8199
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8195

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8199
  br label %return, !dbg !8199

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8195

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8191, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8191
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8191, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8191
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8191
  store i32 %call9, i32* %retval, align 4, !dbg !8191
  br label %return, !dbg !8191

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8191
  ret i32 %12, !dbg !8191
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_ctime(i8* %a, i8* %b) #9 !dbg !8201 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8202, metadata !DIExpression()), !dbg !8203
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8204, metadata !DIExpression()), !dbg !8203
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8203, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8203
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8203, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8203
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8203
  ret i32 %call, !dbg !8203
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !8205 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8206, metadata !DIExpression()), !dbg !8207
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8208, metadata !DIExpression()), !dbg !8207
  br label %do.body, !dbg !8207

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8209, metadata !DIExpression()), !dbg !8211
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8211, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8211
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8211
  %frombool = zext i1 %call to i8, !dbg !8211
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8211, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8212, metadata !DIExpression()), !dbg !8211
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8211, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8211
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8211
  %frombool2 = zext i1 %call1 to i8, !dbg !8211
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8211, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8213, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8213
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8213

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8213, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8213
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8211

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8213
  br label %return, !dbg !8213

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8215, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8215
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8215

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8215, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8215
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8211

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8215
  br label %return, !dbg !8215

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8211

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8207, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8207
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8207, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8207
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8207
  store i32 %call9, i32* %retval, align 4, !dbg !8207
  br label %return, !dbg !8207

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8207
  ret i32 %12, !dbg !8207
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_ctime(i8* %a, i8* %b) #9 !dbg !8217 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8218, metadata !DIExpression()), !dbg !8219
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8220, metadata !DIExpression()), !dbg !8219
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8219, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8219
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8219, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8219
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8219
  ret i32 %call, !dbg !8219
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !8221 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8222, metadata !DIExpression()), !dbg !8223
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8224, metadata !DIExpression()), !dbg !8223
  br label %do.body, !dbg !8223

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8225, metadata !DIExpression()), !dbg !8227
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8227, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8227
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8227
  %frombool = zext i1 %call to i8, !dbg !8227
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8227, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8228, metadata !DIExpression()), !dbg !8227
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8227, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8227
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8227
  %frombool2 = zext i1 %call1 to i8, !dbg !8227
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8227, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8229, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8229
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8229

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8229, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8229
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8227

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8229
  br label %return, !dbg !8229

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8231, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8231
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8231

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8231, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8231
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8227

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8231
  br label %return, !dbg !8231

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8227

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8223, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8223
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8223, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8223
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8223
  store i32 %call9, i32* %retval, align 4, !dbg !8223
  br label %return, !dbg !8223

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8223
  ret i32 %12, !dbg !8223
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !8233 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8236, metadata !DIExpression()), !dbg !8235
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8235, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8235
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8235, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8235
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8235
  ret i32 %call, !dbg !8235
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !8237 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8240, metadata !DIExpression()), !dbg !8239
  br label %do.body, !dbg !8239

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8241, metadata !DIExpression()), !dbg !8243
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8243, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8243
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8243
  %frombool = zext i1 %call to i8, !dbg !8243
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8243, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8244, metadata !DIExpression()), !dbg !8243
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8243, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8243
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8243
  %frombool2 = zext i1 %call1 to i8, !dbg !8243
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8243, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8245, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8245
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8245

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8245, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8245
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8243

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8245
  br label %return, !dbg !8245

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8247, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8247
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8247

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8247, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8247
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8243

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8247
  br label %return, !dbg !8247

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8243

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8239, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8239
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8239, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8239
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8239
  store i32 %call9, i32* %retval, align 4, !dbg !8239
  br label %return, !dbg !8239

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8239
  ret i32 %12, !dbg !8239
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !8249 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8252, metadata !DIExpression()), !dbg !8251
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8251, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8251
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8251, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8251
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8251
  ret i32 %call, !dbg !8251
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !8253 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8254, metadata !DIExpression()), !dbg !8255
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8256, metadata !DIExpression()), !dbg !8255
  br label %do.body, !dbg !8255

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8257, metadata !DIExpression()), !dbg !8259
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8259, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8259
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8259
  %frombool = zext i1 %call to i8, !dbg !8259
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8259, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8260, metadata !DIExpression()), !dbg !8259
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8259, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8259
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8259
  %frombool2 = zext i1 %call1 to i8, !dbg !8259
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8259, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8261, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8261
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8261

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8261, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8261
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8259

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8261
  br label %return, !dbg !8261

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8263, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8263
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8263

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8263, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8263
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8259

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8263
  br label %return, !dbg !8263

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8259

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8255, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8255
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8255, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8255
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8255
  store i32 %call9, i32* %retval, align 4, !dbg !8255
  br label %return, !dbg !8255

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8255
  ret i32 %12, !dbg !8255
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_atime(i8* %a, i8* %b) #9 !dbg !8265 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8268, metadata !DIExpression()), !dbg !8267
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8267, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8267
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8267, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8267
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8267
  ret i32 %call, !dbg !8267
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !8269 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8272, metadata !DIExpression()), !dbg !8271
  br label %do.body, !dbg !8271

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8273, metadata !DIExpression()), !dbg !8275
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8275, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8275
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8275
  %frombool = zext i1 %call to i8, !dbg !8275
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8275, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8276, metadata !DIExpression()), !dbg !8275
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8275, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8275
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8275
  %frombool2 = zext i1 %call1 to i8, !dbg !8275
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8275, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8277, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8277
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8277

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8277, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8277
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8275

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8277
  br label %return, !dbg !8277

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8279, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8279
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8279

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8279, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8279
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8275

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8279
  br label %return, !dbg !8279

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8275

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8271, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8271
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8271, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8271
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8271
  store i32 %call9, i32* %retval, align 4, !dbg !8271
  br label %return, !dbg !8271

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8271
  ret i32 %12, !dbg !8271
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_atime(i8* %a, i8* %b) #9 !dbg !8281 !ctir !702 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8284, metadata !DIExpression()), !dbg !8283
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8283, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8283
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8283, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8283
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8283
  ret i32 %call, !dbg !8283
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !8285 !ctir !702 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a.addr = alloca i8*, align 8, !ctir !704
  %b.addr = alloca i8*, align 8, !ctir !704
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8286, metadata !DIExpression()), !dbg !8287
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8288, metadata !DIExpression()), !dbg !8287
  br label %do.body, !dbg !8287

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8289, metadata !DIExpression()), !dbg !8291
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8291, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8291
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8291
  %frombool = zext i1 %call to i8, !dbg !8291
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8291, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8292, metadata !DIExpression()), !dbg !8291
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8291, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8291
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8291
  %frombool2 = zext i1 %call1 to i8, !dbg !8291
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8291, !tbaa !2493
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8293, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8293
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8293

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8293, !tbaa !2493
  %tobool3 = trunc i8 %5 to i1, !dbg !8293
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8291

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8293
  br label %return, !dbg !8293

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8295, !tbaa !2493
  %tobool4 = trunc i8 %6 to i1, !dbg !8295
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8295

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8295, !tbaa !2493
  %tobool6 = trunc i8 %7 to i1, !dbg !8295
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8291

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8295
  br label %return, !dbg !8295

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8291

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8287, !tbaa !2474
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8287
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8287, !tbaa !2474
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8287
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8287
  store i32 %call9, i32* %retval, align 4, !dbg !8287
  br label %return, !dbg !8287

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8287
  ret i32 %12, !dbg !8287
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_linked_directory(%struct.fileinfo* %f) #0 !dbg !8297 !ctir !685 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8298, metadata !DIExpression()), !dbg !8299
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8300, !tbaa !2474
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !8301, !ctir !183
  %1 = load i32, i32* %filetype, align 8, !dbg !8301, !tbaa !3838, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !8302
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8303

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8304, !tbaa !2474
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !8305, !ctir !183
  %3 = load i32, i32* %filetype1, align 8, !dbg !8305, !tbaa !3838, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !8306
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !8307

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8308, !tbaa !2474
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 5, !dbg !8308, !ctir !183
  %5 = load i32, i32* %linkmode, align 4, !dbg !8308, !tbaa !4216, !ctir !226
  %and = and i32 %5, 61440, !dbg !8308
  %cmp3 = icmp eq i32 %and, 16384, !dbg !8308
  br label %lor.end, !dbg !8307

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %6, !dbg !8309
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_atime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8310 !ctir !711 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !713
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8, !ctir !213
  %agg.tmp1 = alloca %struct.dev_ino, align 8, !ctir !213
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8317, metadata !DIExpression()), !dbg !8318
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8319, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8320, !ctir !183
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %stat) #16, !dbg !8321
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8321
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8321
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8321
  store i64 %3, i64* %2, align 8, !dbg !8321
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8321
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8321
  store i64 %5, i64* %4, align 8, !dbg !8321
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8322, !tbaa !2474
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8323, !ctir !183
  %call3 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat2) #16, !dbg !8324
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8324
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8324
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8324
  store i64 %9, i64* %8, align 8, !dbg !8324
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8324
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8324
  store i64 %11, i64* %10, align 8, !dbg !8324
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8325
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8325
  %14 = load i64, i64* %13, align 8, !dbg !8325
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8325
  %16 = load i64, i64* %15, align 8, !dbg !8325
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8325
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8325
  %19 = load i64, i64* %18, align 8, !dbg !8325
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8325
  %21 = load i64, i64* %20, align 8, !dbg !8325
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8325
  store i32 %call4, i32* %diff, align 4, !dbg !8318, !tbaa !2468
  %22 = load i32, i32* %diff, align 4, !dbg !8326, !tbaa !2468
  %tobool = icmp ne i32 %22, 0, !dbg !8326
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8326

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8327, !tbaa !2468
  br label %cond.end, !dbg !8326

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8328, !tbaa !2474
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8329, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8330, !ctir !183
  %26 = load i8*, i8** %name, align 8, !dbg !8330, !tbaa !4040, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8331, !tbaa !2474
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8332, !ctir !183
  %28 = load i8*, i8** %name5, align 8, !dbg !8332, !tbaa !4040, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8328
  br label %cond.end, !dbg !8326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8326
  ret i32 %cond, !dbg !8333
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll(i8* %a, i8* %b) #0 !dbg !8334 !ctir !714 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !146
  %b.addr = alloca i8*, align 8, !ctir !146
  %diff = alloca i32, align 4, !ctir !27
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8335, metadata !DIExpression()), !dbg !8336
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8337, metadata !DIExpression()), !dbg !8338
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8339, metadata !DIExpression()), !dbg !8340
  %call = call i32* @__errno_location() #17, !dbg !8341
  store i32 0, i32* %call, align 4, !dbg !8342, !tbaa !2468, !ctir !27
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8343, !tbaa !2474
  %1 = load i8*, i8** %b.addr, align 8, !dbg !8344, !tbaa !2474
  %call1 = call i32 @strcoll(i8* %0, i8* %1) #16, !dbg !8345
  store i32 %call1, i32* %diff, align 4, !dbg !8346, !tbaa !2468
  %call2 = call i32* @__errno_location() #17, !dbg !8347
  %2 = load i32, i32* %call2, align 4, !dbg !8347, !tbaa !2468, !ctir !27
  %tobool = icmp ne i32 %2, 0, !dbg !8347
  br i1 %tobool, label %if.then, label %if.end, !dbg !8349

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #17, !dbg !8350
  %3 = load i32, i32* %call3, align 4, !dbg !8350, !tbaa !2468, !ctir !27
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.223, i64 0, i64 0)) #13, !dbg !8352
  %4 = load i8*, i8** %a.addr, align 8, !dbg !8353, !tbaa !2474
  %call5 = call i8* @quote_n(i32 0, i8* %4), !dbg !8354
  %5 = load i8*, i8** %b.addr, align 8, !dbg !8355, !tbaa !2474
  %call6 = call i8* @quote_n(i32 1, i8* %5), !dbg !8356
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call4, i8* %call5, i8* %call6), !dbg !8357
  call void @set_exit_status(i1 zeroext false), !dbg !8358
  call void @longjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0), i32 1) #15, !dbg !8359
  unreachable, !dbg !8359

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %diff, align 4, !dbg !8360, !tbaa !2468
  ret i32 %6, !dbg !8361
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #5

; Function Attrs: noreturn nounwind
declare dso_local void @longjmp(%struct.__jmp_buf_tag*, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_ctime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8362 !ctir !711 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !713
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8, !ctir !213
  %agg.tmp1 = alloca %struct.dev_ino, align 8, !ctir !213
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8363, metadata !DIExpression()), !dbg !8364
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8369, metadata !DIExpression()), !dbg !8370
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8371, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8372, !ctir !183
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat) #16, !dbg !8373
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8373
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8373
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8373
  store i64 %3, i64* %2, align 8, !dbg !8373
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8373
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8373
  store i64 %5, i64* %4, align 8, !dbg !8373
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8374, !tbaa !2474
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8375, !ctir !183
  %call3 = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat2) #16, !dbg !8376
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8376
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8376
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8376
  store i64 %9, i64* %8, align 8, !dbg !8376
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8376
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8376
  store i64 %11, i64* %10, align 8, !dbg !8376
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8377
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8377
  %14 = load i64, i64* %13, align 8, !dbg !8377
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8377
  %16 = load i64, i64* %15, align 8, !dbg !8377
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8377
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8377
  %19 = load i64, i64* %18, align 8, !dbg !8377
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8377
  %21 = load i64, i64* %20, align 8, !dbg !8377
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8377
  store i32 %call4, i32* %diff, align 4, !dbg !8370, !tbaa !2468
  %22 = load i32, i32* %diff, align 4, !dbg !8378, !tbaa !2468
  %tobool = icmp ne i32 %22, 0, !dbg !8378
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8378

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8379, !tbaa !2468
  br label %cond.end, !dbg !8378

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8380, !tbaa !2474
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8381, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8382, !ctir !183
  %26 = load i8*, i8** %name, align 8, !dbg !8382, !tbaa !4040, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8383, !tbaa !2474
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8384, !ctir !183
  %28 = load i8*, i8** %name5, align 8, !dbg !8384, !tbaa !4040, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8380
  br label %cond.end, !dbg !8378

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8378
  ret i32 %cond, !dbg !8385
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_mtime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8386 !ctir !711 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !713
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8, !ctir !213
  %agg.tmp1 = alloca %struct.dev_ino, align 8, !ctir !213
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8395, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8396, !ctir !183
  %call = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat) #16, !dbg !8397
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8397
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8397
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8397
  store i64 %3, i64* %2, align 8, !dbg !8397
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8397
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8397
  store i64 %5, i64* %4, align 8, !dbg !8397
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8398, !tbaa !2474
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8399, !ctir !183
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat2) #16, !dbg !8400
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8400
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8400
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8400
  store i64 %9, i64* %8, align 8, !dbg !8400
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8400
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8400
  store i64 %11, i64* %10, align 8, !dbg !8400
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8401
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8401
  %14 = load i64, i64* %13, align 8, !dbg !8401
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8401
  %16 = load i64, i64* %15, align 8, !dbg !8401
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8401
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8401
  %19 = load i64, i64* %18, align 8, !dbg !8401
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8401
  %21 = load i64, i64* %20, align 8, !dbg !8401
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8401
  store i32 %call4, i32* %diff, align 4, !dbg !8394, !tbaa !2468
  %22 = load i32, i32* %diff, align 4, !dbg !8402, !tbaa !2468
  %tobool = icmp ne i32 %22, 0, !dbg !8402
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8402

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8403, !tbaa !2468
  br label %cond.end, !dbg !8402

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8404, !tbaa !2474
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8405, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8406, !ctir !183
  %26 = load i8*, i8** %name, align 8, !dbg !8406, !tbaa !4040, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8407, !tbaa !2474
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8408, !ctir !183
  %28 = load i8*, i8** %name5, align 8, !dbg !8408, !tbaa !4040, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8404
  br label %cond.end, !dbg !8402

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8402
  ret i32 %cond, !dbg !8409
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_version(%struct.fileinfo* %a, %struct.fileinfo* %b) #0 !dbg !8410 !ctir !716 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8411, metadata !DIExpression()), !dbg !8412
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8415, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !8416, !ctir !183
  %1 = load i8*, i8** %name, align 8, !dbg !8416, !tbaa !4040, !ctir !143
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8417, !tbaa !2474
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !8418, !ctir !183
  %3 = load i8*, i8** %name1, align 8, !dbg !8418, !tbaa !4040, !ctir !143
  %call = call i32 @filevercmp(i8* %1, i8* %3) #16, !dbg !8419
  ret i32 %call, !dbg !8420
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_size(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8421 !ctir !711 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !713
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8422, metadata !DIExpression()), !dbg !8423
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8424, metadata !DIExpression()), !dbg !8425
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8426, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8428, metadata !DIExpression()), !dbg !8429
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8430, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8430, !ctir !183
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8430, !ctir !190
  %1 = load i64, i64* %st_size, align 8, !dbg !8430, !tbaa !4440, !ctir !180
  %2 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8430, !tbaa !2474
  %stat1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !8430, !ctir !183
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %stat1, i32 0, i32 8, !dbg !8430, !ctir !190
  %3 = load i64, i64* %st_size2, align 8, !dbg !8430, !tbaa !4440, !ctir !180
  %cmp3 = icmp slt i64 %1, %3, !dbg !8430
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8430

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8430

cond.false:                                       ; preds = %entry
  %4 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8430, !tbaa !2474
  %stat4 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8430, !ctir !183
  %st_size5 = getelementptr inbounds %struct.stat, %struct.stat* %stat4, i32 0, i32 8, !dbg !8430, !ctir !190
  %5 = load i64, i64* %st_size5, align 8, !dbg !8430, !tbaa !4440, !ctir !180
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8430, !tbaa !2474
  %stat6 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8430, !ctir !183
  %st_size7 = getelementptr inbounds %struct.stat, %struct.stat* %stat6, i32 0, i32 8, !dbg !8430, !ctir !190
  %7 = load i64, i64* %st_size7, align 8, !dbg !8430, !tbaa !4440, !ctir !180
  %cmp8 = icmp sgt i64 %5, %7, !dbg !8430
  %conv = zext i1 %cmp8 to i32, !dbg !8430
  br label %cond.end, !dbg !8430

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !8430
  store i32 %cond, i32* %diff, align 4, !dbg !8429, !tbaa !2468
  %8 = load i32, i32* %diff, align 4, !dbg !8431, !tbaa !2468
  %tobool = icmp ne i32 %8, 0, !dbg !8431
  br i1 %tobool, label %cond.true9, label %cond.false10, !dbg !8431

cond.true9:                                       ; preds = %cond.end
  %9 = load i32, i32* %diff, align 4, !dbg !8432, !tbaa !2468
  br label %cond.end12, !dbg !8431

cond.false10:                                     ; preds = %cond.end
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8433, !tbaa !2474
  %11 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8434, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 0, !dbg !8435, !ctir !183
  %12 = load i8*, i8** %name, align 8, !dbg !8435, !tbaa !4040, !ctir !143
  %13 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8436, !tbaa !2474
  %name11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 0, !dbg !8437, !ctir !183
  %14 = load i8*, i8** %name11, align 8, !dbg !8437, !tbaa !4040, !ctir !143
  %call = call i32 %10(i8* %12, i8* %14), !dbg !8433
  br label %cond.end12, !dbg !8431

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %9, %cond.true9 ], [ %call, %cond.false10 ], !dbg !8431
  ret i32 %cond13, !dbg !8438
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_extension(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8439 !ctir !711 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !713
  %base1 = alloca i8*, align 8, !ctir !146
  %base2 = alloca i8*, align 8, !ctir !146
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8440, metadata !DIExpression()), !dbg !8441
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8442, metadata !DIExpression()), !dbg !8443
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.declare(metadata i8** %base1, metadata !8446, metadata !DIExpression()), !dbg !8447
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8448, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !8449, !ctir !183
  %1 = load i8*, i8** %name, align 8, !dbg !8449, !tbaa !4040, !ctir !143
  %call = call i8* @strrchr(i8* %1, i32 46) #16, !dbg !8450
  store i8* %call, i8** %base1, align 8, !dbg !8447, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %base2, metadata !8451, metadata !DIExpression()), !dbg !8452
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8453, !tbaa !2474
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !8454, !ctir !183
  %3 = load i8*, i8** %name1, align 8, !dbg !8454, !tbaa !4040, !ctir !143
  %call2 = call i8* @strrchr(i8* %3, i32 46) #16, !dbg !8455
  store i8* %call2, i8** %base2, align 8, !dbg !8452, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8456, metadata !DIExpression()), !dbg !8457
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8458, !tbaa !2474
  %5 = load i8*, i8** %base1, align 8, !dbg !8459, !tbaa !2474
  %tobool = icmp ne i8* %5, null, !dbg !8459
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8459

cond.true:                                        ; preds = %entry
  %6 = load i8*, i8** %base1, align 8, !dbg !8460, !tbaa !2474
  br label %cond.end, !dbg !8459

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !8459
  %7 = load i8*, i8** %base2, align 8, !dbg !8461, !tbaa !2474
  %tobool3 = icmp ne i8* %7, null, !dbg !8461
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !8461

cond.true4:                                       ; preds = %cond.end
  %8 = load i8*, i8** %base2, align 8, !dbg !8462, !tbaa !2474
  br label %cond.end6, !dbg !8461

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !8461

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i8* [ %8, %cond.true4 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false5 ], !dbg !8461
  %call8 = call i32 %4(i8* %cond, i8* %cond7), !dbg !8458
  store i32 %call8, i32* %diff, align 4, !dbg !8457, !tbaa !2468
  %9 = load i32, i32* %diff, align 4, !dbg !8463, !tbaa !2468
  %tobool9 = icmp ne i32 %9, 0, !dbg !8463
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !8463

cond.true10:                                      ; preds = %cond.end6
  %10 = load i32, i32* %diff, align 4, !dbg !8464, !tbaa !2468
  br label %cond.end15, !dbg !8463

cond.false11:                                     ; preds = %cond.end6
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8465, !tbaa !2474
  %12 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8466, !tbaa !2474
  %name12 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !8467, !ctir !183
  %13 = load i8*, i8** %name12, align 8, !dbg !8467, !tbaa !4040, !ctir !143
  %14 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8468, !tbaa !2474
  %name13 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 0, !dbg !8469, !ctir !183
  %15 = load i8*, i8** %name13, align 8, !dbg !8469, !tbaa !4040, !ctir !143
  %call14 = call i32 %11(i8* %13, i8* %15), !dbg !8465
  br label %cond.end15, !dbg !8463

cond.end15:                                       ; preds = %cond.false11, %cond.true10
  %cond16 = phi i32 [ %10, %cond.true10 ], [ %call14, %cond.false11 ], !dbg !8463
  ret i32 %cond16, !dbg !8470
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_name(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8471 !ctir !711 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %b.addr = alloca %struct.fileinfo*, align 8, !ctir !182
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !713
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8472, metadata !DIExpression()), !dbg !8473
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8474, metadata !DIExpression()), !dbg !8475
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  %0 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8478, !tbaa !2474
  %1 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8479, !tbaa !2474
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 0, !dbg !8480, !ctir !183
  %2 = load i8*, i8** %name, align 8, !dbg !8480, !tbaa !4040, !ctir !143
  %3 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8481, !tbaa !2474
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !8482, !ctir !183
  %4 = load i8*, i8** %name1, align 8, !dbg !8482, !tbaa !4040, !ctir !143
  %call = call i32 %0(i8* %2, i8* %4), !dbg !8478
  ret i32 %call, !dbg !8483
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @needs_quoting(i8* %name) #0 !dbg !8484 !ctir !556 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %test = alloca [2 x i8], align 1, !ctir !653
  %len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8485, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.declare(metadata [2 x i8]* %test, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8489, metadata !DIExpression()), !dbg !8490
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !8491
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8492, !tbaa !2474
  %1 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !8493, !tbaa !2474
  %call = call i64 @quotearg_buffer(i8* %arraydecay, i64 2, i8* %0, i64 -1, %struct.quoting_options* %1), !dbg !8494
  store i64 %call, i64* %len, align 8, !dbg !8490, !tbaa !2611
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8495, !tbaa !2474
  %3 = load i8, i8* %2, align 1, !dbg !8496, !tbaa !2529, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !8496
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !8497
  %4 = load i8, i8* %arraydecay1, align 1, !dbg !8497, !tbaa !2529, !ctir !144
  %conv2 = sext i8 %4 to i32, !dbg !8497
  %cmp = icmp ne i32 %conv, %conv2, !dbg !8498
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8499

lor.rhs:                                          ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8500, !tbaa !2474
  %call4 = call i64 @strlen(i8* %5) #16, !dbg !8501
  %6 = load i64, i64* %len, align 8, !dbg !8502, !tbaa !2611
  %cmp5 = icmp ne i64 %call4, %6, !dbg !8503
  br label %lor.end, !dbg !8499

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  ret i1 %7, !dbg !8504
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @attach(i8* %dest, i8* %dirname, i8* %name) #0 !dbg !8505 !ctir !659 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !143
  %dirname.addr = alloca i8*, align 8, !ctir !146
  %name.addr = alloca i8*, align 8, !ctir !146
  %dirnamep = alloca i8*, align 8, !ctir !146
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.declare(metadata i8** %dirnamep, metadata !8512, metadata !DIExpression()), !dbg !8513
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !8514, !tbaa !2474
  store i8* %0, i8** %dirnamep, align 8, !dbg !8513, !tbaa !2474
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !8515, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8515, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8515, !tbaa !2529
  %conv = sext i8 %2 to i32, !dbg !8515
  %cmp = icmp ne i32 %conv, 46, !dbg !8517
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8518

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !8519, !tbaa !2474
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8519, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !8519, !tbaa !2529
  %conv3 = sext i8 %4 to i32, !dbg !8519
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !8520
  br i1 %cmp4, label %if.then, label %if.end15, !dbg !8521

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.cond, !dbg !8522

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load i8*, i8** %dirnamep, align 8, !dbg !8524, !tbaa !2474
  %6 = load i8, i8* %5, align 1, !dbg !8525, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !8522
  br i1 %tobool, label %while.body, label %while.end, !dbg !8522

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %dirnamep, align 8, !dbg !8526, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8526
  store i8* %incdec.ptr, i8** %dirnamep, align 8, !dbg !8526, !tbaa !2474
  %8 = load i8, i8* %7, align 1, !dbg !8527, !tbaa !2529, !ctir !147
  %9 = load i8*, i8** %dest.addr, align 8, !dbg !8528, !tbaa !2474
  %incdec.ptr6 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8528
  store i8* %incdec.ptr6, i8** %dest.addr, align 8, !dbg !8528, !tbaa !2474
  store i8 %8, i8* %9, align 1, !dbg !8529, !tbaa !2529, !ctir !144
  br label %while.cond, !dbg !8522, !llvm.loop !8530

while.end:                                        ; preds = %while.cond
  %10 = load i8*, i8** %dirnamep, align 8, !dbg !8531, !tbaa !2474
  %11 = load i8*, i8** %dirname.addr, align 8, !dbg !8533, !tbaa !2474
  %cmp7 = icmp ugt i8* %10, %11, !dbg !8534
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !8535

land.lhs.true:                                    ; preds = %while.end
  %12 = load i8*, i8** %dirnamep, align 8, !dbg !8536, !tbaa !2474
  %arrayidx9 = getelementptr inbounds i8, i8* %12, i64 -1, !dbg !8536, !ctir !146
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !8536, !tbaa !2529
  %conv10 = sext i8 %13 to i32, !dbg !8536
  %cmp11 = icmp ne i32 %conv10, 47, !dbg !8537
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !8538

if.then13:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %dest.addr, align 8, !dbg !8539, !tbaa !2474
  %incdec.ptr14 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8539
  store i8* %incdec.ptr14, i8** %dest.addr, align 8, !dbg !8539, !tbaa !2474
  store i8 47, i8* %14, align 1, !dbg !8540, !tbaa !2529, !ctir !144
  br label %if.end, !dbg !8541

if.end:                                           ; preds = %if.then13, %land.lhs.true, %while.end
  br label %if.end15, !dbg !8542

if.end15:                                         ; preds = %if.end, %lor.lhs.false
  br label %while.cond16, !dbg !8543

while.cond16:                                     ; preds = %while.body18, %if.end15
  %15 = load i8*, i8** %name.addr, align 8, !dbg !8544, !tbaa !2474
  %16 = load i8, i8* %15, align 1, !dbg !8545, !tbaa !2529, !ctir !147
  %tobool17 = icmp ne i8 %16, 0, !dbg !8543
  br i1 %tobool17, label %while.body18, label %while.end21, !dbg !8543

while.body18:                                     ; preds = %while.cond16
  %17 = load i8*, i8** %name.addr, align 8, !dbg !8546, !tbaa !2474
  %incdec.ptr19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8546
  store i8* %incdec.ptr19, i8** %name.addr, align 8, !dbg !8546, !tbaa !2474
  %18 = load i8, i8* %17, align 1, !dbg !8547, !tbaa !2529, !ctir !147
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !8548, !tbaa !2474
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8548
  store i8* %incdec.ptr20, i8** %dest.addr, align 8, !dbg !8548, !tbaa !2474
  store i8 %18, i8* %19, align 1, !dbg !8549, !tbaa !2529, !ctir !144
  br label %while.cond16, !dbg !8543, !llvm.loop !8550

while.end21:                                      ; preds = %while.cond16
  %20 = load i8*, i8** %dest.addr, align 8, !dbg !8551, !tbaa !2474
  store i8 0, i8* %20, align 1, !dbg !8552, !tbaa !2529, !ctir !144
  ret void, !dbg !8553
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !992 !ctir !661 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %file.addr = alloca i8*, align 8, !ctir !146
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !250
  %b = alloca i8, align 1, !ctir !141
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8558, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8560, !ctir !184
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8561, !ctir !190
  %1 = load i64, i64* %st_dev, align 8, !dbg !8561, !tbaa !8562, !ctir !194
  %2 = load i64, i64* @has_capability_cache.unsupported_device, align 8, !dbg !8563, !tbaa !2611
  %cmp = icmp eq i64 %1, %2, !dbg !8564
  br i1 %cmp, label %if.then, label %if.end, !dbg !8565

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8566
  store i32 95, i32* %call, align 4, !dbg !8568, !tbaa !2468, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !8569
  br label %return, !dbg !8569

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %b, metadata !8570, metadata !DIExpression()), !dbg !8571
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8572, !tbaa !2474
  %call1 = call zeroext i1 @has_capability(i8* %3), !dbg !8573
  %frombool = zext i1 %call1 to i8, !dbg !8571
  store i8 %frombool, i8* %b, align 1, !dbg !8571, !tbaa !2493
  %4 = load i8, i8* %b, align 1, !dbg !8574, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !8574
  br i1 %tobool, label %if.end7, label %land.lhs.true, !dbg !8576

land.lhs.true:                                    ; preds = %if.end
  %call2 = call i32* @__errno_location() #17, !dbg !8577
  %5 = load i32, i32* %call2, align 4, !dbg !8577, !tbaa !2468, !ctir !27
  %call3 = call zeroext i1 @errno_unsupported(i32 %5), !dbg !8578
  br i1 %call3, label %if.then4, label %if.end7, !dbg !8579

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8580, !tbaa !2474
  %stat5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8581, !ctir !184
  %st_dev6 = getelementptr inbounds %struct.stat, %struct.stat* %stat5, i32 0, i32 0, !dbg !8582, !ctir !190
  %7 = load i64, i64* %st_dev6, align 8, !dbg !8582, !tbaa !8562, !ctir !194
  store i64 %7, i64* @has_capability_cache.unsupported_device, align 8, !dbg !8583, !tbaa !2611
  br label %if.end7, !dbg !8584

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %8 = load i8, i8* %b, align 1, !dbg !8585, !tbaa !2493
  %tobool8 = trunc i8 %8 to i1, !dbg !8585
  store i1 %tobool8, i1* %retval, align 1, !dbg !8586
  br label %return, !dbg !8586

return:                                           ; preds = %if.end7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8587
  ret i1 %9, !dbg !8587
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getfilecon_cache(i8* %file, %struct.fileinfo* %f, i1 zeroext %deref) #0 !dbg !995 !ctir !665 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %file.addr = alloca i8*, align 8, !ctir !146
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !250
  %deref.addr = alloca i8, align 1, !ctir !141
  %r = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  %frombool = zext i1 %deref to i8
  store i8 %frombool, i8* %deref.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %deref.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8594, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8596, !ctir !184
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8597, !ctir !190
  %1 = load i64, i64* %st_dev, align 8, !dbg !8597, !tbaa !8562, !ctir !194
  %2 = load i64, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8598, !tbaa !2611
  %cmp = icmp eq i64 %1, %2, !dbg !8599
  br i1 %cmp, label %if.then, label %if.end, !dbg !8600

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8601
  store i32 95, i32* %call, align 4, !dbg !8603, !tbaa !2468, !ctir !27
  store i32 -1, i32* %retval, align 4, !dbg !8604
  br label %return, !dbg !8604

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8605, metadata !DIExpression()), !dbg !8606
  store i32 0, i32* %r, align 4, !dbg !8606, !tbaa !2468
  %3 = load i8, i8* %deref.addr, align 1, !dbg !8607, !tbaa !2493
  %tobool = trunc i8 %3 to i1, !dbg !8607
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8607

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %file.addr, align 8, !dbg !8608, !tbaa !2474
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8609, !tbaa !2474
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 6, !dbg !8610, !ctir !184
  %call1 = call i32 @getfilecon(i8* %4, i8** %scontext), !dbg !8611
  br label %cond.end, !dbg !8607

cond.false:                                       ; preds = %if.end
  %6 = load i8*, i8** %file.addr, align 8, !dbg !8612, !tbaa !2474
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8613, !tbaa !2474
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 6, !dbg !8614, !ctir !184
  %call3 = call i32 @lgetfilecon(i8* %6, i8** %scontext2), !dbg !8615
  br label %cond.end, !dbg !8607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call3, %cond.false ], !dbg !8607
  store i32 %cond, i32* %r, align 4, !dbg !8616, !tbaa !2468
  %8 = load i32, i32* %r, align 4, !dbg !8617, !tbaa !2468
  %cmp4 = icmp slt i32 %8, 0, !dbg !8619
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8620

land.lhs.true:                                    ; preds = %cond.end
  %call5 = call i32* @__errno_location() #17, !dbg !8621
  %9 = load i32, i32* %call5, align 4, !dbg !8621, !tbaa !2468, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %9), !dbg !8622
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8623

if.then7:                                         ; preds = %land.lhs.true
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8624, !tbaa !2474
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !8625, !ctir !184
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8626, !ctir !190
  %11 = load i64, i64* %st_dev9, align 8, !dbg !8626, !tbaa !8562, !ctir !194
  store i64 %11, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8627, !tbaa !2611
  br label %if.end10, !dbg !8628

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %cond.end
  %12 = load i32, i32* %r, align 4, !dbg !8629, !tbaa !2468
  store i32 %12, i32* %retval, align 4, !dbg !8630
  br label %return, !dbg !8630

return:                                           ; preds = %if.end10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8631
  ret i32 %13, !dbg !8631
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #0 !dbg !8632 !ctir !663 {
entry:
  %err.addr = alloca i32, align 4, !ctir !27
  store i32 %err, i32* %err.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  %0 = load i32, i32* %err.addr, align 4, !dbg !8635, !tbaa !2468
  %cmp = icmp eq i32 %0, 95, !dbg !8636
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8637

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8637

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8638
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @file_has_acl_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !998 !ctir !667 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %file.addr = alloca i8*, align 8, !ctir !146
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !250
  %n = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8639, metadata !DIExpression()), !dbg !8640
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8641, metadata !DIExpression()), !dbg !8642
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8643, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8645, !ctir !184
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8646, !ctir !190
  %1 = load i64, i64* %st_dev, align 8, !dbg !8646, !tbaa !8562, !ctir !194
  %2 = load i64, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8647, !tbaa !2611
  %cmp = icmp eq i64 %1, %2, !dbg !8648
  br i1 %cmp, label %if.then, label %if.end, !dbg !8649

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8650
  store i32 95, i32* %call, align 4, !dbg !8652, !tbaa !2468, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !8653
  br label %return, !dbg !8653

if.end:                                           ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !8654
  store i32 0, i32* %call1, align 4, !dbg !8655, !tbaa !2468, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8656, metadata !DIExpression()), !dbg !8657
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8658, !tbaa !2474
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8659, !tbaa !2474
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8660, !ctir !184
  %call3 = call i32 @file_has_acl(i8* %3, %struct.stat* %stat2), !dbg !8661
  store i32 %call3, i32* %n, align 4, !dbg !8657, !tbaa !2468
  %5 = load i32, i32* %n, align 4, !dbg !8662, !tbaa !2468
  %cmp4 = icmp sle i32 %5, 0, !dbg !8664
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8665

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #17, !dbg !8666
  %6 = load i32, i32* %call5, align 4, !dbg !8666, !tbaa !2468, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %6), !dbg !8667
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8668

if.then7:                                         ; preds = %land.lhs.true
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8669, !tbaa !2474
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 3, !dbg !8670, !ctir !184
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8671, !ctir !190
  %8 = load i64, i64* %st_dev9, align 8, !dbg !8671, !tbaa !8562, !ctir !194
  store i64 %8, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8672, !tbaa !2611
  br label %if.end10, !dbg !8673

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %9 = load i32, i32* %n, align 4, !dbg !8674, !tbaa !2468
  store i32 %9, i32* %retval, align 4, !dbg !8675
  br label %return, !dbg !8675

return:                                           ; preds = %if.end10, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8676
  ret i32 %10, !dbg !8676
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_link_name(i8* %filename, %struct.fileinfo* %f, i1 zeroext %command_line_arg) #0 !dbg !8677 !ctir !669 {
entry:
  %filename.addr = alloca i8*, align 8, !ctir !146
  %f.addr = alloca %struct.fileinfo*, align 8, !ctir !250
  %command_line_arg.addr = alloca i8, align 1, !ctir !141
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8680, metadata !DIExpression()), !dbg !8681
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !8684, !tbaa !2474
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8685, !tbaa !2474
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 3, !dbg !8686, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8687, !ctir !190
  %2 = load i64, i64* %st_size, align 8, !dbg !8687, !tbaa !4440, !ctir !180
  %call = call i8* @areadlink_with_size(i8* %0, i64 %2), !dbg !8688
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8689, !tbaa !2474
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 1, !dbg !8690, !ctir !184
  store i8* %call, i8** %linkname, align 8, !dbg !8691, !tbaa !4178, !ctir !143
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8692, !tbaa !2474
  %linkname1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 1, !dbg !8694, !ctir !184
  %5 = load i8*, i8** %linkname1, align 8, !dbg !8694, !tbaa !4178, !ctir !143
  %cmp = icmp eq i8* %5, null, !dbg !8695
  br i1 %cmp, label %if.then, label %if.end, !dbg !8696

if.then:                                          ; preds = %entry
  %6 = load i8, i8* %command_line_arg.addr, align 1, !dbg !8697, !tbaa !2493
  %tobool = trunc i8 %6 to i1, !dbg !8697
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i64 0, i64 0)) #13, !dbg !8698
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !8699, !tbaa !2474
  call void @file_failure(i1 zeroext %tobool, i8* %call2, i8* %7), !dbg !8700
  br label %if.end, !dbg !8700

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8701
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_link_name(i8* %name, i8* %linkname) #0 !dbg !8702 !ctir !671 {
entry:
  %retval = alloca i8*, align 8, !ctir !143
  %name.addr = alloca i8*, align 8, !ctir !146
  %linkname.addr = alloca i8*, align 8, !ctir !146
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8703, metadata !DIExpression()), !dbg !8704
  store i8* %linkname, i8** %linkname.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %linkname.addr, metadata !8705, metadata !DIExpression()), !dbg !8706
  %0 = load i8*, i8** %linkname.addr, align 8, !dbg !8707, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !8707
  br i1 %tobool, label %if.end, label %if.then, !dbg !8709

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8710
  br label %return, !dbg !8710

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %linkname.addr, align 8, !dbg !8711, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8711, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8711, !tbaa !2529
  %conv = sext i8 %2 to i32, !dbg !8711
  %cmp = icmp eq i32 %conv, 47, !dbg !8711
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8713

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %linkname.addr, align 8, !dbg !8714, !tbaa !2474
  %call = call noalias i8* @xstrdup(i8* %3), !dbg !8715
  store i8* %call, i8** %retval, align 8, !dbg !8716
  br label %return, !dbg !8716

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !8717, metadata !DIExpression()), !dbg !8718
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8719, !tbaa !2474
  %call4 = call i64 @dir_len(i8* %4) #16, !dbg !8720
  store i64 %call4, i64* %prefix_len, align 8, !dbg !8718, !tbaa !2611
  %5 = load i64, i64* %prefix_len, align 8, !dbg !8721, !tbaa !2611
  %cmp5 = icmp eq i64 %5, 0, !dbg !8723
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !8724

if.then7:                                         ; preds = %if.end3
  %6 = load i8*, i8** %linkname.addr, align 8, !dbg !8725, !tbaa !2474
  %call8 = call noalias i8* @xstrdup(i8* %6), !dbg !8726
  store i8* %call8, i8** %retval, align 8, !dbg !8727
  br label %return, !dbg !8727

if.end9:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8728, metadata !DIExpression()), !dbg !8729
  %7 = load i64, i64* %prefix_len, align 8, !dbg !8730, !tbaa !2611
  %add = add i64 %7, 1, !dbg !8731
  %8 = load i8*, i8** %linkname.addr, align 8, !dbg !8732, !tbaa !2474
  %call10 = call i64 @strlen(i8* %8) #16, !dbg !8733
  %add11 = add i64 %add, %call10, !dbg !8734
  %add12 = add i64 %add11, 1, !dbg !8735
  %call13 = call noalias i8* @xmalloc(i64 %add12), !dbg !8736
  store i8* %call13, i8** %p, align 8, !dbg !8729, !tbaa !2474
  %9 = load i8*, i8** %name.addr, align 8, !dbg !8737, !tbaa !2474
  %10 = load i64, i64* %prefix_len, align 8, !dbg !8737, !tbaa !2611
  %sub = sub i64 %10, 1, !dbg !8737
  %arrayidx14 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !8737, !ctir !146
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !8737, !tbaa !2529
  %conv15 = sext i8 %11 to i32, !dbg !8737
  %cmp16 = icmp eq i32 %conv15, 47, !dbg !8737
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !8739

if.then18:                                        ; preds = %if.end9
  %12 = load i64, i64* %prefix_len, align 8, !dbg !8740, !tbaa !2611
  %inc = add i64 %12, 1, !dbg !8740
  store i64 %inc, i64* %prefix_len, align 8, !dbg !8740, !tbaa !2611
  br label %if.end19, !dbg !8740

if.end19:                                         ; preds = %if.then18, %if.end9
  %13 = load i8*, i8** %p, align 8, !dbg !8741, !tbaa !2474
  %14 = load i8*, i8** %name.addr, align 8, !dbg !8742, !tbaa !2474
  %15 = load i64, i64* %prefix_len, align 8, !dbg !8743, !tbaa !2611
  %call20 = call i8* @stpncpy(i8* %13, i8* %14, i64 %15) #13, !dbg !8744
  %16 = load i8*, i8** %linkname.addr, align 8, !dbg !8745, !tbaa !2474
  %call21 = call i8* @stpcpy(i8* %call20, i8* %16) #13, !dbg !8746
  %17 = load i8*, i8** %p, align 8, !dbg !8747, !tbaa !2474
  store i8* %17, i8** %retval, align 8, !dbg !8748
  br label %return, !dbg !8748

return:                                           ; preds = %if.end19, %if.then7, %if.then2, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !8749
  ret i8* %18, !dbg !8749
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_width(i32 %u) #0 !dbg !8750 !ctir !673 {
entry:
  %u.addr = alloca i32, align 4, !ctir !675
  store i32 %u, i32* %u.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !8751, metadata !DIExpression()), !dbg !8752
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8753, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !8753
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8753

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8753

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %u.addr, align 4, !dbg !8754, !tbaa !2468
  %call = call i8* @getuser(i32 %1), !dbg !8755
  br label %cond.end, !dbg !8753

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8753
  %2 = load i32, i32* %u.addr, align 4, !dbg !8756, !tbaa !2468
  %conv = zext i32 %2 to i64, !dbg !8756
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8757
  ret i32 %call1, !dbg !8758
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_group_width(i32 %g) #0 !dbg !8759 !ctir !678 {
entry:
  %g.addr = alloca i32, align 4, !ctir !680
  store i32 %g, i32* %g.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8762, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !8762
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8762

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8762

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %g.addr, align 4, !dbg !8763, !tbaa !2468
  %call = call i8* @getgroup(i32 %1), !dbg !8764
  br label %cond.end, !dbg !8762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8762
  %2 = load i32, i32* %g.addr, align 4, !dbg !8765, !tbaa !2468
  %conv = zext i32 %2 to i64, !dbg !8765
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8766
  ret i32 %call1, !dbg !8767
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_or_group_width(i8* %name, i64 %id) #0 !dbg !8768 !ctir !676 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %name.addr = alloca i8*, align 8, !ctir !146
  %id.addr = alloca i64, align 8, !ctir !151
  %len = alloca i32, align 4, !ctir !27
  %buf = alloca [21 x i8], align 16, !ctir !656
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8769, metadata !DIExpression()), !dbg !8770
  store i64 %id, i64* %id.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !8771, metadata !DIExpression()), !dbg !8772
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8773, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !8773
  br i1 %tobool, label %if.then, label %if.else, !dbg !8775

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8776, metadata !DIExpression()), !dbg !8778
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8779, !tbaa !2474
  %call = call i32 @gnu_mbswidth(i8* %1, i32 0), !dbg !8780
  store i32 %call, i32* %len, align 4, !dbg !8778, !tbaa !2468
  %2 = load i32, i32* %len, align 4, !dbg !8781, !tbaa !2468
  %cmp = icmp sgt i32 0, %2, !dbg !8781
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8781

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8781

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %len, align 4, !dbg !8781, !tbaa !2468
  br label %cond.end, !dbg !8781

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !8781
  store i32 %cond, i32* %retval, align 4, !dbg !8782
  br label %return, !dbg !8782

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf, metadata !8783, metadata !DIExpression()), !dbg !8785
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8786
  %4 = load i64, i64* %id.addr, align 8, !dbg !8787, !tbaa !2611
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.221, i64 0, i64 0), i64 %4) #13, !dbg !8788
  %arraydecay2 = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8789
  %call3 = call i64 @strlen(i8* %arraydecay2) #16, !dbg !8790
  %conv = trunc i64 %call3 to i32, !dbg !8790
  store i32 %conv, i32* %retval, align 4, !dbg !8791
  br label %return, !dbg !8791

return:                                           ; preds = %if.else, %cond.end
  %5 = load i32, i32* %retval, align 4, !dbg !8792
  ret i32 %5, !dbg !8792
}

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #0 !dbg !8793 !ctir !663 {
entry:
  %err.addr = alloca i32, align 4, !ctir !27
  store i32 %err, i32* %err.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8794, metadata !DIExpression()), !dbg !8795
  %0 = load i32, i32* %err.addr, align 4, !dbg !8796, !tbaa !2468
  %cmp = icmp eq i32 %0, 22, !dbg !8797
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8798

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !8799, !tbaa !2468
  %cmp1 = icmp eq i32 %1, 38, !dbg !8800
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !8801

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* %err.addr, align 4, !dbg !8802, !tbaa !2468
  %call = call zeroext i1 @is_ENOTSUP(i32 %2), !dbg !8803
  br label %lor.end, !dbg !8801

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %3 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %3, !dbg !8804
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability(i8* %name) #0 !dbg !8805 !ctir !556 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8806, metadata !DIExpression()), !dbg !8807
  %call = call i32* @__errno_location() #17, !dbg !8808
  store i32 95, i32* %call, align 4, !dbg !8809, !tbaa !2468, !ctir !27
  ret i1 false, !dbg !8810
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @known_term_type() #0 !dbg !8811 !ctir !590 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %term = alloca i8*, align 8, !ctir !146
  %line = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %term, metadata !8812, metadata !DIExpression()), !dbg !8813
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i64 0, i64 0)) #13, !dbg !8814
  store i8* %call, i8** %term, align 8, !dbg !8813, !tbaa !2474
  %0 = load i8*, i8** %term, align 8, !dbg !8815, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !8815
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8817

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %term, align 8, !dbg !8818, !tbaa !2474
  %2 = load i8, i8* %1, align 1, !dbg !8819, !tbaa !2529, !ctir !147
  %tobool1 = icmp ne i8 %2, 0, !dbg !8819
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8820

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !8821
  br label %return, !dbg !8821

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %line, metadata !8822, metadata !DIExpression()), !dbg !8823
  store i8* getelementptr inbounds ([4304 x i8], [4304 x i8]* @G_line, i64 0, i64 0), i8** %line, align 8, !dbg !8823, !tbaa !2474
  br label %while.cond, !dbg !8824

while.cond:                                       ; preds = %if.end9, %if.end
  %3 = load i8*, i8** %line, align 8, !dbg !8825, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !8826
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4304 x i8]* @G_line to i64), !dbg !8826
  %cmp = icmp ult i64 %sub.ptr.sub, 4304, !dbg !8827
  br i1 %cmp, label %while.body, label %while.end, !dbg !8824

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %line, align 8, !dbg !8828, !tbaa !2474
  %call2 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), i64 5) #16, !dbg !8828
  %cmp3 = icmp eq i32 %call2, 0, !dbg !8831
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !8832

if.then4:                                         ; preds = %while.body
  %5 = load i8*, i8** %line, align 8, !dbg !8833, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 5, !dbg !8836
  %6 = load i8*, i8** %term, align 8, !dbg !8837, !tbaa !2474
  %call5 = call i32 @fnmatch(i8* %add.ptr, i8* %6, i32 0), !dbg !8838
  %cmp6 = icmp eq i32 %call5, 0, !dbg !8839
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8840

if.then7:                                         ; preds = %if.then4
  store i1 true, i1* %retval, align 1, !dbg !8841
  br label %return, !dbg !8841

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !8842

if.end9:                                          ; preds = %if.end8, %while.body
  %7 = load i8*, i8** %line, align 8, !dbg !8843, !tbaa !2474
  %call10 = call i64 @strlen(i8* %7) #16, !dbg !8844
  %add = add i64 %call10, 1, !dbg !8845
  %8 = load i8*, i8** %line, align 8, !dbg !8846, !tbaa !2474
  %add.ptr11 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !8846
  store i8* %add.ptr11, i8** %line, align 8, !dbg !8846, !tbaa !2474
  br label %while.cond, !dbg !8824, !llvm.loop !8847

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !8849
  br label %return, !dbg !8849

return:                                           ; preds = %while.end, %if.then7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8850
  ret i1 %9, !dbg !8850
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @get_funky_string(i8** %dest, i8** %src, i1 zeroext %equals_end, i64* %output_count) #0 !dbg !138 !ctir !139 {
entry:
  %dest.addr = alloca i8**, align 8, !ctir !142
  %src.addr = alloca i8**, align 8, !ctir !145
  %equals_end.addr = alloca i8, align 1, !ctir !141
  %output_count.addr = alloca i64*, align 8, !ctir !148
  %num = alloca i8, align 1, !ctir !144
  %count = alloca i64, align 8, !ctir !149
  %state = alloca i32, align 4, !ctir !137
  %p = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  store i8** %dest, i8*** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !8851, metadata !DIExpression()), !dbg !8852
  store i8** %src, i8*** %src.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !8853, metadata !DIExpression()), !dbg !8854
  %frombool = zext i1 %equals_end to i8
  store i8 %frombool, i8* %equals_end.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %equals_end.addr, metadata !8855, metadata !DIExpression()), !dbg !8856
  store i64* %output_count, i64** %output_count.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %output_count.addr, metadata !8857, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.declare(metadata i8* %num, metadata !8859, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8861, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata i8** %q, metadata !8867, metadata !DIExpression()), !dbg !8868
  %0 = load i8**, i8*** %src.addr, align 8, !dbg !8869, !tbaa !2474
  %1 = load i8*, i8** %0, align 8, !dbg !8870, !tbaa !2474, !ctir !146
  store i8* %1, i8** %p, align 8, !dbg !8871, !tbaa !2474
  %2 = load i8**, i8*** %dest.addr, align 8, !dbg !8872, !tbaa !2474
  %3 = load i8*, i8** %2, align 8, !dbg !8873, !tbaa !2474, !ctir !143
  store i8* %3, i8** %q, align 8, !dbg !8874, !tbaa !2474
  store i64 0, i64* %count, align 8, !dbg !8875, !tbaa !2611
  store i8 0, i8* %num, align 1, !dbg !8876, !tbaa !2529
  store i32 0, i32* %state, align 4, !dbg !8877, !tbaa !2529
  br label %while.cond, !dbg !8878

while.cond:                                       ; preds = %sw.epilog106, %entry
  %4 = load i32, i32* %state, align 4, !dbg !8879, !tbaa !2529
  %cmp = icmp ult i32 %4, 5, !dbg !8880
  br i1 %cmp, label %while.body, label %while.end, !dbg !8878

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %state, align 4, !dbg !8881, !tbaa !2529
  switch i32 %5, label %sw.default105 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb34
    i32 3, label %sw.bb50
    i32 4, label %sw.bb82
  ], !dbg !8883

sw.bb:                                            ; preds = %while.body
  %6 = load i8*, i8** %p, align 8, !dbg !8884, !tbaa !2474
  %7 = load i8, i8* %6, align 1, !dbg !8886, !tbaa !2529, !ctir !147
  %conv = sext i8 %7 to i32, !dbg !8886
  switch i32 %conv, label %sw.default [
    i32 58, label %sw.bb1
    i32 0, label %sw.bb1
    i32 92, label %sw.bb2
    i32 94, label %sw.bb3
    i32 61, label %sw.bb5
  ], !dbg !8887

sw.bb1:                                           ; preds = %sw.bb, %sw.bb
  store i32 5, i32* %state, align 4, !dbg !8888, !tbaa !2529
  br label %sw.epilog, !dbg !8890

sw.bb2:                                           ; preds = %sw.bb
  store i32 1, i32* %state, align 4, !dbg !8891, !tbaa !2529
  %8 = load i8*, i8** %p, align 8, !dbg !8892, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8892
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8892, !tbaa !2474
  br label %sw.epilog, !dbg !8893

sw.bb3:                                           ; preds = %sw.bb
  store i32 4, i32* %state, align 4, !dbg !8894, !tbaa !2529
  %9 = load i8*, i8** %p, align 8, !dbg !8895, !tbaa !2474
  %incdec.ptr4 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8895
  store i8* %incdec.ptr4, i8** %p, align 8, !dbg !8895, !tbaa !2474
  br label %sw.epilog, !dbg !8896

sw.bb5:                                           ; preds = %sw.bb
  %10 = load i8, i8* %equals_end.addr, align 1, !dbg !8897, !tbaa !2493
  %tobool = trunc i8 %10 to i1, !dbg !8897
  br i1 %tobool, label %if.then, label %if.end, !dbg !8899

if.then:                                          ; preds = %sw.bb5
  store i32 5, i32* %state, align 4, !dbg !8900, !tbaa !2529
  br label %sw.epilog, !dbg !8902

if.end:                                           ; preds = %sw.bb5
  br label %sw.default, !dbg !8903

sw.default:                                       ; preds = %sw.bb, %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !8904, !tbaa !2474
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !8904
  store i8* %incdec.ptr6, i8** %p, align 8, !dbg !8904, !tbaa !2474
  %12 = load i8, i8* %11, align 1, !dbg !8905, !tbaa !2529, !ctir !147
  %13 = load i8*, i8** %q, align 8, !dbg !8906, !tbaa !2474
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8906
  store i8* %incdec.ptr7, i8** %q, align 8, !dbg !8906, !tbaa !2474
  store i8 %12, i8* %13, align 1, !dbg !8907, !tbaa !2529, !ctir !144
  %14 = load i64, i64* %count, align 8, !dbg !8908, !tbaa !2611
  %inc = add i64 %14, 1, !dbg !8908
  store i64 %inc, i64* %count, align 8, !dbg !8908, !tbaa !2611
  br label %sw.epilog, !dbg !8909

sw.epilog:                                        ; preds = %sw.default, %if.then, %sw.bb3, %sw.bb2, %sw.bb1
  br label %sw.epilog106, !dbg !8910

sw.bb8:                                           ; preds = %while.body
  %15 = load i8*, i8** %p, align 8, !dbg !8911, !tbaa !2474
  %16 = load i8, i8* %15, align 1, !dbg !8912, !tbaa !2529, !ctir !147
  %conv9 = sext i8 %16 to i32, !dbg !8912
  switch i32 %conv9, label %sw.default25 [
    i32 48, label %sw.bb10
    i32 49, label %sw.bb10
    i32 50, label %sw.bb10
    i32 51, label %sw.bb10
    i32 52, label %sw.bb10
    i32 53, label %sw.bb10
    i32 54, label %sw.bb10
    i32 55, label %sw.bb10
    i32 120, label %sw.bb13
    i32 88, label %sw.bb13
    i32 97, label %sw.bb14
    i32 98, label %sw.bb15
    i32 101, label %sw.bb16
    i32 102, label %sw.bb17
    i32 110, label %sw.bb18
    i32 114, label %sw.bb19
    i32 116, label %sw.bb20
    i32 118, label %sw.bb21
    i32 63, label %sw.bb22
    i32 95, label %sw.bb23
    i32 0, label %sw.bb24
  ], !dbg !8913

sw.bb10:                                          ; preds = %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8
  store i32 2, i32* %state, align 4, !dbg !8914, !tbaa !2529
  %17 = load i8*, i8** %p, align 8, !dbg !8916, !tbaa !2474
  %18 = load i8, i8* %17, align 1, !dbg !8917, !tbaa !2529, !ctir !147
  %conv11 = sext i8 %18 to i32, !dbg !8917
  %sub = sub nsw i32 %conv11, 48, !dbg !8918
  %conv12 = trunc i32 %sub to i8, !dbg !8917
  store i8 %conv12, i8* %num, align 1, !dbg !8919, !tbaa !2529
  br label %sw.epilog26, !dbg !8920

sw.bb13:                                          ; preds = %sw.bb8, %sw.bb8
  store i32 3, i32* %state, align 4, !dbg !8921, !tbaa !2529
  store i8 0, i8* %num, align 1, !dbg !8922, !tbaa !2529
  br label %sw.epilog26, !dbg !8923

sw.bb14:                                          ; preds = %sw.bb8
  store i8 7, i8* %num, align 1, !dbg !8924, !tbaa !2529
  br label %sw.epilog26, !dbg !8925

sw.bb15:                                          ; preds = %sw.bb8
  store i8 8, i8* %num, align 1, !dbg !8926, !tbaa !2529
  br label %sw.epilog26, !dbg !8927

sw.bb16:                                          ; preds = %sw.bb8
  store i8 27, i8* %num, align 1, !dbg !8928, !tbaa !2529
  br label %sw.epilog26, !dbg !8929

sw.bb17:                                          ; preds = %sw.bb8
  store i8 12, i8* %num, align 1, !dbg !8930, !tbaa !2529
  br label %sw.epilog26, !dbg !8931

sw.bb18:                                          ; preds = %sw.bb8
  store i8 10, i8* %num, align 1, !dbg !8932, !tbaa !2529
  br label %sw.epilog26, !dbg !8933

sw.bb19:                                          ; preds = %sw.bb8
  store i8 13, i8* %num, align 1, !dbg !8934, !tbaa !2529
  br label %sw.epilog26, !dbg !8935

sw.bb20:                                          ; preds = %sw.bb8
  store i8 9, i8* %num, align 1, !dbg !8936, !tbaa !2529
  br label %sw.epilog26, !dbg !8937

sw.bb21:                                          ; preds = %sw.bb8
  store i8 11, i8* %num, align 1, !dbg !8938, !tbaa !2529
  br label %sw.epilog26, !dbg !8939

sw.bb22:                                          ; preds = %sw.bb8
  store i8 127, i8* %num, align 1, !dbg !8940, !tbaa !2529
  br label %sw.epilog26, !dbg !8941

sw.bb23:                                          ; preds = %sw.bb8
  store i8 32, i8* %num, align 1, !dbg !8942, !tbaa !2529
  br label %sw.epilog26, !dbg !8943

sw.bb24:                                          ; preds = %sw.bb8
  store i32 6, i32* %state, align 4, !dbg !8944, !tbaa !2529
  br label %sw.epilog26, !dbg !8945

sw.default25:                                     ; preds = %sw.bb8
  %19 = load i8*, i8** %p, align 8, !dbg !8946, !tbaa !2474
  %20 = load i8, i8* %19, align 1, !dbg !8947, !tbaa !2529, !ctir !147
  store i8 %20, i8* %num, align 1, !dbg !8948, !tbaa !2529
  br label %sw.epilog26, !dbg !8949

sw.epilog26:                                      ; preds = %sw.default25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb10
  %21 = load i32, i32* %state, align 4, !dbg !8950, !tbaa !2529
  %cmp27 = icmp eq i32 %21, 1, !dbg !8952
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !8953

if.then29:                                        ; preds = %sw.epilog26
  %22 = load i8, i8* %num, align 1, !dbg !8954, !tbaa !2529
  %23 = load i8*, i8** %q, align 8, !dbg !8956, !tbaa !2474
  %incdec.ptr30 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8956
  store i8* %incdec.ptr30, i8** %q, align 8, !dbg !8956, !tbaa !2474
  store i8 %22, i8* %23, align 1, !dbg !8957, !tbaa !2529, !ctir !144
  %24 = load i64, i64* %count, align 8, !dbg !8958, !tbaa !2611
  %inc31 = add i64 %24, 1, !dbg !8958
  store i64 %inc31, i64* %count, align 8, !dbg !8958, !tbaa !2611
  store i32 0, i32* %state, align 4, !dbg !8959, !tbaa !2529
  br label %if.end32, !dbg !8960

if.end32:                                         ; preds = %if.then29, %sw.epilog26
  %25 = load i8*, i8** %p, align 8, !dbg !8961, !tbaa !2474
  %incdec.ptr33 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !8961
  store i8* %incdec.ptr33, i8** %p, align 8, !dbg !8961, !tbaa !2474
  br label %sw.epilog106, !dbg !8962

sw.bb34:                                          ; preds = %while.body
  %26 = load i8*, i8** %p, align 8, !dbg !8963, !tbaa !2474
  %27 = load i8, i8* %26, align 1, !dbg !8965, !tbaa !2529, !ctir !147
  %conv35 = sext i8 %27 to i32, !dbg !8965
  %cmp36 = icmp slt i32 %conv35, 48, !dbg !8966
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !8967

lor.lhs.false:                                    ; preds = %sw.bb34
  %28 = load i8*, i8** %p, align 8, !dbg !8968, !tbaa !2474
  %29 = load i8, i8* %28, align 1, !dbg !8969, !tbaa !2529, !ctir !147
  %conv38 = sext i8 %29 to i32, !dbg !8969
  %cmp39 = icmp sgt i32 %conv38, 55, !dbg !8970
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !8971

if.then41:                                        ; preds = %lor.lhs.false, %sw.bb34
  %30 = load i8, i8* %num, align 1, !dbg !8972, !tbaa !2529
  %31 = load i8*, i8** %q, align 8, !dbg !8974, !tbaa !2474
  %incdec.ptr42 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8974
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !8974, !tbaa !2474
  store i8 %30, i8* %31, align 1, !dbg !8975, !tbaa !2529, !ctir !144
  %32 = load i64, i64* %count, align 8, !dbg !8976, !tbaa !2611
  %inc43 = add i64 %32, 1, !dbg !8976
  store i64 %inc43, i64* %count, align 8, !dbg !8976, !tbaa !2611
  store i32 0, i32* %state, align 4, !dbg !8977, !tbaa !2529
  br label %if.end49, !dbg !8978

if.else:                                          ; preds = %lor.lhs.false
  %33 = load i8, i8* %num, align 1, !dbg !8979, !tbaa !2529
  %conv44 = sext i8 %33 to i32, !dbg !8979
  %shl = shl i32 %conv44, 3, !dbg !8980
  %34 = load i8*, i8** %p, align 8, !dbg !8981, !tbaa !2474
  %incdec.ptr45 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !8981
  store i8* %incdec.ptr45, i8** %p, align 8, !dbg !8981, !tbaa !2474
  %35 = load i8, i8* %34, align 1, !dbg !8982, !tbaa !2529, !ctir !147
  %conv46 = sext i8 %35 to i32, !dbg !8982
  %sub47 = sub nsw i32 %conv46, 48, !dbg !8983
  %add = add nsw i32 %shl, %sub47, !dbg !8984
  %conv48 = trunc i32 %add to i8, !dbg !8985
  store i8 %conv48, i8* %num, align 1, !dbg !8986, !tbaa !2529
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41
  br label %sw.epilog106, !dbg !8987

sw.bb50:                                          ; preds = %while.body
  %36 = load i8*, i8** %p, align 8, !dbg !8988, !tbaa !2474
  %37 = load i8, i8* %36, align 1, !dbg !8989, !tbaa !2529, !ctir !147
  %conv51 = sext i8 %37 to i32, !dbg !8989
  switch i32 %conv51, label %sw.default78 [
    i32 48, label %sw.bb52
    i32 49, label %sw.bb52
    i32 50, label %sw.bb52
    i32 51, label %sw.bb52
    i32 52, label %sw.bb52
    i32 53, label %sw.bb52
    i32 54, label %sw.bb52
    i32 55, label %sw.bb52
    i32 56, label %sw.bb52
    i32 57, label %sw.bb52
    i32 97, label %sw.bb60
    i32 98, label %sw.bb60
    i32 99, label %sw.bb60
    i32 100, label %sw.bb60
    i32 101, label %sw.bb60
    i32 102, label %sw.bb60
    i32 65, label %sw.bb69
    i32 66, label %sw.bb69
    i32 67, label %sw.bb69
    i32 68, label %sw.bb69
    i32 69, label %sw.bb69
    i32 70, label %sw.bb69
  ], !dbg !8990

sw.bb52:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %38 = load i8, i8* %num, align 1, !dbg !8991, !tbaa !2529
  %conv53 = sext i8 %38 to i32, !dbg !8991
  %shl54 = shl i32 %conv53, 4, !dbg !8993
  %39 = load i8*, i8** %p, align 8, !dbg !8994, !tbaa !2474
  %incdec.ptr55 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8994
  store i8* %incdec.ptr55, i8** %p, align 8, !dbg !8994, !tbaa !2474
  %40 = load i8, i8* %39, align 1, !dbg !8995, !tbaa !2529, !ctir !147
  %conv56 = sext i8 %40 to i32, !dbg !8995
  %sub57 = sub nsw i32 %conv56, 48, !dbg !8996
  %add58 = add nsw i32 %shl54, %sub57, !dbg !8997
  %conv59 = trunc i32 %add58 to i8, !dbg !8998
  store i8 %conv59, i8* %num, align 1, !dbg !8999, !tbaa !2529
  br label %sw.epilog81, !dbg !9000

sw.bb60:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %41 = load i8, i8* %num, align 1, !dbg !9001, !tbaa !2529
  %conv61 = sext i8 %41 to i32, !dbg !9001
  %shl62 = shl i32 %conv61, 4, !dbg !9002
  %42 = load i8*, i8** %p, align 8, !dbg !9003, !tbaa !2474
  %incdec.ptr63 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !9003
  store i8* %incdec.ptr63, i8** %p, align 8, !dbg !9003, !tbaa !2474
  %43 = load i8, i8* %42, align 1, !dbg !9004, !tbaa !2529, !ctir !147
  %conv64 = sext i8 %43 to i32, !dbg !9004
  %sub65 = sub nsw i32 %conv64, 97, !dbg !9005
  %add66 = add nsw i32 %shl62, %sub65, !dbg !9006
  %add67 = add nsw i32 %add66, 10, !dbg !9007
  %conv68 = trunc i32 %add67 to i8, !dbg !9008
  store i8 %conv68, i8* %num, align 1, !dbg !9009, !tbaa !2529
  br label %sw.epilog81, !dbg !9010

sw.bb69:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %44 = load i8, i8* %num, align 1, !dbg !9011, !tbaa !2529
  %conv70 = sext i8 %44 to i32, !dbg !9011
  %shl71 = shl i32 %conv70, 4, !dbg !9012
  %45 = load i8*, i8** %p, align 8, !dbg !9013, !tbaa !2474
  %incdec.ptr72 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !9013
  store i8* %incdec.ptr72, i8** %p, align 8, !dbg !9013, !tbaa !2474
  %46 = load i8, i8* %45, align 1, !dbg !9014, !tbaa !2529, !ctir !147
  %conv73 = sext i8 %46 to i32, !dbg !9014
  %sub74 = sub nsw i32 %conv73, 65, !dbg !9015
  %add75 = add nsw i32 %shl71, %sub74, !dbg !9016
  %add76 = add nsw i32 %add75, 10, !dbg !9017
  %conv77 = trunc i32 %add76 to i8, !dbg !9018
  store i8 %conv77, i8* %num, align 1, !dbg !9019, !tbaa !2529
  br label %sw.epilog81, !dbg !9020

sw.default78:                                     ; preds = %sw.bb50
  %47 = load i8, i8* %num, align 1, !dbg !9021, !tbaa !2529
  %48 = load i8*, i8** %q, align 8, !dbg !9022, !tbaa !2474
  %incdec.ptr79 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !9022
  store i8* %incdec.ptr79, i8** %q, align 8, !dbg !9022, !tbaa !2474
  store i8 %47, i8* %48, align 1, !dbg !9023, !tbaa !2529, !ctir !144
  %49 = load i64, i64* %count, align 8, !dbg !9024, !tbaa !2611
  %inc80 = add i64 %49, 1, !dbg !9024
  store i64 %inc80, i64* %count, align 8, !dbg !9024, !tbaa !2611
  store i32 0, i32* %state, align 4, !dbg !9025, !tbaa !2529
  br label %sw.epilog81, !dbg !9026

sw.epilog81:                                      ; preds = %sw.default78, %sw.bb69, %sw.bb60, %sw.bb52
  br label %sw.epilog106, !dbg !9027

sw.bb82:                                          ; preds = %while.body
  store i32 0, i32* %state, align 4, !dbg !9028, !tbaa !2529
  %50 = load i8*, i8** %p, align 8, !dbg !9029, !tbaa !2474
  %51 = load i8, i8* %50, align 1, !dbg !9031, !tbaa !2529, !ctir !147
  %conv83 = sext i8 %51 to i32, !dbg !9031
  %cmp84 = icmp sge i32 %conv83, 64, !dbg !9032
  br i1 %cmp84, label %land.lhs.true, label %if.else95, !dbg !9033

land.lhs.true:                                    ; preds = %sw.bb82
  %52 = load i8*, i8** %p, align 8, !dbg !9034, !tbaa !2474
  %53 = load i8, i8* %52, align 1, !dbg !9035, !tbaa !2529, !ctir !147
  %conv86 = sext i8 %53 to i32, !dbg !9035
  %cmp87 = icmp sle i32 %conv86, 126, !dbg !9036
  br i1 %cmp87, label %if.then89, label %if.else95, !dbg !9037

if.then89:                                        ; preds = %land.lhs.true
  %54 = load i8*, i8** %p, align 8, !dbg !9038, !tbaa !2474
  %incdec.ptr90 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !9038
  store i8* %incdec.ptr90, i8** %p, align 8, !dbg !9038, !tbaa !2474
  %55 = load i8, i8* %54, align 1, !dbg !9040, !tbaa !2529, !ctir !147
  %conv91 = sext i8 %55 to i32, !dbg !9040
  %and = and i32 %conv91, 31, !dbg !9041
  %conv92 = trunc i32 %and to i8, !dbg !9040
  %56 = load i8*, i8** %q, align 8, !dbg !9042, !tbaa !2474
  %incdec.ptr93 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !9042
  store i8* %incdec.ptr93, i8** %q, align 8, !dbg !9042, !tbaa !2474
  store i8 %conv92, i8* %56, align 1, !dbg !9043, !tbaa !2529, !ctir !144
  %57 = load i64, i64* %count, align 8, !dbg !9044, !tbaa !2611
  %inc94 = add i64 %57, 1, !dbg !9044
  store i64 %inc94, i64* %count, align 8, !dbg !9044, !tbaa !2611
  br label %if.end104, !dbg !9045

if.else95:                                        ; preds = %land.lhs.true, %sw.bb82
  %58 = load i8*, i8** %p, align 8, !dbg !9046, !tbaa !2474
  %59 = load i8, i8* %58, align 1, !dbg !9048, !tbaa !2529, !ctir !147
  %conv96 = sext i8 %59 to i32, !dbg !9048
  %cmp97 = icmp eq i32 %conv96, 63, !dbg !9049
  br i1 %cmp97, label %if.then99, label %if.else102, !dbg !9050

if.then99:                                        ; preds = %if.else95
  %60 = load i8*, i8** %q, align 8, !dbg !9051, !tbaa !2474
  %incdec.ptr100 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !9051
  store i8* %incdec.ptr100, i8** %q, align 8, !dbg !9051, !tbaa !2474
  store i8 127, i8* %60, align 1, !dbg !9053, !tbaa !2529, !ctir !144
  %61 = load i64, i64* %count, align 8, !dbg !9054, !tbaa !2611
  %inc101 = add i64 %61, 1, !dbg !9054
  store i64 %inc101, i64* %count, align 8, !dbg !9054, !tbaa !2611
  br label %if.end103, !dbg !9055

if.else102:                                       ; preds = %if.else95
  store i32 6, i32* %state, align 4, !dbg !9056, !tbaa !2529
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.then99
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  br label %sw.epilog106, !dbg !9057

sw.default105:                                    ; preds = %while.body
  call void @abort() #15, !dbg !9058
  unreachable, !dbg !9058

sw.epilog106:                                     ; preds = %if.end104, %sw.epilog81, %if.end49, %if.end32, %sw.epilog
  br label %while.cond, !dbg !8878, !llvm.loop !9059

while.end:                                        ; preds = %while.cond
  %62 = load i8*, i8** %q, align 8, !dbg !9061, !tbaa !2474
  %63 = load i8**, i8*** %dest.addr, align 8, !dbg !9062, !tbaa !2474
  store i8* %62, i8** %63, align 8, !dbg !9063, !tbaa !2474, !ctir !143
  %64 = load i8*, i8** %p, align 8, !dbg !9064, !tbaa !2474
  %65 = load i8**, i8*** %src.addr, align 8, !dbg !9065, !tbaa !2474
  store i8* %64, i8** %65, align 8, !dbg !9066, !tbaa !2474, !ctir !146
  %66 = load i64, i64* %count, align 8, !dbg !9067, !tbaa !2611
  %67 = load i64*, i64** %output_count.addr, align 8, !dbg !9068, !tbaa !2474
  store i64 %66, i64* %67, align 8, !dbg !9069, !tbaa !2611, !ctir !149
  %68 = load i32, i32* %state, align 4, !dbg !9070, !tbaa !2529
  %cmp107 = icmp ne i32 %68, 6, !dbg !9071
  ret i1 %cmp107, !dbg !9072
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @getenv_quoting_style() #0 !dbg !9073 !ctir !336 {
entry:
  %q_style = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q_style, metadata !9074, metadata !DIExpression()), !dbg !9075
  %call = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i64 0, i64 0)) #13, !dbg !9076
  store i8* %call, i8** %q_style, align 8, !dbg !9075, !tbaa !2474
  %0 = load i8*, i8** %q_style, align 8, !dbg !9077, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !9077
  br i1 %tobool, label %if.then, label %if.end6, !dbg !9079

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9080, metadata !DIExpression()), !dbg !9082
  %1 = load i8*, i8** %q_style, align 8, !dbg !9083, !tbaa !2474
  %call1 = call i64 @argmatch(i8* %1, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4) #16, !dbg !9083
  %conv = trunc i64 %call1 to i32, !dbg !9083
  store i32 %conv, i32* %i, align 4, !dbg !9082, !tbaa !2468
  %2 = load i32, i32* %i, align 4, !dbg !9084, !tbaa !2468
  %cmp = icmp sle i32 0, %2, !dbg !9086
  br i1 %cmp, label %if.then3, label %if.else, !dbg !9087

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* %i, align 4, !dbg !9088, !tbaa !2468
  %idxprom = sext i32 %3 to i64, !dbg !9089
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %idxprom, !dbg !9089, !ctir !546
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9089, !tbaa !2529
  call void @set_quoting_style(%struct.quoting_options* null, i32 %4), !dbg !9090
  br label %if.end, !dbg !9090

if.else:                                          ; preds = %if.then
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !9091
  %5 = load i8*, i8** %q_style, align 8, !dbg !9092, !tbaa !2474
  %call5 = call i8* @quote(i8* %5), !dbg !9093
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call4, i8* %call5), !dbg !9094
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end6, !dbg !9095

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !9096
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_line_length(i8* %spec) #0 !dbg !9097 !ctir !556 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %spec.addr = alloca i8*, align 8, !ctir !146
  %val = alloca i64, align 8, !ctir !168
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i64* %val, metadata !9100, metadata !DIExpression()), !dbg !9101
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !9102, !tbaa !2474
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 0, i64* %val, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !9103
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !9104

sw.bb:                                            ; preds = %entry
  %1 = load i64, i64* %val, align 8, !dbg !9105, !tbaa !2611
  %cmp = icmp ult i64 %1, -1, !dbg !9105
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9105

cond.true:                                        ; preds = %sw.bb
  %2 = load i64, i64* %val, align 8, !dbg !9105, !tbaa !2611
  br label %cond.end, !dbg !9105

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !9105

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !9105
  store i64 %cond, i64* @line_length, align 8, !dbg !9107, !tbaa !2611
  store i1 true, i1* %retval, align 1, !dbg !9108
  br label %return, !dbg !9108

sw.bb1:                                           ; preds = %entry
  store i64 -1, i64* @line_length, align 8, !dbg !9109, !tbaa !2611
  store i1 true, i1* %retval, align 1, !dbg !9110
  br label %return, !dbg !9110

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9111
  br label %return, !dbg !9111

return:                                           ; preds = %sw.default, %sw.bb1, %cond.end
  %3 = load i1, i1* %retval, align 1, !dbg !9112
  ret i1 %3, !dbg !9112
}

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_ignore_pattern(i8* %pattern) #0 !dbg !9113 !ctir !558 {
entry:
  %pattern.addr = alloca i8*, align 8, !ctir !146
  %ignore = alloca %struct.ignore_pattern*, align 8, !ctir !499
  store i8* %pattern, i8** %pattern.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %ignore, metadata !9116, metadata !DIExpression()), !dbg !9117
  %call = call noalias i8* @xmalloc(i64 16), !dbg !9118
  %0 = bitcast i8* %call to %struct.ignore_pattern*, !dbg !9118
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %ignore, align 8, !dbg !9119, !tbaa !2474
  %1 = load i8*, i8** %pattern.addr, align 8, !dbg !9120, !tbaa !2474
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9121, !tbaa !2474
  %pattern1 = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !9122, !ctir !500
  store i8* %1, i8** %pattern1, align 8, !dbg !9123, !tbaa !3078, !ctir !146
  %3 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !9124, !tbaa !2474
  %4 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9125, !tbaa !2474
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %4, i32 0, i32 1, !dbg !9126, !ctir !500
  store %struct.ignore_pattern* %3, %struct.ignore_pattern** %next, align 8, !dbg !9127, !tbaa !3084, !ctir !499
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9128, !tbaa !2474
  store %struct.ignore_pattern* %5, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !9129, !tbaa !2474
  ret void, !dbg !9130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bad_cast(i8* %s) #0 !dbg !9131 !ctir !560 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !146
  store i8* %s, i8** %s.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9134, !tbaa !2474
  ret i8* %0, !dbg !9135
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #10 !dbg !9136 !ctir !173 {
entry:
  %status.addr = alloca i32, align 4, !ctir !27
  store i32 %status, i32* %status.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  %0 = load i32, i32* %status.addr, align 4, !dbg !9139, !tbaa !2468
  %cmp = icmp ne i32 %0, 0, !dbg !9141
  br i1 %cmp, label %if.then, label %if.else, !dbg !9142

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9143

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9144, !tbaa !2474
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0)) #13, !dbg !9144
  %2 = load i8*, i8** @program_name, align 8, !dbg !9144, !tbaa !2474
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !9144
  br label %do.end, !dbg !9144

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !9144

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !9146
  %3 = load i8*, i8** @program_name, align 8, !dbg !9148, !tbaa !2474
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3), !dbg !9149
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !9150
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9150, !tbaa !2474
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %4), !dbg !9150
  call void @emit_mandatory_arg_note(), !dbg !9151
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !9152
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9152, !tbaa !2474
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %5), !dbg !9152
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !9153
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9153, !tbaa !2474
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %6), !dbg !9153
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([362 x i8], [362 x i8]* @.str.17, i64 0, i64 0)) #13, !dbg !9154
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9154, !tbaa !2474
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %7), !dbg !9154
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !9155
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9155, !tbaa !2474
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %8), !dbg !9155
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([419 x i8], [419 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !9156
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9156, !tbaa !2474
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %9), !dbg !9156
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !9157
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9157, !tbaa !2474
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %10), !dbg !9157
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([245 x i8], [245 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !9158
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9158, !tbaa !2474
  %call19 = call i32 @fputs_unlocked(i8* %call18, %struct._IO_FILE* %11), !dbg !9158
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !9159
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9159, !tbaa !2474
  %call21 = call i32 @fputs_unlocked(i8* %call20, %struct._IO_FILE* %12), !dbg !9159
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !9160
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9160, !tbaa !2474
  %call23 = call i32 @fputs_unlocked(i8* %call22, %struct._IO_FILE* %13), !dbg !9160
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([422 x i8], [422 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !9161
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9161, !tbaa !2474
  %call25 = call i32 @fputs_unlocked(i8* %call24, %struct._IO_FILE* %14), !dbg !9161
  %call26 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !9162
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9162, !tbaa !2474
  %call27 = call i32 @fputs_unlocked(i8* %call26, %struct._IO_FILE* %15), !dbg !9162
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([354 x i8], [354 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !9163
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9163, !tbaa !2474
  %call29 = call i32 @fputs_unlocked(i8* %call28, %struct._IO_FILE* %16), !dbg !9163
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !9164
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9164, !tbaa !2474
  %call31 = call i32 @fputs_unlocked(i8* %call30, %struct._IO_FILE* %17), !dbg !9164
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([359 x i8], [359 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !9165
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9165, !tbaa !2474
  %call33 = call i32 @fputs_unlocked(i8* %call32, %struct._IO_FILE* %18), !dbg !9165
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([303 x i8], [303 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !9166
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9166, !tbaa !2474
  %call35 = call i32 @fputs_unlocked(i8* %call34, %struct._IO_FILE* %19), !dbg !9166
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([585 x i8], [585 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !9167
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9167, !tbaa !2474
  %call37 = call i32 @fputs_unlocked(i8* %call36, %struct._IO_FILE* %20), !dbg !9167
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([197 x i8], [197 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !9168
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9168, !tbaa !2474
  %call39 = call i32 @fputs_unlocked(i8* %call38, %struct._IO_FILE* %21), !dbg !9168
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([519 x i8], [519 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !9169
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9169, !tbaa !2474
  %call41 = call i32 @fputs_unlocked(i8* %call40, %struct._IO_FILE* %22), !dbg !9169
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !9170
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9170, !tbaa !2474
  %call43 = call i32 @fputs_unlocked(i8* %call42, %struct._IO_FILE* %23), !dbg !9170
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !9171
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9171, !tbaa !2474
  %call45 = call i32 @fputs_unlocked(i8* %call44, %struct._IO_FILE* %24), !dbg !9171
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([372 x i8], [372 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !9172
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9172, !tbaa !2474
  %call47 = call i32 @fputs_unlocked(i8* %call46, %struct._IO_FILE* %25), !dbg !9172
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([363 x i8], [363 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !9173
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9173, !tbaa !2474
  %call49 = call i32 @fputs_unlocked(i8* %call48, %struct._IO_FILE* %26), !dbg !9173
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !9174
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9174, !tbaa !2474
  %call51 = call i32 @fputs_unlocked(i8* %call50, %struct._IO_FILE* %27), !dbg !9174
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !9175
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9175, !tbaa !2474
  %call53 = call i32 @fputs_unlocked(i8* %call52, %struct._IO_FILE* %28), !dbg !9175
  call void @emit_size_note(), !dbg !9176
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([376 x i8], [376 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !9177
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9177, !tbaa !2474
  %call55 = call i32 @fputs_unlocked(i8* %call54, %struct._IO_FILE* %29), !dbg !9177
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([286 x i8], [286 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !9178
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9178, !tbaa !2474
  %call57 = call i32 @fputs_unlocked(i8* %call56, %struct._IO_FILE* %30), !dbg !9178
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !9179
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9179, !tbaa !2474
  %call59 = call i32 @fputs_unlocked(i8* %call58, %struct._IO_FILE* %31), !dbg !9179
  %32 = load i32, i32* @ls_mode, align 4, !dbg !9180, !tbaa !2468
  %cmp60 = icmp eq i32 %32, 1, !dbg !9180
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !9180

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !9180

cond.false:                                       ; preds = %if.else
  %33 = load i32, i32* @ls_mode, align 4, !dbg !9180, !tbaa !2468
  %cmp61 = icmp eq i32 %33, 2, !dbg !9180
  %34 = zext i1 %cmp61 to i64, !dbg !9180
  %cond = select i1 %cmp61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !9180
  br label %cond.end, !dbg !9180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond62 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond, %cond.false ], !dbg !9180
  call void @emit_ancillary_info(i8* %cond62), !dbg !9181
  br label %if.end

if.end:                                           ; preds = %cond.end, %do.end
  %35 = load i32, i32* %status.addr, align 4, !dbg !9182, !tbaa !2468
  call void @exit(i32 %35) #15, !dbg !9183
  unreachable, !dbg !9183
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @dcgettext(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @abformat_init() #0 !dbg !9184 !ctir !336 {
entry:
  %pb = alloca [2 x i8*], align 16, !ctir !549
  %recent = alloca i32, align 4, !ctir !27
  %abmon = alloca [12 x [128 x i8]], align 16, !ctir !562
  %recent9 = alloca i32, align 4, !ctir !27
  %fmt = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  %nfmt = alloca i8*, align 8, !ctir !143
  %nbytes = alloca i32, align 4, !ctir !27
  %prefix_len = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata [2 x i8*]* %pb, metadata !9185, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !9187, metadata !DIExpression()), !dbg !9189
  store i32 0, i32* %recent, align 4, !dbg !9189, !tbaa !2468
  br label %for.cond, !dbg !9190

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %recent, align 4, !dbg !9191, !tbaa !2468
  %cmp = icmp slt i32 %0, 2, !dbg !9193
  br i1 %cmp, label %for.body, label %for.end, !dbg !9194

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %recent, align 4, !dbg !9195, !tbaa !2468
  %idxprom = sext i32 %1 to i64, !dbg !9196
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom, !dbg !9196, !ctir !549
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9196, !tbaa !2474
  %call = call i8* @first_percent_b(i8* %2) #16, !dbg !9197
  %3 = load i32, i32* %recent, align 4, !dbg !9198, !tbaa !2468
  %idxprom1 = sext i32 %3 to i64, !dbg !9199
  %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom1, !dbg !9199, !ctir !549
  store i8* %call, i8** %arrayidx2, align 8, !dbg !9200, !tbaa !2474
  br label %for.inc, !dbg !9199

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %recent, align 4, !dbg !9201, !tbaa !2468
  %inc = add nsw i32 %4, 1, !dbg !9201
  store i32 %inc, i32* %recent, align 4, !dbg !9201, !tbaa !2468
  br label %for.cond, !dbg !9202, !llvm.loop !9203

for.end:                                          ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 0, !dbg !9205, !ctir !549
  %5 = load i8*, i8** %arrayidx3, align 16, !dbg !9205, !tbaa !2474
  %tobool = icmp ne i8* %5, null, !dbg !9205
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !9207

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 1, !dbg !9208, !ctir !549
  %6 = load i8*, i8** %arrayidx4, align 8, !dbg !9208, !tbaa !2474
  %tobool5 = icmp ne i8* %6, null, !dbg !9208
  br i1 %tobool5, label %if.end, label %if.then, !dbg !9209

if.then:                                          ; preds = %lor.lhs.false
  br label %return, !dbg !9210

if.end:                                           ; preds = %lor.lhs.false, %for.end
  call void @llvm.dbg.declare(metadata [12 x [128 x i8]]* %abmon, metadata !9211, metadata !DIExpression()), !dbg !9212
  %arraydecay = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 0, !dbg !9213
  %call6 = call zeroext i1 @abmon_init([128 x i8]* %arraydecay), !dbg !9215
  br i1 %call6, label %if.end8, label %if.then7, !dbg !9216

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !9217

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %recent9, metadata !9218, metadata !DIExpression()), !dbg !9220
  store i32 0, i32* %recent9, align 4, !dbg !9220, !tbaa !2468
  br label %for.cond10, !dbg !9221

for.cond10:                                       ; preds = %for.inc54, %if.end8
  %7 = load i32, i32* %recent9, align 4, !dbg !9222, !tbaa !2468
  %cmp11 = icmp slt i32 %7, 2, !dbg !9224
  br i1 %cmp11, label %for.body12, label %for.end56, !dbg !9225

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !9226, metadata !DIExpression()), !dbg !9228
  %8 = load i32, i32* %recent9, align 4, !dbg !9229, !tbaa !2468
  %idxprom13 = sext i32 %8 to i64, !dbg !9230
  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom13, !dbg !9230, !ctir !549
  %9 = load i8*, i8** %arrayidx14, align 8, !dbg !9230, !tbaa !2474
  store i8* %9, i8** %fmt, align 8, !dbg !9228, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9231, metadata !DIExpression()), !dbg !9233
  store i32 0, i32* %i, align 4, !dbg !9233, !tbaa !2468
  br label %for.cond15, !dbg !9234

for.cond15:                                       ; preds = %for.inc51, %for.body12
  %10 = load i32, i32* %i, align 4, !dbg !9235, !tbaa !2468
  %cmp16 = icmp slt i32 %10, 12, !dbg !9237
  br i1 %cmp16, label %for.body17, label %for.end53, !dbg !9238

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !9239, metadata !DIExpression()), !dbg !9241
  %11 = load i32, i32* %recent9, align 4, !dbg !9242, !tbaa !2468
  %idxprom18 = sext i32 %11 to i64, !dbg !9243
  %arrayidx19 = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom18, !dbg !9243, !ctir !565
  %12 = load i32, i32* %i, align 4, !dbg !9244, !tbaa !2468
  %idxprom20 = sext i32 %12 to i64, !dbg !9243
  %arrayidx21 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx19, i64 0, i64 %idxprom20, !dbg !9243, !ctir !562
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx21, i64 0, i64 0, !dbg !9243
  store i8* %arraydecay22, i8** %nfmt, align 8, !dbg !9241, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !9245, metadata !DIExpression()), !dbg !9246
  %13 = load i32, i32* %recent9, align 4, !dbg !9247, !tbaa !2468
  %idxprom23 = sext i32 %13 to i64, !dbg !9249
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom23, !dbg !9249, !ctir !549
  %14 = load i8*, i8** %arrayidx24, align 8, !dbg !9249, !tbaa !2474
  %tobool25 = icmp ne i8* %14, null, !dbg !9249
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !9250

if.then26:                                        ; preds = %for.body17
  %15 = load i8*, i8** %nfmt, align 8, !dbg !9251, !tbaa !2474
  %16 = load i8*, i8** %fmt, align 8, !dbg !9252, !tbaa !2474
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %16) #13, !dbg !9253
  store i32 %call27, i32* %nbytes, align 4, !dbg !9254, !tbaa !2468
  br label %if.end44, !dbg !9255

if.else:                                          ; preds = %for.body17
  %17 = load i32, i32* %recent9, align 4, !dbg !9256, !tbaa !2468
  %idxprom28 = sext i32 %17 to i64, !dbg !9259
  %arrayidx29 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom28, !dbg !9259, !ctir !549
  %18 = load i8*, i8** %arrayidx29, align 8, !dbg !9259, !tbaa !2474
  %19 = load i8*, i8** %fmt, align 8, !dbg !9260, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !9261
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !9261
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9261
  %cmp30 = icmp sle i64 %sub.ptr.sub, 128, !dbg !9262
  br i1 %cmp30, label %if.end32, label %if.then31, !dbg !9263

if.then31:                                        ; preds = %if.else
  br label %return, !dbg !9264

if.end32:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %prefix_len, metadata !9265, metadata !DIExpression()), !dbg !9266
  %20 = load i32, i32* %recent9, align 4, !dbg !9267, !tbaa !2468
  %idxprom33 = sext i32 %20 to i64, !dbg !9268
  %arrayidx34 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom33, !dbg !9268, !ctir !549
  %21 = load i8*, i8** %arrayidx34, align 8, !dbg !9268, !tbaa !2474
  %22 = load i8*, i8** %fmt, align 8, !dbg !9269, !tbaa !2474
  %sub.ptr.lhs.cast35 = ptrtoint i8* %21 to i64, !dbg !9270
  %sub.ptr.rhs.cast36 = ptrtoint i8* %22 to i64, !dbg !9270
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !9270
  %conv = trunc i64 %sub.ptr.sub37 to i32, !dbg !9268
  store i32 %conv, i32* %prefix_len, align 4, !dbg !9266, !tbaa !2468
  %23 = load i8*, i8** %nfmt, align 8, !dbg !9271, !tbaa !2474
  %24 = load i32, i32* %prefix_len, align 4, !dbg !9272, !tbaa !2468
  %25 = load i8*, i8** %fmt, align 8, !dbg !9273, !tbaa !2474
  %26 = load i32, i32* %i, align 4, !dbg !9274, !tbaa !2468
  %idxprom38 = sext i32 %26 to i64, !dbg !9275
  %arrayidx39 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 %idxprom38, !dbg !9275, !ctir !562
  %arraydecay40 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx39, i64 0, i64 0, !dbg !9275
  %27 = load i32, i32* %recent9, align 4, !dbg !9276, !tbaa !2468
  %idxprom41 = sext i32 %27 to i64, !dbg !9277
  %arrayidx42 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom41, !dbg !9277, !ctir !549
  %28 = load i8*, i8** %arrayidx42, align 8, !dbg !9277, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 2, !dbg !9278
  %call43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i64 0, i64 0), i32 %24, i8* %25, i8* %arraydecay40, i8* %add.ptr) #13, !dbg !9279
  store i32 %call43, i32* %nbytes, align 4, !dbg !9280, !tbaa !2468
  br label %if.end44

if.end44:                                         ; preds = %if.end32, %if.then26
  %29 = load i32, i32* %nbytes, align 4, !dbg !9281, !tbaa !2468
  %cmp45 = icmp sle i32 0, %29, !dbg !9283
  br i1 %cmp45, label %land.lhs.true, label %if.then49, !dbg !9284

land.lhs.true:                                    ; preds = %if.end44
  %30 = load i32, i32* %nbytes, align 4, !dbg !9285, !tbaa !2468
  %cmp47 = icmp slt i32 %30, 128, !dbg !9286
  br i1 %cmp47, label %if.end50, label %if.then49, !dbg !9287

if.then49:                                        ; preds = %land.lhs.true, %if.end44
  br label %return, !dbg !9288

if.end50:                                         ; preds = %land.lhs.true
  br label %for.inc51, !dbg !9289

for.inc51:                                        ; preds = %if.end50
  %31 = load i32, i32* %i, align 4, !dbg !9290, !tbaa !2468
  %inc52 = add nsw i32 %31, 1, !dbg !9290
  store i32 %inc52, i32* %i, align 4, !dbg !9290, !tbaa !2468
  br label %for.cond15, !dbg !9291, !llvm.loop !9292

for.end53:                                        ; preds = %for.cond15
  br label %for.inc54, !dbg !9294

for.inc54:                                        ; preds = %for.end53
  %32 = load i32, i32* %recent9, align 4, !dbg !9295, !tbaa !2468
  %inc55 = add nsw i32 %32, 1, !dbg !9295
  store i32 %inc55, i32* %recent9, align 4, !dbg !9295, !tbaa !2468
  br label %for.cond10, !dbg !9296, !llvm.loop !9297

for.end56:                                        ; preds = %for.cond10
  store i8 1, i8* @use_abformat, align 1, !dbg !9299, !tbaa !2493
  br label %return, !dbg !9300

return:                                           ; preds = %for.end56, %if.then49, %if.then31, %if.then7, %if.then
  ret void, !dbg !9300
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i8* @first_percent_b(i8* %fmt) #9 !dbg !9301 !ctir !567 {
entry:
  %retval = alloca i8*, align 8, !ctir !146
  %fmt.addr = alloca i8*, align 8, !ctir !146
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  br label %for.cond, !dbg !9304

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !9305, !tbaa !2474
  %1 = load i8, i8* %0, align 1, !dbg !9308, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %1, 0, !dbg !9309
  br i1 %tobool, label %for.body, label %for.end, !dbg !9309

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !9310, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !9310, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9310, !tbaa !2529
  %conv = sext i8 %3 to i32, !dbg !9310
  %cmp = icmp eq i32 %conv, 37, !dbg !9312
  br i1 %cmp, label %if.then, label %if.end, !dbg !9313

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !9314, !tbaa !2474
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !9314, !ctir !146
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !9314, !tbaa !2529
  %conv3 = sext i8 %5 to i32, !dbg !9314
  switch i32 %conv3, label %sw.epilog [
    i32 98, label %sw.bb
    i32 37, label %sw.bb4
  ], !dbg !9315

sw.bb:                                            ; preds = %if.then
  %6 = load i8*, i8** %fmt.addr, align 8, !dbg !9316, !tbaa !2474
  store i8* %6, i8** %retval, align 8, !dbg !9318
  br label %return, !dbg !9318

sw.bb4:                                           ; preds = %if.then
  %7 = load i8*, i8** %fmt.addr, align 8, !dbg !9319, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9319
  store i8* %incdec.ptr, i8** %fmt.addr, align 8, !dbg !9319, !tbaa !2474
  br label %sw.epilog, !dbg !9320

sw.epilog:                                        ; preds = %if.then, %sw.bb4
  br label %if.end, !dbg !9321

if.end:                                           ; preds = %sw.epilog, %for.body
  br label %for.inc, !dbg !9322

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !9323, !tbaa !2474
  %incdec.ptr5 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9323
  store i8* %incdec.ptr5, i8** %fmt.addr, align 8, !dbg !9323, !tbaa !2474
  br label %for.cond, !dbg !9324, !llvm.loop !9325

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9327
  br label %return, !dbg !9327

return:                                           ; preds = %for.end, %sw.bb
  %9 = load i8*, i8** %retval, align 8, !dbg !9328
  ret i8* %9, !dbg !9328
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abmon_init([128 x i8]* %abmon) #0 !dbg !9329 !ctir !569 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %abmon.addr = alloca [128 x i8]*, align 8, !ctir !571
  %required_mon_width = alloca i64, align 8, !ctir !149
  %curr_max_width = alloca i64, align 8, !ctir !149
  %i = alloca i32, align 4, !ctir !27
  %width = alloca i64, align 8, !ctir !149
  %abbr = alloca i8*, align 8, !ctir !146
  %alignment = alloca i32, align 4, !ctir !574
  %req = alloca i64, align 8, !ctir !149
  store [128 x i8]* %abmon, [128 x i8]** %abmon.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata [128 x i8]** %abmon.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.declare(metadata i64* %required_mon_width, metadata !9332, metadata !DIExpression()), !dbg !9333
  store i64 12, i64* %required_mon_width, align 8, !dbg !9333, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %curr_max_width, metadata !9334, metadata !DIExpression()), !dbg !9335
  br label %do.body, !dbg !9336

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i64, i64* %required_mon_width, align 8, !dbg !9337, !tbaa !2611
  store i64 %0, i64* %curr_max_width, align 8, !dbg !9339, !tbaa !2611
  store i64 0, i64* %required_mon_width, align 8, !dbg !9340, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9341, metadata !DIExpression()), !dbg !9343
  store i32 0, i32* %i, align 4, !dbg !9343, !tbaa !2468
  br label %for.cond, !dbg !9344

for.cond:                                         ; preds = %for.inc, %do.body
  %1 = load i32, i32* %i, align 4, !dbg !9345, !tbaa !2468
  %cmp = icmp slt i32 %1, 12, !dbg !9347
  br i1 %cmp, label %for.body, label %for.end, !dbg !9348

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %width, metadata !9349, metadata !DIExpression()), !dbg !9351
  %2 = load i64, i64* %curr_max_width, align 8, !dbg !9352, !tbaa !2611
  store i64 %2, i64* %width, align 8, !dbg !9351, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %abbr, metadata !9353, metadata !DIExpression()), !dbg !9354
  %3 = load i32, i32* %i, align 4, !dbg !9355, !tbaa !2468
  %add = add nsw i32 131086, %3, !dbg !9356
  %call = call i8* @rpl_nl_langinfo(i32 %add), !dbg !9357
  store i8* %call, i8** %abbr, align 8, !dbg !9354, !tbaa !2474
  %4 = load i8*, i8** %abbr, align 8, !dbg !9358, !tbaa !2474
  %call1 = call i8* @strchr(i8* %4, i32 37) #16, !dbg !9360
  %tobool = icmp ne i8* %call1, null, !dbg !9360
  br i1 %tobool, label %if.then, label %if.end, !dbg !9361

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !9362
  br label %return, !dbg !9362

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %alignment, metadata !9363, metadata !DIExpression()), !dbg !9364
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !9365
  %5 = load i16*, i16** %call2, align 8, !dbg !9365, !tbaa !2474, !ctir !575
  %6 = load i8*, i8** %abbr, align 8, !dbg !9365, !tbaa !2474
  %7 = load i8, i8* %6, align 1, !dbg !9365, !tbaa !2529, !ctir !147
  %call3 = call zeroext i8 @to_uchar(i8 signext %7), !dbg !9365
  %conv = zext i8 %call3 to i32, !dbg !9365
  %idxprom = sext i32 %conv to i64, !dbg !9365
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !9365, !ctir !575
  %8 = load i16, i16* %arrayidx, align 2, !dbg !9365, !tbaa !5852
  %conv4 = zext i16 %8 to i32, !dbg !9365
  %and = and i32 %conv4, 2048, !dbg !9365
  %tobool5 = icmp ne i32 %and, 0, !dbg !9365
  %9 = zext i1 %tobool5 to i64, !dbg !9365
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !9365
  store i32 %cond, i32* %alignment, align 4, !dbg !9364, !tbaa !2529
  call void @llvm.dbg.declare(metadata i64* %req, metadata !9366, metadata !DIExpression()), !dbg !9367
  %10 = load i8*, i8** %abbr, align 8, !dbg !9368, !tbaa !2474
  %11 = load [128 x i8]*, [128 x i8]** %abmon.addr, align 8, !dbg !9369, !tbaa !2474
  %12 = load i32, i32* %i, align 4, !dbg !9370, !tbaa !2468
  %idxprom6 = sext i32 %12 to i64, !dbg !9369
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 %idxprom6, !dbg !9369, !ctir !571
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx7, i64 0, i64 0, !dbg !9369
  %13 = load i32, i32* %alignment, align 4, !dbg !9371, !tbaa !2529
  %call8 = call i64 @mbsalign(i8* %10, i8* %arraydecay, i64 128, i64* %width, i32 %13, i32 0), !dbg !9372
  store i64 %call8, i64* %req, align 8, !dbg !9367, !tbaa !2611
  %14 = load i64, i64* %req, align 8, !dbg !9373, !tbaa !2611
  %cmp9 = icmp ult i64 %14, 128, !dbg !9375
  br i1 %cmp9, label %if.end12, label %if.then11, !dbg !9376

if.then11:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9377
  br label %return, !dbg !9377

if.end12:                                         ; preds = %if.end
  %15 = load i64, i64* %required_mon_width, align 8, !dbg !9378, !tbaa !2611
  %16 = load i64, i64* %width, align 8, !dbg !9378, !tbaa !2611
  %cmp13 = icmp ugt i64 %15, %16, !dbg !9378
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !9378

cond.true:                                        ; preds = %if.end12
  %17 = load i64, i64* %required_mon_width, align 8, !dbg !9378, !tbaa !2611
  br label %cond.end, !dbg !9378

cond.false:                                       ; preds = %if.end12
  %18 = load i64, i64* %width, align 8, !dbg !9378, !tbaa !2611
  br label %cond.end, !dbg !9378

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i64 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !9378
  store i64 %cond15, i64* %required_mon_width, align 8, !dbg !9379, !tbaa !2611
  br label %for.inc, !dbg !9380

for.inc:                                          ; preds = %cond.end
  %19 = load i32, i32* %i, align 4, !dbg !9381, !tbaa !2468
  %inc = add nsw i32 %19, 1, !dbg !9381
  store i32 %inc, i32* %i, align 4, !dbg !9381, !tbaa !2468
  br label %for.cond, !dbg !9382, !llvm.loop !9383

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !9385

do.cond:                                          ; preds = %for.end
  %20 = load i64, i64* %curr_max_width, align 8, !dbg !9386, !tbaa !2611
  %21 = load i64, i64* %required_mon_width, align 8, !dbg !9387, !tbaa !2611
  %cmp16 = icmp ugt i64 %20, %21, !dbg !9388
  br i1 %cmp16, label %do.body, label %do.end, !dbg !9385, !llvm.loop !9389

do.end:                                           ; preds = %do.cond
  store i1 true, i1* %retval, align 1, !dbg !9391
  br label %return, !dbg !9391

return:                                           ; preds = %do.end, %if.then11, %if.then
  %22 = load i1, i1* %retval, align 1, !dbg !9392
  ret i1 %22, !dbg !9392
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #0 !dbg !9393 !ctir !336 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.231, i64 0, i64 0)) #13, !dbg !9394
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9394, !tbaa !2474
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9394
  ret void, !dbg !9395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_size_note() #0 !dbg !9396 !ctir !336 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.232, i64 0, i64 0)) #13, !dbg !9397
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9397, !tbaa !2474
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9397
  ret void, !dbg !9398
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #0 !dbg !793 !ctir !558 {
entry:
  %program.addr = alloca i8*, align 8, !ctir !146
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !789
  %node = alloca i8*, align 8, !ctir !146
  %map_prog = alloca %struct.infomap*, align 8, !ctir !797
  %lc_messages = alloca i8*, align 8, !ctir !146
  store i8* %program, i8** %program.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !9399, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !9401, metadata !DIExpression()), !dbg !9402
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !9402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !9402
  call void @llvm.dbg.declare(metadata i8** %node, metadata !9403, metadata !DIExpression()), !dbg !9404
  %1 = load i8*, i8** %program.addr, align 8, !dbg !9405, !tbaa !2474
  store i8* %1, i8** %node, align 8, !dbg !9404, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !9406, metadata !DIExpression()), !dbg !9407
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !9408
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !9407, !tbaa !2474
  br label %while.cond, !dbg !9409

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9410, !tbaa !2474
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !9411, !ctir !790
  %3 = load i8*, i8** %program1, align 8, !dbg !9411, !tbaa !9412, !ctir !146
  %tobool = icmp ne i8* %3, null, !dbg !9410
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9414

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !9415, !tbaa !2474
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9415, !tbaa !2474
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !9415, !ctir !790
  %6 = load i8*, i8** %program2, align 8, !dbg !9415, !tbaa !9412, !ctir !146
  %call = call i32 @strcmp(i8* %4, i8* %6) #16, !dbg !9415
  %cmp = icmp eq i32 %call, 0, !dbg !9415
  %lnot = xor i1 %cmp, true, !dbg !9416
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !9417
  br i1 %7, label %while.body, label %while.end, !dbg !9409

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9418, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !9418
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !9418, !tbaa !2474
  br label %while.cond, !dbg !9409, !llvm.loop !9419

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9420, !tbaa !2474
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !9422, !ctir !790
  %10 = load i8*, i8** %node3, align 8, !dbg !9422, !tbaa !9423, !ctir !146
  %tobool4 = icmp ne i8* %10, null, !dbg !9420
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9424

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9425, !tbaa !2474
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !9426, !ctir !790
  %12 = load i8*, i8** %node5, align 8, !dbg !9426, !tbaa !9423, !ctir !146
  store i8* %12, i8** %node, align 8, !dbg !9427, !tbaa !2474
  br label %if.end, !dbg !9428

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i64 0, i64 0)) #13, !dbg !9429
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0)), !dbg !9430
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !9431, metadata !DIExpression()), !dbg !9432
  %call8 = call i8* @setlocale(i32 5, i8* null) #13, !dbg !9433
  store i8* %call8, i8** %lc_messages, align 8, !dbg !9432, !tbaa !2474
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !9434, !tbaa !2474
  %tobool9 = icmp ne i8* %13, null, !dbg !9434
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !9436

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !9437, !tbaa !2474
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.243, i64 0, i64 0), i64 3) #16, !dbg !9437
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9437
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !9438

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.244, i64 0, i64 0)) #13, !dbg !9439
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9439, !tbaa !2474
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !9439
  br label %if.end15, !dbg !9441

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.245, i64 0, i64 0)) #13, !dbg !9442
  %16 = load i8*, i8** %program.addr, align 8, !dbg !9443, !tbaa !2474
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0), i8* %16), !dbg !9444
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.246, i64 0, i64 0)) #13, !dbg !9445
  %17 = load i8*, i8** %node, align 8, !dbg !9446, !tbaa !2474
  %18 = load i8*, i8** %node, align 8, !dbg !9447, !tbaa !2474
  %19 = load i8*, i8** %program.addr, align 8, !dbg !9448, !tbaa !2474
  %cmp19 = icmp eq i8* %18, %19, !dbg !9449
  %20 = zext i1 %cmp19 to i64, !dbg !9447
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !9447
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !9450
  ret void, !dbg !9451
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #0 !dbg !9452 !ctir !1484 {
entry:
  %retval = alloca i8*, align 8, !ctir !143
  %file.addr = alloca i8*, align 8, !ctir !146
  %size.addr = alloca i64, align 8, !ctir !149
  %symlink_max = alloca i64, align 8, !ctir !149
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !149
  %initial_limit = alloca i64, align 8, !ctir !149
  %buf_size = alloca i64, align 8, !ctir !149
  %r = alloca i64, align 8, !ctir !1655
  %link_length = alloca i64, align 8, !ctir !149
  %stackbuf = alloca [128 x i8], align 16, !ctir !572
  %buf = alloca i8*, align 8, !ctir !143
  %buffer = alloca i8*, align 8, !ctir !143
  %saved_errno = alloca i32, align 4, !ctir !27
  %shrinked_buffer = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9454, metadata !DIExpression()), !dbg !9455
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9458, metadata !DIExpression()), !dbg !9459
  store i64 1024, i64* %symlink_max, align 8, !dbg !9459, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9460, metadata !DIExpression()), !dbg !9461
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9461, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9464, !tbaa !2611
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9465, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !9466
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9464

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9467, !tbaa !2611
  %add = add i64 %2, 1, !dbg !9468
  br label %cond.end, !dbg !9464

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9469, !tbaa !2611
  br label %cond.end, !dbg !9464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9464
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9463, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9470, metadata !DIExpression()), !dbg !9471
  %4 = load i64, i64* %size.addr, align 8, !dbg !9472, !tbaa !2611
  %cmp1 = icmp eq i64 %4, 0, !dbg !9473
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9472

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9472

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9474, !tbaa !2611
  %6 = load i64, i64* %initial_limit, align 8, !dbg !9475, !tbaa !2611
  %cmp4 = icmp ult i64 %5, %6, !dbg !9476
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9474

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !9477, !tbaa !2611
  %add6 = add i64 %7, 1, !dbg !9478
  br label %cond.end8, !dbg !9474

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !9479, !tbaa !2611
  br label %cond.end8, !dbg !9474

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9474
  br label %cond.end10, !dbg !9472

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9472
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9471, !tbaa !2611
  br label %while.body, !dbg !9480

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9481, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9484, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !9486, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9488, metadata !DIExpression()), !dbg !9489
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !9490
  store i8* %arraydecay, i8** %buf, align 8, !dbg !9489, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i8* null, i8** %buffer, align 8, !dbg !9492, !tbaa !2474
  %9 = load i64, i64* %size.addr, align 8, !dbg !9493, !tbaa !2611
  %cmp12 = icmp eq i64 %9, 0, !dbg !9495
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !9496

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !9497, !tbaa !2611
  %cmp13 = icmp eq i64 %10, 128, !dbg !9498
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !9499

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !9500, !tbaa !2611
  %call = call noalias i8* @malloc(i64 %11) #13, !dbg !9502
  store i8* %call, i8** %buffer, align 8, !dbg !9503, !tbaa !2474
  store i8* %call, i8** %buf, align 8, !dbg !9504, !tbaa !2474
  %12 = load i8*, i8** %buffer, align 8, !dbg !9505, !tbaa !2474
  %tobool = icmp ne i8* %12, null, !dbg !9505
  br i1 %tobool, label %if.end, label %if.then14, !dbg !9507

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !9508
  br label %return, !dbg !9508

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !9509

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9510, !tbaa !2474
  %14 = load i8*, i8** %buf, align 8, !dbg !9511, !tbaa !2474
  %15 = load i64, i64* %buf_size, align 8, !dbg !9512, !tbaa !2611
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #13, !dbg !9513
  store i64 %call16, i64* %r, align 8, !dbg !9514, !tbaa !2611
  %16 = load i64, i64* %r, align 8, !dbg !9515, !tbaa !2611
  store i64 %16, i64* %link_length, align 8, !dbg !9516, !tbaa !2611
  %17 = load i64, i64* %r, align 8, !dbg !9517, !tbaa !2611
  %cmp17 = icmp slt i64 %17, 0, !dbg !9519
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !9520

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #17, !dbg !9521
  %18 = load i32, i32* %call19, align 4, !dbg !9521, !tbaa !2468, !ctir !27
  %cmp20 = icmp ne i32 %18, 34, !dbg !9522
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9523

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9524, metadata !DIExpression()), !dbg !9526
  %call22 = call i32* @__errno_location() #17, !dbg !9527
  %19 = load i32, i32* %call22, align 4, !dbg !9527, !tbaa !2468, !ctir !27
  store i32 %19, i32* %saved_errno, align 4, !dbg !9526, !tbaa !2468
  %20 = load i8*, i8** %buffer, align 8, !dbg !9528, !tbaa !2474
  call void @free(i8* %20) #13, !dbg !9529
  %21 = load i32, i32* %saved_errno, align 4, !dbg !9530, !tbaa !2468
  %call23 = call i32* @__errno_location() #17, !dbg !9531
  store i32 %21, i32* %call23, align 4, !dbg !9532, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9533
  br label %return, !dbg !9533

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !9534, !tbaa !2611
  %23 = load i64, i64* %buf_size, align 8, !dbg !9536, !tbaa !2611
  %cmp25 = icmp ult i64 %22, %23, !dbg !9537
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !9538

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !9539, !tbaa !2474
  %25 = load i64, i64* %link_length, align 8, !dbg !9541, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9539, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !9542, !tbaa !2529
  %26 = load i8*, i8** %buffer, align 8, !dbg !9543, !tbaa !2474
  %tobool27 = icmp ne i8* %26, null, !dbg !9543
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !9545

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !9546, !tbaa !2611
  %add29 = add i64 %27, 1, !dbg !9548
  %call30 = call noalias i8* @malloc(i64 %add29) #13, !dbg !9549
  store i8* %call30, i8** %buffer, align 8, !dbg !9550, !tbaa !2474
  %28 = load i8*, i8** %buffer, align 8, !dbg !9551, !tbaa !2474
  %tobool31 = icmp ne i8* %28, null, !dbg !9551
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9553

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !9554, !tbaa !2474
  %30 = load i8*, i8** %buf, align 8, !dbg !9555, !tbaa !2474
  %31 = load i64, i64* %link_length, align 8, !dbg !9556, !tbaa !2611
  %add33 = add i64 %31, 1, !dbg !9557
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !9558
  store i8* %29, i8** %retval, align 8, !dbg !9559
  br label %return, !dbg !9559

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !9560

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !9561, !tbaa !2611
  %add35 = add i64 %32, 1, !dbg !9563
  %33 = load i64, i64* %buf_size, align 8, !dbg !9564, !tbaa !2611
  %cmp36 = icmp ult i64 %add35, %33, !dbg !9565
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9566

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9567, metadata !DIExpression()), !dbg !9569
  %34 = load i8*, i8** %buffer, align 8, !dbg !9570, !tbaa !2474
  %35 = load i64, i64* %link_length, align 8, !dbg !9571, !tbaa !2611
  %add38 = add i64 %35, 1, !dbg !9572
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #13, !dbg !9573
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9569, !tbaa !2474
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9574, !tbaa !2474
  %cmp40 = icmp ne i8* %36, null, !dbg !9576
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9577

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9578, !tbaa !2474
  store i8* %37, i8** %buffer, align 8, !dbg !9579, !tbaa !2474
  br label %if.end42, !dbg !9580

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9581

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9582, !tbaa !2474
  store i8* %38, i8** %retval, align 8, !dbg !9583
  br label %return, !dbg !9583

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9584, !tbaa !2474
  call void @free(i8* %39) #13, !dbg !9585
  %40 = load i64, i64* %buf_size, align 8, !dbg !9586, !tbaa !2611
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9588
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9589

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9590, !tbaa !2611
  %mul = mul i64 %41, 2, !dbg !9590
  store i64 %mul, i64* %buf_size, align 8, !dbg !9590, !tbaa !2611
  br label %if.end54, !dbg !9591

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9592, !tbaa !2611
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9594
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9595

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9596, !tbaa !2611
  br label %if.end53, !dbg !9597

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #17, !dbg !9598
  store i32 12, i32* %call52, align 4, !dbg !9600, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9601
  br label %return, !dbg !9601

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !9480, !llvm.loop !9602

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9604
  ret i8* %43, !dbg !9604
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #0 !dbg !9605 !ctir !336 {
entry:
  call void @usage(i32 1), !dbg !9606
  ret void, !dbg !9607
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9608 !ctir !1034 {
entry:
  %retval = alloca i64, align 8, !ctir !552
  %arg.addr = alloca i8*, align 8, !ctir !146
  %arglist.addr = alloca i8**, align 8, !ctir !555
  %vallist.addr = alloca i8*, align 8, !ctir !175
  %valsize.addr = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %arglen = alloca i64, align 8, !ctir !149
  %matchind = alloca i64, align 8, !ctir !552
  %ambiguous = alloca i8, align 1, !ctir !141
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9609, metadata !DIExpression()), !dbg !9610
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9611, metadata !DIExpression()), !dbg !9612
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9613, metadata !DIExpression()), !dbg !9614
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9615, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9617, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !9619, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !9621, metadata !DIExpression()), !dbg !9622
  store i64 -1, i64* %matchind, align 8, !dbg !9622, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !9623, metadata !DIExpression()), !dbg !9624
  store i8 0, i8* %ambiguous, align 1, !dbg !9624, !tbaa !2493
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9625, !tbaa !2474
  %call = call i64 @strlen(i8* %0) #16, !dbg !9626
  store i64 %call, i64* %arglen, align 8, !dbg !9627, !tbaa !2611
  store i64 0, i64* %i, align 8, !dbg !9628, !tbaa !2611
  br label %for.cond, !dbg !9630

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9631, !tbaa !2474
  %2 = load i64, i64* %i, align 8, !dbg !9633, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9631, !ctir !555
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9631, !tbaa !2474
  %tobool = icmp ne i8* %3, null, !dbg !9634
  br i1 %tobool, label %for.body, label %for.end, !dbg !9634

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !9635, !tbaa !2474
  %5 = load i64, i64* %i, align 8, !dbg !9638, !tbaa !2611
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !9635, !ctir !555
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !9635, !tbaa !2474
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9639, !tbaa !2474
  %8 = load i64, i64* %arglen, align 8, !dbg !9640, !tbaa !2611
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #16, !dbg !9641
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9641
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !9642

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9643, !tbaa !2474
  %10 = load i64, i64* %i, align 8, !dbg !9646, !tbaa !2611
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !9643, !ctir !555
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !9643, !tbaa !2474
  %call5 = call i64 @strlen(i8* %11) #16, !dbg !9647
  %12 = load i64, i64* %arglen, align 8, !dbg !9648, !tbaa !2611
  %cmp = icmp eq i64 %call5, %12, !dbg !9649
  br i1 %cmp, label %if.then6, label %if.else, !dbg !9650

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !9651, !tbaa !2611
  store i64 %13, i64* %retval, align 8, !dbg !9652
  br label %return, !dbg !9652

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !9653, !tbaa !2611
  %cmp7 = icmp eq i64 %14, -1, !dbg !9655
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9656

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !9657, !tbaa !2611
  store i64 %15, i64* %matchind, align 8, !dbg !9658, !tbaa !2611
  br label %if.end16, !dbg !9659

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !9660, !tbaa !2474
  %cmp10 = icmp eq i8* %16, null, !dbg !9663
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !9664

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !9665, !tbaa !2474
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !9666, !tbaa !2611
  %19 = load i64, i64* %matchind, align 8, !dbg !9667, !tbaa !2611
  %mul = mul i64 %18, %19, !dbg !9668
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !9669
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !9670, !tbaa !2474
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !9671, !tbaa !2611
  %22 = load i64, i64* %i, align 8, !dbg !9672, !tbaa !2611
  %mul11 = mul i64 %21, %22, !dbg !9673
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !9674
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !9675, !tbaa !2611
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #16, !dbg !9676
  %tobool14 = icmp ne i32 %call13, 0, !dbg !9676
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !9677

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !9678, !tbaa !2493
  br label %if.end, !dbg !9680

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !9681

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !9682

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !9683, !tbaa !2611
  %inc = add i64 %24, 1, !dbg !9683
  store i64 %inc, i64* %i, align 8, !dbg !9683, !tbaa !2611
  br label %for.cond, !dbg !9684, !llvm.loop !9685

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !9687, !tbaa !2493
  %tobool19 = trunc i8 %25 to i1, !dbg !9687
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !9689

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !9690
  br label %return, !dbg !9690

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !9691, !tbaa !2611
  store i64 %26, i64* %retval, align 8, !dbg !9692
  br label %return, !dbg !9692

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !9693
  ret i64 %27, !dbg !9693
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #0 !dbg !9694 !ctir !1036 {
entry:
  %context.addr = alloca i8*, align 8, !ctir !146
  %value.addr = alloca i8*, align 8, !ctir !146
  %problem.addr = alloca i64, align 8, !ctir !552
  %format = alloca i8*, align 8, !ctir !146
  store i8* %context, i8** %context.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9695, metadata !DIExpression()), !dbg !9696
  store i8* %value, i8** %value.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9697, metadata !DIExpression()), !dbg !9698
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !9699, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.declare(metadata i8** %format, metadata !9701, metadata !DIExpression()), !dbg !9702
  %0 = load i64, i64* %problem.addr, align 8, !dbg !9703, !tbaa !2611
  %cmp = icmp eq i64 %0, -1, !dbg !9704
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9703

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.257, i64 0, i64 0)) #13, !dbg !9705
  br label %cond.end, !dbg !9703

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.258, i64 0, i64 0)) #13, !dbg !9706
  br label %cond.end, !dbg !9703

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !9703
  store i8* %cond, i8** %format, align 8, !dbg !9702, !tbaa !2474
  %1 = load i8*, i8** %format, align 8, !dbg !9707, !tbaa !2474
  %2 = load i8*, i8** %value.addr, align 8, !dbg !9708, !tbaa !2474
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !9709
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9710, !tbaa !2474
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !9711
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !9712
  ret void, !dbg !9713
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #0 !dbg !9714 !ctir !1038 {
entry:
  %arglist.addr = alloca i8**, align 8, !ctir !555
  %vallist.addr = alloca i8*, align 8, !ctir !175
  %valsize.addr = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %last_val = alloca i8*, align 8, !ctir !146
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9721, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !9723, metadata !DIExpression()), !dbg !9724
  store i8* null, i8** %last_val, align 8, !dbg !9724, !tbaa !2474
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.259, i64 0, i64 0)) #13, !dbg !9725
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9725, !tbaa !2474
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9725
  store i64 0, i64* %i, align 8, !dbg !9726, !tbaa !2611
  br label %for.cond, !dbg !9728

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9729, !tbaa !2474
  %2 = load i64, i64* %i, align 8, !dbg !9731, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9729, !ctir !555
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9729, !tbaa !2474
  %tobool = icmp ne i8* %3, null, !dbg !9732
  br i1 %tobool, label %for.body, label %for.end, !dbg !9732

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !9733, !tbaa !2611
  %cmp = icmp eq i64 %4, 0, !dbg !9735
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9736

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !9737, !tbaa !2474
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !9738, !tbaa !2474
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9739, !tbaa !2611
  %8 = load i64, i64* %i, align 8, !dbg !9740, !tbaa !2611
  %mul = mul i64 %7, %8, !dbg !9741
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !9742
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !9743, !tbaa !2611
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #16, !dbg !9744
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9744
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9745

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9746, !tbaa !2474
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !9748, !tbaa !2474
  %12 = load i64, i64* %i, align 8, !dbg !9749, !tbaa !2611
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !9748, !ctir !555
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !9748, !tbaa !2474
  %call5 = call i8* @quote(i8* %13), !dbg !9750
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.260, i64 0, i64 0), i8* %call5), !dbg !9751
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !9752, !tbaa !2474
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !9753, !tbaa !2611
  %16 = load i64, i64* %i, align 8, !dbg !9754, !tbaa !2611
  %mul7 = mul i64 %15, %16, !dbg !9755
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !9756
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !9757, !tbaa !2474
  br label %if.end, !dbg !9758

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9759, !tbaa !2474
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !9761, !tbaa !2474
  %19 = load i64, i64* %i, align 8, !dbg !9762, !tbaa !2611
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !9761, !ctir !555
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !9761, !tbaa !2474
  %call10 = call i8* @quote(i8* %20), !dbg !9763
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.261, i64 0, i64 0), i8* %call10), !dbg !9764
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9765

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !9766, !tbaa !2611
  %inc = add i64 %21, 1, !dbg !9766
  store i64 %inc, i64* %i, align 8, !dbg !9766, !tbaa !2611
  br label %for.cond, !dbg !9767, !llvm.loop !9768

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9770, !tbaa !2474
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !9770
  ret void, !dbg !9771
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #0 !dbg !9772 !ctir !1078 {
entry:
  %retval = alloca i64, align 8, !ctir !552
  %context.addr = alloca i8*, align 8, !ctir !146
  %arg.addr = alloca i8*, align 8, !ctir !146
  %arglist.addr = alloca i8**, align 8, !ctir !555
  %vallist.addr = alloca i8*, align 8, !ctir !175
  %valsize.addr = alloca i64, align 8, !ctir !149
  %exit_fn.addr = alloca void ()*, align 8, !ctir !523
  %res = alloca i64, align 8, !ctir !552
  store i8* %context, i8** %context.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9777, metadata !DIExpression()), !dbg !9778
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata i64* %res, metadata !9785, metadata !DIExpression()), !dbg !9786
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9787, !tbaa !2474
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9788, !tbaa !2474
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !9789, !tbaa !2474
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !9790, !tbaa !2611
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #16, !dbg !9791
  store i64 %call, i64* %res, align 8, !dbg !9786, !tbaa !2611
  %4 = load i64, i64* %res, align 8, !dbg !9792, !tbaa !2611
  %cmp = icmp sge i64 %4, 0, !dbg !9794
  br i1 %cmp, label %if.then, label %if.end, !dbg !9795

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !9796, !tbaa !2611
  store i64 %5, i64* %retval, align 8, !dbg !9797
  br label %return, !dbg !9797

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !9798, !tbaa !2474
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9799, !tbaa !2474
  %8 = load i64, i64* %res, align 8, !dbg !9800, !tbaa !2611
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !9801
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9802, !tbaa !2474
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !9803, !tbaa !2474
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !9804, !tbaa !2611
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !9805
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !9806, !tbaa !2474
  call void %12(), !dbg !9807
  store i64 -1, i64* %retval, align 8, !dbg !9808
  br label %return, !dbg !9808

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !9809
  ret i64 %13, !dbg !9809
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9810 !ctir !1080 {
entry:
  %retval = alloca i8*, align 8, !ctir !146
  %value.addr = alloca i8*, align 8, !ctir !175
  %arglist.addr = alloca i8**, align 8, !ctir !555
  %vallist.addr = alloca i8*, align 8, !ctir !175
  %valsize.addr = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  store i8* %value, i8** %value.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9815, metadata !DIExpression()), !dbg !9816
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i64 0, i64* %i, align 8, !dbg !9821, !tbaa !2611
  br label %for.cond, !dbg !9823

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !9824, !tbaa !2474
  %1 = load i64, i64* %i, align 8, !dbg !9826, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !9824, !ctir !555
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9824, !tbaa !2474
  %tobool = icmp ne i8* %2, null, !dbg !9827
  br i1 %tobool, label %for.body, label %for.end, !dbg !9827

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !9828, !tbaa !2474
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !9830, !tbaa !2474
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !9831, !tbaa !2611
  %6 = load i64, i64* %i, align 8, !dbg !9832, !tbaa !2611
  %mul = mul i64 %5, %6, !dbg !9833
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !9834
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9835, !tbaa !2611
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #16, !dbg !9836
  %tobool1 = icmp ne i32 %call, 0, !dbg !9836
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9837

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !9838, !tbaa !2474
  %9 = load i64, i64* %i, align 8, !dbg !9839, !tbaa !2611
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !9838, !ctir !555
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !9838, !tbaa !2474
  store i8* %10, i8** %retval, align 8, !dbg !9840
  br label %return, !dbg !9840

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9841

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !9842, !tbaa !2611
  %inc = add i64 %11, 1, !dbg !9842
  store i64 %inc, i64* %i, align 8, !dbg !9842, !tbaa !2611
  br label %for.cond, !dbg !9843, !llvm.loop !9844

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9846
  br label %return, !dbg !9846

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !9847
  ret i8* %12, !dbg !9847
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #0 !dbg !9848 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  %0 = load i32, i32* %c.addr, align 4, !dbg !9852, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9853

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9854
  br label %return, !dbg !9854

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9856
  br label %return, !dbg !9856

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9857
  ret i1 %1, !dbg !9857
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #0 !dbg !9858 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9859, metadata !DIExpression()), !dbg !9860
  %0 = load i32, i32* %c.addr, align 4, !dbg !9861, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9862

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9863
  br label %return, !dbg !9863

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9865
  br label %return, !dbg !9865

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9866
  ret i1 %1, !dbg !9866
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #0 !dbg !9867 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  %0 = load i32, i32* %c.addr, align 4, !dbg !9870, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9871

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9872
  br label %return, !dbg !9872

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9874
  br label %return, !dbg !9874

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9875
  ret i1 %1, !dbg !9875
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #0 !dbg !9876 !ctir !663 {
entry:
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9877, metadata !DIExpression()), !dbg !9878
  %0 = load i32, i32* %c.addr, align 4, !dbg !9879, !tbaa !2468
  %cmp = icmp eq i32 %0, 32, !dbg !9880
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9881

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9882, !tbaa !2468
  %cmp1 = icmp eq i32 %1, 9, !dbg !9883
  br label %lor.end, !dbg !9881

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !9884
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #0 !dbg !9885 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9886, metadata !DIExpression()), !dbg !9887
  %0 = load i32, i32* %c.addr, align 4, !dbg !9888, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !9889

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9890
  br label %return, !dbg !9890

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9892
  br label %return, !dbg !9892

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9893
  ret i1 %1, !dbg !9893
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #0 !dbg !9894 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9895, metadata !DIExpression()), !dbg !9896
  %0 = load i32, i32* %c.addr, align 4, !dbg !9897, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !9898

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9899
  br label %return, !dbg !9899

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9901
  br label %return, !dbg !9901

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9902
  ret i1 %1, !dbg !9902
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #0 !dbg !9903 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9904, metadata !DIExpression()), !dbg !9905
  %0 = load i32, i32* %c.addr, align 4, !dbg !9906, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9907

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9908
  br label %return, !dbg !9908

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9910
  br label %return, !dbg !9910

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9911
  ret i1 %1, !dbg !9911
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #0 !dbg !9912 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9913, metadata !DIExpression()), !dbg !9914
  %0 = load i32, i32* %c.addr, align 4, !dbg !9915, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9916

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9917
  br label %return, !dbg !9917

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9919
  br label %return, !dbg !9919

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9920
  ret i1 %1, !dbg !9920
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #0 !dbg !9921 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9922, metadata !DIExpression()), !dbg !9923
  %0 = load i32, i32* %c.addr, align 4, !dbg !9924, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9925

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9926
  br label %return, !dbg !9926

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9928
  br label %return, !dbg !9928

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9929
  ret i1 %1, !dbg !9929
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #0 !dbg !9930 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9931, metadata !DIExpression()), !dbg !9932
  %0 = load i32, i32* %c.addr, align 4, !dbg !9933, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !9934

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9935
  br label %return, !dbg !9935

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9937
  br label %return, !dbg !9937

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9938
  ret i1 %1, !dbg !9938
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #0 !dbg !9939 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9940, metadata !DIExpression()), !dbg !9941
  %0 = load i32, i32* %c.addr, align 4, !dbg !9942, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !9943

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9944
  br label %return, !dbg !9944

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9946
  br label %return, !dbg !9946

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9947
  ret i1 %1, !dbg !9947
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #0 !dbg !9948 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9949, metadata !DIExpression()), !dbg !9950
  %0 = load i32, i32* %c.addr, align 4, !dbg !9951, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9952

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9953
  br label %return, !dbg !9953

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9955
  br label %return, !dbg !9955

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9956
  ret i1 %1, !dbg !9956
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #0 !dbg !9957 !ctir !663 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  %0 = load i32, i32* %c.addr, align 4, !dbg !9960, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !9961

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9962
  br label %return, !dbg !9962

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9964
  br label %return, !dbg !9964

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9965
  ret i1 %1, !dbg !9965
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #0 !dbg !9966 !ctir !1660 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  %0 = load i32, i32* %c.addr, align 4, !dbg !9969, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9970

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9971, !tbaa !2468
  %sub = sub nsw i32 %1, 65, !dbg !9973
  %add = add nsw i32 %sub, 97, !dbg !9974
  store i32 %add, i32* %retval, align 4, !dbg !9975
  br label %return, !dbg !9975

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9976, !tbaa !2468
  store i32 %2, i32* %retval, align 4, !dbg !9977
  br label %return, !dbg !9977

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9978
  ret i32 %3, !dbg !9978
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #0 !dbg !9979 !ctir !1660 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %c.addr = alloca i32, align 4, !ctir !27
  store i32 %c, i32* %c.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9980, metadata !DIExpression()), !dbg !9981
  %0 = load i32, i32* %c.addr, align 4, !dbg !9982, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9983

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9984, !tbaa !2468
  %sub = sub nsw i32 %1, 97, !dbg !9986
  %add = add nsw i32 %sub, 65, !dbg !9987
  store i32 %add, i32* %retval, align 4, !dbg !9988
  br label %return, !dbg !9988

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9989, !tbaa !2468
  store i32 %2, i32* %retval, align 4, !dbg !9990
  br label %return, !dbg !9990

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9991
  ret i32 %3, !dbg !9991
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strncasecmp(i8* %s1, i8* %s2, i64 %n) #9 !dbg !9992 !ctir !1667 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %s1.addr = alloca i8*, align 8, !ctir !146
  %s2.addr = alloca i8*, align 8, !ctir !146
  %n.addr = alloca i64, align 8, !ctir !149
  %p1 = alloca i8*, align 8, !ctir !1665
  %p2 = alloca i8*, align 8, !ctir !1665
  %c1 = alloca i8, align 1, !ctir !579
  %c2 = alloca i8, align 1, !ctir !579
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !10000, metadata !DIExpression()), !dbg !10001
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !10002, !tbaa !2474
  store i8* %0, i8** %p1, align 8, !dbg !10001, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !10003, metadata !DIExpression()), !dbg !10004
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !10005, !tbaa !2474
  store i8* %1, i8** %p2, align 8, !dbg !10004, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !10006, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !10008, metadata !DIExpression()), !dbg !10009
  %2 = load i8*, i8** %p1, align 8, !dbg !10010, !tbaa !2474
  %3 = load i8*, i8** %p2, align 8, !dbg !10012, !tbaa !2474
  %cmp = icmp eq i8* %2, %3, !dbg !10013
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10014

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %n.addr, align 8, !dbg !10015, !tbaa !2611
  %cmp1 = icmp eq i64 %4, 0, !dbg !10016
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10017

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10018
  br label %return, !dbg !10018

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !10019

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i8*, i8** %p1, align 8, !dbg !10020, !tbaa !2474
  %6 = load i8, i8* %5, align 1, !dbg !10022, !tbaa !2529, !ctir !1666
  %conv = zext i8 %6 to i32, !dbg !10022
  %call = call i32 @c_tolower(i32 %conv), !dbg !10023
  %conv2 = trunc i32 %call to i8, !dbg !10023
  store i8 %conv2, i8* %c1, align 1, !dbg !10024, !tbaa !2529
  %7 = load i8*, i8** %p2, align 8, !dbg !10025, !tbaa !2474
  %8 = load i8, i8* %7, align 1, !dbg !10026, !tbaa !2529, !ctir !1666
  %conv3 = zext i8 %8 to i32, !dbg !10026
  %call4 = call i32 @c_tolower(i32 %conv3), !dbg !10027
  %conv5 = trunc i32 %call4 to i8, !dbg !10027
  store i8 %conv5, i8* %c2, align 1, !dbg !10028, !tbaa !2529
  %9 = load i64, i64* %n.addr, align 8, !dbg !10029, !tbaa !2611
  %dec = add i64 %9, -1, !dbg !10029
  store i64 %dec, i64* %n.addr, align 8, !dbg !10029, !tbaa !2611
  %cmp6 = icmp eq i64 %dec, 0, !dbg !10031
  br i1 %cmp6, label %if.then12, label %lor.lhs.false8, !dbg !10032

lor.lhs.false8:                                   ; preds = %do.body
  %10 = load i8, i8* %c1, align 1, !dbg !10033, !tbaa !2529
  %conv9 = zext i8 %10 to i32, !dbg !10033
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !10034
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10035

if.then12:                                        ; preds = %lor.lhs.false8, %do.body
  br label %do.end, !dbg !10036

if.end13:                                         ; preds = %lor.lhs.false8
  %11 = load i8*, i8** %p1, align 8, !dbg !10037, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10037
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !10037, !tbaa !2474
  %12 = load i8*, i8** %p2, align 8, !dbg !10038, !tbaa !2474
  %incdec.ptr14 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !10038
  store i8* %incdec.ptr14, i8** %p2, align 8, !dbg !10038, !tbaa !2474
  br label %do.cond, !dbg !10039

do.cond:                                          ; preds = %if.end13
  %13 = load i8, i8* %c1, align 1, !dbg !10040, !tbaa !2529
  %conv15 = zext i8 %13 to i32, !dbg !10040
  %14 = load i8, i8* %c2, align 1, !dbg !10041, !tbaa !2529
  %conv16 = zext i8 %14 to i32, !dbg !10041
  %cmp17 = icmp eq i32 %conv15, %conv16, !dbg !10042
  br i1 %cmp17, label %do.body, label %do.end, !dbg !10039, !llvm.loop !10043

do.end:                                           ; preds = %do.cond, %if.then12
  %15 = load i8, i8* %c1, align 1, !dbg !10045, !tbaa !2529
  %conv19 = zext i8 %15 to i32, !dbg !10045
  %16 = load i8, i8* %c2, align 1, !dbg !10047, !tbaa !2529
  %conv20 = zext i8 %16 to i32, !dbg !10047
  %sub = sub nsw i32 %conv19, %conv20, !dbg !10048
  store i32 %sub, i32* %retval, align 4, !dbg !10049
  br label %return, !dbg !10049

return:                                           ; preds = %do.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10050
  ret i32 %17, !dbg !10050
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @canonicalize_filename_mode(i8* %name, i32 %can_mode) #0 !dbg !10051 !ctir !1680 {
entry:
  %retval = alloca i8*, align 8, !ctir !143
  %name.addr = alloca i8*, align 8, !ctir !146
  %can_mode.addr = alloca i32, align 4, !ctir !1682
  %rname = alloca i8*, align 8, !ctir !143
  %dest = alloca i8*, align 8, !ctir !143
  %extra_buf = alloca i8*, align 8, !ctir !143
  %start = alloca i8*, align 8, !ctir !146
  %end = alloca i8*, align 8, !ctir !146
  %rname_limit = alloca i8*, align 8, !ctir !146
  %extra_len = alloca i64, align 8, !ctir !149
  %ht = alloca %struct.hash_table*, align 8, !ctir !242
  %saved_errno = alloca i32, align 4, !ctir !27
  %can_flags = alloca i32, align 4, !ctir !27
  %logical = alloca i8, align 1, !ctir !141
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %st = alloca %struct.stat, align 8, !ctir !1688
  %dest_offset = alloca i64, align 8, !ctir !552
  %new_size = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %n = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %pfxlen = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  store i32 %can_mode, i32* %can_mode.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %can_mode.addr, metadata !10055, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.declare(metadata i8** %rname, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !10059, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.declare(metadata i8** %extra_buf, metadata !10061, metadata !DIExpression()), !dbg !10062
  store i8* null, i8** %extra_buf, align 8, !dbg !10062, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %start, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata i8** %end, metadata !10065, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.declare(metadata i8** %rname_limit, metadata !10067, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.declare(metadata i64* %extra_len, metadata !10069, metadata !DIExpression()), !dbg !10070
  store i64 0, i64* %extra_len, align 8, !dbg !10070, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht, metadata !10071, metadata !DIExpression()), !dbg !10072
  store %struct.hash_table* null, %struct.hash_table** %ht, align 8, !dbg !10072, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10073, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.declare(metadata i32* %can_flags, metadata !10075, metadata !DIExpression()), !dbg !10076
  %0 = load i32, i32* %can_mode.addr, align 4, !dbg !10077, !tbaa !2529
  %and = and i32 %0, -4, !dbg !10078
  store i32 %and, i32* %can_flags, align 4, !dbg !10076, !tbaa !2468
  call void @llvm.dbg.declare(metadata i8* %logical, metadata !10079, metadata !DIExpression()), !dbg !10080
  %1 = load i32, i32* %can_flags, align 4, !dbg !10081, !tbaa !2468
  %and1 = and i32 %1, 4, !dbg !10082
  %tobool = icmp ne i32 %and1, 0, !dbg !10081
  %frombool = zext i1 %tobool to i8, !dbg !10080
  store i8 %frombool, i8* %logical, align 1, !dbg !10080, !tbaa !2493
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10083, metadata !DIExpression()), !dbg !10084
  %2 = load i32, i32* %can_mode.addr, align 4, !dbg !10085, !tbaa !2529
  %and2 = and i32 %2, 3, !dbg !10085
  store i32 %and2, i32* %can_mode.addr, align 4, !dbg !10085, !tbaa !2529
  %3 = load i32, i32* %can_mode.addr, align 4, !dbg !10086, !tbaa !2529
  %4 = load i32, i32* %can_mode.addr, align 4, !dbg !10086, !tbaa !2529
  %sub = sub i32 %4, 1, !dbg !10086
  %and3 = and i32 %3, %sub, !dbg !10086
  %cmp = icmp ne i32 %and3, 0, !dbg !10086
  br i1 %cmp, label %if.then, label %if.end, !dbg !10088

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !10089
  store i32 22, i32* %call, align 4, !dbg !10091, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10092
  br label %return, !dbg !10092

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !10093, !tbaa !2474
  %cmp4 = icmp eq i8* %5, null, !dbg !10095
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !10096

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #17, !dbg !10097
  store i32 22, i32* %call6, align 4, !dbg !10099, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10100
  br label %return, !dbg !10100

if.end7:                                          ; preds = %if.end
  %6 = load i8*, i8** %name.addr, align 8, !dbg !10101, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !10101, !ctir !146
  %7 = load i8, i8* %arrayidx, align 1, !dbg !10101, !tbaa !2529
  %conv = sext i8 %7 to i32, !dbg !10101
  %cmp8 = icmp eq i32 %conv, 0, !dbg !10103
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !10104

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #17, !dbg !10105
  store i32 2, i32* %call11, align 4, !dbg !10107, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10108
  br label %return, !dbg !10108

if.end12:                                         ; preds = %if.end7
  store i64 0, i64* %prefix_len, align 8, !dbg !10109, !tbaa !2611
  %8 = load i8*, i8** %name.addr, align 8, !dbg !10110, !tbaa !2474
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !10110, !ctir !146
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !10110, !tbaa !2529
  %conv14 = sext i8 %9 to i32, !dbg !10110
  %cmp15 = icmp eq i32 %conv14, 47, !dbg !10110
  br i1 %cmp15, label %if.else32, label %if.then17, !dbg !10112

if.then17:                                        ; preds = %if.end12
  %call18 = call i8* @xgetcwd(), !dbg !10113
  store i8* %call18, i8** %rname, align 8, !dbg !10115, !tbaa !2474
  %10 = load i8*, i8** %rname, align 8, !dbg !10116, !tbaa !2474
  %tobool19 = icmp ne i8* %10, null, !dbg !10116
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !10118

if.then20:                                        ; preds = %if.then17
  store i8* null, i8** %retval, align 8, !dbg !10119
  br label %return, !dbg !10119

if.end21:                                         ; preds = %if.then17
  %11 = load i8*, i8** %rname, align 8, !dbg !10120, !tbaa !2474
  %call22 = call i8* @strchr(i8* %11, i32 0) #16, !dbg !10121
  store i8* %call22, i8** %dest, align 8, !dbg !10122, !tbaa !2474
  %12 = load i8*, i8** %dest, align 8, !dbg !10123, !tbaa !2474
  %13 = load i8*, i8** %rname, align 8, !dbg !10125, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !10126
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !10126
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10126
  %cmp23 = icmp slt i64 %sub.ptr.sub, 4096, !dbg !10127
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !10128

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10129, metadata !DIExpression()), !dbg !10131
  %14 = load i8*, i8** %rname, align 8, !dbg !10132, !tbaa !2474
  %call26 = call i8* @xrealloc(i8* %14, i64 4096), !dbg !10133
  store i8* %call26, i8** %p, align 8, !dbg !10131, !tbaa !2474
  %15 = load i8*, i8** %p, align 8, !dbg !10134, !tbaa !2474
  %16 = load i8*, i8** %dest, align 8, !dbg !10135, !tbaa !2474
  %17 = load i8*, i8** %rname, align 8, !dbg !10136, !tbaa !2474
  %sub.ptr.lhs.cast27 = ptrtoint i8* %16 to i64, !dbg !10137
  %sub.ptr.rhs.cast28 = ptrtoint i8* %17 to i64, !dbg !10137
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !10137
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %sub.ptr.sub29, !dbg !10138
  store i8* %add.ptr, i8** %dest, align 8, !dbg !10139, !tbaa !2474
  %18 = load i8*, i8** %p, align 8, !dbg !10140, !tbaa !2474
  store i8* %18, i8** %rname, align 8, !dbg !10141, !tbaa !2474
  %19 = load i8*, i8** %rname, align 8, !dbg !10142, !tbaa !2474
  %add.ptr30 = getelementptr inbounds i8, i8* %19, i64 4096, !dbg !10143
  store i8* %add.ptr30, i8** %rname_limit, align 8, !dbg !10144, !tbaa !2474
  br label %if.end31, !dbg !10145

if.else:                                          ; preds = %if.end21
  %20 = load i8*, i8** %dest, align 8, !dbg !10146, !tbaa !2474
  store i8* %20, i8** %rname_limit, align 8, !dbg !10148, !tbaa !2474
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then25
  %21 = load i8*, i8** %name.addr, align 8, !dbg !10149, !tbaa !2474
  store i8* %21, i8** %start, align 8, !dbg !10150, !tbaa !2474
  store i64 0, i64* %prefix_len, align 8, !dbg !10151, !tbaa !2611
  br label %if.end40, !dbg !10152

if.else32:                                        ; preds = %if.end12
  %call33 = call noalias i8* @xmalloc(i64 4096), !dbg !10153
  store i8* %call33, i8** %rname, align 8, !dbg !10155, !tbaa !2474
  %22 = load i8*, i8** %rname, align 8, !dbg !10156, !tbaa !2474
  %add.ptr34 = getelementptr inbounds i8, i8* %22, i64 4096, !dbg !10157
  store i8* %add.ptr34, i8** %rname_limit, align 8, !dbg !10158, !tbaa !2474
  %23 = load i8*, i8** %rname, align 8, !dbg !10159, !tbaa !2474
  store i8* %23, i8** %dest, align 8, !dbg !10160, !tbaa !2474
  %24 = load i64, i64* %prefix_len, align 8, !dbg !10161, !tbaa !2611
  %tobool35 = icmp ne i64 %24, 0, !dbg !10161
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !10163

if.then36:                                        ; preds = %if.else32
  %25 = load i8*, i8** %rname, align 8, !dbg !10164, !tbaa !2474
  %26 = load i8*, i8** %name.addr, align 8, !dbg !10166, !tbaa !2474
  %27 = load i64, i64* %prefix_len, align 8, !dbg !10167, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false), !dbg !10168
  %28 = load i64, i64* %prefix_len, align 8, !dbg !10169, !tbaa !2611
  %29 = load i8*, i8** %dest, align 8, !dbg !10170, !tbaa !2474
  %add.ptr37 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !10170
  store i8* %add.ptr37, i8** %dest, align 8, !dbg !10170, !tbaa !2474
  br label %if.end38, !dbg !10171

if.end38:                                         ; preds = %if.then36, %if.else32
  %30 = load i8*, i8** %dest, align 8, !dbg !10172, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !10172
  store i8* %incdec.ptr, i8** %dest, align 8, !dbg !10172, !tbaa !2474
  store i8 47, i8* %30, align 1, !dbg !10173, !tbaa !2529, !ctir !144
  %31 = load i8*, i8** %name.addr, align 8, !dbg !10174, !tbaa !2474
  %32 = load i64, i64* %prefix_len, align 8, !dbg !10175, !tbaa !2611
  %add.ptr39 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !10176
  store i8* %add.ptr39, i8** %start, align 8, !dbg !10177, !tbaa !2474
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %if.end31
  br label %for.cond, !dbg !10178

for.cond:                                         ; preds = %for.inc292, %if.end40
  %33 = load i8*, i8** %start, align 8, !dbg !10179, !tbaa !2474
  %34 = load i8, i8* %33, align 1, !dbg !10182, !tbaa !2529, !ctir !147
  %tobool41 = icmp ne i8 %34, 0, !dbg !10183
  br i1 %tobool41, label %for.body, label %for.end293, !dbg !10183

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !10184

while.cond:                                       ; preds = %while.body, %for.body
  %35 = load i8*, i8** %start, align 8, !dbg !10186, !tbaa !2474
  %36 = load i8, i8* %35, align 1, !dbg !10186, !tbaa !2529, !ctir !147
  %conv42 = sext i8 %36 to i32, !dbg !10186
  %cmp43 = icmp eq i32 %conv42, 47, !dbg !10186
  br i1 %cmp43, label %while.body, label %while.end, !dbg !10184

while.body:                                       ; preds = %while.cond
  %37 = load i8*, i8** %start, align 8, !dbg !10187, !tbaa !2474
  %incdec.ptr45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !10187
  store i8* %incdec.ptr45, i8** %start, align 8, !dbg !10187, !tbaa !2474
  br label %while.cond, !dbg !10184, !llvm.loop !10188

while.end:                                        ; preds = %while.cond
  %38 = load i8*, i8** %start, align 8, !dbg !10190, !tbaa !2474
  store i8* %38, i8** %end, align 8, !dbg !10192, !tbaa !2474
  br label %for.cond46, !dbg !10193

for.cond46:                                       ; preds = %for.inc, %while.end
  %39 = load i8*, i8** %end, align 8, !dbg !10194, !tbaa !2474
  %40 = load i8, i8* %39, align 1, !dbg !10196, !tbaa !2529, !ctir !147
  %conv47 = sext i8 %40 to i32, !dbg !10196
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !10196
  br i1 %tobool48, label %land.rhs, label %land.end, !dbg !10197

land.rhs:                                         ; preds = %for.cond46
  %41 = load i8*, i8** %end, align 8, !dbg !10198, !tbaa !2474
  %42 = load i8, i8* %41, align 1, !dbg !10198, !tbaa !2529, !ctir !147
  %conv49 = sext i8 %42 to i32, !dbg !10198
  %cmp50 = icmp eq i32 %conv49, 47, !dbg !10198
  %lnot = xor i1 %cmp50, true, !dbg !10199
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond46
  %43 = phi i1 [ false, %for.cond46 ], [ %lnot, %land.rhs ], !dbg !10200
  br i1 %43, label %for.body52, label %for.end, !dbg !10201

for.body52:                                       ; preds = %land.end
  br label %for.inc, !dbg !10201

for.inc:                                          ; preds = %for.body52
  %44 = load i8*, i8** %end, align 8, !dbg !10202, !tbaa !2474
  %incdec.ptr53 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !10202
  store i8* %incdec.ptr53, i8** %end, align 8, !dbg !10202, !tbaa !2474
  br label %for.cond46, !dbg !10203, !llvm.loop !10204

for.end:                                          ; preds = %land.end
  %45 = load i8*, i8** %end, align 8, !dbg !10206, !tbaa !2474
  %46 = load i8*, i8** %start, align 8, !dbg !10208, !tbaa !2474
  %sub.ptr.lhs.cast54 = ptrtoint i8* %45 to i64, !dbg !10209
  %sub.ptr.rhs.cast55 = ptrtoint i8* %46 to i64, !dbg !10209
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !10209
  %cmp57 = icmp eq i64 %sub.ptr.sub56, 0, !dbg !10210
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !10211

if.then59:                                        ; preds = %for.end
  br label %for.end293, !dbg !10212

if.else60:                                        ; preds = %for.end
  %47 = load i8*, i8** %end, align 8, !dbg !10213, !tbaa !2474
  %48 = load i8*, i8** %start, align 8, !dbg !10215, !tbaa !2474
  %sub.ptr.lhs.cast61 = ptrtoint i8* %47 to i64, !dbg !10216
  %sub.ptr.rhs.cast62 = ptrtoint i8* %48 to i64, !dbg !10216
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62, !dbg !10216
  %cmp64 = icmp eq i64 %sub.ptr.sub63, 1, !dbg !10217
  br i1 %cmp64, label %land.lhs.true, label %if.else71, !dbg !10218

land.lhs.true:                                    ; preds = %if.else60
  %49 = load i8*, i8** %start, align 8, !dbg !10219, !tbaa !2474
  %arrayidx66 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !10219, !ctir !146
  %50 = load i8, i8* %arrayidx66, align 1, !dbg !10219, !tbaa !2529
  %conv67 = sext i8 %50 to i32, !dbg !10219
  %cmp68 = icmp eq i32 %conv67, 46, !dbg !10220
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !10221

if.then70:                                        ; preds = %land.lhs.true
  br label %if.end290, !dbg !10221

if.else71:                                        ; preds = %land.lhs.true, %if.else60
  %51 = load i8*, i8** %end, align 8, !dbg !10222, !tbaa !2474
  %52 = load i8*, i8** %start, align 8, !dbg !10224, !tbaa !2474
  %sub.ptr.lhs.cast72 = ptrtoint i8* %51 to i64, !dbg !10225
  %sub.ptr.rhs.cast73 = ptrtoint i8* %52 to i64, !dbg !10225
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !10225
  %cmp75 = icmp eq i64 %sub.ptr.sub74, 2, !dbg !10226
  br i1 %cmp75, label %land.lhs.true77, label %if.else109, !dbg !10227

land.lhs.true77:                                  ; preds = %if.else71
  %53 = load i8*, i8** %start, align 8, !dbg !10228, !tbaa !2474
  %arrayidx78 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !10228, !ctir !146
  %54 = load i8, i8* %arrayidx78, align 1, !dbg !10228, !tbaa !2529
  %conv79 = sext i8 %54 to i32, !dbg !10228
  %cmp80 = icmp eq i32 %conv79, 46, !dbg !10229
  br i1 %cmp80, label %land.lhs.true82, label %if.else109, !dbg !10230

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %55 = load i8*, i8** %start, align 8, !dbg !10231, !tbaa !2474
  %arrayidx83 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !10231, !ctir !146
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !10231, !tbaa !2529
  %conv84 = sext i8 %56 to i32, !dbg !10231
  %cmp85 = icmp eq i32 %conv84, 46, !dbg !10232
  br i1 %cmp85, label %if.then87, label %if.else109, !dbg !10233

if.then87:                                        ; preds = %land.lhs.true82
  %57 = load i8*, i8** %dest, align 8, !dbg !10234, !tbaa !2474
  %58 = load i8*, i8** %rname, align 8, !dbg !10237, !tbaa !2474
  %59 = load i64, i64* %prefix_len, align 8, !dbg !10238, !tbaa !2611
  %add.ptr88 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !10239
  %add.ptr89 = getelementptr inbounds i8, i8* %add.ptr88, i64 1, !dbg !10240
  %cmp90 = icmp ugt i8* %57, %add.ptr89, !dbg !10241
  br i1 %cmp90, label %if.then92, label %if.end108, !dbg !10242

if.then92:                                        ; preds = %if.then87
  %60 = load i8*, i8** %dest, align 8, !dbg !10243, !tbaa !2474
  %incdec.ptr93 = getelementptr inbounds i8, i8* %60, i32 -1, !dbg !10243
  store i8* %incdec.ptr93, i8** %dest, align 8, !dbg !10243, !tbaa !2474
  br label %for.cond94, !dbg !10243

for.cond94:                                       ; preds = %for.inc105, %if.then92
  %61 = load i8*, i8** %dest, align 8, !dbg !10245, !tbaa !2474
  %62 = load i8*, i8** %rname, align 8, !dbg !10247, !tbaa !2474
  %cmp95 = icmp ugt i8* %61, %62, !dbg !10248
  br i1 %cmp95, label %land.rhs97, label %land.end103, !dbg !10249

land.rhs97:                                       ; preds = %for.cond94
  %63 = load i8*, i8** %dest, align 8, !dbg !10250, !tbaa !2474
  %arrayidx98 = getelementptr inbounds i8, i8* %63, i64 -1, !dbg !10250, !ctir !143
  %64 = load i8, i8* %arrayidx98, align 1, !dbg !10250, !tbaa !2529
  %conv99 = sext i8 %64 to i32, !dbg !10250
  %cmp100 = icmp eq i32 %conv99, 47, !dbg !10250
  %lnot102 = xor i1 %cmp100, true, !dbg !10251
  br label %land.end103

land.end103:                                      ; preds = %land.rhs97, %for.cond94
  %65 = phi i1 [ false, %for.cond94 ], [ %lnot102, %land.rhs97 ], !dbg !10252
  br i1 %65, label %for.body104, label %for.end107, !dbg !10253

for.body104:                                      ; preds = %land.end103
  br label %for.inc105, !dbg !10254

for.inc105:                                       ; preds = %for.body104
  %66 = load i8*, i8** %dest, align 8, !dbg !10255, !tbaa !2474
  %incdec.ptr106 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !10255
  store i8* %incdec.ptr106, i8** %dest, align 8, !dbg !10255, !tbaa !2474
  br label %for.cond94, !dbg !10256, !llvm.loop !10257

for.end107:                                       ; preds = %land.end103
  br label %if.end108, !dbg !10258

if.end108:                                        ; preds = %for.end107, %if.then87
  br label %if.end289, !dbg !10259

if.else109:                                       ; preds = %land.lhs.true82, %land.lhs.true77, %if.else71
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !10260, metadata !DIExpression()), !dbg !10262
  %67 = load i8*, i8** %dest, align 8, !dbg !10263, !tbaa !2474
  %arrayidx110 = getelementptr inbounds i8, i8* %67, i64 -1, !dbg !10263, !ctir !143
  %68 = load i8, i8* %arrayidx110, align 1, !dbg !10263, !tbaa !2529
  %conv111 = sext i8 %68 to i32, !dbg !10263
  %cmp112 = icmp eq i32 %conv111, 47, !dbg !10263
  br i1 %cmp112, label %if.end116, label %if.then114, !dbg !10265

if.then114:                                       ; preds = %if.else109
  %69 = load i8*, i8** %dest, align 8, !dbg !10266, !tbaa !2474
  %incdec.ptr115 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !10266
  store i8* %incdec.ptr115, i8** %dest, align 8, !dbg !10266, !tbaa !2474
  store i8 47, i8* %69, align 1, !dbg !10267, !tbaa !2529, !ctir !144
  br label %if.end116, !dbg !10268

if.end116:                                        ; preds = %if.then114, %if.else109
  %70 = load i8*, i8** %dest, align 8, !dbg !10269, !tbaa !2474
  %71 = load i8*, i8** %end, align 8, !dbg !10271, !tbaa !2474
  %72 = load i8*, i8** %start, align 8, !dbg !10272, !tbaa !2474
  %sub.ptr.lhs.cast117 = ptrtoint i8* %71 to i64, !dbg !10273
  %sub.ptr.rhs.cast118 = ptrtoint i8* %72 to i64, !dbg !10273
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !10273
  %add.ptr120 = getelementptr inbounds i8, i8* %70, i64 %sub.ptr.sub119, !dbg !10274
  %73 = load i8*, i8** %rname_limit, align 8, !dbg !10275, !tbaa !2474
  %cmp121 = icmp uge i8* %add.ptr120, %73, !dbg !10276
  br i1 %cmp121, label %if.then123, label %if.end147, !dbg !10277

if.then123:                                       ; preds = %if.end116
  call void @llvm.dbg.declare(metadata i64* %dest_offset, metadata !10278, metadata !DIExpression()), !dbg !10280
  %74 = load i8*, i8** %dest, align 8, !dbg !10281, !tbaa !2474
  %75 = load i8*, i8** %rname, align 8, !dbg !10282, !tbaa !2474
  %sub.ptr.lhs.cast124 = ptrtoint i8* %74 to i64, !dbg !10283
  %sub.ptr.rhs.cast125 = ptrtoint i8* %75 to i64, !dbg !10283
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !10283
  store i64 %sub.ptr.sub126, i64* %dest_offset, align 8, !dbg !10280, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !10284, metadata !DIExpression()), !dbg !10285
  %76 = load i8*, i8** %rname_limit, align 8, !dbg !10286, !tbaa !2474
  %77 = load i8*, i8** %rname, align 8, !dbg !10287, !tbaa !2474
  %sub.ptr.lhs.cast127 = ptrtoint i8* %76 to i64, !dbg !10288
  %sub.ptr.rhs.cast128 = ptrtoint i8* %77 to i64, !dbg !10288
  %sub.ptr.sub129 = sub i64 %sub.ptr.lhs.cast127, %sub.ptr.rhs.cast128, !dbg !10288
  store i64 %sub.ptr.sub129, i64* %new_size, align 8, !dbg !10285, !tbaa !2611
  %78 = load i8*, i8** %end, align 8, !dbg !10289, !tbaa !2474
  %79 = load i8*, i8** %start, align 8, !dbg !10291, !tbaa !2474
  %sub.ptr.lhs.cast130 = ptrtoint i8* %78 to i64, !dbg !10292
  %sub.ptr.rhs.cast131 = ptrtoint i8* %79 to i64, !dbg !10292
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131, !dbg !10292
  %add = add nsw i64 %sub.ptr.sub132, 1, !dbg !10293
  %cmp133 = icmp sgt i64 %add, 4096, !dbg !10294
  br i1 %cmp133, label %if.then135, label %if.else141, !dbg !10295

if.then135:                                       ; preds = %if.then123
  %80 = load i8*, i8** %end, align 8, !dbg !10296, !tbaa !2474
  %81 = load i8*, i8** %start, align 8, !dbg !10297, !tbaa !2474
  %sub.ptr.lhs.cast136 = ptrtoint i8* %80 to i64, !dbg !10298
  %sub.ptr.rhs.cast137 = ptrtoint i8* %81 to i64, !dbg !10298
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !10298
  %add139 = add nsw i64 %sub.ptr.sub138, 1, !dbg !10299
  %82 = load i64, i64* %new_size, align 8, !dbg !10300, !tbaa !2611
  %add140 = add i64 %82, %add139, !dbg !10300
  store i64 %add140, i64* %new_size, align 8, !dbg !10300, !tbaa !2611
  br label %if.end143, !dbg !10301

if.else141:                                       ; preds = %if.then123
  %83 = load i64, i64* %new_size, align 8, !dbg !10302, !tbaa !2611
  %add142 = add i64 %83, 4096, !dbg !10302
  store i64 %add142, i64* %new_size, align 8, !dbg !10302, !tbaa !2611
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then135
  %84 = load i8*, i8** %rname, align 8, !dbg !10303, !tbaa !2474
  %85 = load i64, i64* %new_size, align 8, !dbg !10304, !tbaa !2611
  %call144 = call i8* @xrealloc(i8* %84, i64 %85), !dbg !10305
  store i8* %call144, i8** %rname, align 8, !dbg !10306, !tbaa !2474
  %86 = load i8*, i8** %rname, align 8, !dbg !10307, !tbaa !2474
  %87 = load i64, i64* %new_size, align 8, !dbg !10308, !tbaa !2611
  %add.ptr145 = getelementptr inbounds i8, i8* %86, i64 %87, !dbg !10309
  store i8* %add.ptr145, i8** %rname_limit, align 8, !dbg !10310, !tbaa !2474
  %88 = load i8*, i8** %rname, align 8, !dbg !10311, !tbaa !2474
  %89 = load i64, i64* %dest_offset, align 8, !dbg !10312, !tbaa !2611
  %add.ptr146 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !10313
  store i8* %add.ptr146, i8** %dest, align 8, !dbg !10314, !tbaa !2474
  br label %if.end147, !dbg !10315

if.end147:                                        ; preds = %if.end143, %if.end116
  %90 = load i8*, i8** %dest, align 8, !dbg !10316, !tbaa !2474
  %91 = load i8*, i8** %start, align 8, !dbg !10317, !tbaa !2474
  %92 = load i8*, i8** %end, align 8, !dbg !10318, !tbaa !2474
  %93 = load i8*, i8** %start, align 8, !dbg !10319, !tbaa !2474
  %sub.ptr.lhs.cast148 = ptrtoint i8* %92 to i64, !dbg !10320
  %sub.ptr.rhs.cast149 = ptrtoint i8* %93 to i64, !dbg !10320
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !10320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %91, i64 %sub.ptr.sub150, i1 false), !dbg !10321
  store i8* %90, i8** %dest, align 8, !dbg !10322, !tbaa !2474
  %94 = load i8*, i8** %end, align 8, !dbg !10323, !tbaa !2474
  %95 = load i8*, i8** %start, align 8, !dbg !10324, !tbaa !2474
  %sub.ptr.lhs.cast151 = ptrtoint i8* %94 to i64, !dbg !10325
  %sub.ptr.rhs.cast152 = ptrtoint i8* %95 to i64, !dbg !10325
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !10325
  %96 = load i8*, i8** %dest, align 8, !dbg !10326, !tbaa !2474
  %add.ptr154 = getelementptr inbounds i8, i8* %96, i64 %sub.ptr.sub153, !dbg !10326
  store i8* %add.ptr154, i8** %dest, align 8, !dbg !10326, !tbaa !2474
  %97 = load i8*, i8** %dest, align 8, !dbg !10327, !tbaa !2474
  store i8 0, i8* %97, align 1, !dbg !10328, !tbaa !2529, !ctir !144
  %98 = load i8, i8* %logical, align 1, !dbg !10329, !tbaa !2493
  %tobool155 = trunc i8 %98 to i1, !dbg !10329
  br i1 %tobool155, label %land.lhs.true157, label %if.else161, !dbg !10331

land.lhs.true157:                                 ; preds = %if.end147
  %99 = load i32, i32* %can_mode.addr, align 4, !dbg !10332, !tbaa !2529
  %cmp158 = icmp eq i32 %99, 2, !dbg !10333
  br i1 %cmp158, label %if.then160, label %if.else161, !dbg !10334

if.then160:                                       ; preds = %land.lhs.true157
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10335, !ctir !1688
  store i32 0, i32* %st_mode, align 8, !dbg !10337, !tbaa !4212, !ctir !200
  br label %if.end188, !dbg !10338

if.else161:                                       ; preds = %land.lhs.true157, %if.end147
  %100 = load i8, i8* %logical, align 1, !dbg !10339, !tbaa !2493
  %tobool162 = trunc i8 %100 to i1, !dbg !10339
  br i1 %tobool162, label %cond.true, label %cond.false, !dbg !10339

cond.true:                                        ; preds = %if.else161
  %101 = load i8*, i8** %rname, align 8, !dbg !10341, !tbaa !2474
  %call164 = call i32 @stat(i8* %101, %struct.stat* %st) #13, !dbg !10342
  br label %cond.end, !dbg !10339

cond.false:                                       ; preds = %if.else161
  %102 = load i8*, i8** %rname, align 8, !dbg !10343, !tbaa !2474
  %call165 = call i32 @lstat(i8* %102, %struct.stat* %st) #13, !dbg !10344
  br label %cond.end, !dbg !10339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call164, %cond.true ], [ %call165, %cond.false ], !dbg !10339
  %cmp166 = icmp ne i32 %cond, 0, !dbg !10345
  br i1 %cmp166, label %if.then168, label %if.end187, !dbg !10346

if.then168:                                       ; preds = %cond.end
  %call169 = call i32* @__errno_location() #17, !dbg !10347
  %103 = load i32, i32* %call169, align 4, !dbg !10347, !tbaa !2468, !ctir !27
  store i32 %103, i32* %saved_errno, align 4, !dbg !10349, !tbaa !2468
  %104 = load i32, i32* %can_mode.addr, align 4, !dbg !10350, !tbaa !2529
  %cmp170 = icmp eq i32 %104, 0, !dbg !10352
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !10353

if.then172:                                       ; preds = %if.then168
  br label %error, !dbg !10354

if.end173:                                        ; preds = %if.then168
  %105 = load i32, i32* %can_mode.addr, align 4, !dbg !10355, !tbaa !2529
  %cmp174 = icmp eq i32 %105, 1, !dbg !10357
  br i1 %cmp174, label %if.then176, label %if.end185, !dbg !10358

if.then176:                                       ; preds = %if.end173
  %106 = load i8*, i8** %end, align 8, !dbg !10359, !tbaa !2474
  %107 = load i8*, i8** %end, align 8, !dbg !10362, !tbaa !2474
  %call177 = call i64 @strspn(i8* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.270, i64 0, i64 0)) #16, !dbg !10363
  %arrayidx178 = getelementptr inbounds i8, i8* %106, i64 %call177, !dbg !10359, !ctir !146
  %108 = load i8, i8* %arrayidx178, align 1, !dbg !10359, !tbaa !2529
  %conv179 = sext i8 %108 to i32, !dbg !10359
  %tobool180 = icmp ne i32 %conv179, 0, !dbg !10359
  br i1 %tobool180, label %if.then183, label %lor.lhs.false, !dbg !10364

lor.lhs.false:                                    ; preds = %if.then176
  %109 = load i32, i32* %saved_errno, align 4, !dbg !10365, !tbaa !2468
  %cmp181 = icmp ne i32 %109, 2, !dbg !10366
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !10367

if.then183:                                       ; preds = %lor.lhs.false, %if.then176
  br label %error, !dbg !10368

if.end184:                                        ; preds = %lor.lhs.false
  br label %for.inc292, !dbg !10369

if.end185:                                        ; preds = %if.end173
  %st_mode186 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10370, !ctir !1688
  store i32 0, i32* %st_mode186, align 8, !dbg !10371, !tbaa !4212, !ctir !200
  br label %if.end187, !dbg !10372

if.end187:                                        ; preds = %if.end185, %cond.end
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then160
  %st_mode189 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10373, !ctir !1688
  %110 = load i32, i32* %st_mode189, align 8, !dbg !10373, !tbaa !4212, !ctir !200
  %and190 = and i32 %110, 61440, !dbg !10373
  %cmp191 = icmp eq i32 %and190, 40960, !dbg !10373
  br i1 %cmp191, label %if.then193, label %if.else275, !dbg !10375

if.then193:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10376, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10381, metadata !DIExpression()), !dbg !10382
  %111 = load i8*, i8** %name.addr, align 8, !dbg !10383, !tbaa !2474
  %call194 = call zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %111, %struct.stat* %st), !dbg !10385
  br i1 %call194, label %if.then195, label %if.end200, !dbg !10386

if.then195:                                       ; preds = %if.then193
  %112 = load i32, i32* %can_mode.addr, align 4, !dbg !10387, !tbaa !2529
  %cmp196 = icmp eq i32 %112, 2, !dbg !10390
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !10391

if.then198:                                       ; preds = %if.then195
  br label %for.inc292, !dbg !10392

if.end199:                                        ; preds = %if.then195
  store i32 40, i32* %saved_errno, align 4, !dbg !10393, !tbaa !2468
  br label %error, !dbg !10394

if.end200:                                        ; preds = %if.then193
  %113 = load i8*, i8** %rname, align 8, !dbg !10395, !tbaa !2474
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !10396, !ctir !1688
  %114 = load i64, i64* %st_size, align 8, !dbg !10396, !tbaa !10397, !ctir !180
  %call201 = call i8* @areadlink_with_size(i8* %113, i64 %114), !dbg !10398
  store i8* %call201, i8** %buf, align 8, !dbg !10399, !tbaa !2474
  %115 = load i8*, i8** %buf, align 8, !dbg !10400, !tbaa !2474
  %tobool202 = icmp ne i8* %115, null, !dbg !10400
  br i1 %tobool202, label %if.end213, label %if.then203, !dbg !10402

if.then203:                                       ; preds = %if.end200
  %116 = load i32, i32* %can_mode.addr, align 4, !dbg !10403, !tbaa !2529
  %cmp204 = icmp eq i32 %116, 2, !dbg !10406
  br i1 %cmp204, label %land.lhs.true206, label %if.end211, !dbg !10407

land.lhs.true206:                                 ; preds = %if.then203
  %call207 = call i32* @__errno_location() #17, !dbg !10408
  %117 = load i32, i32* %call207, align 4, !dbg !10408, !tbaa !2468, !ctir !27
  %cmp208 = icmp ne i32 %117, 12, !dbg !10409
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !10410

if.then210:                                       ; preds = %land.lhs.true206
  br label %for.inc292, !dbg !10411

if.end211:                                        ; preds = %land.lhs.true206, %if.then203
  %call212 = call i32* @__errno_location() #17, !dbg !10412
  %118 = load i32, i32* %call212, align 4, !dbg !10412, !tbaa !2468, !ctir !27
  store i32 %118, i32* %saved_errno, align 4, !dbg !10413, !tbaa !2468
  br label %error, !dbg !10414

if.end213:                                        ; preds = %if.end200
  %119 = load i8*, i8** %buf, align 8, !dbg !10415, !tbaa !2474
  %call214 = call i64 @strlen(i8* %119) #16, !dbg !10416
  store i64 %call214, i64* %n, align 8, !dbg !10417, !tbaa !2611
  %120 = load i8*, i8** %end, align 8, !dbg !10418, !tbaa !2474
  %call215 = call i64 @strlen(i8* %120) #16, !dbg !10419
  store i64 %call215, i64* %len, align 8, !dbg !10420, !tbaa !2611
  %121 = load i64, i64* %extra_len, align 8, !dbg !10421, !tbaa !2611
  %tobool216 = icmp ne i64 %121, 0, !dbg !10421
  br i1 %tobool216, label %if.else229, label %if.then217, !dbg !10423

if.then217:                                       ; preds = %if.end213
  %122 = load i64, i64* %n, align 8, !dbg !10424, !tbaa !2611
  %123 = load i64, i64* %len, align 8, !dbg !10426, !tbaa !2611
  %add218 = add i64 %122, %123, !dbg !10427
  %add219 = add i64 %add218, 1, !dbg !10428
  %cmp220 = icmp ugt i64 %add219, 4096, !dbg !10429
  br i1 %cmp220, label %cond.true222, label %cond.false225, !dbg !10430

cond.true222:                                     ; preds = %if.then217
  %124 = load i64, i64* %n, align 8, !dbg !10431, !tbaa !2611
  %125 = load i64, i64* %len, align 8, !dbg !10432, !tbaa !2611
  %add223 = add i64 %124, %125, !dbg !10433
  %add224 = add i64 %add223, 1, !dbg !10434
  br label %cond.end226, !dbg !10430

cond.false225:                                    ; preds = %if.then217
  br label %cond.end226, !dbg !10430

cond.end226:                                      ; preds = %cond.false225, %cond.true222
  %cond227 = phi i64 [ %add224, %cond.true222 ], [ 4096, %cond.false225 ], !dbg !10430
  store i64 %cond227, i64* %extra_len, align 8, !dbg !10435, !tbaa !2611
  %126 = load i64, i64* %extra_len, align 8, !dbg !10436, !tbaa !2611
  %call228 = call noalias i8* @xmalloc(i64 %126), !dbg !10437
  store i8* %call228, i8** %extra_buf, align 8, !dbg !10438, !tbaa !2474
  br label %if.end239, !dbg !10439

if.else229:                                       ; preds = %if.end213
  %127 = load i64, i64* %n, align 8, !dbg !10440, !tbaa !2611
  %128 = load i64, i64* %len, align 8, !dbg !10442, !tbaa !2611
  %add230 = add i64 %127, %128, !dbg !10443
  %add231 = add i64 %add230, 1, !dbg !10444
  %129 = load i64, i64* %extra_len, align 8, !dbg !10445, !tbaa !2611
  %cmp232 = icmp ugt i64 %add231, %129, !dbg !10446
  br i1 %cmp232, label %if.then234, label %if.end238, !dbg !10447

if.then234:                                       ; preds = %if.else229
  %130 = load i64, i64* %n, align 8, !dbg !10448, !tbaa !2611
  %131 = load i64, i64* %len, align 8, !dbg !10450, !tbaa !2611
  %add235 = add i64 %130, %131, !dbg !10451
  %add236 = add i64 %add235, 1, !dbg !10452
  store i64 %add236, i64* %extra_len, align 8, !dbg !10453, !tbaa !2611
  %132 = load i8*, i8** %extra_buf, align 8, !dbg !10454, !tbaa !2474
  %133 = load i64, i64* %extra_len, align 8, !dbg !10455, !tbaa !2611
  %call237 = call i8* @xrealloc(i8* %132, i64 %133), !dbg !10456
  store i8* %call237, i8** %extra_buf, align 8, !dbg !10457, !tbaa !2474
  br label %if.end238, !dbg !10458

if.end238:                                        ; preds = %if.then234, %if.else229
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %cond.end226
  %134 = load i8*, i8** %extra_buf, align 8, !dbg !10459, !tbaa !2474
  %135 = load i64, i64* %n, align 8, !dbg !10460, !tbaa !2611
  %arrayidx240 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !10459, !ctir !143
  %136 = load i8*, i8** %end, align 8, !dbg !10461, !tbaa !2474
  %137 = load i64, i64* %len, align 8, !dbg !10462, !tbaa !2611
  %add241 = add i64 %137, 1, !dbg !10463
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %arrayidx240, i8* align 1 %136, i64 %add241, i1 false), !dbg !10464
  %138 = load i8*, i8** %extra_buf, align 8, !dbg !10465, !tbaa !2474
  %139 = load i8*, i8** %buf, align 8, !dbg !10466, !tbaa !2474
  %140 = load i64, i64* %n, align 8, !dbg !10467, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %139, i64 %140, i1 false), !dbg !10468
  store i8* %138, i8** %end, align 8, !dbg !10469, !tbaa !2474
  store i8* %138, i8** %name.addr, align 8, !dbg !10470, !tbaa !2474
  %141 = load i8*, i8** %buf, align 8, !dbg !10471, !tbaa !2474
  %arrayidx242 = getelementptr inbounds i8, i8* %141, i64 0, !dbg !10471, !ctir !143
  %142 = load i8, i8* %arrayidx242, align 1, !dbg !10471, !tbaa !2529
  %conv243 = sext i8 %142 to i32, !dbg !10471
  %cmp244 = icmp eq i32 %conv243, 47, !dbg !10471
  br i1 %cmp244, label %if.then246, label %if.else252, !dbg !10473

if.then246:                                       ; preds = %if.end239
  call void @llvm.dbg.declare(metadata i64* %pfxlen, metadata !10474, metadata !DIExpression()), !dbg !10476
  store i64 0, i64* %pfxlen, align 8, !dbg !10476, !tbaa !2611
  %143 = load i64, i64* %pfxlen, align 8, !dbg !10477, !tbaa !2611
  %tobool247 = icmp ne i64 %143, 0, !dbg !10477
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !10479

if.then248:                                       ; preds = %if.then246
  %144 = load i8*, i8** %rname, align 8, !dbg !10480, !tbaa !2474
  %145 = load i8*, i8** %buf, align 8, !dbg !10481, !tbaa !2474
  %146 = load i64, i64* %pfxlen, align 8, !dbg !10482, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 %145, i64 %146, i1 false), !dbg !10483
  br label %if.end249, !dbg !10483

if.end249:                                        ; preds = %if.then248, %if.then246
  %147 = load i8*, i8** %rname, align 8, !dbg !10484, !tbaa !2474
  %148 = load i64, i64* %pfxlen, align 8, !dbg !10485, !tbaa !2611
  %add.ptr250 = getelementptr inbounds i8, i8* %147, i64 %148, !dbg !10486
  store i8* %add.ptr250, i8** %dest, align 8, !dbg !10487, !tbaa !2474
  %149 = load i8*, i8** %dest, align 8, !dbg !10488, !tbaa !2474
  %incdec.ptr251 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !10488
  store i8* %incdec.ptr251, i8** %dest, align 8, !dbg !10488, !tbaa !2474
  store i8 47, i8* %149, align 1, !dbg !10489, !tbaa !2529, !ctir !144
  %150 = load i64, i64* %pfxlen, align 8, !dbg !10490, !tbaa !2611
  store i64 %150, i64* %prefix_len, align 8, !dbg !10491, !tbaa !2611
  br label %if.end274, !dbg !10492

if.else252:                                       ; preds = %if.end239
  %151 = load i8*, i8** %dest, align 8, !dbg !10493, !tbaa !2474
  %152 = load i8*, i8** %rname, align 8, !dbg !10496, !tbaa !2474
  %153 = load i64, i64* %prefix_len, align 8, !dbg !10497, !tbaa !2611
  %add.ptr253 = getelementptr inbounds i8, i8* %152, i64 %153, !dbg !10498
  %add.ptr254 = getelementptr inbounds i8, i8* %add.ptr253, i64 1, !dbg !10499
  %cmp255 = icmp ugt i8* %151, %add.ptr254, !dbg !10500
  br i1 %cmp255, label %if.then257, label %if.end273, !dbg !10501

if.then257:                                       ; preds = %if.else252
  %154 = load i8*, i8** %dest, align 8, !dbg !10502, !tbaa !2474
  %incdec.ptr258 = getelementptr inbounds i8, i8* %154, i32 -1, !dbg !10502
  store i8* %incdec.ptr258, i8** %dest, align 8, !dbg !10502, !tbaa !2474
  br label %for.cond259, !dbg !10502

for.cond259:                                      ; preds = %for.inc270, %if.then257
  %155 = load i8*, i8** %dest, align 8, !dbg !10504, !tbaa !2474
  %156 = load i8*, i8** %rname, align 8, !dbg !10506, !tbaa !2474
  %cmp260 = icmp ugt i8* %155, %156, !dbg !10507
  br i1 %cmp260, label %land.rhs262, label %land.end268, !dbg !10508

land.rhs262:                                      ; preds = %for.cond259
  %157 = load i8*, i8** %dest, align 8, !dbg !10509, !tbaa !2474
  %arrayidx263 = getelementptr inbounds i8, i8* %157, i64 -1, !dbg !10509, !ctir !143
  %158 = load i8, i8* %arrayidx263, align 1, !dbg !10509, !tbaa !2529
  %conv264 = sext i8 %158 to i32, !dbg !10509
  %cmp265 = icmp eq i32 %conv264, 47, !dbg !10509
  %lnot267 = xor i1 %cmp265, true, !dbg !10510
  br label %land.end268

land.end268:                                      ; preds = %land.rhs262, %for.cond259
  %159 = phi i1 [ false, %for.cond259 ], [ %lnot267, %land.rhs262 ], !dbg !10511
  br i1 %159, label %for.body269, label %for.end272, !dbg !10512

for.body269:                                      ; preds = %land.end268
  br label %for.inc270, !dbg !10513

for.inc270:                                       ; preds = %for.body269
  %160 = load i8*, i8** %dest, align 8, !dbg !10514, !tbaa !2474
  %incdec.ptr271 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !10514
  store i8* %incdec.ptr271, i8** %dest, align 8, !dbg !10514, !tbaa !2474
  br label %for.cond259, !dbg !10515, !llvm.loop !10516

for.end272:                                       ; preds = %land.end268
  br label %if.end273, !dbg !10517

if.end273:                                        ; preds = %for.end272, %if.else252
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.end249
  %161 = load i8*, i8** %buf, align 8, !dbg !10518, !tbaa !2474
  call void @free(i8* %161) #13, !dbg !10519
  br label %if.end288, !dbg !10520

if.else275:                                       ; preds = %if.end188
  %st_mode276 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10521, !ctir !1688
  %162 = load i32, i32* %st_mode276, align 8, !dbg !10521, !tbaa !4212, !ctir !200
  %and277 = and i32 %162, 61440, !dbg !10521
  %cmp278 = icmp eq i32 %and277, 16384, !dbg !10521
  br i1 %cmp278, label %if.end287, label %land.lhs.true280, !dbg !10524

land.lhs.true280:                                 ; preds = %if.else275
  %163 = load i8*, i8** %end, align 8, !dbg !10525, !tbaa !2474
  %164 = load i8, i8* %163, align 1, !dbg !10526, !tbaa !2529, !ctir !147
  %conv281 = sext i8 %164 to i32, !dbg !10526
  %tobool282 = icmp ne i32 %conv281, 0, !dbg !10526
  br i1 %tobool282, label %land.lhs.true283, label %if.end287, !dbg !10527

land.lhs.true283:                                 ; preds = %land.lhs.true280
  %165 = load i32, i32* %can_mode.addr, align 4, !dbg !10528, !tbaa !2529
  %cmp284 = icmp ne i32 %165, 2, !dbg !10529
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !10530

if.then286:                                       ; preds = %land.lhs.true283
  store i32 20, i32* %saved_errno, align 4, !dbg !10531, !tbaa !2468
  br label %error, !dbg !10533

if.end287:                                        ; preds = %land.lhs.true283, %land.lhs.true280, %if.else275
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end274
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end108
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then70
  br label %if.end291

if.end291:                                        ; preds = %if.end290
  br label %for.inc292, !dbg !10534

for.inc292:                                       ; preds = %if.end291, %if.then210, %if.then198, %if.end184
  %166 = load i8*, i8** %end, align 8, !dbg !10535, !tbaa !2474
  store i8* %166, i8** %start, align 8, !dbg !10536, !tbaa !2474
  br label %for.cond, !dbg !10537, !llvm.loop !10538

for.end293:                                       ; preds = %if.then59, %for.cond
  %167 = load i8*, i8** %dest, align 8, !dbg !10540, !tbaa !2474
  %168 = load i8*, i8** %rname, align 8, !dbg !10542, !tbaa !2474
  %169 = load i64, i64* %prefix_len, align 8, !dbg !10543, !tbaa !2611
  %add.ptr294 = getelementptr inbounds i8, i8* %168, i64 %169, !dbg !10544
  %add.ptr295 = getelementptr inbounds i8, i8* %add.ptr294, i64 1, !dbg !10545
  %cmp296 = icmp ugt i8* %167, %add.ptr295, !dbg !10546
  br i1 %cmp296, label %land.lhs.true298, label %if.end305, !dbg !10547

land.lhs.true298:                                 ; preds = %for.end293
  %170 = load i8*, i8** %dest, align 8, !dbg !10548, !tbaa !2474
  %arrayidx299 = getelementptr inbounds i8, i8* %170, i64 -1, !dbg !10548, !ctir !143
  %171 = load i8, i8* %arrayidx299, align 1, !dbg !10548, !tbaa !2529
  %conv300 = sext i8 %171 to i32, !dbg !10548
  %cmp301 = icmp eq i32 %conv300, 47, !dbg !10548
  br i1 %cmp301, label %if.then303, label %if.end305, !dbg !10549

if.then303:                                       ; preds = %land.lhs.true298
  %172 = load i8*, i8** %dest, align 8, !dbg !10550, !tbaa !2474
  %incdec.ptr304 = getelementptr inbounds i8, i8* %172, i32 -1, !dbg !10550
  store i8* %incdec.ptr304, i8** %dest, align 8, !dbg !10550, !tbaa !2474
  br label %if.end305, !dbg !10550

if.end305:                                        ; preds = %if.then303, %land.lhs.true298, %for.end293
  %173 = load i8*, i8** %dest, align 8, !dbg !10551, !tbaa !2474
  store i8 0, i8* %173, align 1, !dbg !10552, !tbaa !2529, !ctir !144
  %174 = load i8*, i8** %rname_limit, align 8, !dbg !10553, !tbaa !2474
  %175 = load i8*, i8** %dest, align 8, !dbg !10555, !tbaa !2474
  %add.ptr306 = getelementptr inbounds i8, i8* %175, i64 1, !dbg !10556
  %cmp307 = icmp ne i8* %174, %add.ptr306, !dbg !10557
  br i1 %cmp307, label %if.then309, label %if.end315, !dbg !10558

if.then309:                                       ; preds = %if.end305
  %176 = load i8*, i8** %rname, align 8, !dbg !10559, !tbaa !2474
  %177 = load i8*, i8** %dest, align 8, !dbg !10560, !tbaa !2474
  %178 = load i8*, i8** %rname, align 8, !dbg !10561, !tbaa !2474
  %sub.ptr.lhs.cast310 = ptrtoint i8* %177 to i64, !dbg !10562
  %sub.ptr.rhs.cast311 = ptrtoint i8* %178 to i64, !dbg !10562
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311, !dbg !10562
  %add313 = add nsw i64 %sub.ptr.sub312, 1, !dbg !10563
  %call314 = call i8* @xrealloc(i8* %176, i64 %add313), !dbg !10564
  store i8* %call314, i8** %rname, align 8, !dbg !10565, !tbaa !2474
  br label %if.end315, !dbg !10566

if.end315:                                        ; preds = %if.then309, %if.end305
  %179 = load i8*, i8** %extra_buf, align 8, !dbg !10567, !tbaa !2474
  call void @free(i8* %179) #13, !dbg !10568
  %180 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10569, !tbaa !2474
  %tobool316 = icmp ne %struct.hash_table* %180, null, !dbg !10569
  br i1 %tobool316, label %if.then317, label %if.end318, !dbg !10571

if.then317:                                       ; preds = %if.end315
  %181 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10572, !tbaa !2474
  call void @hash_free(%struct.hash_table* %181), !dbg !10573
  br label %if.end318, !dbg !10573

if.end318:                                        ; preds = %if.then317, %if.end315
  %182 = load i8*, i8** %rname, align 8, !dbg !10574, !tbaa !2474
  store i8* %182, i8** %retval, align 8, !dbg !10575
  br label %return, !dbg !10575

error:                                            ; preds = %if.then286, %if.end211, %if.end199, %if.then183, %if.then172
  call void @llvm.dbg.label(metadata !10576), !dbg !10577
  %183 = load i8*, i8** %extra_buf, align 8, !dbg !10578, !tbaa !2474
  call void @free(i8* %183) #13, !dbg !10579
  %184 = load i8*, i8** %rname, align 8, !dbg !10580, !tbaa !2474
  call void @free(i8* %184) #13, !dbg !10581
  %185 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10582, !tbaa !2474
  %tobool319 = icmp ne %struct.hash_table* %185, null, !dbg !10582
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !10584

if.then320:                                       ; preds = %error
  %186 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10585, !tbaa !2474
  call void @hash_free(%struct.hash_table* %186), !dbg !10586
  br label %if.end321, !dbg !10586

if.end321:                                        ; preds = %if.then320, %error
  %187 = load i32, i32* %saved_errno, align 4, !dbg !10587, !tbaa !2468
  %call322 = call i32* @__errno_location() #17, !dbg !10588
  store i32 %187, i32* %call322, align 4, !dbg !10589, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10590
  br label %return, !dbg !10590

return:                                           ; preds = %if.end321, %if.end318, %if.then20, %if.then10, %if.then5, %if.then
  %188 = load i8*, i8** %retval, align 8, !dbg !10591
  ret i8* %188, !dbg !10591
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %filename, %struct.stat* %st) #0 !dbg !10592 !ctir !1683 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %ht.addr = alloca %struct.hash_table**, align 8, !ctir !1685
  %filename.addr = alloca i8*, align 8, !ctir !146
  %st.addr = alloca %struct.stat*, align 8, !ctir !1686
  %initial_capacity = alloca i64, align 8, !ctir !149
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table*** %ht.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  %0 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10599, !tbaa !2474
  %1 = load %struct.hash_table*, %struct.hash_table** %0, align 8, !dbg !10601, !tbaa !2474, !ctir !242
  %cmp = icmp eq %struct.hash_table* %1, null, !dbg !10602
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10603

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %initial_capacity, metadata !10604, metadata !DIExpression()), !dbg !10606
  store i64 7, i64* %initial_capacity, align 8, !dbg !10606, !tbaa !2611
  %2 = load i64, i64* %initial_capacity, align 8, !dbg !10607, !tbaa !2611
  %call = call %struct.hash_table* @hash_initialize(i64 %2, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare_ino_str, void (i8*)* @triple_free), !dbg !10608
  %3 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10609, !tbaa !2474
  store %struct.hash_table* %call, %struct.hash_table** %3, align 8, !dbg !10610, !tbaa !2474, !ctir !242
  %4 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10611, !tbaa !2474
  %5 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !10613, !tbaa !2474, !ctir !242
  %cmp1 = icmp eq %struct.hash_table* %5, null, !dbg !10614
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10615

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #14, !dbg !10616
  unreachable, !dbg !10616

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !10617

if.end3:                                          ; preds = %if.end, %entry
  %6 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10618, !tbaa !2474
  %7 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !10620, !tbaa !2474, !ctir !242
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !10621, !tbaa !2474
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10622, !tbaa !2474
  %call4 = call zeroext i1 @seen_file(%struct.hash_table* %7, i8* %8, %struct.stat* %9), !dbg !10623
  br i1 %call4, label %if.then5, label %if.end6, !dbg !10624

if.then5:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !10625
  br label %return, !dbg !10625

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10626, !tbaa !2474
  %11 = load %struct.hash_table*, %struct.hash_table** %10, align 8, !dbg !10627, !tbaa !2474, !ctir !242
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !10628, !tbaa !2474
  %13 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10629, !tbaa !2474
  call void @record_file(%struct.hash_table* %11, i8* %12, %struct.stat* %13), !dbg !10630
  store i1 false, i1* %retval, align 1, !dbg !10631
  br label %return, !dbg !10631

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i1, i1* %retval, align 1, !dbg !10632
  ret i1 %14, !dbg !10632
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #0 !dbg !10633 !ctir !558 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10636, !tbaa !2474
  store i8* %0, i8** @file_name, align 8, !dbg !10637, !tbaa !2474
  ret void, !dbg !10638
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #0 !dbg !10639 !ctir !396 {
entry:
  %ignore.addr = alloca i8, align 1, !ctir !141
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10642, !tbaa !2493
  %tobool = trunc i8 %0 to i1, !dbg !10642
  %frombool1 = zext i1 %tobool to i8, !dbg !10643
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10643, !tbaa !2493
  ret void, !dbg !10644
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #0 !dbg !10645 !ctir !336 {
entry:
  %write_error = alloca i8*, align 8, !ctir !146
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10646, !tbaa !2474
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10648
  %cmp = icmp ne i32 %call, 0, !dbg !10649
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10650

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10651, !tbaa !2493
  %tobool = trunc i8 %1 to i1, !dbg !10651
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10652

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #17, !dbg !10653
  %2 = load i32, i32* %call2, align 4, !dbg !10653, !tbaa !2468, !ctir !27
  %cmp3 = icmp eq i32 %2, 32, !dbg !10654
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10655

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10656, metadata !DIExpression()), !dbg !10658
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #13, !dbg !10659
  store i8* %call4, i8** %write_error, align 8, !dbg !10658, !tbaa !2474
  %3 = load i8*, i8** @file_name, align 8, !dbg !10660, !tbaa !2474
  %tobool5 = icmp ne i8* %3, null, !dbg !10660
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10662

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #17, !dbg !10663
  %4 = load i32, i32* %call7, align 4, !dbg !10663, !tbaa !2468, !ctir !27
  %5 = load i8*, i8** @file_name, align 8, !dbg !10664, !tbaa !2474
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10665
  %6 = load i8*, i8** %write_error, align 8, !dbg !10666, !tbaa !2474
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.274, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10667
  br label %if.end, !dbg !10667

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #17, !dbg !10668
  %7 = load i32, i32* %call9, align 4, !dbg !10668, !tbaa !2468, !ctir !27
  %8 = load i8*, i8** %write_error, align 8, !dbg !10669, !tbaa !2474
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.275, i64 0, i64 0), i8* %8), !dbg !10670
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10671, !tbaa !2468
  call void @_exit(i32 %9) #14, !dbg !10672
  unreachable, !dbg !10672

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10673, !tbaa !2474
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10675
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10676
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10677

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10678, !tbaa !2468
  call void @_exit(i32 %11) #14, !dbg !10679
  unreachable, !dbg !10679

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10680
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10681 !ctir !1712 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %prefix_length = alloca i64, align 8, !ctir !149
  %length = alloca i64, align 8, !ctir !149
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10683, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10685, metadata !DIExpression()), !dbg !10686
  store i64 0, i64* %prefix_length, align 8, !dbg !10686, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10687, metadata !DIExpression()), !dbg !10688
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10689, !tbaa !2611
  %cmp = icmp ne i64 %0, 0, !dbg !10690
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10689

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10689

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10691, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10691, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10691, !tbaa !2529
  %conv = sext i8 %2 to i32, !dbg !10691
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10691
  %3 = zext i1 %cmp1 to i64, !dbg !10691
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10691
  br label %cond.end, !dbg !10689

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10689
  %conv4 = sext i32 %cond3 to i64, !dbg !10692
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10693, !tbaa !2611
  %add = add i64 %4, %conv4, !dbg !10693
  store i64 %add, i64* %prefix_length, align 8, !dbg !10693, !tbaa !2611
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10694, !tbaa !2474
  %call = call i8* @last_component(i8* %5) #16, !dbg !10696
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10697, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10698
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10698
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10698
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10699, !tbaa !2611
  br label %for.cond, !dbg !10700

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10701, !tbaa !2611
  %8 = load i64, i64* %length, align 8, !dbg !10703, !tbaa !2611
  %cmp5 = icmp ult i64 %7, %8, !dbg !10704
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10705

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10706, !tbaa !2474
  %10 = load i64, i64* %length, align 8, !dbg !10706, !tbaa !2611
  %sub = sub i64 %10, 1, !dbg !10706
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10706, !ctir !146
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10706, !tbaa !2529
  %conv8 = sext i8 %11 to i32, !dbg !10706
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10706
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10708

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10709

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10706

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10710, !tbaa !2611
  %dec = add i64 %12, -1, !dbg !10710
  store i64 %dec, i64* %length, align 8, !dbg !10710, !tbaa !2611
  br label %for.cond, !dbg !10711, !llvm.loop !10712

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10714, !tbaa !2611
  ret i64 %13, !dbg !10715
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #0 !dbg !10716 !ctir !560 {
entry:
  %retval = alloca i8*, align 8, !ctir !143
  %file.addr = alloca i8*, align 8, !ctir !146
  %length = alloca i64, align 8, !ctir !149
  %append_dot = alloca i8, align 1, !ctir !141
  %dir = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10719, metadata !DIExpression()), !dbg !10720
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10721, !tbaa !2474
  %call = call i64 @dir_len(i8* %0) #16, !dbg !10722
  store i64 %call, i64* %length, align 8, !dbg !10720, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10723, metadata !DIExpression()), !dbg !10724
  %1 = load i64, i64* %length, align 8, !dbg !10725, !tbaa !2611
  %cmp = icmp eq i64 %1, 0, !dbg !10726
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10727

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10727

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10724
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10724, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10728, metadata !DIExpression()), !dbg !10729
  %3 = load i64, i64* %length, align 8, !dbg !10730, !tbaa !2611
  %4 = load i8, i8* %append_dot, align 1, !dbg !10731, !tbaa !2493
  %tobool = trunc i8 %4 to i1, !dbg !10731
  %conv = zext i1 %tobool to i64, !dbg !10731
  %add = add i64 %3, %conv, !dbg !10732
  %add1 = add i64 %add, 1, !dbg !10733
  %call2 = call noalias i8* @malloc(i64 %add1) #13, !dbg !10734
  store i8* %call2, i8** %dir, align 8, !dbg !10729, !tbaa !2474
  %5 = load i8*, i8** %dir, align 8, !dbg !10735, !tbaa !2474
  %tobool3 = icmp ne i8* %5, null, !dbg !10735
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10737

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10738
  br label %return, !dbg !10738

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10739, !tbaa !2474
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10740, !tbaa !2474
  %8 = load i64, i64* %length, align 8, !dbg !10741, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10742
  %9 = load i8, i8* %append_dot, align 1, !dbg !10743, !tbaa !2493
  %tobool4 = trunc i8 %9 to i1, !dbg !10743
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10745

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10746, !tbaa !2474
  %11 = load i64, i64* %length, align 8, !dbg !10747, !tbaa !2611
  %inc = add i64 %11, 1, !dbg !10747
  store i64 %inc, i64* %length, align 8, !dbg !10747, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10746, !ctir !143
  store i8 46, i8* %arrayidx, align 1, !dbg !10748, !tbaa !2529
  br label %if.end6, !dbg !10746

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10749, !tbaa !2474
  %13 = load i64, i64* %length, align 8, !dbg !10750, !tbaa !2611
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10749, !ctir !143
  store i8 0, i8* %arrayidx7, align 1, !dbg !10751, !tbaa !2529
  %14 = load i8*, i8** %dir, align 8, !dbg !10752, !tbaa !2474
  store i8* %14, i8** %retval, align 8, !dbg !10753
  br label %return, !dbg !10753

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10754
  ret i8* %15, !dbg !10754
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10755 !ctir !560 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %base = alloca i8*, align 8, !ctir !146
  %p = alloca i8*, align 8, !ctir !146
  %saw_slash = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10757, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10759, metadata !DIExpression()), !dbg !10760
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10761, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10762
  store i8* %add.ptr, i8** %base, align 8, !dbg !10760, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10763, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10765, metadata !DIExpression()), !dbg !10766
  store i8 0, i8* %saw_slash, align 1, !dbg !10766, !tbaa !2493
  br label %while.cond, !dbg !10767

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10768, !tbaa !2474
  %2 = load i8, i8* %1, align 1, !dbg !10768, !tbaa !2529, !ctir !147
  %conv = sext i8 %2 to i32, !dbg !10768
  %cmp = icmp eq i32 %conv, 47, !dbg !10768
  br i1 %cmp, label %while.body, label %while.end, !dbg !10767

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10769, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10769
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10769, !tbaa !2474
  br label %while.cond, !dbg !10767, !llvm.loop !10770

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10771, !tbaa !2474
  store i8* %4, i8** %p, align 8, !dbg !10773, !tbaa !2474
  br label %for.cond, !dbg !10774

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10775, !tbaa !2474
  %6 = load i8, i8* %5, align 1, !dbg !10777, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !10778
  br i1 %tobool, label %for.body, label %for.end, !dbg !10778

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10779, !tbaa !2474
  %8 = load i8, i8* %7, align 1, !dbg !10779, !tbaa !2529, !ctir !147
  %conv2 = sext i8 %8 to i32, !dbg !10779
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10779
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10782

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10783, !tbaa !2493
  br label %if.end7, !dbg !10784

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10785, !tbaa !2493
  %tobool5 = trunc i8 %9 to i1, !dbg !10785
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10787

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10788, !tbaa !2474
  store i8* %10, i8** %base, align 8, !dbg !10790, !tbaa !2474
  store i8 0, i8* %saw_slash, align 1, !dbg !10791, !tbaa !2493
  br label %if.end, !dbg !10792

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10793

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10794, !tbaa !2474
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10794
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10794, !tbaa !2474
  br label %for.cond, !dbg !10795, !llvm.loop !10796

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10798, !tbaa !2474
  ret i8* %12, !dbg !10799
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10800 !ctir !1712 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %len = alloca i64, align 8, !ctir !149
  %prefix_len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10805, metadata !DIExpression()), !dbg !10806
  store i64 0, i64* %prefix_len, align 8, !dbg !10806, !tbaa !2611
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10807, !tbaa !2474
  %call = call i64 @strlen(i8* %0) #16, !dbg !10809
  store i64 %call, i64* %len, align 8, !dbg !10810, !tbaa !2611
  br label %for.cond, !dbg !10811

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10812, !tbaa !2611
  %cmp = icmp ult i64 1, %1, !dbg !10814
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10815

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10816, !tbaa !2474
  %3 = load i64, i64* %len, align 8, !dbg !10816, !tbaa !2611
  %sub = sub i64 %3, 1, !dbg !10816
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10816, !ctir !146
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10816, !tbaa !2529
  %conv = sext i8 %4 to i32, !dbg !10816
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10816
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10817
  br i1 %5, label %for.body, label %for.end, !dbg !10818

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10819

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10820, !tbaa !2611
  %dec = add i64 %6, -1, !dbg !10820
  store i64 %dec, i64* %len, align 8, !dbg !10820, !tbaa !2611
  br label %for.cond, !dbg !10821, !llvm.loop !10822

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10824, !tbaa !2611
  ret i64 %7, !dbg !10825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @file_has_acl(i8* %name, %struct.stat* %sb) #0 !dbg !10826 !ctir !1720 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %sb.addr = alloca %struct.stat*, align 8, !ctir !1722
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10828, metadata !DIExpression()), !dbg !10829
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !10830, metadata !DIExpression()), !dbg !10831
  ret i32 0, !dbg !10832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #0 !dbg !10833 !ctir !1748 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8, !ctir !242
  %file.addr = alloca i8*, align 8, !ctir !146
  %stats.addr = alloca %struct.stat*, align 8, !ctir !1750
  %ent = alloca %struct.F_triple*, align 8, !ctir !1773
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1773
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10835, metadata !DIExpression()), !dbg !10836
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10837, metadata !DIExpression()), !dbg !10838
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10839, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10841, metadata !DIExpression()), !dbg !10842
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10843, !tbaa !2474
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10845
  br i1 %cmp, label %if.then, label %if.end, !dbg !10846

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10847

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10848
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10848
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10849, !tbaa !2474
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10850, !tbaa !2474
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10851
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10852, !tbaa !2474
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10853, !ctir !1774
  store i8* %call1, i8** %name, align 8, !dbg !10854, !tbaa !10855, !ctir !143
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10857, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10858, !ctir !1751
  %5 = load i64, i64* %st_ino, align 8, !dbg !10858, !tbaa !4844, !ctir !196
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10859, !tbaa !2474
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10860, !ctir !1774
  store i64 %5, i64* %st_ino2, align 8, !dbg !10861, !tbaa !10862, !ctir !256
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10863, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10864, !ctir !1751
  %8 = load i64, i64* %st_dev, align 8, !dbg !10864, !tbaa !4842, !ctir !194
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10865, !tbaa !2474
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10866, !ctir !1774
  store i64 %8, i64* %st_dev3, align 8, !dbg !10867, !tbaa !10868, !ctir !258
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10869, metadata !DIExpression()), !dbg !10871
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10872, !tbaa !2474
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10873, !tbaa !2474
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10873
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10874
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10874
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10871, !tbaa !2474
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10875, !tbaa !2474
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10877
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10878

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !10879
  unreachable, !dbg !10879

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10881, !tbaa !2474
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10883, !tbaa !2474
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10884
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10885

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10886, !tbaa !2474
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10886
  call void @triple_free(i8* %18), !dbg !10888
  br label %if.end10, !dbg !10889

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10890
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #0 !dbg !10891 !ctir !1780 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %ht.addr = alloca %struct.hash_table*, align 8, !ctir !1782
  %file.addr = alloca i8*, align 8, !ctir !146
  %stats.addr = alloca %struct.stat*, align 8, !ctir !1750
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1774
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10892, metadata !DIExpression()), !dbg !10893
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10894, metadata !DIExpression()), !dbg !10895
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10898, metadata !DIExpression()), !dbg !10899
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10900, !tbaa !2474
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10902
  br i1 %cmp, label %if.then, label %if.end, !dbg !10903

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10904
  br label %return, !dbg !10904

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10905, !tbaa !2474
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10906, !ctir !1774
  store i8* %1, i8** %name, align 8, !dbg !10907, !tbaa !10855, !ctir !143
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10908, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10909, !ctir !1751
  %3 = load i64, i64* %st_ino, align 8, !dbg !10909, !tbaa !4844, !ctir !196
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10910, !ctir !1774
  store i64 %3, i64* %st_ino1, align 8, !dbg !10911, !tbaa !10862, !ctir !256
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10912, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10913, !ctir !1751
  %5 = load i64, i64* %st_dev, align 8, !dbg !10913, !tbaa !4842, !ctir !194
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10914, !ctir !1774
  store i64 %5, i64* %st_dev2, align 8, !dbg !10915, !tbaa !10868, !ctir !258
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10916, !tbaa !2474
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10917
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10918
  %tobool = icmp ne i8* %call, null, !dbg !10919
  %lnot = xor i1 %tobool, true, !dbg !10919
  %lnot3 = xor i1 %lnot, true, !dbg !10920
  store i1 %lnot3, i1* %retval, align 1, !dbg !10921
  br label %return, !dbg !10921

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10922
  ret i1 %8, !dbg !10922
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #0 !dbg !10923 !ctir !1787 {
entry:
  %mode.addr = alloca i32, align 4, !ctir !226
  %str.addr = alloca i8*, align 8, !ctir !143
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10925, metadata !DIExpression()), !dbg !10926
  store i8* %str, i8** %str.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10927, metadata !DIExpression()), !dbg !10928
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10929, !tbaa !2468
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10930
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10931, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10931, !ctir !143
  store i8 %call, i8* %arrayidx, align 1, !dbg !10932, !tbaa !2529
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10933, !tbaa !2468
  %and = and i32 %2, 256, !dbg !10934
  %tobool = icmp ne i32 %and, 0, !dbg !10933
  %3 = zext i1 %tobool to i64, !dbg !10933
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10933
  %conv = trunc i32 %cond to i8, !dbg !10933
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10935, !tbaa !2474
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10935, !ctir !143
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10936, !tbaa !2529
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10937, !tbaa !2468
  %and2 = and i32 %5, 128, !dbg !10938
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10937
  %6 = zext i1 %tobool3 to i64, !dbg !10937
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10937
  %conv5 = trunc i32 %cond4 to i8, !dbg !10937
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10939, !tbaa !2474
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10939, !ctir !143
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10940, !tbaa !2529
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10941, !tbaa !2468
  %and7 = and i32 %8, 2048, !dbg !10942
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10942
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10941

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10943, !tbaa !2468
  %and9 = and i32 %9, 64, !dbg !10944
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10943
  %10 = zext i1 %tobool10 to i64, !dbg !10943
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10943
  br label %cond.end, !dbg !10941

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10945, !tbaa !2468
  %and12 = and i32 %11, 64, !dbg !10946
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10945
  %12 = zext i1 %tobool13 to i64, !dbg !10945
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10945
  br label %cond.end, !dbg !10941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10941
  %conv16 = trunc i32 %cond15 to i8, !dbg !10947
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10948, !tbaa !2474
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10948, !ctir !143
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10949, !tbaa !2529
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10950, !tbaa !2468
  %and18 = and i32 %14, 32, !dbg !10951
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10950
  %15 = zext i1 %tobool19 to i64, !dbg !10950
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10950
  %conv21 = trunc i32 %cond20 to i8, !dbg !10950
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10952, !tbaa !2474
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10952, !ctir !143
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10953, !tbaa !2529
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10954, !tbaa !2468
  %and23 = and i32 %17, 16, !dbg !10955
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10954
  %18 = zext i1 %tobool24 to i64, !dbg !10954
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10954
  %conv26 = trunc i32 %cond25 to i8, !dbg !10954
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10956, !tbaa !2474
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10956, !ctir !143
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10957, !tbaa !2529
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10958, !tbaa !2468
  %and28 = and i32 %20, 1024, !dbg !10959
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10959
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10958

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10960, !tbaa !2468
  %and31 = and i32 %21, 8, !dbg !10961
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10960
  %22 = zext i1 %tobool32 to i64, !dbg !10960
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10960
  br label %cond.end38, !dbg !10958

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10962, !tbaa !2468
  %and35 = and i32 %23, 8, !dbg !10963
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10962
  %24 = zext i1 %tobool36 to i64, !dbg !10962
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10962
  br label %cond.end38, !dbg !10958

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10958
  %conv40 = trunc i32 %cond39 to i8, !dbg !10964
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10965, !tbaa !2474
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10965, !ctir !143
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10966, !tbaa !2529
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10967, !tbaa !2468
  %and42 = and i32 %26, 4, !dbg !10968
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10967
  %27 = zext i1 %tobool43 to i64, !dbg !10967
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10967
  %conv45 = trunc i32 %cond44 to i8, !dbg !10967
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10969, !tbaa !2474
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10969, !ctir !143
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10970, !tbaa !2529
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10971, !tbaa !2468
  %and47 = and i32 %29, 2, !dbg !10972
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10971
  %30 = zext i1 %tobool48 to i64, !dbg !10971
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10971
  %conv50 = trunc i32 %cond49 to i8, !dbg !10971
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10973, !tbaa !2474
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10973, !ctir !143
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10974, !tbaa !2529
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10975, !tbaa !2468
  %and52 = and i32 %32, 512, !dbg !10976
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10976
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10975

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10977, !tbaa !2468
  %and55 = and i32 %33, 1, !dbg !10978
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10977
  %34 = zext i1 %tobool56 to i64, !dbg !10977
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10977
  br label %cond.end62, !dbg !10975

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10979, !tbaa !2468
  %and59 = and i32 %35, 1, !dbg !10980
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10979
  %36 = zext i1 %tobool60 to i64, !dbg !10979
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10979
  br label %cond.end62, !dbg !10975

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10975
  %conv64 = trunc i32 %cond63 to i8, !dbg !10981
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10982, !tbaa !2474
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10982, !ctir !143
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10983, !tbaa !2529
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10984, !tbaa !2474
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10984, !ctir !143
  store i8 32, i8* %arrayidx66, align 1, !dbg !10985, !tbaa !2529
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10986, !tbaa !2474
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10986, !ctir !143
  store i8 0, i8* %arrayidx67, align 1, !dbg !10987, !tbaa !2529
  ret void, !dbg !10988
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #0 !dbg !10989 !ctir !1814 {
entry:
  %retval = alloca i8, align 1, !ctir !144
  %bits.addr = alloca i32, align 4, !ctir !226
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10992, !tbaa !2468
  %and = and i32 %0, 61440, !dbg !10992
  %cmp = icmp eq i32 %and, 32768, !dbg !10992
  br i1 %cmp, label %if.then, label %if.end, !dbg !10994

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10995
  br label %return, !dbg !10995

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10996, !tbaa !2468
  %and1 = and i32 %1, 61440, !dbg !10996
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10996
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10998

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10999
  br label %return, !dbg !10999

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !11000, !tbaa !2468
  %and5 = and i32 %2, 61440, !dbg !11000
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !11000
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11002

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !11003
  br label %return, !dbg !11003

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !11004, !tbaa !2468
  %and9 = and i32 %3, 61440, !dbg !11004
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !11004
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11006

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !11007
  br label %return, !dbg !11007

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !11008, !tbaa !2468
  %and13 = and i32 %4, 61440, !dbg !11008
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !11008
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11010

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !11011
  br label %return, !dbg !11011

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !11012, !tbaa !2468
  %and17 = and i32 %5, 61440, !dbg !11012
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !11012
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11014

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !11015
  br label %return, !dbg !11015

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !11016, !tbaa !2468
  %and21 = and i32 %6, 61440, !dbg !11016
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !11016
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11018

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !11019
  br label %return, !dbg !11019

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !11020
  br label %return, !dbg !11020

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11021
  ret i8 %7, !dbg !11021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #0 !dbg !11022 !ctir !1789 {
entry:
  %statp.addr = alloca %struct.stat*, align 8, !ctir !1791
  %str.addr = alloca i8*, align 8, !ctir !143
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  store i8* %str, i8** %str.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11027, !tbaa !2474
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11028, !ctir !1792
  %1 = load i32, i32* %st_mode, align 8, !dbg !11028, !tbaa !4212, !ctir !200
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11029, !tbaa !2474
  call void @strmode(i32 %1, i8* %2), !dbg !11030
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11031, !tbaa !2474
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !11031, !ctir !1792
  %4 = load i32, i32* %st_mode1, align 8, !dbg !11031, !tbaa !4212, !ctir !200
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11031, !tbaa !2474
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !11031, !ctir !1792
  %6 = load i32, i32* %st_mode2, align 8, !dbg !11031, !tbaa !4212, !ctir !200
  %sub = sub i32 %4, %6, !dbg !11031
  %tobool = icmp ne i32 %sub, 0, !dbg !11031
  br i1 %tobool, label %if.then, label %if.else, !dbg !11033

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11034, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11034, !ctir !143
  store i8 70, i8* %arrayidx, align 1, !dbg !11035, !tbaa !2529
  br label %if.end18, !dbg !11034

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11036, !tbaa !2474
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11036, !ctir !1792
  %9 = load i32, i32* %st_mode3, align 8, !dbg !11036, !tbaa !4212, !ctir !200
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11036, !tbaa !2474
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11036, !ctir !1792
  %11 = load i32, i32* %st_mode4, align 8, !dbg !11036, !tbaa !4212, !ctir !200
  %sub5 = sub i32 %9, %11, !dbg !11036
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !11036
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !11039

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !11040, !tbaa !2474
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !11040, !ctir !143
  store i8 81, i8* %arrayidx8, align 1, !dbg !11041, !tbaa !2529
  br label %if.end17, !dbg !11040

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11042, !tbaa !2474
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !11042, !ctir !1792
  %14 = load i32, i32* %st_mode10, align 8, !dbg !11042, !tbaa !4212, !ctir !200
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11042, !tbaa !2474
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !11042, !ctir !1792
  %16 = load i32, i32* %st_mode11, align 8, !dbg !11042, !tbaa !4212, !ctir !200
  %sub12 = sub i32 %14, %16, !dbg !11042
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !11042
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11044

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !11045, !tbaa !2474
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !11045, !ctir !143
  store i8 83, i8* %arrayidx15, align 1, !dbg !11046, !tbaa !2529
  br label %if.end, !dbg !11045

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11047
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !11048 !ctir !1819 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !146
  %base.addr = alloca i8*, align 8, !ctir !146
  %base_in_result.addr = alloca i8**, align 8, !ctir !142
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11050, metadata !DIExpression()), !dbg !11051
  store i8* %base, i8** %base.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11052, metadata !DIExpression()), !dbg !11053
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11056, metadata !DIExpression()), !dbg !11057
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11058, !tbaa !2474
  %1 = load i8*, i8** %base.addr, align 8, !dbg !11059, !tbaa !2474
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11060, !tbaa !2474
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !11061
  store i8* %call, i8** %p, align 8, !dbg !11057, !tbaa !2474
  %3 = load i8*, i8** %p, align 8, !dbg !11062, !tbaa !2474
  %cmp = icmp eq i8* %3, null, !dbg !11064
  br i1 %cmp, label %if.then, label %if.end, !dbg !11065

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !11066
  unreachable, !dbg !11066

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !11067, !tbaa !2474
  ret i8* %4, !dbg !11068
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !11069 !ctir !1819 {
entry:
  %retval = alloca i8*, align 8, !ctir !143
  %dir.addr = alloca i8*, align 8, !ctir !146
  %base.addr = alloca i8*, align 8, !ctir !146
  %base_in_result.addr = alloca i8**, align 8, !ctir !142
  %dirbase = alloca i8*, align 8, !ctir !146
  %dirbaselen = alloca i64, align 8, !ctir !149
  %dirlen = alloca i64, align 8, !ctir !149
  %baselen = alloca i64, align 8, !ctir !149
  %sep = alloca i8, align 1, !ctir !144
  %p_concat = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  store i8* %base, i8** %base.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11075, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !11077, metadata !DIExpression()), !dbg !11078
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11079, !tbaa !2474
  %call = call i8* @last_component(i8* %0) #16, !dbg !11080
  store i8* %call, i8** %dirbase, align 8, !dbg !11078, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11081, metadata !DIExpression()), !dbg !11082
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11083, !tbaa !2474
  %call1 = call i64 @base_len(i8* %1) #16, !dbg !11084
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11082, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11085, metadata !DIExpression()), !dbg !11086
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11087, !tbaa !2474
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11088, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11089
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11089
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11089
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11090, !tbaa !2611
  %add = add i64 %sub.ptr.sub, %4, !dbg !11091
  store i64 %add, i64* %dirlen, align 8, !dbg !11086, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11092, metadata !DIExpression()), !dbg !11093
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11094, !tbaa !2474
  %call2 = call i64 @strlen(i8* %5) #16, !dbg !11095
  store i64 %call2, i64* %baselen, align 8, !dbg !11093, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11096, metadata !DIExpression()), !dbg !11097
  store i8 0, i8* %sep, align 1, !dbg !11097, !tbaa !2529
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11098, !tbaa !2611
  %tobool = icmp ne i64 %6, 0, !dbg !11098
  br i1 %tobool, label %if.then, label %if.else, !dbg !11100

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11101, !tbaa !2474
  %8 = load i64, i64* %dirlen, align 8, !dbg !11101, !tbaa !2611
  %sub = sub i64 %8, 1, !dbg !11101
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11101, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11101, !tbaa !2529
  %conv = sext i8 %9 to i32, !dbg !11101
  %cmp = icmp eq i32 %conv, 47, !dbg !11101
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11104

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11105, !tbaa !2474
  %11 = load i8, i8* %10, align 1, !dbg !11105, !tbaa !2529, !ctir !147
  %conv4 = sext i8 %11 to i32, !dbg !11105
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11105
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11106

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11107, !tbaa !2529
  br label %if.end, !dbg !11108

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11109

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11110, !tbaa !2474
  %13 = load i8, i8* %12, align 1, !dbg !11110, !tbaa !2529, !ctir !147
  %conv8 = sext i8 %13 to i32, !dbg !11110
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11110
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11112

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11113, !tbaa !2529
  br label %if.end12, !dbg !11115

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11116, metadata !DIExpression()), !dbg !11117
  %14 = load i64, i64* %dirlen, align 8, !dbg !11118, !tbaa !2611
  %15 = load i8, i8* %sep, align 1, !dbg !11119, !tbaa !2529
  %conv14 = sext i8 %15 to i32, !dbg !11119
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11120
  %conv16 = zext i1 %cmp15 to i32, !dbg !11120
  %conv17 = sext i32 %conv16 to i64, !dbg !11121
  %add18 = add i64 %14, %conv17, !dbg !11122
  %16 = load i64, i64* %baselen, align 8, !dbg !11123, !tbaa !2611
  %add19 = add i64 %add18, %16, !dbg !11124
  %add20 = add i64 %add19, 1, !dbg !11125
  %call21 = call noalias i8* @malloc(i64 %add20) #13, !dbg !11126
  store i8* %call21, i8** %p_concat, align 8, !dbg !11117, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11127, metadata !DIExpression()), !dbg !11128
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11129, !tbaa !2474
  %cmp22 = icmp eq i8* %17, null, !dbg !11131
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11132

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11133
  br label %return, !dbg !11133

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11134, !tbaa !2474
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11135, !tbaa !2474
  %20 = load i64, i64* %dirlen, align 8, !dbg !11136, !tbaa !2611
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #13, !dbg !11137
  store i8* %call26, i8** %p, align 8, !dbg !11138, !tbaa !2474
  %21 = load i8, i8* %sep, align 1, !dbg !11139, !tbaa !2529
  %22 = load i8*, i8** %p, align 8, !dbg !11140, !tbaa !2474
  store i8 %21, i8* %22, align 1, !dbg !11141, !tbaa !2529, !ctir !144
  %23 = load i8, i8* %sep, align 1, !dbg !11142, !tbaa !2529
  %conv27 = sext i8 %23 to i32, !dbg !11142
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11143
  %conv29 = zext i1 %cmp28 to i32, !dbg !11143
  %24 = load i8*, i8** %p, align 8, !dbg !11144, !tbaa !2474
  %idx.ext = sext i32 %conv29 to i64, !dbg !11144
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11144
  store i8* %add.ptr, i8** %p, align 8, !dbg !11144, !tbaa !2474
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11145, !tbaa !2474
  %tobool30 = icmp ne i8** %25, null, !dbg !11145
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11147

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11148, !tbaa !2474
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11149, !tbaa !2474
  store i8* %26, i8** %27, align 8, !dbg !11150, !tbaa !2474, !ctir !143
  br label %if.end32, !dbg !11151

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11152, !tbaa !2474
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11153, !tbaa !2474
  %30 = load i64, i64* %baselen, align 8, !dbg !11154, !tbaa !2611
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #13, !dbg !11155
  store i8* %call33, i8** %p, align 8, !dbg !11156, !tbaa !2474
  %31 = load i8*, i8** %p, align 8, !dbg !11157, !tbaa !2474
  store i8 0, i8* %31, align 1, !dbg !11158, !tbaa !2529, !ctir !144
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11159, !tbaa !2474
  store i8* %32, i8** %retval, align 8, !dbg !11160
  br label %return, !dbg !11160

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11161
  ret i8* %33, !dbg !11161
}

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @filevercmp(i8* %s1, i8* %s2) #9 !dbg !11162 !ctir !714 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %s1.addr = alloca i8*, align 8, !ctir !146
  %s2.addr = alloca i8*, align 8, !ctir !146
  %s1_pos = alloca i8*, align 8, !ctir !146
  %s2_pos = alloca i8*, align 8, !ctir !146
  %s1_suffix = alloca i8*, align 8, !ctir !146
  %s2_suffix = alloca i8*, align 8, !ctir !146
  %s1_len = alloca i64, align 8, !ctir !149
  %s2_len = alloca i64, align 8, !ctir !149
  %result = alloca i32, align 4, !ctir !27
  %simple_cmp = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11164, metadata !DIExpression()), !dbg !11165
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11166, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.declare(metadata i8** %s1_pos, metadata !11168, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata i8** %s2_pos, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata i8** %s1_suffix, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata i8** %s2_suffix, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i64* %s1_len, metadata !11176, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.declare(metadata i64* %s2_len, metadata !11178, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11180, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.declare(metadata i32* %simple_cmp, metadata !11182, metadata !DIExpression()), !dbg !11183
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11184, !tbaa !2474
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !11185, !tbaa !2474
  %call = call i32 @strcmp(i8* %0, i8* %1) #16, !dbg !11186
  store i32 %call, i32* %simple_cmp, align 4, !dbg !11183, !tbaa !2468
  %2 = load i32, i32* %simple_cmp, align 4, !dbg !11187, !tbaa !2468
  %cmp = icmp eq i32 %2, 0, !dbg !11189
  br i1 %cmp, label %if.then, label %if.end, !dbg !11190

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11191
  br label %return, !dbg !11191

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s1.addr, align 8, !dbg !11192, !tbaa !2474
  %4 = load i8, i8* %3, align 1, !dbg !11194, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %4, 0, !dbg !11194
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11195

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !11196
  br label %return, !dbg !11196

if.end2:                                          ; preds = %if.end
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !11197, !tbaa !2474
  %6 = load i8, i8* %5, align 1, !dbg !11199, !tbaa !2529, !ctir !147
  %tobool3 = icmp ne i8 %6, 0, !dbg !11199
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11200

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !11201
  br label %return, !dbg !11201

if.end5:                                          ; preds = %if.end2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11202, !tbaa !2474
  %call6 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.296, i64 0, i64 0), i8* %7) #16, !dbg !11204
  %cmp7 = icmp eq i32 0, %call6, !dbg !11205
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11206

if.then8:                                         ; preds = %if.end5
  store i32 -1, i32* %retval, align 4, !dbg !11207
  br label %return, !dbg !11207

if.end9:                                          ; preds = %if.end5
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !11208, !tbaa !2474
  %call10 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.296, i64 0, i64 0), i8* %8) #16, !dbg !11210
  %cmp11 = icmp eq i32 0, %call10, !dbg !11211
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11212

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !11213
  br label %return, !dbg !11213

if.end13:                                         ; preds = %if.end9
  %9 = load i8*, i8** %s1.addr, align 8, !dbg !11214, !tbaa !2474
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.297, i64 0, i64 0), i8* %9) #16, !dbg !11216
  %cmp15 = icmp eq i32 0, %call14, !dbg !11217
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11218

if.then16:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !11219
  br label %return, !dbg !11219

if.end17:                                         ; preds = %if.end13
  %10 = load i8*, i8** %s2.addr, align 8, !dbg !11220, !tbaa !2474
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.297, i64 0, i64 0), i8* %10) #16, !dbg !11222
  %cmp19 = icmp eq i32 0, %call18, !dbg !11223
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11224

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !11225
  br label %return, !dbg !11225

if.end21:                                         ; preds = %if.end17
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !11226, !tbaa !2474
  %12 = load i8, i8* %11, align 1, !dbg !11228, !tbaa !2529, !ctir !147
  %conv = sext i8 %12 to i32, !dbg !11228
  %cmp22 = icmp eq i32 %conv, 46, !dbg !11229
  br i1 %cmp22, label %land.lhs.true, label %if.end28, !dbg !11230

land.lhs.true:                                    ; preds = %if.end21
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !11231, !tbaa !2474
  %14 = load i8, i8* %13, align 1, !dbg !11232, !tbaa !2529, !ctir !147
  %conv24 = sext i8 %14 to i32, !dbg !11232
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !11233
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11234

if.then27:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !11235
  br label %return, !dbg !11235

if.end28:                                         ; preds = %land.lhs.true, %if.end21
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !11236, !tbaa !2474
  %16 = load i8, i8* %15, align 1, !dbg !11238, !tbaa !2529, !ctir !147
  %conv29 = sext i8 %16 to i32, !dbg !11238
  %cmp30 = icmp ne i32 %conv29, 46, !dbg !11239
  br i1 %cmp30, label %land.lhs.true32, label %if.end37, !dbg !11240

land.lhs.true32:                                  ; preds = %if.end28
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !11241, !tbaa !2474
  %18 = load i8, i8* %17, align 1, !dbg !11242, !tbaa !2529, !ctir !147
  %conv33 = sext i8 %18 to i32, !dbg !11242
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !11243
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11244

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %retval, align 4, !dbg !11245
  br label %return, !dbg !11245

if.end37:                                         ; preds = %land.lhs.true32, %if.end28
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11246, !tbaa !2474
  %20 = load i8, i8* %19, align 1, !dbg !11248, !tbaa !2529, !ctir !147
  %conv38 = sext i8 %20 to i32, !dbg !11248
  %cmp39 = icmp eq i32 %conv38, 46, !dbg !11249
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !11250

land.lhs.true41:                                  ; preds = %if.end37
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !11251, !tbaa !2474
  %22 = load i8, i8* %21, align 1, !dbg !11252, !tbaa !2529, !ctir !147
  %conv42 = sext i8 %22 to i32, !dbg !11252
  %cmp43 = icmp eq i32 %conv42, 46, !dbg !11253
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11254

if.then45:                                        ; preds = %land.lhs.true41
  %23 = load i8*, i8** %s1.addr, align 8, !dbg !11255, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11255
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11255, !tbaa !2474
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11257, !tbaa !2474
  %incdec.ptr46 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11257
  store i8* %incdec.ptr46, i8** %s2.addr, align 8, !dbg !11257, !tbaa !2474
  br label %if.end47, !dbg !11258

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.end37
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !11259, !tbaa !2474
  store i8* %25, i8** %s1_pos, align 8, !dbg !11260, !tbaa !2474
  %26 = load i8*, i8** %s2.addr, align 8, !dbg !11261, !tbaa !2474
  store i8* %26, i8** %s2_pos, align 8, !dbg !11262, !tbaa !2474
  %call48 = call i8* @match_suffix(i8** %s1_pos), !dbg !11263
  store i8* %call48, i8** %s1_suffix, align 8, !dbg !11264, !tbaa !2474
  %call49 = call i8* @match_suffix(i8** %s2_pos), !dbg !11265
  store i8* %call49, i8** %s2_suffix, align 8, !dbg !11266, !tbaa !2474
  %27 = load i8*, i8** %s1_suffix, align 8, !dbg !11267, !tbaa !2474
  %tobool50 = icmp ne i8* %27, null, !dbg !11267
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !11267

cond.true:                                        ; preds = %if.end47
  %28 = load i8*, i8** %s1_suffix, align 8, !dbg !11268, !tbaa !2474
  br label %cond.end, !dbg !11267

cond.false:                                       ; preds = %if.end47
  %29 = load i8*, i8** %s1_pos, align 8, !dbg !11269, !tbaa !2474
  br label %cond.end, !dbg !11267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %28, %cond.true ], [ %29, %cond.false ], !dbg !11267
  %30 = load i8*, i8** %s1.addr, align 8, !dbg !11270, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64, !dbg !11271
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !11271
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11271
  store i64 %sub.ptr.sub, i64* %s1_len, align 8, !dbg !11272, !tbaa !2611
  %31 = load i8*, i8** %s2_suffix, align 8, !dbg !11273, !tbaa !2474
  %tobool51 = icmp ne i8* %31, null, !dbg !11273
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !11273

cond.true52:                                      ; preds = %cond.end
  %32 = load i8*, i8** %s2_suffix, align 8, !dbg !11274, !tbaa !2474
  br label %cond.end54, !dbg !11273

cond.false53:                                     ; preds = %cond.end
  %33 = load i8*, i8** %s2_pos, align 8, !dbg !11275, !tbaa !2474
  br label %cond.end54, !dbg !11273

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %32, %cond.true52 ], [ %33, %cond.false53 ], !dbg !11273
  %34 = load i8*, i8** %s2.addr, align 8, !dbg !11276, !tbaa !2474
  %sub.ptr.lhs.cast56 = ptrtoint i8* %cond55 to i64, !dbg !11277
  %sub.ptr.rhs.cast57 = ptrtoint i8* %34 to i64, !dbg !11277
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57, !dbg !11277
  store i64 %sub.ptr.sub58, i64* %s2_len, align 8, !dbg !11278, !tbaa !2611
  %35 = load i8*, i8** %s1_suffix, align 8, !dbg !11279, !tbaa !2474
  %tobool59 = icmp ne i8* %35, null, !dbg !11279
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false, !dbg !11281

lor.lhs.false:                                    ; preds = %cond.end54
  %36 = load i8*, i8** %s2_suffix, align 8, !dbg !11282, !tbaa !2474
  %tobool60 = icmp ne i8* %36, null, !dbg !11282
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !11283

land.lhs.true61:                                  ; preds = %lor.lhs.false, %cond.end54
  %37 = load i64, i64* %s1_len, align 8, !dbg !11284, !tbaa !2611
  %38 = load i64, i64* %s2_len, align 8, !dbg !11285, !tbaa !2611
  %cmp62 = icmp eq i64 %37, %38, !dbg !11286
  br i1 %cmp62, label %land.lhs.true64, label %if.end75, !dbg !11287

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !11288, !tbaa !2474
  %40 = load i8*, i8** %s2.addr, align 8, !dbg !11289, !tbaa !2474
  %41 = load i64, i64* %s1_len, align 8, !dbg !11290, !tbaa !2611
  %call65 = call i32 @strncmp(i8* %39, i8* %40, i64 %41) #16, !dbg !11291
  %cmp66 = icmp eq i32 0, %call65, !dbg !11292
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !11293

if.then68:                                        ; preds = %land.lhs.true64
  %42 = load i8*, i8** %s1_pos, align 8, !dbg !11294, !tbaa !2474
  %43 = load i8*, i8** %s1.addr, align 8, !dbg !11296, !tbaa !2474
  %sub.ptr.lhs.cast69 = ptrtoint i8* %42 to i64, !dbg !11297
  %sub.ptr.rhs.cast70 = ptrtoint i8* %43 to i64, !dbg !11297
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !11297
  store i64 %sub.ptr.sub71, i64* %s1_len, align 8, !dbg !11298, !tbaa !2611
  %44 = load i8*, i8** %s2_pos, align 8, !dbg !11299, !tbaa !2474
  %45 = load i8*, i8** %s2.addr, align 8, !dbg !11300, !tbaa !2474
  %sub.ptr.lhs.cast72 = ptrtoint i8* %44 to i64, !dbg !11301
  %sub.ptr.rhs.cast73 = ptrtoint i8* %45 to i64, !dbg !11301
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !11301
  store i64 %sub.ptr.sub74, i64* %s2_len, align 8, !dbg !11302, !tbaa !2611
  br label %if.end75, !dbg !11303

if.end75:                                         ; preds = %if.then68, %land.lhs.true64, %land.lhs.true61, %lor.lhs.false
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !11304, !tbaa !2474
  %47 = load i64, i64* %s1_len, align 8, !dbg !11305, !tbaa !2611
  %48 = load i8*, i8** %s2.addr, align 8, !dbg !11306, !tbaa !2474
  %49 = load i64, i64* %s2_len, align 8, !dbg !11307, !tbaa !2611
  %call76 = call i32 @verrevcmp(i8* %46, i64 %47, i8* %48, i64 %49) #16, !dbg !11308
  store i32 %call76, i32* %result, align 4, !dbg !11309, !tbaa !2468
  %50 = load i32, i32* %result, align 4, !dbg !11310, !tbaa !2468
  %cmp77 = icmp eq i32 %50, 0, !dbg !11311
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !11310

cond.true79:                                      ; preds = %if.end75
  %51 = load i32, i32* %simple_cmp, align 4, !dbg !11312, !tbaa !2468
  br label %cond.end81, !dbg !11310

cond.false80:                                     ; preds = %if.end75
  %52 = load i32, i32* %result, align 4, !dbg !11313, !tbaa !2468
  br label %cond.end81, !dbg !11310

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ %51, %cond.true79 ], [ %52, %cond.false80 ], !dbg !11310
  store i32 %cond82, i32* %retval, align 4, !dbg !11314
  br label %return, !dbg !11314

return:                                           ; preds = %cond.end81, %if.then36, %if.then27, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !11315
  ret i32 %53, !dbg !11315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @match_suffix(i8** %str) #0 !dbg !11316 !ctir !1827 {
entry:
  %str.addr = alloca i8**, align 8, !ctir !145
  %match = alloca i8*, align 8, !ctir !146
  %read_alpha = alloca i8, align 1, !ctir !141
  store i8** %str, i8*** %str.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata i8** %match, metadata !11319, metadata !DIExpression()), !dbg !11320
  store i8* null, i8** %match, align 8, !dbg !11320, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %read_alpha, metadata !11321, metadata !DIExpression()), !dbg !11322
  store i8 0, i8* %read_alpha, align 1, !dbg !11322, !tbaa !2493
  br label %while.cond, !dbg !11323

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !11324, !tbaa !2474
  %1 = load i8*, i8** %0, align 8, !dbg !11325, !tbaa !2474, !ctir !146
  %2 = load i8, i8* %1, align 1, !dbg !11326, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !11323
  br i1 %tobool, label %while.body, label %while.end, !dbg !11323

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %read_alpha, align 1, !dbg !11327, !tbaa !2493
  %tobool1 = trunc i8 %3 to i1, !dbg !11327
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11330

if.then:                                          ; preds = %while.body
  store i8 0, i8* %read_alpha, align 1, !dbg !11331, !tbaa !2493
  %4 = load i8**, i8*** %str.addr, align 8, !dbg !11333, !tbaa !2474
  %5 = load i8*, i8** %4, align 8, !dbg !11335, !tbaa !2474, !ctir !146
  %6 = load i8, i8* %5, align 1, !dbg !11336, !tbaa !2529, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !11336
  %call = call zeroext i1 @c_isalpha(i32 %conv), !dbg !11337
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !11338

land.lhs.true:                                    ; preds = %if.then
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !11339, !tbaa !2474
  %8 = load i8*, i8** %7, align 8, !dbg !11340, !tbaa !2474, !ctir !146
  %9 = load i8, i8* %8, align 1, !dbg !11341, !tbaa !2529, !ctir !147
  %conv2 = sext i8 %9 to i32, !dbg !11341
  %cmp = icmp ne i32 126, %conv2, !dbg !11342
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11343

if.then4:                                         ; preds = %land.lhs.true
  store i8* null, i8** %match, align 8, !dbg !11344, !tbaa !2474
  br label %if.end, !dbg !11345

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end22, !dbg !11346

if.else:                                          ; preds = %while.body
  %10 = load i8**, i8*** %str.addr, align 8, !dbg !11347, !tbaa !2474
  %11 = load i8*, i8** %10, align 8, !dbg !11349, !tbaa !2474, !ctir !146
  %12 = load i8, i8* %11, align 1, !dbg !11350, !tbaa !2529, !ctir !147
  %conv5 = sext i8 %12 to i32, !dbg !11350
  %cmp6 = icmp eq i32 46, %conv5, !dbg !11351
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !11352

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %read_alpha, align 1, !dbg !11353, !tbaa !2493
  %13 = load i8*, i8** %match, align 8, !dbg !11355, !tbaa !2474
  %tobool9 = icmp ne i8* %13, null, !dbg !11355
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11357

if.then10:                                        ; preds = %if.then8
  %14 = load i8**, i8*** %str.addr, align 8, !dbg !11358, !tbaa !2474
  %15 = load i8*, i8** %14, align 8, !dbg !11359, !tbaa !2474, !ctir !146
  store i8* %15, i8** %match, align 8, !dbg !11360, !tbaa !2474
  br label %if.end11, !dbg !11361

if.end11:                                         ; preds = %if.then10, %if.then8
  br label %if.end21, !dbg !11362

if.else12:                                        ; preds = %if.else
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !11363, !tbaa !2474
  %17 = load i8*, i8** %16, align 8, !dbg !11365, !tbaa !2474, !ctir !146
  %18 = load i8, i8* %17, align 1, !dbg !11366, !tbaa !2529, !ctir !147
  %conv13 = sext i8 %18 to i32, !dbg !11366
  %call14 = call zeroext i1 @c_isalnum(i32 %conv13), !dbg !11367
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !11368

land.lhs.true15:                                  ; preds = %if.else12
  %19 = load i8**, i8*** %str.addr, align 8, !dbg !11369, !tbaa !2474
  %20 = load i8*, i8** %19, align 8, !dbg !11370, !tbaa !2474, !ctir !146
  %21 = load i8, i8* %20, align 1, !dbg !11371, !tbaa !2529, !ctir !147
  %conv16 = sext i8 %21 to i32, !dbg !11371
  %cmp17 = icmp ne i32 126, %conv16, !dbg !11372
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11373

if.then19:                                        ; preds = %land.lhs.true15
  store i8* null, i8** %match, align 8, !dbg !11374, !tbaa !2474
  br label %if.end20, !dbg !11375

if.end20:                                         ; preds = %if.then19, %land.lhs.true15, %if.else12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !11376, !tbaa !2474
  %23 = load i8*, i8** %22, align 8, !dbg !11377, !tbaa !2474, !ctir !146
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11377
  store i8* %incdec.ptr, i8** %22, align 8, !dbg !11377, !tbaa !2474, !ctir !146
  br label %while.cond, !dbg !11323, !llvm.loop !11378

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %match, align 8, !dbg !11380, !tbaa !2474
  ret i8* %24, !dbg !11381
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @verrevcmp(i8* %s1, i64 %s1_len, i8* %s2, i64 %s2_len) #9 !dbg !11382 !ctir !1829 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %s1.addr = alloca i8*, align 8, !ctir !146
  %s1_len.addr = alloca i64, align 8, !ctir !149
  %s2.addr = alloca i8*, align 8, !ctir !146
  %s2_len.addr = alloca i64, align 8, !ctir !149
  %s1_pos = alloca i64, align 8, !ctir !149
  %s2_pos = alloca i64, align 8, !ctir !149
  %first_diff = alloca i32, align 4, !ctir !27
  %s1_c = alloca i32, align 4, !ctir !27
  %s2_c = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store i64 %s1_len, i64* %s1_len.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s1_len.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store i64 %s2_len, i64* %s2_len.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s2_len.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.declare(metadata i64* %s1_pos, metadata !11391, metadata !DIExpression()), !dbg !11392
  store i64 0, i64* %s1_pos, align 8, !dbg !11392, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s2_pos, metadata !11393, metadata !DIExpression()), !dbg !11394
  store i64 0, i64* %s2_pos, align 8, !dbg !11394, !tbaa !2611
  br label %while.cond, !dbg !11395

while.cond:                                       ; preds = %if.end77, %entry
  %0 = load i64, i64* %s1_pos, align 8, !dbg !11396, !tbaa !2611
  %1 = load i64, i64* %s1_len.addr, align 8, !dbg !11397, !tbaa !2611
  %cmp = icmp ult i64 %0, %1, !dbg !11398
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11399

lor.rhs:                                          ; preds = %while.cond
  %2 = load i64, i64* %s2_pos, align 8, !dbg !11400, !tbaa !2611
  %3 = load i64, i64* %s2_len.addr, align 8, !dbg !11401, !tbaa !2611
  %cmp1 = icmp ult i64 %2, %3, !dbg !11402
  br label %lor.end, !dbg !11399

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end78, !dbg !11395

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %first_diff, metadata !11403, metadata !DIExpression()), !dbg !11405
  store i32 0, i32* %first_diff, align 4, !dbg !11405, !tbaa !2468
  br label %while.cond2, !dbg !11406

while.cond2:                                      ; preds = %if.end, %while.body
  %5 = load i64, i64* %s1_pos, align 8, !dbg !11407, !tbaa !2611
  %6 = load i64, i64* %s1_len.addr, align 8, !dbg !11408, !tbaa !2611
  %cmp3 = icmp ult i64 %5, %6, !dbg !11409
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs4, !dbg !11410

land.lhs.true:                                    ; preds = %while.cond2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11411, !tbaa !2474
  %8 = load i64, i64* %s1_pos, align 8, !dbg !11412, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !11411, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11411, !tbaa !2529
  %conv = sext i8 %9 to i32, !dbg !11411
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11413
  br i1 %call, label %lor.rhs4, label %lor.end10, !dbg !11414

lor.rhs4:                                         ; preds = %land.lhs.true, %while.cond2
  %10 = load i64, i64* %s2_pos, align 8, !dbg !11415, !tbaa !2611
  %11 = load i64, i64* %s2_len.addr, align 8, !dbg !11416, !tbaa !2611
  %cmp5 = icmp ult i64 %10, %11, !dbg !11417
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !11418

land.rhs:                                         ; preds = %lor.rhs4
  %12 = load i8*, i8** %s2.addr, align 8, !dbg !11419, !tbaa !2474
  %13 = load i64, i64* %s2_pos, align 8, !dbg !11420, !tbaa !2611
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !11419, !ctir !146
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !11419, !tbaa !2529
  %conv8 = sext i8 %14 to i32, !dbg !11419
  %call9 = call zeroext i1 @c_isdigit(i32 %conv8), !dbg !11421
  %lnot = xor i1 %call9, true, !dbg !11422
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs4
  %15 = phi i1 [ false, %lor.rhs4 ], [ %lnot, %land.rhs ], !dbg !11423
  br label %lor.end10, !dbg !11414

lor.end10:                                        ; preds = %land.end, %land.lhs.true
  %16 = phi i1 [ true, %land.lhs.true ], [ %15, %land.end ]
  br i1 %16, label %while.body11, label %while.end, !dbg !11406

while.body11:                                     ; preds = %lor.end10
  call void @llvm.dbg.declare(metadata i32* %s1_c, metadata !11424, metadata !DIExpression()), !dbg !11426
  %17 = load i64, i64* %s1_pos, align 8, !dbg !11427, !tbaa !2611
  %18 = load i64, i64* %s1_len.addr, align 8, !dbg !11428, !tbaa !2611
  %cmp12 = icmp eq i64 %17, %18, !dbg !11429
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !11430

cond.true:                                        ; preds = %while.body11
  br label %cond.end, !dbg !11430

cond.false:                                       ; preds = %while.body11
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11431, !tbaa !2474
  %20 = load i64, i64* %s1_pos, align 8, !dbg !11432, !tbaa !2611
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !11431, !ctir !146
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !11431, !tbaa !2529
  %call15 = call i32 @order(i8 zeroext %21), !dbg !11433
  br label %cond.end, !dbg !11430

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call15, %cond.false ], !dbg !11430
  store i32 %cond, i32* %s1_c, align 4, !dbg !11426, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %s2_c, metadata !11434, metadata !DIExpression()), !dbg !11435
  %22 = load i64, i64* %s2_pos, align 8, !dbg !11436, !tbaa !2611
  %23 = load i64, i64* %s2_len.addr, align 8, !dbg !11437, !tbaa !2611
  %cmp16 = icmp eq i64 %22, %23, !dbg !11438
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !11439

cond.true18:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !11439

cond.false19:                                     ; preds = %cond.end
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11440, !tbaa !2474
  %25 = load i64, i64* %s2_pos, align 8, !dbg !11441, !tbaa !2611
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !11440, !ctir !146
  %26 = load i8, i8* %arrayidx20, align 1, !dbg !11440, !tbaa !2529
  %call21 = call i32 @order(i8 zeroext %26), !dbg !11442
  br label %cond.end22, !dbg !11439

cond.end22:                                       ; preds = %cond.false19, %cond.true18
  %cond23 = phi i32 [ 0, %cond.true18 ], [ %call21, %cond.false19 ], !dbg !11439
  store i32 %cond23, i32* %s2_c, align 4, !dbg !11435, !tbaa !2468
  %27 = load i32, i32* %s1_c, align 4, !dbg !11443, !tbaa !2468
  %28 = load i32, i32* %s2_c, align 4, !dbg !11445, !tbaa !2468
  %cmp24 = icmp ne i32 %27, %28, !dbg !11446
  br i1 %cmp24, label %if.then, label %if.end, !dbg !11447

if.then:                                          ; preds = %cond.end22
  %29 = load i32, i32* %s1_c, align 4, !dbg !11448, !tbaa !2468
  %30 = load i32, i32* %s2_c, align 4, !dbg !11449, !tbaa !2468
  %sub = sub nsw i32 %29, %30, !dbg !11450
  store i32 %sub, i32* %retval, align 4, !dbg !11451
  br label %return, !dbg !11451

if.end:                                           ; preds = %cond.end22
  %31 = load i64, i64* %s1_pos, align 8, !dbg !11452, !tbaa !2611
  %inc = add i64 %31, 1, !dbg !11452
  store i64 %inc, i64* %s1_pos, align 8, !dbg !11452, !tbaa !2611
  %32 = load i64, i64* %s2_pos, align 8, !dbg !11453, !tbaa !2611
  %inc26 = add i64 %32, 1, !dbg !11453
  store i64 %inc26, i64* %s2_pos, align 8, !dbg !11453, !tbaa !2611
  br label %while.cond2, !dbg !11406, !llvm.loop !11454

while.end:                                        ; preds = %lor.end10
  br label %while.cond27, !dbg !11456

while.cond27:                                     ; preds = %while.body32, %while.end
  %33 = load i8*, i8** %s1.addr, align 8, !dbg !11457, !tbaa !2474
  %34 = load i64, i64* %s1_pos, align 8, !dbg !11458, !tbaa !2611
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11457, !ctir !146
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !11457, !tbaa !2529
  %conv29 = sext i8 %35 to i32, !dbg !11457
  %cmp30 = icmp eq i32 %conv29, 48, !dbg !11459
  br i1 %cmp30, label %while.body32, label %while.end34, !dbg !11456

while.body32:                                     ; preds = %while.cond27
  %36 = load i64, i64* %s1_pos, align 8, !dbg !11460, !tbaa !2611
  %inc33 = add i64 %36, 1, !dbg !11460
  store i64 %inc33, i64* %s1_pos, align 8, !dbg !11460, !tbaa !2611
  br label %while.cond27, !dbg !11456, !llvm.loop !11461

while.end34:                                      ; preds = %while.cond27
  br label %while.cond35, !dbg !11462

while.cond35:                                     ; preds = %while.body40, %while.end34
  %37 = load i8*, i8** %s2.addr, align 8, !dbg !11463, !tbaa !2474
  %38 = load i64, i64* %s2_pos, align 8, !dbg !11464, !tbaa !2611
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !11463, !ctir !146
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !11463, !tbaa !2529
  %conv37 = sext i8 %39 to i32, !dbg !11463
  %cmp38 = icmp eq i32 %conv37, 48, !dbg !11465
  br i1 %cmp38, label %while.body40, label %while.end42, !dbg !11462

while.body40:                                     ; preds = %while.cond35
  %40 = load i64, i64* %s2_pos, align 8, !dbg !11466, !tbaa !2611
  %inc41 = add i64 %40, 1, !dbg !11466
  store i64 %inc41, i64* %s2_pos, align 8, !dbg !11466, !tbaa !2611
  br label %while.cond35, !dbg !11462, !llvm.loop !11467

while.end42:                                      ; preds = %while.cond35
  br label %while.cond43, !dbg !11468

while.cond43:                                     ; preds = %if.end61, %while.end42
  %41 = load i8*, i8** %s1.addr, align 8, !dbg !11469, !tbaa !2474
  %42 = load i64, i64* %s1_pos, align 8, !dbg !11470, !tbaa !2611
  %arrayidx44 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !11469, !ctir !146
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !11469, !tbaa !2529
  %conv45 = sext i8 %43 to i32, !dbg !11469
  %call46 = call zeroext i1 @c_isdigit(i32 %conv45), !dbg !11471
  br i1 %call46, label %land.rhs48, label %land.end53, !dbg !11472

land.rhs48:                                       ; preds = %while.cond43
  %44 = load i8*, i8** %s2.addr, align 8, !dbg !11473, !tbaa !2474
  %45 = load i64, i64* %s2_pos, align 8, !dbg !11474, !tbaa !2611
  %arrayidx49 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !11473, !ctir !146
  %46 = load i8, i8* %arrayidx49, align 1, !dbg !11473, !tbaa !2529
  %conv50 = sext i8 %46 to i32, !dbg !11473
  %call51 = call zeroext i1 @c_isdigit(i32 %conv50), !dbg !11475
  br label %land.end53

land.end53:                                       ; preds = %land.rhs48, %while.cond43
  %47 = phi i1 [ false, %while.cond43 ], [ %call51, %land.rhs48 ], !dbg !11423
  br i1 %47, label %while.body54, label %while.end64, !dbg !11468

while.body54:                                     ; preds = %land.end53
  %48 = load i32, i32* %first_diff, align 4, !dbg !11476, !tbaa !2468
  %tobool = icmp ne i32 %48, 0, !dbg !11476
  br i1 %tobool, label %if.end61, label %if.then55, !dbg !11479

if.then55:                                        ; preds = %while.body54
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !11480, !tbaa !2474
  %50 = load i64, i64* %s1_pos, align 8, !dbg !11481, !tbaa !2611
  %arrayidx56 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !11480, !ctir !146
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !11480, !tbaa !2529
  %conv57 = sext i8 %51 to i32, !dbg !11480
  %52 = load i8*, i8** %s2.addr, align 8, !dbg !11482, !tbaa !2474
  %53 = load i64, i64* %s2_pos, align 8, !dbg !11483, !tbaa !2611
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !11482, !ctir !146
  %54 = load i8, i8* %arrayidx58, align 1, !dbg !11482, !tbaa !2529
  %conv59 = sext i8 %54 to i32, !dbg !11482
  %sub60 = sub nsw i32 %conv57, %conv59, !dbg !11484
  store i32 %sub60, i32* %first_diff, align 4, !dbg !11485, !tbaa !2468
  br label %if.end61, !dbg !11486

if.end61:                                         ; preds = %if.then55, %while.body54
  %55 = load i64, i64* %s1_pos, align 8, !dbg !11487, !tbaa !2611
  %inc62 = add i64 %55, 1, !dbg !11487
  store i64 %inc62, i64* %s1_pos, align 8, !dbg !11487, !tbaa !2611
  %56 = load i64, i64* %s2_pos, align 8, !dbg !11488, !tbaa !2611
  %inc63 = add i64 %56, 1, !dbg !11488
  store i64 %inc63, i64* %s2_pos, align 8, !dbg !11488, !tbaa !2611
  br label %while.cond43, !dbg !11468, !llvm.loop !11489

while.end64:                                      ; preds = %land.end53
  %57 = load i8*, i8** %s1.addr, align 8, !dbg !11491, !tbaa !2474
  %58 = load i64, i64* %s1_pos, align 8, !dbg !11493, !tbaa !2611
  %arrayidx65 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11491, !ctir !146
  %59 = load i8, i8* %arrayidx65, align 1, !dbg !11491, !tbaa !2529
  %conv66 = sext i8 %59 to i32, !dbg !11491
  %call67 = call zeroext i1 @c_isdigit(i32 %conv66), !dbg !11494
  br i1 %call67, label %if.then68, label %if.end69, !dbg !11495

if.then68:                                        ; preds = %while.end64
  store i32 1, i32* %retval, align 4, !dbg !11496
  br label %return, !dbg !11496

if.end69:                                         ; preds = %while.end64
  %60 = load i8*, i8** %s2.addr, align 8, !dbg !11497, !tbaa !2474
  %61 = load i64, i64* %s2_pos, align 8, !dbg !11499, !tbaa !2611
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !11497, !ctir !146
  %62 = load i8, i8* %arrayidx70, align 1, !dbg !11497, !tbaa !2529
  %conv71 = sext i8 %62 to i32, !dbg !11497
  %call72 = call zeroext i1 @c_isdigit(i32 %conv71), !dbg !11500
  br i1 %call72, label %if.then73, label %if.end74, !dbg !11501

if.then73:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !11502
  br label %return, !dbg !11502

if.end74:                                         ; preds = %if.end69
  %63 = load i32, i32* %first_diff, align 4, !dbg !11503, !tbaa !2468
  %tobool75 = icmp ne i32 %63, 0, !dbg !11503
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11505

if.then76:                                        ; preds = %if.end74
  %64 = load i32, i32* %first_diff, align 4, !dbg !11506, !tbaa !2468
  store i32 %64, i32* %retval, align 4, !dbg !11507
  br label %return, !dbg !11507

if.end77:                                         ; preds = %if.end74
  br label %while.cond, !dbg !11395, !llvm.loop !11508

while.end78:                                      ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !11510
  br label %return, !dbg !11510

return:                                           ; preds = %while.end78, %if.then76, %if.then73, %if.then68, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11511
  ret i32 %65, !dbg !11511
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @order(i8 zeroext %c) #0 !dbg !11512 !ctir !1831 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %c.addr = alloca i8, align 1, !ctir !579
  store i8 %c, i8* %c.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !11513, metadata !DIExpression()), !dbg !11514
  %0 = load i8, i8* %c.addr, align 1, !dbg !11515, !tbaa !2529
  %conv = zext i8 %0 to i32, !dbg !11515
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11517
  br i1 %call, label %if.then, label %if.else, !dbg !11518

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11519
  br label %return, !dbg !11519

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !11520, !tbaa !2529
  %conv1 = zext i8 %1 to i32, !dbg !11520
  %call2 = call zeroext i1 @c_isalpha(i32 %conv1), !dbg !11522
  br i1 %call2, label %if.then3, label %if.else5, !dbg !11523

if.then3:                                         ; preds = %if.else
  %2 = load i8, i8* %c.addr, align 1, !dbg !11524, !tbaa !2529
  %conv4 = zext i8 %2 to i32, !dbg !11524
  store i32 %conv4, i32* %retval, align 4, !dbg !11525
  br label %return, !dbg !11525

if.else5:                                         ; preds = %if.else
  %3 = load i8, i8* %c.addr, align 1, !dbg !11526, !tbaa !2529
  %conv6 = zext i8 %3 to i32, !dbg !11526
  %cmp = icmp eq i32 %conv6, 126, !dbg !11528
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !11529

if.then8:                                         ; preds = %if.else5
  store i32 -1, i32* %retval, align 4, !dbg !11530
  br label %return, !dbg !11530

if.else9:                                         ; preds = %if.else5
  %4 = load i8, i8* %c.addr, align 1, !dbg !11531, !tbaa !2529
  %conv10 = zext i8 %4 to i32, !dbg !11532
  %add = add nsw i32 %conv10, 255, !dbg !11533
  %add11 = add nsw i32 %add, 1, !dbg !11534
  store i32 %add11, i32* %retval, align 4, !dbg !11535
  br label %return, !dbg !11535

return:                                           ; preds = %if.else9, %if.then8, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11536
  ret i32 %5, !dbg !11536
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.dev_ino* nonnull %ts) #0 !dbg !11537 !ctir !1836 {
entry:
  %ts.addr = alloca %struct.dev_ino*, align 8, !ctir !1838
  store %struct.dev_ino* %ts, %struct.dev_ino** %ts.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ts.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  %0 = load %struct.dev_ino*, %struct.dev_ino** %ts.addr, align 8, !dbg !11541, !tbaa !2474
  %call = call i32 @clock_gettime(i32 0, %struct.dev_ino* %0) #13, !dbg !11542
  ret void, !dbg !11543
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.dev_ino*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #0 !dbg !11544 !ctir !1843 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !1839
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !11545, metadata !DIExpression()), !dbg !11546
  call void @gettime(%struct.dev_ino* %retval), !dbg !11547
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !11548
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !11548
  ret { i64, i64 } %1, !dbg !11548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #0 !dbg !11549 !ctir !663 {
entry:
  %category.addr = alloca i32, align 4, !ctir !27
  %hard = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  store i32 %category, i32* %category.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !11551, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !11553, metadata !DIExpression()), !dbg !11554
  store i8 1, i8* %hard, align 1, !dbg !11554, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11555, metadata !DIExpression()), !dbg !11556
  %0 = load i32, i32* %category.addr, align 4, !dbg !11557, !tbaa !2468
  %call = call i8* @setlocale(i32 %0, i8* null) #13, !dbg !11558
  store i8* %call, i8** %p, align 8, !dbg !11556, !tbaa !2474
  %1 = load i8*, i8** %p, align 8, !dbg !11559, !tbaa !2474
  %tobool = icmp ne i8* %1, null, !dbg !11559
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11561

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !11562, !tbaa !2474
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.302, i64 0, i64 0)) #16, !dbg !11567
  %cmp = icmp eq i32 %call1, 0, !dbg !11568
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !11569

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !11570, !tbaa !2474
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i64 0, i64 0)) #16, !dbg !11571
  %cmp3 = icmp eq i32 %call2, 0, !dbg !11572
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11573

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !11574, !tbaa !2493
  br label %if.end, !dbg !11575

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !11576

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !11577, !tbaa !2493
  %tobool6 = trunc i8 %4 to i1, !dbg !11577
  ret i1 %tobool6, !dbg !11578
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11579 !ctir !1143 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11580, metadata !DIExpression()), !dbg !11581
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11582, !tbaa !2474
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11583, !ctir !1146
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11583, !tbaa !11584, !ctir !149
  ret i64 %1, !dbg !11586
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11587 !ctir !1143 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11590, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11591, !ctir !1146
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11591, !tbaa !11592, !ctir !149
  ret i64 %1, !dbg !11593
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11594 !ctir !1143 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11595, metadata !DIExpression()), !dbg !11596
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11597, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11598, !ctir !1146
  %1 = load i64, i64* %n_entries, align 8, !dbg !11598, !tbaa !11599, !ctir !149
  ret i64 %1, !dbg !11600
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11601 !ctir !1143 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  %max_bucket_length = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1158
  %bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11602, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11604, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11606, metadata !DIExpression()), !dbg !11607
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11607, !tbaa !2611
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11608, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11610, !ctir !1146
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11610, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11612, !tbaa !2474
  br label %for.cond, !dbg !11613

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11614, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11616, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11617, !ctir !1146
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11617, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11619
  br i1 %cmp, label %for.body, label %for.end, !dbg !11620

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11621, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11624, !ctir !1159
  %6 = load i8*, i8** %data, align 8, !dbg !11624, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11621
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11627

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11628, metadata !DIExpression()), !dbg !11630
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11631, !tbaa !2474
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11630, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11632, metadata !DIExpression()), !dbg !11633
  store i64 1, i64* %bucket_length, align 8, !dbg !11633, !tbaa !2611
  br label %while.cond, !dbg !11634

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11635, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11636, !ctir !1159
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11636, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11638, !tbaa !2474
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11639, !tbaa !2474
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11634
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11634

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11640, !tbaa !2611
  %inc = add i64 %11, 1, !dbg !11640
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11640, !tbaa !2611
  br label %while.cond, !dbg !11634, !llvm.loop !11641

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11642, !tbaa !2611
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11644, !tbaa !2611
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11645
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11646

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11647, !tbaa !2611
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11648, !tbaa !2611
  br label %if.end, !dbg !11649

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11650

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11651

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11652, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11652
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11652, !tbaa !2474
  br label %for.cond, !dbg !11653, !llvm.loop !11654

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11656, !tbaa !2611
  ret i64 %16, !dbg !11657
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11658 !ctir !1184 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %n_entries = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1158
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11661, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11663, metadata !DIExpression()), !dbg !11664
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11664, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11665, metadata !DIExpression()), !dbg !11666
  store i64 0, i64* %n_entries, align 8, !dbg !11666, !tbaa !2611
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11667, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11669, !ctir !1146
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11669, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11670, !tbaa !2474
  br label %for.cond, !dbg !11671

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11672, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11674, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11675, !ctir !1146
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11675, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11676
  br i1 %cmp, label %for.body, label %for.end, !dbg !11677

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11678, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11681, !ctir !1159
  %6 = load i8*, i8** %data, align 8, !dbg !11681, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11678
  br i1 %tobool, label %if.then, label %if.end, !dbg !11682

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11683, metadata !DIExpression()), !dbg !11685
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11686, !tbaa !2474
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11685, !tbaa !2474
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11687, !tbaa !2611
  %inc = add i64 %8, 1, !dbg !11687
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11687, !tbaa !2611
  %9 = load i64, i64* %n_entries, align 8, !dbg !11688, !tbaa !2611
  %inc2 = add i64 %9, 1, !dbg !11688
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11688, !tbaa !2611
  br label %while.cond, !dbg !11689

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11690, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11691, !ctir !1159
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11691, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11692, !tbaa !2474
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11693, !tbaa !2474
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11689
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11689

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11694, !tbaa !2611
  %inc4 = add i64 %13, 1, !dbg !11694
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11694, !tbaa !2611
  br label %while.cond, !dbg !11689, !llvm.loop !11695

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11696

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11697

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11698, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11698
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11698, !tbaa !2474
  br label %for.cond, !dbg !11699, !llvm.loop !11700

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11702, !tbaa !2611
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11704, !tbaa !2474
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11705, !ctir !1146
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11705, !tbaa !11592, !ctir !149
  %cmp6 = icmp eq i64 %15, %17, !dbg !11706
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11707

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11708, !tbaa !2611
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11709, !tbaa !2474
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11710, !ctir !1146
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11710, !tbaa !11599, !ctir !149
  %cmp8 = icmp eq i64 %18, %20, !dbg !11711
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11712

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11713
  br label %return, !dbg !11713

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11714
  br label %return, !dbg !11714

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11715
  ret i1 %21, !dbg !11715
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #0 !dbg !11716 !ctir !1186 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1188
  %n_entries = alloca i64, align 8, !ctir !149
  %n_buckets = alloca i64, align 8, !ctir !149
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %max_bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11719, metadata !DIExpression()), !dbg !11720
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11721, metadata !DIExpression()), !dbg !11722
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11723, !tbaa !2474
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #16, !dbg !11724
  store i64 %call, i64* %n_entries, align 8, !dbg !11722, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11725, metadata !DIExpression()), !dbg !11726
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11727, !tbaa !2474
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #16, !dbg !11728
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11726, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11729, metadata !DIExpression()), !dbg !11730
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11731, !tbaa !2474
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #16, !dbg !11732
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11730, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11733, metadata !DIExpression()), !dbg !11734
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11735, !tbaa !2474
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #16, !dbg !11736
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11734, !tbaa !2611
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11737, !tbaa !2474
  %5 = load i64, i64* %n_entries, align 8, !dbg !11738, !tbaa !2611
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.306, i64 0, i64 0), i64 %5), !dbg !11739
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11740, !tbaa !2474
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11741, !tbaa !2611
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.307, i64 0, i64 0), i64 %7), !dbg !11742
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11743, !tbaa !2474
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11744, !tbaa !2611
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11745, !tbaa !2611
  %conv = uitofp i64 %10 to double, !dbg !11745
  %mul = fmul double 1.000000e+02, %conv, !dbg !11746
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11747, !tbaa !2611
  %conv6 = uitofp i64 %11 to double, !dbg !11747
  %div = fdiv double %mul, %conv6, !dbg !11748
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.308, i64 0, i64 0), i64 %9, double %div), !dbg !11749
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11750, !tbaa !2474
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11751, !tbaa !2611
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.309, i64 0, i64 0), i64 %13), !dbg !11752
  ret void, !dbg !11753
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11754 !ctir !1229 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %entry.addr = alloca i8*, align 8, !ctir !175
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1158
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11755, metadata !DIExpression()), !dbg !11756
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11759, metadata !DIExpression()), !dbg !11760
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11761, !tbaa !2474
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11762, !tbaa !2474
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11763
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11760, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11764, metadata !DIExpression()), !dbg !11765
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11766, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11768, !ctir !1159
  %3 = load i8*, i8** %data, align 8, !dbg !11768, !tbaa !11625, !ctir !167
  %cmp = icmp eq i8* %3, null, !dbg !11769
  br i1 %cmp, label %if.then, label %if.end, !dbg !11770

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11771
  br label %return, !dbg !11771

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11772, !tbaa !2474
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11774, !tbaa !2474
  br label %for.cond, !dbg !11775

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11776, !tbaa !2474
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11778
  br i1 %tobool, label %for.body, label %for.end, !dbg !11778

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11779, !tbaa !2474
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11781, !tbaa !2474
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11782, !ctir !1159
  %8 = load i8*, i8** %data2, align 8, !dbg !11782, !tbaa !11625, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !11783
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11784

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11785, !tbaa !2474
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11786, !ctir !1146
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11786, !tbaa !11787, !ctir !1179
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11788, !tbaa !2474
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11789, !tbaa !2474
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11790, !ctir !1159
  %13 = load i8*, i8** %data4, align 8, !dbg !11790, !tbaa !11625, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11785
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11791

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11792, !tbaa !2474
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11793, !ctir !1159
  %15 = load i8*, i8** %data7, align 8, !dbg !11793, !tbaa !11625, !ctir !167
  store i8* %15, i8** %retval, align 8, !dbg !11794
  br label %return, !dbg !11794

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11795

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11796, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11797, !ctir !1159
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11797, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11798, !tbaa !2474
  br label %for.cond, !dbg !11799, !llvm.loop !11800

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11802
  br label %return, !dbg !11802

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11803
  ret i8* %18, !dbg !11803
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #0 !dbg !11804 !ctir !1257 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %key.addr = alloca i8*, align 8, !ctir !175
  %n = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11805, metadata !DIExpression()), !dbg !11806
  store i8* %key, i8** %key.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11807, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11809, metadata !DIExpression()), !dbg !11810
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11811, !tbaa !2474
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11812, !ctir !1146
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11812, !tbaa !11813, !ctir !1176
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11814, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11815, !tbaa !2474
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11816, !ctir !1146
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11816, !tbaa !11584, !ctir !149
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11811
  store i64 %call, i64* %n, align 8, !dbg !11810, !tbaa !2611
  %5 = load i64, i64* %n, align 8, !dbg !11817, !tbaa !2611
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11819, !tbaa !2474
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11820, !ctir !1146
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11820, !tbaa !11584, !ctir !149
  %cmp = icmp ult i64 %5, %7, !dbg !11821
  br i1 %cmp, label %if.end, label %if.then, !dbg !11822

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !11823
  unreachable, !dbg !11823

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11824, !tbaa !2474
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11825, !ctir !1146
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11825, !tbaa !11611, !ctir !1152
  %10 = load i64, i64* %n, align 8, !dbg !11826, !tbaa !2611
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11827
  ret %struct.hash_entry* %add.ptr, !dbg !11828
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11829 !ctir !1231 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11830, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11832, metadata !DIExpression()), !dbg !11833
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11834, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11836, !ctir !1146
  %1 = load i64, i64* %n_entries, align 8, !dbg !11836, !tbaa !11599, !ctir !149
  %cmp = icmp eq i64 %1, 0, !dbg !11837
  br i1 %cmp, label %if.then, label %if.end, !dbg !11838

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11839
  br label %return, !dbg !11839

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11840, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11842, !ctir !1146
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11842, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11843, !tbaa !2474
  br label %for.cond, !dbg !11844

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11845, !tbaa !2474
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11848, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11849, !ctir !1146
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11849, !tbaa !11618, !ctir !1158
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11850
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11851

if.then3:                                         ; preds = %for.cond
  call void @abort() #15, !dbg !11852
  unreachable, !dbg !11852

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11853, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11855, !ctir !1159
  %8 = load i8*, i8** %data, align 8, !dbg !11855, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %8, null, !dbg !11853
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11856

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11857, !tbaa !2474
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11858, !ctir !1159
  %10 = load i8*, i8** %data5, align 8, !dbg !11858, !tbaa !11625, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11859
  br label %return, !dbg !11859

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11860

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11861, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11861
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11861, !tbaa !2474
  br label %for.cond, !dbg !11862, !llvm.loop !11863

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11866
  ret i8* %12, !dbg !11866
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11867 !ctir !1229 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %entry.addr = alloca i8*, align 8, !ctir !175
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1158
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11870, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11872, metadata !DIExpression()), !dbg !11873
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11874, !tbaa !2474
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11875, !tbaa !2474
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11876
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11873, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11877, metadata !DIExpression()), !dbg !11878
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11879, !tbaa !2474
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11880, !tbaa !2474
  br label %do.body, !dbg !11881

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11882, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11885, !ctir !1159
  %4 = load i8*, i8** %data, align 8, !dbg !11885, !tbaa !11625, !ctir !167
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11886, !tbaa !2474
  %cmp = icmp eq i8* %4, %5, !dbg !11887
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11888

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11889, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11890, !ctir !1159
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11890, !tbaa !11637, !ctir !1152
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11889
  br i1 %tobool, label %if.then, label %if.end, !dbg !11891

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11892, !tbaa !2474
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11893, !ctir !1159
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11893, !tbaa !11637, !ctir !1152
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11894, !ctir !1153
  %10 = load i8*, i8** %data3, align 8, !dbg !11894, !tbaa !11625, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11895
  br label %return, !dbg !11895

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11896, !tbaa !2474
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11897, !ctir !1159
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11897, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11898, !tbaa !2474
  br label %do.cond, !dbg !11899

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11900, !tbaa !2474
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11901
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11899, !llvm.loop !11902

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11904

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11905, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11905
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11905, !tbaa !2474
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11906, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11907, !ctir !1146
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11907, !tbaa !11618, !ctir !1158
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11908
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11904

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11909, !tbaa !2474
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11911, !ctir !1159
  %18 = load i8*, i8** %data7, align 8, !dbg !11911, !tbaa !11625, !ctir !167
  %tobool8 = icmp ne i8* %18, null, !dbg !11909
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11912

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11913, !tbaa !2474
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11914, !ctir !1159
  %20 = load i8*, i8** %data10, align 8, !dbg !11914, !tbaa !11625, !ctir !167
  store i8* %20, i8** %retval, align 8, !dbg !11915
  br label %return, !dbg !11915

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11904, !llvm.loop !11916

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11918
  br label %return, !dbg !11918

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11919
  ret i8* %21, !dbg !11919
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #0 !dbg !11920 !ctir !1233 {
entry:
  %retval = alloca i64, align 8, !ctir !149
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %buffer.addr = alloca i8**, align 8, !ctir !650
  %buffer_size.addr = alloca i64, align 8, !ctir !149
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1158
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11923, metadata !DIExpression()), !dbg !11924
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11925, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11927, metadata !DIExpression()), !dbg !11928
  store i64 0, i64* %counter, align 8, !dbg !11928, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11929, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11931, metadata !DIExpression()), !dbg !11932
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11933, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11935, !ctir !1146
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11935, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11936, !tbaa !2474
  br label %for.cond, !dbg !11937

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11938, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11940, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11941, !ctir !1146
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11941, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11942
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11943

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11944, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11947, !ctir !1159
  %6 = load i8*, i8** %data, align 8, !dbg !11947, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11944
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11948

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11949, !tbaa !2474
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11952, !tbaa !2474
  br label %for.cond2, !dbg !11953

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11954, !tbaa !2474
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11956
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11956

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11957, !tbaa !2611
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11960, !tbaa !2611
  %cmp5 = icmp uge i64 %9, %10, !dbg !11961
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11962

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11963, !tbaa !2611
  store i64 %11, i64* %retval, align 8, !dbg !11964
  br label %return, !dbg !11964

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11965, !tbaa !2474
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11966, !ctir !1159
  %13 = load i8*, i8** %data7, align 8, !dbg !11966, !tbaa !11625, !ctir !167
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11967, !tbaa !2474
  %15 = load i64, i64* %counter, align 8, !dbg !11968, !tbaa !2611
  %inc = add i64 %15, 1, !dbg !11968
  store i64 %inc, i64* %counter, align 8, !dbg !11968, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11967, !ctir !650
  store i8* %13, i8** %arrayidx, align 8, !dbg !11969, !tbaa !2474
  br label %for.inc, !dbg !11970

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11971, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11972, !ctir !1159
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11972, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11973, !tbaa !2474
  br label %for.cond2, !dbg !11974, !llvm.loop !11975

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11977

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11978

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11979, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11979
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11979, !tbaa !2474
  br label %for.cond, !dbg !11980, !llvm.loop !11981

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11983, !tbaa !2611
  store i64 %19, i64* %retval, align 8, !dbg !11984
  br label %return, !dbg !11984

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11985
  ret i64 %20, !dbg !11985
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #0 !dbg !11986 !ctir !1235 {
entry:
  %retval = alloca i64, align 8, !ctir !149
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1145
  %processor.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !1237
  %processor_data.addr = alloca i8*, align 8, !ctir !167
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1158
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1158
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11987, metadata !DIExpression()), !dbg !11988
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11989, metadata !DIExpression()), !dbg !11990
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11991, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11993, metadata !DIExpression()), !dbg !11994
  store i64 0, i64* %counter, align 8, !dbg !11994, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11995, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11997, metadata !DIExpression()), !dbg !11998
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11999, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12001, !ctir !1146
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12001, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12002, !tbaa !2474
  br label %for.cond, !dbg !12003

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12004, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12006, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12007, !ctir !1146
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12007, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12008
  br i1 %cmp, label %for.body, label %for.end9, !dbg !12009

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12010, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12013, !ctir !1159
  %6 = load i8*, i8** %data, align 8, !dbg !12013, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12010
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12014

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12015, !tbaa !2474
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12018, !tbaa !2474
  br label %for.cond2, !dbg !12019

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12020, !tbaa !2474
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12022
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12022

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !12023, !tbaa !2474
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12026, !tbaa !2474
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12027, !ctir !1159
  %11 = load i8*, i8** %data5, align 8, !dbg !12027, !tbaa !11625, !ctir !167
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !12028, !tbaa !2474
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !12023
  br i1 %call, label %if.end, label %if.then6, !dbg !12029

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !12030, !tbaa !2611
  store i64 %13, i64* %retval, align 8, !dbg !12031
  br label %return, !dbg !12031

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !12032, !tbaa !2611
  %inc = add i64 %14, 1, !dbg !12032
  store i64 %inc, i64* %counter, align 8, !dbg !12032, !tbaa !2611
  br label %for.inc, !dbg !12033

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12034, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12035, !ctir !1159
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12035, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12036, !tbaa !2474
  br label %for.cond2, !dbg !12037, !llvm.loop !12038

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12040

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12041

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12042, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12042
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12042, !tbaa !2474
  br label %for.cond, !dbg !12043, !llvm.loop !12044

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12046, !tbaa !2611
  store i64 %18, i64* %retval, align 8, !dbg !12047
  br label %return, !dbg !12047

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12048
  ret i64 %19, !dbg !12048
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12049 !ctir !1241 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !146
  %n_buckets.addr = alloca i64, align 8, !ctir !149
  %value = alloca i64, align 8, !ctir !149
  %ch = alloca i8, align 1, !ctir !579
  store i8* %string, i8** %string.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12050, metadata !DIExpression()), !dbg !12051
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12052, metadata !DIExpression()), !dbg !12053
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12054, metadata !DIExpression()), !dbg !12055
  store i64 0, i64* %value, align 8, !dbg !12055, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12056, metadata !DIExpression()), !dbg !12057
  br label %for.cond, !dbg !12058

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12059, !tbaa !2474
  %1 = load i8, i8* %0, align 1, !dbg !12062, !tbaa !2529, !ctir !147
  store i8 %1, i8* %ch, align 1, !dbg !12063, !tbaa !2529
  %tobool = icmp ne i8 %1, 0, !dbg !12064
  br i1 %tobool, label %for.body, label %for.end, !dbg !12064

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12065, !tbaa !2611
  %mul = mul i64 %2, 31, !dbg !12066
  %3 = load i8, i8* %ch, align 1, !dbg !12067, !tbaa !2529
  %conv = zext i8 %3 to i64, !dbg !12067
  %add = add i64 %mul, %conv, !dbg !12068
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12069, !tbaa !2611
  %rem = urem i64 %add, %4, !dbg !12070
  store i64 %rem, i64* %value, align 8, !dbg !12071, !tbaa !2611
  br label %for.inc, !dbg !12072

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12073, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12073
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12073, !tbaa !2474
  br label %for.cond, !dbg !12074, !llvm.loop !12075

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12077, !tbaa !2611
  ret i64 %6, !dbg !12078
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #0 !dbg !12079 !ctir !1243 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !1245
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12080, metadata !DIExpression()), !dbg !12081
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12082, !tbaa !2474
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12083, !tbaa.struct !12084
  ret void, !dbg !12087
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #0 !dbg !12088 !ctir !1246 {
entry:
  %retval = alloca %struct.hash_table*, align 8, !ctir !1248
  %candidate.addr = alloca i64, align 8, !ctir !149
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !1164
  %hasher.addr = alloca i64 (i8*, i64)*, align 8, !ctir !1176
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !1179
  %data_freer.addr = alloca void (i8*)*, align 8, !ctir !1182
  %table = alloca %struct.hash_table*, align 8, !ctir !1248
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12089, metadata !DIExpression()), !dbg !12090
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12091, metadata !DIExpression()), !dbg !12092
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12093, metadata !DIExpression()), !dbg !12094
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12095, metadata !DIExpression()), !dbg !12096
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12097, metadata !DIExpression()), !dbg !12098
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12099, metadata !DIExpression()), !dbg !12100
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12101, !tbaa !2474
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12103
  br i1 %cmp, label %if.then, label %if.end, !dbg !12104

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12105, !tbaa !2474
  br label %if.end, !dbg !12106

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12107, !tbaa !2474
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12109
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12110

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12111, !tbaa !2474
  br label %if.end3, !dbg !12112

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #13, !dbg !12113
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12113
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12114, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12115, !tbaa !2474
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12117
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12118

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12119
  br label %return, !dbg !12119

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12120, !tbaa !2474
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12120
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12122

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12123, !tbaa !2474
  br label %if.end8, !dbg !12124

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12125, !tbaa !2474
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12126, !tbaa !2474
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12127, !ctir !1147
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12128, !tbaa !12129, !ctir !1164
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12130, !tbaa !2474
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12132
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12133

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12134

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12136, !tbaa !2611
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12137, !tbaa !2474
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #16, !dbg !12138
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12139, !tbaa !2474
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12140, !ctir !1147
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12141, !tbaa !11584, !ctir !149
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12142, !tbaa !2474
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12144, !ctir !1147
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12144, !tbaa !11584, !ctir !149
  %tobool15 = icmp ne i64 %12, 0, !dbg !12142
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12145

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12146

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12147, !tbaa !2474
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12148, !ctir !1147
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12148, !tbaa !11584, !ctir !149
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #13, !dbg !12149
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12149
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12150, !tbaa !2474
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12151, !ctir !1147
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12152, !tbaa !11611, !ctir !1152
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12153, !tbaa !2474
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12155, !ctir !1147
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12155, !tbaa !11611, !ctir !1152
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12156
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12157

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12158

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12159, !tbaa !2474
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12160, !ctir !1147
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12160, !tbaa !11611, !ctir !1152
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12161, !tbaa !2474
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12162, !ctir !1147
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12162, !tbaa !11584, !ctir !149
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12163
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12164, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12165, !ctir !1147
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12166, !tbaa !11618, !ctir !1158
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12167, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12168, !ctir !1147
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12169, !tbaa !11592, !ctir !149
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12170, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12171, !ctir !1147
  store i64 0, i64* %n_entries, align 8, !dbg !12172, !tbaa !11599, !ctir !149
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12173, !tbaa !2474
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12174, !tbaa !2474
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12175, !ctir !1147
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12176, !tbaa !11813, !ctir !1176
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12177, !tbaa !2474
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12178, !tbaa !2474
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12179, !ctir !1147
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12180, !tbaa !11787, !ctir !1179
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12181, !tbaa !2474
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12182, !tbaa !2474
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12183, !ctir !1147
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12184, !tbaa !12185, !ctir !1182
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12186, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12187, !ctir !1147
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12188, !tbaa !12189, !ctir !1152
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12190, !tbaa !2474
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12191
  br label %return, !dbg !12191

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12192), !dbg !12193
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12194, !tbaa !2474
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12194
  call void @free(i8* %35) #13, !dbg !12195
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12196
  br label %return, !dbg !12196

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12197
  ret %struct.hash_table* %36, !dbg !12197
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #0 !dbg !12198 !ctir !328 {
entry:
  %data.addr = alloca i8*, align 8, !ctir !175
  %n.addr = alloca i64, align 8, !ctir !149
  %val = alloca i64, align 8, !ctir !149
  store i8* %data, i8** %data.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12199, metadata !DIExpression()), !dbg !12200
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12201, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12203, metadata !DIExpression()), !dbg !12204
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12205, !tbaa !2474
  %1 = ptrtoint i8* %0 to i64, !dbg !12206
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12207
  store i64 %call, i64* %val, align 8, !dbg !12204, !tbaa !2611
  %2 = load i64, i64* %val, align 8, !dbg !12208, !tbaa !2611
  %3 = load i64, i64* %n.addr, align 8, !dbg !12209, !tbaa !2611
  %rem = urem i64 %2, %3, !dbg !12210
  ret i64 %rem, !dbg !12211
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #0 !dbg !12212 !ctir !332 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !175
  %b.addr = alloca i8*, align 8, !ctir !175
  store i8* %a, i8** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12213, metadata !DIExpression()), !dbg !12214
  store i8* %b, i8** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12215, metadata !DIExpression()), !dbg !12216
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12217, !tbaa !2474
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12218, !tbaa !2474
  %cmp = icmp eq i8* %0, %1, !dbg !12219
  ret i1 %cmp, !dbg !12220
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #0 !dbg !12221 !ctir !1259 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !1164
  %epsilon = alloca float, align 4, !ctir !1170
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12222, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12224, metadata !DIExpression()), !dbg !12225
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12226, !tbaa !2474
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12227, !ctir !1147
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12227, !tbaa !12129, !ctir !1164
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12225, !tbaa !2474
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12228, metadata !DIExpression()), !dbg !12229
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12230, !tbaa !2474
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12232
  br i1 %cmp, label %if.then, label %if.end, !dbg !12233

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12234
  br label %return, !dbg !12234

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12235, !tbaa !12085
  %3 = load float, float* %epsilon, align 4, !dbg !12236, !tbaa !12085
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12238, !tbaa !2474
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12239, !ctir !1165
  %5 = load float, float* %growth_threshold, align 4, !dbg !12239, !tbaa !12240, !ctir !1170
  %cmp2 = fcmp olt float %3, %5, !dbg !12242
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12243

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12244, !tbaa !2474
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12245, !ctir !1165
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12245, !tbaa !12240, !ctir !1170
  %8 = load float, float* %epsilon, align 4, !dbg !12246, !tbaa !12085
  %sub = fsub float 1.000000e+00, %8, !dbg !12247
  %cmp4 = fcmp olt float %7, %sub, !dbg !12248
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12249

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12250, !tbaa !12085
  %add = fadd float 1.000000e+00, %9, !dbg !12251
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12252, !tbaa !2474
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12253, !ctir !1165
  %11 = load float, float* %growth_factor, align 4, !dbg !12253, !tbaa !12254, !ctir !1170
  %cmp6 = fcmp olt float %add, %11, !dbg !12255
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12256

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12257, !tbaa !2474
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12258, !ctir !1165
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12258, !tbaa !12259, !ctir !1170
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12260
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12261

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12262, !tbaa !2474
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12263, !ctir !1165
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12263, !tbaa !12259, !ctir !1170
  %16 = load float, float* %epsilon, align 4, !dbg !12264, !tbaa !12085
  %add11 = fadd float %15, %16, !dbg !12265
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12266, !tbaa !2474
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12267, !ctir !1165
  %18 = load float, float* %shrink_factor, align 4, !dbg !12267, !tbaa !12268, !ctir !1170
  %cmp12 = fcmp olt float %add11, %18, !dbg !12269
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12270

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12271, !tbaa !2474
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12272, !ctir !1165
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12272, !tbaa !12268, !ctir !1170
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12273
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12274

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12275, !tbaa !2474
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12276, !ctir !1165
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12276, !tbaa !12259, !ctir !1170
  %23 = load float, float* %epsilon, align 4, !dbg !12277, !tbaa !12085
  %add18 = fadd float %22, %23, !dbg !12278
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12279, !tbaa !2474
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12280, !ctir !1165
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12280, !tbaa !12240, !ctir !1170
  %cmp20 = fcmp olt float %add18, %25, !dbg !12281
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12282

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12283
  br label %return, !dbg !12283

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12284, !tbaa !2474
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12285, !ctir !1147
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12286, !tbaa !12129, !ctir !1164
  store i1 false, i1* %retval, align 1, !dbg !12287
  br label %return, !dbg !12287

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12288
  ret i1 %27, !dbg !12288
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12289 !ctir !1261 {
entry:
  %retval = alloca i64, align 8, !ctir !149
  %candidate.addr = alloca i64, align 8, !ctir !149
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !1164
  %new_candidate = alloca float, align 4, !ctir !1170
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12290, metadata !DIExpression()), !dbg !12291
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12292, metadata !DIExpression()), !dbg !12293
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12294, !tbaa !2474
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12296, !ctir !1165
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12296, !tbaa !12297
  %tobool = trunc i8 %1 to i1, !dbg !12296, !ctir !141
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12298

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12299, metadata !DIExpression()), !dbg !12301
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12302, !tbaa !2611
  %conv = uitofp i64 %2 to float, !dbg !12302
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12303, !tbaa !2474
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12304, !ctir !1165
  %4 = load float, float* %growth_threshold, align 4, !dbg !12304, !tbaa !12240, !ctir !1170
  %div = fdiv float %conv, %4, !dbg !12305
  store float %div, float* %new_candidate, align 4, !dbg !12301, !tbaa !12085
  %5 = load float, float* %new_candidate, align 4, !dbg !12306, !tbaa !12085
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12308
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12309

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12310
  br label %return, !dbg !12310

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12311, !tbaa !12085
  %conv3 = fptoui float %6 to i64, !dbg !12311
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12312, !tbaa !2611
  br label %if.end4, !dbg !12313

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12314, !tbaa !2611
  %call = call i64 @next_prime(i64 %7) #17, !dbg !12315
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12316, !tbaa !2611
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12317, !tbaa !2611
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12317
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12319

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12320
  br label %return, !dbg !12320

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12321, !tbaa !2611
  store i64 %9, i64* %retval, align 8, !dbg !12322
  br label %return, !dbg !12322

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12323
  ret i64 %10, !dbg !12323
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #12 !dbg !12324 !ctir !1263 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !149
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12327, !tbaa !2611
  %cmp = icmp ult i64 %0, 10, !dbg !12329
  br i1 %cmp, label %if.then, label %if.end, !dbg !12330

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12331, !tbaa !2611
  br label %if.end, !dbg !12332

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12333, !tbaa !2611
  %or = or i64 %1, 1, !dbg !12333
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12333, !tbaa !2611
  br label %while.cond, !dbg !12334

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12335, !tbaa !2611
  %cmp1 = icmp ne i64 -1, %2, !dbg !12336
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12337

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12338, !tbaa !2611
  %call = call zeroext i1 @is_prime(i64 %3) #17, !dbg !12339
  %lnot = xor i1 %call, true, !dbg !12340
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12341
  br i1 %4, label %while.body, label %while.end, !dbg !12334

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12342, !tbaa !2611
  %add = add i64 %5, 2, !dbg !12342
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12342, !tbaa !2611
  br label %while.cond, !dbg !12334, !llvm.loop !12343

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12345, !tbaa !2611
  ret i64 %6, !dbg !12346
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #12 !dbg !12347 !ctir !1265 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !149
  %divisor = alloca i64, align 8, !ctir !149
  %square = alloca i64, align 8, !ctir !149
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12348, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12350, metadata !DIExpression()), !dbg !12351
  store i64 3, i64* %divisor, align 8, !dbg !12351, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12352, metadata !DIExpression()), !dbg !12353
  %0 = load i64, i64* %divisor, align 8, !dbg !12354, !tbaa !2611
  %1 = load i64, i64* %divisor, align 8, !dbg !12355, !tbaa !2611
  %mul = mul i64 %0, %1, !dbg !12356
  store i64 %mul, i64* %square, align 8, !dbg !12353, !tbaa !2611
  br label %while.cond, !dbg !12357

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12358, !tbaa !2611
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12359, !tbaa !2611
  %cmp = icmp ult i64 %2, %3, !dbg !12360
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12361

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12362, !tbaa !2611
  %5 = load i64, i64* %divisor, align 8, !dbg !12363, !tbaa !2611
  %rem = urem i64 %4, %5, !dbg !12364
  %tobool = icmp ne i64 %rem, 0, !dbg !12361
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12365
  br i1 %6, label %while.body, label %while.end, !dbg !12357

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12366, !tbaa !2611
  %inc = add i64 %7, 1, !dbg !12366
  store i64 %inc, i64* %divisor, align 8, !dbg !12366, !tbaa !2611
  %8 = load i64, i64* %divisor, align 8, !dbg !12368, !tbaa !2611
  %mul1 = mul i64 4, %8, !dbg !12369
  %9 = load i64, i64* %square, align 8, !dbg !12370, !tbaa !2611
  %add = add i64 %9, %mul1, !dbg !12370
  store i64 %add, i64* %square, align 8, !dbg !12370, !tbaa !2611
  %10 = load i64, i64* %divisor, align 8, !dbg !12371, !tbaa !2611
  %inc2 = add i64 %10, 1, !dbg !12371
  store i64 %inc2, i64* %divisor, align 8, !dbg !12371, !tbaa !2611
  br label %while.cond, !dbg !12357, !llvm.loop !12372

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12374, !tbaa !2611
  %12 = load i64, i64* %divisor, align 8, !dbg !12375, !tbaa !2611
  %rem3 = urem i64 %11, %12, !dbg !12376
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12374
  %13 = zext i1 %tobool4 to i64, !dbg !12374
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12374
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12377
  ret i1 %tobool5, !dbg !12378
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #0 !dbg !12379 !ctir !1249 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1152
  %next = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12380, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12382, metadata !DIExpression()), !dbg !12383
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12384, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12386, !ctir !1147
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12386, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12387, !tbaa !2474
  br label %for.cond, !dbg !12388

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12389, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12391, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12392, !ctir !1147
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12392, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12393
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12394

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12395, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12398, !ctir !1153
  %6 = load i8*, i8** %data, align 8, !dbg !12398, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12395
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12399

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12400, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12403, metadata !DIExpression()), !dbg !12404
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12405, !tbaa !2474
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12407, !ctir !1153
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12407, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12408, !tbaa !2474
  br label %for.cond3, !dbg !12409

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12410, !tbaa !2474
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12412
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12412

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12413, !tbaa !2474
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12416, !ctir !1147
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12416, !tbaa !12185, !ctir !1182
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12413
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12417

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12418, !tbaa !2474
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12419, !ctir !1147
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12419, !tbaa !12185, !ctir !1182
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12420, !tbaa !2474
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12421, !ctir !1153
  %15 = load i8*, i8** %data9, align 8, !dbg !12421, !tbaa !11625, !ctir !167
  call void %13(i8* %15), !dbg !12418
  br label %if.end, !dbg !12418

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12422, !tbaa !2474
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12423, !ctir !1153
  store i8* null, i8** %data10, align 8, !dbg !12424, !tbaa !11625, !ctir !167
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12425, !tbaa !2474
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12426, !ctir !1153
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12426, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12427, !tbaa !2474
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12428, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12429, !ctir !1147
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12429, !tbaa !12189, !ctir !1152
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12430, !tbaa !2474
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12431, !ctir !1153
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12432, !tbaa !11637, !ctir !1152
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12433, !tbaa !2474
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12434, !tbaa !2474
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12435, !ctir !1147
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12436, !tbaa !12189, !ctir !1152
  br label %for.inc, !dbg !12437

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12438, !tbaa !2474
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12439, !tbaa !2474
  br label %for.cond3, !dbg !12440, !llvm.loop !12441

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12443, !tbaa !2474
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12445, !ctir !1147
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12445, !tbaa !12185, !ctir !1182
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12443
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12446

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12447, !tbaa !2474
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12448, !ctir !1147
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12448, !tbaa !12185, !ctir !1182
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12449, !tbaa !2474
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12450, !ctir !1153
  %30 = load i8*, i8** %data18, align 8, !dbg !12450, !tbaa !11625, !ctir !167
  call void %28(i8* %30), !dbg !12447
  br label %if.end19, !dbg !12447

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12451, !tbaa !2474
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12452, !ctir !1153
  store i8* null, i8** %data20, align 8, !dbg !12453, !tbaa !11625, !ctir !167
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12454, !tbaa !2474
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12455, !ctir !1153
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12456, !tbaa !11637, !ctir !1152
  br label %if.end22, !dbg !12457

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12458

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12459, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12459
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12459, !tbaa !2474
  br label %for.cond, !dbg !12460, !llvm.loop !12461

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12463, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12464, !ctir !1147
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12465, !tbaa !11592, !ctir !149
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12466, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12467, !ctir !1147
  store i64 0, i64* %n_entries, align 8, !dbg !12468, !tbaa !11599, !ctir !149
  ret void, !dbg !12469
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #0 !dbg !12470 !ctir !1249 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1152
  %next = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12471, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12473, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12475, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12477, metadata !DIExpression()), !dbg !12478
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12479, !tbaa !2474
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12481, !ctir !1147
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12481, !tbaa !12185, !ctir !1182
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12479
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12482

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12483, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12484, !ctir !1147
  %3 = load i64, i64* %n_entries, align 8, !dbg !12484, !tbaa !11599, !ctir !149
  %tobool1 = icmp ne i64 %3, 0, !dbg !12483
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12485

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12486, !tbaa !2474
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12489, !ctir !1147
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12489, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12490, !tbaa !2474
  br label %for.cond, !dbg !12491

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12492, !tbaa !2474
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12494, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12495, !ctir !1147
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12495, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12496
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12497

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12498, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12501, !ctir !1153
  %10 = load i8*, i8** %data, align 8, !dbg !12501, !tbaa !11625, !ctir !167
  %tobool3 = icmp ne i8* %10, null, !dbg !12498
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12502

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12503, !tbaa !2474
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12506, !tbaa !2474
  br label %for.cond5, !dbg !12507

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12508, !tbaa !2474
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12510
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12510

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12511, !tbaa !2474
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12512, !ctir !1147
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12512, !tbaa !12185, !ctir !1182
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12513, !tbaa !2474
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12514, !ctir !1153
  %16 = load i8*, i8** %data9, align 8, !dbg !12514, !tbaa !11625, !ctir !167
  call void %14(i8* %16), !dbg !12511
  br label %for.inc, !dbg !12511

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12515, !tbaa !2474
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12516, !ctir !1153
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12516, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12517, !tbaa !2474
  br label %for.cond5, !dbg !12518, !llvm.loop !12519

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12521

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12522

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12523, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12523
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12523, !tbaa !2474
  br label %for.cond, !dbg !12524, !llvm.loop !12525

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12527

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12528, !tbaa !2474
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12530, !ctir !1147
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12530, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12531, !tbaa !2474
  br label %for.cond15, !dbg !12532

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12533, !tbaa !2474
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12535, !tbaa !2474
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12536, !ctir !1147
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12536, !tbaa !11618, !ctir !1158
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12537
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12538

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12539, !tbaa !2474
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12542, !ctir !1153
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12542, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12543, !tbaa !2474
  br label %for.cond20, !dbg !12544

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12545, !tbaa !2474
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12547
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12547

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12548, !tbaa !2474
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12550, !ctir !1153
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12550, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12551, !tbaa !2474
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12552, !tbaa !2474
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12552
  call void @free(i8* %31) #13, !dbg !12553
  br label %for.inc24, !dbg !12554

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12555, !tbaa !2474
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12556, !tbaa !2474
  br label %for.cond20, !dbg !12557, !llvm.loop !12558

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12560

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12561, !tbaa !2474
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12561
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12561, !tbaa !2474
  br label %for.cond15, !dbg !12562, !llvm.loop !12563

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12565, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12567, !ctir !1147
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12567, !tbaa !12189, !ctir !1152
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12568, !tbaa !2474
  br label %for.cond29, !dbg !12569

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12570, !tbaa !2474
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12572
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12572

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12573, !tbaa !2474
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12575, !ctir !1153
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12575, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12576, !tbaa !2474
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12577, !tbaa !2474
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12577
  call void @free(i8* %40) #13, !dbg !12578
  br label %for.inc33, !dbg !12579

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12580, !tbaa !2474
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12581, !tbaa !2474
  br label %for.cond29, !dbg !12582, !llvm.loop !12583

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12585, !tbaa !2474
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12586, !ctir !1147
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12586, !tbaa !11611, !ctir !1152
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12585
  call void @free(i8* %44) #13, !dbg !12587
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12588, !tbaa !2474
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12588
  call void @free(i8* %46) #13, !dbg !12589
  ret void, !dbg !12590
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #0 !dbg !12591 !ctir !1251 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %candidate.addr = alloca i64, align 8, !ctir !149
  %storage = alloca %struct.hash_table, align 8, !ctir !1147
  %new_table = alloca %struct.hash_table*, align 8, !ctir !1248
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12592, metadata !DIExpression()), !dbg !12593
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12594, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12596, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12598, metadata !DIExpression()), !dbg !12599
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12600, metadata !DIExpression()), !dbg !12601
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12602, !tbaa !2611
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12603, !tbaa !2474
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12604, !ctir !1147
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12604, !tbaa !12129, !ctir !1164
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #16, !dbg !12605
  store i64 %call, i64* %new_size, align 8, !dbg !12601, !tbaa !2611
  %3 = load i64, i64* %new_size, align 8, !dbg !12606, !tbaa !2611
  %tobool = icmp ne i64 %3, 0, !dbg !12606
  br i1 %tobool, label %if.end, label %if.then, !dbg !12608

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12609
  br label %return, !dbg !12609

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12610, !tbaa !2611
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12612, !tbaa !2474
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12613, !ctir !1147
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12613, !tbaa !11584, !ctir !149
  %cmp = icmp eq i64 %4, %6, !dbg !12614
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12615

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12616
  br label %return, !dbg !12616

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12617, !tbaa !2474
  %7 = load i64, i64* %new_size, align 8, !dbg !12618, !tbaa !2611
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #13, !dbg !12619
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12619
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12620, !tbaa !2474
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12621, !ctir !1147
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12622, !tbaa !11611, !ctir !1152
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12623, !tbaa !2474
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12625, !ctir !1147
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12625, !tbaa !11611, !ctir !1152
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12626
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12627

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12628
  br label %return, !dbg !12628

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12629, !tbaa !2611
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12630, !tbaa !2474
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12631, !ctir !1147
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12632, !tbaa !11584, !ctir !149
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12633, !tbaa !2474
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12634, !ctir !1147
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12634, !tbaa !11611, !ctir !1152
  %16 = load i64, i64* %new_size, align 8, !dbg !12635, !tbaa !2611
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12636
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12637, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12638, !ctir !1147
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12639, !tbaa !11618, !ctir !1158
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12640, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12641, !ctir !1147
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12642, !tbaa !11592, !ctir !149
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12643, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12644, !ctir !1147
  store i64 0, i64* %n_entries, align 8, !dbg !12645, !tbaa !11599, !ctir !149
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12646, !tbaa !2474
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12647, !ctir !1147
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12647, !tbaa !12129, !ctir !1164
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12648, !tbaa !2474
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12649, !ctir !1147
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12650, !tbaa !12129, !ctir !1164
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12651, !tbaa !2474
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12652, !ctir !1147
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12652, !tbaa !11813, !ctir !1176
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12653, !tbaa !2474
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12654, !ctir !1147
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12655, !tbaa !11813, !ctir !1176
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12656, !tbaa !2474
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12657, !ctir !1147
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12657, !tbaa !11787, !ctir !1179
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12658, !tbaa !2474
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12659, !ctir !1147
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12660, !tbaa !11787, !ctir !1179
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12661, !tbaa !2474
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12662, !ctir !1147
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12662, !tbaa !12185, !ctir !1182
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12663, !tbaa !2474
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12664, !ctir !1147
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12665, !tbaa !12185, !ctir !1182
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12666, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12667, !ctir !1147
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12667, !tbaa !12189, !ctir !1152
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12668, !tbaa !2474
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12669, !ctir !1147
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12670, !tbaa !12189, !ctir !1152
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12671, !tbaa !2474
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12673, !tbaa !2474
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12674
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12675

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12676, !tbaa !2474
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12678, !ctir !1147
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12678, !tbaa !11611, !ctir !1152
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12676
  call void @free(i8* %39) #13, !dbg !12679
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12680, !tbaa !2474
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12681, !ctir !1147
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12681, !tbaa !11611, !ctir !1152
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12682, !tbaa !2474
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12683, !ctir !1147
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12684, !tbaa !11611, !ctir !1152
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12685, !tbaa !2474
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12686, !ctir !1147
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12686, !tbaa !11618, !ctir !1158
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12687, !tbaa !2474
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12688, !ctir !1147
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12689, !tbaa !11618, !ctir !1158
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12690, !tbaa !2474
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12691, !ctir !1147
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12691, !tbaa !11584, !ctir !149
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12692, !tbaa !2474
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12693, !ctir !1147
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12694, !tbaa !11584, !ctir !149
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12695, !tbaa !2474
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12696, !ctir !1147
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12696, !tbaa !11592, !ctir !149
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12697, !tbaa !2474
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12698, !ctir !1147
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12699, !tbaa !11592, !ctir !149
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12700, !tbaa !2474
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12701, !ctir !1147
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12701, !tbaa !12189, !ctir !1152
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12702, !tbaa !2474
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12703, !ctir !1147
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12704, !tbaa !12189, !ctir !1152
  store i1 true, i1* %retval, align 1, !dbg !12705
  br label %return, !dbg !12705

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12706, !tbaa !2474
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12707, !ctir !1147
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12707, !tbaa !12189, !ctir !1152
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12708, !tbaa !2474
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12709, !ctir !1147
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12710, !tbaa !12189, !ctir !1152
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12711, !tbaa !2474
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12713, !tbaa !2474
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12714
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12715

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12716, !tbaa !2474
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12717, !tbaa !2474
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12718
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12719

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #15, !dbg !12720
  unreachable, !dbg !12720

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12721, !tbaa !2474
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12722, !ctir !1147
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12722, !tbaa !11611, !ctir !1152
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12721
  call void @free(i8* %64) #13, !dbg !12723
  store i1 false, i1* %retval, align 1, !dbg !12724
  br label %return, !dbg !12724

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12725
  ret i1 %65, !dbg !12725
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #0 !dbg !12726 !ctir !1267 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %dst.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %src.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %safe.addr = alloca i8, align 1, !ctir !141
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1152
  %next = alloca %struct.hash_entry*, align 8, !ctir !1152
  %data2 = alloca i8*, align 8, !ctir !167
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12727, metadata !DIExpression()), !dbg !12728
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12729, metadata !DIExpression()), !dbg !12730
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12731, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12733, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12735, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12737, metadata !DIExpression()), !dbg !12738
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12739, !tbaa !2474
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12741, !ctir !1147
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12741, !tbaa !11611, !ctir !1152
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12742, !tbaa !2474
  br label %for.cond, !dbg !12743

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12744, !tbaa !2474
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12746, !tbaa !2474
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12747, !ctir !1147
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12747, !tbaa !11618, !ctir !1158
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12748
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12749

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12750, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12752, !ctir !1153
  %6 = load i8*, i8** %data, align 8, !dbg !12752, !tbaa !11625, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12750
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12753

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12754, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12757, metadata !DIExpression()), !dbg !12758
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12759, !tbaa !2474
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12761, !ctir !1153
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12761, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12762, !tbaa !2474
  br label %for.cond4, !dbg !12763

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12764, !tbaa !2474
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12766
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12766

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12767, !tbaa !2474
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12769, !ctir !1153
  %11 = load i8*, i8** %data7, align 8, !dbg !12769, !tbaa !11625, !ctir !167
  store i8* %11, i8** %data2, align 8, !dbg !12770, !tbaa !2474
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12771, !tbaa !2474
  %13 = load i8*, i8** %data2, align 8, !dbg !12772, !tbaa !2474
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12773
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12774, !tbaa !2474
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12775, !tbaa !2474
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12776, !ctir !1153
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12776, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12777, !tbaa !2474
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12778, !tbaa !2474
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12780, !ctir !1153
  %17 = load i8*, i8** %data9, align 8, !dbg !12780, !tbaa !11625, !ctir !167
  %tobool10 = icmp ne i8* %17, null, !dbg !12778
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12781

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12782, !tbaa !2474
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12784, !ctir !1153
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12784, !tbaa !11637, !ctir !1152
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12785, !tbaa !2474
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12786, !ctir !1153
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12787, !tbaa !11637, !ctir !1152
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12788, !tbaa !2474
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12789, !tbaa !2474
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12790, !ctir !1153
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12791, !tbaa !11637, !ctir !1152
  br label %if.end, !dbg !12792

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12793, !tbaa !2474
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12795, !tbaa !2474
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12796, !ctir !1153
  store i8* %23, i8** %data15, align 8, !dbg !12797, !tbaa !11625, !ctir !167
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12798, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12799, !ctir !1147
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12800, !tbaa !11592, !ctir !149
  %inc = add i64 %26, 1, !dbg !12800
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12800, !tbaa !11592, !ctir !149
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12801, !tbaa !2474
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12802, !tbaa !2474
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12803
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12804

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12805, !tbaa !2474
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12806, !tbaa !2474
  br label %for.cond4, !dbg !12807, !llvm.loop !12808

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12810, !tbaa !2474
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12811, !ctir !1153
  %31 = load i8*, i8** %data16, align 8, !dbg !12811, !tbaa !11625, !ctir !167
  store i8* %31, i8** %data2, align 8, !dbg !12812, !tbaa !2474
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12813, !tbaa !2474
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12814, !ctir !1153
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12815, !tbaa !11637, !ctir !1152
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12816, !tbaa !2493
  %tobool18 = trunc i8 %33 to i1, !dbg !12816
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12818

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12819

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12820, !tbaa !2474
  %35 = load i8*, i8** %data2, align 8, !dbg !12821, !tbaa !2474
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12822
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12823, !tbaa !2474
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12824, !tbaa !2474
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12826, !ctir !1153
  %37 = load i8*, i8** %data22, align 8, !dbg !12826, !tbaa !11625, !ctir !167
  %tobool23 = icmp ne i8* %37, null, !dbg !12824
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12827

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12828, metadata !DIExpression()), !dbg !12830
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12831, !tbaa !2474
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12832
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12830, !tbaa !2474
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12833, !tbaa !2474
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12835
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12836

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12837
  br label %return, !dbg !12837

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12838, !tbaa !2474
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12839, !tbaa !2474
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12840, !ctir !1153
  store i8* %40, i8** %data29, align 8, !dbg !12841, !tbaa !11625, !ctir !167
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12842, !tbaa !2474
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12843, !ctir !1153
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12843, !tbaa !11637, !ctir !1152
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12844, !tbaa !2474
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12845, !ctir !1153
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12846, !tbaa !11637, !ctir !1152
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12847, !tbaa !2474
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12848, !tbaa !2474
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12849, !ctir !1153
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12850, !tbaa !11637, !ctir !1152
  br label %if.end37, !dbg !12851

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12852, !tbaa !2474
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12854, !tbaa !2474
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12855, !ctir !1153
  store i8* %47, i8** %data34, align 8, !dbg !12856, !tbaa !11625, !ctir !167
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12857, !tbaa !2474
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12858, !ctir !1147
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12859, !tbaa !11592, !ctir !149
  %inc36 = add i64 %50, 1, !dbg !12859
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12859, !tbaa !11592, !ctir !149
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12860, !tbaa !2474
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12861, !ctir !1153
  store i8* null, i8** %data38, align 8, !dbg !12862, !tbaa !11625, !ctir !167
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12863, !tbaa !2474
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12864, !ctir !1147
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12865, !tbaa !11592, !ctir !149
  %dec = add i64 %53, -1, !dbg !12865
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12865, !tbaa !11592, !ctir !149
  br label %if.end40, !dbg !12866

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12752

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12867, !tbaa !2474
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12867
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12867, !tbaa !2474
  br label %for.cond, !dbg !12868, !llvm.loop !12869

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12871
  br label %return, !dbg !12871

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12872
  ret i1 %55, !dbg !12872
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #0 !dbg !12873 !ctir !1269 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %entry.addr = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12874, metadata !DIExpression()), !dbg !12875
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12876, metadata !DIExpression()), !dbg !12877
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12878, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12879, !ctir !1153
  store i8* null, i8** %data, align 8, !dbg !12880, !tbaa !11625, !ctir !167
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12881, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12882, !ctir !1147
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12882, !tbaa !12189, !ctir !1152
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12883, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12884, !ctir !1153
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12885, !tbaa !11637, !ctir !1152
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12886, !tbaa !2474
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12887, !tbaa !2474
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12888, !ctir !1147
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12889, !tbaa !12189, !ctir !1152
  ret void, !dbg !12890
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #0 !dbg !12891 !ctir !1274 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %new = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12892, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12894, metadata !DIExpression()), !dbg !12895
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12896, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12898, !ctir !1147
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12898, !tbaa !12189, !ctir !1152
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12896
  br i1 %tobool, label %if.then, label %if.else, !dbg !12899

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12900, !tbaa !2474
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12902, !ctir !1147
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12902, !tbaa !12189, !ctir !1152
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12903, !tbaa !2474
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12904, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12905, !ctir !1153
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12905, !tbaa !11637, !ctir !1152
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12906, !tbaa !2474
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12907, !ctir !1147
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12908, !tbaa !12189, !ctir !1152
  br label %if.end, !dbg !12909

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #13, !dbg !12910
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12910
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12912, !tbaa !2474
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12913, !tbaa !2474
  ret %struct.hash_entry* %8, !dbg !12914
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #0 !dbg !12915 !ctir !1253 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %entry.addr = alloca i8*, align 8, !ctir !175
  %matched_ent.addr = alloca i8**, align 8, !ctir !181
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !1164
  %candidate = alloca float, align 4, !ctir !1170
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12916, metadata !DIExpression()), !dbg !12917
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12918, metadata !DIExpression()), !dbg !12919
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12920, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12922, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12924, metadata !DIExpression()), !dbg !12925
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12926, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !12926
  br i1 %tobool, label %if.end, label %if.then, !dbg !12928

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !12929
  unreachable, !dbg !12929

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12930, !tbaa !2474
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12932, !tbaa !2474
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12933
  store i8* %call, i8** %data, align 8, !dbg !12934, !tbaa !2474
  %cmp = icmp ne i8* %call, null, !dbg !12935
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12936

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12937, !tbaa !2474
  %tobool3 = icmp ne i8** %3, null, !dbg !12937
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12940

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12941, !tbaa !2474
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12942, !tbaa !2474
  store i8* %4, i8** %5, align 8, !dbg !12943, !tbaa !2474, !ctir !175
  br label %if.end5, !dbg !12944

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12945
  br label %return, !dbg !12945

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12946, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12948, !ctir !1147
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12948, !tbaa !11592, !ctir !149
  %conv = uitofp i64 %7 to float, !dbg !12946
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12949, !tbaa !2474
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12950, !ctir !1147
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12950, !tbaa !12129, !ctir !1164
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12951, !ctir !1165
  %10 = load float, float* %growth_threshold, align 4, !dbg !12951, !tbaa !12240, !ctir !1170
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12952, !tbaa !2474
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12953, !ctir !1147
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12953, !tbaa !11584, !ctir !149
  %conv7 = uitofp i64 %12 to float, !dbg !12952
  %mul = fmul float %10, %conv7, !dbg !12954
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12955
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12956

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12957, !tbaa !2474
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12959
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12960, !tbaa !2474
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12962, !ctir !1147
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12962, !tbaa !11592, !ctir !149
  %conv13 = uitofp i64 %15 to float, !dbg !12960
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12963, !tbaa !2474
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12964, !ctir !1147
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12964, !tbaa !12129, !ctir !1164
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12965, !ctir !1165
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12965, !tbaa !12240, !ctir !1170
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12966, !tbaa !2474
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12967, !ctir !1147
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12967, !tbaa !11584, !ctir !149
  %conv17 = uitofp i64 %20 to float, !dbg !12966
  %mul18 = fmul float %18, %conv17, !dbg !12968
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12969
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12970

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12971, metadata !DIExpression()), !dbg !12973
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12974, !tbaa !2474
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12975, !ctir !1147
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12975, !tbaa !12129, !ctir !1164
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12973, !tbaa !2474
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12976, metadata !DIExpression()), !dbg !12977
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12978, !tbaa !2474
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12979, !ctir !1165
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12979, !tbaa !12297
  %tobool24 = trunc i8 %24 to i1, !dbg !12979, !ctir !141
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12978

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12980, !tbaa !2474
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12981, !ctir !1147
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12981, !tbaa !11584, !ctir !149
  %conv27 = uitofp i64 %26 to float, !dbg !12980
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12982, !tbaa !2474
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12983, !ctir !1165
  %28 = load float, float* %growth_factor, align 4, !dbg !12983, !tbaa !12254, !ctir !1170
  %mul28 = fmul float %conv27, %28, !dbg !12984
  br label %cond.end, !dbg !12978

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12985, !tbaa !2474
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12986, !ctir !1147
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12986, !tbaa !11584, !ctir !149
  %conv30 = uitofp i64 %30 to float, !dbg !12985
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12987, !tbaa !2474
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12988, !ctir !1165
  %32 = load float, float* %growth_factor31, align 4, !dbg !12988, !tbaa !12254, !ctir !1170
  %mul32 = fmul float %conv30, %32, !dbg !12989
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12990, !tbaa !2474
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12991, !ctir !1165
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12991, !tbaa !12240, !ctir !1170
  %mul34 = fmul float %mul32, %34, !dbg !12992
  br label %cond.end, !dbg !12978

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12978
  store float %cond, float* %candidate, align 4, !dbg !12977, !tbaa !12085
  %35 = load float, float* %candidate, align 4, !dbg !12993, !tbaa !12085
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12995
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12996

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12997
  br label %return, !dbg !12997

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12998, !tbaa !2474
  %37 = load float, float* %candidate, align 4, !dbg !13000, !tbaa !12085
  %conv39 = fptoui float %37 to i64, !dbg !13000
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !13001
  br i1 %call40, label %if.end42, label %if.then41, !dbg !13002

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !13003
  br label %return, !dbg !13003

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13004, !tbaa !2474
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !13006, !tbaa !2474
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13007
  %cmp44 = icmp ne i8* %call43, null, !dbg !13008
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13009

if.then46:                                        ; preds = %if.end42
  call void @abort() #15, !dbg !13010
  unreachable, !dbg !13010

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !13011

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !13012

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13013, !tbaa !2474
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13015, !ctir !1153
  %41 = load i8*, i8** %data50, align 8, !dbg !13015, !tbaa !11625, !ctir !167
  %tobool51 = icmp ne i8* %41, null, !dbg !13013
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !13016

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !13017, metadata !DIExpression()), !dbg !13019
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13020, !tbaa !2474
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !13021
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !13019, !tbaa !2474
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13022, !tbaa !2474
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !13024
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13025

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !13026
  br label %return, !dbg !13026

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !13027, !tbaa !2474
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13028, !tbaa !2474
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !13029, !ctir !1153
  store i8* %44, i8** %data58, align 8, !dbg !13030, !tbaa !11625, !ctir !167
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13031, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13032, !ctir !1153
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13032, !tbaa !11637, !ctir !1152
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13033, !tbaa !2474
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13034, !ctir !1153
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13035, !tbaa !11637, !ctir !1152
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13036, !tbaa !2474
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13037, !tbaa !2474
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13038, !ctir !1153
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13039, !tbaa !11637, !ctir !1152
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13040, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13041, !ctir !1147
  %52 = load i64, i64* %n_entries, align 8, !dbg !13042, !tbaa !11599, !ctir !149
  %inc = add i64 %52, 1, !dbg !13042
  store i64 %inc, i64* %n_entries, align 8, !dbg !13042, !tbaa !11599, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !13043
  br label %return, !dbg !13043

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13044, !tbaa !2474
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13045, !tbaa !2474
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13046, !ctir !1153
  store i8* %53, i8** %data62, align 8, !dbg !13047, !tbaa !11625, !ctir !167
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13048, !tbaa !2474
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13049, !ctir !1147
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13050, !tbaa !11599, !ctir !149
  %inc64 = add i64 %56, 1, !dbg !13050
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13050, !tbaa !11599, !ctir !149
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13051, !tbaa !2474
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13052, !ctir !1147
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13053, !tbaa !11592, !ctir !149
  %inc66 = add i64 %58, 1, !dbg !13053
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13053, !tbaa !11592, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !13054
  br label %return, !dbg !13054

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13055
  ret i32 %59, !dbg !13055
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #0 !dbg !13056 !ctir !1271 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %entry.addr = alloca i8*, align 8, !ctir !175
  %bucket_head.addr = alloca %struct.hash_entry**, align 8, !ctir !1273
  %delete.addr = alloca i8, align 1, !ctir !141
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1152
  %data7 = alloca i8*, align 8, !ctir !167
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !1152
  %data29 = alloca i8*, align 8, !ctir !167
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13057, metadata !DIExpression()), !dbg !13058
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13059, metadata !DIExpression()), !dbg !13060
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13061, metadata !DIExpression()), !dbg !13062
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13065, metadata !DIExpression()), !dbg !13066
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13067, !tbaa !2474
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13068, !tbaa !2474
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13069
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13066, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13070, metadata !DIExpression()), !dbg !13071
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13072, !tbaa !2474
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13073, !tbaa !2474
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13074, !tbaa !2474, !ctir !1152
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13075, !tbaa !2474
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13077, !ctir !1153
  %5 = load i8*, i8** %data, align 8, !dbg !13077, !tbaa !11625, !ctir !167
  %cmp = icmp eq i8* %5, null, !dbg !13078
  br i1 %cmp, label %if.then, label %if.end, !dbg !13079

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13080
  br label %return, !dbg !13080

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13081, !tbaa !2474
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13083, !tbaa !2474
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13084, !ctir !1153
  %8 = load i8*, i8** %data2, align 8, !dbg !13084, !tbaa !11625, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !13085
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13086

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13087, !tbaa !2474
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13088, !ctir !1147
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13088, !tbaa !11787, !ctir !1179
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13089, !tbaa !2474
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13090, !tbaa !2474
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13091, !ctir !1153
  %13 = load i8*, i8** %data4, align 8, !dbg !13091, !tbaa !11625, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13087
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13092

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13093, metadata !DIExpression()), !dbg !13095
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13096, !tbaa !2474
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13097, !ctir !1153
  %15 = load i8*, i8** %data8, align 8, !dbg !13097, !tbaa !11625, !ctir !167
  store i8* %15, i8** %data7, align 8, !dbg !13095, !tbaa !2474
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13098, !tbaa !2493
  %tobool = trunc i8 %16 to i1, !dbg !13098
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13100

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13101, !tbaa !2474
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13104, !ctir !1153
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13104, !tbaa !11637, !ctir !1152
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13101
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13105

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13106, metadata !DIExpression()), !dbg !13108
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13109, !tbaa !2474
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13110, !ctir !1153
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13110, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13108, !tbaa !2474
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13111, !tbaa !2474
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13112, !tbaa !2474
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13113
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13113, !tbaa.struct !13114
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13115, !tbaa !2474
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13116, !tbaa !2474
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13117
  br label %if.end15, !dbg !13118

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13119, !tbaa !2474
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13121, !ctir !1153
  store i8* null, i8** %data14, align 8, !dbg !13122, !tbaa !11625, !ctir !167
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13123

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13124, !tbaa !2474
  store i8* %28, i8** %retval, align 8, !dbg !13125
  br label %return, !dbg !13125

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13126, !tbaa !2474
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13128, !tbaa !2474
  br label %for.cond, !dbg !13129

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13130, !tbaa !2474
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13132, !ctir !1153
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13132, !tbaa !11637, !ctir !1152
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13133
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13133

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13134, !tbaa !2474
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13137, !tbaa !2474
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13138, !ctir !1153
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13138, !tbaa !11637, !ctir !1152
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13139, !ctir !1153
  %35 = load i8*, i8** %data21, align 8, !dbg !13139, !tbaa !11625, !ctir !167
  %cmp22 = icmp eq i8* %32, %35, !dbg !13140
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13141

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13142, !tbaa !2474
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13143, !ctir !1147
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13143, !tbaa !11787, !ctir !1179
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13144, !tbaa !2474
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13145, !tbaa !2474
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13146, !ctir !1153
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13146, !tbaa !11637, !ctir !1152
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13147, !ctir !1153
  %41 = load i8*, i8** %data26, align 8, !dbg !13147, !tbaa !11625, !ctir !167
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13142
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13148

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13149, metadata !DIExpression()), !dbg !13151
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13152, !tbaa !2474
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13153, !ctir !1153
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13153, !tbaa !11637, !ctir !1152
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13154, !ctir !1153
  %44 = load i8*, i8** %data31, align 8, !dbg !13154, !tbaa !11625, !ctir !167
  store i8* %44, i8** %data29, align 8, !dbg !13151, !tbaa !2474
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13155, !tbaa !2493
  %tobool32 = trunc i8 %45 to i1, !dbg !13155
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13157

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13158, metadata !DIExpression()), !dbg !13160
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13161, !tbaa !2474
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13162, !ctir !1153
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13162, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13160, !tbaa !2474
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13163, !tbaa !2474
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13164, !ctir !1153
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13164, !tbaa !11637, !ctir !1152
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13165, !tbaa !2474
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13166, !ctir !1153
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13167, !tbaa !11637, !ctir !1152
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13168, !tbaa !2474
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13169, !tbaa !2474
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13170
  br label %if.end38, !dbg !13171

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13172, !tbaa !2474
  store i8* %53, i8** %retval, align 8, !dbg !13173
  br label %return, !dbg !13173

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13174

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13175, !tbaa !2474
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13176, !ctir !1153
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13176, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13177, !tbaa !2474
  br label %for.cond, !dbg !13178, !llvm.loop !13179

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13181
  br label %return, !dbg !13181

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13182
  ret i8* %56, !dbg !13182
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #0 !dbg !13183 !ctir !1255 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %entry.addr = alloca i8*, align 8, !ctir !175
  %matched_ent = alloca i8*, align 8, !ctir !175
  %err = alloca i32, align 4, !ctir !27
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13184, metadata !DIExpression()), !dbg !13185
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13186, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13188, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13190, metadata !DIExpression()), !dbg !13191
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13192, !tbaa !2474
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13193, !tbaa !2474
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13194
  store i32 %call, i32* %err, align 4, !dbg !13191, !tbaa !2468
  %2 = load i32, i32* %err, align 4, !dbg !13195, !tbaa !2468
  %cmp = icmp eq i32 %2, -1, !dbg !13196
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13195

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13195

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13197, !tbaa !2468
  %cmp2 = icmp eq i32 %3, 0, !dbg !13198
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13197

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13199, !tbaa !2474
  br label %cond.end, !dbg !13197

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13200, !tbaa !2474
  br label %cond.end, !dbg !13197

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13197
  br label %cond.end5, !dbg !13195

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13195
  ret i8* %cond6, !dbg !13201
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #0 !dbg !13202 !ctir !1255 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !1248
  %entry.addr = alloca i8*, align 8, !ctir !175
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1152
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !1164
  %candidate = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1152
  %next = alloca %struct.hash_entry*, align 8, !ctir !1152
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13203, metadata !DIExpression()), !dbg !13204
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13205, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13207, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13209, metadata !DIExpression()), !dbg !13210
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13211, !tbaa !2474
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13212, !tbaa !2474
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13213
  store i8* %call, i8** %data, align 8, !dbg !13214, !tbaa !2474
  %2 = load i8*, i8** %data, align 8, !dbg !13215, !tbaa !2474
  %tobool = icmp ne i8* %2, null, !dbg !13215
  br i1 %tobool, label %if.end, label %if.then, !dbg !13217

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13218
  br label %return, !dbg !13218

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13219, !tbaa !2474
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13220, !ctir !1147
  %4 = load i64, i64* %n_entries, align 8, !dbg !13221, !tbaa !11599, !ctir !149
  %dec = add i64 %4, -1, !dbg !13221
  store i64 %dec, i64* %n_entries, align 8, !dbg !13221, !tbaa !11599, !ctir !149
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13222, !tbaa !2474
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13224, !ctir !1153
  %6 = load i8*, i8** %data2, align 8, !dbg !13224, !tbaa !11625, !ctir !167
  %tobool3 = icmp ne i8* %6, null, !dbg !13222
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13225

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13226, !tbaa !2474
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13228, !ctir !1147
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13229, !tbaa !11592, !ctir !149
  %dec5 = add i64 %8, -1, !dbg !13229
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13229, !tbaa !11592, !ctir !149
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13230, !tbaa !2474
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13232, !ctir !1147
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13232, !tbaa !11592, !ctir !149
  %conv = uitofp i64 %10 to float, !dbg !13230
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13233, !tbaa !2474
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13234, !ctir !1147
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13234, !tbaa !12129, !ctir !1164
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13235, !ctir !1165
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13235, !tbaa !12259, !ctir !1170
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13236, !tbaa !2474
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13237, !ctir !1147
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13237, !tbaa !11584, !ctir !149
  %conv7 = uitofp i64 %15 to float, !dbg !13236
  %mul = fmul float %13, %conv7, !dbg !13238
  %cmp = fcmp olt float %conv, %mul, !dbg !13239
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13240

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13241, !tbaa !2474
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13243
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13244, !tbaa !2474
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13246, !ctir !1147
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13246, !tbaa !11592, !ctir !149
  %conv12 = uitofp i64 %18 to float, !dbg !13244
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13247, !tbaa !2474
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13248, !ctir !1147
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13248, !tbaa !12129, !ctir !1164
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13249, !ctir !1165
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13249, !tbaa !12259, !ctir !1170
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13250, !tbaa !2474
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13251, !ctir !1147
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13251, !tbaa !11584, !ctir !149
  %conv16 = uitofp i64 %23 to float, !dbg !13250
  %mul17 = fmul float %21, %conv16, !dbg !13252
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13253
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13254

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13255, metadata !DIExpression()), !dbg !13257
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13258, !tbaa !2474
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13259, !ctir !1147
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13259, !tbaa !12129, !ctir !1164
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13257, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13260, metadata !DIExpression()), !dbg !13261
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13262, !tbaa !2474
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13263, !ctir !1165
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13263, !tbaa !12297
  %tobool23 = trunc i8 %27 to i1, !dbg !13263, !ctir !141
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13262

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13264, !tbaa !2474
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13265, !ctir !1147
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13265, !tbaa !11584, !ctir !149
  %conv26 = uitofp i64 %29 to float, !dbg !13264
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13266, !tbaa !2474
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13267, !ctir !1165
  %31 = load float, float* %shrink_factor, align 4, !dbg !13267, !tbaa !12268, !ctir !1170
  %mul27 = fmul float %conv26, %31, !dbg !13268
  br label %cond.end, !dbg !13262

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13269, !tbaa !2474
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13270, !ctir !1147
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13270, !tbaa !11584, !ctir !149
  %conv29 = uitofp i64 %33 to float, !dbg !13269
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13271, !tbaa !2474
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13272, !ctir !1165
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13272, !tbaa !12268, !ctir !1170
  %mul31 = fmul float %conv29, %35, !dbg !13273
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13274, !tbaa !2474
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13275, !ctir !1165
  %37 = load float, float* %growth_threshold, align 4, !dbg !13275, !tbaa !12240, !ctir !1170
  %mul32 = fmul float %mul31, %37, !dbg !13276
  br label %cond.end, !dbg !13262

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13262
  %conv33 = fptoui float %cond to i64, !dbg !13277
  store i64 %conv33, i64* %candidate, align 8, !dbg !13261, !tbaa !2611
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13278, !tbaa !2474
  %39 = load i64, i64* %candidate, align 8, !dbg !13280, !tbaa !2611
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13281
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13282

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13283, metadata !DIExpression()), !dbg !13285
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13286, !tbaa !2474
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13287, !ctir !1147
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13287, !tbaa !12189, !ctir !1152
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13285, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13288, metadata !DIExpression()), !dbg !13289
  br label %while.cond, !dbg !13290

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13291, !tbaa !2474
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13290
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13290

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13292, !tbaa !2474
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13294, !ctir !1153
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13294, !tbaa !11637, !ctir !1152
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13295, !tbaa !2474
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13296, !tbaa !2474
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13296
  call void @free(i8* %46) #13, !dbg !13297
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13298, !tbaa !2474
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13299, !tbaa !2474
  br label %while.cond, !dbg !13290, !llvm.loop !13300

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13302, !tbaa !2474
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13303, !ctir !1147
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13304, !tbaa !12189, !ctir !1152
  br label %if.end39, !dbg !13305

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13306

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13307

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13308

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13309, !tbaa !2474
  store i8* %49, i8** %retval, align 8, !dbg !13310
  br label %return, !dbg !13310

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13311
  ret i8* %50, !dbg !13311
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !13312 !ctir !328 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %table_size.addr = alloca i64, align 8, !ctir !149
  %p = alloca %struct.F_triple*, align 8, !ctir !1851
  %tmp = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13318, metadata !DIExpression()), !dbg !13319
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13320, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13320
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13319, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13321, metadata !DIExpression()), !dbg !13322
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13323, !tbaa !2474
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13324, !ctir !1852
  %3 = load i8*, i8** %name, align 8, !dbg !13324, !tbaa !10855, !ctir !143
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13325, !tbaa !2611
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #16, !dbg !13326
  store i64 %call, i64* %tmp, align 8, !dbg !13322, !tbaa !2611
  %5 = load i64, i64* %tmp, align 8, !dbg !13327, !tbaa !2611
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13328, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13329, !ctir !1852
  %7 = load i64, i64* %st_ino, align 8, !dbg !13329, !tbaa !10862, !ctir !256
  %xor = xor i64 %5, %7, !dbg !13330
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !13331, !tbaa !2611
  %rem = urem i64 %xor, %8, !dbg !13332
  ret i64 %rem, !dbg !13333
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !13334 !ctir !328 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %table_size.addr = alloca i64, align 8, !ctir !149
  %p = alloca %struct.F_triple*, align 8, !ctir !1851
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13335, metadata !DIExpression()), !dbg !13336
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13337, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13339, metadata !DIExpression()), !dbg !13340
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13341, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13341
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13340, !tbaa !2474
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13342, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !13343, !ctir !1852
  %3 = load i64, i64* %st_ino, align 8, !dbg !13343, !tbaa !10862, !ctir !256
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13344, !tbaa !2611
  %rem = urem i64 %3, %4, !dbg !13345
  ret i64 %rem, !dbg !13346
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #0 !dbg !13347 !ctir !332 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %y.addr = alloca i8*, align 8, !ctir !175
  %a = alloca %struct.F_triple*, align 8, !ctir !1851
  %b = alloca %struct.F_triple*, align 8, !ctir !1851
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13348, metadata !DIExpression()), !dbg !13349
  store i8* %y, i8** %y.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13350, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13352, metadata !DIExpression()), !dbg !13353
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13354, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13354
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13353, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13355, metadata !DIExpression()), !dbg !13356
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13357, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13357
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13356, !tbaa !2474
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13358, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13358, !ctir !1852
  %5 = load i64, i64* %st_ino, align 8, !dbg !13358, !tbaa !10862, !ctir !256
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13358, !tbaa !2474
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13358, !ctir !1852
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13358, !tbaa !10862, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !13358
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13358

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13358, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13358, !ctir !1852
  %9 = load i64, i64* %st_dev, align 8, !dbg !13358, !tbaa !10868, !ctir !258
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13358, !tbaa !2474
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13358, !ctir !1852
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13358, !tbaa !10868, !ctir !258
  %cmp3 = icmp eq i64 %9, %11, !dbg !13358
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13359

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13360, !tbaa !2474
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13361, !ctir !1852
  %13 = load i8*, i8** %name, align 8, !dbg !13361, !tbaa !10855, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13362, !tbaa !2474
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13363, !ctir !1852
  %15 = load i8*, i8** %name4, align 8, !dbg !13363, !tbaa !10855, !ctir !143
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13364
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13365
  %17 = zext i1 %16 to i64, !dbg !13366
  %cond = select i1 %16, i32 1, i32 0, !dbg !13366
  %tobool = icmp ne i32 %cond, 0, !dbg !13366
  ret i1 %tobool, !dbg !13367
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13368 !ctir !332 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %y.addr = alloca i8*, align 8, !ctir !175
  %a = alloca %struct.F_triple*, align 8, !ctir !1851
  %b = alloca %struct.F_triple*, align 8, !ctir !1851
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13369, metadata !DIExpression()), !dbg !13370
  store i8* %y, i8** %y.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13371, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13373, metadata !DIExpression()), !dbg !13374
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13375, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13375
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13374, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13376, metadata !DIExpression()), !dbg !13377
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13378, !tbaa !2474
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13378
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13377, !tbaa !2474
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13379, !tbaa !2474
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13379, !ctir !1852
  %5 = load i64, i64* %st_ino, align 8, !dbg !13379, !tbaa !10862, !ctir !256
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13379, !tbaa !2474
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13379, !ctir !1852
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13379, !tbaa !10862, !ctir !256
  %cmp = icmp eq i64 %5, %7, !dbg !13379
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13379

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13379, !tbaa !2474
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13379, !ctir !1852
  %9 = load i64, i64* %st_dev, align 8, !dbg !13379, !tbaa !10868, !ctir !258
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13379, !tbaa !2474
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13379, !ctir !1852
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13379, !tbaa !10868, !ctir !258
  %cmp3 = icmp eq i64 %9, %11, !dbg !13379
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13380

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13381, !tbaa !2474
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13381, !ctir !1852
  %13 = load i8*, i8** %name, align 8, !dbg !13381, !tbaa !10855, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13381, !tbaa !2474
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13381, !ctir !1852
  %15 = load i8*, i8** %name4, align 8, !dbg !13381, !tbaa !10855, !ctir !143
  %call = call i32 @strcmp(i8* %13, i8* %15) #16, !dbg !13381
  %cmp5 = icmp eq i32 %call, 0, !dbg !13381
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13382
  %17 = zext i1 %16 to i64, !dbg !13383
  %cond = select i1 %16, i32 1, i32 0, !dbg !13383
  %tobool = icmp ne i32 %cond, 0, !dbg !13383
  ret i1 %tobool, !dbg !13384
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #0 !dbg !13385 !ctir !334 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !167
  %a = alloca %struct.F_triple*, align 8, !ctir !1858
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13388, metadata !DIExpression()), !dbg !13389
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13390, !tbaa !2474
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13390
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13389, !tbaa !2474
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13391, !tbaa !2474
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13392, !ctir !1853
  %3 = load i8*, i8** %name, align 8, !dbg !13392, !tbaa !10855, !ctir !143
  call void @free(i8* %3) #13, !dbg !13393
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13394, !tbaa !2474
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13394
  call void @free(i8* %5) #13, !dbg !13395
  ret void, !dbg !13396
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @human_readable(i64 %n, i8* %buf, i32 %opts, i64 %from_block_size, i64 %to_block_size) #0 !dbg !13397 !ctir !1283 {
entry:
  %n.addr = alloca i64, align 8, !ctir !168
  %buf.addr = alloca i8*, align 8, !ctir !143
  %opts.addr = alloca i32, align 4, !ctir !27
  %from_block_size.addr = alloca i64, align 8, !ctir !168
  %to_block_size.addr = alloca i64, align 8, !ctir !168
  %inexact_style = alloca i32, align 4, !ctir !27
  %base = alloca i32, align 4, !ctir !6
  %amt = alloca i64, align 8, !ctir !168
  %tenths = alloca i32, align 4, !ctir !27
  %exponent = alloca i32, align 4, !ctir !27
  %exponent_max = alloca i32, align 4, !ctir !27
  %p = alloca i8*, align 8, !ctir !143
  %psuffix = alloca i8*, align 8, !ctir !143
  %integerlim = alloca i8*, align 8, !ctir !146
  %rounding = alloca i32, align 4, !ctir !27
  %decimal_point = alloca i8*, align 8, !ctir !146
  %decimal_pointlen = alloca i64, align 8, !ctir !149
  %grouping = alloca i8*, align 8, !ctir !146
  %thousands_sep = alloca i8*, align 8, !ctir !146
  %l = alloca %struct.lconv*, align 8, !ctir !1285
  %pointlen = alloca i64, align 8, !ctir !149
  %multiplier = alloca i64, align 8, !ctir !168
  %divisor = alloca i64, align 8, !ctir !168
  %r10 = alloca i64, align 8, !ctir !168
  %r2 = alloca i64, align 8, !ctir !168
  %dto_block_size = alloca x86_fp80, align 16, !ctir !1314
  %damt = alloca x86_fp80, align 16, !ctir !1314
  %buflen = alloca i64, align 8, !ctir !149
  %nonintegerlen = alloca i64, align 8, !ctir !149
  %e = alloca x86_fp80, align 16, !ctir !1314
  %r10103 = alloca i32, align 4, !ctir !6
  %r2110 = alloca i32, align 4, !ctir !6
  %digit = alloca i32, align 4, !ctir !27
  %power = alloca i64, align 8, !ctir !168
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13398, metadata !DIExpression()), !dbg !13399
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13400, metadata !DIExpression()), !dbg !13401
  store i32 %opts, i32* %opts.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %opts.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  store i64 %from_block_size, i64* %from_block_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %from_block_size.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  store i64 %to_block_size, i64* %to_block_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %to_block_size.addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.declare(metadata i32* %inexact_style, metadata !13408, metadata !DIExpression()), !dbg !13409
  %0 = load i32, i32* %opts.addr, align 4, !dbg !13410, !tbaa !2468
  %and = and i32 %0, 3, !dbg !13411
  store i32 %and, i32* %inexact_style, align 4, !dbg !13409, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %base, metadata !13412, metadata !DIExpression()), !dbg !13413
  %1 = load i32, i32* %opts.addr, align 4, !dbg !13414, !tbaa !2468
  %and1 = and i32 %1, 32, !dbg !13415
  %tobool = icmp ne i32 %and1, 0, !dbg !13414
  %2 = zext i1 %tobool to i64, !dbg !13414
  %cond = select i1 %tobool, i32 1024, i32 1000, !dbg !13414
  store i32 %cond, i32* %base, align 4, !dbg !13413, !tbaa !2468
  call void @llvm.dbg.declare(metadata i64* %amt, metadata !13416, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.declare(metadata i32* %tenths, metadata !13418, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !13420, metadata !DIExpression()), !dbg !13421
  store i32 -1, i32* %exponent, align 4, !dbg !13421, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %exponent_max, metadata !13422, metadata !DIExpression()), !dbg !13423
  store i32 8, i32* %exponent_max, align 4, !dbg !13423, !tbaa !2468
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13424, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.declare(metadata i8** %psuffix, metadata !13426, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.declare(metadata i8** %integerlim, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.declare(metadata i32* %rounding, metadata !13430, metadata !DIExpression()), !dbg !13431
  call void @llvm.dbg.declare(metadata i8** %decimal_point, metadata !13432, metadata !DIExpression()), !dbg !13433
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.328, i64 0, i64 0), i8** %decimal_point, align 8, !dbg !13433, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %decimal_pointlen, metadata !13434, metadata !DIExpression()), !dbg !13435
  store i64 1, i64* %decimal_pointlen, align 8, !dbg !13435, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %grouping, metadata !13436, metadata !DIExpression()), !dbg !13437
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.329, i64 0, i64 0), i8** %grouping, align 8, !dbg !13437, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %thousands_sep, metadata !13438, metadata !DIExpression()), !dbg !13439
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.329, i64 0, i64 0), i8** %thousands_sep, align 8, !dbg !13439, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.lconv** %l, metadata !13440, metadata !DIExpression()), !dbg !13441
  %call = call %struct.lconv* @localeconv() #13, !dbg !13442
  store %struct.lconv* %call, %struct.lconv** %l, align 8, !dbg !13441, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %pointlen, metadata !13443, metadata !DIExpression()), !dbg !13444
  %3 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13445, !tbaa !2474
  %decimal_point2 = getelementptr inbounds %struct.lconv, %struct.lconv* %3, i32 0, i32 0, !dbg !13446, !ctir !1286
  %4 = load i8*, i8** %decimal_point2, align 8, !dbg !13446, !tbaa !13447, !ctir !143
  %call3 = call i64 @strlen(i8* %4) #16, !dbg !13449
  store i64 %call3, i64* %pointlen, align 8, !dbg !13444, !tbaa !2611
  %5 = load i64, i64* %pointlen, align 8, !dbg !13450, !tbaa !2611
  %cmp = icmp ult i64 0, %5, !dbg !13452
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13453

land.lhs.true:                                    ; preds = %entry
  %6 = load i64, i64* %pointlen, align 8, !dbg !13454, !tbaa !2611
  %cmp4 = icmp ule i64 %6, 16, !dbg !13455
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13456

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13457, !tbaa !2474
  %decimal_point5 = getelementptr inbounds %struct.lconv, %struct.lconv* %7, i32 0, i32 0, !dbg !13459, !ctir !1286
  %8 = load i8*, i8** %decimal_point5, align 8, !dbg !13459, !tbaa !13447, !ctir !143
  store i8* %8, i8** %decimal_point, align 8, !dbg !13460, !tbaa !2474
  %9 = load i64, i64* %pointlen, align 8, !dbg !13461, !tbaa !2611
  store i64 %9, i64* %decimal_pointlen, align 8, !dbg !13462, !tbaa !2611
  br label %if.end, !dbg !13463

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13464, !tbaa !2474
  %grouping6 = getelementptr inbounds %struct.lconv, %struct.lconv* %10, i32 0, i32 2, !dbg !13465, !ctir !1286
  %11 = load i8*, i8** %grouping6, align 8, !dbg !13465, !tbaa !13466, !ctir !143
  store i8* %11, i8** %grouping, align 8, !dbg !13467, !tbaa !2474
  %12 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13468, !tbaa !2474
  %thousands_sep7 = getelementptr inbounds %struct.lconv, %struct.lconv* %12, i32 0, i32 1, !dbg !13470, !ctir !1286
  %13 = load i8*, i8** %thousands_sep7, align 8, !dbg !13470, !tbaa !13471, !ctir !143
  %call8 = call i64 @strlen(i8* %13) #16, !dbg !13472
  %cmp9 = icmp ule i64 %call8, 16, !dbg !13473
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13474

if.then10:                                        ; preds = %if.end
  %14 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13475, !tbaa !2474
  %thousands_sep11 = getelementptr inbounds %struct.lconv, %struct.lconv* %14, i32 0, i32 1, !dbg !13476, !ctir !1286
  %15 = load i8*, i8** %thousands_sep11, align 8, !dbg !13476, !tbaa !13471, !ctir !143
  store i8* %15, i8** %thousands_sep, align 8, !dbg !13477, !tbaa !2474
  br label %if.end12, !dbg !13478

if.end12:                                         ; preds = %if.then10, %if.end
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !13479, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 651, !dbg !13480
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !13481
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr13, i64 -3, !dbg !13482
  store i8* %add.ptr14, i8** %psuffix, align 8, !dbg !13483, !tbaa !2474
  %17 = load i8*, i8** %psuffix, align 8, !dbg !13484, !tbaa !2474
  store i8* %17, i8** %p, align 8, !dbg !13485, !tbaa !2474
  %18 = load i64, i64* %to_block_size.addr, align 8, !dbg !13486, !tbaa !2611
  %19 = load i64, i64* %from_block_size.addr, align 8, !dbg !13488, !tbaa !2611
  %cmp15 = icmp ule i64 %18, %19, !dbg !13489
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !13490

if.then16:                                        ; preds = %if.end12
  %20 = load i64, i64* %from_block_size.addr, align 8, !dbg !13491, !tbaa !2611
  %21 = load i64, i64* %to_block_size.addr, align 8, !dbg !13494, !tbaa !2611
  %rem = urem i64 %20, %21, !dbg !13495
  %cmp17 = icmp eq i64 %rem, 0, !dbg !13496
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !13497

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i64* %multiplier, metadata !13498, metadata !DIExpression()), !dbg !13500
  %22 = load i64, i64* %from_block_size.addr, align 8, !dbg !13501, !tbaa !2611
  %23 = load i64, i64* %to_block_size.addr, align 8, !dbg !13502, !tbaa !2611
  %div = udiv i64 %22, %23, !dbg !13503
  store i64 %div, i64* %multiplier, align 8, !dbg !13500, !tbaa !2611
  %24 = load i64, i64* %n.addr, align 8, !dbg !13504, !tbaa !2611
  %25 = load i64, i64* %multiplier, align 8, !dbg !13505, !tbaa !2611
  %mul = mul i64 %24, %25, !dbg !13506
  store i64 %mul, i64* %amt, align 8, !dbg !13507, !tbaa !2611
  %26 = load i64, i64* %amt, align 8, !dbg !13508, !tbaa !2611
  %27 = load i64, i64* %multiplier, align 8, !dbg !13510, !tbaa !2611
  %div19 = udiv i64 %26, %27, !dbg !13511
  %28 = load i64, i64* %n.addr, align 8, !dbg !13512, !tbaa !2611
  %cmp20 = icmp eq i64 %div19, %28, !dbg !13513
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !13514

if.then21:                                        ; preds = %if.then18
  store i32 0, i32* %tenths, align 4, !dbg !13515, !tbaa !2468
  store i32 0, i32* %rounding, align 4, !dbg !13517, !tbaa !2468
  br label %use_integer_arithmetic, !dbg !13518

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !13519

if.end23:                                         ; preds = %if.end22, %if.then16
  br label %if.end44, !dbg !13520

if.else:                                          ; preds = %if.end12
  %29 = load i64, i64* %from_block_size.addr, align 8, !dbg !13521, !tbaa !2611
  %cmp24 = icmp ne i64 %29, 0, !dbg !13523
  br i1 %cmp24, label %land.lhs.true25, label %if.end43, !dbg !13524

land.lhs.true25:                                  ; preds = %if.else
  %30 = load i64, i64* %to_block_size.addr, align 8, !dbg !13525, !tbaa !2611
  %31 = load i64, i64* %from_block_size.addr, align 8, !dbg !13526, !tbaa !2611
  %rem26 = urem i64 %30, %31, !dbg !13527
  %cmp27 = icmp eq i64 %rem26, 0, !dbg !13528
  br i1 %cmp27, label %if.then28, label %if.end43, !dbg !13529

if.then28:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !13530, metadata !DIExpression()), !dbg !13532
  %32 = load i64, i64* %to_block_size.addr, align 8, !dbg !13533, !tbaa !2611
  %33 = load i64, i64* %from_block_size.addr, align 8, !dbg !13534, !tbaa !2611
  %div29 = udiv i64 %32, %33, !dbg !13535
  store i64 %div29, i64* %divisor, align 8, !dbg !13532, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %r10, metadata !13536, metadata !DIExpression()), !dbg !13537
  %34 = load i64, i64* %n.addr, align 8, !dbg !13538, !tbaa !2611
  %35 = load i64, i64* %divisor, align 8, !dbg !13539, !tbaa !2611
  %rem30 = urem i64 %34, %35, !dbg !13540
  %mul31 = mul i64 %rem30, 10, !dbg !13541
  store i64 %mul31, i64* %r10, align 8, !dbg !13537, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %r2, metadata !13542, metadata !DIExpression()), !dbg !13543
  %36 = load i64, i64* %r10, align 8, !dbg !13544, !tbaa !2611
  %37 = load i64, i64* %divisor, align 8, !dbg !13545, !tbaa !2611
  %rem32 = urem i64 %36, %37, !dbg !13546
  %mul33 = mul i64 %rem32, 2, !dbg !13547
  store i64 %mul33, i64* %r2, align 8, !dbg !13543, !tbaa !2611
  %38 = load i64, i64* %n.addr, align 8, !dbg !13548, !tbaa !2611
  %39 = load i64, i64* %divisor, align 8, !dbg !13549, !tbaa !2611
  %div34 = udiv i64 %38, %39, !dbg !13550
  store i64 %div34, i64* %amt, align 8, !dbg !13551, !tbaa !2611
  %40 = load i64, i64* %r10, align 8, !dbg !13552, !tbaa !2611
  %41 = load i64, i64* %divisor, align 8, !dbg !13553, !tbaa !2611
  %div35 = udiv i64 %40, %41, !dbg !13554
  %conv = trunc i64 %div35 to i32, !dbg !13552
  store i32 %conv, i32* %tenths, align 4, !dbg !13555, !tbaa !2468
  %42 = load i64, i64* %r2, align 8, !dbg !13556, !tbaa !2611
  %43 = load i64, i64* %divisor, align 8, !dbg !13557, !tbaa !2611
  %cmp36 = icmp ult i64 %42, %43, !dbg !13558
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !13556

cond.true:                                        ; preds = %if.then28
  %44 = load i64, i64* %r2, align 8, !dbg !13559, !tbaa !2611
  %cmp38 = icmp ult i64 0, %44, !dbg !13560
  %conv39 = zext i1 %cmp38 to i32, !dbg !13560
  br label %cond.end, !dbg !13556

cond.false:                                       ; preds = %if.then28
  %45 = load i64, i64* %divisor, align 8, !dbg !13561, !tbaa !2611
  %46 = load i64, i64* %r2, align 8, !dbg !13562, !tbaa !2611
  %cmp40 = icmp ult i64 %45, %46, !dbg !13563
  %conv41 = zext i1 %cmp40 to i32, !dbg !13563
  %add = add nsw i32 2, %conv41, !dbg !13564
  br label %cond.end, !dbg !13556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond42 = phi i32 [ %conv39, %cond.true ], [ %add, %cond.false ], !dbg !13556
  store i32 %cond42, i32* %rounding, align 4, !dbg !13565, !tbaa !2468
  br label %use_integer_arithmetic, !dbg !13566

if.end43:                                         ; preds = %land.lhs.true25, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end23
  call void @llvm.dbg.declare(metadata x86_fp80* %dto_block_size, metadata !13567, metadata !DIExpression()), !dbg !13569
  %47 = load i64, i64* %to_block_size.addr, align 8, !dbg !13570, !tbaa !2611
  %conv45 = uitofp i64 %47 to x86_fp80, !dbg !13570
  store x86_fp80 %conv45, x86_fp80* %dto_block_size, align 16, !dbg !13569, !tbaa !13571
  call void @llvm.dbg.declare(metadata x86_fp80* %damt, metadata !13573, metadata !DIExpression()), !dbg !13574
  %48 = load i64, i64* %n.addr, align 8, !dbg !13575, !tbaa !2611
  %conv46 = uitofp i64 %48 to x86_fp80, !dbg !13575
  %49 = load i64, i64* %from_block_size.addr, align 8, !dbg !13576, !tbaa !2611
  %conv47 = uitofp i64 %49 to x86_fp80, !dbg !13576
  %50 = load x86_fp80, x86_fp80* %dto_block_size, align 16, !dbg !13577, !tbaa !13571
  %div48 = fdiv x86_fp80 %conv47, %50, !dbg !13578
  %mul49 = fmul x86_fp80 %conv46, %div48, !dbg !13579
  store x86_fp80 %mul49, x86_fp80* %damt, align 16, !dbg !13574, !tbaa !13571
  call void @llvm.dbg.declare(metadata i64* %buflen, metadata !13580, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.declare(metadata i64* %nonintegerlen, metadata !13582, metadata !DIExpression()), !dbg !13583
  %51 = load i32, i32* %opts.addr, align 4, !dbg !13584, !tbaa !2468
  %and50 = and i32 %51, 16, !dbg !13586
  %tobool51 = icmp ne i32 %and50, 0, !dbg !13586
  br i1 %tobool51, label %if.else56, label %if.then52, !dbg !13587

if.then52:                                        ; preds = %if.end44
  %52 = load i8*, i8** %buf.addr, align 8, !dbg !13588, !tbaa !2474
  %53 = load i32, i32* %inexact_style, align 4, !dbg !13590, !tbaa !2468
  %54 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13591, !tbaa !13571
  %call53 = call x86_fp80 @adjust_value(i32 %53, x86_fp80 %54), !dbg !13592
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.330, i64 0, i64 0), x86_fp80 %call53) #13, !dbg !13593
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !13594, !tbaa !2474
  %call55 = call i64 @strlen(i8* %55) #16, !dbg !13595
  store i64 %call55, i64* %buflen, align 8, !dbg !13596, !tbaa !2611
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13597, !tbaa !2611
  br label %if.end90, !dbg !13598

if.else56:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata x86_fp80* %e, metadata !13599, metadata !DIExpression()), !dbg !13601
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %e, align 16, !dbg !13601, !tbaa !13571
  store i32 0, i32* %exponent, align 4, !dbg !13602, !tbaa !2468
  br label %do.body, !dbg !13603

do.body:                                          ; preds = %land.end, %if.else56
  %56 = load i32, i32* %base, align 4, !dbg !13604, !tbaa !2468
  %conv57 = uitofp i32 %56 to x86_fp80, !dbg !13604
  %57 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13606, !tbaa !13571
  %mul58 = fmul x86_fp80 %57, %conv57, !dbg !13606
  store x86_fp80 %mul58, x86_fp80* %e, align 16, !dbg !13606, !tbaa !13571
  %58 = load i32, i32* %exponent, align 4, !dbg !13607, !tbaa !2468
  %inc = add nsw i32 %58, 1, !dbg !13607
  store i32 %inc, i32* %exponent, align 4, !dbg !13607, !tbaa !2468
  br label %do.cond, !dbg !13608

do.cond:                                          ; preds = %do.body
  %59 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13609, !tbaa !13571
  %60 = load i32, i32* %base, align 4, !dbg !13610, !tbaa !2468
  %conv59 = uitofp i32 %60 to x86_fp80, !dbg !13610
  %mul60 = fmul x86_fp80 %59, %conv59, !dbg !13611
  %61 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13612, !tbaa !13571
  %cmp61 = fcmp ole x86_fp80 %mul60, %61, !dbg !13613
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !13614

land.rhs:                                         ; preds = %do.cond
  %62 = load i32, i32* %exponent, align 4, !dbg !13615, !tbaa !2468
  %63 = load i32, i32* %exponent_max, align 4, !dbg !13616, !tbaa !2468
  %cmp63 = icmp slt i32 %62, %63, !dbg !13617
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %64 = phi i1 [ false, %do.cond ], [ %cmp63, %land.rhs ], !dbg !13618
  br i1 %64, label %do.body, label %do.end, !dbg !13608, !llvm.loop !13619

do.end:                                           ; preds = %land.end
  %65 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13621, !tbaa !13571
  %66 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13622, !tbaa !13571
  %div65 = fdiv x86_fp80 %66, %65, !dbg !13622
  store x86_fp80 %div65, x86_fp80* %damt, align 16, !dbg !13622, !tbaa !13571
  %67 = load i8*, i8** %buf.addr, align 8, !dbg !13623, !tbaa !2474
  %68 = load i32, i32* %inexact_style, align 4, !dbg !13624, !tbaa !2468
  %69 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13625, !tbaa !13571
  %call66 = call x86_fp80 @adjust_value(i32 %68, x86_fp80 %69), !dbg !13626
  %call67 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.331, i64 0, i64 0), x86_fp80 %call66) #13, !dbg !13627
  %70 = load i8*, i8** %buf.addr, align 8, !dbg !13628, !tbaa !2474
  %call68 = call i64 @strlen(i8* %70) #16, !dbg !13629
  store i64 %call68, i64* %buflen, align 8, !dbg !13630, !tbaa !2611
  %71 = load i64, i64* %decimal_pointlen, align 8, !dbg !13631, !tbaa !2611
  %add69 = add i64 %71, 1, !dbg !13632
  store i64 %add69, i64* %nonintegerlen, align 8, !dbg !13633, !tbaa !2611
  %72 = load i64, i64* %nonintegerlen, align 8, !dbg !13634, !tbaa !2611
  %add70 = add i64 1, %72, !dbg !13636
  %73 = load i32, i32* %opts.addr, align 4, !dbg !13637, !tbaa !2468
  %and71 = and i32 %73, 32, !dbg !13638
  %tobool72 = icmp ne i32 %and71, 0, !dbg !13639
  %lnot = xor i1 %tobool72, true, !dbg !13639
  %lnot.ext = zext i1 %lnot to i32, !dbg !13639
  %conv73 = sext i32 %lnot.ext to i64, !dbg !13639
  %add74 = add i64 %add70, %conv73, !dbg !13640
  %74 = load i64, i64* %buflen, align 8, !dbg !13641, !tbaa !2611
  %cmp75 = icmp ult i64 %add74, %74, !dbg !13642
  br i1 %cmp75, label %if.then83, label %lor.lhs.false, !dbg !13643

lor.lhs.false:                                    ; preds = %do.end
  %75 = load i32, i32* %opts.addr, align 4, !dbg !13644, !tbaa !2468
  %and77 = and i32 %75, 8, !dbg !13645
  %tobool78 = icmp ne i32 %and77, 0, !dbg !13645
  br i1 %tobool78, label %land.lhs.true79, label %if.end89, !dbg !13646

land.lhs.true79:                                  ; preds = %lor.lhs.false
  %76 = load i8*, i8** %buf.addr, align 8, !dbg !13647, !tbaa !2474
  %77 = load i64, i64* %buflen, align 8, !dbg !13648, !tbaa !2611
  %sub = sub i64 %77, 1, !dbg !13649
  %arrayidx = getelementptr inbounds i8, i8* %76, i64 %sub, !dbg !13647, !ctir !143
  %78 = load i8, i8* %arrayidx, align 1, !dbg !13647, !tbaa !2529
  %conv80 = sext i8 %78 to i32, !dbg !13647
  %cmp81 = icmp eq i32 %conv80, 48, !dbg !13650
  br i1 %cmp81, label %if.then83, label %if.end89, !dbg !13651

if.then83:                                        ; preds = %land.lhs.true79, %do.end
  %79 = load i8*, i8** %buf.addr, align 8, !dbg !13652, !tbaa !2474
  %80 = load i32, i32* %inexact_style, align 4, !dbg !13654, !tbaa !2468
  %81 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13655, !tbaa !13571
  %mul84 = fmul x86_fp80 %81, 0xK4002A000000000000000, !dbg !13656
  %call85 = call x86_fp80 @adjust_value(i32 %80, x86_fp80 %mul84), !dbg !13657
  %div86 = fdiv x86_fp80 %call85, 0xK4002A000000000000000, !dbg !13658
  %call87 = call i32 (i8*, i8*, ...) @sprintf(i8* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.330, i64 0, i64 0), x86_fp80 %div86) #13, !dbg !13659
  %82 = load i8*, i8** %buf.addr, align 8, !dbg !13660, !tbaa !2474
  %call88 = call i64 @strlen(i8* %82) #16, !dbg !13661
  store i64 %call88, i64* %buflen, align 8, !dbg !13662, !tbaa !2611
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13663, !tbaa !2611
  br label %if.end89, !dbg !13664

if.end89:                                         ; preds = %if.then83, %land.lhs.true79, %lor.lhs.false
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then52
  %83 = load i8*, i8** %psuffix, align 8, !dbg !13665, !tbaa !2474
  %84 = load i64, i64* %buflen, align 8, !dbg !13666, !tbaa !2611
  %idx.neg = sub i64 0, %84, !dbg !13667
  %add.ptr91 = getelementptr inbounds i8, i8* %83, i64 %idx.neg, !dbg !13667
  store i8* %add.ptr91, i8** %p, align 8, !dbg !13668, !tbaa !2474
  %85 = load i8*, i8** %p, align 8, !dbg !13669, !tbaa !2474
  %86 = load i8*, i8** %buf.addr, align 8, !dbg !13670, !tbaa !2474
  %87 = load i64, i64* %buflen, align 8, !dbg !13671, !tbaa !2611
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 %87, i1 false), !dbg !13672
  %88 = load i8*, i8** %p, align 8, !dbg !13673, !tbaa !2474
  %89 = load i64, i64* %buflen, align 8, !dbg !13674, !tbaa !2611
  %add.ptr92 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !13675
  %90 = load i64, i64* %nonintegerlen, align 8, !dbg !13676, !tbaa !2611
  %idx.neg93 = sub i64 0, %90, !dbg !13677
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr92, i64 %idx.neg93, !dbg !13677
  store i8* %add.ptr94, i8** %integerlim, align 8, !dbg !13678, !tbaa !2474
  br label %do_grouping, !dbg !13679

use_integer_arithmetic:                           ; preds = %cond.end, %if.then21
  call void @llvm.dbg.label(metadata !13680), !dbg !13681
  %91 = load i32, i32* %opts.addr, align 4, !dbg !13682, !tbaa !2468
  %and95 = and i32 %91, 16, !dbg !13685
  %tobool96 = icmp ne i32 %and95, 0, !dbg !13685
  br i1 %tobool96, label %if.then97, label %if.end179, !dbg !13686

if.then97:                                        ; preds = %use_integer_arithmetic
  store i32 0, i32* %exponent, align 4, !dbg !13687, !tbaa !2468
  %92 = load i32, i32* %base, align 4, !dbg !13689, !tbaa !2468
  %conv98 = zext i32 %92 to i64, !dbg !13689
  %93 = load i64, i64* %amt, align 8, !dbg !13691, !tbaa !2611
  %cmp99 = icmp ule i64 %conv98, %93, !dbg !13692
  br i1 %cmp99, label %if.then101, label %if.end178, !dbg !13693

if.then101:                                       ; preds = %if.then97
  br label %do.body102, !dbg !13694

do.body102:                                       ; preds = %land.end138, %if.then101
  call void @llvm.dbg.declare(metadata i32* %r10103, metadata !13696, metadata !DIExpression()), !dbg !13698
  %94 = load i64, i64* %amt, align 8, !dbg !13699, !tbaa !2611
  %95 = load i32, i32* %base, align 4, !dbg !13700, !tbaa !2468
  %conv104 = zext i32 %95 to i64, !dbg !13700
  %rem105 = urem i64 %94, %conv104, !dbg !13701
  %mul106 = mul i64 %rem105, 10, !dbg !13702
  %96 = load i32, i32* %tenths, align 4, !dbg !13703, !tbaa !2468
  %conv107 = sext i32 %96 to i64, !dbg !13703
  %add108 = add i64 %mul106, %conv107, !dbg !13704
  %conv109 = trunc i64 %add108 to i32, !dbg !13705
  store i32 %conv109, i32* %r10103, align 4, !dbg !13698, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %r2110, metadata !13706, metadata !DIExpression()), !dbg !13707
  %97 = load i32, i32* %r10103, align 4, !dbg !13708, !tbaa !2468
  %98 = load i32, i32* %base, align 4, !dbg !13709, !tbaa !2468
  %rem111 = urem i32 %97, %98, !dbg !13710
  %mul112 = mul i32 %rem111, 2, !dbg !13711
  %99 = load i32, i32* %rounding, align 4, !dbg !13712, !tbaa !2468
  %shr = ashr i32 %99, 1, !dbg !13713
  %add113 = add i32 %mul112, %shr, !dbg !13714
  store i32 %add113, i32* %r2110, align 4, !dbg !13707, !tbaa !2468
  %100 = load i32, i32* %base, align 4, !dbg !13715, !tbaa !2468
  %conv114 = zext i32 %100 to i64, !dbg !13715
  %101 = load i64, i64* %amt, align 8, !dbg !13716, !tbaa !2611
  %div115 = udiv i64 %101, %conv114, !dbg !13716
  store i64 %div115, i64* %amt, align 8, !dbg !13716, !tbaa !2611
  %102 = load i32, i32* %r10103, align 4, !dbg !13717, !tbaa !2468
  %103 = load i32, i32* %base, align 4, !dbg !13718, !tbaa !2468
  %div116 = udiv i32 %102, %103, !dbg !13719
  store i32 %div116, i32* %tenths, align 4, !dbg !13720, !tbaa !2468
  %104 = load i32, i32* %r2110, align 4, !dbg !13721, !tbaa !2468
  %105 = load i32, i32* %base, align 4, !dbg !13722, !tbaa !2468
  %cmp117 = icmp ult i32 %104, %105, !dbg !13723
  br i1 %cmp117, label %cond.true119, label %cond.false123, !dbg !13721

cond.true119:                                     ; preds = %do.body102
  %106 = load i32, i32* %r2110, align 4, !dbg !13724, !tbaa !2468
  %107 = load i32, i32* %rounding, align 4, !dbg !13725, !tbaa !2468
  %add120 = add i32 %106, %107, !dbg !13726
  %cmp121 = icmp ne i32 %add120, 0, !dbg !13727
  %conv122 = zext i1 %cmp121 to i32, !dbg !13727
  br label %cond.end128, !dbg !13721

cond.false123:                                    ; preds = %do.body102
  %108 = load i32, i32* %base, align 4, !dbg !13728, !tbaa !2468
  %109 = load i32, i32* %r2110, align 4, !dbg !13729, !tbaa !2468
  %110 = load i32, i32* %rounding, align 4, !dbg !13730, !tbaa !2468
  %add124 = add i32 %109, %110, !dbg !13731
  %cmp125 = icmp ult i32 %108, %add124, !dbg !13732
  %conv126 = zext i1 %cmp125 to i32, !dbg !13732
  %add127 = add nsw i32 2, %conv126, !dbg !13733
  br label %cond.end128, !dbg !13721

cond.end128:                                      ; preds = %cond.false123, %cond.true119
  %cond129 = phi i32 [ %conv122, %cond.true119 ], [ %add127, %cond.false123 ], !dbg !13721
  store i32 %cond129, i32* %rounding, align 4, !dbg !13734, !tbaa !2468
  %111 = load i32, i32* %exponent, align 4, !dbg !13735, !tbaa !2468
  %inc130 = add nsw i32 %111, 1, !dbg !13735
  store i32 %inc130, i32* %exponent, align 4, !dbg !13735, !tbaa !2468
  br label %do.cond131, !dbg !13736

do.cond131:                                       ; preds = %cond.end128
  %112 = load i32, i32* %base, align 4, !dbg !13737, !tbaa !2468
  %conv132 = zext i32 %112 to i64, !dbg !13737
  %113 = load i64, i64* %amt, align 8, !dbg !13738, !tbaa !2611
  %cmp133 = icmp ule i64 %conv132, %113, !dbg !13739
  br i1 %cmp133, label %land.rhs135, label %land.end138, !dbg !13740

land.rhs135:                                      ; preds = %do.cond131
  %114 = load i32, i32* %exponent, align 4, !dbg !13741, !tbaa !2468
  %115 = load i32, i32* %exponent_max, align 4, !dbg !13742, !tbaa !2468
  %cmp136 = icmp slt i32 %114, %115, !dbg !13743
  br label %land.end138

land.end138:                                      ; preds = %land.rhs135, %do.cond131
  %116 = phi i1 [ false, %do.cond131 ], [ %cmp136, %land.rhs135 ], !dbg !13744
  br i1 %116, label %do.body102, label %do.end139, !dbg !13736, !llvm.loop !13745

do.end139:                                        ; preds = %land.end138
  %117 = load i64, i64* %amt, align 8, !dbg !13747, !tbaa !2611
  %cmp140 = icmp ult i64 %117, 10, !dbg !13749
  br i1 %cmp140, label %if.then142, label %if.end177, !dbg !13750

if.then142:                                       ; preds = %do.end139
  %118 = load i32, i32* %inexact_style, align 4, !dbg !13751, !tbaa !2468
  %cmp143 = icmp eq i32 %118, 1, !dbg !13754
  br i1 %cmp143, label %cond.true145, label %cond.false150, !dbg !13755

cond.true145:                                     ; preds = %if.then142
  %119 = load i32, i32* %rounding, align 4, !dbg !13756, !tbaa !2468
  %120 = load i32, i32* %tenths, align 4, !dbg !13757, !tbaa !2468
  %and146 = and i32 %120, 1, !dbg !13758
  %add147 = add nsw i32 %119, %and146, !dbg !13759
  %cmp148 = icmp slt i32 2, %add147, !dbg !13760
  br i1 %cmp148, label %if.then156, label %if.end163, !dbg !13751

cond.false150:                                    ; preds = %if.then142
  %121 = load i32, i32* %inexact_style, align 4, !dbg !13761, !tbaa !2468
  %cmp151 = icmp eq i32 %121, 0, !dbg !13762
  br i1 %cmp151, label %land.lhs.true153, label %if.end163, !dbg !13763

land.lhs.true153:                                 ; preds = %cond.false150
  %122 = load i32, i32* %rounding, align 4, !dbg !13764, !tbaa !2468
  %cmp154 = icmp slt i32 0, %122, !dbg !13765
  br i1 %cmp154, label %if.then156, label %if.end163, !dbg !13755

if.then156:                                       ; preds = %land.lhs.true153, %cond.true145
  %123 = load i32, i32* %tenths, align 4, !dbg !13766, !tbaa !2468
  %inc157 = add nsw i32 %123, 1, !dbg !13766
  store i32 %inc157, i32* %tenths, align 4, !dbg !13766, !tbaa !2468
  store i32 0, i32* %rounding, align 4, !dbg !13768, !tbaa !2468
  %124 = load i32, i32* %tenths, align 4, !dbg !13769, !tbaa !2468
  %cmp158 = icmp eq i32 %124, 10, !dbg !13771
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !13772

if.then160:                                       ; preds = %if.then156
  %125 = load i64, i64* %amt, align 8, !dbg !13773, !tbaa !2611
  %inc161 = add i64 %125, 1, !dbg !13773
  store i64 %inc161, i64* %amt, align 8, !dbg !13773, !tbaa !2611
  store i32 0, i32* %tenths, align 4, !dbg !13775, !tbaa !2468
  br label %if.end162, !dbg !13776

if.end162:                                        ; preds = %if.then160, %if.then156
  br label %if.end163, !dbg !13777

if.end163:                                        ; preds = %if.end162, %land.lhs.true153, %cond.false150, %cond.true145
  %126 = load i64, i64* %amt, align 8, !dbg !13778, !tbaa !2611
  %cmp164 = icmp ult i64 %126, 10, !dbg !13780
  br i1 %cmp164, label %land.lhs.true166, label %if.end176, !dbg !13781

land.lhs.true166:                                 ; preds = %if.end163
  %127 = load i32, i32* %tenths, align 4, !dbg !13782, !tbaa !2468
  %tobool167 = icmp ne i32 %127, 0, !dbg !13782
  br i1 %tobool167, label %if.then171, label %lor.lhs.false168, !dbg !13783

lor.lhs.false168:                                 ; preds = %land.lhs.true166
  %128 = load i32, i32* %opts.addr, align 4, !dbg !13784, !tbaa !2468
  %and169 = and i32 %128, 8, !dbg !13785
  %tobool170 = icmp ne i32 %and169, 0, !dbg !13785
  br i1 %tobool170, label %if.end176, label %if.then171, !dbg !13786

if.then171:                                       ; preds = %lor.lhs.false168, %land.lhs.true166
  %129 = load i32, i32* %tenths, align 4, !dbg !13787, !tbaa !2468
  %add172 = add nsw i32 48, %129, !dbg !13789
  %conv173 = trunc i32 %add172 to i8, !dbg !13790
  %130 = load i8*, i8** %p, align 8, !dbg !13791, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %130, i32 -1, !dbg !13791
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13791, !tbaa !2474
  store i8 %conv173, i8* %incdec.ptr, align 1, !dbg !13792, !tbaa !2529, !ctir !144
  %131 = load i64, i64* %decimal_pointlen, align 8, !dbg !13793, !tbaa !2611
  %132 = load i8*, i8** %p, align 8, !dbg !13794, !tbaa !2474
  %idx.neg174 = sub i64 0, %131, !dbg !13794
  %add.ptr175 = getelementptr inbounds i8, i8* %132, i64 %idx.neg174, !dbg !13794
  store i8* %add.ptr175, i8** %p, align 8, !dbg !13794, !tbaa !2474
  %133 = load i8*, i8** %p, align 8, !dbg !13795, !tbaa !2474
  %134 = load i8*, i8** %decimal_point, align 8, !dbg !13796, !tbaa !2474
  %135 = load i64, i64* %decimal_pointlen, align 8, !dbg !13797, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %133, i8* align 1 %134, i64 %135, i1 false), !dbg !13798
  store i32 0, i32* %rounding, align 4, !dbg !13799, !tbaa !2468
  store i32 0, i32* %tenths, align 4, !dbg !13800, !tbaa !2468
  br label %if.end176, !dbg !13801

if.end176:                                        ; preds = %if.then171, %lor.lhs.false168, %if.end163
  br label %if.end177, !dbg !13802

if.end177:                                        ; preds = %if.end176, %do.end139
  br label %if.end178, !dbg !13803

if.end178:                                        ; preds = %if.end177, %if.then97
  br label %if.end179, !dbg !13804

if.end179:                                        ; preds = %if.end178, %use_integer_arithmetic
  %136 = load i32, i32* %inexact_style, align 4, !dbg !13805, !tbaa !2468
  %cmp180 = icmp eq i32 %136, 1, !dbg !13807
  br i1 %cmp180, label %cond.true182, label %cond.false191, !dbg !13808

cond.true182:                                     ; preds = %if.end179
  %137 = load i32, i32* %tenths, align 4, !dbg !13809, !tbaa !2468
  %138 = load i32, i32* %rounding, align 4, !dbg !13810, !tbaa !2468
  %conv183 = sext i32 %138 to i64, !dbg !13810
  %139 = load i64, i64* %amt, align 8, !dbg !13811, !tbaa !2611
  %and184 = and i64 %139, 1, !dbg !13812
  %add185 = add i64 %conv183, %and184, !dbg !13813
  %cmp186 = icmp ult i64 0, %add185, !dbg !13814
  %conv187 = zext i1 %cmp186 to i32, !dbg !13814
  %add188 = add nsw i32 %137, %conv187, !dbg !13815
  %cmp189 = icmp slt i32 5, %add188, !dbg !13816
  br i1 %cmp189, label %if.then198, label %if.end219, !dbg !13805

cond.false191:                                    ; preds = %if.end179
  %140 = load i32, i32* %inexact_style, align 4, !dbg !13817, !tbaa !2468
  %cmp192 = icmp eq i32 %140, 0, !dbg !13818
  br i1 %cmp192, label %land.lhs.true194, label %if.end219, !dbg !13819

land.lhs.true194:                                 ; preds = %cond.false191
  %141 = load i32, i32* %tenths, align 4, !dbg !13820, !tbaa !2468
  %142 = load i32, i32* %rounding, align 4, !dbg !13821, !tbaa !2468
  %add195 = add nsw i32 %141, %142, !dbg !13822
  %cmp196 = icmp slt i32 0, %add195, !dbg !13823
  br i1 %cmp196, label %if.then198, label %if.end219, !dbg !13808

if.then198:                                       ; preds = %land.lhs.true194, %cond.true182
  %143 = load i64, i64* %amt, align 8, !dbg !13824, !tbaa !2611
  %inc199 = add i64 %143, 1, !dbg !13824
  store i64 %inc199, i64* %amt, align 8, !dbg !13824, !tbaa !2611
  %144 = load i32, i32* %opts.addr, align 4, !dbg !13826, !tbaa !2468
  %and200 = and i32 %144, 16, !dbg !13828
  %tobool201 = icmp ne i32 %and200, 0, !dbg !13828
  br i1 %tobool201, label %land.lhs.true202, label %if.end218, !dbg !13829

land.lhs.true202:                                 ; preds = %if.then198
  %145 = load i64, i64* %amt, align 8, !dbg !13830, !tbaa !2611
  %146 = load i32, i32* %base, align 4, !dbg !13831, !tbaa !2468
  %conv203 = zext i32 %146 to i64, !dbg !13831
  %cmp204 = icmp eq i64 %145, %conv203, !dbg !13832
  br i1 %cmp204, label %land.lhs.true206, label %if.end218, !dbg !13833

land.lhs.true206:                                 ; preds = %land.lhs.true202
  %147 = load i32, i32* %exponent, align 4, !dbg !13834, !tbaa !2468
  %148 = load i32, i32* %exponent_max, align 4, !dbg !13835, !tbaa !2468
  %cmp207 = icmp slt i32 %147, %148, !dbg !13836
  br i1 %cmp207, label %if.then209, label %if.end218, !dbg !13837

if.then209:                                       ; preds = %land.lhs.true206
  %149 = load i32, i32* %exponent, align 4, !dbg !13838, !tbaa !2468
  %inc210 = add nsw i32 %149, 1, !dbg !13838
  store i32 %inc210, i32* %exponent, align 4, !dbg !13838, !tbaa !2468
  %150 = load i32, i32* %opts.addr, align 4, !dbg !13840, !tbaa !2468
  %and211 = and i32 %150, 8, !dbg !13842
  %tobool212 = icmp ne i32 %and211, 0, !dbg !13842
  br i1 %tobool212, label %if.end217, label %if.then213, !dbg !13843

if.then213:                                       ; preds = %if.then209
  %151 = load i8*, i8** %p, align 8, !dbg !13844, !tbaa !2474
  %incdec.ptr214 = getelementptr inbounds i8, i8* %151, i32 -1, !dbg !13844
  store i8* %incdec.ptr214, i8** %p, align 8, !dbg !13844, !tbaa !2474
  store i8 48, i8* %incdec.ptr214, align 1, !dbg !13846, !tbaa !2529, !ctir !144
  %152 = load i64, i64* %decimal_pointlen, align 8, !dbg !13847, !tbaa !2611
  %153 = load i8*, i8** %p, align 8, !dbg !13848, !tbaa !2474
  %idx.neg215 = sub i64 0, %152, !dbg !13848
  %add.ptr216 = getelementptr inbounds i8, i8* %153, i64 %idx.neg215, !dbg !13848
  store i8* %add.ptr216, i8** %p, align 8, !dbg !13848, !tbaa !2474
  %154 = load i8*, i8** %p, align 8, !dbg !13849, !tbaa !2474
  %155 = load i8*, i8** %decimal_point, align 8, !dbg !13850, !tbaa !2474
  %156 = load i64, i64* %decimal_pointlen, align 8, !dbg !13851, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %155, i64 %156, i1 false), !dbg !13852
  br label %if.end217, !dbg !13853

if.end217:                                        ; preds = %if.then213, %if.then209
  store i64 1, i64* %amt, align 8, !dbg !13854, !tbaa !2611
  br label %if.end218, !dbg !13855

if.end218:                                        ; preds = %if.end217, %land.lhs.true206, %land.lhs.true202, %if.then198
  br label %if.end219, !dbg !13856

if.end219:                                        ; preds = %if.end218, %land.lhs.true194, %cond.false191, %cond.true182
  %157 = load i8*, i8** %p, align 8, !dbg !13857, !tbaa !2474
  store i8* %157, i8** %integerlim, align 8, !dbg !13858, !tbaa !2474
  br label %do.body220, !dbg !13859

do.body220:                                       ; preds = %do.cond226, %if.end219
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !13860, metadata !DIExpression()), !dbg !13862
  %158 = load i64, i64* %amt, align 8, !dbg !13863, !tbaa !2611
  %rem221 = urem i64 %158, 10, !dbg !13864
  %conv222 = trunc i64 %rem221 to i32, !dbg !13863
  store i32 %conv222, i32* %digit, align 4, !dbg !13862, !tbaa !2468
  %159 = load i32, i32* %digit, align 4, !dbg !13865, !tbaa !2468
  %add223 = add nsw i32 %159, 48, !dbg !13866
  %conv224 = trunc i32 %add223 to i8, !dbg !13865
  %160 = load i8*, i8** %p, align 8, !dbg !13867, !tbaa !2474
  %incdec.ptr225 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !13867
  store i8* %incdec.ptr225, i8** %p, align 8, !dbg !13867, !tbaa !2474
  store i8 %conv224, i8* %incdec.ptr225, align 1, !dbg !13868, !tbaa !2529, !ctir !144
  br label %do.cond226, !dbg !13869

do.cond226:                                       ; preds = %do.body220
  %161 = load i64, i64* %amt, align 8, !dbg !13870, !tbaa !2611
  %div227 = udiv i64 %161, 10, !dbg !13870
  store i64 %div227, i64* %amt, align 8, !dbg !13870, !tbaa !2611
  %cmp228 = icmp ne i64 %div227, 0, !dbg !13871
  br i1 %cmp228, label %do.body220, label %do.end230, !dbg !13869, !llvm.loop !13872

do.end230:                                        ; preds = %do.cond226
  br label %do_grouping, !dbg !13874

do_grouping:                                      ; preds = %do.end230, %if.end90
  call void @llvm.dbg.label(metadata !13875), !dbg !13876
  %162 = load i32, i32* %opts.addr, align 4, !dbg !13877, !tbaa !2468
  %and231 = and i32 %162, 4, !dbg !13879
  %tobool232 = icmp ne i32 %and231, 0, !dbg !13879
  br i1 %tobool232, label %if.then233, label %if.end235, !dbg !13880

if.then233:                                       ; preds = %do_grouping
  %163 = load i8*, i8** %p, align 8, !dbg !13881, !tbaa !2474
  %164 = load i8*, i8** %integerlim, align 8, !dbg !13882, !tbaa !2474
  %165 = load i8*, i8** %p, align 8, !dbg !13883, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %164 to i64, !dbg !13884
  %sub.ptr.rhs.cast = ptrtoint i8* %165 to i64, !dbg !13884
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13884
  %166 = load i8*, i8** %grouping, align 8, !dbg !13885, !tbaa !2474
  %167 = load i8*, i8** %thousands_sep, align 8, !dbg !13886, !tbaa !2474
  %call234 = call i8* @group_number(i8* %163, i64 %sub.ptr.sub, i8* %166, i8* %167), !dbg !13887
  store i8* %call234, i8** %p, align 8, !dbg !13888, !tbaa !2474
  br label %if.end235, !dbg !13889

if.end235:                                        ; preds = %if.then233, %do_grouping
  %168 = load i32, i32* %opts.addr, align 4, !dbg !13890, !tbaa !2468
  %and236 = and i32 %168, 128, !dbg !13892
  %tobool237 = icmp ne i32 %and236, 0, !dbg !13892
  br i1 %tobool237, label %if.then238, label %if.end288, !dbg !13893

if.then238:                                       ; preds = %if.end235
  %169 = load i32, i32* %exponent, align 4, !dbg !13894, !tbaa !2468
  %cmp239 = icmp slt i32 %169, 0, !dbg !13897
  br i1 %cmp239, label %if.then241, label %if.end251, !dbg !13898

if.then241:                                       ; preds = %if.then238
  call void @llvm.dbg.declare(metadata i64* %power, metadata !13899, metadata !DIExpression()), !dbg !13901
  store i32 0, i32* %exponent, align 4, !dbg !13902, !tbaa !2468
  store i64 1, i64* %power, align 8, !dbg !13903, !tbaa !2611
  br label %for.cond, !dbg !13905

for.cond:                                         ; preds = %for.inc, %if.then241
  %170 = load i64, i64* %power, align 8, !dbg !13906, !tbaa !2611
  %171 = load i64, i64* %to_block_size.addr, align 8, !dbg !13908, !tbaa !2611
  %cmp242 = icmp ult i64 %170, %171, !dbg !13909
  br i1 %cmp242, label %for.body, label %for.end, !dbg !13910

for.body:                                         ; preds = %for.cond
  %172 = load i32, i32* %exponent, align 4, !dbg !13911, !tbaa !2468
  %inc244 = add nsw i32 %172, 1, !dbg !13911
  store i32 %inc244, i32* %exponent, align 4, !dbg !13911, !tbaa !2468
  %173 = load i32, i32* %exponent_max, align 4, !dbg !13913, !tbaa !2468
  %cmp245 = icmp eq i32 %inc244, %173, !dbg !13914
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !13915

if.then247:                                       ; preds = %for.body
  br label %for.end, !dbg !13916

if.end248:                                        ; preds = %for.body
  br label %for.inc, !dbg !13913

for.inc:                                          ; preds = %if.end248
  %174 = load i32, i32* %base, align 4, !dbg !13917, !tbaa !2468
  %conv249 = zext i32 %174 to i64, !dbg !13917
  %175 = load i64, i64* %power, align 8, !dbg !13918, !tbaa !2611
  %mul250 = mul i64 %175, %conv249, !dbg !13918
  store i64 %mul250, i64* %power, align 8, !dbg !13918, !tbaa !2611
  br label %for.cond, !dbg !13919, !llvm.loop !13920

for.end:                                          ; preds = %if.then247, %for.cond
  br label %if.end251, !dbg !13922

if.end251:                                        ; preds = %for.end, %if.then238
  %176 = load i32, i32* %exponent, align 4, !dbg !13923, !tbaa !2468
  %177 = load i32, i32* %opts.addr, align 4, !dbg !13925, !tbaa !2468
  %and252 = and i32 %177, 256, !dbg !13926
  %or = or i32 %176, %and252, !dbg !13927
  %tobool253 = icmp ne i32 %or, 0, !dbg !13927
  br i1 %tobool253, label %land.lhs.true254, label %if.end259, !dbg !13928

land.lhs.true254:                                 ; preds = %if.end251
  %178 = load i32, i32* %opts.addr, align 4, !dbg !13929, !tbaa !2468
  %and255 = and i32 %178, 64, !dbg !13930
  %tobool256 = icmp ne i32 %and255, 0, !dbg !13930
  br i1 %tobool256, label %if.then257, label %if.end259, !dbg !13931

if.then257:                                       ; preds = %land.lhs.true254
  %179 = load i8*, i8** %psuffix, align 8, !dbg !13932, !tbaa !2474
  %incdec.ptr258 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !13932
  store i8* %incdec.ptr258, i8** %psuffix, align 8, !dbg !13932, !tbaa !2474
  store i8 32, i8* %179, align 1, !dbg !13933, !tbaa !2529, !ctir !144
  br label %if.end259, !dbg !13934

if.end259:                                        ; preds = %if.then257, %land.lhs.true254, %if.end251
  %180 = load i32, i32* %exponent, align 4, !dbg !13935, !tbaa !2468
  %tobool260 = icmp ne i32 %180, 0, !dbg !13935
  br i1 %tobool260, label %if.then261, label %if.end275, !dbg !13937

if.then261:                                       ; preds = %if.end259
  %181 = load i32, i32* %opts.addr, align 4, !dbg !13938, !tbaa !2468
  %and262 = and i32 %181, 32, !dbg !13939
  %tobool263 = icmp ne i32 %and262, 0, !dbg !13939
  br i1 %tobool263, label %cond.false268, label %land.lhs.true264, !dbg !13940

land.lhs.true264:                                 ; preds = %if.then261
  %182 = load i32, i32* %exponent, align 4, !dbg !13941, !tbaa !2468
  %cmp265 = icmp eq i32 %182, 1, !dbg !13942
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !13943

cond.true267:                                     ; preds = %land.lhs.true264
  br label %cond.end271, !dbg !13943

cond.false268:                                    ; preds = %land.lhs.true264, %if.then261
  %183 = load i32, i32* %exponent, align 4, !dbg !13944, !tbaa !2468
  %idxprom = sext i32 %183 to i64, !dbg !13945
  %arrayidx269 = getelementptr inbounds [9 x i8], [9 x i8]* @power_letter, i64 0, i64 %idxprom, !dbg !13945, !ctir !1315
  %184 = load i8, i8* %arrayidx269, align 1, !dbg !13945, !tbaa !2529
  %conv270 = sext i8 %184 to i32, !dbg !13945
  br label %cond.end271, !dbg !13943

cond.end271:                                      ; preds = %cond.false268, %cond.true267
  %cond272 = phi i32 [ 107, %cond.true267 ], [ %conv270, %cond.false268 ], !dbg !13943
  %conv273 = trunc i32 %cond272 to i8, !dbg !13946
  %185 = load i8*, i8** %psuffix, align 8, !dbg !13947, !tbaa !2474
  %incdec.ptr274 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !13947
  store i8* %incdec.ptr274, i8** %psuffix, align 8, !dbg !13947, !tbaa !2474
  store i8 %conv273, i8* %185, align 1, !dbg !13948, !tbaa !2529, !ctir !144
  br label %if.end275, !dbg !13949

if.end275:                                        ; preds = %cond.end271, %if.end259
  %186 = load i32, i32* %opts.addr, align 4, !dbg !13950, !tbaa !2468
  %and276 = and i32 %186, 256, !dbg !13952
  %tobool277 = icmp ne i32 %and276, 0, !dbg !13952
  br i1 %tobool277, label %if.then278, label %if.end287, !dbg !13953

if.then278:                                       ; preds = %if.end275
  %187 = load i32, i32* %opts.addr, align 4, !dbg !13954, !tbaa !2468
  %and279 = and i32 %187, 32, !dbg !13957
  %tobool280 = icmp ne i32 %and279, 0, !dbg !13957
  br i1 %tobool280, label %land.lhs.true281, label %if.end285, !dbg !13958

land.lhs.true281:                                 ; preds = %if.then278
  %188 = load i32, i32* %exponent, align 4, !dbg !13959, !tbaa !2468
  %tobool282 = icmp ne i32 %188, 0, !dbg !13959
  br i1 %tobool282, label %if.then283, label %if.end285, !dbg !13960

if.then283:                                       ; preds = %land.lhs.true281
  %189 = load i8*, i8** %psuffix, align 8, !dbg !13961, !tbaa !2474
  %incdec.ptr284 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !13961
  store i8* %incdec.ptr284, i8** %psuffix, align 8, !dbg !13961, !tbaa !2474
  store i8 105, i8* %189, align 1, !dbg !13962, !tbaa !2529, !ctir !144
  br label %if.end285, !dbg !13963

if.end285:                                        ; preds = %if.then283, %land.lhs.true281, %if.then278
  %190 = load i8*, i8** %psuffix, align 8, !dbg !13964, !tbaa !2474
  %incdec.ptr286 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !13964
  store i8* %incdec.ptr286, i8** %psuffix, align 8, !dbg !13964, !tbaa !2474
  store i8 66, i8* %190, align 1, !dbg !13965, !tbaa !2529, !ctir !144
  br label %if.end287, !dbg !13966

if.end287:                                        ; preds = %if.end285, %if.end275
  br label %if.end288, !dbg !13967

if.end288:                                        ; preds = %if.end287, %if.end235
  %191 = load i8*, i8** %psuffix, align 8, !dbg !13968, !tbaa !2474
  store i8 0, i8* %191, align 1, !dbg !13969, !tbaa !2529, !ctir !144
  %192 = load i8*, i8** %p, align 8, !dbg !13970, !tbaa !2474
  ret i8* %192, !dbg !13971
}

; Function Attrs: nounwind
declare dso_local %struct.lconv* @localeconv() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal x86_fp80 @adjust_value(i32 %inexact_style, x86_fp80 %value) #0 !dbg !13972 !ctir !1320 {
entry:
  %inexact_style.addr = alloca i32, align 4, !ctir !27
  %value.addr = alloca x86_fp80, align 16, !ctir !1314
  %u = alloca i64, align 8, !ctir !168
  store i32 %inexact_style, i32* %inexact_style.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %inexact_style.addr, metadata !13973, metadata !DIExpression()), !dbg !13974
  store x86_fp80 %value, x86_fp80* %value.addr, align 16, !tbaa !13571
  call void @llvm.dbg.declare(metadata x86_fp80* %value.addr, metadata !13975, metadata !DIExpression()), !dbg !13976
  %0 = load i32, i32* %inexact_style.addr, align 4, !dbg !13977, !tbaa !2468
  %cmp = icmp ne i32 %0, 1, !dbg !13979
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13980

land.lhs.true:                                    ; preds = %entry
  %1 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13981, !tbaa !13571
  %cmp1 = fcmp olt x86_fp80 %1, 0xK403EFFFFFFFFFFFFFFFF, !dbg !13982
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13983

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %u, metadata !13984, metadata !DIExpression()), !dbg !13986
  %2 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13987, !tbaa !13571
  %conv = fptoui x86_fp80 %2 to i64, !dbg !13987
  store i64 %conv, i64* %u, align 8, !dbg !13986, !tbaa !2611
  %3 = load i64, i64* %u, align 8, !dbg !13988, !tbaa !2611
  %4 = load i32, i32* %inexact_style.addr, align 4, !dbg !13989, !tbaa !2468
  %cmp2 = icmp eq i32 %4, 0, !dbg !13990
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !13991

land.rhs:                                         ; preds = %if.then
  %5 = load i64, i64* %u, align 8, !dbg !13992, !tbaa !2611
  %conv4 = uitofp i64 %5 to x86_fp80, !dbg !13992
  %6 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13993, !tbaa !13571
  %cmp5 = fcmp une x86_fp80 %conv4, %6, !dbg !13994
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %cmp5, %land.rhs ], !dbg !13995
  %land.ext = zext i1 %7 to i32, !dbg !13991
  %conv7 = sext i32 %land.ext to i64, !dbg !13996
  %add = add i64 %3, %conv7, !dbg !13997
  %conv8 = uitofp i64 %add to x86_fp80, !dbg !13988
  store x86_fp80 %conv8, x86_fp80* %value.addr, align 16, !dbg !13998, !tbaa !13571
  br label %if.end, !dbg !13999

if.end:                                           ; preds = %land.end, %land.lhs.true, %entry
  %8 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14000, !tbaa !13571
  ret x86_fp80 %8, !dbg !14001
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @group_number(i8* %number, i64 %numberlen, i8* %grouping, i8* %thousands_sep) #0 !dbg !14002 !ctir !1322 {
entry:
  %number.addr = alloca i8*, align 8, !ctir !143
  %numberlen.addr = alloca i64, align 8, !ctir !149
  %grouping.addr = alloca i8*, align 8, !ctir !146
  %thousands_sep.addr = alloca i8*, align 8, !ctir !146
  %d = alloca i8*, align 8, !ctir !143
  %grouplen = alloca i64, align 8, !ctir !149
  %thousands_seplen = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %buf = alloca [41 x i8], align 16, !ctir !1324
  %g = alloca i8, align 1, !ctir !579
  store i8* %number, i8** %number.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %number.addr, metadata !14003, metadata !DIExpression()), !dbg !14004
  store i64 %numberlen, i64* %numberlen.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %numberlen.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  store i8* %grouping, i8** %grouping.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %grouping.addr, metadata !14007, metadata !DIExpression()), !dbg !14008
  store i8* %thousands_sep, i8** %thousands_sep.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %thousands_sep.addr, metadata !14009, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.declare(metadata i8** %d, metadata !14011, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.declare(metadata i64* %grouplen, metadata !14013, metadata !DIExpression()), !dbg !14014
  store i64 -1, i64* %grouplen, align 8, !dbg !14014, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %thousands_seplen, metadata !14015, metadata !DIExpression()), !dbg !14016
  %0 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !14017, !tbaa !2474
  %call = call i64 @strlen(i8* %0) #16, !dbg !14018
  store i64 %call, i64* %thousands_seplen, align 8, !dbg !14016, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14019, metadata !DIExpression()), !dbg !14020
  %1 = load i64, i64* %numberlen.addr, align 8, !dbg !14021, !tbaa !2611
  store i64 %1, i64* %i, align 8, !dbg !14020, !tbaa !2611
  call void @llvm.dbg.declare(metadata [41 x i8]* %buf, metadata !14022, metadata !DIExpression()), !dbg !14023
  %arraydecay = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !14024
  %2 = load i8*, i8** %number.addr, align 8, !dbg !14025, !tbaa !2474
  %3 = load i64, i64* %numberlen.addr, align 8, !dbg !14026, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %2, i64 %3, i1 false), !dbg !14024
  %4 = load i8*, i8** %number.addr, align 8, !dbg !14027, !tbaa !2474
  %5 = load i64, i64* %numberlen.addr, align 8, !dbg !14028, !tbaa !2611
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !14029
  store i8* %add.ptr, i8** %d, align 8, !dbg !14030, !tbaa !2474
  br label %for.cond, !dbg !14031

for.cond:                                         ; preds = %if.end13, %entry
  call void @llvm.dbg.declare(metadata i8* %g, metadata !14032, metadata !DIExpression()), !dbg !14036
  %6 = load i8*, i8** %grouping.addr, align 8, !dbg !14037, !tbaa !2474
  %7 = load i8, i8* %6, align 1, !dbg !14038, !tbaa !2529, !ctir !147
  store i8 %7, i8* %g, align 1, !dbg !14036, !tbaa !2529
  %8 = load i8, i8* %g, align 1, !dbg !14039, !tbaa !2529
  %tobool = icmp ne i8 %8, 0, !dbg !14039
  br i1 %tobool, label %if.then, label %if.end, !dbg !14041

if.then:                                          ; preds = %for.cond
  %9 = load i8, i8* %g, align 1, !dbg !14042, !tbaa !2529
  %conv = zext i8 %9 to i32, !dbg !14042
  %cmp = icmp slt i32 %conv, 127, !dbg !14044
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14042

cond.true:                                        ; preds = %if.then
  %10 = load i8, i8* %g, align 1, !dbg !14045, !tbaa !2529
  %conv2 = zext i8 %10 to i64, !dbg !14045
  br label %cond.end, !dbg !14042

cond.false:                                       ; preds = %if.then
  %11 = load i64, i64* %i, align 8, !dbg !14046, !tbaa !2611
  br label %cond.end, !dbg !14042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv2, %cond.true ], [ %11, %cond.false ], !dbg !14042
  store i64 %cond, i64* %grouplen, align 8, !dbg !14047, !tbaa !2611
  %12 = load i8*, i8** %grouping.addr, align 8, !dbg !14048, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !14048
  store i8* %incdec.ptr, i8** %grouping.addr, align 8, !dbg !14048, !tbaa !2474
  br label %if.end, !dbg !14049

if.end:                                           ; preds = %cond.end, %for.cond
  %13 = load i64, i64* %i, align 8, !dbg !14050, !tbaa !2611
  %14 = load i64, i64* %grouplen, align 8, !dbg !14052, !tbaa !2611
  %cmp3 = icmp ult i64 %13, %14, !dbg !14053
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !14054

if.then5:                                         ; preds = %if.end
  %15 = load i64, i64* %i, align 8, !dbg !14055, !tbaa !2611
  store i64 %15, i64* %grouplen, align 8, !dbg !14056, !tbaa !2611
  br label %if.end6, !dbg !14057

if.end6:                                          ; preds = %if.then5, %if.end
  %16 = load i64, i64* %grouplen, align 8, !dbg !14058, !tbaa !2611
  %17 = load i8*, i8** %d, align 8, !dbg !14059, !tbaa !2474
  %idx.neg = sub i64 0, %16, !dbg !14059
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %idx.neg, !dbg !14059
  store i8* %add.ptr7, i8** %d, align 8, !dbg !14059, !tbaa !2474
  %18 = load i64, i64* %grouplen, align 8, !dbg !14060, !tbaa !2611
  %19 = load i64, i64* %i, align 8, !dbg !14061, !tbaa !2611
  %sub = sub i64 %19, %18, !dbg !14061
  store i64 %sub, i64* %i, align 8, !dbg !14061, !tbaa !2611
  %20 = load i8*, i8** %d, align 8, !dbg !14062, !tbaa !2474
  %arraydecay8 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !14063
  %21 = load i64, i64* %i, align 8, !dbg !14064, !tbaa !2611
  %add.ptr9 = getelementptr inbounds i8, i8* %arraydecay8, i64 %21, !dbg !14065
  %22 = load i64, i64* %grouplen, align 8, !dbg !14066, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %add.ptr9, i64 %22, i1 false), !dbg !14067
  %23 = load i64, i64* %i, align 8, !dbg !14068, !tbaa !2611
  %cmp10 = icmp eq i64 %23, 0, !dbg !14070
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !14071

if.then12:                                        ; preds = %if.end6
  %24 = load i8*, i8** %d, align 8, !dbg !14072, !tbaa !2474
  ret i8* %24, !dbg !14073

if.end13:                                         ; preds = %if.end6
  %25 = load i64, i64* %thousands_seplen, align 8, !dbg !14074, !tbaa !2611
  %26 = load i8*, i8** %d, align 8, !dbg !14075, !tbaa !2474
  %idx.neg14 = sub i64 0, %25, !dbg !14075
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %idx.neg14, !dbg !14075
  store i8* %add.ptr15, i8** %d, align 8, !dbg !14075, !tbaa !2474
  %27 = load i8*, i8** %d, align 8, !dbg !14076, !tbaa !2474
  %28 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !14077, !tbaa !2474
  %29 = load i64, i64* %thousands_seplen, align 8, !dbg !14078, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false), !dbg !14079
  br label %for.cond, !dbg !14080, !llvm.loop !14081
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @human_options(i8* %spec, i32* %opts, i64* %block_size) #0 !dbg !14084 !ctir !1316 {
entry:
  %spec.addr = alloca i8*, align 8, !ctir !146
  %opts.addr = alloca i32*, align 8, !ctir !512
  %block_size.addr = alloca i64*, align 8, !ctir !1318
  %e = alloca i32, align 4, !ctir !1319
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !14085, metadata !DIExpression()), !dbg !14086
  store i32* %opts, i32** %opts.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %opts.addr, metadata !14087, metadata !DIExpression()), !dbg !14088
  store i64* %block_size, i64** %block_size.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !14089, metadata !DIExpression()), !dbg !14090
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14091, metadata !DIExpression()), !dbg !14092
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !14093, !tbaa !2474
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !14094, !tbaa !2474
  %2 = load i32*, i32** %opts.addr, align 8, !dbg !14095, !tbaa !2474
  %call = call i32 @humblock(i8* %0, i64* %1, i32* %2), !dbg !14096
  store i32 %call, i32* %e, align 4, !dbg !14092, !tbaa !2529
  %3 = load i64*, i64** %block_size.addr, align 8, !dbg !14097, !tbaa !2474
  %4 = load i64, i64* %3, align 8, !dbg !14099, !tbaa !2611, !ctir !168
  %cmp = icmp eq i64 %4, 0, !dbg !14100
  br i1 %cmp, label %if.then, label %if.end, !dbg !14101

if.then:                                          ; preds = %entry
  %call1 = call i64 @default_block_size(), !dbg !14102
  %5 = load i64*, i64** %block_size.addr, align 8, !dbg !14104, !tbaa !2474
  store i64 %call1, i64* %5, align 8, !dbg !14105, !tbaa !2611, !ctir !168
  store i32 4, i32* %e, align 4, !dbg !14106, !tbaa !2529
  br label %if.end, !dbg !14107

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %e, align 4, !dbg !14108, !tbaa !2529
  ret i32 %6, !dbg !14109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @humblock(i8* %spec, i64* %block_size, i32* %options) #0 !dbg !14110 !ctir !1327 {
entry:
  %retval = alloca i32, align 4, !ctir !1319
  %spec.addr = alloca i8*, align 8, !ctir !146
  %block_size.addr = alloca i64*, align 8, !ctir !1318
  %options.addr = alloca i32*, align 8, !ctir !512
  %i = alloca i32, align 4, !ctir !27
  %opts = alloca i32, align 4, !ctir !27
  %ptr = alloca i8*, align 8, !ctir !143
  %e = alloca i32, align 4, !ctir !1319
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !14111, metadata !DIExpression()), !dbg !14112
  store i64* %block_size, i64** %block_size.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !14113, metadata !DIExpression()), !dbg !14114
  store i32* %options, i32** %options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %options.addr, metadata !14115, metadata !DIExpression()), !dbg !14116
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14117, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.declare(metadata i32* %opts, metadata !14119, metadata !DIExpression()), !dbg !14120
  store i32 0, i32* %opts, align 4, !dbg !14120, !tbaa !2468
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !14121, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !14121
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !14123

land.lhs.true:                                    ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.335, i64 0, i64 0)) #13, !dbg !14124
  store i8* %call, i8** %spec.addr, align 8, !dbg !14125, !tbaa !2474
  %tobool1 = icmp ne i8* %call, null, !dbg !14125
  br i1 %tobool1, label %if.else, label %land.lhs.true2, !dbg !14126

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.336, i64 0, i64 0)) #13, !dbg !14127
  store i8* %call3, i8** %spec.addr, align 8, !dbg !14128, !tbaa !2474
  %tobool4 = icmp ne i8* %call3, null, !dbg !14128
  br i1 %tobool4, label %if.else, label %if.then, !dbg !14129

if.then:                                          ; preds = %land.lhs.true2
  %call5 = call i64 @default_block_size(), !dbg !14130
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !14131, !tbaa !2474
  store i64 %call5, i64* %1, align 8, !dbg !14132, !tbaa !2611, !ctir !168
  br label %if.end51, !dbg !14133

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %2 = load i8*, i8** %spec.addr, align 8, !dbg !14134, !tbaa !2474
  %3 = load i8, i8* %2, align 1, !dbg !14137, !tbaa !2529, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !14137
  %cmp = icmp eq i32 %conv, 39, !dbg !14138
  br i1 %cmp, label %if.then7, label %if.end, !dbg !14139

if.then7:                                         ; preds = %if.else
  %4 = load i32, i32* %opts, align 4, !dbg !14140, !tbaa !2468
  %or = or i32 %4, 4, !dbg !14140
  store i32 %or, i32* %opts, align 4, !dbg !14140, !tbaa !2468
  %5 = load i8*, i8** %spec.addr, align 8, !dbg !14142, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !14142
  store i8* %incdec.ptr, i8** %spec.addr, align 8, !dbg !14142, !tbaa !2474
  br label %if.end, !dbg !14143

if.end:                                           ; preds = %if.then7, %if.else
  %6 = load i8*, i8** %spec.addr, align 8, !dbg !14144, !tbaa !2474
  %call8 = call i64 @argmatch(i8* %6, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @block_size_args, i64 0, i64 0), i8* bitcast ([2 x i32]* @block_size_opts to i8*), i64 4) #16, !dbg !14144
  %conv9 = trunc i64 %call8 to i32, !dbg !14144
  store i32 %conv9, i32* %i, align 4, !dbg !14146, !tbaa !2468
  %cmp10 = icmp sle i32 0, %conv9, !dbg !14147
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !14148

if.then12:                                        ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !14149, !tbaa !2468
  %idxprom = sext i32 %7 to i64, !dbg !14151
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @block_size_opts, i64 0, i64 %idxprom, !dbg !14151, !ctir !1330
  %8 = load i32, i32* %arrayidx, align 4, !dbg !14151, !tbaa !2468
  %9 = load i32, i32* %opts, align 4, !dbg !14152, !tbaa !2468
  %or13 = or i32 %9, %8, !dbg !14152
  store i32 %or13, i32* %opts, align 4, !dbg !14152, !tbaa !2468
  %10 = load i64*, i64** %block_size.addr, align 8, !dbg !14153, !tbaa !2474
  store i64 1, i64* %10, align 8, !dbg !14154, !tbaa !2611, !ctir !168
  br label %if.end50, !dbg !14155

if.else14:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !14156, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14159, metadata !DIExpression()), !dbg !14160
  %11 = load i8*, i8** %spec.addr, align 8, !dbg !14161, !tbaa !2474
  %12 = load i64*, i64** %block_size.addr, align 8, !dbg !14162, !tbaa !2474
  %call15 = call i32 @xstrtoumax(i8* %11, i8** %ptr, i32 0, i64* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.337, i64 0, i64 0)), !dbg !14163
  store i32 %call15, i32* %e, align 4, !dbg !14160, !tbaa !2529
  %13 = load i32, i32* %e, align 4, !dbg !14164, !tbaa !2529
  %cmp16 = icmp ne i32 %13, 0, !dbg !14166
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !14167

if.then18:                                        ; preds = %if.else14
  %14 = load i32*, i32** %options.addr, align 8, !dbg !14168, !tbaa !2474
  store i32 0, i32* %14, align 4, !dbg !14170, !tbaa !2468, !ctir !27
  %15 = load i32, i32* %e, align 4, !dbg !14171, !tbaa !2529
  store i32 %15, i32* %retval, align 4, !dbg !14172
  br label %return, !dbg !14172

if.end19:                                         ; preds = %if.else14
  br label %for.cond, !dbg !14173

for.cond:                                         ; preds = %for.inc, %if.end19
  %16 = load i8*, i8** %spec.addr, align 8, !dbg !14174, !tbaa !2474
  %17 = load i8, i8* %16, align 1, !dbg !14177, !tbaa !2529, !ctir !147
  %conv20 = sext i8 %17 to i32, !dbg !14177
  %cmp21 = icmp sle i32 48, %conv20, !dbg !14178
  br i1 %cmp21, label %land.rhs, label %land.end, !dbg !14179

land.rhs:                                         ; preds = %for.cond
  %18 = load i8*, i8** %spec.addr, align 8, !dbg !14180, !tbaa !2474
  %19 = load i8, i8* %18, align 1, !dbg !14181, !tbaa !2529, !ctir !147
  %conv23 = sext i8 %19 to i32, !dbg !14181
  %cmp24 = icmp sle i32 %conv23, 57, !dbg !14182
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp24, %land.rhs ], !dbg !14183
  %lnot = xor i1 %20, true, !dbg !14184
  br i1 %lnot, label %for.body, label %for.end, !dbg !14185

for.body:                                         ; preds = %land.end
  %21 = load i8*, i8** %spec.addr, align 8, !dbg !14186, !tbaa !2474
  %22 = load i8*, i8** %ptr, align 8, !dbg !14188, !tbaa !2474
  %cmp26 = icmp eq i8* %21, %22, !dbg !14189
  br i1 %cmp26, label %if.then28, label %if.end48, !dbg !14190

if.then28:                                        ; preds = %for.body
  %23 = load i32, i32* %opts, align 4, !dbg !14191, !tbaa !2468
  %or29 = or i32 %23, 128, !dbg !14191
  store i32 %or29, i32* %opts, align 4, !dbg !14191, !tbaa !2468
  %24 = load i8*, i8** %ptr, align 8, !dbg !14193, !tbaa !2474
  %arrayidx30 = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !14193, !ctir !143
  %25 = load i8, i8* %arrayidx30, align 1, !dbg !14193, !tbaa !2529
  %conv31 = sext i8 %25 to i32, !dbg !14193
  %cmp32 = icmp eq i32 %conv31, 66, !dbg !14195
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !14196

if.then34:                                        ; preds = %if.then28
  %26 = load i32, i32* %opts, align 4, !dbg !14197, !tbaa !2468
  %or35 = or i32 %26, 256, !dbg !14197
  store i32 %or35, i32* %opts, align 4, !dbg !14197, !tbaa !2468
  br label %if.end36, !dbg !14198

if.end36:                                         ; preds = %if.then34, %if.then28
  %27 = load i8*, i8** %ptr, align 8, !dbg !14199, !tbaa !2474
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !14199, !ctir !143
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !14199, !tbaa !2529
  %conv38 = sext i8 %28 to i32, !dbg !14199
  %cmp39 = icmp ne i32 %conv38, 66, !dbg !14201
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !14202

lor.lhs.false:                                    ; preds = %if.end36
  %29 = load i8*, i8** %ptr, align 8, !dbg !14203, !tbaa !2474
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i64 -2, !dbg !14203, !ctir !143
  %30 = load i8, i8* %arrayidx41, align 1, !dbg !14203, !tbaa !2529
  %conv42 = sext i8 %30 to i32, !dbg !14203
  %cmp43 = icmp eq i32 %conv42, 105, !dbg !14204
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !14205

if.then45:                                        ; preds = %lor.lhs.false, %if.end36
  %31 = load i32, i32* %opts, align 4, !dbg !14206, !tbaa !2468
  %or46 = or i32 %31, 32, !dbg !14206
  store i32 %or46, i32* %opts, align 4, !dbg !14206, !tbaa !2468
  br label %if.end47, !dbg !14207

if.end47:                                         ; preds = %if.then45, %lor.lhs.false
  br label %for.end, !dbg !14208

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !14188

for.inc:                                          ; preds = %if.end48
  %32 = load i8*, i8** %spec.addr, align 8, !dbg !14209, !tbaa !2474
  %incdec.ptr49 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !14209
  store i8* %incdec.ptr49, i8** %spec.addr, align 8, !dbg !14209, !tbaa !2474
  br label %for.cond, !dbg !14210, !llvm.loop !14211

for.end:                                          ; preds = %if.end47, %land.end
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.then12
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %33 = load i32, i32* %opts, align 4, !dbg !14213, !tbaa !2468
  %34 = load i32*, i32** %options.addr, align 8, !dbg !14214, !tbaa !2474
  store i32 %33, i32* %34, align 4, !dbg !14215, !tbaa !2468, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !14216
  br label %return, !dbg !14216

return:                                           ; preds = %if.end51, %if.then18
  %35 = load i32, i32* %retval, align 4, !dbg !14217
  ret i32 %35, !dbg !14217
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @default_block_size() #0 !dbg !14218 !ctir !1331 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.334, i64 0, i64 0)) #13, !dbg !14219
  %tobool = icmp ne i8* %call, null, !dbg !14219
  %0 = zext i1 %tobool to i64, !dbg !14219
  %cond = select i1 %tobool, i32 512, i32 1024, !dbg !14219
  %conv = sext i32 %cond to i64, !dbg !14219
  ret i64 %conv, !dbg !14220
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getuser(i32 %uid) #0 !dbg !14221 !ctir !1344 {
entry:
  %uid.addr = alloca i32, align 4, !ctir !675
  %tail = alloca %struct.userid*, align 8, !ctir !1346
  %match = alloca %struct.userid*, align 8, !ctir !1346
  %pwent = alloca %struct.passwd*, align 8, !ctir !1357
  %name = alloca i8*, align 8, !ctir !146
  store i32 %uid, i32* %uid.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !14222, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14224, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14226, metadata !DIExpression()), !dbg !14227
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14227, !tbaa !2474
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14228, !tbaa !2474
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14230, !tbaa !2474
  br label %for.cond, !dbg !14231

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14232, !tbaa !2474
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14234
  br i1 %tobool, label %for.body, label %for.end, !dbg !14234

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14235, !tbaa !2474
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14238, !ctir !1347
  %u = bitcast %union.anon.11* %id to i32*, !dbg !14239
  %3 = load i32, i32* %u, align 8, !dbg !14239, !tbaa !2529, !ctir !1351
  %4 = load i32, i32* %uid.addr, align 4, !dbg !14240, !tbaa !2468
  %cmp = icmp eq i32 %3, %4, !dbg !14241
  br i1 %cmp, label %if.then, label %if.end, !dbg !14242

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14243, !tbaa !2474
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14245, !tbaa !2474
  br label %for.end, !dbg !14246

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14247

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14248, !tbaa !2474
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14249, !ctir !1347
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14249, !tbaa !2474, !ctir !1346
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14250, !tbaa !2474
  br label %for.cond, !dbg !14251, !llvm.loop !14252

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14254, !tbaa !2474
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14256
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14257

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !14258, metadata !DIExpression()), !dbg !14260
  %9 = load i32, i32* %uid.addr, align 4, !dbg !14261, !tbaa !2468
  %call = call %struct.passwd* @getpwuid(i32 %9), !dbg !14262
  store %struct.passwd* %call, %struct.passwd** %pwent, align 8, !dbg !14260, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14263, metadata !DIExpression()), !dbg !14264
  %10 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14265, !tbaa !2474
  %tobool3 = icmp ne %struct.passwd* %10, null, !dbg !14265
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14265

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14266, !tbaa !2474
  %pw_name = getelementptr inbounds %struct.passwd, %struct.passwd* %11, i32 0, i32 0, !dbg !14267, !ctir !1358
  %12 = load i8*, i8** %pw_name, align 8, !dbg !14267, !tbaa !14268, !ctir !143
  br label %cond.end, !dbg !14265

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.342, i64 0, i64 0), %cond.false ], !dbg !14265
  store i8* %cond, i8** %name, align 8, !dbg !14264, !tbaa !2474
  %13 = load i8*, i8** %name, align 8, !dbg !14270, !tbaa !2474
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14270
  %add = add i64 %call4, 1, !dbg !14270
  %add5 = add i64 23, %add, !dbg !14270
  %and = and i64 %add5, -8, !dbg !14270
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14271
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14271
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14272, !tbaa !2474
  %15 = load i32, i32* %uid.addr, align 4, !dbg !14273, !tbaa !2468
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14274, !tbaa !2474
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14275, !ctir !1347
  %u8 = bitcast %union.anon.11* %id7 to i32*, !dbg !14276
  store i32 %15, i32* %u8, align 8, !dbg !14277, !tbaa !2529, !ctir !1351
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14278, !tbaa !2474
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14279, !ctir !1347
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14278
  %18 = load i8*, i8** %name, align 8, !dbg !14280, !tbaa !2474
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14281
  %19 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14282, !tbaa !2474
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14283, !tbaa !2474
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14284, !ctir !1347
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14285, !tbaa !2474, !ctir !1346
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14286, !tbaa !2474
  store %struct.userid* %21, %struct.userid** @user_alist, align 8, !dbg !14287, !tbaa !2474
  br label %if.end12, !dbg !14288

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14289, !tbaa !2474
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14290, !ctir !1347
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14289, !ctir !356
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14289, !tbaa !2529
  %conv = sext i8 %23 to i32, !dbg !14289
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14289
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14289

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14291, !tbaa !2474
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14292, !ctir !1347
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14291
  br label %cond.end19, !dbg !14289

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14289

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14289
  ret i8* %cond20, !dbg !14293
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getuidbyname(i8* %user) #0 !dbg !14294 !ctir !1368 {
entry:
  %retval = alloca i32*, align 8, !ctir !1370
  %user.addr = alloca i8*, align 8, !ctir !146
  %tail = alloca %struct.userid*, align 8, !ctir !1346
  %pwent = alloca %struct.passwd*, align 8, !ctir !1357
  store i8* %user, i8** %user.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !14295, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14297, metadata !DIExpression()), !dbg !14298
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !14299, metadata !DIExpression()), !dbg !14300
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14301, !tbaa !2474
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14303, !tbaa !2474
  br label %for.cond, !dbg !14304

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14305, !tbaa !2474
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14307
  br i1 %tobool, label %for.body, label %for.end, !dbg !14307

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14308, !tbaa !2474
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14310, !ctir !1347
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14311
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14311, !tbaa !2529, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14311
  %4 = load i8*, i8** %user.addr, align 8, !dbg !14312, !tbaa !2474
  %5 = load i8, i8* %4, align 1, !dbg !14313, !tbaa !2529, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14313
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14314
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14315

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14316, !tbaa !2474
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14317, !ctir !1347
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14316
  %7 = load i8*, i8** %user.addr, align 8, !dbg !14318, !tbaa !2474
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14319
  %tobool5 = icmp ne i32 %call, 0, !dbg !14319
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14320

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14321, !tbaa !2474
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14322, !ctir !1347
  %u = bitcast %union.anon.11* %id to i32*, !dbg !14323
  store i32* %u, i32** %retval, align 8, !dbg !14324
  br label %return, !dbg !14324

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14325

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14326, !tbaa !2474
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14327, !ctir !1347
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14327, !tbaa !2474, !ctir !1346
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14328, !tbaa !2474
  br label %for.cond, !dbg !14329, !llvm.loop !14330

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14332, !tbaa !2474
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14334, !tbaa !2474
  br label %for.cond6, !dbg !14335

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14336, !tbaa !2474
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14338
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14338

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14339, !tbaa !2474
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14341, !ctir !1347
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14342
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14342, !tbaa !2529, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14342
  %15 = load i8*, i8** %user.addr, align 8, !dbg !14343, !tbaa !2474
  %16 = load i8, i8* %15, align 1, !dbg !14344, !tbaa !2529, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14344
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14345
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14346

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14347, !tbaa !2474
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14348, !ctir !1347
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14347
  %18 = load i8*, i8** %user.addr, align 8, !dbg !14349, !tbaa !2474
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14350
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14350
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14351

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14352
  br label %return, !dbg !14352

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14353

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14354, !tbaa !2474
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14355, !ctir !1347
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14355, !tbaa !2474, !ctir !1346
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14356, !tbaa !2474
  br label %for.cond6, !dbg !14357, !llvm.loop !14358

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %user.addr, align 8, !dbg !14360, !tbaa !2474
  %call25 = call %struct.passwd* @getpwnam(i8* %21), !dbg !14361
  store %struct.passwd* %call25, %struct.passwd** %pwent, align 8, !dbg !14362, !tbaa !2474
  %22 = load i8*, i8** %user.addr, align 8, !dbg !14363, !tbaa !2474
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14363
  %add = add i64 %call26, 1, !dbg !14363
  %add27 = add i64 23, %add, !dbg !14363
  %and = and i64 %add27, -8, !dbg !14363
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14364
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14364
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14365, !tbaa !2474
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14366, !tbaa !2474
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14367, !ctir !1347
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14366
  %25 = load i8*, i8** %user.addr, align 8, !dbg !14368, !tbaa !2474
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14369
  %26 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14370, !tbaa !2474
  %tobool32 = icmp ne %struct.passwd* %26, null, !dbg !14370
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14372

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14373, !tbaa !2474
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %27, i32 0, i32 2, !dbg !14375, !ctir !1358
  %28 = load i32, i32* %pw_uid, align 8, !dbg !14375, !tbaa !14376, !ctir !202
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14377, !tbaa !2474
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14378, !ctir !1347
  %u35 = bitcast %union.anon.11* %id34 to i32*, !dbg !14379
  store i32 %28, i32* %u35, align 8, !dbg !14380, !tbaa !2529, !ctir !1351
  %30 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14381, !tbaa !2474
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14382, !tbaa !2474
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14383, !ctir !1347
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14384, !tbaa !2474, !ctir !1346
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14385, !tbaa !2474
  store %struct.userid* %32, %struct.userid** @user_alist, align 8, !dbg !14386, !tbaa !2474
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14387, !tbaa !2474
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14388, !ctir !1347
  %u38 = bitcast %union.anon.11* %id37 to i32*, !dbg !14389
  store i32* %u38, i32** %retval, align 8, !dbg !14390
  br label %return, !dbg !14390

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14391, !tbaa !2474
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14392, !tbaa !2474
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14393, !ctir !1347
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14394, !tbaa !2474, !ctir !1346
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14395, !tbaa !2474
  store %struct.userid* %36, %struct.userid** @nouser_alist, align 8, !dbg !14396, !tbaa !2474
  store i32* null, i32** %retval, align 8, !dbg !14397
  br label %return, !dbg !14397

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14398
  ret i32* %37, !dbg !14398
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getgroup(i32 %gid) #0 !dbg !14399 !ctir !1371 {
entry:
  %gid.addr = alloca i32, align 4, !ctir !680
  %tail = alloca %struct.userid*, align 8, !ctir !1346
  %match = alloca %struct.userid*, align 8, !ctir !1346
  %grent = alloca %struct.group*, align 8, !ctir !1373
  %name = alloca i8*, align 8, !ctir !146
  store i32 %gid, i32* %gid.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !14400, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14402, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14404, metadata !DIExpression()), !dbg !14405
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14405, !tbaa !2474
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14406, !tbaa !2474
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14408, !tbaa !2474
  br label %for.cond, !dbg !14409

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14410, !tbaa !2474
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14412
  br i1 %tobool, label %for.body, label %for.end, !dbg !14412

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14413, !tbaa !2474
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14416, !ctir !1347
  %g = bitcast %union.anon.11* %id to i32*, !dbg !14417
  %3 = load i32, i32* %g, align 8, !dbg !14417, !tbaa !2529, !ctir !1351
  %4 = load i32, i32* %gid.addr, align 4, !dbg !14418, !tbaa !2468
  %cmp = icmp eq i32 %3, %4, !dbg !14419
  br i1 %cmp, label %if.then, label %if.end, !dbg !14420

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14421, !tbaa !2474
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14423, !tbaa !2474
  br label %for.end, !dbg !14424

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14425

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14426, !tbaa !2474
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14427, !ctir !1347
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14427, !tbaa !2474, !ctir !1346
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14428, !tbaa !2474
  br label %for.cond, !dbg !14429, !llvm.loop !14430

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14432, !tbaa !2474
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14434
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14435

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14436, metadata !DIExpression()), !dbg !14438
  %9 = load i32, i32* %gid.addr, align 4, !dbg !14439, !tbaa !2468
  %call = call %struct.group* @getgrgid(i32 %9), !dbg !14440
  store %struct.group* %call, %struct.group** %grent, align 8, !dbg !14438, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14441, metadata !DIExpression()), !dbg !14442
  %10 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14443, !tbaa !2474
  %tobool3 = icmp ne %struct.group* %10, null, !dbg !14443
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14443

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14444, !tbaa !2474
  %gr_name = getelementptr inbounds %struct.group, %struct.group* %11, i32 0, i32 0, !dbg !14445, !ctir !1374
  %12 = load i8*, i8** %gr_name, align 8, !dbg !14445, !tbaa !14446, !ctir !143
  br label %cond.end, !dbg !14443

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14443

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.342, i64 0, i64 0), %cond.false ], !dbg !14443
  store i8* %cond, i8** %name, align 8, !dbg !14442, !tbaa !2474
  %13 = load i8*, i8** %name, align 8, !dbg !14448, !tbaa !2474
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14448
  %add = add i64 %call4, 1, !dbg !14448
  %add5 = add i64 23, %add, !dbg !14448
  %and = and i64 %add5, -8, !dbg !14448
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14449
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14449
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14450, !tbaa !2474
  %15 = load i32, i32* %gid.addr, align 4, !dbg !14451, !tbaa !2468
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14452, !tbaa !2474
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14453, !ctir !1347
  %g8 = bitcast %union.anon.11* %id7 to i32*, !dbg !14454
  store i32 %15, i32* %g8, align 8, !dbg !14455, !tbaa !2529, !ctir !1351
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14456, !tbaa !2474
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14457, !ctir !1347
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14456
  %18 = load i8*, i8** %name, align 8, !dbg !14458, !tbaa !2474
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14459
  %19 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14460, !tbaa !2474
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14461, !tbaa !2474
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14462, !ctir !1347
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14463, !tbaa !2474, !ctir !1346
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14464, !tbaa !2474
  store %struct.userid* %21, %struct.userid** @group_alist, align 8, !dbg !14465, !tbaa !2474
  br label %if.end12, !dbg !14466

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14467, !tbaa !2474
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14468, !ctir !1347
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14467, !ctir !356
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14467, !tbaa !2529
  %conv = sext i8 %23 to i32, !dbg !14467
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14467
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14467

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14469, !tbaa !2474
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14470, !ctir !1347
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14469
  br label %cond.end19, !dbg !14467

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14467

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14467
  ret i8* %cond20, !dbg !14471
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getgidbyname(i8* %group) #0 !dbg !14472 !ctir !1381 {
entry:
  %retval = alloca i32*, align 8, !ctir !1383
  %group.addr = alloca i8*, align 8, !ctir !146
  %tail = alloca %struct.userid*, align 8, !ctir !1346
  %grent = alloca %struct.group*, align 8, !ctir !1373
  store i8* %group, i8** %group.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %group.addr, metadata !14473, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14475, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14477, metadata !DIExpression()), !dbg !14478
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14479, !tbaa !2474
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14481, !tbaa !2474
  br label %for.cond, !dbg !14482

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14483, !tbaa !2474
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14485
  br i1 %tobool, label %for.body, label %for.end, !dbg !14485

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14486, !tbaa !2474
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14488, !ctir !1347
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14489
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14489, !tbaa !2529, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14489
  %4 = load i8*, i8** %group.addr, align 8, !dbg !14490, !tbaa !2474
  %5 = load i8, i8* %4, align 1, !dbg !14491, !tbaa !2529, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14491
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14492
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14493

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14494, !tbaa !2474
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14495, !ctir !1347
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14494
  %7 = load i8*, i8** %group.addr, align 8, !dbg !14496, !tbaa !2474
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14497
  %tobool5 = icmp ne i32 %call, 0, !dbg !14497
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14498

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14499, !tbaa !2474
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14500, !ctir !1347
  %g = bitcast %union.anon.11* %id to i32*, !dbg !14501
  store i32* %g, i32** %retval, align 8, !dbg !14502
  br label %return, !dbg !14502

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14503

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14504, !tbaa !2474
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14505, !ctir !1347
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14505, !tbaa !2474, !ctir !1346
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14506, !tbaa !2474
  br label %for.cond, !dbg !14507, !llvm.loop !14508

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14510, !tbaa !2474
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14512, !tbaa !2474
  br label %for.cond6, !dbg !14513

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14514, !tbaa !2474
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14516
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14516

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14517, !tbaa !2474
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14519, !ctir !1347
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14520
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14520, !tbaa !2529, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14520
  %15 = load i8*, i8** %group.addr, align 8, !dbg !14521, !tbaa !2474
  %16 = load i8, i8* %15, align 1, !dbg !14522, !tbaa !2529, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14522
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14523
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14524

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14525, !tbaa !2474
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14526, !ctir !1347
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14525
  %18 = load i8*, i8** %group.addr, align 8, !dbg !14527, !tbaa !2474
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14528
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14528
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14529

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14530
  br label %return, !dbg !14530

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14531

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14532, !tbaa !2474
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14533, !ctir !1347
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14533, !tbaa !2474, !ctir !1346
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14534, !tbaa !2474
  br label %for.cond6, !dbg !14535, !llvm.loop !14536

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %group.addr, align 8, !dbg !14538, !tbaa !2474
  %call25 = call %struct.group* @getgrnam(i8* %21), !dbg !14539
  store %struct.group* %call25, %struct.group** %grent, align 8, !dbg !14540, !tbaa !2474
  %22 = load i8*, i8** %group.addr, align 8, !dbg !14541, !tbaa !2474
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14541
  %add = add i64 %call26, 1, !dbg !14541
  %add27 = add i64 23, %add, !dbg !14541
  %and = and i64 %add27, -8, !dbg !14541
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14542
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14542
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14543, !tbaa !2474
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14544, !tbaa !2474
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14545, !ctir !1347
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14544
  %25 = load i8*, i8** %group.addr, align 8, !dbg !14546, !tbaa !2474
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14547
  %26 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14548, !tbaa !2474
  %tobool32 = icmp ne %struct.group* %26, null, !dbg !14548
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14550

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14551, !tbaa !2474
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %27, i32 0, i32 2, !dbg !14553, !ctir !1374
  %28 = load i32, i32* %gr_gid, align 8, !dbg !14553, !tbaa !14554, !ctir !204
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14555, !tbaa !2474
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14556, !ctir !1347
  %g35 = bitcast %union.anon.11* %id34 to i32*, !dbg !14557
  store i32 %28, i32* %g35, align 8, !dbg !14558, !tbaa !2529, !ctir !1351
  %30 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14559, !tbaa !2474
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14560, !tbaa !2474
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14561, !ctir !1347
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14562, !tbaa !2474, !ctir !1346
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14563, !tbaa !2474
  store %struct.userid* %32, %struct.userid** @group_alist, align 8, !dbg !14564, !tbaa !2474
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14565, !tbaa !2474
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14566, !ctir !1347
  %g38 = bitcast %union.anon.11* %id37 to i32*, !dbg !14567
  store i32* %g38, i32** %retval, align 8, !dbg !14568
  br label %return, !dbg !14568

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14569, !tbaa !2474
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14570, !tbaa !2474
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14571, !ctir !1347
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14572, !tbaa !2474, !ctir !1346
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14573, !tbaa !2474
  store %struct.userid* %36, %struct.userid** @nogroup_alist, align 8, !dbg !14574, !tbaa !2474
  store i32* null, i32** %retval, align 8, !dbg !14575
  br label %return, !dbg !14575

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14576
  ret i32* %37, !dbg !14576
}

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @imaxtostr(i64 %i, i8* %buf) #0 !dbg !14577 !ctir !1863 {
entry:
  %i.addr = alloca i64, align 8, !ctir !1862
  %buf.addr = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14579, metadata !DIExpression()), !dbg !14580
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14581, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14583, metadata !DIExpression()), !dbg !14584
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14585, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14586
  store i8* %add.ptr, i8** %p, align 8, !dbg !14584, !tbaa !2474
  %1 = load i8*, i8** %p, align 8, !dbg !14587, !tbaa !2474
  store i8 0, i8* %1, align 1, !dbg !14588, !tbaa !2529, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14589, !tbaa !2611
  %cmp = icmp slt i64 %2, 0, !dbg !14591
  br i1 %cmp, label %if.then, label %if.else, !dbg !14592

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14593

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14595, !tbaa !2611
  %rem = srem i64 %3, 10, !dbg !14596
  %sub = sub nsw i64 48, %rem, !dbg !14597
  %conv = trunc i64 %sub to i8, !dbg !14598
  %4 = load i8*, i8** %p, align 8, !dbg !14599, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14599
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14599, !tbaa !2474
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14600, !tbaa !2529, !ctir !144
  br label %do.cond, !dbg !14601

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14602, !tbaa !2611
  %div = sdiv i64 %5, 10, !dbg !14602
  store i64 %div, i64* %i.addr, align 8, !dbg !14602, !tbaa !2611
  %cmp1 = icmp ne i64 %div, 0, !dbg !14603
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14601, !llvm.loop !14604

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14606, !tbaa !2474
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14606
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14606, !tbaa !2474
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14607, !tbaa !2529, !ctir !144
  br label %if.end, !dbg !14608

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14609

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14611, !tbaa !2611
  %rem5 = srem i64 %7, 10, !dbg !14612
  %add = add nsw i64 48, %rem5, !dbg !14613
  %conv6 = trunc i64 %add to i8, !dbg !14614
  %8 = load i8*, i8** %p, align 8, !dbg !14615, !tbaa !2474
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14615
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14615, !tbaa !2474
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14616, !tbaa !2529, !ctir !144
  br label %do.cond8, !dbg !14617

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14618, !tbaa !2611
  %div9 = sdiv i64 %9, 10, !dbg !14618
  store i64 %div9, i64* %i.addr, align 8, !dbg !14618, !tbaa !2611
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14619
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14617, !llvm.loop !14620

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14622, !tbaa !2474
  ret i8* %10, !dbg !14623
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %i, i8* %buf) #0 !dbg !14624 !ctir !1868 {
entry:
  %i.addr = alloca i64, align 8, !ctir !168
  %buf.addr = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14627, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14629, metadata !DIExpression()), !dbg !14630
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14631, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14632
  store i8* %add.ptr, i8** %p, align 8, !dbg !14630, !tbaa !2474
  %1 = load i8*, i8** %p, align 8, !dbg !14633, !tbaa !2474
  store i8 0, i8* %1, align 1, !dbg !14634, !tbaa !2529, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14635, !tbaa !2611
  %cmp = icmp ult i64 %2, 0, !dbg !14637
  br i1 %cmp, label %if.then, label %if.else, !dbg !14638

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14639

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14641, !tbaa !2611
  %rem = urem i64 %3, 10, !dbg !14642
  %sub = sub i64 48, %rem, !dbg !14643
  %conv = trunc i64 %sub to i8, !dbg !14644
  %4 = load i8*, i8** %p, align 8, !dbg !14645, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14645
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14645, !tbaa !2474
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14646, !tbaa !2529, !ctir !144
  br label %do.cond, !dbg !14647

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14648, !tbaa !2611
  %div = udiv i64 %5, 10, !dbg !14648
  store i64 %div, i64* %i.addr, align 8, !dbg !14648, !tbaa !2611
  %cmp1 = icmp ne i64 %div, 0, !dbg !14649
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14647, !llvm.loop !14650

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14652, !tbaa !2474
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14652
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14652, !tbaa !2474
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14653, !tbaa !2529, !ctir !144
  br label %if.end, !dbg !14654

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14655

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14657, !tbaa !2611
  %rem5 = urem i64 %7, 10, !dbg !14658
  %add = add i64 48, %rem5, !dbg !14659
  %conv6 = trunc i64 %add to i8, !dbg !14660
  %8 = load i8*, i8** %p, align 8, !dbg !14661, !tbaa !2474
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14661
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14661, !tbaa !2474
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14662, !tbaa !2529, !ctir !144
  br label %do.cond8, !dbg !14663

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14664, !tbaa !2611
  %div9 = udiv i64 %9, 10, !dbg !14664
  store i64 %div9, i64* %i.addr, align 8, !dbg !14664, !tbaa !2611
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14665
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14663, !llvm.loop !14666

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14668, !tbaa !2474
  ret i8* %10, !dbg !14669
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mbsalign(i8* %src, i8* %dest, i64 %dest_size, i64* %width, i32 %align, i32 %flags) #0 !dbg !14670 !ctir !1875 {
entry:
  %src.addr = alloca i8*, align 8, !ctir !146
  %dest.addr = alloca i8*, align 8, !ctir !143
  %dest_size.addr = alloca i64, align 8, !ctir !149
  %width.addr = alloca i64*, align 8, !ctir !148
  %align.addr = alloca i32, align 4, !ctir !574
  %flags.addr = alloca i32, align 4, !ctir !27
  %ret = alloca i64, align 8, !ctir !149
  %src_size = alloca i64, align 8, !ctir !149
  %newstr = alloca i8*, align 8, !ctir !143
  %str_wc = alloca i32*, align 8, !ctir !1877
  %str_to_print = alloca i8*, align 8, !ctir !146
  %n_cols = alloca i64, align 8, !ctir !149
  %n_used_bytes = alloca i64, align 8, !ctir !149
  %n_spaces = alloca i64, align 8, !ctir !149
  %conversion = alloca i8, align 1, !ctir !141
  %wc_enabled = alloca i8, align 1, !ctir !141
  %src_chars = alloca i64, align 8, !ctir !149
  %start_spaces = alloca i64, align 8, !ctir !149
  %end_spaces = alloca i64, align 8, !ctir !149
  %space_left = alloca i64, align 8, !ctir !149
  %dest_end = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14672, metadata !DIExpression()), !dbg !14673
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14674, metadata !DIExpression()), !dbg !14675
  store i64 %dest_size, i64* %dest_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %dest_size.addr, metadata !14676, metadata !DIExpression()), !dbg !14677
  store i64* %width, i64** %width.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !14678, metadata !DIExpression()), !dbg !14679
  store i32 %align, i32* %align.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !14680, metadata !DIExpression()), !dbg !14681
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14682, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !14684, metadata !DIExpression()), !dbg !14685
  store i64 -1, i64* %ret, align 8, !dbg !14685, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %src_size, metadata !14686, metadata !DIExpression()), !dbg !14687
  %0 = load i8*, i8** %src.addr, align 8, !dbg !14688, !tbaa !2474
  %call = call i64 @strlen(i8* %0) #16, !dbg !14689
  %add = add i64 %call, 1, !dbg !14690
  store i64 %add, i64* %src_size, align 8, !dbg !14687, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %newstr, metadata !14691, metadata !DIExpression()), !dbg !14692
  store i8* null, i8** %newstr, align 8, !dbg !14692, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %str_wc, metadata !14693, metadata !DIExpression()), !dbg !14694
  store i32* null, i32** %str_wc, align 8, !dbg !14694, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %str_to_print, metadata !14695, metadata !DIExpression()), !dbg !14696
  %1 = load i8*, i8** %src.addr, align 8, !dbg !14697, !tbaa !2474
  store i8* %1, i8** %str_to_print, align 8, !dbg !14696, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %n_cols, metadata !14698, metadata !DIExpression()), !dbg !14699
  %2 = load i64, i64* %src_size, align 8, !dbg !14700, !tbaa !2611
  %sub = sub i64 %2, 1, !dbg !14701
  store i64 %sub, i64* %n_cols, align 8, !dbg !14699, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_used_bytes, metadata !14702, metadata !DIExpression()), !dbg !14703
  %3 = load i64, i64* %n_cols, align 8, !dbg !14704, !tbaa !2611
  store i64 %3, i64* %n_used_bytes, align 8, !dbg !14703, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_spaces, metadata !14705, metadata !DIExpression()), !dbg !14706
  store i64 0, i64* %n_spaces, align 8, !dbg !14706, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %conversion, metadata !14707, metadata !DIExpression()), !dbg !14708
  store i8 0, i8* %conversion, align 1, !dbg !14708, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %wc_enabled, metadata !14709, metadata !DIExpression()), !dbg !14710
  store i8 0, i8* %wc_enabled, align 1, !dbg !14710, !tbaa !2493
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14711, !tbaa !2468
  %and = and i32 %4, 2, !dbg !14713
  %tobool = icmp ne i32 %and, 0, !dbg !14713
  br i1 %tobool, label %if.end24, label %land.lhs.true, !dbg !14714

land.lhs.true:                                    ; preds = %entry
  %call1 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !14715
  %cmp = icmp ugt i64 %call1, 1, !dbg !14716
  br i1 %cmp, label %if.then, label %if.end24, !dbg !14717

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_chars, metadata !14718, metadata !DIExpression()), !dbg !14720
  %5 = load i8*, i8** %src.addr, align 8, !dbg !14721, !tbaa !2474
  %call2 = call i64 @mbstowcs(i32* null, i8* %5, i64 0) #13, !dbg !14722
  store i64 %call2, i64* %src_chars, align 8, !dbg !14720, !tbaa !2611
  %6 = load i64, i64* %src_chars, align 8, !dbg !14723, !tbaa !2611
  %cmp3 = icmp eq i64 %6, -1, !dbg !14725
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !14726

if.then4:                                         ; preds = %if.then
  %7 = load i32, i32* %flags.addr, align 4, !dbg !14727, !tbaa !2468
  %and5 = and i32 %7, 1, !dbg !14730
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14730
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !14731

if.then7:                                         ; preds = %if.then4
  br label %mbsalign_unibyte, !dbg !14732

if.else:                                          ; preds = %if.then4
  br label %mbsalign_cleanup, !dbg !14733

if.end:                                           ; preds = %if.then
  %8 = load i64, i64* %src_chars, align 8, !dbg !14734, !tbaa !2611
  %add8 = add i64 %8, 1, !dbg !14734
  store i64 %add8, i64* %src_chars, align 8, !dbg !14734, !tbaa !2611
  %9 = load i64, i64* %src_chars, align 8, !dbg !14735, !tbaa !2611
  %mul = mul i64 %9, 4, !dbg !14736
  %call9 = call noalias i8* @malloc(i64 %mul) #13, !dbg !14737
  %10 = bitcast i8* %call9 to i32*, !dbg !14737
  store i32* %10, i32** %str_wc, align 8, !dbg !14738, !tbaa !2474
  %11 = load i32*, i32** %str_wc, align 8, !dbg !14739, !tbaa !2474
  %cmp10 = icmp eq i32* %11, null, !dbg !14741
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !14742

if.then11:                                        ; preds = %if.end
  %12 = load i32, i32* %flags.addr, align 4, !dbg !14743, !tbaa !2468
  %and12 = and i32 %12, 1, !dbg !14746
  %tobool13 = icmp ne i32 %and12, 0, !dbg !14746
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !14747

if.then14:                                        ; preds = %if.then11
  br label %mbsalign_unibyte, !dbg !14748

if.else15:                                        ; preds = %if.then11
  br label %mbsalign_cleanup, !dbg !14749

if.end16:                                         ; preds = %if.end
  %13 = load i32*, i32** %str_wc, align 8, !dbg !14750, !tbaa !2474
  %14 = load i8*, i8** %src.addr, align 8, !dbg !14752, !tbaa !2474
  %15 = load i64, i64* %src_chars, align 8, !dbg !14753, !tbaa !2611
  %call17 = call i64 @mbstowcs(i32* %13, i8* %14, i64 %15) #13, !dbg !14754
  %cmp18 = icmp ne i64 %call17, 0, !dbg !14755
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !14756

if.then19:                                        ; preds = %if.end16
  %16 = load i32*, i32** %str_wc, align 8, !dbg !14757, !tbaa !2474
  %17 = load i64, i64* %src_chars, align 8, !dbg !14759, !tbaa !2611
  %sub20 = sub i64 %17, 1, !dbg !14760
  %arrayidx = getelementptr inbounds i32, i32* %16, i64 %sub20, !dbg !14757, !ctir !1877
  store i32 0, i32* %arrayidx, align 4, !dbg !14761, !tbaa !2468
  store i8 1, i8* %wc_enabled, align 1, !dbg !14762, !tbaa !2493
  %18 = load i32*, i32** %str_wc, align 8, !dbg !14763, !tbaa !2474
  %call21 = call zeroext i1 @wc_ensure_printable(i32* %18), !dbg !14764
  %frombool = zext i1 %call21 to i8, !dbg !14765
  store i8 %frombool, i8* %conversion, align 1, !dbg !14765, !tbaa !2493
  %19 = load i32*, i32** %str_wc, align 8, !dbg !14766, !tbaa !2474
  %20 = load i64, i64* %src_chars, align 8, !dbg !14767, !tbaa !2611
  %call22 = call i32 @wcswidth(i32* %19, i64 %20) #13, !dbg !14768
  %conv = sext i32 %call22 to i64, !dbg !14768
  store i64 %conv, i64* %n_cols, align 8, !dbg !14769, !tbaa !2611
  br label %if.end23, !dbg !14770

if.end23:                                         ; preds = %if.then19, %if.end16
  br label %if.end24, !dbg !14771

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %entry
  %21 = load i8, i8* %wc_enabled, align 1, !dbg !14772, !tbaa !2493
  %tobool25 = trunc i8 %21 to i1, !dbg !14772
  br i1 %tobool25, label %land.lhs.true27, label %if.end49, !dbg !14774

land.lhs.true27:                                  ; preds = %if.end24
  %22 = load i8, i8* %conversion, align 1, !dbg !14775, !tbaa !2493
  %tobool28 = trunc i8 %22 to i1, !dbg !14775
  br i1 %tobool28, label %if.then32, label %lor.lhs.false, !dbg !14776

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %23 = load i64, i64* %n_cols, align 8, !dbg !14777, !tbaa !2611
  %24 = load i64*, i64** %width.addr, align 8, !dbg !14778, !tbaa !2474
  %25 = load i64, i64* %24, align 8, !dbg !14779, !tbaa !2611, !ctir !149
  %cmp30 = icmp ugt i64 %23, %25, !dbg !14780
  br i1 %cmp30, label %if.then32, label %if.end49, !dbg !14781

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %26 = load i8, i8* %conversion, align 1, !dbg !14782, !tbaa !2493
  %tobool33 = trunc i8 %26 to i1, !dbg !14782
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !14785

if.then34:                                        ; preds = %if.then32
  %27 = load i32*, i32** %str_wc, align 8, !dbg !14786, !tbaa !2474
  %call35 = call i64 @wcstombs(i8* null, i32* %27, i64 0) #13, !dbg !14788
  %add36 = add i64 %call35, 1, !dbg !14789
  store i64 %add36, i64* %src_size, align 8, !dbg !14790, !tbaa !2611
  br label %if.end37, !dbg !14791

if.end37:                                         ; preds = %if.then34, %if.then32
  %28 = load i64, i64* %src_size, align 8, !dbg !14792, !tbaa !2611
  %call38 = call noalias i8* @malloc(i64 %28) #13, !dbg !14793
  store i8* %call38, i8** %newstr, align 8, !dbg !14794, !tbaa !2474
  %29 = load i8*, i8** %newstr, align 8, !dbg !14795, !tbaa !2474
  %cmp39 = icmp eq i8* %29, null, !dbg !14797
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !14798

if.then41:                                        ; preds = %if.end37
  %30 = load i32, i32* %flags.addr, align 4, !dbg !14799, !tbaa !2468
  %and42 = and i32 %30, 1, !dbg !14802
  %tobool43 = icmp ne i32 %and42, 0, !dbg !14802
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !14803

if.then44:                                        ; preds = %if.then41
  br label %mbsalign_unibyte, !dbg !14804

if.else45:                                        ; preds = %if.then41
  br label %mbsalign_cleanup, !dbg !14805

if.end46:                                         ; preds = %if.end37
  %31 = load i8*, i8** %newstr, align 8, !dbg !14806, !tbaa !2474
  store i8* %31, i8** %str_to_print, align 8, !dbg !14807, !tbaa !2474
  %32 = load i32*, i32** %str_wc, align 8, !dbg !14808, !tbaa !2474
  %33 = load i64*, i64** %width.addr, align 8, !dbg !14809, !tbaa !2474
  %34 = load i64, i64* %33, align 8, !dbg !14810, !tbaa !2611, !ctir !149
  %call47 = call i64 @wc_truncate(i32* %32, i64 %34), !dbg !14811
  store i64 %call47, i64* %n_cols, align 8, !dbg !14812, !tbaa !2611
  %35 = load i8*, i8** %newstr, align 8, !dbg !14813, !tbaa !2474
  %36 = load i32*, i32** %str_wc, align 8, !dbg !14814, !tbaa !2474
  %37 = load i64, i64* %src_size, align 8, !dbg !14815, !tbaa !2611
  %call48 = call i64 @wcstombs(i8* %35, i32* %36, i64 %37) #13, !dbg !14816
  store i64 %call48, i64* %n_used_bytes, align 8, !dbg !14817, !tbaa !2611
  br label %if.end49, !dbg !14818

if.end49:                                         ; preds = %if.end46, %lor.lhs.false, %if.end24
  br label %mbsalign_unibyte, !dbg !14819

mbsalign_unibyte:                                 ; preds = %if.end49, %if.then44, %if.then14, %if.then7
  call void @llvm.dbg.label(metadata !14820), !dbg !14821
  %38 = load i64, i64* %n_cols, align 8, !dbg !14822, !tbaa !2611
  %39 = load i64*, i64** %width.addr, align 8, !dbg !14824, !tbaa !2474
  %40 = load i64, i64* %39, align 8, !dbg !14825, !tbaa !2611, !ctir !149
  %cmp50 = icmp ugt i64 %38, %40, !dbg !14826
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !14827

if.then52:                                        ; preds = %mbsalign_unibyte
  %41 = load i64*, i64** %width.addr, align 8, !dbg !14828, !tbaa !2474
  %42 = load i64, i64* %41, align 8, !dbg !14830, !tbaa !2611, !ctir !149
  store i64 %42, i64* %n_cols, align 8, !dbg !14831, !tbaa !2611
  %43 = load i64, i64* %n_cols, align 8, !dbg !14832, !tbaa !2611
  store i64 %43, i64* %n_used_bytes, align 8, !dbg !14833, !tbaa !2611
  br label %if.end53, !dbg !14834

if.end53:                                         ; preds = %if.then52, %mbsalign_unibyte
  %44 = load i64*, i64** %width.addr, align 8, !dbg !14835, !tbaa !2474
  %45 = load i64, i64* %44, align 8, !dbg !14837, !tbaa !2611, !ctir !149
  %46 = load i64, i64* %n_cols, align 8, !dbg !14838, !tbaa !2611
  %cmp54 = icmp ugt i64 %45, %46, !dbg !14839
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !14840

if.then56:                                        ; preds = %if.end53
  %47 = load i64*, i64** %width.addr, align 8, !dbg !14841, !tbaa !2474
  %48 = load i64, i64* %47, align 8, !dbg !14842, !tbaa !2611, !ctir !149
  %49 = load i64, i64* %n_cols, align 8, !dbg !14843, !tbaa !2611
  %sub57 = sub i64 %48, %49, !dbg !14844
  store i64 %sub57, i64* %n_spaces, align 8, !dbg !14845, !tbaa !2611
  br label %if.end58, !dbg !14846

if.end58:                                         ; preds = %if.then56, %if.end53
  %50 = load i64, i64* %n_cols, align 8, !dbg !14847, !tbaa !2611
  %51 = load i64*, i64** %width.addr, align 8, !dbg !14848, !tbaa !2474
  store i64 %50, i64* %51, align 8, !dbg !14849, !tbaa !2611, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %start_spaces, metadata !14850, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.declare(metadata i64* %end_spaces, metadata !14853, metadata !DIExpression()), !dbg !14854
  %52 = load i32, i32* %align.addr, align 4, !dbg !14855, !tbaa !2529
  switch i32 %52, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb59
    i32 2, label %sw.bb60
  ], !dbg !14856

sw.bb:                                            ; preds = %if.end58
  store i64 0, i64* %start_spaces, align 8, !dbg !14857, !tbaa !2611
  %53 = load i64, i64* %n_spaces, align 8, !dbg !14859, !tbaa !2611
  store i64 %53, i64* %end_spaces, align 8, !dbg !14860, !tbaa !2611
  br label %sw.epilog, !dbg !14861

sw.bb59:                                          ; preds = %if.end58
  %54 = load i64, i64* %n_spaces, align 8, !dbg !14862, !tbaa !2611
  store i64 %54, i64* %start_spaces, align 8, !dbg !14863, !tbaa !2611
  store i64 0, i64* %end_spaces, align 8, !dbg !14864, !tbaa !2611
  br label %sw.epilog, !dbg !14865

sw.bb60:                                          ; preds = %if.end58
  br label %sw.default, !dbg !14865

sw.default:                                       ; preds = %if.end58, %sw.bb60
  %55 = load i64, i64* %n_spaces, align 8, !dbg !14866, !tbaa !2611
  %div = udiv i64 %55, 2, !dbg !14867
  %56 = load i64, i64* %n_spaces, align 8, !dbg !14868, !tbaa !2611
  %rem = urem i64 %56, 2, !dbg !14869
  %add61 = add i64 %div, %rem, !dbg !14870
  store i64 %add61, i64* %start_spaces, align 8, !dbg !14871, !tbaa !2611
  %57 = load i64, i64* %n_spaces, align 8, !dbg !14872, !tbaa !2611
  %div62 = udiv i64 %57, 2, !dbg !14873
  store i64 %div62, i64* %end_spaces, align 8, !dbg !14874, !tbaa !2611
  br label %sw.epilog, !dbg !14875

sw.epilog:                                        ; preds = %sw.default, %sw.bb59, %sw.bb
  %58 = load i32, i32* %flags.addr, align 4, !dbg !14876, !tbaa !2468
  %and63 = and i32 %58, 4, !dbg !14878
  %tobool64 = icmp ne i32 %and63, 0, !dbg !14878
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !14879

if.then65:                                        ; preds = %sw.epilog
  store i64 0, i64* %start_spaces, align 8, !dbg !14880, !tbaa !2611
  br label %if.end66, !dbg !14881

if.end66:                                         ; preds = %if.then65, %sw.epilog
  %59 = load i32, i32* %flags.addr, align 4, !dbg !14882, !tbaa !2468
  %and67 = and i32 %59, 8, !dbg !14884
  %tobool68 = icmp ne i32 %and67, 0, !dbg !14884
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !14885

if.then69:                                        ; preds = %if.end66
  store i64 0, i64* %end_spaces, align 8, !dbg !14886, !tbaa !2611
  br label %if.end70, !dbg !14887

if.end70:                                         ; preds = %if.then69, %if.end66
  %60 = load i64, i64* %dest_size.addr, align 8, !dbg !14888, !tbaa !2611
  %cmp71 = icmp ne i64 %60, 0, !dbg !14890
  br i1 %cmp71, label %if.then73, label %if.end80, !dbg !14891

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i64* %space_left, metadata !14892, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.declare(metadata i8** %dest_end, metadata !14895, metadata !DIExpression()), !dbg !14896
  %61 = load i8*, i8** %dest.addr, align 8, !dbg !14897, !tbaa !2474
  %62 = load i64, i64* %dest_size.addr, align 8, !dbg !14898, !tbaa !2611
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !14899
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !14900
  store i8* %add.ptr74, i8** %dest_end, align 8, !dbg !14896, !tbaa !2474
  %63 = load i8*, i8** %dest.addr, align 8, !dbg !14901, !tbaa !2474
  %64 = load i8*, i8** %dest_end, align 8, !dbg !14902, !tbaa !2474
  %65 = load i64, i64* %start_spaces, align 8, !dbg !14903, !tbaa !2611
  %call75 = call i8* @mbs_align_pad(i8* %63, i8* %64, i64 %65), !dbg !14904
  store i8* %call75, i8** %dest.addr, align 8, !dbg !14905, !tbaa !2474
  %66 = load i8*, i8** %dest_end, align 8, !dbg !14906, !tbaa !2474
  %67 = load i8*, i8** %dest.addr, align 8, !dbg !14907, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %66 to i64, !dbg !14908
  %sub.ptr.rhs.cast = ptrtoint i8* %67 to i64, !dbg !14908
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14908
  store i64 %sub.ptr.sub, i64* %space_left, align 8, !dbg !14909, !tbaa !2611
  %68 = load i8*, i8** %dest.addr, align 8, !dbg !14910, !tbaa !2474
  %69 = load i8*, i8** %str_to_print, align 8, !dbg !14911, !tbaa !2474
  %70 = load i64, i64* %n_used_bytes, align 8, !dbg !14912, !tbaa !2611
  %71 = load i64, i64* %space_left, align 8, !dbg !14912, !tbaa !2611
  %cmp76 = icmp ult i64 %70, %71, !dbg !14912
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !14912

cond.true:                                        ; preds = %if.then73
  %72 = load i64, i64* %n_used_bytes, align 8, !dbg !14912, !tbaa !2611
  br label %cond.end, !dbg !14912

cond.false:                                       ; preds = %if.then73
  %73 = load i64, i64* %space_left, align 8, !dbg !14912, !tbaa !2611
  br label %cond.end, !dbg !14912

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %72, %cond.true ], [ %73, %cond.false ], !dbg !14912
  %call78 = call i8* @mempcpy(i8* %68, i8* %69, i64 %cond) #13, !dbg !14913
  store i8* %call78, i8** %dest.addr, align 8, !dbg !14914, !tbaa !2474
  %74 = load i8*, i8** %dest.addr, align 8, !dbg !14915, !tbaa !2474
  %75 = load i8*, i8** %dest_end, align 8, !dbg !14916, !tbaa !2474
  %76 = load i64, i64* %end_spaces, align 8, !dbg !14917, !tbaa !2611
  %call79 = call i8* @mbs_align_pad(i8* %74, i8* %75, i64 %76), !dbg !14918
  br label %if.end80, !dbg !14919

if.end80:                                         ; preds = %cond.end, %if.end70
  %77 = load i64, i64* %n_used_bytes, align 8, !dbg !14920, !tbaa !2611
  %78 = load i64, i64* %start_spaces, align 8, !dbg !14921, !tbaa !2611
  %79 = load i64, i64* %end_spaces, align 8, !dbg !14922, !tbaa !2611
  %add81 = add i64 %78, %79, !dbg !14923
  %mul82 = mul i64 %add81, 1, !dbg !14924
  %add83 = add i64 %77, %mul82, !dbg !14925
  store i64 %add83, i64* %ret, align 8, !dbg !14926, !tbaa !2611
  br label %mbsalign_cleanup, !dbg !14927

mbsalign_cleanup:                                 ; preds = %if.end80, %if.else45, %if.else15, %if.else
  call void @llvm.dbg.label(metadata !14928), !dbg !14929
  %80 = load i32*, i32** %str_wc, align 8, !dbg !14930, !tbaa !2474
  %81 = bitcast i32* %80 to i8*, !dbg !14930
  call void @free(i8* %81) #13, !dbg !14931
  %82 = load i8*, i8** %newstr, align 8, !dbg !14932, !tbaa !2474
  call void @free(i8* %82) #13, !dbg !14933
  %83 = load i64, i64* %ret, align 8, !dbg !14934, !tbaa !2611
  ret i64 %83, !dbg !14935
}

; Function Attrs: nounwind
declare dso_local i64 @mbstowcs(i32*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @wc_ensure_printable(i32* %wchars) #0 !dbg !14936 !ctir !1880 {
entry:
  %wchars.addr = alloca i32*, align 8, !ctir !1877
  %replaced = alloca i8, align 1, !ctir !141
  %wc = alloca i32*, align 8, !ctir !1877
  store i32* %wchars, i32** %wchars.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %wchars.addr, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.declare(metadata i8* %replaced, metadata !14939, metadata !DIExpression()), !dbg !14940
  store i8 0, i8* %replaced, align 1, !dbg !14940, !tbaa !2493
  call void @llvm.dbg.declare(metadata i32** %wc, metadata !14941, metadata !DIExpression()), !dbg !14942
  %0 = load i32*, i32** %wchars.addr, align 8, !dbg !14943, !tbaa !2474
  store i32* %0, i32** %wc, align 8, !dbg !14942, !tbaa !2474
  br label %while.cond, !dbg !14944

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32*, i32** %wc, align 8, !dbg !14945, !tbaa !2474
  %2 = load i32, i32* %1, align 4, !dbg !14946, !tbaa !2468, !ctir !641
  %tobool = icmp ne i32 %2, 0, !dbg !14944
  br i1 %tobool, label %while.body, label %while.end, !dbg !14944

while.body:                                       ; preds = %while.cond
  %3 = load i32*, i32** %wc, align 8, !dbg !14947, !tbaa !2474
  %4 = load i32, i32* %3, align 4, !dbg !14950, !tbaa !2468, !ctir !641
  %call = call i32 @iswprint(i32 %4) #13, !dbg !14951
  %tobool1 = icmp ne i32 %call, 0, !dbg !14951
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14952

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc, align 8, !dbg !14953, !tbaa !2474
  store i32 65533, i32* %5, align 4, !dbg !14955, !tbaa !2468, !ctir !641
  store i8 1, i8* %replaced, align 1, !dbg !14956, !tbaa !2493
  br label %if.end, !dbg !14957

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i32*, i32** %wc, align 8, !dbg !14958, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1, !dbg !14958
  store i32* %incdec.ptr, i32** %wc, align 8, !dbg !14958, !tbaa !2474
  br label %while.cond, !dbg !14944, !llvm.loop !14959

while.end:                                        ; preds = %while.cond
  %7 = load i8, i8* %replaced, align 1, !dbg !14961, !tbaa !2493
  %tobool2 = trunc i8 %7 to i1, !dbg !14961
  ret i1 %tobool2, !dbg !14962
}

; Function Attrs: nounwind
declare dso_local i32 @wcswidth(i32*, i64) #2

; Function Attrs: nounwind
declare dso_local i64 @wcstombs(i8*, i32*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @wc_truncate(i32* %wc, i64 %width) #0 !dbg !14963 !ctir !1882 {
entry:
  %wc.addr = alloca i32*, align 8, !ctir !1877
  %width.addr = alloca i64, align 8, !ctir !149
  %cells = alloca i64, align 8, !ctir !149
  %next_cells = alloca i32, align 4, !ctir !27
  store i32* %wc, i32** %wc.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %wc.addr, metadata !14964, metadata !DIExpression()), !dbg !14965
  store i64 %width, i64* %width.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14966, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.declare(metadata i64* %cells, metadata !14968, metadata !DIExpression()), !dbg !14969
  store i64 0, i64* %cells, align 8, !dbg !14969, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %next_cells, metadata !14970, metadata !DIExpression()), !dbg !14971
  store i32 0, i32* %next_cells, align 4, !dbg !14971, !tbaa !2468
  br label %while.cond, !dbg !14972

while.cond:                                       ; preds = %if.end4, %entry
  %0 = load i32*, i32** %wc.addr, align 8, !dbg !14973, !tbaa !2474
  %1 = load i32, i32* %0, align 4, !dbg !14974, !tbaa !2468, !ctir !641
  %tobool = icmp ne i32 %1, 0, !dbg !14972
  br i1 %tobool, label %while.body, label %while.end, !dbg !14972

while.body:                                       ; preds = %while.cond
  %2 = load i32*, i32** %wc.addr, align 8, !dbg !14975, !tbaa !2474
  %3 = load i32, i32* %2, align 4, !dbg !14977, !tbaa !2468, !ctir !641
  %call = call i32 @wcwidth(i32 %3) #13, !dbg !14978
  store i32 %call, i32* %next_cells, align 4, !dbg !14979, !tbaa !2468
  %4 = load i32, i32* %next_cells, align 4, !dbg !14980, !tbaa !2468
  %cmp = icmp eq i32 %4, -1, !dbg !14982
  br i1 %cmp, label %if.then, label %if.end, !dbg !14983

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc.addr, align 8, !dbg !14984, !tbaa !2474
  store i32 65533, i32* %5, align 4, !dbg !14986, !tbaa !2468, !ctir !641
  store i32 1, i32* %next_cells, align 4, !dbg !14987, !tbaa !2468
  br label %if.end, !dbg !14988

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i64, i64* %cells, align 8, !dbg !14989, !tbaa !2611
  %7 = load i32, i32* %next_cells, align 4, !dbg !14991, !tbaa !2468
  %conv = sext i32 %7 to i64, !dbg !14991
  %add = add i64 %6, %conv, !dbg !14992
  %8 = load i64, i64* %width.addr, align 8, !dbg !14993, !tbaa !2611
  %cmp1 = icmp ugt i64 %add, %8, !dbg !14994
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !14995

if.then3:                                         ; preds = %if.end
  br label %while.end, !dbg !14996

if.end4:                                          ; preds = %if.end
  %9 = load i32, i32* %next_cells, align 4, !dbg !14997, !tbaa !2468
  %conv5 = sext i32 %9 to i64, !dbg !14997
  %10 = load i64, i64* %cells, align 8, !dbg !14998, !tbaa !2611
  %add6 = add i64 %10, %conv5, !dbg !14998
  store i64 %add6, i64* %cells, align 8, !dbg !14998, !tbaa !2611
  %11 = load i32*, i32** %wc.addr, align 8, !dbg !14999, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1, !dbg !14999
  store i32* %incdec.ptr, i32** %wc.addr, align 8, !dbg !14999, !tbaa !2474
  br label %while.cond, !dbg !14972, !llvm.loop !15000

while.end:                                        ; preds = %if.then3, %while.cond
  %12 = load i32*, i32** %wc.addr, align 8, !dbg !15002, !tbaa !2474
  store i32 0, i32* %12, align 4, !dbg !15003, !tbaa !2468, !ctir !641
  %13 = load i64, i64* %cells, align 8, !dbg !15004, !tbaa !2611
  ret i64 %13, !dbg !15005
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @mbs_align_pad(i8* %dest, i8* %dest_end, i64 %n_spaces) #0 !dbg !15006 !ctir !1884 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !143
  %dest_end.addr = alloca i8*, align 8, !ctir !146
  %n_spaces.addr = alloca i64, align 8, !ctir !149
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15007, metadata !DIExpression()), !dbg !15008
  store i8* %dest_end, i8** %dest_end.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest_end.addr, metadata !15009, metadata !DIExpression()), !dbg !15010
  store i64 %n_spaces, i64* %n_spaces.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_spaces.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  br label %while.cond, !dbg !15013

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %n_spaces.addr, align 8, !dbg !15014, !tbaa !2611
  %dec = add i64 %0, -1, !dbg !15014
  store i64 %dec, i64* %n_spaces.addr, align 8, !dbg !15014, !tbaa !2611
  %tobool = icmp ne i64 %0, 0, !dbg !15014
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15015

land.rhs:                                         ; preds = %while.cond
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15016, !tbaa !2474
  %2 = load i8*, i8** %dest_end.addr, align 8, !dbg !15017, !tbaa !2474
  %cmp = icmp ult i8* %1, %2, !dbg !15018
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !15019
  br i1 %3, label %while.body, label %while.end, !dbg !15013

while.body:                                       ; preds = %land.end
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !15020, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !15020
  store i8* %incdec.ptr, i8** %dest.addr, align 8, !dbg !15020, !tbaa !2474
  store i8 32, i8* %4, align 1, !dbg !15021, !tbaa !2529, !ctir !144
  br label %while.cond, !dbg !15013, !llvm.loop !15022

while.end:                                        ; preds = %land.end
  %5 = load i8*, i8** %dest.addr, align 8, !dbg !15024, !tbaa !2474
  store i8 0, i8* %5, align 1, !dbg !15025, !tbaa !2529, !ctir !144
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !15026, !tbaa !2474
  ret i8* %6, !dbg !15027
}

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @ambsalign(i8* %src, i64* %width, i32 %align, i32 %flags) #0 !dbg !15028 !ctir !1878 {
entry:
  %src.addr = alloca i8*, align 8, !ctir !146
  %width.addr = alloca i64*, align 8, !ctir !148
  %align.addr = alloca i32, align 4, !ctir !574
  %flags.addr = alloca i32, align 4, !ctir !27
  %orig_width = alloca i64, align 8, !ctir !149
  %size = alloca i64, align 8, !ctir !149
  %req = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %nbuf = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15029, metadata !DIExpression()), !dbg !15030
  store i64* %width, i64** %width.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !15031, metadata !DIExpression()), !dbg !15032
  store i32 %align, i32* %align.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !15033, metadata !DIExpression()), !dbg !15034
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15035, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.declare(metadata i64* %orig_width, metadata !15037, metadata !DIExpression()), !dbg !15038
  %0 = load i64*, i64** %width.addr, align 8, !dbg !15039, !tbaa !2474
  %1 = load i64, i64* %0, align 8, !dbg !15040, !tbaa !2611, !ctir !149
  store i64 %1, i64* %orig_width, align 8, !dbg !15038, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15041, metadata !DIExpression()), !dbg !15042
  %2 = load i64*, i64** %width.addr, align 8, !dbg !15043, !tbaa !2474
  %3 = load i64, i64* %2, align 8, !dbg !15044, !tbaa !2611, !ctir !149
  store i64 %3, i64* %size, align 8, !dbg !15042, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %req, metadata !15045, metadata !DIExpression()), !dbg !15046
  %4 = load i64, i64* %size, align 8, !dbg !15047, !tbaa !2611
  store i64 %4, i64* %req, align 8, !dbg !15046, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15048, metadata !DIExpression()), !dbg !15049
  store i8* null, i8** %buf, align 8, !dbg !15049, !tbaa !2474
  br label %while.cond, !dbg !15050

while.cond:                                       ; preds = %if.end5, %entry
  %5 = load i64, i64* %req, align 8, !dbg !15051, !tbaa !2611
  %6 = load i64, i64* %size, align 8, !dbg !15052, !tbaa !2611
  %cmp = icmp uge i64 %5, %6, !dbg !15053
  br i1 %cmp, label %while.body, label %while.end, !dbg !15050

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %nbuf, metadata !15054, metadata !DIExpression()), !dbg !15056
  %7 = load i64, i64* %req, align 8, !dbg !15057, !tbaa !2611
  %add = add i64 %7, 1, !dbg !15058
  store i64 %add, i64* %size, align 8, !dbg !15059, !tbaa !2611
  %8 = load i8*, i8** %buf, align 8, !dbg !15060, !tbaa !2474
  %9 = load i64, i64* %size, align 8, !dbg !15061, !tbaa !2611
  %call = call i8* @realloc(i8* %8, i64 %9) #13, !dbg !15062
  store i8* %call, i8** %nbuf, align 8, !dbg !15063, !tbaa !2474
  %10 = load i8*, i8** %nbuf, align 8, !dbg !15064, !tbaa !2474
  %cmp1 = icmp eq i8* %10, null, !dbg !15066
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15067

if.then:                                          ; preds = %while.body
  %11 = load i8*, i8** %buf, align 8, !dbg !15068, !tbaa !2474
  call void @free(i8* %11) #13, !dbg !15070
  store i8* null, i8** %buf, align 8, !dbg !15071, !tbaa !2474
  br label %while.end, !dbg !15072

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %nbuf, align 8, !dbg !15073, !tbaa !2474
  store i8* %12, i8** %buf, align 8, !dbg !15074, !tbaa !2474
  %13 = load i64, i64* %orig_width, align 8, !dbg !15075, !tbaa !2611
  %14 = load i64*, i64** %width.addr, align 8, !dbg !15076, !tbaa !2474
  store i64 %13, i64* %14, align 8, !dbg !15077, !tbaa !2611, !ctir !149
  %15 = load i8*, i8** %src.addr, align 8, !dbg !15078, !tbaa !2474
  %16 = load i8*, i8** %buf, align 8, !dbg !15079, !tbaa !2474
  %17 = load i64, i64* %size, align 8, !dbg !15080, !tbaa !2611
  %18 = load i64*, i64** %width.addr, align 8, !dbg !15081, !tbaa !2474
  %19 = load i32, i32* %align.addr, align 4, !dbg !15082, !tbaa !2529
  %20 = load i32, i32* %flags.addr, align 4, !dbg !15083, !tbaa !2468
  %call2 = call i64 @mbsalign(i8* %15, i8* %16, i64 %17, i64* %18, i32 %19, i32 %20), !dbg !15084
  store i64 %call2, i64* %req, align 8, !dbg !15085, !tbaa !2611
  %21 = load i64, i64* %req, align 8, !dbg !15086, !tbaa !2611
  %cmp3 = icmp eq i64 %21, -1, !dbg !15088
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !15089

if.then4:                                         ; preds = %if.end
  %22 = load i8*, i8** %buf, align 8, !dbg !15090, !tbaa !2474
  call void @free(i8* %22) #13, !dbg !15092
  store i8* null, i8** %buf, align 8, !dbg !15093, !tbaa !2474
  br label %while.end, !dbg !15094

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !15050, !llvm.loop !15095

while.end:                                        ; preds = %if.then4, %if.then, %while.cond
  %23 = load i8*, i8** %buf, align 8, !dbg !15097, !tbaa !2474
  ret i8* %23, !dbg !15098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gnu_mbswidth(i8* %string, i32 %flags) #0 !dbg !15099 !ctir !1889 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !146
  %flags.addr = alloca i32, align 4, !ctir !27
  store i8* %string, i8** %string.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !15101, metadata !DIExpression()), !dbg !15102
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15103, metadata !DIExpression()), !dbg !15104
  %0 = load i8*, i8** %string.addr, align 8, !dbg !15105, !tbaa !2474
  %1 = load i8*, i8** %string.addr, align 8, !dbg !15106, !tbaa !2474
  %call = call i64 @strlen(i8* %1) #16, !dbg !15107
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15108, !tbaa !2468
  %call1 = call i32 @mbsnwidth(i8* %0, i64 %call, i32 %2), !dbg !15109
  ret i32 %call1, !dbg !15110
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) #0 !dbg !15111 !ctir !1891 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %string.addr = alloca i8*, align 8, !ctir !146
  %nbytes.addr = alloca i64, align 8, !ctir !149
  %flags.addr = alloca i32, align 4, !ctir !27
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %width = alloca i32, align 4, !ctir !27
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1893
  %wc = alloca i32, align 4, !ctir !641
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %c = alloca i8, align 1, !ctir !579
  store i8* %string, i8** %string.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !15112, metadata !DIExpression()), !dbg !15113
  store i64 %nbytes, i64* %nbytes.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !15114, metadata !DIExpression()), !dbg !15115
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15116, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15118, metadata !DIExpression()), !dbg !15119
  %0 = load i8*, i8** %string.addr, align 8, !dbg !15120, !tbaa !2474
  store i8* %0, i8** %p, align 8, !dbg !15119, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !15121, metadata !DIExpression()), !dbg !15122
  %1 = load i8*, i8** %p, align 8, !dbg !15123, !tbaa !2474
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !15124, !tbaa !2611
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !15125
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !15122, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %width, metadata !15126, metadata !DIExpression()), !dbg !15127
  store i32 0, i32* %width, align 4, !dbg !15128, !tbaa !2468
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !15129
  %cmp = icmp ugt i64 %call, 1, !dbg !15131
  br i1 %cmp, label %if.then, label %if.end49, !dbg !15132

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !15133

while.cond:                                       ; preds = %sw.epilog, %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !15135, !tbaa !2474
  %4 = load i8*, i8** %plimit, align 8, !dbg !15136, !tbaa !2474
  %cmp1 = icmp ult i8* %3, %4, !dbg !15137
  br i1 %cmp1, label %while.body, label %while.end, !dbg !15133

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8, !dbg !15138, !tbaa !2474
  %6 = load i8, i8* %5, align 1, !dbg !15139, !tbaa !2529, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !15139
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !15140

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !15141, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15141
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !15141, !tbaa !2474
  %8 = load i32, i32* %width, align 4, !dbg !15143, !tbaa !2468
  %inc = add nsw i32 %8, 1, !dbg !15143
  store i32 %inc, i32* %width, align 4, !dbg !15143, !tbaa !2468
  br label %sw.epilog, !dbg !15144

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !15145, metadata !DIExpression()), !dbg !15147
  %9 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !15148
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !15148
  br label %do.body, !dbg !15149

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !15150, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15153, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.declare(metadata i32* %w, metadata !15155, metadata !DIExpression()), !dbg !15156
  %10 = load i8*, i8** %p, align 8, !dbg !15157, !tbaa !2474
  %11 = load i8*, i8** %plimit, align 8, !dbg !15158, !tbaa !2474
  %12 = load i8*, i8** %p, align 8, !dbg !15159, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !15160
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !15160
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15160
  %call2 = call i64 @rpl_mbrtowc(i32* %wc, i8* %10, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !15161
  store i64 %call2, i64* %bytes, align 8, !dbg !15162, !tbaa !2611
  %13 = load i64, i64* %bytes, align 8, !dbg !15163, !tbaa !2611
  %cmp3 = icmp eq i64 %13, -1, !dbg !15165
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !15166

if.then5:                                         ; preds = %do.body
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15167, !tbaa !2468
  %and = and i32 %14, 1, !dbg !15170
  %tobool = icmp ne i32 %and, 0, !dbg !15170
  br i1 %tobool, label %if.else, label %if.then6, !dbg !15171

if.then6:                                         ; preds = %if.then5
  %15 = load i8*, i8** %p, align 8, !dbg !15172, !tbaa !2474
  %incdec.ptr7 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !15172
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !15172, !tbaa !2474
  %16 = load i32, i32* %width, align 4, !dbg !15174, !tbaa !2468
  %inc8 = add nsw i32 %16, 1, !dbg !15174
  store i32 %inc8, i32* %width, align 4, !dbg !15174, !tbaa !2468
  br label %do.end, !dbg !15175

if.else:                                          ; preds = %if.then5
  store i32 -1, i32* %retval, align 4, !dbg !15176
  br label %return, !dbg !15176

if.end:                                           ; preds = %do.body
  %17 = load i64, i64* %bytes, align 8, !dbg !15177, !tbaa !2611
  %cmp9 = icmp eq i64 %17, -2, !dbg !15179
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15180

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !15181, !tbaa !2468
  %and12 = and i32 %18, 1, !dbg !15184
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15184
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !15185

if.then14:                                        ; preds = %if.then11
  %19 = load i8*, i8** %plimit, align 8, !dbg !15186, !tbaa !2474
  store i8* %19, i8** %p, align 8, !dbg !15188, !tbaa !2474
  %20 = load i32, i32* %width, align 4, !dbg !15189, !tbaa !2468
  %inc15 = add nsw i32 %20, 1, !dbg !15189
  store i32 %inc15, i32* %width, align 4, !dbg !15189, !tbaa !2468
  br label %do.end, !dbg !15190

if.else16:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !15191
  br label %return, !dbg !15191

if.end17:                                         ; preds = %if.end
  %21 = load i64, i64* %bytes, align 8, !dbg !15192, !tbaa !2611
  %cmp18 = icmp eq i64 %21, 0, !dbg !15194
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !15195

if.then20:                                        ; preds = %if.end17
  store i64 1, i64* %bytes, align 8, !dbg !15196, !tbaa !2611
  br label %if.end21, !dbg !15197

if.end21:                                         ; preds = %if.then20, %if.end17
  %22 = load i32, i32* %wc, align 4, !dbg !15198, !tbaa !2468
  %call22 = call i32 @wcwidth(i32 %22) #13, !dbg !15199
  store i32 %call22, i32* %w, align 4, !dbg !15200, !tbaa !2468
  %23 = load i32, i32* %w, align 4, !dbg !15201, !tbaa !2468
  %cmp23 = icmp sge i32 %23, 0, !dbg !15203
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !15204

if.then25:                                        ; preds = %if.end21
  %24 = load i32, i32* %w, align 4, !dbg !15205, !tbaa !2468
  %25 = load i32, i32* %width, align 4, !dbg !15208, !tbaa !2468
  %sub = sub nsw i32 2147483647, %25, !dbg !15209
  %cmp26 = icmp sgt i32 %24, %sub, !dbg !15210
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15211

if.then28:                                        ; preds = %if.then25
  br label %overflow, !dbg !15212

if.end29:                                         ; preds = %if.then25
  %26 = load i32, i32* %w, align 4, !dbg !15213, !tbaa !2468
  %27 = load i32, i32* %width, align 4, !dbg !15214, !tbaa !2468
  %add = add nsw i32 %27, %26, !dbg !15214
  store i32 %add, i32* %width, align 4, !dbg !15214, !tbaa !2468
  br label %if.end45, !dbg !15215

if.else30:                                        ; preds = %if.end21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !15216, !tbaa !2468
  %and31 = and i32 %28, 2, !dbg !15218
  %tobool32 = icmp ne i32 %and31, 0, !dbg !15218
  br i1 %tobool32, label %if.else43, label %if.then33, !dbg !15219

if.then33:                                        ; preds = %if.else30
  %29 = load i32, i32* %wc, align 4, !dbg !15220, !tbaa !2468
  %call34 = call i32 @iswcntrl(i32 %29) #13, !dbg !15223
  %tobool35 = icmp ne i32 %call34, 0, !dbg !15223
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !15224

if.then36:                                        ; preds = %if.then33
  %30 = load i32, i32* %width, align 4, !dbg !15225, !tbaa !2468
  %cmp37 = icmp eq i32 %30, 2147483647, !dbg !15228
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !15229

if.then39:                                        ; preds = %if.then36
  br label %overflow, !dbg !15230

if.end40:                                         ; preds = %if.then36
  %31 = load i32, i32* %width, align 4, !dbg !15231, !tbaa !2468
  %inc41 = add nsw i32 %31, 1, !dbg !15231
  store i32 %inc41, i32* %width, align 4, !dbg !15231, !tbaa !2468
  br label %if.end42, !dbg !15232

if.end42:                                         ; preds = %if.end40, %if.then33
  br label %if.end44, !dbg !15233

if.else43:                                        ; preds = %if.else30
  store i32 -1, i32* %retval, align 4, !dbg !15234
  br label %return, !dbg !15234

if.end44:                                         ; preds = %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end29
  %32 = load i64, i64* %bytes, align 8, !dbg !15235, !tbaa !2611
  %33 = load i8*, i8** %p, align 8, !dbg !15236, !tbaa !2474
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !15236
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15236, !tbaa !2474
  br label %do.cond, !dbg !15237

do.cond:                                          ; preds = %if.end45
  %call47 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !15238
  %tobool48 = icmp ne i32 %call47, 0, !dbg !15239
  %lnot = xor i1 %tobool48, true, !dbg !15239
  br i1 %lnot, label %do.body, label %do.end, !dbg !15237, !llvm.loop !15240

do.end:                                           ; preds = %do.cond, %if.then14, %if.then6
  br label %sw.epilog, !dbg !15242

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !15133, !llvm.loop !15243

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %width, align 4, !dbg !15245, !tbaa !2468
  store i32 %34, i32* %retval, align 4, !dbg !15246
  br label %return, !dbg !15246

if.end49:                                         ; preds = %entry
  br label %while.cond50, !dbg !15247

while.cond50:                                     ; preds = %if.end86, %if.end49
  %35 = load i8*, i8** %p, align 8, !dbg !15248, !tbaa !2474
  %36 = load i8*, i8** %plimit, align 8, !dbg !15249, !tbaa !2474
  %cmp51 = icmp ult i8* %35, %36, !dbg !15250
  br i1 %cmp51, label %while.body53, label %while.end87, !dbg !15247

while.body53:                                     ; preds = %while.cond50
  call void @llvm.dbg.declare(metadata i8* %c, metadata !15251, metadata !DIExpression()), !dbg !15253
  %37 = load i8*, i8** %p, align 8, !dbg !15254, !tbaa !2474
  %incdec.ptr54 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !15254
  store i8* %incdec.ptr54, i8** %p, align 8, !dbg !15254, !tbaa !2474
  %38 = load i8, i8* %37, align 1, !dbg !15255, !tbaa !2529, !ctir !147
  store i8 %38, i8* %c, align 1, !dbg !15253, !tbaa !2529
  %call55 = call i16** @__ctype_b_loc() #17, !dbg !15256
  %39 = load i16*, i16** %call55, align 8, !dbg !15256, !tbaa !2474, !ctir !575
  %40 = load i8, i8* %c, align 1, !dbg !15256, !tbaa !2529
  %conv56 = zext i8 %40 to i32, !dbg !15256
  %idxprom = sext i32 %conv56 to i64, !dbg !15256
  %arrayidx = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !15256, !ctir !575
  %41 = load i16, i16* %arrayidx, align 2, !dbg !15256, !tbaa !5852
  %conv57 = zext i16 %41 to i32, !dbg !15256
  %and58 = and i32 %conv57, 16384, !dbg !15256
  %tobool59 = icmp ne i32 %and58, 0, !dbg !15256
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !15258

if.then60:                                        ; preds = %while.body53
  %42 = load i32, i32* %width, align 4, !dbg !15259, !tbaa !2468
  %cmp61 = icmp eq i32 %42, 2147483647, !dbg !15262
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !15263

if.then63:                                        ; preds = %if.then60
  br label %overflow, !dbg !15264

if.end64:                                         ; preds = %if.then60
  %43 = load i32, i32* %width, align 4, !dbg !15265, !tbaa !2468
  %inc65 = add nsw i32 %43, 1, !dbg !15265
  store i32 %inc65, i32* %width, align 4, !dbg !15265, !tbaa !2468
  br label %if.end86, !dbg !15266

if.else66:                                        ; preds = %while.body53
  %44 = load i32, i32* %flags.addr, align 4, !dbg !15267, !tbaa !2468
  %and67 = and i32 %44, 2, !dbg !15269
  %tobool68 = icmp ne i32 %and67, 0, !dbg !15269
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !15270

if.then69:                                        ; preds = %if.else66
  %call70 = call i16** @__ctype_b_loc() #17, !dbg !15271
  %45 = load i16*, i16** %call70, align 8, !dbg !15271, !tbaa !2474, !ctir !575
  %46 = load i8, i8* %c, align 1, !dbg !15271, !tbaa !2529
  %conv71 = zext i8 %46 to i32, !dbg !15271
  %idxprom72 = sext i32 %conv71 to i64, !dbg !15271
  %arrayidx73 = getelementptr inbounds i16, i16* %45, i64 %idxprom72, !dbg !15271, !ctir !575
  %47 = load i16, i16* %arrayidx73, align 2, !dbg !15271, !tbaa !5852
  %conv74 = zext i16 %47 to i32, !dbg !15271
  %and75 = and i32 %conv74, 2, !dbg !15271
  %tobool76 = icmp ne i32 %and75, 0, !dbg !15271
  br i1 %tobool76, label %if.end83, label %if.then77, !dbg !15274

if.then77:                                        ; preds = %if.then69
  %48 = load i32, i32* %width, align 4, !dbg !15275, !tbaa !2468
  %cmp78 = icmp eq i32 %48, 2147483647, !dbg !15278
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !15279

if.then80:                                        ; preds = %if.then77
  br label %overflow, !dbg !15280

if.end81:                                         ; preds = %if.then77
  %49 = load i32, i32* %width, align 4, !dbg !15281, !tbaa !2468
  %inc82 = add nsw i32 %49, 1, !dbg !15281
  store i32 %inc82, i32* %width, align 4, !dbg !15281, !tbaa !2468
  br label %if.end83, !dbg !15282

if.end83:                                         ; preds = %if.end81, %if.then69
  br label %if.end85, !dbg !15283

if.else84:                                        ; preds = %if.else66
  store i32 -1, i32* %retval, align 4, !dbg !15284
  br label %return, !dbg !15284

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end64
  br label %while.cond50, !dbg !15247, !llvm.loop !15285

while.end87:                                      ; preds = %while.cond50
  %50 = load i32, i32* %width, align 4, !dbg !15287, !tbaa !2468
  store i32 %50, i32* %retval, align 4, !dbg !15288
  br label %return, !dbg !15288

overflow:                                         ; preds = %if.then80, %if.then63, %if.then39, %if.then28
  call void @llvm.dbg.label(metadata !15289), !dbg !15290
  store i32 2147483647, i32* %retval, align 4, !dbg !15291
  br label %return, !dbg !15291

return:                                           ; preds = %overflow, %while.end87, %if.else84, %while.end, %if.else43, %if.else16, %if.else
  %51 = load i32, i32* %retval, align 4, !dbg !15292
  ret i32 %51, !dbg !15292
}

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mpsort(i8** %base, i64 %n, i32 (i8*, i8*)* %cmp) #0 !dbg !15293 !ctir !1906 {
entry:
  %base.addr = alloca i8**, align 8, !ctir !181
  %n.addr = alloca i64, align 8, !ctir !149
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1908
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15294, metadata !DIExpression()), !dbg !15295
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15296, metadata !DIExpression()), !dbg !15297
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  %0 = load i8**, i8*** %base.addr, align 8, !dbg !15300, !tbaa !2474
  %1 = load i64, i64* %n.addr, align 8, !dbg !15301, !tbaa !2611
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15302, !tbaa !2474
  %3 = load i64, i64* %n.addr, align 8, !dbg !15303, !tbaa !2611
  %add.ptr = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !15304
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15305, !tbaa !2474
  call void @mpsort_with_tmp(i8** %0, i64 %1, i8** %add.ptr, i32 (i8*, i8*)* %4), !dbg !15306
  ret void, !dbg !15307
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_with_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15308 !ctir !1913 {
entry:
  %base.addr = alloca i8**, align 8, !ctir !1915
  %n.addr = alloca i64, align 8, !ctir !149
  %tmp.addr = alloca i8**, align 8, !ctir !1915
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1908
  %p0 = alloca i8*, align 8, !ctir !175
  %p1 = alloca i8*, align 8, !ctir !175
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %tlim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %bb = alloca i8*, align 8, !ctir !175
  %tt = alloca i8*, align 8, !ctir !175
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15309, metadata !DIExpression()), !dbg !15310
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15311, metadata !DIExpression()), !dbg !15312
  store i8** %tmp, i8*** %tmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15313, metadata !DIExpression()), !dbg !15314
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15315, metadata !DIExpression()), !dbg !15316
  %0 = load i64, i64* %n.addr, align 8, !dbg !15317, !tbaa !2611
  %cmp1 = icmp ule i64 %0, 2, !dbg !15319
  br i1 %cmp1, label %if.then, label %if.else, !dbg !15320

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !15321, !tbaa !2611
  %cmp2 = icmp eq i64 %1, 2, !dbg !15324
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !15325

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !15326, metadata !DIExpression()), !dbg !15328
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15329, !tbaa !2474
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !15329, !ctir !181
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !15329, !tbaa !2474
  store i8* %3, i8** %p0, align 8, !dbg !15328, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !15330, metadata !DIExpression()), !dbg !15331
  %4 = load i8**, i8*** %base.addr, align 8, !dbg !15332, !tbaa !2474
  %arrayidx4 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !15332, !ctir !181
  %5 = load i8*, i8** %arrayidx4, align 8, !dbg !15332, !tbaa !2474
  store i8* %5, i8** %p1, align 8, !dbg !15331, !tbaa !2474
  %6 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15333, !tbaa !2474
  %7 = load i8*, i8** %p0, align 8, !dbg !15335, !tbaa !2474
  %8 = load i8*, i8** %p1, align 8, !dbg !15336, !tbaa !2474
  %call = call i32 %6(i8* %7, i8* %8), !dbg !15333
  %cmp5 = icmp sle i32 %call, 0, !dbg !15337
  br i1 %cmp5, label %if.end, label %if.then6, !dbg !15338

if.then6:                                         ; preds = %if.then3
  %9 = load i8*, i8** %p1, align 8, !dbg !15339, !tbaa !2474
  %10 = load i8**, i8*** %base.addr, align 8, !dbg !15341, !tbaa !2474
  %arrayidx7 = getelementptr inbounds i8*, i8** %10, i64 0, !dbg !15341, !ctir !181
  store i8* %9, i8** %arrayidx7, align 8, !dbg !15342, !tbaa !2474
  %11 = load i8*, i8** %p0, align 8, !dbg !15343, !tbaa !2474
  %12 = load i8**, i8*** %base.addr, align 8, !dbg !15344, !tbaa !2474
  %arrayidx8 = getelementptr inbounds i8*, i8** %12, i64 1, !dbg !15344, !ctir !181
  store i8* %11, i8** %arrayidx8, align 8, !dbg !15345, !tbaa !2474
  br label %if.end, !dbg !15346

if.end:                                           ; preds = %if.then6, %if.then3
  br label %if.end9, !dbg !15347

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end39, !dbg !15348

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15349, metadata !DIExpression()), !dbg !15351
  %13 = load i64, i64* %n.addr, align 8, !dbg !15352, !tbaa !2611
  %div = udiv i64 %13, 2, !dbg !15353
  store i64 %div, i64* %n1, align 8, !dbg !15351, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15354, metadata !DIExpression()), !dbg !15355
  %14 = load i64, i64* %n.addr, align 8, !dbg !15356, !tbaa !2611
  %15 = load i64, i64* %n1, align 8, !dbg !15357, !tbaa !2611
  %sub = sub i64 %14, %15, !dbg !15358
  store i64 %sub, i64* %n2, align 8, !dbg !15355, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15359, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.declare(metadata i64* %t, metadata !15361, metadata !DIExpression()), !dbg !15362
  store i64 0, i64* %t, align 8, !dbg !15362, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %tlim, metadata !15363, metadata !DIExpression()), !dbg !15364
  %16 = load i64, i64* %n1, align 8, !dbg !15365, !tbaa !2611
  store i64 %16, i64* %tlim, align 8, !dbg !15364, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15366, metadata !DIExpression()), !dbg !15367
  %17 = load i64, i64* %n1, align 8, !dbg !15368, !tbaa !2611
  store i64 %17, i64* %b, align 8, !dbg !15367, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15369, metadata !DIExpression()), !dbg !15370
  %18 = load i64, i64* %n.addr, align 8, !dbg !15371, !tbaa !2611
  store i64 %18, i64* %blim, align 8, !dbg !15370, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15372, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.declare(metadata i8** %tt, metadata !15374, metadata !DIExpression()), !dbg !15375
  %19 = load i8**, i8*** %base.addr, align 8, !dbg !15376, !tbaa !2474
  %20 = load i64, i64* %n1, align 8, !dbg !15377, !tbaa !2611
  %add.ptr = getelementptr inbounds i8*, i8** %19, i64 %20, !dbg !15378
  %21 = load i64, i64* %n2, align 8, !dbg !15379, !tbaa !2611
  %22 = load i8**, i8*** %tmp.addr, align 8, !dbg !15380, !tbaa !2474
  %23 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15381, !tbaa !2474
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %21, i8** %22, i32 (i8*, i8*)* %23), !dbg !15382
  %24 = load i64, i64* %n1, align 8, !dbg !15383, !tbaa !2611
  %cmp10 = icmp ult i64 %24, 2, !dbg !15385
  br i1 %cmp10, label %if.then11, label %if.else14, !dbg !15386

if.then11:                                        ; preds = %if.else
  %25 = load i8**, i8*** %base.addr, align 8, !dbg !15387, !tbaa !2474
  %arrayidx12 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !15387, !ctir !181
  %26 = load i8*, i8** %arrayidx12, align 8, !dbg !15387, !tbaa !2474
  %27 = load i8**, i8*** %tmp.addr, align 8, !dbg !15388, !tbaa !2474
  %arrayidx13 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !15388, !ctir !181
  store i8* %26, i8** %arrayidx13, align 8, !dbg !15389, !tbaa !2474
  br label %if.end15, !dbg !15388

if.else14:                                        ; preds = %if.else
  %28 = load i8**, i8*** %base.addr, align 8, !dbg !15390, !tbaa !2474
  %29 = load i64, i64* %n1, align 8, !dbg !15391, !tbaa !2611
  %30 = load i8**, i8*** %tmp.addr, align 8, !dbg !15392, !tbaa !2474
  %31 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15393, !tbaa !2474
  call void @mpsort_into_tmp(i8** %28, i64 %29, i8** %30, i32 (i8*, i8*)* %31), !dbg !15394
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then11
  %32 = load i8**, i8*** %tmp.addr, align 8, !dbg !15395, !tbaa !2474
  %33 = load i64, i64* %t, align 8, !dbg !15396, !tbaa !2611
  %arrayidx16 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !15395, !ctir !181
  %34 = load i8*, i8** %arrayidx16, align 8, !dbg !15395, !tbaa !2474
  store i8* %34, i8** %tt, align 8, !dbg !15397, !tbaa !2474
  %35 = load i8**, i8*** %base.addr, align 8, !dbg !15398, !tbaa !2474
  %36 = load i64, i64* %b, align 8, !dbg !15399, !tbaa !2611
  %arrayidx17 = getelementptr inbounds i8*, i8** %35, i64 %36, !dbg !15398, !ctir !181
  %37 = load i8*, i8** %arrayidx17, align 8, !dbg !15398, !tbaa !2474
  store i8* %37, i8** %bb, align 8, !dbg !15400, !tbaa !2474
  store i64 0, i64* %i, align 8, !dbg !15401, !tbaa !2611
  br label %for.cond, !dbg !15403

for.cond:                                         ; preds = %if.end38, %if.end15
  %38 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15404, !tbaa !2474
  %39 = load i8*, i8** %tt, align 8, !dbg !15407, !tbaa !2474
  %40 = load i8*, i8** %bb, align 8, !dbg !15408, !tbaa !2474
  %call18 = call i32 %38(i8* %39, i8* %40), !dbg !15404
  %cmp19 = icmp sle i32 %call18, 0, !dbg !15409
  br i1 %cmp19, label %if.then20, label %if.else27, !dbg !15410

if.then20:                                        ; preds = %for.cond
  %41 = load i8*, i8** %tt, align 8, !dbg !15411, !tbaa !2474
  %42 = load i8**, i8*** %base.addr, align 8, !dbg !15413, !tbaa !2474
  %43 = load i64, i64* %i, align 8, !dbg !15414, !tbaa !2611
  %inc = add i64 %43, 1, !dbg !15414
  store i64 %inc, i64* %i, align 8, !dbg !15414, !tbaa !2611
  %arrayidx21 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !15413, !ctir !181
  store i8* %41, i8** %arrayidx21, align 8, !dbg !15415, !tbaa !2474
  %44 = load i64, i64* %t, align 8, !dbg !15416, !tbaa !2611
  %inc22 = add i64 %44, 1, !dbg !15416
  store i64 %inc22, i64* %t, align 8, !dbg !15416, !tbaa !2611
  %45 = load i64, i64* %t, align 8, !dbg !15417, !tbaa !2611
  %46 = load i64, i64* %tlim, align 8, !dbg !15419, !tbaa !2611
  %cmp23 = icmp eq i64 %45, %46, !dbg !15420
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !15421

if.then24:                                        ; preds = %if.then20
  br label %for.end, !dbg !15422

if.end25:                                         ; preds = %if.then20
  %47 = load i8**, i8*** %tmp.addr, align 8, !dbg !15423, !tbaa !2474
  %48 = load i64, i64* %t, align 8, !dbg !15424, !tbaa !2611
  %arrayidx26 = getelementptr inbounds i8*, i8** %47, i64 %48, !dbg !15423, !ctir !181
  %49 = load i8*, i8** %arrayidx26, align 8, !dbg !15423, !tbaa !2474
  store i8* %49, i8** %tt, align 8, !dbg !15425, !tbaa !2474
  br label %if.end38, !dbg !15426

if.else27:                                        ; preds = %for.cond
  %50 = load i8*, i8** %bb, align 8, !dbg !15427, !tbaa !2474
  %51 = load i8**, i8*** %base.addr, align 8, !dbg !15429, !tbaa !2474
  %52 = load i64, i64* %i, align 8, !dbg !15430, !tbaa !2611
  %inc28 = add i64 %52, 1, !dbg !15430
  store i64 %inc28, i64* %i, align 8, !dbg !15430, !tbaa !2611
  %arrayidx29 = getelementptr inbounds i8*, i8** %51, i64 %52, !dbg !15429, !ctir !181
  store i8* %50, i8** %arrayidx29, align 8, !dbg !15431, !tbaa !2474
  %53 = load i64, i64* %b, align 8, !dbg !15432, !tbaa !2611
  %inc30 = add i64 %53, 1, !dbg !15432
  store i64 %inc30, i64* %b, align 8, !dbg !15432, !tbaa !2611
  %54 = load i64, i64* %b, align 8, !dbg !15433, !tbaa !2611
  %55 = load i64, i64* %blim, align 8, !dbg !15435, !tbaa !2611
  %cmp31 = icmp eq i64 %54, %55, !dbg !15436
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !15437

if.then32:                                        ; preds = %if.else27
  %56 = load i8**, i8*** %base.addr, align 8, !dbg !15438, !tbaa !2474
  %57 = load i64, i64* %i, align 8, !dbg !15440, !tbaa !2611
  %add.ptr33 = getelementptr inbounds i8*, i8** %56, i64 %57, !dbg !15441
  %58 = bitcast i8** %add.ptr33 to i8*, !dbg !15442
  %59 = load i8**, i8*** %tmp.addr, align 8, !dbg !15443, !tbaa !2474
  %60 = load i64, i64* %t, align 8, !dbg !15444, !tbaa !2611
  %add.ptr34 = getelementptr inbounds i8*, i8** %59, i64 %60, !dbg !15445
  %61 = bitcast i8** %add.ptr34 to i8*, !dbg !15442
  %62 = load i64, i64* %tlim, align 8, !dbg !15446, !tbaa !2611
  %63 = load i64, i64* %t, align 8, !dbg !15447, !tbaa !2611
  %sub35 = sub i64 %62, %63, !dbg !15448
  %mul = mul i64 %sub35, 8, !dbg !15449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %61, i64 %mul, i1 false), !dbg !15442
  br label %for.end, !dbg !15450

if.end36:                                         ; preds = %if.else27
  %64 = load i8**, i8*** %base.addr, align 8, !dbg !15451, !tbaa !2474
  %65 = load i64, i64* %b, align 8, !dbg !15452, !tbaa !2611
  %arrayidx37 = getelementptr inbounds i8*, i8** %64, i64 %65, !dbg !15451, !ctir !181
  %66 = load i8*, i8** %arrayidx37, align 8, !dbg !15451, !tbaa !2474
  store i8* %66, i8** %bb, align 8, !dbg !15453, !tbaa !2474
  br label %if.end38

if.end38:                                         ; preds = %if.end36, %if.end25
  br label %for.cond, !dbg !15454, !llvm.loop !15455

for.end:                                          ; preds = %if.then32, %if.then24
  br label %if.end39

if.end39:                                         ; preds = %for.end, %if.end9
  ret void, !dbg !15458
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_into_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15459 !ctir !1913 {
entry:
  %base.addr = alloca i8**, align 8, !ctir !1915
  %n.addr = alloca i64, align 8, !ctir !149
  %tmp.addr = alloca i8**, align 8, !ctir !1915
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1908
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %a = alloca i64, align 8, !ctir !149
  %alim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %ba = alloca i8*, align 8, !ctir !175
  %bb = alloca i8*, align 8, !ctir !175
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15462, metadata !DIExpression()), !dbg !15463
  store i8** %tmp, i8*** %tmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15464, metadata !DIExpression()), !dbg !15465
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15466, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15468, metadata !DIExpression()), !dbg !15469
  %0 = load i64, i64* %n.addr, align 8, !dbg !15470, !tbaa !2611
  %div = udiv i64 %0, 2, !dbg !15471
  store i64 %div, i64* %n1, align 8, !dbg !15469, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15472, metadata !DIExpression()), !dbg !15473
  %1 = load i64, i64* %n.addr, align 8, !dbg !15474, !tbaa !2611
  %2 = load i64, i64* %n1, align 8, !dbg !15475, !tbaa !2611
  %sub = sub i64 %1, %2, !dbg !15476
  store i64 %sub, i64* %n2, align 8, !dbg !15473, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %a, metadata !15477, metadata !DIExpression()), !dbg !15478
  store i64 0, i64* %a, align 8, !dbg !15478, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %alim, metadata !15479, metadata !DIExpression()), !dbg !15480
  %3 = load i64, i64* %n1, align 8, !dbg !15481, !tbaa !2611
  store i64 %3, i64* %alim, align 8, !dbg !15480, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15482, metadata !DIExpression()), !dbg !15483
  %4 = load i64, i64* %n1, align 8, !dbg !15484, !tbaa !2611
  store i64 %4, i64* %b, align 8, !dbg !15483, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15485, metadata !DIExpression()), !dbg !15486
  %5 = load i64, i64* %n.addr, align 8, !dbg !15487, !tbaa !2611
  store i64 %5, i64* %blim, align 8, !dbg !15486, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %ba, metadata !15488, metadata !DIExpression()), !dbg !15489
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15490, metadata !DIExpression()), !dbg !15491
  %6 = load i8**, i8*** %base.addr, align 8, !dbg !15492, !tbaa !2474
  %7 = load i64, i64* %n1, align 8, !dbg !15493, !tbaa !2611
  %add.ptr = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !15494
  %8 = load i64, i64* %n2, align 8, !dbg !15495, !tbaa !2611
  %9 = load i8**, i8*** %tmp.addr, align 8, !dbg !15496, !tbaa !2474
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15497, !tbaa !2474
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %8, i8** %9, i32 (i8*, i8*)* %10), !dbg !15498
  %11 = load i8**, i8*** %base.addr, align 8, !dbg !15499, !tbaa !2474
  %12 = load i64, i64* %n1, align 8, !dbg !15500, !tbaa !2611
  %13 = load i8**, i8*** %tmp.addr, align 8, !dbg !15501, !tbaa !2474
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15502, !tbaa !2474
  call void @mpsort_with_tmp(i8** %11, i64 %12, i8** %13, i32 (i8*, i8*)* %14), !dbg !15503
  %15 = load i8**, i8*** %base.addr, align 8, !dbg !15504, !tbaa !2474
  %16 = load i64, i64* %a, align 8, !dbg !15505, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !15504, !ctir !181
  %17 = load i8*, i8** %arrayidx, align 8, !dbg !15504, !tbaa !2474
  store i8* %17, i8** %ba, align 8, !dbg !15506, !tbaa !2474
  %18 = load i8**, i8*** %base.addr, align 8, !dbg !15507, !tbaa !2474
  %19 = load i64, i64* %b, align 8, !dbg !15508, !tbaa !2611
  %arrayidx1 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !15507, !ctir !181
  %20 = load i8*, i8** %arrayidx1, align 8, !dbg !15507, !tbaa !2474
  store i8* %20, i8** %bb, align 8, !dbg !15509, !tbaa !2474
  br label %for.cond, !dbg !15510

for.cond:                                         ; preds = %if.end12, %entry
  %21 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15511, !tbaa !2474
  %22 = load i8*, i8** %ba, align 8, !dbg !15515, !tbaa !2474
  %23 = load i8*, i8** %bb, align 8, !dbg !15516, !tbaa !2474
  %call = call i32 %21(i8* %22, i8* %23), !dbg !15511
  %cmp2 = icmp sle i32 %call, 0, !dbg !15517
  br i1 %cmp2, label %if.then, label %if.else, !dbg !15518

if.then:                                          ; preds = %for.cond
  %24 = load i8*, i8** %ba, align 8, !dbg !15519, !tbaa !2474
  %25 = load i8**, i8*** %tmp.addr, align 8, !dbg !15521, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8*, i8** %25, i32 1, !dbg !15521
  store i8** %incdec.ptr, i8*** %tmp.addr, align 8, !dbg !15521, !tbaa !2474
  store i8* %24, i8** %25, align 8, !dbg !15522, !tbaa !2474, !ctir !175
  %26 = load i64, i64* %a, align 8, !dbg !15523, !tbaa !2611
  %inc = add i64 %26, 1, !dbg !15523
  store i64 %inc, i64* %a, align 8, !dbg !15523, !tbaa !2611
  %27 = load i64, i64* %a, align 8, !dbg !15524, !tbaa !2611
  %28 = load i64, i64* %alim, align 8, !dbg !15526, !tbaa !2611
  %cmp3 = icmp eq i64 %27, %28, !dbg !15527
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !15528

if.then4:                                         ; preds = %if.then
  %29 = load i64, i64* %b, align 8, !dbg !15529, !tbaa !2611
  store i64 %29, i64* %a, align 8, !dbg !15531, !tbaa !2611
  %30 = load i64, i64* %blim, align 8, !dbg !15532, !tbaa !2611
  store i64 %30, i64* %alim, align 8, !dbg !15533, !tbaa !2611
  br label %for.end, !dbg !15534

if.end:                                           ; preds = %if.then
  %31 = load i8**, i8*** %base.addr, align 8, !dbg !15535, !tbaa !2474
  %32 = load i64, i64* %a, align 8, !dbg !15536, !tbaa !2611
  %arrayidx5 = getelementptr inbounds i8*, i8** %31, i64 %32, !dbg !15535, !ctir !181
  %33 = load i8*, i8** %arrayidx5, align 8, !dbg !15535, !tbaa !2474
  store i8* %33, i8** %ba, align 8, !dbg !15537, !tbaa !2474
  br label %if.end12, !dbg !15538

if.else:                                          ; preds = %for.cond
  %34 = load i8*, i8** %bb, align 8, !dbg !15539, !tbaa !2474
  %35 = load i8**, i8*** %tmp.addr, align 8, !dbg !15541, !tbaa !2474
  %incdec.ptr6 = getelementptr inbounds i8*, i8** %35, i32 1, !dbg !15541
  store i8** %incdec.ptr6, i8*** %tmp.addr, align 8, !dbg !15541, !tbaa !2474
  store i8* %34, i8** %35, align 8, !dbg !15542, !tbaa !2474, !ctir !175
  %36 = load i64, i64* %b, align 8, !dbg !15543, !tbaa !2611
  %inc7 = add i64 %36, 1, !dbg !15543
  store i64 %inc7, i64* %b, align 8, !dbg !15543, !tbaa !2611
  %37 = load i64, i64* %b, align 8, !dbg !15544, !tbaa !2611
  %38 = load i64, i64* %blim, align 8, !dbg !15546, !tbaa !2611
  %cmp8 = icmp eq i64 %37, %38, !dbg !15547
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !15548

if.then9:                                         ; preds = %if.else
  br label %for.end, !dbg !15549

if.end10:                                         ; preds = %if.else
  %39 = load i8**, i8*** %base.addr, align 8, !dbg !15550, !tbaa !2474
  %40 = load i64, i64* %b, align 8, !dbg !15551, !tbaa !2611
  %arrayidx11 = getelementptr inbounds i8*, i8** %39, i64 %40, !dbg !15550, !ctir !181
  %41 = load i8*, i8** %arrayidx11, align 8, !dbg !15550, !tbaa !2474
  store i8* %41, i8** %bb, align 8, !dbg !15552, !tbaa !2474
  br label %if.end12

if.end12:                                         ; preds = %if.end10, %if.end
  br label %for.cond, !dbg !15553, !llvm.loop !15554

for.end:                                          ; preds = %if.then9, %if.then4
  %42 = load i8**, i8*** %tmp.addr, align 8, !dbg !15557, !tbaa !2474
  %43 = bitcast i8** %42 to i8*, !dbg !15558
  %44 = load i8**, i8*** %base.addr, align 8, !dbg !15559, !tbaa !2474
  %45 = load i64, i64* %a, align 8, !dbg !15560, !tbaa !2611
  %add.ptr13 = getelementptr inbounds i8*, i8** %44, i64 %45, !dbg !15561
  %46 = bitcast i8** %add.ptr13 to i8*, !dbg !15558
  %47 = load i64, i64* %alim, align 8, !dbg !15562, !tbaa !2611
  %48 = load i64, i64* %a, align 8, !dbg !15563, !tbaa !2611
  %sub14 = sub i64 %47, %48, !dbg !15564
  %mul = mul i64 %sub14, 8, !dbg !15565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %46, i64 %mul, i1 false), !dbg !15558
  ret void, !dbg !15566
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @nstrftime(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15567 !ctir !1919 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !143
  %maxsize.addr = alloca i64, align 8, !ctir !149
  %format.addr = alloca i8*, align 8, !ctir !146
  %tp.addr = alloca %struct.tm*, align 8, !ctir !1921
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !1936
  %ns.addr = alloca i32, align 4, !ctir !27
  %tzset_called = alloca i8, align 1, !ctir !141
  store i8* %s, i8** %s.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  store i64 %maxsize, i64* %maxsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15571, metadata !DIExpression()), !dbg !15572
  store i8* %format, i8** %format.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15573, metadata !DIExpression()), !dbg !15574
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15575, metadata !DIExpression()), !dbg !15576
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15577, metadata !DIExpression()), !dbg !15578
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15579, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.declare(metadata i8* %tzset_called, metadata !15580, metadata !DIExpression()), !dbg !15581
  store i8 0, i8* %tzset_called, align 1, !dbg !15581, !tbaa !2493
  %0 = load i8*, i8** %s.addr, align 8, !dbg !15582, !tbaa !2474
  %1 = load i64, i64* %maxsize.addr, align 8, !dbg !15583, !tbaa !2611
  %2 = load i8*, i8** %format.addr, align 8, !dbg !15584, !tbaa !2474
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15585, !tbaa !2474
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15586, !tbaa !2474
  %5 = load i32, i32* %ns.addr, align 4, !dbg !15586, !tbaa !2468
  %call = call i64 @__strftime_internal(i8* %0, i64 %1, i8* %2, %struct.tm* %3, i1 zeroext false, i32 0, i32 -1, i8* %tzset_called, %struct.tm_zone* %4, i32 %5), !dbg !15587
  ret i64 %call, !dbg !15588
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__strftime_internal(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, i1 zeroext %upcase, i32 %yr_spec, i32 %width, i8* %tzset_called, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15589 !ctir !1944 {
entry:
  %retval = alloca i64, align 8, !ctir !149
  %s.addr = alloca i8*, align 8, !ctir !143
  %maxsize.addr = alloca i64, align 8, !ctir !149
  %format.addr = alloca i8*, align 8, !ctir !146
  %tp.addr = alloca %struct.tm*, align 8, !ctir !1921
  %upcase.addr = alloca i8, align 1, !ctir !141
  %yr_spec.addr = alloca i32, align 4, !ctir !27
  %width.addr = alloca i32, align 4, !ctir !27
  %tzset_called.addr = alloca i8*, align 8, !ctir !628
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !1936
  %ns.addr = alloca i32, align 4, !ctir !27
  %hour12 = alloca i32, align 4, !ctir !27
  %zone = alloca i8*, align 8, !ctir !146
  %i = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %f = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %modifier = alloca i32, align 4, !ctir !27
  %digits = alloca i32, align 4, !ctir !27
  %number_value = alloca i32, align 4, !ctir !27
  %u_number_value = alloca i32, align 4, !ctir !6
  %negative_number = alloca i8, align 1, !ctir !141
  %always_output_a_sign = alloca i8, align 1, !ctir !141
  %tz_colon_mask = alloca i32, align 4, !ctir !27
  %subfmt = alloca i8*, align 8, !ctir !146
  %sign_char = alloca i8, align 1, !ctir !144
  %bufp = alloca i8*, align 8, !ctir !143
  %buf = alloca [23 x i8], align 16, !ctir !1946
  %to_lowcase = alloca i8, align 1, !ctir !141
  %to_uppcase = alloca i8, align 1, !ctir !141
  %colons = alloca i64, align 8, !ctir !149
  %change_case = alloca i8, align 1, !ctir !141
  %format_char = alloca i32, align 4, !ctir !27
  %subwidth = alloca i32, align 4, !ctir !27
  %_n = alloca i64, align 8, !ctir !149
  %_w = alloca i64, align 8, !ctir !149
  %_incr = alloca i64, align 8, !ctir !149
  %_delta = alloca i64, align 8, !ctir !149
  %_n95 = alloca i64, align 8, !ctir !149
  %_w96 = alloca i64, align 8, !ctir !149
  %_incr104 = alloca i64, align 8, !ctir !149
  %_delta124 = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %_n182 = alloca i64, align 8, !ctir !149
  %_w183 = alloca i64, align 8, !ctir !149
  %_incr191 = alloca i64, align 8, !ctir !149
  %_delta211 = alloca i64, align 8, !ctir !149
  %ufmt = alloca [5 x i8], align 1, !ctir !1949
  %u = alloca i8*, align 8, !ctir !143
  %ubuf = alloca [1024 x i8], align 16, !ctir !1950
  %len233 = alloca i64, align 8, !ctir !149
  %_n251 = alloca i64, align 8, !ctir !149
  %_w253 = alloca i64, align 8, !ctir !149
  %_incr261 = alloca i64, align 8, !ctir !149
  %_delta281 = alloca i64, align 8, !ctir !149
  %century = alloca i32, align 4, !ctir !27
  %_n437 = alloca i64, align 8, !ctir !149
  %_w438 = alloca i64, align 8, !ctir !149
  %_incr446 = alloca i64, align 8, !ctir !149
  %_delta466 = alloca i64, align 8, !ctir !149
  %padding = alloca i32, align 4, !ctir !27
  %_n525 = alloca i64, align 8, !ctir !149
  %_w526 = alloca i64, align 8, !ctir !149
  %_incr534 = alloca i64, align 8, !ctir !149
  %_delta554 = alloca i64, align 8, !ctir !149
  %_n584 = alloca i64, align 8, !ctir !149
  %_w585 = alloca i64, align 8, !ctir !149
  %_incr593 = alloca i64, align 8, !ctir !149
  %_delta613 = alloca i64, align 8, !ctir !149
  %_n646 = alloca i64, align 8, !ctir !149
  %_w647 = alloca i64, align 8, !ctir !149
  %_incr655 = alloca i64, align 8, !ctir !149
  %_delta675 = alloca i64, align 8, !ctir !149
  %_n698 = alloca i64, align 8, !ctir !149
  %_w704 = alloca i64, align 8, !ctir !149
  %_incr712 = alloca i64, align 8, !ctir !149
  %_delta732 = alloca i64, align 8, !ctir !149
  %j = alloca i32, align 4, !ctir !27
  %_n867 = alloca i64, align 8, !ctir !149
  %_w868 = alloca i64, align 8, !ctir !149
  %_incr876 = alloca i64, align 8, !ctir !149
  %_delta896 = alloca i64, align 8, !ctir !149
  %ltm = alloca %struct.tm, align 8, !ctir !1923
  %t = alloca i64, align 8, !ctir !162
  %d = alloca i32, align 4, !ctir !27
  %_n971 = alloca i64, align 8, !ctir !149
  %_w972 = alloca i64, align 8, !ctir !149
  %_incr980 = alloca i64, align 8, !ctir !149
  %_delta1000 = alloca i64, align 8, !ctir !149
  %year = alloca i32, align 4, !ctir !27
  %year_adjust = alloca i32, align 4, !ctir !27
  %days = alloca i32, align 4, !ctir !27
  %d1080 = alloca i32, align 4, !ctir !27
  %yy = alloca i32, align 4, !ctir !27
  %yy1197 = alloca i32, align 4, !ctir !27
  %_n1221 = alloca i64, align 8, !ctir !149
  %_w1223 = alloca i64, align 8, !ctir !149
  %_incr1231 = alloca i64, align 8, !ctir !149
  %_delta1251 = alloca i64, align 8, !ctir !149
  %diff = alloca i32, align 4, !ctir !27
  %hour_diff = alloca i32, align 4, !ctir !27
  %min_diff = alloca i32, align 4, !ctir !27
  %sec_diff = alloca i32, align 4, !ctir !27
  %flen = alloca i32, align 4, !ctir !27
  %_n1367 = alloca i64, align 8, !ctir !149
  %_w1369 = alloca i64, align 8, !ctir !149
  %_incr1377 = alloca i64, align 8, !ctir !149
  %_delta1397 = alloca i64, align 8, !ctir !149
  store i8* %s, i8** %s.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15590, metadata !DIExpression()), !dbg !15591
  store i64 %maxsize, i64* %maxsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15592, metadata !DIExpression()), !dbg !15593
  store i8* %format, i8** %format.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15594, metadata !DIExpression()), !dbg !15595
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15596, metadata !DIExpression()), !dbg !15597
  %frombool = zext i1 %upcase to i8
  store i8 %frombool, i8* %upcase.addr, align 1, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %upcase.addr, metadata !15598, metadata !DIExpression()), !dbg !15599
  store i32 %yr_spec, i32* %yr_spec.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %yr_spec.addr, metadata !15600, metadata !DIExpression()), !dbg !15601
  store i32 %width, i32* %width.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !15602, metadata !DIExpression()), !dbg !15603
  store i8* %tzset_called, i8** %tzset_called.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %tzset_called.addr, metadata !15604, metadata !DIExpression()), !dbg !15605
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15606, metadata !DIExpression()), !dbg !15607
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15608, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.declare(metadata i32* %hour12, metadata !15609, metadata !DIExpression()), !dbg !15610
  %0 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15611, !tbaa !2474
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 2, !dbg !15612, !ctir !1922
  %1 = load i32, i32* %tm_hour, align 8, !dbg !15612, !tbaa !15613, !ctir !27
  store i32 %1, i32* %hour12, align 4, !dbg !15610, !tbaa !2468
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !15614, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15616, metadata !DIExpression()), !dbg !15617
  store i64 0, i64* %i, align 8, !dbg !15617, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15618, metadata !DIExpression()), !dbg !15619
  %2 = load i8*, i8** %s.addr, align 8, !dbg !15620, !tbaa !2474
  store i8* %2, i8** %p, align 8, !dbg !15619, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %f, metadata !15621, metadata !DIExpression()), !dbg !15622
  store i8* null, i8** %zone, align 8, !dbg !15623, !tbaa !2474
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15624, !tbaa !2474
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 10, !dbg !15625, !ctir !1922
  %4 = load i8*, i8** %tm_zone, align 8, !dbg !15625, !tbaa !15626, !ctir !146
  store i8* %4, i8** %zone, align 8, !dbg !15627, !tbaa !2474
  %5 = load i8*, i8** %zone, align 8, !dbg !15628, !tbaa !2474
  %tobool = icmp ne i8* %5, null, !dbg !15628
  br i1 %tobool, label %if.end, label %if.then, !dbg !15630

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.359, i64 0, i64 0), i8** %zone, align 8, !dbg !15631, !tbaa !2474
  br label %if.end, !dbg !15632

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %hour12, align 4, !dbg !15633, !tbaa !2468
  %cmp = icmp sgt i32 %6, 12, !dbg !15635
  br i1 %cmp, label %if.then1, label %if.else, !dbg !15636

if.then1:                                         ; preds = %if.end
  %7 = load i32, i32* %hour12, align 4, !dbg !15637, !tbaa !2468
  %sub = sub nsw i32 %7, 12, !dbg !15637
  store i32 %sub, i32* %hour12, align 4, !dbg !15637, !tbaa !2468
  br label %if.end5, !dbg !15638

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %hour12, align 4, !dbg !15639, !tbaa !2468
  %cmp2 = icmp eq i32 %8, 0, !dbg !15641
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !15642

if.then3:                                         ; preds = %if.else
  store i32 12, i32* %hour12, align 4, !dbg !15643, !tbaa !2468
  br label %if.end4, !dbg !15644

if.end4:                                          ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end4, %if.then1
  %9 = load i8*, i8** %format.addr, align 8, !dbg !15645, !tbaa !2474
  store i8* %9, i8** %f, align 8, !dbg !15647, !tbaa !2474
  br label %for.cond, !dbg !15648

for.cond:                                         ; preds = %for.inc1436, %if.end5
  %10 = load i8*, i8** %f, align 8, !dbg !15649, !tbaa !2474
  %11 = load i8, i8* %10, align 1, !dbg !15651, !tbaa !2529, !ctir !147
  %conv = sext i8 %11 to i32, !dbg !15651
  %cmp6 = icmp ne i32 %conv, 0, !dbg !15652
  br i1 %cmp6, label %for.body, label %for.end1438, !dbg !15653

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !15654, metadata !DIExpression()), !dbg !15656
  store i32 0, i32* %pad, align 4, !dbg !15656, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %modifier, metadata !15657, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !15659, metadata !DIExpression()), !dbg !15660
  store i32 0, i32* %digits, align 4, !dbg !15660, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %number_value, metadata !15661, metadata !DIExpression()), !dbg !15662
  call void @llvm.dbg.declare(metadata i32* %u_number_value, metadata !15663, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.declare(metadata i8* %negative_number, metadata !15665, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.declare(metadata i8* %always_output_a_sign, metadata !15667, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.declare(metadata i32* %tz_colon_mask, metadata !15669, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.declare(metadata i8** %subfmt, metadata !15671, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.declare(metadata i8* %sign_char, metadata !15673, metadata !DIExpression()), !dbg !15674
  call void @llvm.dbg.declare(metadata i8** %bufp, metadata !15675, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.declare(metadata [23 x i8]* %buf, metadata !15677, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.declare(metadata i8* %to_lowcase, metadata !15679, metadata !DIExpression()), !dbg !15680
  store i8 0, i8* %to_lowcase, align 1, !dbg !15680, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %to_uppcase, metadata !15681, metadata !DIExpression()), !dbg !15682
  %12 = load i8, i8* %upcase.addr, align 1, !dbg !15683, !tbaa !2493
  %tobool8 = trunc i8 %12 to i1, !dbg !15683
  %frombool9 = zext i1 %tobool8 to i8, !dbg !15682
  store i8 %frombool9, i8* %to_uppcase, align 1, !dbg !15682, !tbaa !2493
  call void @llvm.dbg.declare(metadata i64* %colons, metadata !15684, metadata !DIExpression()), !dbg !15685
  call void @llvm.dbg.declare(metadata i8* %change_case, metadata !15686, metadata !DIExpression()), !dbg !15687
  store i8 0, i8* %change_case, align 1, !dbg !15687, !tbaa !2493
  call void @llvm.dbg.declare(metadata i32* %format_char, metadata !15688, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.declare(metadata i32* %subwidth, metadata !15690, metadata !DIExpression()), !dbg !15691
  %13 = load i8*, i8** %f, align 8, !dbg !15692, !tbaa !2474
  %14 = load i8, i8* %13, align 1, !dbg !15694, !tbaa !2529, !ctir !147
  %conv10 = sext i8 %14 to i32, !dbg !15694
  %cmp11 = icmp ne i32 %conv10, 37, !dbg !15695
  br i1 %cmp11, label %if.then13, label %if.end48, !dbg !15696

if.then13:                                        ; preds = %for.body
  br label %do.body, !dbg !15697

do.body:                                          ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i64* %_n, metadata !15699, metadata !DIExpression()), !dbg !15701
  store i64 1, i64* %_n, align 8, !dbg !15701, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w, metadata !15702, metadata !DIExpression()), !dbg !15701
  %15 = load i32, i32* %width.addr, align 4, !dbg !15701, !tbaa !2468
  %cmp14 = icmp slt i32 %15, 0, !dbg !15701
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !15701

cond.true:                                        ; preds = %do.body
  br label %cond.end, !dbg !15701

cond.false:                                       ; preds = %do.body
  %16 = load i32, i32* %width.addr, align 4, !dbg !15701, !tbaa !2468
  br label %cond.end, !dbg !15701

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %16, %cond.false ], !dbg !15701
  %conv16 = sext i32 %cond to i64, !dbg !15701
  store i64 %conv16, i64* %_w, align 8, !dbg !15701, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr, metadata !15703, metadata !DIExpression()), !dbg !15701
  %17 = load i64, i64* %_n, align 8, !dbg !15701, !tbaa !2611
  %18 = load i64, i64* %_w, align 8, !dbg !15701, !tbaa !2611
  %cmp17 = icmp ult i64 %17, %18, !dbg !15701
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !15701

cond.true19:                                      ; preds = %cond.end
  %19 = load i64, i64* %_w, align 8, !dbg !15701, !tbaa !2611
  br label %cond.end21, !dbg !15701

cond.false20:                                     ; preds = %cond.end
  %20 = load i64, i64* %_n, align 8, !dbg !15701, !tbaa !2611
  br label %cond.end21, !dbg !15701

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i64 [ %19, %cond.true19 ], [ %20, %cond.false20 ], !dbg !15701
  store i64 %cond22, i64* %_incr, align 8, !dbg !15701, !tbaa !2611
  %21 = load i64, i64* %_incr, align 8, !dbg !15704, !tbaa !2611
  %22 = load i64, i64* %maxsize.addr, align 8, !dbg !15704, !tbaa !2611
  %23 = load i64, i64* %i, align 8, !dbg !15704, !tbaa !2611
  %sub23 = sub i64 %22, %23, !dbg !15704
  %cmp24 = icmp uge i64 %21, %sub23, !dbg !15704
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !15701

if.then26:                                        ; preds = %cond.end21
  store i64 0, i64* %retval, align 8, !dbg !15704
  br label %return, !dbg !15704

if.end27:                                         ; preds = %cond.end21
  %24 = load i8*, i8** %p, align 8, !dbg !15706, !tbaa !2474
  %tobool28 = icmp ne i8* %24, null, !dbg !15706
  br i1 %tobool28, label %if.then29, label %if.end47, !dbg !15701

if.then29:                                        ; preds = %if.end27
  %25 = load i32, i32* %digits, align 4, !dbg !15708, !tbaa !2468
  %cmp30 = icmp eq i32 %25, 0, !dbg !15708
  br i1 %cmp30, label %land.lhs.true, label %if.end45, !dbg !15708

land.lhs.true:                                    ; preds = %if.then29
  %26 = load i64, i64* %_n, align 8, !dbg !15708, !tbaa !2611
  %27 = load i64, i64* %_w, align 8, !dbg !15708, !tbaa !2611
  %cmp32 = icmp ult i64 %26, %27, !dbg !15708
  br i1 %cmp32, label %if.then34, label %if.end45, !dbg !15711

if.then34:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %_delta, metadata !15712, metadata !DIExpression()), !dbg !15714
  %28 = load i32, i32* %width.addr, align 4, !dbg !15714, !tbaa !2468
  %conv35 = sext i32 %28 to i64, !dbg !15714
  %29 = load i64, i64* %_n, align 8, !dbg !15714, !tbaa !2611
  %sub36 = sub i64 %conv35, %29, !dbg !15714
  store i64 %sub36, i64* %_delta, align 8, !dbg !15714, !tbaa !2611
  %30 = load i32, i32* %pad, align 4, !dbg !15715, !tbaa !2468
  %cmp37 = icmp eq i32 %30, 48, !dbg !15715
  br i1 %cmp37, label %if.then41, label %lor.lhs.false, !dbg !15715

lor.lhs.false:                                    ; preds = %if.then34
  %31 = load i32, i32* %pad, align 4, !dbg !15715, !tbaa !2468
  %cmp39 = icmp eq i32 %31, 43, !dbg !15715
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !15714

if.then41:                                        ; preds = %lor.lhs.false, %if.then34
  %32 = load i8*, i8** %p, align 8, !dbg !15715, !tbaa !2474
  %33 = load i64, i64* %_delta, align 8, !dbg !15715, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 48, i64 %33, i1 false), !dbg !15715
  %34 = load i64, i64* %_delta, align 8, !dbg !15715, !tbaa !2611
  %35 = load i8*, i8** %p, align 8, !dbg !15715, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !15715
  store i8* %add.ptr, i8** %p, align 8, !dbg !15715, !tbaa !2474
  br label %if.end44, !dbg !15715

if.else42:                                        ; preds = %lor.lhs.false
  %36 = load i8*, i8** %p, align 8, !dbg !15715, !tbaa !2474
  %37 = load i64, i64* %_delta, align 8, !dbg !15715, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 32, i64 %37, i1 false), !dbg !15715
  %38 = load i64, i64* %_delta, align 8, !dbg !15715, !tbaa !2611
  %39 = load i8*, i8** %p, align 8, !dbg !15715, !tbaa !2474
  %add.ptr43 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !15715
  store i8* %add.ptr43, i8** %p, align 8, !dbg !15715, !tbaa !2474
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then41
  br label %if.end45, !dbg !15714

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.then29
  %40 = load i8*, i8** %f, align 8, !dbg !15711, !tbaa !2474
  %41 = load i8, i8* %40, align 1, !dbg !15711, !tbaa !2529, !ctir !147
  %42 = load i8*, i8** %p, align 8, !dbg !15711, !tbaa !2474
  store i8 %41, i8* %42, align 1, !dbg !15711, !tbaa !2529, !ctir !144
  %43 = load i64, i64* %_n, align 8, !dbg !15711, !tbaa !2611
  %44 = load i8*, i8** %p, align 8, !dbg !15711, !tbaa !2474
  %add.ptr46 = getelementptr inbounds i8, i8* %44, i64 %43, !dbg !15711
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15711, !tbaa !2474
  br label %if.end47, !dbg !15711

if.end47:                                         ; preds = %if.end45, %if.end27
  %45 = load i64, i64* %_incr, align 8, !dbg !15701, !tbaa !2611
  %46 = load i64, i64* %i, align 8, !dbg !15701, !tbaa !2611
  %add = add i64 %46, %45, !dbg !15701
  store i64 %add, i64* %i, align 8, !dbg !15701, !tbaa !2611
  br label %do.end, !dbg !15701

do.end:                                           ; preds = %if.end47
  br label %for.inc1436, !dbg !15717

if.end48:                                         ; preds = %for.body
  br label %while.body, !dbg !15718

while.body:                                       ; preds = %if.end48, %sw.bb, %sw.bb51, %sw.bb52
  %47 = load i8*, i8** %f, align 8, !dbg !15719, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !15719
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !15719, !tbaa !2474
  %48 = load i8, i8* %incdec.ptr, align 1, !dbg !15721, !tbaa !2529, !ctir !147
  %conv49 = sext i8 %48 to i32, !dbg !15721
  switch i32 %conv49, label %sw.default [
    i32 95, label %sw.bb
    i32 45, label %sw.bb
    i32 43, label %sw.bb
    i32 48, label %sw.bb
    i32 94, label %sw.bb51
    i32 35, label %sw.bb52
  ], !dbg !15722

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body
  %49 = load i8*, i8** %f, align 8, !dbg !15723, !tbaa !2474
  %50 = load i8, i8* %49, align 1, !dbg !15725, !tbaa !2529, !ctir !147
  %conv50 = sext i8 %50 to i32, !dbg !15725
  store i32 %conv50, i32* %pad, align 4, !dbg !15726, !tbaa !2468
  br label %while.body, !dbg !15727, !llvm.loop !15728

sw.bb51:                                          ; preds = %while.body
  store i8 1, i8* %to_uppcase, align 1, !dbg !15730, !tbaa !2493
  br label %while.body, !dbg !15731, !llvm.loop !15728

sw.bb52:                                          ; preds = %while.body
  store i8 1, i8* %change_case, align 1, !dbg !15732, !tbaa !2493
  br label %while.body, !dbg !15733, !llvm.loop !15728

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15734

sw.epilog:                                        ; preds = %sw.default
  br label %while.end, !dbg !15735

while.end:                                        ; preds = %sw.epilog
  %51 = load i8*, i8** %f, align 8, !dbg !15736, !tbaa !2474
  %52 = load i8, i8* %51, align 1, !dbg !15736, !tbaa !2529, !ctir !147
  %conv53 = sext i8 %52 to i32, !dbg !15736
  %sub54 = sub i32 %conv53, 48, !dbg !15736
  %cmp55 = icmp ule i32 %sub54, 9, !dbg !15736
  br i1 %cmp55, label %if.then57, label %if.end81, !dbg !15738

if.then57:                                        ; preds = %while.end
  store i32 0, i32* %width.addr, align 4, !dbg !15739, !tbaa !2468
  br label %do.body58, !dbg !15741

do.body58:                                        ; preds = %do.cond, %if.then57
  %53 = load i32, i32* %width.addr, align 4, !dbg !15742, !tbaa !2468
  %cmp59 = icmp sgt i32 %53, 214748364, !dbg !15745
  br i1 %cmp59, label %if.then69, label %lor.lhs.false61, !dbg !15746

lor.lhs.false61:                                  ; preds = %do.body58
  %54 = load i32, i32* %width.addr, align 4, !dbg !15747, !tbaa !2468
  %cmp62 = icmp eq i32 %54, 214748364, !dbg !15748
  br i1 %cmp62, label %land.lhs.true64, label %if.else70, !dbg !15749

land.lhs.true64:                                  ; preds = %lor.lhs.false61
  %55 = load i8*, i8** %f, align 8, !dbg !15750, !tbaa !2474
  %56 = load i8, i8* %55, align 1, !dbg !15751, !tbaa !2529, !ctir !147
  %conv65 = sext i8 %56 to i32, !dbg !15751
  %sub66 = sub nsw i32 %conv65, 48, !dbg !15752
  %cmp67 = icmp sgt i32 %sub66, 7, !dbg !15753
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !15754

if.then69:                                        ; preds = %land.lhs.true64, %do.body58
  store i32 2147483647, i32* %width.addr, align 4, !dbg !15755, !tbaa !2468
  br label %if.end74, !dbg !15756

if.else70:                                        ; preds = %land.lhs.true64, %lor.lhs.false61
  %57 = load i32, i32* %width.addr, align 4, !dbg !15757, !tbaa !2468
  %mul = mul nsw i32 %57, 10, !dbg !15757
  store i32 %mul, i32* %width.addr, align 4, !dbg !15757, !tbaa !2468
  %58 = load i8*, i8** %f, align 8, !dbg !15759, !tbaa !2474
  %59 = load i8, i8* %58, align 1, !dbg !15760, !tbaa !2529, !ctir !147
  %conv71 = sext i8 %59 to i32, !dbg !15760
  %sub72 = sub nsw i32 %conv71, 48, !dbg !15761
  %60 = load i32, i32* %width.addr, align 4, !dbg !15762, !tbaa !2468
  %add73 = add nsw i32 %60, %sub72, !dbg !15762
  store i32 %add73, i32* %width.addr, align 4, !dbg !15762, !tbaa !2468
  br label %if.end74

if.end74:                                         ; preds = %if.else70, %if.then69
  %61 = load i8*, i8** %f, align 8, !dbg !15763, !tbaa !2474
  %incdec.ptr75 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !15763
  store i8* %incdec.ptr75, i8** %f, align 8, !dbg !15763, !tbaa !2474
  br label %do.cond, !dbg !15764

do.cond:                                          ; preds = %if.end74
  %62 = load i8*, i8** %f, align 8, !dbg !15765, !tbaa !2474
  %63 = load i8, i8* %62, align 1, !dbg !15765, !tbaa !2529, !ctir !147
  %conv76 = sext i8 %63 to i32, !dbg !15765
  %sub77 = sub i32 %conv76, 48, !dbg !15765
  %cmp78 = icmp ule i32 %sub77, 9, !dbg !15765
  br i1 %cmp78, label %do.body58, label %do.end80, !dbg !15764, !llvm.loop !15766

do.end80:                                         ; preds = %do.cond
  br label %if.end81, !dbg !15768

if.end81:                                         ; preds = %do.end80, %while.end
  %64 = load i8*, i8** %f, align 8, !dbg !15769, !tbaa !2474
  %65 = load i8, i8* %64, align 1, !dbg !15770, !tbaa !2529, !ctir !147
  %conv82 = sext i8 %65 to i32, !dbg !15770
  switch i32 %conv82, label %sw.default86 [
    i32 69, label %sw.bb83
    i32 79, label %sw.bb83
  ], !dbg !15771

sw.bb83:                                          ; preds = %if.end81, %if.end81
  %66 = load i8*, i8** %f, align 8, !dbg !15772, !tbaa !2474
  %incdec.ptr84 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !15772
  store i8* %incdec.ptr84, i8** %f, align 8, !dbg !15772, !tbaa !2474
  %67 = load i8, i8* %66, align 1, !dbg !15774, !tbaa !2529, !ctir !147
  %conv85 = sext i8 %67 to i32, !dbg !15774
  store i32 %conv85, i32* %modifier, align 4, !dbg !15775, !tbaa !2468
  br label %sw.epilog87, !dbg !15776

sw.default86:                                     ; preds = %if.end81
  store i32 0, i32* %modifier, align 4, !dbg !15777, !tbaa !2468
  br label %sw.epilog87, !dbg !15778

sw.epilog87:                                      ; preds = %sw.default86, %sw.bb83
  %68 = load i8*, i8** %f, align 8, !dbg !15779, !tbaa !2474
  %69 = load i8, i8* %68, align 1, !dbg !15780, !tbaa !2529, !ctir !147
  %conv88 = sext i8 %69 to i32, !dbg !15780
  store i32 %conv88, i32* %format_char, align 4, !dbg !15781, !tbaa !2468
  %70 = load i32, i32* %format_char, align 4, !dbg !15782, !tbaa !2468
  switch i32 %70, label %sw.default1355 [
    i32 37, label %sw.bb89
    i32 97, label %sw.bb143
    i32 65, label %sw.bb151
    i32 98, label %sw.bb159
    i32 104, label %sw.bb159
    i32 66, label %sw.bb167
    i32 99, label %sw.bb175
    i32 67, label %sw.bb317
    i32 120, label %sw.bb336
    i32 68, label %sw.bb341
    i32 100, label %sw.bb346
    i32 101, label %sw.bb354
    i32 70, label %sw.bb761
    i32 72, label %sw.bb779
    i32 73, label %sw.bb788
    i32 107, label %sw.bb796
    i32 108, label %sw.bb805
    i32 106, label %sw.bb813
    i32 77, label %sw.bb826
    i32 109, label %sw.bb834
    i32 78, label %sw.bb847
    i32 110, label %sw.bb865
    i32 80, label %sw.bb915
    i32 112, label %sw.bb916
    i32 113, label %sw.bb920
    i32 82, label %sw.bb928
    i32 114, label %sw.bb929
    i32 83, label %sw.bb930
    i32 115, label %sw.bb938
    i32 88, label %sw.bb963
    i32 84, label %sw.bb968
    i32 116, label %sw.bb969
    i32 117, label %sw.bb1019
    i32 85, label %sw.bb1027
    i32 86, label %sw.bb1040
    i32 103, label %sw.bb1040
    i32 71, label %sw.bb1040
    i32 87, label %sw.bb1149
    i32 119, label %sw.bb1165
    i32 89, label %sw.bb1174
    i32 121, label %sw.bb1192
    i32 90, label %sw.bb1216
    i32 58, label %sw.bb1280
    i32 122, label %sw.bb1296
    i32 0, label %sw.bb1353
  ], !dbg !15783

sw.bb89:                                          ; preds = %sw.epilog87
  %71 = load i32, i32* %modifier, align 4, !dbg !15784, !tbaa !2468
  %cmp90 = icmp ne i32 %71, 0, !dbg !15787
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !15788

if.then92:                                        ; preds = %sw.bb89
  br label %bad_format, !dbg !15789

if.end93:                                         ; preds = %sw.bb89
  br label %do.body94, !dbg !15790

do.body94:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata i64* %_n95, metadata !15791, metadata !DIExpression()), !dbg !15793
  store i64 1, i64* %_n95, align 8, !dbg !15793, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w96, metadata !15794, metadata !DIExpression()), !dbg !15793
  %72 = load i32, i32* %width.addr, align 4, !dbg !15793, !tbaa !2468
  %cmp97 = icmp slt i32 %72, 0, !dbg !15793
  br i1 %cmp97, label %cond.true99, label %cond.false100, !dbg !15793

cond.true99:                                      ; preds = %do.body94
  br label %cond.end101, !dbg !15793

cond.false100:                                    ; preds = %do.body94
  %73 = load i32, i32* %width.addr, align 4, !dbg !15793, !tbaa !2468
  br label %cond.end101, !dbg !15793

cond.end101:                                      ; preds = %cond.false100, %cond.true99
  %cond102 = phi i32 [ 0, %cond.true99 ], [ %73, %cond.false100 ], !dbg !15793
  %conv103 = sext i32 %cond102 to i64, !dbg !15793
  store i64 %conv103, i64* %_w96, align 8, !dbg !15793, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr104, metadata !15795, metadata !DIExpression()), !dbg !15793
  %74 = load i64, i64* %_n95, align 8, !dbg !15793, !tbaa !2611
  %75 = load i64, i64* %_w96, align 8, !dbg !15793, !tbaa !2611
  %cmp105 = icmp ult i64 %74, %75, !dbg !15793
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !15793

cond.true107:                                     ; preds = %cond.end101
  %76 = load i64, i64* %_w96, align 8, !dbg !15793, !tbaa !2611
  br label %cond.end109, !dbg !15793

cond.false108:                                    ; preds = %cond.end101
  %77 = load i64, i64* %_n95, align 8, !dbg !15793, !tbaa !2611
  br label %cond.end109, !dbg !15793

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i64 [ %76, %cond.true107 ], [ %77, %cond.false108 ], !dbg !15793
  store i64 %cond110, i64* %_incr104, align 8, !dbg !15793, !tbaa !2611
  %78 = load i64, i64* %_incr104, align 8, !dbg !15796, !tbaa !2611
  %79 = load i64, i64* %maxsize.addr, align 8, !dbg !15796, !tbaa !2611
  %80 = load i64, i64* %i, align 8, !dbg !15796, !tbaa !2611
  %sub111 = sub i64 %79, %80, !dbg !15796
  %cmp112 = icmp uge i64 %78, %sub111, !dbg !15796
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !15793

if.then114:                                       ; preds = %cond.end109
  store i64 0, i64* %retval, align 8, !dbg !15796
  br label %return, !dbg !15796

if.end115:                                        ; preds = %cond.end109
  %81 = load i8*, i8** %p, align 8, !dbg !15798, !tbaa !2474
  %tobool116 = icmp ne i8* %81, null, !dbg !15798
  br i1 %tobool116, label %if.then117, label %if.end139, !dbg !15793

if.then117:                                       ; preds = %if.end115
  %82 = load i32, i32* %digits, align 4, !dbg !15800, !tbaa !2468
  %cmp118 = icmp eq i32 %82, 0, !dbg !15800
  br i1 %cmp118, label %land.lhs.true120, label %if.end137, !dbg !15800

land.lhs.true120:                                 ; preds = %if.then117
  %83 = load i64, i64* %_n95, align 8, !dbg !15800, !tbaa !2611
  %84 = load i64, i64* %_w96, align 8, !dbg !15800, !tbaa !2611
  %cmp121 = icmp ult i64 %83, %84, !dbg !15800
  br i1 %cmp121, label %if.then123, label %if.end137, !dbg !15803

if.then123:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i64* %_delta124, metadata !15804, metadata !DIExpression()), !dbg !15806
  %85 = load i32, i32* %width.addr, align 4, !dbg !15806, !tbaa !2468
  %conv125 = sext i32 %85 to i64, !dbg !15806
  %86 = load i64, i64* %_n95, align 8, !dbg !15806, !tbaa !2611
  %sub126 = sub i64 %conv125, %86, !dbg !15806
  store i64 %sub126, i64* %_delta124, align 8, !dbg !15806, !tbaa !2611
  %87 = load i32, i32* %pad, align 4, !dbg !15807, !tbaa !2468
  %cmp127 = icmp eq i32 %87, 48, !dbg !15807
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129, !dbg !15807

lor.lhs.false129:                                 ; preds = %if.then123
  %88 = load i32, i32* %pad, align 4, !dbg !15807, !tbaa !2468
  %cmp130 = icmp eq i32 %88, 43, !dbg !15807
  br i1 %cmp130, label %if.then132, label %if.else134, !dbg !15806

if.then132:                                       ; preds = %lor.lhs.false129, %if.then123
  %89 = load i8*, i8** %p, align 8, !dbg !15807, !tbaa !2474
  %90 = load i64, i64* %_delta124, align 8, !dbg !15807, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 48, i64 %90, i1 false), !dbg !15807
  %91 = load i64, i64* %_delta124, align 8, !dbg !15807, !tbaa !2611
  %92 = load i8*, i8** %p, align 8, !dbg !15807, !tbaa !2474
  %add.ptr133 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !15807
  store i8* %add.ptr133, i8** %p, align 8, !dbg !15807, !tbaa !2474
  br label %if.end136, !dbg !15807

if.else134:                                       ; preds = %lor.lhs.false129
  %93 = load i8*, i8** %p, align 8, !dbg !15807, !tbaa !2474
  %94 = load i64, i64* %_delta124, align 8, !dbg !15807, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 32, i64 %94, i1 false), !dbg !15807
  %95 = load i64, i64* %_delta124, align 8, !dbg !15807, !tbaa !2611
  %96 = load i8*, i8** %p, align 8, !dbg !15807, !tbaa !2474
  %add.ptr135 = getelementptr inbounds i8, i8* %96, i64 %95, !dbg !15807
  store i8* %add.ptr135, i8** %p, align 8, !dbg !15807, !tbaa !2474
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then132
  br label %if.end137, !dbg !15806

if.end137:                                        ; preds = %if.end136, %land.lhs.true120, %if.then117
  %97 = load i8*, i8** %f, align 8, !dbg !15803, !tbaa !2474
  %98 = load i8, i8* %97, align 1, !dbg !15803, !tbaa !2529, !ctir !147
  %99 = load i8*, i8** %p, align 8, !dbg !15803, !tbaa !2474
  store i8 %98, i8* %99, align 1, !dbg !15803, !tbaa !2529, !ctir !144
  %100 = load i64, i64* %_n95, align 8, !dbg !15803, !tbaa !2611
  %101 = load i8*, i8** %p, align 8, !dbg !15803, !tbaa !2474
  %add.ptr138 = getelementptr inbounds i8, i8* %101, i64 %100, !dbg !15803
  store i8* %add.ptr138, i8** %p, align 8, !dbg !15803, !tbaa !2474
  br label %if.end139, !dbg !15803

if.end139:                                        ; preds = %if.end137, %if.end115
  %102 = load i64, i64* %_incr104, align 8, !dbg !15793, !tbaa !2611
  %103 = load i64, i64* %i, align 8, !dbg !15793, !tbaa !2611
  %add140 = add i64 %103, %102, !dbg !15793
  store i64 %add140, i64* %i, align 8, !dbg !15793, !tbaa !2611
  br label %do.end142, !dbg !15793

do.end142:                                        ; preds = %if.end139
  br label %sw.epilog1435, !dbg !15809

sw.bb143:                                         ; preds = %sw.epilog87
  %104 = load i32, i32* %modifier, align 4, !dbg !15810, !tbaa !2468
  %cmp144 = icmp ne i32 %104, 0, !dbg !15812
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !15813

if.then146:                                       ; preds = %sw.bb143
  br label %bad_format, !dbg !15814

if.end147:                                        ; preds = %sw.bb143
  %105 = load i8, i8* %change_case, align 1, !dbg !15815, !tbaa !2493
  %tobool148 = trunc i8 %105 to i1, !dbg !15815
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !15817

if.then149:                                       ; preds = %if.end147
  store i8 1, i8* %to_uppcase, align 1, !dbg !15818, !tbaa !2493
  store i8 0, i8* %to_lowcase, align 1, !dbg !15820, !tbaa !2493
  br label %if.end150, !dbg !15821

if.end150:                                        ; preds = %if.then149, %if.end147
  br label %underlying_strftime, !dbg !15822

sw.bb151:                                         ; preds = %sw.epilog87
  %106 = load i32, i32* %modifier, align 4, !dbg !15823, !tbaa !2468
  %cmp152 = icmp ne i32 %106, 0, !dbg !15825
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !15826

if.then154:                                       ; preds = %sw.bb151
  br label %bad_format, !dbg !15827

if.end155:                                        ; preds = %sw.bb151
  %107 = load i8, i8* %change_case, align 1, !dbg !15828, !tbaa !2493
  %tobool156 = trunc i8 %107 to i1, !dbg !15828
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !15830

if.then157:                                       ; preds = %if.end155
  store i8 1, i8* %to_uppcase, align 1, !dbg !15831, !tbaa !2493
  store i8 0, i8* %to_lowcase, align 1, !dbg !15833, !tbaa !2493
  br label %if.end158, !dbg !15834

if.end158:                                        ; preds = %if.then157, %if.end155
  br label %underlying_strftime, !dbg !15835

sw.bb159:                                         ; preds = %sw.epilog87, %sw.epilog87
  %108 = load i8, i8* %change_case, align 1, !dbg !15836, !tbaa !2493
  %tobool160 = trunc i8 %108 to i1, !dbg !15836
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !15838

if.then161:                                       ; preds = %sw.bb159
  store i8 1, i8* %to_uppcase, align 1, !dbg !15839, !tbaa !2493
  store i8 0, i8* %to_lowcase, align 1, !dbg !15841, !tbaa !2493
  br label %if.end162, !dbg !15842

if.end162:                                        ; preds = %if.then161, %sw.bb159
  %109 = load i32, i32* %modifier, align 4, !dbg !15843, !tbaa !2468
  %cmp163 = icmp eq i32 %109, 69, !dbg !15845
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !15846

if.then165:                                       ; preds = %if.end162
  br label %bad_format, !dbg !15847

if.end166:                                        ; preds = %if.end162
  br label %underlying_strftime, !dbg !15848

sw.bb167:                                         ; preds = %sw.epilog87
  %110 = load i32, i32* %modifier, align 4, !dbg !15849, !tbaa !2468
  %cmp168 = icmp eq i32 %110, 69, !dbg !15851
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !15852

if.then170:                                       ; preds = %sw.bb167
  br label %bad_format, !dbg !15853

if.end171:                                        ; preds = %sw.bb167
  %111 = load i8, i8* %change_case, align 1, !dbg !15854, !tbaa !2493
  %tobool172 = trunc i8 %111 to i1, !dbg !15854
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !15856

if.then173:                                       ; preds = %if.end171
  store i8 1, i8* %to_uppcase, align 1, !dbg !15857, !tbaa !2493
  store i8 0, i8* %to_lowcase, align 1, !dbg !15859, !tbaa !2493
  br label %if.end174, !dbg !15860

if.end174:                                        ; preds = %if.then173, %if.end171
  br label %underlying_strftime, !dbg !15861

sw.bb175:                                         ; preds = %sw.epilog87
  %112 = load i32, i32* %modifier, align 4, !dbg !15862, !tbaa !2468
  %cmp176 = icmp eq i32 %112, 79, !dbg !15864
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !15865

if.then178:                                       ; preds = %sw.bb175
  br label %bad_format, !dbg !15866

if.end179:                                        ; preds = %sw.bb175
  br label %underlying_strftime, !dbg !15867

subformat:                                        ; preds = %sw.bb968, %sw.bb928, %if.end345
  call void @llvm.dbg.label(metadata !15868), !dbg !15869
  store i32 -1, i32* %subwidth, align 4, !dbg !15870, !tbaa !2468
  br label %subformat_width, !dbg !15871

subformat_width:                                  ; preds = %if.end778, %subformat
  call void @llvm.dbg.label(metadata !15872), !dbg !15873
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15874, metadata !DIExpression()), !dbg !15876
  %113 = load i8*, i8** %subfmt, align 8, !dbg !15877, !tbaa !2474
  %114 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15878, !tbaa !2474
  %115 = load i8, i8* %to_uppcase, align 1, !dbg !15879, !tbaa !2493
  %tobool180 = trunc i8 %115 to i1, !dbg !15879
  %116 = load i32, i32* %pad, align 4, !dbg !15880, !tbaa !2468
  %117 = load i32, i32* %subwidth, align 4, !dbg !15881, !tbaa !2468
  %118 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15882, !tbaa !2474
  %119 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15883, !tbaa !2474
  %120 = load i32, i32* %ns.addr, align 4, !dbg !15883, !tbaa !2468
  %call = call i64 @__strftime_internal(i8* null, i64 -1, i8* %113, %struct.tm* %114, i1 zeroext %tobool180, i32 %116, i32 %117, i8* %118, %struct.tm_zone* %119, i32 %120), !dbg !15884
  store i64 %call, i64* %len, align 8, !dbg !15876, !tbaa !2611
  br label %do.body181, !dbg !15885

do.body181:                                       ; preds = %subformat_width
  call void @llvm.dbg.declare(metadata i64* %_n182, metadata !15886, metadata !DIExpression()), !dbg !15888
  %121 = load i64, i64* %len, align 8, !dbg !15888, !tbaa !2611
  store i64 %121, i64* %_n182, align 8, !dbg !15888, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w183, metadata !15889, metadata !DIExpression()), !dbg !15888
  %122 = load i32, i32* %width.addr, align 4, !dbg !15888, !tbaa !2468
  %cmp184 = icmp slt i32 %122, 0, !dbg !15888
  br i1 %cmp184, label %cond.true186, label %cond.false187, !dbg !15888

cond.true186:                                     ; preds = %do.body181
  br label %cond.end188, !dbg !15888

cond.false187:                                    ; preds = %do.body181
  %123 = load i32, i32* %width.addr, align 4, !dbg !15888, !tbaa !2468
  br label %cond.end188, !dbg !15888

cond.end188:                                      ; preds = %cond.false187, %cond.true186
  %cond189 = phi i32 [ 0, %cond.true186 ], [ %123, %cond.false187 ], !dbg !15888
  %conv190 = sext i32 %cond189 to i64, !dbg !15888
  store i64 %conv190, i64* %_w183, align 8, !dbg !15888, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr191, metadata !15890, metadata !DIExpression()), !dbg !15888
  %124 = load i64, i64* %_n182, align 8, !dbg !15888, !tbaa !2611
  %125 = load i64, i64* %_w183, align 8, !dbg !15888, !tbaa !2611
  %cmp192 = icmp ult i64 %124, %125, !dbg !15888
  br i1 %cmp192, label %cond.true194, label %cond.false195, !dbg !15888

cond.true194:                                     ; preds = %cond.end188
  %126 = load i64, i64* %_w183, align 8, !dbg !15888, !tbaa !2611
  br label %cond.end196, !dbg !15888

cond.false195:                                    ; preds = %cond.end188
  %127 = load i64, i64* %_n182, align 8, !dbg !15888, !tbaa !2611
  br label %cond.end196, !dbg !15888

cond.end196:                                      ; preds = %cond.false195, %cond.true194
  %cond197 = phi i64 [ %126, %cond.true194 ], [ %127, %cond.false195 ], !dbg !15888
  store i64 %cond197, i64* %_incr191, align 8, !dbg !15888, !tbaa !2611
  %128 = load i64, i64* %_incr191, align 8, !dbg !15891, !tbaa !2611
  %129 = load i64, i64* %maxsize.addr, align 8, !dbg !15891, !tbaa !2611
  %130 = load i64, i64* %i, align 8, !dbg !15891, !tbaa !2611
  %sub198 = sub i64 %129, %130, !dbg !15891
  %cmp199 = icmp uge i64 %128, %sub198, !dbg !15891
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !15888

if.then201:                                       ; preds = %cond.end196
  store i64 0, i64* %retval, align 8, !dbg !15891
  br label %return, !dbg !15891

if.end202:                                        ; preds = %cond.end196
  %131 = load i8*, i8** %p, align 8, !dbg !15893, !tbaa !2474
  %tobool203 = icmp ne i8* %131, null, !dbg !15893
  br i1 %tobool203, label %if.then204, label %if.end229, !dbg !15888

if.then204:                                       ; preds = %if.end202
  %132 = load i32, i32* %digits, align 4, !dbg !15895, !tbaa !2468
  %cmp205 = icmp eq i32 %132, 0, !dbg !15895
  br i1 %cmp205, label %land.lhs.true207, label %if.end224, !dbg !15895

land.lhs.true207:                                 ; preds = %if.then204
  %133 = load i64, i64* %_n182, align 8, !dbg !15895, !tbaa !2611
  %134 = load i64, i64* %_w183, align 8, !dbg !15895, !tbaa !2611
  %cmp208 = icmp ult i64 %133, %134, !dbg !15895
  br i1 %cmp208, label %if.then210, label %if.end224, !dbg !15898

if.then210:                                       ; preds = %land.lhs.true207
  call void @llvm.dbg.declare(metadata i64* %_delta211, metadata !15899, metadata !DIExpression()), !dbg !15901
  %135 = load i32, i32* %width.addr, align 4, !dbg !15901, !tbaa !2468
  %conv212 = sext i32 %135 to i64, !dbg !15901
  %136 = load i64, i64* %_n182, align 8, !dbg !15901, !tbaa !2611
  %sub213 = sub i64 %conv212, %136, !dbg !15901
  store i64 %sub213, i64* %_delta211, align 8, !dbg !15901, !tbaa !2611
  %137 = load i32, i32* %pad, align 4, !dbg !15902, !tbaa !2468
  %cmp214 = icmp eq i32 %137, 48, !dbg !15902
  br i1 %cmp214, label %if.then219, label %lor.lhs.false216, !dbg !15902

lor.lhs.false216:                                 ; preds = %if.then210
  %138 = load i32, i32* %pad, align 4, !dbg !15902, !tbaa !2468
  %cmp217 = icmp eq i32 %138, 43, !dbg !15902
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !15901

if.then219:                                       ; preds = %lor.lhs.false216, %if.then210
  %139 = load i8*, i8** %p, align 8, !dbg !15902, !tbaa !2474
  %140 = load i64, i64* %_delta211, align 8, !dbg !15902, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %139, i8 48, i64 %140, i1 false), !dbg !15902
  %141 = load i64, i64* %_delta211, align 8, !dbg !15902, !tbaa !2611
  %142 = load i8*, i8** %p, align 8, !dbg !15902, !tbaa !2474
  %add.ptr220 = getelementptr inbounds i8, i8* %142, i64 %141, !dbg !15902
  store i8* %add.ptr220, i8** %p, align 8, !dbg !15902, !tbaa !2474
  br label %if.end223, !dbg !15902

if.else221:                                       ; preds = %lor.lhs.false216
  %143 = load i8*, i8** %p, align 8, !dbg !15902, !tbaa !2474
  %144 = load i64, i64* %_delta211, align 8, !dbg !15902, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 32, i64 %144, i1 false), !dbg !15902
  %145 = load i64, i64* %_delta211, align 8, !dbg !15902, !tbaa !2611
  %146 = load i8*, i8** %p, align 8, !dbg !15902, !tbaa !2474
  %add.ptr222 = getelementptr inbounds i8, i8* %146, i64 %145, !dbg !15902
  store i8* %add.ptr222, i8** %p, align 8, !dbg !15902, !tbaa !2474
  br label %if.end223

if.end223:                                        ; preds = %if.else221, %if.then219
  br label %if.end224, !dbg !15901

if.end224:                                        ; preds = %if.end223, %land.lhs.true207, %if.then204
  %147 = load i8*, i8** %p, align 8, !dbg !15898, !tbaa !2474
  %148 = load i64, i64* %maxsize.addr, align 8, !dbg !15898, !tbaa !2611
  %149 = load i64, i64* %i, align 8, !dbg !15898, !tbaa !2611
  %sub225 = sub i64 %148, %149, !dbg !15898
  %150 = load i8*, i8** %subfmt, align 8, !dbg !15898, !tbaa !2474
  %151 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15898, !tbaa !2474
  %152 = load i8, i8* %to_uppcase, align 1, !dbg !15898, !tbaa !2493
  %tobool226 = trunc i8 %152 to i1, !dbg !15898
  %153 = load i32, i32* %pad, align 4, !dbg !15898, !tbaa !2468
  %154 = load i32, i32* %subwidth, align 4, !dbg !15898, !tbaa !2468
  %155 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15898, !tbaa !2474
  %156 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15898, !tbaa !2474
  %157 = load i32, i32* %ns.addr, align 4, !dbg !15898, !tbaa !2468
  %call227 = call i64 @__strftime_internal(i8* %147, i64 %sub225, i8* %150, %struct.tm* %151, i1 zeroext %tobool226, i32 %153, i32 %154, i8* %155, %struct.tm_zone* %156, i32 %157), !dbg !15898
  %158 = load i64, i64* %_n182, align 8, !dbg !15898, !tbaa !2611
  %159 = load i8*, i8** %p, align 8, !dbg !15898, !tbaa !2474
  %add.ptr228 = getelementptr inbounds i8, i8* %159, i64 %158, !dbg !15898
  store i8* %add.ptr228, i8** %p, align 8, !dbg !15898, !tbaa !2474
  br label %if.end229, !dbg !15898

if.end229:                                        ; preds = %if.end224, %if.end202
  %160 = load i64, i64* %_incr191, align 8, !dbg !15888, !tbaa !2611
  %161 = load i64, i64* %i, align 8, !dbg !15888, !tbaa !2611
  %add230 = add i64 %161, %160, !dbg !15888
  store i64 %add230, i64* %i, align 8, !dbg !15888, !tbaa !2611
  br label %do.end232, !dbg !15888

do.end232:                                        ; preds = %if.end229
  br label %sw.epilog1435, !dbg !15904

underlying_strftime:                              ; preds = %if.then1195, %if.then1177, %if.end967, %sw.bb929, %if.end919, %if.then391, %if.end340, %if.then320, %if.end179, %if.end174, %if.end166, %if.end158, %if.end150
  call void @llvm.dbg.label(metadata !15905), !dbg !15906
  call void @llvm.dbg.declare(metadata [5 x i8]* %ufmt, metadata !15907, metadata !DIExpression()), !dbg !15909
  call void @llvm.dbg.declare(metadata i8** %u, metadata !15910, metadata !DIExpression()), !dbg !15911
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15912
  store i8* %arraydecay, i8** %u, align 8, !dbg !15911, !tbaa !2474
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ubuf, metadata !15913, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.declare(metadata i64* %len233, metadata !15915, metadata !DIExpression()), !dbg !15916
  %162 = load i8*, i8** %u, align 8, !dbg !15917, !tbaa !2474
  %incdec.ptr234 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !15917
  store i8* %incdec.ptr234, i8** %u, align 8, !dbg !15917, !tbaa !2474
  store i8 32, i8* %162, align 1, !dbg !15918, !tbaa !2529, !ctir !144
  %163 = load i8*, i8** %u, align 8, !dbg !15919, !tbaa !2474
  %incdec.ptr235 = getelementptr inbounds i8, i8* %163, i32 1, !dbg !15919
  store i8* %incdec.ptr235, i8** %u, align 8, !dbg !15919, !tbaa !2474
  store i8 37, i8* %163, align 1, !dbg !15920, !tbaa !2529, !ctir !144
  %164 = load i32, i32* %modifier, align 4, !dbg !15921, !tbaa !2468
  %cmp236 = icmp ne i32 %164, 0, !dbg !15923
  br i1 %cmp236, label %if.then238, label %if.end241, !dbg !15924

if.then238:                                       ; preds = %underlying_strftime
  %165 = load i32, i32* %modifier, align 4, !dbg !15925, !tbaa !2468
  %conv239 = trunc i32 %165 to i8, !dbg !15925
  %166 = load i8*, i8** %u, align 8, !dbg !15926, !tbaa !2474
  %incdec.ptr240 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !15926
  store i8* %incdec.ptr240, i8** %u, align 8, !dbg !15926, !tbaa !2474
  store i8 %conv239, i8* %166, align 1, !dbg !15927, !tbaa !2529, !ctir !144
  br label %if.end241, !dbg !15928

if.end241:                                        ; preds = %if.then238, %underlying_strftime
  %167 = load i32, i32* %format_char, align 4, !dbg !15929, !tbaa !2468
  %conv242 = trunc i32 %167 to i8, !dbg !15929
  %168 = load i8*, i8** %u, align 8, !dbg !15930, !tbaa !2474
  %incdec.ptr243 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !15930
  store i8* %incdec.ptr243, i8** %u, align 8, !dbg !15930, !tbaa !2474
  store i8 %conv242, i8* %168, align 1, !dbg !15931, !tbaa !2529, !ctir !144
  %169 = load i8*, i8** %u, align 8, !dbg !15932, !tbaa !2474
  store i8 0, i8* %169, align 1, !dbg !15933, !tbaa !2529, !ctir !144
  %arraydecay244 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15934
  %arraydecay245 = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15935
  %170 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15936, !tbaa !2474
  %call246 = call i64 @strftime(i8* %arraydecay244, i64 1024, i8* %arraydecay245, %struct.tm* %170) #13, !dbg !15937
  store i64 %call246, i64* %len233, align 8, !dbg !15938, !tbaa !2611
  %171 = load i64, i64* %len233, align 8, !dbg !15939, !tbaa !2611
  %cmp247 = icmp ne i64 %171, 0, !dbg !15941
  br i1 %cmp247, label %if.then249, label %if.end316, !dbg !15942

if.then249:                                       ; preds = %if.end241
  br label %do.body250, !dbg !15943

do.body250:                                       ; preds = %if.then249
  call void @llvm.dbg.declare(metadata i64* %_n251, metadata !15944, metadata !DIExpression()), !dbg !15946
  %172 = load i64, i64* %len233, align 8, !dbg !15946, !tbaa !2611
  %sub252 = sub i64 %172, 1, !dbg !15946
  store i64 %sub252, i64* %_n251, align 8, !dbg !15946, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w253, metadata !15947, metadata !DIExpression()), !dbg !15946
  %173 = load i32, i32* %width.addr, align 4, !dbg !15946, !tbaa !2468
  %cmp254 = icmp slt i32 %173, 0, !dbg !15946
  br i1 %cmp254, label %cond.true256, label %cond.false257, !dbg !15946

cond.true256:                                     ; preds = %do.body250
  br label %cond.end258, !dbg !15946

cond.false257:                                    ; preds = %do.body250
  %174 = load i32, i32* %width.addr, align 4, !dbg !15946, !tbaa !2468
  br label %cond.end258, !dbg !15946

cond.end258:                                      ; preds = %cond.false257, %cond.true256
  %cond259 = phi i32 [ 0, %cond.true256 ], [ %174, %cond.false257 ], !dbg !15946
  %conv260 = sext i32 %cond259 to i64, !dbg !15946
  store i64 %conv260, i64* %_w253, align 8, !dbg !15946, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr261, metadata !15948, metadata !DIExpression()), !dbg !15946
  %175 = load i64, i64* %_n251, align 8, !dbg !15946, !tbaa !2611
  %176 = load i64, i64* %_w253, align 8, !dbg !15946, !tbaa !2611
  %cmp262 = icmp ult i64 %175, %176, !dbg !15946
  br i1 %cmp262, label %cond.true264, label %cond.false265, !dbg !15946

cond.true264:                                     ; preds = %cond.end258
  %177 = load i64, i64* %_w253, align 8, !dbg !15946, !tbaa !2611
  br label %cond.end266, !dbg !15946

cond.false265:                                    ; preds = %cond.end258
  %178 = load i64, i64* %_n251, align 8, !dbg !15946, !tbaa !2611
  br label %cond.end266, !dbg !15946

cond.end266:                                      ; preds = %cond.false265, %cond.true264
  %cond267 = phi i64 [ %177, %cond.true264 ], [ %178, %cond.false265 ], !dbg !15946
  store i64 %cond267, i64* %_incr261, align 8, !dbg !15946, !tbaa !2611
  %179 = load i64, i64* %_incr261, align 8, !dbg !15949, !tbaa !2611
  %180 = load i64, i64* %maxsize.addr, align 8, !dbg !15949, !tbaa !2611
  %181 = load i64, i64* %i, align 8, !dbg !15949, !tbaa !2611
  %sub268 = sub i64 %180, %181, !dbg !15949
  %cmp269 = icmp uge i64 %179, %sub268, !dbg !15949
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !15946

if.then271:                                       ; preds = %cond.end266
  store i64 0, i64* %retval, align 8, !dbg !15949
  br label %return, !dbg !15949

if.end272:                                        ; preds = %cond.end266
  %182 = load i8*, i8** %p, align 8, !dbg !15951, !tbaa !2474
  %tobool273 = icmp ne i8* %182, null, !dbg !15951
  br i1 %tobool273, label %if.then274, label %if.end312, !dbg !15946

if.then274:                                       ; preds = %if.end272
  %183 = load i32, i32* %digits, align 4, !dbg !15953, !tbaa !2468
  %cmp275 = icmp eq i32 %183, 0, !dbg !15953
  br i1 %cmp275, label %land.lhs.true277, label %if.end294, !dbg !15953

land.lhs.true277:                                 ; preds = %if.then274
  %184 = load i64, i64* %_n251, align 8, !dbg !15953, !tbaa !2611
  %185 = load i64, i64* %_w253, align 8, !dbg !15953, !tbaa !2611
  %cmp278 = icmp ult i64 %184, %185, !dbg !15953
  br i1 %cmp278, label %if.then280, label %if.end294, !dbg !15956

if.then280:                                       ; preds = %land.lhs.true277
  call void @llvm.dbg.declare(metadata i64* %_delta281, metadata !15957, metadata !DIExpression()), !dbg !15959
  %186 = load i32, i32* %width.addr, align 4, !dbg !15959, !tbaa !2468
  %conv282 = sext i32 %186 to i64, !dbg !15959
  %187 = load i64, i64* %_n251, align 8, !dbg !15959, !tbaa !2611
  %sub283 = sub i64 %conv282, %187, !dbg !15959
  store i64 %sub283, i64* %_delta281, align 8, !dbg !15959, !tbaa !2611
  %188 = load i32, i32* %pad, align 4, !dbg !15960, !tbaa !2468
  %cmp284 = icmp eq i32 %188, 48, !dbg !15960
  br i1 %cmp284, label %if.then289, label %lor.lhs.false286, !dbg !15960

lor.lhs.false286:                                 ; preds = %if.then280
  %189 = load i32, i32* %pad, align 4, !dbg !15960, !tbaa !2468
  %cmp287 = icmp eq i32 %189, 43, !dbg !15960
  br i1 %cmp287, label %if.then289, label %if.else291, !dbg !15959

if.then289:                                       ; preds = %lor.lhs.false286, %if.then280
  %190 = load i8*, i8** %p, align 8, !dbg !15960, !tbaa !2474
  %191 = load i64, i64* %_delta281, align 8, !dbg !15960, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %190, i8 48, i64 %191, i1 false), !dbg !15960
  %192 = load i64, i64* %_delta281, align 8, !dbg !15960, !tbaa !2611
  %193 = load i8*, i8** %p, align 8, !dbg !15960, !tbaa !2474
  %add.ptr290 = getelementptr inbounds i8, i8* %193, i64 %192, !dbg !15960
  store i8* %add.ptr290, i8** %p, align 8, !dbg !15960, !tbaa !2474
  br label %if.end293, !dbg !15960

if.else291:                                       ; preds = %lor.lhs.false286
  %194 = load i8*, i8** %p, align 8, !dbg !15960, !tbaa !2474
  %195 = load i64, i64* %_delta281, align 8, !dbg !15960, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %194, i8 32, i64 %195, i1 false), !dbg !15960
  %196 = load i64, i64* %_delta281, align 8, !dbg !15960, !tbaa !2611
  %197 = load i8*, i8** %p, align 8, !dbg !15960, !tbaa !2474
  %add.ptr292 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !15960
  store i8* %add.ptr292, i8** %p, align 8, !dbg !15960, !tbaa !2474
  br label %if.end293

if.end293:                                        ; preds = %if.else291, %if.then289
  br label %if.end294, !dbg !15959

if.end294:                                        ; preds = %if.end293, %land.lhs.true277, %if.then274
  %198 = load i8, i8* %to_lowcase, align 1, !dbg !15962, !tbaa !2493
  %tobool295 = trunc i8 %198 to i1, !dbg !15962
  br i1 %tobool295, label %if.then296, label %if.else300, !dbg !15956

if.then296:                                       ; preds = %if.end294
  %199 = load i8*, i8** %p, align 8, !dbg !15962, !tbaa !2474
  %arraydecay297 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15962
  %add.ptr298 = getelementptr inbounds i8, i8* %arraydecay297, i64 1, !dbg !15962
  %200 = load i64, i64* %_n251, align 8, !dbg !15962, !tbaa !2611
  %call299 = call i8* @memcpy_lowcase(i8* %199, i8* %add.ptr298, i64 %200), !dbg !15962
  br label %if.end310, !dbg !15962

if.else300:                                       ; preds = %if.end294
  %201 = load i8, i8* %to_uppcase, align 1, !dbg !15964, !tbaa !2493
  %tobool301 = trunc i8 %201 to i1, !dbg !15964
  br i1 %tobool301, label %if.then302, label %if.else306, !dbg !15962

if.then302:                                       ; preds = %if.else300
  %202 = load i8*, i8** %p, align 8, !dbg !15964, !tbaa !2474
  %arraydecay303 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15964
  %add.ptr304 = getelementptr inbounds i8, i8* %arraydecay303, i64 1, !dbg !15964
  %203 = load i64, i64* %_n251, align 8, !dbg !15964, !tbaa !2611
  %call305 = call i8* @memcpy_uppcase(i8* %202, i8* %add.ptr304, i64 %203), !dbg !15964
  br label %if.end309, !dbg !15964

if.else306:                                       ; preds = %if.else300
  %204 = load i8*, i8** %p, align 8, !dbg !15964, !tbaa !2474
  %arraydecay307 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15964
  %add.ptr308 = getelementptr inbounds i8, i8* %arraydecay307, i64 1, !dbg !15964
  %205 = load i64, i64* %_n251, align 8, !dbg !15964, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %204, i8* align 1 %add.ptr308, i64 %205, i1 false), !dbg !15964
  br label %if.end309

if.end309:                                        ; preds = %if.else306, %if.then302
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then296
  %206 = load i64, i64* %_n251, align 8, !dbg !15956, !tbaa !2611
  %207 = load i8*, i8** %p, align 8, !dbg !15956, !tbaa !2474
  %add.ptr311 = getelementptr inbounds i8, i8* %207, i64 %206, !dbg !15956
  store i8* %add.ptr311, i8** %p, align 8, !dbg !15956, !tbaa !2474
  br label %if.end312, !dbg !15956

if.end312:                                        ; preds = %if.end310, %if.end272
  %208 = load i64, i64* %_incr261, align 8, !dbg !15946, !tbaa !2611
  %209 = load i64, i64* %i, align 8, !dbg !15946, !tbaa !2611
  %add313 = add i64 %209, %208, !dbg !15946
  store i64 %add313, i64* %i, align 8, !dbg !15946, !tbaa !2611
  br label %do.end315, !dbg !15946

do.end315:                                        ; preds = %if.end312
  br label %if.end316, !dbg !15946

if.end316:                                        ; preds = %do.end315, %if.end241
  br label %sw.epilog1435, !dbg !15966

sw.bb317:                                         ; preds = %sw.epilog87
  %210 = load i32, i32* %modifier, align 4, !dbg !15967, !tbaa !2468
  %cmp318 = icmp eq i32 %210, 69, !dbg !15969
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !15970

if.then320:                                       ; preds = %sw.bb317
  br label %underlying_strftime, !dbg !15971

if.end321:                                        ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %century, metadata !15973, metadata !DIExpression()), !dbg !15975
  %211 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15976, !tbaa !2474
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %211, i32 0, i32 5, !dbg !15977, !ctir !1922
  %212 = load i32, i32* %tm_year, align 4, !dbg !15977, !tbaa !15978, !ctir !27
  %div = sdiv i32 %212, 100, !dbg !15979
  %add322 = add nsw i32 %div, 19, !dbg !15980
  store i32 %add322, i32* %century, align 4, !dbg !15975, !tbaa !2468
  %213 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15981, !tbaa !2474
  %tm_year323 = getelementptr inbounds %struct.tm, %struct.tm* %213, i32 0, i32 5, !dbg !15982, !ctir !1922
  %214 = load i32, i32* %tm_year323, align 4, !dbg !15982, !tbaa !15978, !ctir !27
  %rem = srem i32 %214, 100, !dbg !15983
  %cmp324 = icmp slt i32 %rem, 0, !dbg !15984
  br i1 %cmp324, label %land.rhs, label %land.end, !dbg !15985

land.rhs:                                         ; preds = %if.end321
  %215 = load i32, i32* %century, align 4, !dbg !15986, !tbaa !2468
  %cmp326 = icmp slt i32 0, %215, !dbg !15987
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end321
  %216 = phi i1 [ false, %if.end321 ], [ %cmp326, %land.rhs ], !dbg !15988
  %land.ext = zext i1 %216 to i32, !dbg !15985
  %217 = load i32, i32* %century, align 4, !dbg !15989, !tbaa !2468
  %sub328 = sub nsw i32 %217, %land.ext, !dbg !15989
  store i32 %sub328, i32* %century, align 4, !dbg !15989, !tbaa !2468
  br label %do.body329, !dbg !15990

do.body329:                                       ; preds = %land.end
  store i32 2, i32* %digits, align 4, !dbg !15991, !tbaa !2468
  %218 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15991, !tbaa !2474
  %tm_year330 = getelementptr inbounds %struct.tm, %struct.tm* %218, i32 0, i32 5, !dbg !15991, !ctir !1922
  %219 = load i32, i32* %tm_year330, align 4, !dbg !15991, !tbaa !15978, !ctir !27
  %cmp331 = icmp slt i32 %219, -1900, !dbg !15991
  %frombool333 = zext i1 %cmp331 to i8, !dbg !15991
  store i8 %frombool333, i8* %negative_number, align 1, !dbg !15991, !tbaa !2493
  %220 = load i32, i32* %century, align 4, !dbg !15991, !tbaa !2468
  store i32 %220, i32* %u_number_value, align 4, !dbg !15991, !tbaa !2468
  br label %do_yearish, !dbg !15991

do.end335:                                        ; No predecessors!
  br label %sw.bb336, !dbg !15993

sw.bb336:                                         ; preds = %sw.epilog87, %do.end335
  %221 = load i32, i32* %modifier, align 4, !dbg !15994, !tbaa !2468
  %cmp337 = icmp eq i32 %221, 79, !dbg !15996
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !15997

if.then339:                                       ; preds = %sw.bb336
  br label %bad_format, !dbg !15998

if.end340:                                        ; preds = %sw.bb336
  br label %underlying_strftime, !dbg !15999

sw.bb341:                                         ; preds = %sw.epilog87
  %222 = load i32, i32* %modifier, align 4, !dbg !16000, !tbaa !2468
  %cmp342 = icmp ne i32 %222, 0, !dbg !16002
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !16003

if.then344:                                       ; preds = %sw.bb341
  br label %bad_format, !dbg !16004

if.end345:                                        ; preds = %sw.bb341
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.360, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16005, !tbaa !2474
  br label %subformat, !dbg !16006

sw.bb346:                                         ; preds = %sw.epilog87
  %223 = load i32, i32* %modifier, align 4, !dbg !16007, !tbaa !2468
  %cmp347 = icmp eq i32 %223, 69, !dbg !16009
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !16010

if.then349:                                       ; preds = %sw.bb346
  br label %bad_format, !dbg !16011

if.end350:                                        ; preds = %sw.bb346
  br label %do.body351, !dbg !16012

do.body351:                                       ; preds = %if.end350
  store i32 2, i32* %digits, align 4, !dbg !16013, !tbaa !2468
  %224 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16013, !tbaa !2474
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %224, i32 0, i32 3, !dbg !16013, !ctir !1922
  %225 = load i32, i32* %tm_mday, align 4, !dbg !16013, !tbaa !16015, !ctir !27
  store i32 %225, i32* %number_value, align 4, !dbg !16013, !tbaa !2468
  br label %do_number, !dbg !16013

do.end353:                                        ; No predecessors!
  br label %sw.bb354, !dbg !16013

sw.bb354:                                         ; preds = %sw.epilog87, %do.end353
  %226 = load i32, i32* %modifier, align 4, !dbg !16016, !tbaa !2468
  %cmp355 = icmp eq i32 %226, 69, !dbg !16018
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !16019

if.then357:                                       ; preds = %sw.bb354
  br label %bad_format, !dbg !16020

if.end358:                                        ; preds = %sw.bb354
  br label %do.body359, !dbg !16021

do.body359:                                       ; preds = %if.end358
  store i32 2, i32* %digits, align 4, !dbg !16022, !tbaa !2468
  %227 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16022, !tbaa !2474
  %tm_mday360 = getelementptr inbounds %struct.tm, %struct.tm* %227, i32 0, i32 3, !dbg !16022, !ctir !1922
  %228 = load i32, i32* %tm_mday360, align 4, !dbg !16022, !tbaa !16015, !ctir !27
  store i32 %228, i32* %number_value, align 4, !dbg !16022, !tbaa !2468
  br label %do_number_spacepad, !dbg !16022

do.end362:                                        ; No predecessors!
  br label %do_tz_offset, !dbg !16022

do_tz_offset:                                     ; preds = %do.body1349, %do.body1333, %do.body1327, %do.body1321, %do.end362
  call void @llvm.dbg.label(metadata !16024), !dbg !16025
  store i8 1, i8* %always_output_a_sign, align 1, !dbg !16026, !tbaa !2493
  br label %do_number_body, !dbg !16027

do_yearish:                                       ; preds = %do.body1213, %do.body1183, %do.body1131, %cond.end1126, %do.body329
  call void @llvm.dbg.label(metadata !16028), !dbg !16029
  %229 = load i32, i32* %pad, align 4, !dbg !16030, !tbaa !2468
  %cmp363 = icmp eq i32 %229, 0, !dbg !16032
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !16033

if.then365:                                       ; preds = %do_yearish
  %230 = load i32, i32* %yr_spec.addr, align 4, !dbg !16034, !tbaa !2468
  store i32 %230, i32* %pad, align 4, !dbg !16035, !tbaa !2468
  br label %if.end366, !dbg !16036

if.end366:                                        ; preds = %if.then365, %do_yearish
  %231 = load i32, i32* %pad, align 4, !dbg !16037, !tbaa !2468
  %cmp367 = icmp eq i32 %231, 43, !dbg !16038
  br i1 %cmp367, label %land.rhs369, label %land.end377, !dbg !16039

land.rhs369:                                      ; preds = %if.end366
  %232 = load i32, i32* %digits, align 4, !dbg !16040, !tbaa !2468
  %cmp370 = icmp eq i32 %232, 2, !dbg !16041
  %233 = zext i1 %cmp370 to i64, !dbg !16040
  %cond372 = select i1 %cmp370, i32 99, i32 9999, !dbg !16040
  %234 = load i32, i32* %u_number_value, align 4, !dbg !16042, !tbaa !2468
  %cmp373 = icmp ult i32 %cond372, %234, !dbg !16043
  br i1 %cmp373, label %lor.end, label %lor.rhs, !dbg !16044

lor.rhs:                                          ; preds = %land.rhs369
  %235 = load i32, i32* %digits, align 4, !dbg !16045, !tbaa !2468
  %236 = load i32, i32* %width.addr, align 4, !dbg !16046, !tbaa !2468
  %cmp375 = icmp slt i32 %235, %236, !dbg !16047
  br label %lor.end, !dbg !16044

lor.end:                                          ; preds = %lor.rhs, %land.rhs369
  %237 = phi i1 [ true, %land.rhs369 ], [ %cmp375, %lor.rhs ]
  br label %land.end377

land.end377:                                      ; preds = %lor.end, %if.end366
  %238 = phi i1 [ false, %if.end366 ], [ %237, %lor.end ], !dbg !16048
  %frombool379 = zext i1 %238 to i8, !dbg !16049
  store i8 %frombool379, i8* %always_output_a_sign, align 1, !dbg !16049, !tbaa !2493
  br label %do_maybe_signed_number, !dbg !16050

do_number_spacepad:                               ; preds = %do.body810, %do.body801, %do.body359
  call void @llvm.dbg.label(metadata !16051), !dbg !16052
  %239 = load i32, i32* %pad, align 4, !dbg !16053, !tbaa !2468
  %cmp380 = icmp eq i32 %239, 0, !dbg !16055
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !16056

if.then382:                                       ; preds = %do_number_spacepad
  store i32 95, i32* %pad, align 4, !dbg !16057, !tbaa !2468
  br label %if.end383, !dbg !16058

if.end383:                                        ; preds = %if.then382, %do_number_spacepad
  br label %do_number, !dbg !16059

do_number:                                        ; preds = %do.body1170, %do.body1154, %do.body1143, %do.body1032, %do.body1020, %do.body935, %do.body862, %do.body831, %do.body793, %do.body784, %if.end383, %do.body351
  call void @llvm.dbg.label(metadata !16060), !dbg !16061
  %240 = load i32, i32* %number_value, align 4, !dbg !16062, !tbaa !2468
  %cmp384 = icmp slt i32 %240, 0, !dbg !16063
  %frombool386 = zext i1 %cmp384 to i8, !dbg !16064
  store i8 %frombool386, i8* %negative_number, align 1, !dbg !16064, !tbaa !2493
  %241 = load i32, i32* %number_value, align 4, !dbg !16065, !tbaa !2468
  store i32 %241, i32* %u_number_value, align 4, !dbg !16066, !tbaa !2468
  br label %do_signed_number, !dbg !16067

do_signed_number:                                 ; preds = %do.body921, %do.body839, %do.body818, %do_number
  call void @llvm.dbg.label(metadata !16068), !dbg !16069
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16070, !tbaa !2493
  br label %do_maybe_signed_number, !dbg !16071

do_maybe_signed_number:                           ; preds = %do_signed_number, %land.end377
  call void @llvm.dbg.label(metadata !16072), !dbg !16073
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16074, !tbaa !2468
  br label %do_number_body, !dbg !16075

do_number_body:                                   ; preds = %do_maybe_signed_number, %do_tz_offset
  call void @llvm.dbg.label(metadata !16076), !dbg !16077
  %242 = load i32, i32* %modifier, align 4, !dbg !16078, !tbaa !2468
  %cmp387 = icmp eq i32 %242, 79, !dbg !16080
  br i1 %cmp387, label %land.lhs.true389, label %if.end392, !dbg !16081

land.lhs.true389:                                 ; preds = %do_number_body
  %243 = load i8, i8* %negative_number, align 1, !dbg !16082, !tbaa !2493
  %tobool390 = trunc i8 %243 to i1, !dbg !16082
  br i1 %tobool390, label %if.end392, label %if.then391, !dbg !16083

if.then391:                                       ; preds = %land.lhs.true389
  br label %underlying_strftime, !dbg !16084

if.end392:                                        ; preds = %land.lhs.true389, %do_number_body
  %arraydecay393 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16086
  %add.ptr394 = getelementptr inbounds i8, i8* %arraydecay393, i64 23, !dbg !16087
  store i8* %add.ptr394, i8** %bufp, align 8, !dbg !16088, !tbaa !2474
  %244 = load i8, i8* %negative_number, align 1, !dbg !16089, !tbaa !2493
  %tobool395 = trunc i8 %244 to i1, !dbg !16089
  br i1 %tobool395, label %if.then396, label %if.end398, !dbg !16091

if.then396:                                       ; preds = %if.end392
  %245 = load i32, i32* %u_number_value, align 4, !dbg !16092, !tbaa !2468
  %sub397 = sub i32 0, %245, !dbg !16093
  store i32 %sub397, i32* %u_number_value, align 4, !dbg !16094, !tbaa !2468
  br label %if.end398, !dbg !16095

if.end398:                                        ; preds = %if.then396, %if.end392
  br label %do.body399, !dbg !16096

do.body399:                                       ; preds = %lor.end415, %if.end398
  %246 = load i32, i32* %tz_colon_mask, align 4, !dbg !16097, !tbaa !2468
  %and = and i32 %246, 1, !dbg !16100
  %tobool400 = icmp ne i32 %and, 0, !dbg !16100
  br i1 %tobool400, label %if.then401, label %if.end403, !dbg !16101

if.then401:                                       ; preds = %do.body399
  %247 = load i8*, i8** %bufp, align 8, !dbg !16102, !tbaa !2474
  %incdec.ptr402 = getelementptr inbounds i8, i8* %247, i32 -1, !dbg !16102
  store i8* %incdec.ptr402, i8** %bufp, align 8, !dbg !16102, !tbaa !2474
  store i8 58, i8* %incdec.ptr402, align 1, !dbg !16103, !tbaa !2529, !ctir !144
  br label %if.end403, !dbg !16104

if.end403:                                        ; preds = %if.then401, %do.body399
  %248 = load i32, i32* %tz_colon_mask, align 4, !dbg !16105, !tbaa !2468
  %shr = ashr i32 %248, 1, !dbg !16105
  store i32 %shr, i32* %tz_colon_mask, align 4, !dbg !16105, !tbaa !2468
  %249 = load i32, i32* %u_number_value, align 4, !dbg !16106, !tbaa !2468
  %rem404 = urem i32 %249, 10, !dbg !16107
  %add405 = add i32 %rem404, 48, !dbg !16108
  %conv406 = trunc i32 %add405 to i8, !dbg !16106
  %250 = load i8*, i8** %bufp, align 8, !dbg !16109, !tbaa !2474
  %incdec.ptr407 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !16109
  store i8* %incdec.ptr407, i8** %bufp, align 8, !dbg !16109, !tbaa !2474
  store i8 %conv406, i8* %incdec.ptr407, align 1, !dbg !16110, !tbaa !2529, !ctir !144
  %251 = load i32, i32* %u_number_value, align 4, !dbg !16111, !tbaa !2468
  %div408 = udiv i32 %251, 10, !dbg !16111
  store i32 %div408, i32* %u_number_value, align 4, !dbg !16111, !tbaa !2468
  br label %do.cond409, !dbg !16112

do.cond409:                                       ; preds = %if.end403
  %252 = load i32, i32* %u_number_value, align 4, !dbg !16113, !tbaa !2468
  %cmp410 = icmp ne i32 %252, 0, !dbg !16114
  br i1 %cmp410, label %lor.end415, label %lor.rhs412, !dbg !16115

lor.rhs412:                                       ; preds = %do.cond409
  %253 = load i32, i32* %tz_colon_mask, align 4, !dbg !16116, !tbaa !2468
  %cmp413 = icmp ne i32 %253, 0, !dbg !16117
  br label %lor.end415, !dbg !16115

lor.end415:                                       ; preds = %lor.rhs412, %do.cond409
  %254 = phi i1 [ true, %do.cond409 ], [ %cmp413, %lor.rhs412 ]
  br i1 %254, label %do.body399, label %do.end416, !dbg !16112, !llvm.loop !16118

do.end416:                                        ; preds = %lor.end415
  br label %do_number_sign_and_padding, !dbg !16112

do_number_sign_and_padding:                       ; preds = %do.end962, %do.end416
  call void @llvm.dbg.label(metadata !16120), !dbg !16121
  %255 = load i32, i32* %digits, align 4, !dbg !16122, !tbaa !2468
  %256 = load i32, i32* %width.addr, align 4, !dbg !16124, !tbaa !2468
  %cmp417 = icmp slt i32 %255, %256, !dbg !16125
  br i1 %cmp417, label %if.then419, label %if.end420, !dbg !16126

if.then419:                                       ; preds = %do_number_sign_and_padding
  %257 = load i32, i32* %width.addr, align 4, !dbg !16127, !tbaa !2468
  store i32 %257, i32* %digits, align 4, !dbg !16128, !tbaa !2468
  br label %if.end420, !dbg !16129

if.end420:                                        ; preds = %if.then419, %do_number_sign_and_padding
  %258 = load i8, i8* %negative_number, align 1, !dbg !16130, !tbaa !2493
  %tobool421 = trunc i8 %258 to i1, !dbg !16130
  br i1 %tobool421, label %cond.true423, label %cond.false424, !dbg !16130

cond.true423:                                     ; preds = %if.end420
  br label %cond.end428, !dbg !16130

cond.false424:                                    ; preds = %if.end420
  %259 = load i8, i8* %always_output_a_sign, align 1, !dbg !16131, !tbaa !2493
  %tobool425 = trunc i8 %259 to i1, !dbg !16131
  %260 = zext i1 %tobool425 to i64, !dbg !16131
  %cond427 = select i1 %tobool425, i32 43, i32 0, !dbg !16131
  br label %cond.end428, !dbg !16130

cond.end428:                                      ; preds = %cond.false424, %cond.true423
  %cond429 = phi i32 [ 45, %cond.true423 ], [ %cond427, %cond.false424 ], !dbg !16130
  %conv430 = trunc i32 %cond429 to i8, !dbg !16132
  store i8 %conv430, i8* %sign_char, align 1, !dbg !16133, !tbaa !2529
  %261 = load i32, i32* %pad, align 4, !dbg !16134, !tbaa !2468
  %cmp431 = icmp eq i32 %261, 45, !dbg !16136
  br i1 %cmp431, label %if.then433, label %if.else486, !dbg !16137

if.then433:                                       ; preds = %cond.end428
  %262 = load i8, i8* %sign_char, align 1, !dbg !16138, !tbaa !2529
  %tobool434 = icmp ne i8 %262, 0, !dbg !16138
  br i1 %tobool434, label %if.then435, label %if.end485, !dbg !16141

if.then435:                                       ; preds = %if.then433
  br label %do.body436, !dbg !16142

do.body436:                                       ; preds = %if.then435
  call void @llvm.dbg.declare(metadata i64* %_n437, metadata !16143, metadata !DIExpression()), !dbg !16145
  store i64 1, i64* %_n437, align 8, !dbg !16145, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w438, metadata !16146, metadata !DIExpression()), !dbg !16145
  %263 = load i32, i32* %width.addr, align 4, !dbg !16145, !tbaa !2468
  %cmp439 = icmp slt i32 %263, 0, !dbg !16145
  br i1 %cmp439, label %cond.true441, label %cond.false442, !dbg !16145

cond.true441:                                     ; preds = %do.body436
  br label %cond.end443, !dbg !16145

cond.false442:                                    ; preds = %do.body436
  %264 = load i32, i32* %width.addr, align 4, !dbg !16145, !tbaa !2468
  br label %cond.end443, !dbg !16145

cond.end443:                                      ; preds = %cond.false442, %cond.true441
  %cond444 = phi i32 [ 0, %cond.true441 ], [ %264, %cond.false442 ], !dbg !16145
  %conv445 = sext i32 %cond444 to i64, !dbg !16145
  store i64 %conv445, i64* %_w438, align 8, !dbg !16145, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr446, metadata !16147, metadata !DIExpression()), !dbg !16145
  %265 = load i64, i64* %_n437, align 8, !dbg !16145, !tbaa !2611
  %266 = load i64, i64* %_w438, align 8, !dbg !16145, !tbaa !2611
  %cmp447 = icmp ult i64 %265, %266, !dbg !16145
  br i1 %cmp447, label %cond.true449, label %cond.false450, !dbg !16145

cond.true449:                                     ; preds = %cond.end443
  %267 = load i64, i64* %_w438, align 8, !dbg !16145, !tbaa !2611
  br label %cond.end451, !dbg !16145

cond.false450:                                    ; preds = %cond.end443
  %268 = load i64, i64* %_n437, align 8, !dbg !16145, !tbaa !2611
  br label %cond.end451, !dbg !16145

cond.end451:                                      ; preds = %cond.false450, %cond.true449
  %cond452 = phi i64 [ %267, %cond.true449 ], [ %268, %cond.false450 ], !dbg !16145
  store i64 %cond452, i64* %_incr446, align 8, !dbg !16145, !tbaa !2611
  %269 = load i64, i64* %_incr446, align 8, !dbg !16148, !tbaa !2611
  %270 = load i64, i64* %maxsize.addr, align 8, !dbg !16148, !tbaa !2611
  %271 = load i64, i64* %i, align 8, !dbg !16148, !tbaa !2611
  %sub453 = sub i64 %270, %271, !dbg !16148
  %cmp454 = icmp uge i64 %269, %sub453, !dbg !16148
  br i1 %cmp454, label %if.then456, label %if.end457, !dbg !16145

if.then456:                                       ; preds = %cond.end451
  store i64 0, i64* %retval, align 8, !dbg !16148
  br label %return, !dbg !16148

if.end457:                                        ; preds = %cond.end451
  %272 = load i8*, i8** %p, align 8, !dbg !16150, !tbaa !2474
  %tobool458 = icmp ne i8* %272, null, !dbg !16150
  br i1 %tobool458, label %if.then459, label %if.end481, !dbg !16145

if.then459:                                       ; preds = %if.end457
  %273 = load i32, i32* %digits, align 4, !dbg !16152, !tbaa !2468
  %cmp460 = icmp eq i32 %273, 0, !dbg !16152
  br i1 %cmp460, label %land.lhs.true462, label %if.end479, !dbg !16152

land.lhs.true462:                                 ; preds = %if.then459
  %274 = load i64, i64* %_n437, align 8, !dbg !16152, !tbaa !2611
  %275 = load i64, i64* %_w438, align 8, !dbg !16152, !tbaa !2611
  %cmp463 = icmp ult i64 %274, %275, !dbg !16152
  br i1 %cmp463, label %if.then465, label %if.end479, !dbg !16155

if.then465:                                       ; preds = %land.lhs.true462
  call void @llvm.dbg.declare(metadata i64* %_delta466, metadata !16156, metadata !DIExpression()), !dbg !16158
  %276 = load i32, i32* %width.addr, align 4, !dbg !16158, !tbaa !2468
  %conv467 = sext i32 %276 to i64, !dbg !16158
  %277 = load i64, i64* %_n437, align 8, !dbg !16158, !tbaa !2611
  %sub468 = sub i64 %conv467, %277, !dbg !16158
  store i64 %sub468, i64* %_delta466, align 8, !dbg !16158, !tbaa !2611
  %278 = load i32, i32* %pad, align 4, !dbg !16159, !tbaa !2468
  %cmp469 = icmp eq i32 %278, 48, !dbg !16159
  br i1 %cmp469, label %if.then474, label %lor.lhs.false471, !dbg !16159

lor.lhs.false471:                                 ; preds = %if.then465
  %279 = load i32, i32* %pad, align 4, !dbg !16159, !tbaa !2468
  %cmp472 = icmp eq i32 %279, 43, !dbg !16159
  br i1 %cmp472, label %if.then474, label %if.else476, !dbg !16158

if.then474:                                       ; preds = %lor.lhs.false471, %if.then465
  %280 = load i8*, i8** %p, align 8, !dbg !16159, !tbaa !2474
  %281 = load i64, i64* %_delta466, align 8, !dbg !16159, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %280, i8 48, i64 %281, i1 false), !dbg !16159
  %282 = load i64, i64* %_delta466, align 8, !dbg !16159, !tbaa !2611
  %283 = load i8*, i8** %p, align 8, !dbg !16159, !tbaa !2474
  %add.ptr475 = getelementptr inbounds i8, i8* %283, i64 %282, !dbg !16159
  store i8* %add.ptr475, i8** %p, align 8, !dbg !16159, !tbaa !2474
  br label %if.end478, !dbg !16159

if.else476:                                       ; preds = %lor.lhs.false471
  %284 = load i8*, i8** %p, align 8, !dbg !16159, !tbaa !2474
  %285 = load i64, i64* %_delta466, align 8, !dbg !16159, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %284, i8 32, i64 %285, i1 false), !dbg !16159
  %286 = load i64, i64* %_delta466, align 8, !dbg !16159, !tbaa !2611
  %287 = load i8*, i8** %p, align 8, !dbg !16159, !tbaa !2474
  %add.ptr477 = getelementptr inbounds i8, i8* %287, i64 %286, !dbg !16159
  store i8* %add.ptr477, i8** %p, align 8, !dbg !16159, !tbaa !2474
  br label %if.end478

if.end478:                                        ; preds = %if.else476, %if.then474
  br label %if.end479, !dbg !16158

if.end479:                                        ; preds = %if.end478, %land.lhs.true462, %if.then459
  %288 = load i8, i8* %sign_char, align 1, !dbg !16155, !tbaa !2529
  %289 = load i8*, i8** %p, align 8, !dbg !16155, !tbaa !2474
  store i8 %288, i8* %289, align 1, !dbg !16155, !tbaa !2529, !ctir !144
  %290 = load i64, i64* %_n437, align 8, !dbg !16155, !tbaa !2611
  %291 = load i8*, i8** %p, align 8, !dbg !16155, !tbaa !2474
  %add.ptr480 = getelementptr inbounds i8, i8* %291, i64 %290, !dbg !16155
  store i8* %add.ptr480, i8** %p, align 8, !dbg !16155, !tbaa !2474
  br label %if.end481, !dbg !16155

if.end481:                                        ; preds = %if.end479, %if.end457
  %292 = load i64, i64* %_incr446, align 8, !dbg !16145, !tbaa !2611
  %293 = load i64, i64* %i, align 8, !dbg !16145, !tbaa !2611
  %add482 = add i64 %293, %292, !dbg !16145
  store i64 %add482, i64* %i, align 8, !dbg !16145, !tbaa !2611
  br label %do.end484, !dbg !16145

do.end484:                                        ; preds = %if.end481
  br label %if.end485, !dbg !16145

if.end485:                                        ; preds = %do.end484, %if.then433
  br label %if.end696, !dbg !16161

if.else486:                                       ; preds = %cond.end428
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !16162, metadata !DIExpression()), !dbg !16164
  %294 = load i32, i32* %digits, align 4, !dbg !16165, !tbaa !2468
  %conv487 = sext i32 %294 to i64, !dbg !16165
  %arraydecay488 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16166
  %add.ptr489 = getelementptr inbounds i8, i8* %arraydecay488, i64 23, !dbg !16167
  %295 = load i8*, i8** %bufp, align 8, !dbg !16168, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr489 to i64, !dbg !16169
  %sub.ptr.rhs.cast = ptrtoint i8* %295 to i64, !dbg !16169
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16169
  %sub490 = sub nsw i64 %conv487, %sub.ptr.sub, !dbg !16170
  %296 = load i8, i8* %sign_char, align 1, !dbg !16171, !tbaa !2529
  %tobool491 = icmp ne i8 %296, 0, !dbg !16172
  %lnot = xor i1 %tobool491, true, !dbg !16172
  %lnot492 = xor i1 %lnot, true, !dbg !16173
  %lnot.ext = zext i1 %lnot492 to i32, !dbg !16173
  %conv493 = sext i32 %lnot.ext to i64, !dbg !16173
  %sub494 = sub nsw i64 %sub490, %conv493, !dbg !16174
  %conv495 = trunc i64 %sub494 to i32, !dbg !16165
  store i32 %conv495, i32* %padding, align 4, !dbg !16164, !tbaa !2468
  %297 = load i32, i32* %padding, align 4, !dbg !16175, !tbaa !2468
  %cmp496 = icmp sgt i32 %297, 0, !dbg !16177
  br i1 %cmp496, label %if.then498, label %if.else642, !dbg !16178

if.then498:                                       ; preds = %if.else486
  %298 = load i32, i32* %pad, align 4, !dbg !16179, !tbaa !2468
  %cmp499 = icmp eq i32 %298, 95, !dbg !16182
  br i1 %cmp499, label %if.then501, label %if.else574, !dbg !16183

if.then501:                                       ; preds = %if.then498
  %299 = load i32, i32* %padding, align 4, !dbg !16184, !tbaa !2468
  %conv502 = sext i32 %299 to i64, !dbg !16187
  %300 = load i64, i64* %maxsize.addr, align 8, !dbg !16188, !tbaa !2611
  %301 = load i64, i64* %i, align 8, !dbg !16189, !tbaa !2611
  %sub503 = sub i64 %300, %301, !dbg !16190
  %cmp504 = icmp uge i64 %conv502, %sub503, !dbg !16191
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !16192

if.then506:                                       ; preds = %if.then501
  store i64 0, i64* %retval, align 8, !dbg !16193
  br label %return, !dbg !16193

if.end507:                                        ; preds = %if.then501
  %302 = load i8*, i8** %p, align 8, !dbg !16194, !tbaa !2474
  %tobool508 = icmp ne i8* %302, null, !dbg !16194
  br i1 %tobool508, label %if.then509, label %if.end512, !dbg !16196

if.then509:                                       ; preds = %if.end507
  %303 = load i8*, i8** %p, align 8, !dbg !16197, !tbaa !2474
  %304 = load i32, i32* %padding, align 4, !dbg !16197, !tbaa !2468
  %conv510 = sext i32 %304 to i64, !dbg !16197
  call void @llvm.memset.p0i8.i64(i8* align 1 %303, i8 32, i64 %conv510, i1 false), !dbg !16197
  %305 = load i32, i32* %padding, align 4, !dbg !16197, !tbaa !2468
  %306 = load i8*, i8** %p, align 8, !dbg !16197, !tbaa !2474
  %idx.ext = sext i32 %305 to i64, !dbg !16197
  %add.ptr511 = getelementptr inbounds i8, i8* %306, i64 %idx.ext, !dbg !16197
  store i8* %add.ptr511, i8** %p, align 8, !dbg !16197, !tbaa !2474
  br label %if.end512, !dbg !16197

if.end512:                                        ; preds = %if.then509, %if.end507
  %307 = load i32, i32* %padding, align 4, !dbg !16198, !tbaa !2468
  %conv513 = sext i32 %307 to i64, !dbg !16198
  %308 = load i64, i64* %i, align 8, !dbg !16199, !tbaa !2611
  %add514 = add i64 %308, %conv513, !dbg !16199
  store i64 %add514, i64* %i, align 8, !dbg !16199, !tbaa !2611
  %309 = load i32, i32* %width.addr, align 4, !dbg !16200, !tbaa !2468
  %310 = load i32, i32* %padding, align 4, !dbg !16201, !tbaa !2468
  %cmp515 = icmp sgt i32 %309, %310, !dbg !16202
  br i1 %cmp515, label %cond.true517, label %cond.false519, !dbg !16200

cond.true517:                                     ; preds = %if.end512
  %311 = load i32, i32* %width.addr, align 4, !dbg !16203, !tbaa !2468
  %312 = load i32, i32* %padding, align 4, !dbg !16204, !tbaa !2468
  %sub518 = sub nsw i32 %311, %312, !dbg !16205
  br label %cond.end520, !dbg !16200

cond.false519:                                    ; preds = %if.end512
  br label %cond.end520, !dbg !16200

cond.end520:                                      ; preds = %cond.false519, %cond.true517
  %cond521 = phi i32 [ %sub518, %cond.true517 ], [ 0, %cond.false519 ], !dbg !16200
  store i32 %cond521, i32* %width.addr, align 4, !dbg !16206, !tbaa !2468
  %313 = load i8, i8* %sign_char, align 1, !dbg !16207, !tbaa !2529
  %tobool522 = icmp ne i8 %313, 0, !dbg !16207
  br i1 %tobool522, label %if.then523, label %if.end573, !dbg !16209

if.then523:                                       ; preds = %cond.end520
  br label %do.body524, !dbg !16210

do.body524:                                       ; preds = %if.then523
  call void @llvm.dbg.declare(metadata i64* %_n525, metadata !16211, metadata !DIExpression()), !dbg !16213
  store i64 1, i64* %_n525, align 8, !dbg !16213, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w526, metadata !16214, metadata !DIExpression()), !dbg !16213
  %314 = load i32, i32* %width.addr, align 4, !dbg !16213, !tbaa !2468
  %cmp527 = icmp slt i32 %314, 0, !dbg !16213
  br i1 %cmp527, label %cond.true529, label %cond.false530, !dbg !16213

cond.true529:                                     ; preds = %do.body524
  br label %cond.end531, !dbg !16213

cond.false530:                                    ; preds = %do.body524
  %315 = load i32, i32* %width.addr, align 4, !dbg !16213, !tbaa !2468
  br label %cond.end531, !dbg !16213

cond.end531:                                      ; preds = %cond.false530, %cond.true529
  %cond532 = phi i32 [ 0, %cond.true529 ], [ %315, %cond.false530 ], !dbg !16213
  %conv533 = sext i32 %cond532 to i64, !dbg !16213
  store i64 %conv533, i64* %_w526, align 8, !dbg !16213, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr534, metadata !16215, metadata !DIExpression()), !dbg !16213
  %316 = load i64, i64* %_n525, align 8, !dbg !16213, !tbaa !2611
  %317 = load i64, i64* %_w526, align 8, !dbg !16213, !tbaa !2611
  %cmp535 = icmp ult i64 %316, %317, !dbg !16213
  br i1 %cmp535, label %cond.true537, label %cond.false538, !dbg !16213

cond.true537:                                     ; preds = %cond.end531
  %318 = load i64, i64* %_w526, align 8, !dbg !16213, !tbaa !2611
  br label %cond.end539, !dbg !16213

cond.false538:                                    ; preds = %cond.end531
  %319 = load i64, i64* %_n525, align 8, !dbg !16213, !tbaa !2611
  br label %cond.end539, !dbg !16213

cond.end539:                                      ; preds = %cond.false538, %cond.true537
  %cond540 = phi i64 [ %318, %cond.true537 ], [ %319, %cond.false538 ], !dbg !16213
  store i64 %cond540, i64* %_incr534, align 8, !dbg !16213, !tbaa !2611
  %320 = load i64, i64* %_incr534, align 8, !dbg !16216, !tbaa !2611
  %321 = load i64, i64* %maxsize.addr, align 8, !dbg !16216, !tbaa !2611
  %322 = load i64, i64* %i, align 8, !dbg !16216, !tbaa !2611
  %sub541 = sub i64 %321, %322, !dbg !16216
  %cmp542 = icmp uge i64 %320, %sub541, !dbg !16216
  br i1 %cmp542, label %if.then544, label %if.end545, !dbg !16213

if.then544:                                       ; preds = %cond.end539
  store i64 0, i64* %retval, align 8, !dbg !16216
  br label %return, !dbg !16216

if.end545:                                        ; preds = %cond.end539
  %323 = load i8*, i8** %p, align 8, !dbg !16218, !tbaa !2474
  %tobool546 = icmp ne i8* %323, null, !dbg !16218
  br i1 %tobool546, label %if.then547, label %if.end569, !dbg !16213

if.then547:                                       ; preds = %if.end545
  %324 = load i32, i32* %digits, align 4, !dbg !16220, !tbaa !2468
  %cmp548 = icmp eq i32 %324, 0, !dbg !16220
  br i1 %cmp548, label %land.lhs.true550, label %if.end567, !dbg !16220

land.lhs.true550:                                 ; preds = %if.then547
  %325 = load i64, i64* %_n525, align 8, !dbg !16220, !tbaa !2611
  %326 = load i64, i64* %_w526, align 8, !dbg !16220, !tbaa !2611
  %cmp551 = icmp ult i64 %325, %326, !dbg !16220
  br i1 %cmp551, label %if.then553, label %if.end567, !dbg !16223

if.then553:                                       ; preds = %land.lhs.true550
  call void @llvm.dbg.declare(metadata i64* %_delta554, metadata !16224, metadata !DIExpression()), !dbg !16226
  %327 = load i32, i32* %width.addr, align 4, !dbg !16226, !tbaa !2468
  %conv555 = sext i32 %327 to i64, !dbg !16226
  %328 = load i64, i64* %_n525, align 8, !dbg !16226, !tbaa !2611
  %sub556 = sub i64 %conv555, %328, !dbg !16226
  store i64 %sub556, i64* %_delta554, align 8, !dbg !16226, !tbaa !2611
  %329 = load i32, i32* %pad, align 4, !dbg !16227, !tbaa !2468
  %cmp557 = icmp eq i32 %329, 48, !dbg !16227
  br i1 %cmp557, label %if.then562, label %lor.lhs.false559, !dbg !16227

lor.lhs.false559:                                 ; preds = %if.then553
  %330 = load i32, i32* %pad, align 4, !dbg !16227, !tbaa !2468
  %cmp560 = icmp eq i32 %330, 43, !dbg !16227
  br i1 %cmp560, label %if.then562, label %if.else564, !dbg !16226

if.then562:                                       ; preds = %lor.lhs.false559, %if.then553
  %331 = load i8*, i8** %p, align 8, !dbg !16227, !tbaa !2474
  %332 = load i64, i64* %_delta554, align 8, !dbg !16227, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %331, i8 48, i64 %332, i1 false), !dbg !16227
  %333 = load i64, i64* %_delta554, align 8, !dbg !16227, !tbaa !2611
  %334 = load i8*, i8** %p, align 8, !dbg !16227, !tbaa !2474
  %add.ptr563 = getelementptr inbounds i8, i8* %334, i64 %333, !dbg !16227
  store i8* %add.ptr563, i8** %p, align 8, !dbg !16227, !tbaa !2474
  br label %if.end566, !dbg !16227

if.else564:                                       ; preds = %lor.lhs.false559
  %335 = load i8*, i8** %p, align 8, !dbg !16227, !tbaa !2474
  %336 = load i64, i64* %_delta554, align 8, !dbg !16227, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %335, i8 32, i64 %336, i1 false), !dbg !16227
  %337 = load i64, i64* %_delta554, align 8, !dbg !16227, !tbaa !2611
  %338 = load i8*, i8** %p, align 8, !dbg !16227, !tbaa !2474
  %add.ptr565 = getelementptr inbounds i8, i8* %338, i64 %337, !dbg !16227
  store i8* %add.ptr565, i8** %p, align 8, !dbg !16227, !tbaa !2474
  br label %if.end566

if.end566:                                        ; preds = %if.else564, %if.then562
  br label %if.end567, !dbg !16226

if.end567:                                        ; preds = %if.end566, %land.lhs.true550, %if.then547
  %339 = load i8, i8* %sign_char, align 1, !dbg !16223, !tbaa !2529
  %340 = load i8*, i8** %p, align 8, !dbg !16223, !tbaa !2474
  store i8 %339, i8* %340, align 1, !dbg !16223, !tbaa !2529, !ctir !144
  %341 = load i64, i64* %_n525, align 8, !dbg !16223, !tbaa !2611
  %342 = load i8*, i8** %p, align 8, !dbg !16223, !tbaa !2474
  %add.ptr568 = getelementptr inbounds i8, i8* %342, i64 %341, !dbg !16223
  store i8* %add.ptr568, i8** %p, align 8, !dbg !16223, !tbaa !2474
  br label %if.end569, !dbg !16223

if.end569:                                        ; preds = %if.end567, %if.end545
  %343 = load i64, i64* %_incr534, align 8, !dbg !16213, !tbaa !2611
  %344 = load i64, i64* %i, align 8, !dbg !16213, !tbaa !2611
  %add570 = add i64 %344, %343, !dbg !16213
  store i64 %add570, i64* %i, align 8, !dbg !16213, !tbaa !2611
  br label %do.end572, !dbg !16213

do.end572:                                        ; preds = %if.end569
  br label %if.end573, !dbg !16213

if.end573:                                        ; preds = %do.end572, %cond.end520
  br label %if.end641, !dbg !16229

if.else574:                                       ; preds = %if.then498
  %345 = load i32, i32* %digits, align 4, !dbg !16230, !tbaa !2468
  %conv575 = sext i32 %345 to i64, !dbg !16233
  %346 = load i64, i64* %maxsize.addr, align 8, !dbg !16234, !tbaa !2611
  %347 = load i64, i64* %i, align 8, !dbg !16235, !tbaa !2611
  %sub576 = sub i64 %346, %347, !dbg !16236
  %cmp577 = icmp uge i64 %conv575, %sub576, !dbg !16237
  br i1 %cmp577, label %if.then579, label %if.end580, !dbg !16238

if.then579:                                       ; preds = %if.else574
  store i64 0, i64* %retval, align 8, !dbg !16239
  br label %return, !dbg !16239

if.end580:                                        ; preds = %if.else574
  %348 = load i8, i8* %sign_char, align 1, !dbg !16240, !tbaa !2529
  %tobool581 = icmp ne i8 %348, 0, !dbg !16240
  br i1 %tobool581, label %if.then582, label %if.end632, !dbg !16242

if.then582:                                       ; preds = %if.end580
  br label %do.body583, !dbg !16243

do.body583:                                       ; preds = %if.then582
  call void @llvm.dbg.declare(metadata i64* %_n584, metadata !16244, metadata !DIExpression()), !dbg !16246
  store i64 1, i64* %_n584, align 8, !dbg !16246, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w585, metadata !16247, metadata !DIExpression()), !dbg !16246
  %349 = load i32, i32* %width.addr, align 4, !dbg !16246, !tbaa !2468
  %cmp586 = icmp slt i32 %349, 0, !dbg !16246
  br i1 %cmp586, label %cond.true588, label %cond.false589, !dbg !16246

cond.true588:                                     ; preds = %do.body583
  br label %cond.end590, !dbg !16246

cond.false589:                                    ; preds = %do.body583
  %350 = load i32, i32* %width.addr, align 4, !dbg !16246, !tbaa !2468
  br label %cond.end590, !dbg !16246

cond.end590:                                      ; preds = %cond.false589, %cond.true588
  %cond591 = phi i32 [ 0, %cond.true588 ], [ %350, %cond.false589 ], !dbg !16246
  %conv592 = sext i32 %cond591 to i64, !dbg !16246
  store i64 %conv592, i64* %_w585, align 8, !dbg !16246, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr593, metadata !16248, metadata !DIExpression()), !dbg !16246
  %351 = load i64, i64* %_n584, align 8, !dbg !16246, !tbaa !2611
  %352 = load i64, i64* %_w585, align 8, !dbg !16246, !tbaa !2611
  %cmp594 = icmp ult i64 %351, %352, !dbg !16246
  br i1 %cmp594, label %cond.true596, label %cond.false597, !dbg !16246

cond.true596:                                     ; preds = %cond.end590
  %353 = load i64, i64* %_w585, align 8, !dbg !16246, !tbaa !2611
  br label %cond.end598, !dbg !16246

cond.false597:                                    ; preds = %cond.end590
  %354 = load i64, i64* %_n584, align 8, !dbg !16246, !tbaa !2611
  br label %cond.end598, !dbg !16246

cond.end598:                                      ; preds = %cond.false597, %cond.true596
  %cond599 = phi i64 [ %353, %cond.true596 ], [ %354, %cond.false597 ], !dbg !16246
  store i64 %cond599, i64* %_incr593, align 8, !dbg !16246, !tbaa !2611
  %355 = load i64, i64* %_incr593, align 8, !dbg !16249, !tbaa !2611
  %356 = load i64, i64* %maxsize.addr, align 8, !dbg !16249, !tbaa !2611
  %357 = load i64, i64* %i, align 8, !dbg !16249, !tbaa !2611
  %sub600 = sub i64 %356, %357, !dbg !16249
  %cmp601 = icmp uge i64 %355, %sub600, !dbg !16249
  br i1 %cmp601, label %if.then603, label %if.end604, !dbg !16246

if.then603:                                       ; preds = %cond.end598
  store i64 0, i64* %retval, align 8, !dbg !16249
  br label %return, !dbg !16249

if.end604:                                        ; preds = %cond.end598
  %358 = load i8*, i8** %p, align 8, !dbg !16251, !tbaa !2474
  %tobool605 = icmp ne i8* %358, null, !dbg !16251
  br i1 %tobool605, label %if.then606, label %if.end628, !dbg !16246

if.then606:                                       ; preds = %if.end604
  %359 = load i32, i32* %digits, align 4, !dbg !16253, !tbaa !2468
  %cmp607 = icmp eq i32 %359, 0, !dbg !16253
  br i1 %cmp607, label %land.lhs.true609, label %if.end626, !dbg !16253

land.lhs.true609:                                 ; preds = %if.then606
  %360 = load i64, i64* %_n584, align 8, !dbg !16253, !tbaa !2611
  %361 = load i64, i64* %_w585, align 8, !dbg !16253, !tbaa !2611
  %cmp610 = icmp ult i64 %360, %361, !dbg !16253
  br i1 %cmp610, label %if.then612, label %if.end626, !dbg !16256

if.then612:                                       ; preds = %land.lhs.true609
  call void @llvm.dbg.declare(metadata i64* %_delta613, metadata !16257, metadata !DIExpression()), !dbg !16259
  %362 = load i32, i32* %width.addr, align 4, !dbg !16259, !tbaa !2468
  %conv614 = sext i32 %362 to i64, !dbg !16259
  %363 = load i64, i64* %_n584, align 8, !dbg !16259, !tbaa !2611
  %sub615 = sub i64 %conv614, %363, !dbg !16259
  store i64 %sub615, i64* %_delta613, align 8, !dbg !16259, !tbaa !2611
  %364 = load i32, i32* %pad, align 4, !dbg !16260, !tbaa !2468
  %cmp616 = icmp eq i32 %364, 48, !dbg !16260
  br i1 %cmp616, label %if.then621, label %lor.lhs.false618, !dbg !16260

lor.lhs.false618:                                 ; preds = %if.then612
  %365 = load i32, i32* %pad, align 4, !dbg !16260, !tbaa !2468
  %cmp619 = icmp eq i32 %365, 43, !dbg !16260
  br i1 %cmp619, label %if.then621, label %if.else623, !dbg !16259

if.then621:                                       ; preds = %lor.lhs.false618, %if.then612
  %366 = load i8*, i8** %p, align 8, !dbg !16260, !tbaa !2474
  %367 = load i64, i64* %_delta613, align 8, !dbg !16260, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %366, i8 48, i64 %367, i1 false), !dbg !16260
  %368 = load i64, i64* %_delta613, align 8, !dbg !16260, !tbaa !2611
  %369 = load i8*, i8** %p, align 8, !dbg !16260, !tbaa !2474
  %add.ptr622 = getelementptr inbounds i8, i8* %369, i64 %368, !dbg !16260
  store i8* %add.ptr622, i8** %p, align 8, !dbg !16260, !tbaa !2474
  br label %if.end625, !dbg !16260

if.else623:                                       ; preds = %lor.lhs.false618
  %370 = load i8*, i8** %p, align 8, !dbg !16260, !tbaa !2474
  %371 = load i64, i64* %_delta613, align 8, !dbg !16260, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %370, i8 32, i64 %371, i1 false), !dbg !16260
  %372 = load i64, i64* %_delta613, align 8, !dbg !16260, !tbaa !2611
  %373 = load i8*, i8** %p, align 8, !dbg !16260, !tbaa !2474
  %add.ptr624 = getelementptr inbounds i8, i8* %373, i64 %372, !dbg !16260
  store i8* %add.ptr624, i8** %p, align 8, !dbg !16260, !tbaa !2474
  br label %if.end625

if.end625:                                        ; preds = %if.else623, %if.then621
  br label %if.end626, !dbg !16259

if.end626:                                        ; preds = %if.end625, %land.lhs.true609, %if.then606
  %374 = load i8, i8* %sign_char, align 1, !dbg !16256, !tbaa !2529
  %375 = load i8*, i8** %p, align 8, !dbg !16256, !tbaa !2474
  store i8 %374, i8* %375, align 1, !dbg !16256, !tbaa !2529, !ctir !144
  %376 = load i64, i64* %_n584, align 8, !dbg !16256, !tbaa !2611
  %377 = load i8*, i8** %p, align 8, !dbg !16256, !tbaa !2474
  %add.ptr627 = getelementptr inbounds i8, i8* %377, i64 %376, !dbg !16256
  store i8* %add.ptr627, i8** %p, align 8, !dbg !16256, !tbaa !2474
  br label %if.end628, !dbg !16256

if.end628:                                        ; preds = %if.end626, %if.end604
  %378 = load i64, i64* %_incr593, align 8, !dbg !16246, !tbaa !2611
  %379 = load i64, i64* %i, align 8, !dbg !16246, !tbaa !2611
  %add629 = add i64 %379, %378, !dbg !16246
  store i64 %add629, i64* %i, align 8, !dbg !16246, !tbaa !2611
  br label %do.end631, !dbg !16246

do.end631:                                        ; preds = %if.end628
  br label %if.end632, !dbg !16246

if.end632:                                        ; preds = %do.end631, %if.end580
  %380 = load i8*, i8** %p, align 8, !dbg !16262, !tbaa !2474
  %tobool633 = icmp ne i8* %380, null, !dbg !16262
  br i1 %tobool633, label %if.then634, label %if.end638, !dbg !16264

if.then634:                                       ; preds = %if.end632
  %381 = load i8*, i8** %p, align 8, !dbg !16265, !tbaa !2474
  %382 = load i32, i32* %padding, align 4, !dbg !16265, !tbaa !2468
  %conv635 = sext i32 %382 to i64, !dbg !16265
  call void @llvm.memset.p0i8.i64(i8* align 1 %381, i8 48, i64 %conv635, i1 false), !dbg !16265
  %383 = load i32, i32* %padding, align 4, !dbg !16265, !tbaa !2468
  %384 = load i8*, i8** %p, align 8, !dbg !16265, !tbaa !2474
  %idx.ext636 = sext i32 %383 to i64, !dbg !16265
  %add.ptr637 = getelementptr inbounds i8, i8* %384, i64 %idx.ext636, !dbg !16265
  store i8* %add.ptr637, i8** %p, align 8, !dbg !16265, !tbaa !2474
  br label %if.end638, !dbg !16265

if.end638:                                        ; preds = %if.then634, %if.end632
  %385 = load i32, i32* %padding, align 4, !dbg !16266, !tbaa !2468
  %conv639 = sext i32 %385 to i64, !dbg !16266
  %386 = load i64, i64* %i, align 8, !dbg !16267, !tbaa !2611
  %add640 = add i64 %386, %conv639, !dbg !16267
  store i64 %add640, i64* %i, align 8, !dbg !16267, !tbaa !2611
  store i32 0, i32* %width.addr, align 4, !dbg !16268, !tbaa !2468
  br label %if.end641

if.end641:                                        ; preds = %if.end638, %if.end573
  br label %if.end695, !dbg !16269

if.else642:                                       ; preds = %if.else486
  %387 = load i8, i8* %sign_char, align 1, !dbg !16270, !tbaa !2529
  %tobool643 = icmp ne i8 %387, 0, !dbg !16270
  br i1 %tobool643, label %if.then644, label %if.end694, !dbg !16273

if.then644:                                       ; preds = %if.else642
  br label %do.body645, !dbg !16274

do.body645:                                       ; preds = %if.then644
  call void @llvm.dbg.declare(metadata i64* %_n646, metadata !16275, metadata !DIExpression()), !dbg !16277
  store i64 1, i64* %_n646, align 8, !dbg !16277, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w647, metadata !16278, metadata !DIExpression()), !dbg !16277
  %388 = load i32, i32* %width.addr, align 4, !dbg !16277, !tbaa !2468
  %cmp648 = icmp slt i32 %388, 0, !dbg !16277
  br i1 %cmp648, label %cond.true650, label %cond.false651, !dbg !16277

cond.true650:                                     ; preds = %do.body645
  br label %cond.end652, !dbg !16277

cond.false651:                                    ; preds = %do.body645
  %389 = load i32, i32* %width.addr, align 4, !dbg !16277, !tbaa !2468
  br label %cond.end652, !dbg !16277

cond.end652:                                      ; preds = %cond.false651, %cond.true650
  %cond653 = phi i32 [ 0, %cond.true650 ], [ %389, %cond.false651 ], !dbg !16277
  %conv654 = sext i32 %cond653 to i64, !dbg !16277
  store i64 %conv654, i64* %_w647, align 8, !dbg !16277, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr655, metadata !16279, metadata !DIExpression()), !dbg !16277
  %390 = load i64, i64* %_n646, align 8, !dbg !16277, !tbaa !2611
  %391 = load i64, i64* %_w647, align 8, !dbg !16277, !tbaa !2611
  %cmp656 = icmp ult i64 %390, %391, !dbg !16277
  br i1 %cmp656, label %cond.true658, label %cond.false659, !dbg !16277

cond.true658:                                     ; preds = %cond.end652
  %392 = load i64, i64* %_w647, align 8, !dbg !16277, !tbaa !2611
  br label %cond.end660, !dbg !16277

cond.false659:                                    ; preds = %cond.end652
  %393 = load i64, i64* %_n646, align 8, !dbg !16277, !tbaa !2611
  br label %cond.end660, !dbg !16277

cond.end660:                                      ; preds = %cond.false659, %cond.true658
  %cond661 = phi i64 [ %392, %cond.true658 ], [ %393, %cond.false659 ], !dbg !16277
  store i64 %cond661, i64* %_incr655, align 8, !dbg !16277, !tbaa !2611
  %394 = load i64, i64* %_incr655, align 8, !dbg !16280, !tbaa !2611
  %395 = load i64, i64* %maxsize.addr, align 8, !dbg !16280, !tbaa !2611
  %396 = load i64, i64* %i, align 8, !dbg !16280, !tbaa !2611
  %sub662 = sub i64 %395, %396, !dbg !16280
  %cmp663 = icmp uge i64 %394, %sub662, !dbg !16280
  br i1 %cmp663, label %if.then665, label %if.end666, !dbg !16277

if.then665:                                       ; preds = %cond.end660
  store i64 0, i64* %retval, align 8, !dbg !16280
  br label %return, !dbg !16280

if.end666:                                        ; preds = %cond.end660
  %397 = load i8*, i8** %p, align 8, !dbg !16282, !tbaa !2474
  %tobool667 = icmp ne i8* %397, null, !dbg !16282
  br i1 %tobool667, label %if.then668, label %if.end690, !dbg !16277

if.then668:                                       ; preds = %if.end666
  %398 = load i32, i32* %digits, align 4, !dbg !16284, !tbaa !2468
  %cmp669 = icmp eq i32 %398, 0, !dbg !16284
  br i1 %cmp669, label %land.lhs.true671, label %if.end688, !dbg !16284

land.lhs.true671:                                 ; preds = %if.then668
  %399 = load i64, i64* %_n646, align 8, !dbg !16284, !tbaa !2611
  %400 = load i64, i64* %_w647, align 8, !dbg !16284, !tbaa !2611
  %cmp672 = icmp ult i64 %399, %400, !dbg !16284
  br i1 %cmp672, label %if.then674, label %if.end688, !dbg !16287

if.then674:                                       ; preds = %land.lhs.true671
  call void @llvm.dbg.declare(metadata i64* %_delta675, metadata !16288, metadata !DIExpression()), !dbg !16290
  %401 = load i32, i32* %width.addr, align 4, !dbg !16290, !tbaa !2468
  %conv676 = sext i32 %401 to i64, !dbg !16290
  %402 = load i64, i64* %_n646, align 8, !dbg !16290, !tbaa !2611
  %sub677 = sub i64 %conv676, %402, !dbg !16290
  store i64 %sub677, i64* %_delta675, align 8, !dbg !16290, !tbaa !2611
  %403 = load i32, i32* %pad, align 4, !dbg !16291, !tbaa !2468
  %cmp678 = icmp eq i32 %403, 48, !dbg !16291
  br i1 %cmp678, label %if.then683, label %lor.lhs.false680, !dbg !16291

lor.lhs.false680:                                 ; preds = %if.then674
  %404 = load i32, i32* %pad, align 4, !dbg !16291, !tbaa !2468
  %cmp681 = icmp eq i32 %404, 43, !dbg !16291
  br i1 %cmp681, label %if.then683, label %if.else685, !dbg !16290

if.then683:                                       ; preds = %lor.lhs.false680, %if.then674
  %405 = load i8*, i8** %p, align 8, !dbg !16291, !tbaa !2474
  %406 = load i64, i64* %_delta675, align 8, !dbg !16291, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %405, i8 48, i64 %406, i1 false), !dbg !16291
  %407 = load i64, i64* %_delta675, align 8, !dbg !16291, !tbaa !2611
  %408 = load i8*, i8** %p, align 8, !dbg !16291, !tbaa !2474
  %add.ptr684 = getelementptr inbounds i8, i8* %408, i64 %407, !dbg !16291
  store i8* %add.ptr684, i8** %p, align 8, !dbg !16291, !tbaa !2474
  br label %if.end687, !dbg !16291

if.else685:                                       ; preds = %lor.lhs.false680
  %409 = load i8*, i8** %p, align 8, !dbg !16291, !tbaa !2474
  %410 = load i64, i64* %_delta675, align 8, !dbg !16291, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %409, i8 32, i64 %410, i1 false), !dbg !16291
  %411 = load i64, i64* %_delta675, align 8, !dbg !16291, !tbaa !2611
  %412 = load i8*, i8** %p, align 8, !dbg !16291, !tbaa !2474
  %add.ptr686 = getelementptr inbounds i8, i8* %412, i64 %411, !dbg !16291
  store i8* %add.ptr686, i8** %p, align 8, !dbg !16291, !tbaa !2474
  br label %if.end687

if.end687:                                        ; preds = %if.else685, %if.then683
  br label %if.end688, !dbg !16290

if.end688:                                        ; preds = %if.end687, %land.lhs.true671, %if.then668
  %413 = load i8, i8* %sign_char, align 1, !dbg !16287, !tbaa !2529
  %414 = load i8*, i8** %p, align 8, !dbg !16287, !tbaa !2474
  store i8 %413, i8* %414, align 1, !dbg !16287, !tbaa !2529, !ctir !144
  %415 = load i64, i64* %_n646, align 8, !dbg !16287, !tbaa !2611
  %416 = load i8*, i8** %p, align 8, !dbg !16287, !tbaa !2474
  %add.ptr689 = getelementptr inbounds i8, i8* %416, i64 %415, !dbg !16287
  store i8* %add.ptr689, i8** %p, align 8, !dbg !16287, !tbaa !2474
  br label %if.end690, !dbg !16287

if.end690:                                        ; preds = %if.end688, %if.end666
  %417 = load i64, i64* %_incr655, align 8, !dbg !16277, !tbaa !2611
  %418 = load i64, i64* %i, align 8, !dbg !16277, !tbaa !2611
  %add691 = add i64 %418, %417, !dbg !16277
  store i64 %add691, i64* %i, align 8, !dbg !16277, !tbaa !2611
  br label %do.end693, !dbg !16277

do.end693:                                        ; preds = %if.end690
  br label %if.end694, !dbg !16277

if.end694:                                        ; preds = %do.end693, %if.else642
  br label %if.end695

if.end695:                                        ; preds = %if.end694, %if.end641
  br label %if.end696

if.end696:                                        ; preds = %if.end695, %if.end485
  br label %do.body697, !dbg !16293

do.body697:                                       ; preds = %if.end696
  call void @llvm.dbg.declare(metadata i64* %_n698, metadata !16294, metadata !DIExpression()), !dbg !16296
  %arraydecay699 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16296
  %add.ptr700 = getelementptr inbounds i8, i8* %arraydecay699, i64 23, !dbg !16296
  %419 = load i8*, i8** %bufp, align 8, !dbg !16296, !tbaa !2474
  %sub.ptr.lhs.cast701 = ptrtoint i8* %add.ptr700 to i64, !dbg !16296
  %sub.ptr.rhs.cast702 = ptrtoint i8* %419 to i64, !dbg !16296
  %sub.ptr.sub703 = sub i64 %sub.ptr.lhs.cast701, %sub.ptr.rhs.cast702, !dbg !16296
  store i64 %sub.ptr.sub703, i64* %_n698, align 8, !dbg !16296, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w704, metadata !16297, metadata !DIExpression()), !dbg !16296
  %420 = load i32, i32* %width.addr, align 4, !dbg !16296, !tbaa !2468
  %cmp705 = icmp slt i32 %420, 0, !dbg !16296
  br i1 %cmp705, label %cond.true707, label %cond.false708, !dbg !16296

cond.true707:                                     ; preds = %do.body697
  br label %cond.end709, !dbg !16296

cond.false708:                                    ; preds = %do.body697
  %421 = load i32, i32* %width.addr, align 4, !dbg !16296, !tbaa !2468
  br label %cond.end709, !dbg !16296

cond.end709:                                      ; preds = %cond.false708, %cond.true707
  %cond710 = phi i32 [ 0, %cond.true707 ], [ %421, %cond.false708 ], !dbg !16296
  %conv711 = sext i32 %cond710 to i64, !dbg !16296
  store i64 %conv711, i64* %_w704, align 8, !dbg !16296, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr712, metadata !16298, metadata !DIExpression()), !dbg !16296
  %422 = load i64, i64* %_n698, align 8, !dbg !16296, !tbaa !2611
  %423 = load i64, i64* %_w704, align 8, !dbg !16296, !tbaa !2611
  %cmp713 = icmp ult i64 %422, %423, !dbg !16296
  br i1 %cmp713, label %cond.true715, label %cond.false716, !dbg !16296

cond.true715:                                     ; preds = %cond.end709
  %424 = load i64, i64* %_w704, align 8, !dbg !16296, !tbaa !2611
  br label %cond.end717, !dbg !16296

cond.false716:                                    ; preds = %cond.end709
  %425 = load i64, i64* %_n698, align 8, !dbg !16296, !tbaa !2611
  br label %cond.end717, !dbg !16296

cond.end717:                                      ; preds = %cond.false716, %cond.true715
  %cond718 = phi i64 [ %424, %cond.true715 ], [ %425, %cond.false716 ], !dbg !16296
  store i64 %cond718, i64* %_incr712, align 8, !dbg !16296, !tbaa !2611
  %426 = load i64, i64* %_incr712, align 8, !dbg !16299, !tbaa !2611
  %427 = load i64, i64* %maxsize.addr, align 8, !dbg !16299, !tbaa !2611
  %428 = load i64, i64* %i, align 8, !dbg !16299, !tbaa !2611
  %sub719 = sub i64 %427, %428, !dbg !16299
  %cmp720 = icmp uge i64 %426, %sub719, !dbg !16299
  br i1 %cmp720, label %if.then722, label %if.end723, !dbg !16296

if.then722:                                       ; preds = %cond.end717
  store i64 0, i64* %retval, align 8, !dbg !16299
  br label %return, !dbg !16299

if.end723:                                        ; preds = %cond.end717
  %429 = load i8*, i8** %p, align 8, !dbg !16301, !tbaa !2474
  %tobool724 = icmp ne i8* %429, null, !dbg !16301
  br i1 %tobool724, label %if.then725, label %if.end757, !dbg !16296

if.then725:                                       ; preds = %if.end723
  %430 = load i32, i32* %digits, align 4, !dbg !16303, !tbaa !2468
  %cmp726 = icmp eq i32 %430, 0, !dbg !16303
  br i1 %cmp726, label %land.lhs.true728, label %if.end745, !dbg !16303

land.lhs.true728:                                 ; preds = %if.then725
  %431 = load i64, i64* %_n698, align 8, !dbg !16303, !tbaa !2611
  %432 = load i64, i64* %_w704, align 8, !dbg !16303, !tbaa !2611
  %cmp729 = icmp ult i64 %431, %432, !dbg !16303
  br i1 %cmp729, label %if.then731, label %if.end745, !dbg !16306

if.then731:                                       ; preds = %land.lhs.true728
  call void @llvm.dbg.declare(metadata i64* %_delta732, metadata !16307, metadata !DIExpression()), !dbg !16309
  %433 = load i32, i32* %width.addr, align 4, !dbg !16309, !tbaa !2468
  %conv733 = sext i32 %433 to i64, !dbg !16309
  %434 = load i64, i64* %_n698, align 8, !dbg !16309, !tbaa !2611
  %sub734 = sub i64 %conv733, %434, !dbg !16309
  store i64 %sub734, i64* %_delta732, align 8, !dbg !16309, !tbaa !2611
  %435 = load i32, i32* %pad, align 4, !dbg !16310, !tbaa !2468
  %cmp735 = icmp eq i32 %435, 48, !dbg !16310
  br i1 %cmp735, label %if.then740, label %lor.lhs.false737, !dbg !16310

lor.lhs.false737:                                 ; preds = %if.then731
  %436 = load i32, i32* %pad, align 4, !dbg !16310, !tbaa !2468
  %cmp738 = icmp eq i32 %436, 43, !dbg !16310
  br i1 %cmp738, label %if.then740, label %if.else742, !dbg !16309

if.then740:                                       ; preds = %lor.lhs.false737, %if.then731
  %437 = load i8*, i8** %p, align 8, !dbg !16310, !tbaa !2474
  %438 = load i64, i64* %_delta732, align 8, !dbg !16310, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %437, i8 48, i64 %438, i1 false), !dbg !16310
  %439 = load i64, i64* %_delta732, align 8, !dbg !16310, !tbaa !2611
  %440 = load i8*, i8** %p, align 8, !dbg !16310, !tbaa !2474
  %add.ptr741 = getelementptr inbounds i8, i8* %440, i64 %439, !dbg !16310
  store i8* %add.ptr741, i8** %p, align 8, !dbg !16310, !tbaa !2474
  br label %if.end744, !dbg !16310

if.else742:                                       ; preds = %lor.lhs.false737
  %441 = load i8*, i8** %p, align 8, !dbg !16310, !tbaa !2474
  %442 = load i64, i64* %_delta732, align 8, !dbg !16310, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %441, i8 32, i64 %442, i1 false), !dbg !16310
  %443 = load i64, i64* %_delta732, align 8, !dbg !16310, !tbaa !2611
  %444 = load i8*, i8** %p, align 8, !dbg !16310, !tbaa !2474
  %add.ptr743 = getelementptr inbounds i8, i8* %444, i64 %443, !dbg !16310
  store i8* %add.ptr743, i8** %p, align 8, !dbg !16310, !tbaa !2474
  br label %if.end744

if.end744:                                        ; preds = %if.else742, %if.then740
  br label %if.end745, !dbg !16309

if.end745:                                        ; preds = %if.end744, %land.lhs.true728, %if.then725
  %445 = load i8, i8* %to_lowcase, align 1, !dbg !16312, !tbaa !2493
  %tobool746 = trunc i8 %445 to i1, !dbg !16312
  br i1 %tobool746, label %if.then747, label %if.else749, !dbg !16306

if.then747:                                       ; preds = %if.end745
  %446 = load i8*, i8** %p, align 8, !dbg !16312, !tbaa !2474
  %447 = load i8*, i8** %bufp, align 8, !dbg !16312, !tbaa !2474
  %448 = load i64, i64* %_n698, align 8, !dbg !16312, !tbaa !2611
  %call748 = call i8* @memcpy_lowcase(i8* %446, i8* %447, i64 %448), !dbg !16312
  br label %if.end755, !dbg !16312

if.else749:                                       ; preds = %if.end745
  %449 = load i8, i8* %to_uppcase, align 1, !dbg !16314, !tbaa !2493
  %tobool750 = trunc i8 %449 to i1, !dbg !16314
  br i1 %tobool750, label %if.then751, label %if.else753, !dbg !16312

if.then751:                                       ; preds = %if.else749
  %450 = load i8*, i8** %p, align 8, !dbg !16314, !tbaa !2474
  %451 = load i8*, i8** %bufp, align 8, !dbg !16314, !tbaa !2474
  %452 = load i64, i64* %_n698, align 8, !dbg !16314, !tbaa !2611
  %call752 = call i8* @memcpy_uppcase(i8* %450, i8* %451, i64 %452), !dbg !16314
  br label %if.end754, !dbg !16314

if.else753:                                       ; preds = %if.else749
  %453 = load i8*, i8** %p, align 8, !dbg !16314, !tbaa !2474
  %454 = load i8*, i8** %bufp, align 8, !dbg !16314, !tbaa !2474
  %455 = load i64, i64* %_n698, align 8, !dbg !16314, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %453, i8* align 1 %454, i64 %455, i1 false), !dbg !16314
  br label %if.end754

if.end754:                                        ; preds = %if.else753, %if.then751
  br label %if.end755

if.end755:                                        ; preds = %if.end754, %if.then747
  %456 = load i64, i64* %_n698, align 8, !dbg !16306, !tbaa !2611
  %457 = load i8*, i8** %p, align 8, !dbg !16306, !tbaa !2474
  %add.ptr756 = getelementptr inbounds i8, i8* %457, i64 %456, !dbg !16306
  store i8* %add.ptr756, i8** %p, align 8, !dbg !16306, !tbaa !2474
  br label %if.end757, !dbg !16306

if.end757:                                        ; preds = %if.end755, %if.end723
  %458 = load i64, i64* %_incr712, align 8, !dbg !16296, !tbaa !2611
  %459 = load i64, i64* %i, align 8, !dbg !16296, !tbaa !2611
  %add758 = add i64 %459, %458, !dbg !16296
  store i64 %add758, i64* %i, align 8, !dbg !16296, !tbaa !2611
  br label %do.end760, !dbg !16296

do.end760:                                        ; preds = %if.end757
  br label %sw.epilog1435, !dbg !16316

sw.bb761:                                         ; preds = %sw.epilog87
  %460 = load i32, i32* %modifier, align 4, !dbg !16317, !tbaa !2468
  %cmp762 = icmp ne i32 %460, 0, !dbg !16319
  br i1 %cmp762, label %if.then764, label %if.end765, !dbg !16320

if.then764:                                       ; preds = %sw.bb761
  br label %bad_format, !dbg !16321

if.end765:                                        ; preds = %sw.bb761
  %461 = load i32, i32* %pad, align 4, !dbg !16322, !tbaa !2468
  %cmp766 = icmp eq i32 %461, 0, !dbg !16324
  br i1 %cmp766, label %land.lhs.true768, label %if.else772, !dbg !16325

land.lhs.true768:                                 ; preds = %if.end765
  %462 = load i32, i32* %width.addr, align 4, !dbg !16326, !tbaa !2468
  %cmp769 = icmp slt i32 %462, 0, !dbg !16327
  br i1 %cmp769, label %if.then771, label %if.else772, !dbg !16328

if.then771:                                       ; preds = %land.lhs.true768
  store i32 43, i32* %pad, align 4, !dbg !16329, !tbaa !2468
  store i32 4, i32* %subwidth, align 4, !dbg !16331, !tbaa !2468
  br label %if.end778, !dbg !16332

if.else772:                                       ; preds = %land.lhs.true768, %if.end765
  %463 = load i32, i32* %width.addr, align 4, !dbg !16333, !tbaa !2468
  %sub773 = sub nsw i32 %463, 6, !dbg !16335
  store i32 %sub773, i32* %subwidth, align 4, !dbg !16336, !tbaa !2468
  %464 = load i32, i32* %subwidth, align 4, !dbg !16337, !tbaa !2468
  %cmp774 = icmp slt i32 %464, 0, !dbg !16339
  br i1 %cmp774, label %if.then776, label %if.end777, !dbg !16340

if.then776:                                       ; preds = %if.else772
  store i32 0, i32* %subwidth, align 4, !dbg !16341, !tbaa !2468
  br label %if.end777, !dbg !16342

if.end777:                                        ; preds = %if.then776, %if.else772
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.then771
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.361, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16343, !tbaa !2474
  br label %subformat_width, !dbg !16344

sw.bb779:                                         ; preds = %sw.epilog87
  %465 = load i32, i32* %modifier, align 4, !dbg !16345, !tbaa !2468
  %cmp780 = icmp eq i32 %465, 69, !dbg !16347
  br i1 %cmp780, label %if.then782, label %if.end783, !dbg !16348

if.then782:                                       ; preds = %sw.bb779
  br label %bad_format, !dbg !16349

if.end783:                                        ; preds = %sw.bb779
  br label %do.body784, !dbg !16350

do.body784:                                       ; preds = %if.end783
  store i32 2, i32* %digits, align 4, !dbg !16351, !tbaa !2468
  %466 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16351, !tbaa !2474
  %tm_hour785 = getelementptr inbounds %struct.tm, %struct.tm* %466, i32 0, i32 2, !dbg !16351, !ctir !1922
  %467 = load i32, i32* %tm_hour785, align 8, !dbg !16351, !tbaa !15613, !ctir !27
  store i32 %467, i32* %number_value, align 4, !dbg !16351, !tbaa !2468
  br label %do_number, !dbg !16351

do.end787:                                        ; No predecessors!
  br label %sw.bb788, !dbg !16351

sw.bb788:                                         ; preds = %sw.epilog87, %do.end787
  %468 = load i32, i32* %modifier, align 4, !dbg !16353, !tbaa !2468
  %cmp789 = icmp eq i32 %468, 69, !dbg !16355
  br i1 %cmp789, label %if.then791, label %if.end792, !dbg !16356

if.then791:                                       ; preds = %sw.bb788
  br label %bad_format, !dbg !16357

if.end792:                                        ; preds = %sw.bb788
  br label %do.body793, !dbg !16358

do.body793:                                       ; preds = %if.end792
  store i32 2, i32* %digits, align 4, !dbg !16359, !tbaa !2468
  %469 = load i32, i32* %hour12, align 4, !dbg !16359, !tbaa !2468
  store i32 %469, i32* %number_value, align 4, !dbg !16359, !tbaa !2468
  br label %do_number, !dbg !16359

do.end795:                                        ; No predecessors!
  br label %sw.bb796, !dbg !16359

sw.bb796:                                         ; preds = %sw.epilog87, %do.end795
  %470 = load i32, i32* %modifier, align 4, !dbg !16361, !tbaa !2468
  %cmp797 = icmp eq i32 %470, 69, !dbg !16363
  br i1 %cmp797, label %if.then799, label %if.end800, !dbg !16364

if.then799:                                       ; preds = %sw.bb796
  br label %bad_format, !dbg !16365

if.end800:                                        ; preds = %sw.bb796
  br label %do.body801, !dbg !16366

do.body801:                                       ; preds = %if.end800
  store i32 2, i32* %digits, align 4, !dbg !16367, !tbaa !2468
  %471 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16367, !tbaa !2474
  %tm_hour802 = getelementptr inbounds %struct.tm, %struct.tm* %471, i32 0, i32 2, !dbg !16367, !ctir !1922
  %472 = load i32, i32* %tm_hour802, align 8, !dbg !16367, !tbaa !15613, !ctir !27
  store i32 %472, i32* %number_value, align 4, !dbg !16367, !tbaa !2468
  br label %do_number_spacepad, !dbg !16367

do.end804:                                        ; No predecessors!
  br label %sw.bb805, !dbg !16367

sw.bb805:                                         ; preds = %sw.epilog87, %do.end804
  %473 = load i32, i32* %modifier, align 4, !dbg !16369, !tbaa !2468
  %cmp806 = icmp eq i32 %473, 69, !dbg !16371
  br i1 %cmp806, label %if.then808, label %if.end809, !dbg !16372

if.then808:                                       ; preds = %sw.bb805
  br label %bad_format, !dbg !16373

if.end809:                                        ; preds = %sw.bb805
  br label %do.body810, !dbg !16374

do.body810:                                       ; preds = %if.end809
  store i32 2, i32* %digits, align 4, !dbg !16375, !tbaa !2468
  %474 = load i32, i32* %hour12, align 4, !dbg !16375, !tbaa !2468
  store i32 %474, i32* %number_value, align 4, !dbg !16375, !tbaa !2468
  br label %do_number_spacepad, !dbg !16375

do.end812:                                        ; No predecessors!
  br label %sw.bb813, !dbg !16375

sw.bb813:                                         ; preds = %sw.epilog87, %do.end812
  %475 = load i32, i32* %modifier, align 4, !dbg !16377, !tbaa !2468
  %cmp814 = icmp eq i32 %475, 69, !dbg !16379
  br i1 %cmp814, label %if.then816, label %if.end817, !dbg !16380

if.then816:                                       ; preds = %sw.bb813
  br label %bad_format, !dbg !16381

if.end817:                                        ; preds = %sw.bb813
  br label %do.body818, !dbg !16382

do.body818:                                       ; preds = %if.end817
  store i32 3, i32* %digits, align 4, !dbg !16383, !tbaa !2468
  %476 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16383, !tbaa !2474
  %tm_yday = getelementptr inbounds %struct.tm, %struct.tm* %476, i32 0, i32 7, !dbg !16383, !ctir !1922
  %477 = load i32, i32* %tm_yday, align 4, !dbg !16383, !tbaa !16385, !ctir !27
  %cmp819 = icmp slt i32 %477, -1, !dbg !16383
  %frombool821 = zext i1 %cmp819 to i8, !dbg !16383
  store i8 %frombool821, i8* %negative_number, align 1, !dbg !16383, !tbaa !2493
  %478 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16383, !tbaa !2474
  %tm_yday822 = getelementptr inbounds %struct.tm, %struct.tm* %478, i32 0, i32 7, !dbg !16383, !ctir !1922
  %479 = load i32, i32* %tm_yday822, align 4, !dbg !16383, !tbaa !16385, !ctir !27
  %add823 = add i32 %479, 1, !dbg !16383
  store i32 %add823, i32* %u_number_value, align 4, !dbg !16383, !tbaa !2468
  br label %do_signed_number, !dbg !16383

do.end825:                                        ; No predecessors!
  br label %sw.bb826, !dbg !16383

sw.bb826:                                         ; preds = %sw.epilog87, %do.end825
  %480 = load i32, i32* %modifier, align 4, !dbg !16386, !tbaa !2468
  %cmp827 = icmp eq i32 %480, 69, !dbg !16388
  br i1 %cmp827, label %if.then829, label %if.end830, !dbg !16389

if.then829:                                       ; preds = %sw.bb826
  br label %bad_format, !dbg !16390

if.end830:                                        ; preds = %sw.bb826
  br label %do.body831, !dbg !16391

do.body831:                                       ; preds = %if.end830
  store i32 2, i32* %digits, align 4, !dbg !16392, !tbaa !2468
  %481 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16392, !tbaa !2474
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %481, i32 0, i32 1, !dbg !16392, !ctir !1922
  %482 = load i32, i32* %tm_min, align 4, !dbg !16392, !tbaa !16394, !ctir !27
  store i32 %482, i32* %number_value, align 4, !dbg !16392, !tbaa !2468
  br label %do_number, !dbg !16392

do.end833:                                        ; No predecessors!
  br label %sw.bb834, !dbg !16392

sw.bb834:                                         ; preds = %sw.epilog87, %do.end833
  %483 = load i32, i32* %modifier, align 4, !dbg !16395, !tbaa !2468
  %cmp835 = icmp eq i32 %483, 69, !dbg !16397
  br i1 %cmp835, label %if.then837, label %if.end838, !dbg !16398

if.then837:                                       ; preds = %sw.bb834
  br label %bad_format, !dbg !16399

if.end838:                                        ; preds = %sw.bb834
  br label %do.body839, !dbg !16400

do.body839:                                       ; preds = %if.end838
  store i32 2, i32* %digits, align 4, !dbg !16401, !tbaa !2468
  %484 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16401, !tbaa !2474
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %484, i32 0, i32 4, !dbg !16401, !ctir !1922
  %485 = load i32, i32* %tm_mon, align 8, !dbg !16401, !tbaa !6850, !ctir !27
  %cmp840 = icmp slt i32 %485, -1, !dbg !16401
  %frombool842 = zext i1 %cmp840 to i8, !dbg !16401
  store i8 %frombool842, i8* %negative_number, align 1, !dbg !16401, !tbaa !2493
  %486 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16401, !tbaa !2474
  %tm_mon843 = getelementptr inbounds %struct.tm, %struct.tm* %486, i32 0, i32 4, !dbg !16401, !ctir !1922
  %487 = load i32, i32* %tm_mon843, align 8, !dbg !16401, !tbaa !6850, !ctir !27
  %add844 = add i32 %487, 1, !dbg !16401
  store i32 %add844, i32* %u_number_value, align 4, !dbg !16401, !tbaa !2468
  br label %do_signed_number, !dbg !16401

do.end846:                                        ; No predecessors!
  br label %sw.bb847, !dbg !16401

sw.bb847:                                         ; preds = %sw.epilog87, %do.end846
  %488 = load i32, i32* %modifier, align 4, !dbg !16403, !tbaa !2468
  %cmp848 = icmp eq i32 %488, 69, !dbg !16405
  br i1 %cmp848, label %if.then850, label %if.end851, !dbg !16406

if.then850:                                       ; preds = %sw.bb847
  br label %bad_format, !dbg !16407

if.end851:                                        ; preds = %sw.bb847
  %489 = load i32, i32* %ns.addr, align 4, !dbg !16408, !tbaa !2468
  store i32 %489, i32* %number_value, align 4, !dbg !16409, !tbaa !2468
  %490 = load i32, i32* %width.addr, align 4, !dbg !16410, !tbaa !2468
  %cmp852 = icmp eq i32 %490, -1, !dbg !16412
  br i1 %cmp852, label %if.then854, label %if.else855, !dbg !16413

if.then854:                                       ; preds = %if.end851
  store i32 9, i32* %width.addr, align 4, !dbg !16414, !tbaa !2468
  br label %if.end861, !dbg !16415

if.else855:                                       ; preds = %if.end851
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16416, metadata !DIExpression()), !dbg !16418
  %491 = load i32, i32* %width.addr, align 4, !dbg !16419, !tbaa !2468
  store i32 %491, i32* %j, align 4, !dbg !16421, !tbaa !2468
  br label %for.cond856, !dbg !16422

for.cond856:                                      ; preds = %for.inc, %if.else855
  %492 = load i32, i32* %j, align 4, !dbg !16423, !tbaa !2468
  %cmp857 = icmp slt i32 %492, 9, !dbg !16425
  br i1 %cmp857, label %for.body859, label %for.end, !dbg !16426

for.body859:                                      ; preds = %for.cond856
  %493 = load i32, i32* %number_value, align 4, !dbg !16427, !tbaa !2468
  %div860 = sdiv i32 %493, 10, !dbg !16427
  store i32 %div860, i32* %number_value, align 4, !dbg !16427, !tbaa !2468
  br label %for.inc, !dbg !16428

for.inc:                                          ; preds = %for.body859
  %494 = load i32, i32* %j, align 4, !dbg !16429, !tbaa !2468
  %inc = add nsw i32 %494, 1, !dbg !16429
  store i32 %inc, i32* %j, align 4, !dbg !16429, !tbaa !2468
  br label %for.cond856, !dbg !16430, !llvm.loop !16431

for.end:                                          ; preds = %for.cond856
  br label %if.end861

if.end861:                                        ; preds = %for.end, %if.then854
  br label %do.body862, !dbg !16433

do.body862:                                       ; preds = %if.end861
  %495 = load i32, i32* %width.addr, align 4, !dbg !16434, !tbaa !2468
  store i32 %495, i32* %digits, align 4, !dbg !16434, !tbaa !2468
  %496 = load i32, i32* %number_value, align 4, !dbg !16434, !tbaa !2468
  store i32 %496, i32* %number_value, align 4, !dbg !16434, !tbaa !2468
  br label %do_number, !dbg !16434

do.end864:                                        ; No predecessors!
  br label %sw.bb865, !dbg !16434

sw.bb865:                                         ; preds = %sw.epilog87, %do.end864
  br label %do.body866, !dbg !16436

do.body866:                                       ; preds = %sw.bb865
  call void @llvm.dbg.declare(metadata i64* %_n867, metadata !16437, metadata !DIExpression()), !dbg !16439
  store i64 1, i64* %_n867, align 8, !dbg !16439, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w868, metadata !16440, metadata !DIExpression()), !dbg !16439
  %497 = load i32, i32* %width.addr, align 4, !dbg !16439, !tbaa !2468
  %cmp869 = icmp slt i32 %497, 0, !dbg !16439
  br i1 %cmp869, label %cond.true871, label %cond.false872, !dbg !16439

cond.true871:                                     ; preds = %do.body866
  br label %cond.end873, !dbg !16439

cond.false872:                                    ; preds = %do.body866
  %498 = load i32, i32* %width.addr, align 4, !dbg !16439, !tbaa !2468
  br label %cond.end873, !dbg !16439

cond.end873:                                      ; preds = %cond.false872, %cond.true871
  %cond874 = phi i32 [ 0, %cond.true871 ], [ %498, %cond.false872 ], !dbg !16439
  %conv875 = sext i32 %cond874 to i64, !dbg !16439
  store i64 %conv875, i64* %_w868, align 8, !dbg !16439, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr876, metadata !16441, metadata !DIExpression()), !dbg !16439
  %499 = load i64, i64* %_n867, align 8, !dbg !16439, !tbaa !2611
  %500 = load i64, i64* %_w868, align 8, !dbg !16439, !tbaa !2611
  %cmp877 = icmp ult i64 %499, %500, !dbg !16439
  br i1 %cmp877, label %cond.true879, label %cond.false880, !dbg !16439

cond.true879:                                     ; preds = %cond.end873
  %501 = load i64, i64* %_w868, align 8, !dbg !16439, !tbaa !2611
  br label %cond.end881, !dbg !16439

cond.false880:                                    ; preds = %cond.end873
  %502 = load i64, i64* %_n867, align 8, !dbg !16439, !tbaa !2611
  br label %cond.end881, !dbg !16439

cond.end881:                                      ; preds = %cond.false880, %cond.true879
  %cond882 = phi i64 [ %501, %cond.true879 ], [ %502, %cond.false880 ], !dbg !16439
  store i64 %cond882, i64* %_incr876, align 8, !dbg !16439, !tbaa !2611
  %503 = load i64, i64* %_incr876, align 8, !dbg !16442, !tbaa !2611
  %504 = load i64, i64* %maxsize.addr, align 8, !dbg !16442, !tbaa !2611
  %505 = load i64, i64* %i, align 8, !dbg !16442, !tbaa !2611
  %sub883 = sub i64 %504, %505, !dbg !16442
  %cmp884 = icmp uge i64 %503, %sub883, !dbg !16442
  br i1 %cmp884, label %if.then886, label %if.end887, !dbg !16439

if.then886:                                       ; preds = %cond.end881
  store i64 0, i64* %retval, align 8, !dbg !16442
  br label %return, !dbg !16442

if.end887:                                        ; preds = %cond.end881
  %506 = load i8*, i8** %p, align 8, !dbg !16444, !tbaa !2474
  %tobool888 = icmp ne i8* %506, null, !dbg !16444
  br i1 %tobool888, label %if.then889, label %if.end911, !dbg !16439

if.then889:                                       ; preds = %if.end887
  %507 = load i32, i32* %digits, align 4, !dbg !16446, !tbaa !2468
  %cmp890 = icmp eq i32 %507, 0, !dbg !16446
  br i1 %cmp890, label %land.lhs.true892, label %if.end909, !dbg !16446

land.lhs.true892:                                 ; preds = %if.then889
  %508 = load i64, i64* %_n867, align 8, !dbg !16446, !tbaa !2611
  %509 = load i64, i64* %_w868, align 8, !dbg !16446, !tbaa !2611
  %cmp893 = icmp ult i64 %508, %509, !dbg !16446
  br i1 %cmp893, label %if.then895, label %if.end909, !dbg !16449

if.then895:                                       ; preds = %land.lhs.true892
  call void @llvm.dbg.declare(metadata i64* %_delta896, metadata !16450, metadata !DIExpression()), !dbg !16452
  %510 = load i32, i32* %width.addr, align 4, !dbg !16452, !tbaa !2468
  %conv897 = sext i32 %510 to i64, !dbg !16452
  %511 = load i64, i64* %_n867, align 8, !dbg !16452, !tbaa !2611
  %sub898 = sub i64 %conv897, %511, !dbg !16452
  store i64 %sub898, i64* %_delta896, align 8, !dbg !16452, !tbaa !2611
  %512 = load i32, i32* %pad, align 4, !dbg !16453, !tbaa !2468
  %cmp899 = icmp eq i32 %512, 48, !dbg !16453
  br i1 %cmp899, label %if.then904, label %lor.lhs.false901, !dbg !16453

lor.lhs.false901:                                 ; preds = %if.then895
  %513 = load i32, i32* %pad, align 4, !dbg !16453, !tbaa !2468
  %cmp902 = icmp eq i32 %513, 43, !dbg !16453
  br i1 %cmp902, label %if.then904, label %if.else906, !dbg !16452

if.then904:                                       ; preds = %lor.lhs.false901, %if.then895
  %514 = load i8*, i8** %p, align 8, !dbg !16453, !tbaa !2474
  %515 = load i64, i64* %_delta896, align 8, !dbg !16453, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %514, i8 48, i64 %515, i1 false), !dbg !16453
  %516 = load i64, i64* %_delta896, align 8, !dbg !16453, !tbaa !2611
  %517 = load i8*, i8** %p, align 8, !dbg !16453, !tbaa !2474
  %add.ptr905 = getelementptr inbounds i8, i8* %517, i64 %516, !dbg !16453
  store i8* %add.ptr905, i8** %p, align 8, !dbg !16453, !tbaa !2474
  br label %if.end908, !dbg !16453

if.else906:                                       ; preds = %lor.lhs.false901
  %518 = load i8*, i8** %p, align 8, !dbg !16453, !tbaa !2474
  %519 = load i64, i64* %_delta896, align 8, !dbg !16453, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %518, i8 32, i64 %519, i1 false), !dbg !16453
  %520 = load i64, i64* %_delta896, align 8, !dbg !16453, !tbaa !2611
  %521 = load i8*, i8** %p, align 8, !dbg !16453, !tbaa !2474
  %add.ptr907 = getelementptr inbounds i8, i8* %521, i64 %520, !dbg !16453
  store i8* %add.ptr907, i8** %p, align 8, !dbg !16453, !tbaa !2474
  br label %if.end908

if.end908:                                        ; preds = %if.else906, %if.then904
  br label %if.end909, !dbg !16452

if.end909:                                        ; preds = %if.end908, %land.lhs.true892, %if.then889
  %522 = load i8*, i8** %p, align 8, !dbg !16449, !tbaa !2474
  store i8 10, i8* %522, align 1, !dbg !16449, !tbaa !2529, !ctir !144
  %523 = load i64, i64* %_n867, align 8, !dbg !16449, !tbaa !2611
  %524 = load i8*, i8** %p, align 8, !dbg !16449, !tbaa !2474
  %add.ptr910 = getelementptr inbounds i8, i8* %524, i64 %523, !dbg !16449
  store i8* %add.ptr910, i8** %p, align 8, !dbg !16449, !tbaa !2474
  br label %if.end911, !dbg !16449

if.end911:                                        ; preds = %if.end909, %if.end887
  %525 = load i64, i64* %_incr876, align 8, !dbg !16439, !tbaa !2611
  %526 = load i64, i64* %i, align 8, !dbg !16439, !tbaa !2611
  %add912 = add i64 %526, %525, !dbg !16439
  store i64 %add912, i64* %i, align 8, !dbg !16439, !tbaa !2611
  br label %do.end914, !dbg !16439

do.end914:                                        ; preds = %if.end911
  br label %sw.epilog1435, !dbg !16455

sw.bb915:                                         ; preds = %sw.epilog87
  store i8 1, i8* %to_lowcase, align 1, !dbg !16456, !tbaa !2493
  store i32 112, i32* %format_char, align 4, !dbg !16457, !tbaa !2468
  br label %sw.bb916, !dbg !16458

sw.bb916:                                         ; preds = %sw.epilog87, %sw.bb915
  %527 = load i8, i8* %change_case, align 1, !dbg !16459, !tbaa !2493
  %tobool917 = trunc i8 %527 to i1, !dbg !16459
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !16461

if.then918:                                       ; preds = %sw.bb916
  store i8 0, i8* %to_uppcase, align 1, !dbg !16462, !tbaa !2493
  store i8 1, i8* %to_lowcase, align 1, !dbg !16464, !tbaa !2493
  br label %if.end919, !dbg !16465

if.end919:                                        ; preds = %if.then918, %sw.bb916
  br label %underlying_strftime, !dbg !16466

sw.bb920:                                         ; preds = %sw.epilog87
  br label %do.body921, !dbg !16467

do.body921:                                       ; preds = %sw.bb920
  store i32 1, i32* %digits, align 4, !dbg !16468, !tbaa !2468
  store i8 0, i8* %negative_number, align 1, !dbg !16468, !tbaa !2493
  %528 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16468, !tbaa !2474
  %tm_mon922 = getelementptr inbounds %struct.tm, %struct.tm* %528, i32 0, i32 4, !dbg !16468, !ctir !1922
  %529 = load i32, i32* %tm_mon922, align 8, !dbg !16468, !tbaa !6850, !ctir !27
  %mul923 = mul nsw i32 %529, 11, !dbg !16468
  %shr924 = ashr i32 %mul923, 5, !dbg !16468
  %add925 = add nsw i32 %shr924, 1, !dbg !16468
  store i32 %add925, i32* %u_number_value, align 4, !dbg !16468, !tbaa !2468
  br label %do_signed_number, !dbg !16468

do.end927:                                        ; No predecessors!
  br label %sw.epilog1435, !dbg !16470

sw.bb928:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.362, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16471, !tbaa !2474
  br label %subformat, !dbg !16472

sw.bb929:                                         ; preds = %sw.epilog87
  br label %underlying_strftime, !dbg !16473

sw.bb930:                                         ; preds = %sw.epilog87
  %530 = load i32, i32* %modifier, align 4, !dbg !16474, !tbaa !2468
  %cmp931 = icmp eq i32 %530, 69, !dbg !16476
  br i1 %cmp931, label %if.then933, label %if.end934, !dbg !16477

if.then933:                                       ; preds = %sw.bb930
  br label %bad_format, !dbg !16478

if.end934:                                        ; preds = %sw.bb930
  br label %do.body935, !dbg !16479

do.body935:                                       ; preds = %if.end934
  store i32 2, i32* %digits, align 4, !dbg !16480, !tbaa !2468
  %531 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16480, !tbaa !2474
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %531, i32 0, i32 0, !dbg !16480, !ctir !1922
  %532 = load i32, i32* %tm_sec, align 8, !dbg !16480, !tbaa !16482, !ctir !27
  store i32 %532, i32* %number_value, align 4, !dbg !16480, !tbaa !2468
  br label %do_number, !dbg !16480

do.end937:                                        ; No predecessors!
  br label %sw.bb938, !dbg !16480

sw.bb938:                                         ; preds = %sw.epilog87, %do.end937
  call void @llvm.dbg.declare(metadata %struct.tm* %ltm, metadata !16483, metadata !DIExpression()), !dbg !16485
  call void @llvm.dbg.declare(metadata i64* %t, metadata !16486, metadata !DIExpression()), !dbg !16487
  %533 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16488, !tbaa !2474
  %534 = bitcast %struct.tm* %ltm to i8*, !dbg !16489
  %535 = bitcast %struct.tm* %533 to i8*, !dbg !16489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %534, i8* align 8 %535, i64 56, i1 false), !dbg !16489, !tbaa.struct !16490
  %536 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !16491, !tbaa !2474
  %call939 = call i64 @mktime_z(%struct.tm_zone* %536, %struct.tm* %ltm), !dbg !16492
  store i64 %call939, i64* %t, align 8, !dbg !16493, !tbaa !2611
  %arraydecay940 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16494
  %add.ptr941 = getelementptr inbounds i8, i8* %arraydecay940, i64 23, !dbg !16495
  store i8* %add.ptr941, i8** %bufp, align 8, !dbg !16496, !tbaa !2474
  %537 = load i64, i64* %t, align 8, !dbg !16497, !tbaa !2611
  %cmp942 = icmp slt i64 %537, 0, !dbg !16498
  %frombool944 = zext i1 %cmp942 to i8, !dbg !16499
  store i8 %frombool944, i8* %negative_number, align 1, !dbg !16499, !tbaa !2493
  br label %do.body945, !dbg !16500

do.body945:                                       ; preds = %do.cond959, %sw.bb938
  call void @llvm.dbg.declare(metadata i32* %d, metadata !16501, metadata !DIExpression()), !dbg !16503
  %538 = load i64, i64* %t, align 8, !dbg !16504, !tbaa !2611
  %rem946 = srem i64 %538, 10, !dbg !16505
  %conv947 = trunc i64 %rem946 to i32, !dbg !16504
  store i32 %conv947, i32* %d, align 4, !dbg !16503, !tbaa !2468
  %539 = load i64, i64* %t, align 8, !dbg !16506, !tbaa !2611
  %div948 = sdiv i64 %539, 10, !dbg !16506
  store i64 %div948, i64* %t, align 8, !dbg !16506, !tbaa !2611
  %540 = load i8, i8* %negative_number, align 1, !dbg !16507, !tbaa !2493
  %tobool949 = trunc i8 %540 to i1, !dbg !16507
  br i1 %tobool949, label %cond.true951, label %cond.false953, !dbg !16507

cond.true951:                                     ; preds = %do.body945
  %541 = load i32, i32* %d, align 4, !dbg !16508, !tbaa !2468
  %sub952 = sub nsw i32 0, %541, !dbg !16509
  br label %cond.end954, !dbg !16507

cond.false953:                                    ; preds = %do.body945
  %542 = load i32, i32* %d, align 4, !dbg !16510, !tbaa !2468
  br label %cond.end954, !dbg !16507

cond.end954:                                      ; preds = %cond.false953, %cond.true951
  %cond955 = phi i32 [ %sub952, %cond.true951 ], [ %542, %cond.false953 ], !dbg !16507
  %add956 = add nsw i32 %cond955, 48, !dbg !16511
  %conv957 = trunc i32 %add956 to i8, !dbg !16512
  %543 = load i8*, i8** %bufp, align 8, !dbg !16513, !tbaa !2474
  %incdec.ptr958 = getelementptr inbounds i8, i8* %543, i32 -1, !dbg !16513
  store i8* %incdec.ptr958, i8** %bufp, align 8, !dbg !16513, !tbaa !2474
  store i8 %conv957, i8* %incdec.ptr958, align 1, !dbg !16514, !tbaa !2529, !ctir !144
  br label %do.cond959, !dbg !16515

do.cond959:                                       ; preds = %cond.end954
  %544 = load i64, i64* %t, align 8, !dbg !16516, !tbaa !2611
  %cmp960 = icmp ne i64 %544, 0, !dbg !16517
  br i1 %cmp960, label %do.body945, label %do.end962, !dbg !16515, !llvm.loop !16518

do.end962:                                        ; preds = %do.cond959
  store i32 1, i32* %digits, align 4, !dbg !16520, !tbaa !2468
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16521, !tbaa !2493
  br label %do_number_sign_and_padding, !dbg !16522

sw.bb963:                                         ; preds = %sw.epilog87
  %545 = load i32, i32* %modifier, align 4, !dbg !16523, !tbaa !2468
  %cmp964 = icmp eq i32 %545, 79, !dbg !16525
  br i1 %cmp964, label %if.then966, label %if.end967, !dbg !16526

if.then966:                                       ; preds = %sw.bb963
  br label %bad_format, !dbg !16527

if.end967:                                        ; preds = %sw.bb963
  br label %underlying_strftime, !dbg !16528

sw.bb968:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.363, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16529, !tbaa !2474
  br label %subformat, !dbg !16530

sw.bb969:                                         ; preds = %sw.epilog87
  br label %do.body970, !dbg !16531

do.body970:                                       ; preds = %sw.bb969
  call void @llvm.dbg.declare(metadata i64* %_n971, metadata !16532, metadata !DIExpression()), !dbg !16534
  store i64 1, i64* %_n971, align 8, !dbg !16534, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w972, metadata !16535, metadata !DIExpression()), !dbg !16534
  %546 = load i32, i32* %width.addr, align 4, !dbg !16534, !tbaa !2468
  %cmp973 = icmp slt i32 %546, 0, !dbg !16534
  br i1 %cmp973, label %cond.true975, label %cond.false976, !dbg !16534

cond.true975:                                     ; preds = %do.body970
  br label %cond.end977, !dbg !16534

cond.false976:                                    ; preds = %do.body970
  %547 = load i32, i32* %width.addr, align 4, !dbg !16534, !tbaa !2468
  br label %cond.end977, !dbg !16534

cond.end977:                                      ; preds = %cond.false976, %cond.true975
  %cond978 = phi i32 [ 0, %cond.true975 ], [ %547, %cond.false976 ], !dbg !16534
  %conv979 = sext i32 %cond978 to i64, !dbg !16534
  store i64 %conv979, i64* %_w972, align 8, !dbg !16534, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr980, metadata !16536, metadata !DIExpression()), !dbg !16534
  %548 = load i64, i64* %_n971, align 8, !dbg !16534, !tbaa !2611
  %549 = load i64, i64* %_w972, align 8, !dbg !16534, !tbaa !2611
  %cmp981 = icmp ult i64 %548, %549, !dbg !16534
  br i1 %cmp981, label %cond.true983, label %cond.false984, !dbg !16534

cond.true983:                                     ; preds = %cond.end977
  %550 = load i64, i64* %_w972, align 8, !dbg !16534, !tbaa !2611
  br label %cond.end985, !dbg !16534

cond.false984:                                    ; preds = %cond.end977
  %551 = load i64, i64* %_n971, align 8, !dbg !16534, !tbaa !2611
  br label %cond.end985, !dbg !16534

cond.end985:                                      ; preds = %cond.false984, %cond.true983
  %cond986 = phi i64 [ %550, %cond.true983 ], [ %551, %cond.false984 ], !dbg !16534
  store i64 %cond986, i64* %_incr980, align 8, !dbg !16534, !tbaa !2611
  %552 = load i64, i64* %_incr980, align 8, !dbg !16537, !tbaa !2611
  %553 = load i64, i64* %maxsize.addr, align 8, !dbg !16537, !tbaa !2611
  %554 = load i64, i64* %i, align 8, !dbg !16537, !tbaa !2611
  %sub987 = sub i64 %553, %554, !dbg !16537
  %cmp988 = icmp uge i64 %552, %sub987, !dbg !16537
  br i1 %cmp988, label %if.then990, label %if.end991, !dbg !16534

if.then990:                                       ; preds = %cond.end985
  store i64 0, i64* %retval, align 8, !dbg !16537
  br label %return, !dbg !16537

if.end991:                                        ; preds = %cond.end985
  %555 = load i8*, i8** %p, align 8, !dbg !16539, !tbaa !2474
  %tobool992 = icmp ne i8* %555, null, !dbg !16539
  br i1 %tobool992, label %if.then993, label %if.end1015, !dbg !16534

if.then993:                                       ; preds = %if.end991
  %556 = load i32, i32* %digits, align 4, !dbg !16541, !tbaa !2468
  %cmp994 = icmp eq i32 %556, 0, !dbg !16541
  br i1 %cmp994, label %land.lhs.true996, label %if.end1013, !dbg !16541

land.lhs.true996:                                 ; preds = %if.then993
  %557 = load i64, i64* %_n971, align 8, !dbg !16541, !tbaa !2611
  %558 = load i64, i64* %_w972, align 8, !dbg !16541, !tbaa !2611
  %cmp997 = icmp ult i64 %557, %558, !dbg !16541
  br i1 %cmp997, label %if.then999, label %if.end1013, !dbg !16544

if.then999:                                       ; preds = %land.lhs.true996
  call void @llvm.dbg.declare(metadata i64* %_delta1000, metadata !16545, metadata !DIExpression()), !dbg !16547
  %559 = load i32, i32* %width.addr, align 4, !dbg !16547, !tbaa !2468
  %conv1001 = sext i32 %559 to i64, !dbg !16547
  %560 = load i64, i64* %_n971, align 8, !dbg !16547, !tbaa !2611
  %sub1002 = sub i64 %conv1001, %560, !dbg !16547
  store i64 %sub1002, i64* %_delta1000, align 8, !dbg !16547, !tbaa !2611
  %561 = load i32, i32* %pad, align 4, !dbg !16548, !tbaa !2468
  %cmp1003 = icmp eq i32 %561, 48, !dbg !16548
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005, !dbg !16548

lor.lhs.false1005:                                ; preds = %if.then999
  %562 = load i32, i32* %pad, align 4, !dbg !16548, !tbaa !2468
  %cmp1006 = icmp eq i32 %562, 43, !dbg !16548
  br i1 %cmp1006, label %if.then1008, label %if.else1010, !dbg !16547

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.then999
  %563 = load i8*, i8** %p, align 8, !dbg !16548, !tbaa !2474
  %564 = load i64, i64* %_delta1000, align 8, !dbg !16548, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %563, i8 48, i64 %564, i1 false), !dbg !16548
  %565 = load i64, i64* %_delta1000, align 8, !dbg !16548, !tbaa !2611
  %566 = load i8*, i8** %p, align 8, !dbg !16548, !tbaa !2474
  %add.ptr1009 = getelementptr inbounds i8, i8* %566, i64 %565, !dbg !16548
  store i8* %add.ptr1009, i8** %p, align 8, !dbg !16548, !tbaa !2474
  br label %if.end1012, !dbg !16548

if.else1010:                                      ; preds = %lor.lhs.false1005
  %567 = load i8*, i8** %p, align 8, !dbg !16548, !tbaa !2474
  %568 = load i64, i64* %_delta1000, align 8, !dbg !16548, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %567, i8 32, i64 %568, i1 false), !dbg !16548
  %569 = load i64, i64* %_delta1000, align 8, !dbg !16548, !tbaa !2611
  %570 = load i8*, i8** %p, align 8, !dbg !16548, !tbaa !2474
  %add.ptr1011 = getelementptr inbounds i8, i8* %570, i64 %569, !dbg !16548
  store i8* %add.ptr1011, i8** %p, align 8, !dbg !16548, !tbaa !2474
  br label %if.end1012

if.end1012:                                       ; preds = %if.else1010, %if.then1008
  br label %if.end1013, !dbg !16547

if.end1013:                                       ; preds = %if.end1012, %land.lhs.true996, %if.then993
  %571 = load i8*, i8** %p, align 8, !dbg !16544, !tbaa !2474
  store i8 9, i8* %571, align 1, !dbg !16544, !tbaa !2529, !ctir !144
  %572 = load i64, i64* %_n971, align 8, !dbg !16544, !tbaa !2611
  %573 = load i8*, i8** %p, align 8, !dbg !16544, !tbaa !2474
  %add.ptr1014 = getelementptr inbounds i8, i8* %573, i64 %572, !dbg !16544
  store i8* %add.ptr1014, i8** %p, align 8, !dbg !16544, !tbaa !2474
  br label %if.end1015, !dbg !16544

if.end1015:                                       ; preds = %if.end1013, %if.end991
  %574 = load i64, i64* %_incr980, align 8, !dbg !16534, !tbaa !2611
  %575 = load i64, i64* %i, align 8, !dbg !16534, !tbaa !2611
  %add1016 = add i64 %575, %574, !dbg !16534
  store i64 %add1016, i64* %i, align 8, !dbg !16534, !tbaa !2611
  br label %do.end1018, !dbg !16534

do.end1018:                                       ; preds = %if.end1015
  br label %sw.epilog1435, !dbg !16550

sw.bb1019:                                        ; preds = %sw.epilog87
  br label %do.body1020, !dbg !16551

do.body1020:                                      ; preds = %sw.bb1019
  store i32 1, i32* %digits, align 4, !dbg !16552, !tbaa !2468
  %576 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16552, !tbaa !2474
  %tm_wday = getelementptr inbounds %struct.tm, %struct.tm* %576, i32 0, i32 6, !dbg !16552, !ctir !1922
  %577 = load i32, i32* %tm_wday, align 8, !dbg !16552, !tbaa !16554, !ctir !27
  %sub1021 = sub nsw i32 %577, 1, !dbg !16552
  %add1022 = add nsw i32 %sub1021, 7, !dbg !16552
  %rem1023 = srem i32 %add1022, 7, !dbg !16552
  %add1024 = add nsw i32 %rem1023, 1, !dbg !16552
  store i32 %add1024, i32* %number_value, align 4, !dbg !16552, !tbaa !2468
  br label %do_number, !dbg !16552

do.end1026:                                       ; No predecessors!
  br label %sw.bb1027, !dbg !16552

sw.bb1027:                                        ; preds = %sw.epilog87, %do.end1026
  %578 = load i32, i32* %modifier, align 4, !dbg !16555, !tbaa !2468
  %cmp1028 = icmp eq i32 %578, 69, !dbg !16557
  br i1 %cmp1028, label %if.then1030, label %if.end1031, !dbg !16558

if.then1030:                                      ; preds = %sw.bb1027
  br label %bad_format, !dbg !16559

if.end1031:                                       ; preds = %sw.bb1027
  br label %do.body1032, !dbg !16560

do.body1032:                                      ; preds = %if.end1031
  store i32 2, i32* %digits, align 4, !dbg !16561, !tbaa !2468
  %579 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16561, !tbaa !2474
  %tm_yday1033 = getelementptr inbounds %struct.tm, %struct.tm* %579, i32 0, i32 7, !dbg !16561, !ctir !1922
  %580 = load i32, i32* %tm_yday1033, align 4, !dbg !16561, !tbaa !16385, !ctir !27
  %581 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16561, !tbaa !2474
  %tm_wday1034 = getelementptr inbounds %struct.tm, %struct.tm* %581, i32 0, i32 6, !dbg !16561, !ctir !1922
  %582 = load i32, i32* %tm_wday1034, align 8, !dbg !16561, !tbaa !16554, !ctir !27
  %sub1035 = sub nsw i32 %580, %582, !dbg !16561
  %add1036 = add nsw i32 %sub1035, 7, !dbg !16561
  %div1037 = sdiv i32 %add1036, 7, !dbg !16561
  store i32 %div1037, i32* %number_value, align 4, !dbg !16561, !tbaa !2468
  br label %do_number, !dbg !16561

do.end1039:                                       ; No predecessors!
  br label %sw.bb1040, !dbg !16561

sw.bb1040:                                        ; preds = %sw.epilog87, %sw.epilog87, %sw.epilog87, %do.end1039
  %583 = load i32, i32* %modifier, align 4, !dbg !16563, !tbaa !2468
  %cmp1041 = icmp eq i32 %583, 69, !dbg !16565
  br i1 %cmp1041, label %if.then1043, label %if.end1044, !dbg !16566

if.then1043:                                      ; preds = %sw.bb1040
  br label %bad_format, !dbg !16567

if.end1044:                                       ; preds = %sw.bb1040
  call void @llvm.dbg.declare(metadata i32* %year, metadata !16568, metadata !DIExpression()), !dbg !16570
  %584 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16571, !tbaa !2474
  %tm_year1045 = getelementptr inbounds %struct.tm, %struct.tm* %584, i32 0, i32 5, !dbg !16572, !ctir !1922
  %585 = load i32, i32* %tm_year1045, align 4, !dbg !16572, !tbaa !15978, !ctir !27
  %586 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16573, !tbaa !2474
  %tm_year1046 = getelementptr inbounds %struct.tm, %struct.tm* %586, i32 0, i32 5, !dbg !16574, !ctir !1922
  %587 = load i32, i32* %tm_year1046, align 4, !dbg !16574, !tbaa !15978, !ctir !27
  %cmp1047 = icmp slt i32 %587, 0, !dbg !16575
  %588 = zext i1 %cmp1047 to i64, !dbg !16573
  %cond1049 = select i1 %cmp1047, i32 300, i32 -100, !dbg !16573
  %add1050 = add nsw i32 %585, %cond1049, !dbg !16576
  store i32 %add1050, i32* %year, align 4, !dbg !16570, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %year_adjust, metadata !16577, metadata !DIExpression()), !dbg !16578
  store i32 0, i32* %year_adjust, align 4, !dbg !16578, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %days, metadata !16579, metadata !DIExpression()), !dbg !16580
  %589 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16581, !tbaa !2474
  %tm_yday1051 = getelementptr inbounds %struct.tm, %struct.tm* %589, i32 0, i32 7, !dbg !16582, !ctir !1922
  %590 = load i32, i32* %tm_yday1051, align 4, !dbg !16582, !tbaa !16385, !ctir !27
  %591 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16583, !tbaa !2474
  %tm_wday1052 = getelementptr inbounds %struct.tm, %struct.tm* %591, i32 0, i32 6, !dbg !16584, !ctir !1922
  %592 = load i32, i32* %tm_wday1052, align 8, !dbg !16584, !tbaa !16554, !ctir !27
  %call1053 = call i32 @iso_week_days(i32 %590, i32 %592), !dbg !16585
  store i32 %call1053, i32* %days, align 4, !dbg !16580, !tbaa !2468
  %593 = load i32, i32* %days, align 4, !dbg !16586, !tbaa !2468
  %cmp1054 = icmp slt i32 %593, 0, !dbg !16588
  br i1 %cmp1054, label %if.then1056, label %if.else1079, !dbg !16589

if.then1056:                                      ; preds = %if.end1044
  store i32 -1, i32* %year_adjust, align 4, !dbg !16590, !tbaa !2468
  %594 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16592, !tbaa !2474
  %tm_yday1057 = getelementptr inbounds %struct.tm, %struct.tm* %594, i32 0, i32 7, !dbg !16593, !ctir !1922
  %595 = load i32, i32* %tm_yday1057, align 4, !dbg !16593, !tbaa !16385, !ctir !27
  %596 = load i32, i32* %year, align 4, !dbg !16594, !tbaa !2468
  %sub1058 = sub nsw i32 %596, 1, !dbg !16594
  %rem1059 = srem i32 %sub1058, 4, !dbg !16594
  %cmp1060 = icmp eq i32 %rem1059, 0, !dbg !16594
  br i1 %cmp1060, label %land.rhs1062, label %land.end1073, !dbg !16594

land.rhs1062:                                     ; preds = %if.then1056
  %597 = load i32, i32* %year, align 4, !dbg !16594, !tbaa !2468
  %sub1063 = sub nsw i32 %597, 1, !dbg !16594
  %rem1064 = srem i32 %sub1063, 100, !dbg !16594
  %cmp1065 = icmp ne i32 %rem1064, 0, !dbg !16594
  br i1 %cmp1065, label %lor.end1072, label %lor.rhs1067, !dbg !16594

lor.rhs1067:                                      ; preds = %land.rhs1062
  %598 = load i32, i32* %year, align 4, !dbg !16594, !tbaa !2468
  %sub1068 = sub nsw i32 %598, 1, !dbg !16594
  %rem1069 = srem i32 %sub1068, 400, !dbg !16594
  %cmp1070 = icmp eq i32 %rem1069, 0, !dbg !16594
  br label %lor.end1072, !dbg !16594

lor.end1072:                                      ; preds = %lor.rhs1067, %land.rhs1062
  %599 = phi i1 [ true, %land.rhs1062 ], [ %cmp1070, %lor.rhs1067 ]
  br label %land.end1073

land.end1073:                                     ; preds = %lor.end1072, %if.then1056
  %600 = phi i1 [ false, %if.then1056 ], [ %599, %lor.end1072 ], !dbg !16595
  %land.ext1074 = zext i1 %600 to i32, !dbg !16594
  %add1075 = add nsw i32 365, %land.ext1074, !dbg !16596
  %add1076 = add nsw i32 %595, %add1075, !dbg !16597
  %601 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16598, !tbaa !2474
  %tm_wday1077 = getelementptr inbounds %struct.tm, %struct.tm* %601, i32 0, i32 6, !dbg !16599, !ctir !1922
  %602 = load i32, i32* %tm_wday1077, align 8, !dbg !16599, !tbaa !16554, !ctir !27
  %call1078 = call i32 @iso_week_days(i32 %add1076, i32 %602), !dbg !16600
  store i32 %call1078, i32* %days, align 4, !dbg !16601, !tbaa !2468
  br label %if.end1104, !dbg !16602

if.else1079:                                      ; preds = %if.end1044
  call void @llvm.dbg.declare(metadata i32* %d1080, metadata !16603, metadata !DIExpression()), !dbg !16605
  %603 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16606, !tbaa !2474
  %tm_yday1081 = getelementptr inbounds %struct.tm, %struct.tm* %603, i32 0, i32 7, !dbg !16607, !ctir !1922
  %604 = load i32, i32* %tm_yday1081, align 4, !dbg !16607, !tbaa !16385, !ctir !27
  %605 = load i32, i32* %year, align 4, !dbg !16608, !tbaa !2468
  %rem1082 = srem i32 %605, 4, !dbg !16608
  %cmp1083 = icmp eq i32 %rem1082, 0, !dbg !16608
  br i1 %cmp1083, label %land.rhs1085, label %land.end1094, !dbg !16608

land.rhs1085:                                     ; preds = %if.else1079
  %606 = load i32, i32* %year, align 4, !dbg !16608, !tbaa !2468
  %rem1086 = srem i32 %606, 100, !dbg !16608
  %cmp1087 = icmp ne i32 %rem1086, 0, !dbg !16608
  br i1 %cmp1087, label %lor.end1093, label %lor.rhs1089, !dbg !16608

lor.rhs1089:                                      ; preds = %land.rhs1085
  %607 = load i32, i32* %year, align 4, !dbg !16608, !tbaa !2468
  %rem1090 = srem i32 %607, 400, !dbg !16608
  %cmp1091 = icmp eq i32 %rem1090, 0, !dbg !16608
  br label %lor.end1093, !dbg !16608

lor.end1093:                                      ; preds = %lor.rhs1089, %land.rhs1085
  %608 = phi i1 [ true, %land.rhs1085 ], [ %cmp1091, %lor.rhs1089 ]
  br label %land.end1094

land.end1094:                                     ; preds = %lor.end1093, %if.else1079
  %609 = phi i1 [ false, %if.else1079 ], [ %608, %lor.end1093 ], !dbg !16609
  %land.ext1095 = zext i1 %609 to i32, !dbg !16608
  %add1096 = add nsw i32 365, %land.ext1095, !dbg !16610
  %sub1097 = sub nsw i32 %604, %add1096, !dbg !16611
  %610 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16612, !tbaa !2474
  %tm_wday1098 = getelementptr inbounds %struct.tm, %struct.tm* %610, i32 0, i32 6, !dbg !16613, !ctir !1922
  %611 = load i32, i32* %tm_wday1098, align 8, !dbg !16613, !tbaa !16554, !ctir !27
  %call1099 = call i32 @iso_week_days(i32 %sub1097, i32 %611), !dbg !16614
  store i32 %call1099, i32* %d1080, align 4, !dbg !16605, !tbaa !2468
  %612 = load i32, i32* %d1080, align 4, !dbg !16615, !tbaa !2468
  %cmp1100 = icmp sle i32 0, %612, !dbg !16617
  br i1 %cmp1100, label %if.then1102, label %if.end1103, !dbg !16618

if.then1102:                                      ; preds = %land.end1094
  store i32 1, i32* %year_adjust, align 4, !dbg !16619, !tbaa !2468
  %613 = load i32, i32* %d1080, align 4, !dbg !16621, !tbaa !2468
  store i32 %613, i32* %days, align 4, !dbg !16622, !tbaa !2468
  br label %if.end1103, !dbg !16623

if.end1103:                                       ; preds = %if.then1102, %land.end1094
  br label %if.end1104

if.end1104:                                       ; preds = %if.end1103, %land.end1073
  %614 = load i8*, i8** %f, align 8, !dbg !16624, !tbaa !2474
  %615 = load i8, i8* %614, align 1, !dbg !16625, !tbaa !2529, !ctir !147
  %conv1105 = sext i8 %615 to i32, !dbg !16625
  switch i32 %conv1105, label %sw.default1142 [
    i32 103, label %sw.bb1106
    i32 71, label %sw.bb1130
  ], !dbg !16626

sw.bb1106:                                        ; preds = %if.end1104
  call void @llvm.dbg.declare(metadata i32* %yy, metadata !16627, metadata !DIExpression()), !dbg !16630
  %616 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16631, !tbaa !2474
  %tm_year1107 = getelementptr inbounds %struct.tm, %struct.tm* %616, i32 0, i32 5, !dbg !16632, !ctir !1922
  %617 = load i32, i32* %tm_year1107, align 4, !dbg !16632, !tbaa !15978, !ctir !27
  %rem1108 = srem i32 %617, 100, !dbg !16633
  %618 = load i32, i32* %year_adjust, align 4, !dbg !16634, !tbaa !2468
  %add1109 = add nsw i32 %rem1108, %618, !dbg !16635
  %rem1110 = srem i32 %add1109, 100, !dbg !16636
  store i32 %rem1110, i32* %yy, align 4, !dbg !16630, !tbaa !2468
  br label %do.body1111, !dbg !16637

do.body1111:                                      ; preds = %sw.bb1106
  store i32 2, i32* %digits, align 4, !dbg !16638, !tbaa !2468
  store i8 0, i8* %negative_number, align 1, !dbg !16638, !tbaa !2493
  %619 = load i32, i32* %yy, align 4, !dbg !16638, !tbaa !2468
  %cmp1112 = icmp sle i32 0, %619, !dbg !16638
  br i1 %cmp1112, label %cond.true1114, label %cond.false1115, !dbg !16638

cond.true1114:                                    ; preds = %do.body1111
  %620 = load i32, i32* %yy, align 4, !dbg !16638, !tbaa !2468
  br label %cond.end1126, !dbg !16638

cond.false1115:                                   ; preds = %do.body1111
  %621 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16638, !tbaa !2474
  %tm_year1116 = getelementptr inbounds %struct.tm, %struct.tm* %621, i32 0, i32 5, !dbg !16638, !ctir !1922
  %622 = load i32, i32* %tm_year1116, align 4, !dbg !16638, !tbaa !15978, !ctir !27
  %623 = load i32, i32* %year_adjust, align 4, !dbg !16638, !tbaa !2468
  %sub1117 = sub nsw i32 -1900, %623, !dbg !16638
  %cmp1118 = icmp slt i32 %622, %sub1117, !dbg !16638
  br i1 %cmp1118, label %cond.true1120, label %cond.false1122, !dbg !16638

cond.true1120:                                    ; preds = %cond.false1115
  %624 = load i32, i32* %yy, align 4, !dbg !16638, !tbaa !2468
  %sub1121 = sub nsw i32 0, %624, !dbg !16638
  br label %cond.end1124, !dbg !16638

cond.false1122:                                   ; preds = %cond.false1115
  %625 = load i32, i32* %yy, align 4, !dbg !16638, !tbaa !2468
  %add1123 = add nsw i32 %625, 100, !dbg !16638
  br label %cond.end1124, !dbg !16638

cond.end1124:                                     ; preds = %cond.false1122, %cond.true1120
  %cond1125 = phi i32 [ %sub1121, %cond.true1120 ], [ %add1123, %cond.false1122 ], !dbg !16638
  br label %cond.end1126, !dbg !16638

cond.end1126:                                     ; preds = %cond.end1124, %cond.true1114
  %cond1127 = phi i32 [ %620, %cond.true1114 ], [ %cond1125, %cond.end1124 ], !dbg !16638
  store i32 %cond1127, i32* %u_number_value, align 4, !dbg !16638, !tbaa !2468
  br label %do_yearish, !dbg !16638

do.end1129:                                       ; No predecessors!
  br label %sw.bb1130, !dbg !16640

sw.bb1130:                                        ; preds = %if.end1104, %do.end1129
  br label %do.body1131, !dbg !16641

do.body1131:                                      ; preds = %sw.bb1130
  store i32 4, i32* %digits, align 4, !dbg !16642, !tbaa !2468
  %626 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16642, !tbaa !2474
  %tm_year1132 = getelementptr inbounds %struct.tm, %struct.tm* %626, i32 0, i32 5, !dbg !16642, !ctir !1922
  %627 = load i32, i32* %tm_year1132, align 4, !dbg !16642, !tbaa !15978, !ctir !27
  %628 = load i32, i32* %year_adjust, align 4, !dbg !16642, !tbaa !2468
  %sub1133 = sub nsw i32 -1900, %628, !dbg !16642
  %cmp1134 = icmp slt i32 %627, %sub1133, !dbg !16642
  %frombool1136 = zext i1 %cmp1134 to i8, !dbg !16642
  store i8 %frombool1136, i8* %negative_number, align 1, !dbg !16642, !tbaa !2493
  %629 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16642, !tbaa !2474
  %tm_year1137 = getelementptr inbounds %struct.tm, %struct.tm* %629, i32 0, i32 5, !dbg !16642, !ctir !1922
  %630 = load i32, i32* %tm_year1137, align 4, !dbg !16642, !tbaa !15978, !ctir !27
  %add1138 = add i32 %630, 1900, !dbg !16642
  %631 = load i32, i32* %year_adjust, align 4, !dbg !16642, !tbaa !2468
  %add1139 = add i32 %add1138, %631, !dbg !16642
  store i32 %add1139, i32* %u_number_value, align 4, !dbg !16642, !tbaa !2468
  br label %do_yearish, !dbg !16642

do.end1141:                                       ; No predecessors!
  br label %sw.default1142, !dbg !16642

sw.default1142:                                   ; preds = %if.end1104, %do.end1141
  br label %do.body1143, !dbg !16644

do.body1143:                                      ; preds = %sw.default1142
  store i32 2, i32* %digits, align 4, !dbg !16645, !tbaa !2468
  %632 = load i32, i32* %days, align 4, !dbg !16645, !tbaa !2468
  %div1144 = sdiv i32 %632, 7, !dbg !16645
  %add1145 = add nsw i32 %div1144, 1, !dbg !16645
  store i32 %add1145, i32* %number_value, align 4, !dbg !16645, !tbaa !2468
  br label %do_number, !dbg !16645

do.end1147:                                       ; No predecessors!
  br label %sw.epilog1148, !dbg !16647

sw.epilog1148:                                    ; preds = %do.end1147
  br label %sw.bb1149, !dbg !16648

sw.bb1149:                                        ; preds = %sw.epilog87, %sw.epilog1148
  %633 = load i32, i32* %modifier, align 4, !dbg !16649, !tbaa !2468
  %cmp1150 = icmp eq i32 %633, 69, !dbg !16651
  br i1 %cmp1150, label %if.then1152, label %if.end1153, !dbg !16652

if.then1152:                                      ; preds = %sw.bb1149
  br label %bad_format, !dbg !16653

if.end1153:                                       ; preds = %sw.bb1149
  br label %do.body1154, !dbg !16654

do.body1154:                                      ; preds = %if.end1153
  store i32 2, i32* %digits, align 4, !dbg !16655, !tbaa !2468
  %634 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16655, !tbaa !2474
  %tm_yday1155 = getelementptr inbounds %struct.tm, %struct.tm* %634, i32 0, i32 7, !dbg !16655, !ctir !1922
  %635 = load i32, i32* %tm_yday1155, align 4, !dbg !16655, !tbaa !16385, !ctir !27
  %636 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16655, !tbaa !2474
  %tm_wday1156 = getelementptr inbounds %struct.tm, %struct.tm* %636, i32 0, i32 6, !dbg !16655, !ctir !1922
  %637 = load i32, i32* %tm_wday1156, align 8, !dbg !16655, !tbaa !16554, !ctir !27
  %sub1157 = sub nsw i32 %637, 1, !dbg !16655
  %add1158 = add nsw i32 %sub1157, 7, !dbg !16655
  %rem1159 = srem i32 %add1158, 7, !dbg !16655
  %sub1160 = sub nsw i32 %635, %rem1159, !dbg !16655
  %add1161 = add nsw i32 %sub1160, 7, !dbg !16655
  %div1162 = sdiv i32 %add1161, 7, !dbg !16655
  store i32 %div1162, i32* %number_value, align 4, !dbg !16655, !tbaa !2468
  br label %do_number, !dbg !16655

do.end1164:                                       ; No predecessors!
  br label %sw.bb1165, !dbg !16655

sw.bb1165:                                        ; preds = %sw.epilog87, %do.end1164
  %638 = load i32, i32* %modifier, align 4, !dbg !16657, !tbaa !2468
  %cmp1166 = icmp eq i32 %638, 69, !dbg !16659
  br i1 %cmp1166, label %if.then1168, label %if.end1169, !dbg !16660

if.then1168:                                      ; preds = %sw.bb1165
  br label %bad_format, !dbg !16661

if.end1169:                                       ; preds = %sw.bb1165
  br label %do.body1170, !dbg !16662

do.body1170:                                      ; preds = %if.end1169
  store i32 1, i32* %digits, align 4, !dbg !16663, !tbaa !2468
  %639 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16663, !tbaa !2474
  %tm_wday1171 = getelementptr inbounds %struct.tm, %struct.tm* %639, i32 0, i32 6, !dbg !16663, !ctir !1922
  %640 = load i32, i32* %tm_wday1171, align 8, !dbg !16663, !tbaa !16554, !ctir !27
  store i32 %640, i32* %number_value, align 4, !dbg !16663, !tbaa !2468
  br label %do_number, !dbg !16663

do.end1173:                                       ; No predecessors!
  br label %sw.bb1174, !dbg !16663

sw.bb1174:                                        ; preds = %sw.epilog87, %do.end1173
  %641 = load i32, i32* %modifier, align 4, !dbg !16665, !tbaa !2468
  %cmp1175 = icmp eq i32 %641, 69, !dbg !16667
  br i1 %cmp1175, label %if.then1177, label %if.end1178, !dbg !16668

if.then1177:                                      ; preds = %sw.bb1174
  br label %underlying_strftime, !dbg !16669

if.end1178:                                       ; preds = %sw.bb1174
  %642 = load i32, i32* %modifier, align 4, !dbg !16671, !tbaa !2468
  %cmp1179 = icmp eq i32 %642, 79, !dbg !16673
  br i1 %cmp1179, label %if.then1181, label %if.end1182, !dbg !16674

if.then1181:                                      ; preds = %if.end1178
  br label %bad_format, !dbg !16675

if.end1182:                                       ; preds = %if.end1178
  br label %do.body1183, !dbg !16676

do.body1183:                                      ; preds = %if.end1182
  store i32 4, i32* %digits, align 4, !dbg !16677, !tbaa !2468
  %643 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16677, !tbaa !2474
  %tm_year1184 = getelementptr inbounds %struct.tm, %struct.tm* %643, i32 0, i32 5, !dbg !16677, !ctir !1922
  %644 = load i32, i32* %tm_year1184, align 4, !dbg !16677, !tbaa !15978, !ctir !27
  %cmp1185 = icmp slt i32 %644, -1900, !dbg !16677
  %frombool1187 = zext i1 %cmp1185 to i8, !dbg !16677
  store i8 %frombool1187, i8* %negative_number, align 1, !dbg !16677, !tbaa !2493
  %645 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16677, !tbaa !2474
  %tm_year1188 = getelementptr inbounds %struct.tm, %struct.tm* %645, i32 0, i32 5, !dbg !16677, !ctir !1922
  %646 = load i32, i32* %tm_year1188, align 4, !dbg !16677, !tbaa !15978, !ctir !27
  %add1189 = add i32 %646, 1900, !dbg !16677
  store i32 %add1189, i32* %u_number_value, align 4, !dbg !16677, !tbaa !2468
  br label %do_yearish, !dbg !16677

do.end1191:                                       ; No predecessors!
  br label %sw.bb1192, !dbg !16677

sw.bb1192:                                        ; preds = %sw.epilog87, %do.end1191
  %647 = load i32, i32* %modifier, align 4, !dbg !16679, !tbaa !2468
  %cmp1193 = icmp eq i32 %647, 69, !dbg !16681
  br i1 %cmp1193, label %if.then1195, label %if.end1196, !dbg !16682

if.then1195:                                      ; preds = %sw.bb1192
  br label %underlying_strftime, !dbg !16683

if.end1196:                                       ; preds = %sw.bb1192
  call void @llvm.dbg.declare(metadata i32* %yy1197, metadata !16685, metadata !DIExpression()), !dbg !16687
  %648 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16688, !tbaa !2474
  %tm_year1198 = getelementptr inbounds %struct.tm, %struct.tm* %648, i32 0, i32 5, !dbg !16689, !ctir !1922
  %649 = load i32, i32* %tm_year1198, align 4, !dbg !16689, !tbaa !15978, !ctir !27
  %rem1199 = srem i32 %649, 100, !dbg !16690
  store i32 %rem1199, i32* %yy1197, align 4, !dbg !16687, !tbaa !2468
  %650 = load i32, i32* %yy1197, align 4, !dbg !16691, !tbaa !2468
  %cmp1200 = icmp slt i32 %650, 0, !dbg !16693
  br i1 %cmp1200, label %if.then1202, label %if.end1212, !dbg !16694

if.then1202:                                      ; preds = %if.end1196
  %651 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16695, !tbaa !2474
  %tm_year1203 = getelementptr inbounds %struct.tm, %struct.tm* %651, i32 0, i32 5, !dbg !16696, !ctir !1922
  %652 = load i32, i32* %tm_year1203, align 4, !dbg !16696, !tbaa !15978, !ctir !27
  %cmp1204 = icmp slt i32 %652, -1900, !dbg !16697
  br i1 %cmp1204, label %cond.true1206, label %cond.false1208, !dbg !16695

cond.true1206:                                    ; preds = %if.then1202
  %653 = load i32, i32* %yy1197, align 4, !dbg !16698, !tbaa !2468
  %sub1207 = sub nsw i32 0, %653, !dbg !16699
  br label %cond.end1210, !dbg !16695

cond.false1208:                                   ; preds = %if.then1202
  %654 = load i32, i32* %yy1197, align 4, !dbg !16700, !tbaa !2468
  %add1209 = add nsw i32 %654, 100, !dbg !16701
  br label %cond.end1210, !dbg !16695

cond.end1210:                                     ; preds = %cond.false1208, %cond.true1206
  %cond1211 = phi i32 [ %sub1207, %cond.true1206 ], [ %add1209, %cond.false1208 ], !dbg !16695
  store i32 %cond1211, i32* %yy1197, align 4, !dbg !16702, !tbaa !2468
  br label %if.end1212, !dbg !16703

if.end1212:                                       ; preds = %cond.end1210, %if.end1196
  br label %do.body1213, !dbg !16704

do.body1213:                                      ; preds = %if.end1212
  store i32 2, i32* %digits, align 4, !dbg !16705, !tbaa !2468
  store i8 0, i8* %negative_number, align 1, !dbg !16705, !tbaa !2493
  %655 = load i32, i32* %yy1197, align 4, !dbg !16705, !tbaa !2468
  store i32 %655, i32* %u_number_value, align 4, !dbg !16705, !tbaa !2468
  br label %do_yearish, !dbg !16705

do.end1215:                                       ; No predecessors!
  br label %sw.bb1216, !dbg !16707

sw.bb1216:                                        ; preds = %sw.epilog87, %do.end1215
  %656 = load i8, i8* %change_case, align 1, !dbg !16708, !tbaa !2493
  %tobool1217 = trunc i8 %656 to i1, !dbg !16708
  br i1 %tobool1217, label %if.then1218, label %if.end1219, !dbg !16710

if.then1218:                                      ; preds = %sw.bb1216
  store i8 0, i8* %to_uppcase, align 1, !dbg !16711, !tbaa !2493
  store i8 1, i8* %to_lowcase, align 1, !dbg !16713, !tbaa !2493
  br label %if.end1219, !dbg !16714

if.end1219:                                       ; preds = %if.then1218, %sw.bb1216
  br label %do.body1220, !dbg !16715

do.body1220:                                      ; preds = %if.end1219
  call void @llvm.dbg.declare(metadata i64* %_n1221, metadata !16716, metadata !DIExpression()), !dbg !16718
  %657 = load i8*, i8** %zone, align 8, !dbg !16718, !tbaa !2474
  %call1222 = call i64 @strlen(i8* %657) #16, !dbg !16718
  store i64 %call1222, i64* %_n1221, align 8, !dbg !16718, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w1223, metadata !16719, metadata !DIExpression()), !dbg !16718
  %658 = load i32, i32* %width.addr, align 4, !dbg !16718, !tbaa !2468
  %cmp1224 = icmp slt i32 %658, 0, !dbg !16718
  br i1 %cmp1224, label %cond.true1226, label %cond.false1227, !dbg !16718

cond.true1226:                                    ; preds = %do.body1220
  br label %cond.end1228, !dbg !16718

cond.false1227:                                   ; preds = %do.body1220
  %659 = load i32, i32* %width.addr, align 4, !dbg !16718, !tbaa !2468
  br label %cond.end1228, !dbg !16718

cond.end1228:                                     ; preds = %cond.false1227, %cond.true1226
  %cond1229 = phi i32 [ 0, %cond.true1226 ], [ %659, %cond.false1227 ], !dbg !16718
  %conv1230 = sext i32 %cond1229 to i64, !dbg !16718
  store i64 %conv1230, i64* %_w1223, align 8, !dbg !16718, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr1231, metadata !16720, metadata !DIExpression()), !dbg !16718
  %660 = load i64, i64* %_n1221, align 8, !dbg !16718, !tbaa !2611
  %661 = load i64, i64* %_w1223, align 8, !dbg !16718, !tbaa !2611
  %cmp1232 = icmp ult i64 %660, %661, !dbg !16718
  br i1 %cmp1232, label %cond.true1234, label %cond.false1235, !dbg !16718

cond.true1234:                                    ; preds = %cond.end1228
  %662 = load i64, i64* %_w1223, align 8, !dbg !16718, !tbaa !2611
  br label %cond.end1236, !dbg !16718

cond.false1235:                                   ; preds = %cond.end1228
  %663 = load i64, i64* %_n1221, align 8, !dbg !16718, !tbaa !2611
  br label %cond.end1236, !dbg !16718

cond.end1236:                                     ; preds = %cond.false1235, %cond.true1234
  %cond1237 = phi i64 [ %662, %cond.true1234 ], [ %663, %cond.false1235 ], !dbg !16718
  store i64 %cond1237, i64* %_incr1231, align 8, !dbg !16718, !tbaa !2611
  %664 = load i64, i64* %_incr1231, align 8, !dbg !16721, !tbaa !2611
  %665 = load i64, i64* %maxsize.addr, align 8, !dbg !16721, !tbaa !2611
  %666 = load i64, i64* %i, align 8, !dbg !16721, !tbaa !2611
  %sub1238 = sub i64 %665, %666, !dbg !16721
  %cmp1239 = icmp uge i64 %664, %sub1238, !dbg !16721
  br i1 %cmp1239, label %if.then1241, label %if.end1242, !dbg !16718

if.then1241:                                      ; preds = %cond.end1236
  store i64 0, i64* %retval, align 8, !dbg !16721
  br label %return, !dbg !16721

if.end1242:                                       ; preds = %cond.end1236
  %667 = load i8*, i8** %p, align 8, !dbg !16723, !tbaa !2474
  %tobool1243 = icmp ne i8* %667, null, !dbg !16723
  br i1 %tobool1243, label %if.then1244, label %if.end1276, !dbg !16718

if.then1244:                                      ; preds = %if.end1242
  %668 = load i32, i32* %digits, align 4, !dbg !16725, !tbaa !2468
  %cmp1245 = icmp eq i32 %668, 0, !dbg !16725
  br i1 %cmp1245, label %land.lhs.true1247, label %if.end1264, !dbg !16725

land.lhs.true1247:                                ; preds = %if.then1244
  %669 = load i64, i64* %_n1221, align 8, !dbg !16725, !tbaa !2611
  %670 = load i64, i64* %_w1223, align 8, !dbg !16725, !tbaa !2611
  %cmp1248 = icmp ult i64 %669, %670, !dbg !16725
  br i1 %cmp1248, label %if.then1250, label %if.end1264, !dbg !16728

if.then1250:                                      ; preds = %land.lhs.true1247
  call void @llvm.dbg.declare(metadata i64* %_delta1251, metadata !16729, metadata !DIExpression()), !dbg !16731
  %671 = load i32, i32* %width.addr, align 4, !dbg !16731, !tbaa !2468
  %conv1252 = sext i32 %671 to i64, !dbg !16731
  %672 = load i64, i64* %_n1221, align 8, !dbg !16731, !tbaa !2611
  %sub1253 = sub i64 %conv1252, %672, !dbg !16731
  store i64 %sub1253, i64* %_delta1251, align 8, !dbg !16731, !tbaa !2611
  %673 = load i32, i32* %pad, align 4, !dbg !16732, !tbaa !2468
  %cmp1254 = icmp eq i32 %673, 48, !dbg !16732
  br i1 %cmp1254, label %if.then1259, label %lor.lhs.false1256, !dbg !16732

lor.lhs.false1256:                                ; preds = %if.then1250
  %674 = load i32, i32* %pad, align 4, !dbg !16732, !tbaa !2468
  %cmp1257 = icmp eq i32 %674, 43, !dbg !16732
  br i1 %cmp1257, label %if.then1259, label %if.else1261, !dbg !16731

if.then1259:                                      ; preds = %lor.lhs.false1256, %if.then1250
  %675 = load i8*, i8** %p, align 8, !dbg !16732, !tbaa !2474
  %676 = load i64, i64* %_delta1251, align 8, !dbg !16732, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %675, i8 48, i64 %676, i1 false), !dbg !16732
  %677 = load i64, i64* %_delta1251, align 8, !dbg !16732, !tbaa !2611
  %678 = load i8*, i8** %p, align 8, !dbg !16732, !tbaa !2474
  %add.ptr1260 = getelementptr inbounds i8, i8* %678, i64 %677, !dbg !16732
  store i8* %add.ptr1260, i8** %p, align 8, !dbg !16732, !tbaa !2474
  br label %if.end1263, !dbg !16732

if.else1261:                                      ; preds = %lor.lhs.false1256
  %679 = load i8*, i8** %p, align 8, !dbg !16732, !tbaa !2474
  %680 = load i64, i64* %_delta1251, align 8, !dbg !16732, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %679, i8 32, i64 %680, i1 false), !dbg !16732
  %681 = load i64, i64* %_delta1251, align 8, !dbg !16732, !tbaa !2611
  %682 = load i8*, i8** %p, align 8, !dbg !16732, !tbaa !2474
  %add.ptr1262 = getelementptr inbounds i8, i8* %682, i64 %681, !dbg !16732
  store i8* %add.ptr1262, i8** %p, align 8, !dbg !16732, !tbaa !2474
  br label %if.end1263

if.end1263:                                       ; preds = %if.else1261, %if.then1259
  br label %if.end1264, !dbg !16731

if.end1264:                                       ; preds = %if.end1263, %land.lhs.true1247, %if.then1244
  %683 = load i8, i8* %to_lowcase, align 1, !dbg !16734, !tbaa !2493
  %tobool1265 = trunc i8 %683 to i1, !dbg !16734
  br i1 %tobool1265, label %if.then1266, label %if.else1268, !dbg !16728

if.then1266:                                      ; preds = %if.end1264
  %684 = load i8*, i8** %p, align 8, !dbg !16734, !tbaa !2474
  %685 = load i8*, i8** %zone, align 8, !dbg !16734, !tbaa !2474
  %686 = load i64, i64* %_n1221, align 8, !dbg !16734, !tbaa !2611
  %call1267 = call i8* @memcpy_lowcase(i8* %684, i8* %685, i64 %686), !dbg !16734
  br label %if.end1274, !dbg !16734

if.else1268:                                      ; preds = %if.end1264
  %687 = load i8, i8* %to_uppcase, align 1, !dbg !16736, !tbaa !2493
  %tobool1269 = trunc i8 %687 to i1, !dbg !16736
  br i1 %tobool1269, label %if.then1270, label %if.else1272, !dbg !16734

if.then1270:                                      ; preds = %if.else1268
  %688 = load i8*, i8** %p, align 8, !dbg !16736, !tbaa !2474
  %689 = load i8*, i8** %zone, align 8, !dbg !16736, !tbaa !2474
  %690 = load i64, i64* %_n1221, align 8, !dbg !16736, !tbaa !2611
  %call1271 = call i8* @memcpy_uppcase(i8* %688, i8* %689, i64 %690), !dbg !16736
  br label %if.end1273, !dbg !16736

if.else1272:                                      ; preds = %if.else1268
  %691 = load i8*, i8** %p, align 8, !dbg !16736, !tbaa !2474
  %692 = load i8*, i8** %zone, align 8, !dbg !16736, !tbaa !2474
  %693 = load i64, i64* %_n1221, align 8, !dbg !16736, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %691, i8* align 1 %692, i64 %693, i1 false), !dbg !16736
  br label %if.end1273

if.end1273:                                       ; preds = %if.else1272, %if.then1270
  br label %if.end1274

if.end1274:                                       ; preds = %if.end1273, %if.then1266
  %694 = load i64, i64* %_n1221, align 8, !dbg !16728, !tbaa !2611
  %695 = load i8*, i8** %p, align 8, !dbg !16728, !tbaa !2474
  %add.ptr1275 = getelementptr inbounds i8, i8* %695, i64 %694, !dbg !16728
  store i8* %add.ptr1275, i8** %p, align 8, !dbg !16728, !tbaa !2474
  br label %if.end1276, !dbg !16728

if.end1276:                                       ; preds = %if.end1274, %if.end1242
  %696 = load i64, i64* %_incr1231, align 8, !dbg !16718, !tbaa !2611
  %697 = load i64, i64* %i, align 8, !dbg !16718, !tbaa !2611
  %add1277 = add i64 %697, %696, !dbg !16718
  store i64 %add1277, i64* %i, align 8, !dbg !16718, !tbaa !2611
  br label %do.end1279, !dbg !16718

do.end1279:                                       ; preds = %if.end1276
  br label %sw.epilog1435, !dbg !16738

sw.bb1280:                                        ; preds = %sw.epilog87
  store i64 1, i64* %colons, align 8, !dbg !16739, !tbaa !2611
  br label %for.cond1281, !dbg !16741

for.cond1281:                                     ; preds = %for.inc1286, %sw.bb1280
  %698 = load i8*, i8** %f, align 8, !dbg !16742, !tbaa !2474
  %699 = load i64, i64* %colons, align 8, !dbg !16744, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %698, i64 %699, !dbg !16742, !ctir !146
  %700 = load i8, i8* %arrayidx, align 1, !dbg !16742, !tbaa !2529
  %conv1282 = sext i8 %700 to i32, !dbg !16742
  %cmp1283 = icmp eq i32 %conv1282, 58, !dbg !16745
  br i1 %cmp1283, label %for.body1285, label %for.end1288, !dbg !16746

for.body1285:                                     ; preds = %for.cond1281
  br label %for.inc1286, !dbg !16747

for.inc1286:                                      ; preds = %for.body1285
  %701 = load i64, i64* %colons, align 8, !dbg !16748, !tbaa !2611
  %inc1287 = add i64 %701, 1, !dbg !16748
  store i64 %inc1287, i64* %colons, align 8, !dbg !16748, !tbaa !2611
  br label %for.cond1281, !dbg !16749, !llvm.loop !16750

for.end1288:                                      ; preds = %for.cond1281
  %702 = load i8*, i8** %f, align 8, !dbg !16752, !tbaa !2474
  %703 = load i64, i64* %colons, align 8, !dbg !16754, !tbaa !2611
  %arrayidx1289 = getelementptr inbounds i8, i8* %702, i64 %703, !dbg !16752, !ctir !146
  %704 = load i8, i8* %arrayidx1289, align 1, !dbg !16752, !tbaa !2529
  %conv1290 = sext i8 %704 to i32, !dbg !16752
  %cmp1291 = icmp ne i32 %conv1290, 122, !dbg !16755
  br i1 %cmp1291, label %if.then1293, label %if.end1294, !dbg !16756

if.then1293:                                      ; preds = %for.end1288
  br label %bad_format, !dbg !16757

if.end1294:                                       ; preds = %for.end1288
  %705 = load i64, i64* %colons, align 8, !dbg !16758, !tbaa !2611
  %706 = load i8*, i8** %f, align 8, !dbg !16759, !tbaa !2474
  %add.ptr1295 = getelementptr inbounds i8, i8* %706, i64 %705, !dbg !16759
  store i8* %add.ptr1295, i8** %f, align 8, !dbg !16759, !tbaa !2474
  br label %do_z_conversion, !dbg !16760

sw.bb1296:                                        ; preds = %sw.epilog87
  store i64 0, i64* %colons, align 8, !dbg !16761, !tbaa !2611
  br label %do_z_conversion, !dbg !16762

do_z_conversion:                                  ; preds = %sw.bb1296, %if.end1294
  call void @llvm.dbg.label(metadata !16763), !dbg !16764
  %707 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16765, !tbaa !2474
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %707, i32 0, i32 8, !dbg !16767, !ctir !1922
  %708 = load i32, i32* %tm_isdst, align 8, !dbg !16767, !tbaa !16768, !ctir !27
  %cmp1297 = icmp slt i32 %708, 0, !dbg !16769
  br i1 %cmp1297, label %if.then1299, label %if.end1300, !dbg !16770

if.then1299:                                      ; preds = %do_z_conversion
  br label %sw.epilog1435, !dbg !16771

if.end1300:                                       ; preds = %do_z_conversion
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !16772, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.declare(metadata i32* %hour_diff, metadata !16775, metadata !DIExpression()), !dbg !16776
  call void @llvm.dbg.declare(metadata i32* %min_diff, metadata !16777, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.declare(metadata i32* %sec_diff, metadata !16779, metadata !DIExpression()), !dbg !16780
  %709 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16781, !tbaa !2474
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %709, i32 0, i32 9, !dbg !16782, !ctir !1922
  %710 = load i64, i64* %tm_gmtoff, align 8, !dbg !16782, !tbaa !16783, !ctir !166
  %conv1301 = trunc i64 %710 to i32, !dbg !16781
  store i32 %conv1301, i32* %diff, align 4, !dbg !16784, !tbaa !2468
  %711 = load i32, i32* %diff, align 4, !dbg !16785, !tbaa !2468
  %cmp1302 = icmp slt i32 %711, 0, !dbg !16786
  br i1 %cmp1302, label %lor.end1313, label %lor.rhs1304, !dbg !16787

lor.rhs1304:                                      ; preds = %if.end1300
  %712 = load i32, i32* %diff, align 4, !dbg !16788, !tbaa !2468
  %cmp1305 = icmp eq i32 %712, 0, !dbg !16789
  br i1 %cmp1305, label %land.rhs1307, label %land.end1311, !dbg !16790

land.rhs1307:                                     ; preds = %lor.rhs1304
  %713 = load i8*, i8** %zone, align 8, !dbg !16791, !tbaa !2474
  %714 = load i8, i8* %713, align 1, !dbg !16792, !tbaa !2529, !ctir !147
  %conv1308 = sext i8 %714 to i32, !dbg !16792
  %cmp1309 = icmp eq i32 %conv1308, 45, !dbg !16793
  br label %land.end1311

land.end1311:                                     ; preds = %land.rhs1307, %lor.rhs1304
  %715 = phi i1 [ false, %lor.rhs1304 ], [ %cmp1309, %land.rhs1307 ], !dbg !16794
  br label %lor.end1313, !dbg !16787

lor.end1313:                                      ; preds = %land.end1311, %if.end1300
  %716 = phi i1 [ true, %if.end1300 ], [ %715, %land.end1311 ]
  %frombool1314 = zext i1 %716 to i8, !dbg !16795
  store i8 %frombool1314, i8* %negative_number, align 1, !dbg !16795, !tbaa !2493
  %717 = load i32, i32* %diff, align 4, !dbg !16796, !tbaa !2468
  %div1315 = sdiv i32 %717, 60, !dbg !16797
  %div1316 = sdiv i32 %div1315, 60, !dbg !16798
  store i32 %div1316, i32* %hour_diff, align 4, !dbg !16799, !tbaa !2468
  %718 = load i32, i32* %diff, align 4, !dbg !16800, !tbaa !2468
  %div1317 = sdiv i32 %718, 60, !dbg !16801
  %rem1318 = srem i32 %div1317, 60, !dbg !16802
  store i32 %rem1318, i32* %min_diff, align 4, !dbg !16803, !tbaa !2468
  %719 = load i32, i32* %diff, align 4, !dbg !16804, !tbaa !2468
  %rem1319 = srem i32 %719, 60, !dbg !16805
  store i32 %rem1319, i32* %sec_diff, align 4, !dbg !16806, !tbaa !2468
  %720 = load i64, i64* %colons, align 8, !dbg !16807, !tbaa !2611
  switch i64 %720, label %sw.default1352 [
    i64 0, label %sw.bb1320
    i64 1, label %sw.bb1326
    i64 2, label %sw.bb1332
    i64 3, label %sw.bb1340
  ], !dbg !16808

sw.bb1320:                                        ; preds = %lor.end1313
  br label %do.body1321, !dbg !16809

do.body1321:                                      ; preds = %sw.bb1320
  store i32 5, i32* %digits, align 4, !dbg !16811, !tbaa !2468
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16811, !tbaa !2468
  %721 = load i32, i32* %hour_diff, align 4, !dbg !16811, !tbaa !2468
  %mul1322 = mul nsw i32 %721, 100, !dbg !16811
  %722 = load i32, i32* %min_diff, align 4, !dbg !16811, !tbaa !2468
  %add1323 = add nsw i32 %mul1322, %722, !dbg !16811
  store i32 %add1323, i32* %u_number_value, align 4, !dbg !16811, !tbaa !2468
  br label %do_tz_offset, !dbg !16811

do.end1325:                                       ; No predecessors!
  br label %sw.bb1326, !dbg !16811

sw.bb1326:                                        ; preds = %lor.end1313, %do.end1325
  br label %tz_hh_mm, !dbg !16811

tz_hh_mm:                                         ; preds = %if.then1347, %sw.bb1326
  call void @llvm.dbg.label(metadata !16813), !dbg !16814
  br label %do.body1327, !dbg !16815

do.body1327:                                      ; preds = %tz_hh_mm
  store i32 6, i32* %digits, align 4, !dbg !16816, !tbaa !2468
  store i32 4, i32* %tz_colon_mask, align 4, !dbg !16816, !tbaa !2468
  %723 = load i32, i32* %hour_diff, align 4, !dbg !16816, !tbaa !2468
  %mul1328 = mul nsw i32 %723, 100, !dbg !16816
  %724 = load i32, i32* %min_diff, align 4, !dbg !16816, !tbaa !2468
  %add1329 = add nsw i32 %mul1328, %724, !dbg !16816
  store i32 %add1329, i32* %u_number_value, align 4, !dbg !16816, !tbaa !2468
  br label %do_tz_offset, !dbg !16816

do.end1331:                                       ; No predecessors!
  br label %sw.bb1332, !dbg !16816

sw.bb1332:                                        ; preds = %lor.end1313, %do.end1331
  br label %tz_hh_mm_ss, !dbg !16816

tz_hh_mm_ss:                                      ; preds = %if.then1343, %sw.bb1332
  call void @llvm.dbg.label(metadata !16818), !dbg !16819
  br label %do.body1333, !dbg !16820

do.body1333:                                      ; preds = %tz_hh_mm_ss
  store i32 9, i32* %digits, align 4, !dbg !16821, !tbaa !2468
  store i32 20, i32* %tz_colon_mask, align 4, !dbg !16821, !tbaa !2468
  %725 = load i32, i32* %hour_diff, align 4, !dbg !16821, !tbaa !2468
  %mul1334 = mul nsw i32 %725, 10000, !dbg !16821
  %726 = load i32, i32* %min_diff, align 4, !dbg !16821, !tbaa !2468
  %mul1335 = mul nsw i32 %726, 100, !dbg !16821
  %add1336 = add nsw i32 %mul1334, %mul1335, !dbg !16821
  %727 = load i32, i32* %sec_diff, align 4, !dbg !16821, !tbaa !2468
  %add1337 = add nsw i32 %add1336, %727, !dbg !16821
  store i32 %add1337, i32* %u_number_value, align 4, !dbg !16821, !tbaa !2468
  br label %do_tz_offset, !dbg !16821

do.end1339:                                       ; No predecessors!
  br label %sw.bb1340, !dbg !16821

sw.bb1340:                                        ; preds = %lor.end1313, %do.end1339
  %728 = load i32, i32* %sec_diff, align 4, !dbg !16823, !tbaa !2468
  %cmp1341 = icmp ne i32 %728, 0, !dbg !16825
  br i1 %cmp1341, label %if.then1343, label %if.end1344, !dbg !16826

if.then1343:                                      ; preds = %sw.bb1340
  br label %tz_hh_mm_ss, !dbg !16827

if.end1344:                                       ; preds = %sw.bb1340
  %729 = load i32, i32* %min_diff, align 4, !dbg !16828, !tbaa !2468
  %cmp1345 = icmp ne i32 %729, 0, !dbg !16830
  br i1 %cmp1345, label %if.then1347, label %if.end1348, !dbg !16831

if.then1347:                                      ; preds = %if.end1344
  br label %tz_hh_mm, !dbg !16832

if.end1348:                                       ; preds = %if.end1344
  br label %do.body1349, !dbg !16833

do.body1349:                                      ; preds = %if.end1348
  store i32 3, i32* %digits, align 4, !dbg !16834, !tbaa !2468
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16834, !tbaa !2468
  %730 = load i32, i32* %hour_diff, align 4, !dbg !16834, !tbaa !2468
  store i32 %730, i32* %u_number_value, align 4, !dbg !16834, !tbaa !2468
  br label %do_tz_offset, !dbg !16834

do.end1351:                                       ; No predecessors!
  br label %sw.default1352, !dbg !16834

sw.default1352:                                   ; preds = %lor.end1313, %do.end1351
  br label %bad_format, !dbg !16836

sw.bb1353:                                        ; preds = %sw.epilog87
  %731 = load i8*, i8** %f, align 8, !dbg !16837, !tbaa !2474
  %incdec.ptr1354 = getelementptr inbounds i8, i8* %731, i32 -1, !dbg !16837
  store i8* %incdec.ptr1354, i8** %f, align 8, !dbg !16837, !tbaa !2474
  br label %sw.default1355, !dbg !16838

sw.default1355:                                   ; preds = %sw.epilog87, %sw.bb1353
  br label %bad_format, !dbg !16838

bad_format:                                       ; preds = %sw.default1355, %sw.default1352, %if.then1293, %if.then1181, %if.then1168, %if.then1152, %if.then1043, %if.then1030, %if.then966, %if.then933, %if.then850, %if.then837, %if.then829, %if.then816, %if.then808, %if.then799, %if.then791, %if.then782, %if.then764, %if.then357, %if.then349, %if.then344, %if.then339, %if.then178, %if.then170, %if.then165, %if.then154, %if.then146, %if.then92
  call void @llvm.dbg.label(metadata !16839), !dbg !16840
  call void @llvm.dbg.declare(metadata i32* %flen, metadata !16841, metadata !DIExpression()), !dbg !16843
  store i32 1, i32* %flen, align 4, !dbg !16844, !tbaa !2468
  br label %for.cond1356, !dbg !16846

for.cond1356:                                     ; preds = %for.inc1363, %bad_format
  %732 = load i8*, i8** %f, align 8, !dbg !16847, !tbaa !2474
  %733 = load i32, i32* %flen, align 4, !dbg !16849, !tbaa !2468
  %sub1357 = sub nsw i32 1, %733, !dbg !16850
  %idxprom = sext i32 %sub1357 to i64, !dbg !16847
  %arrayidx1358 = getelementptr inbounds i8, i8* %732, i64 %idxprom, !dbg !16847, !ctir !146
  %734 = load i8, i8* %arrayidx1358, align 1, !dbg !16847, !tbaa !2529
  %conv1359 = sext i8 %734 to i32, !dbg !16847
  %cmp1360 = icmp ne i32 %conv1359, 37, !dbg !16851
  br i1 %cmp1360, label %for.body1362, label %for.end1365, !dbg !16852

for.body1362:                                     ; preds = %for.cond1356
  br label %for.inc1363, !dbg !16853

for.inc1363:                                      ; preds = %for.body1362
  %735 = load i32, i32* %flen, align 4, !dbg !16854, !tbaa !2468
  %inc1364 = add nsw i32 %735, 1, !dbg !16854
  store i32 %inc1364, i32* %flen, align 4, !dbg !16854, !tbaa !2468
  br label %for.cond1356, !dbg !16855, !llvm.loop !16856

for.end1365:                                      ; preds = %for.cond1356
  br label %do.body1366, !dbg !16858

do.body1366:                                      ; preds = %for.end1365
  call void @llvm.dbg.declare(metadata i64* %_n1367, metadata !16859, metadata !DIExpression()), !dbg !16861
  %736 = load i32, i32* %flen, align 4, !dbg !16861, !tbaa !2468
  %conv1368 = sext i32 %736 to i64, !dbg !16861
  store i64 %conv1368, i64* %_n1367, align 8, !dbg !16861, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_w1369, metadata !16862, metadata !DIExpression()), !dbg !16861
  %737 = load i32, i32* %width.addr, align 4, !dbg !16861, !tbaa !2468
  %cmp1370 = icmp slt i32 %737, 0, !dbg !16861
  br i1 %cmp1370, label %cond.true1372, label %cond.false1373, !dbg !16861

cond.true1372:                                    ; preds = %do.body1366
  br label %cond.end1374, !dbg !16861

cond.false1373:                                   ; preds = %do.body1366
  %738 = load i32, i32* %width.addr, align 4, !dbg !16861, !tbaa !2468
  br label %cond.end1374, !dbg !16861

cond.end1374:                                     ; preds = %cond.false1373, %cond.true1372
  %cond1375 = phi i32 [ 0, %cond.true1372 ], [ %738, %cond.false1373 ], !dbg !16861
  %conv1376 = sext i32 %cond1375 to i64, !dbg !16861
  store i64 %conv1376, i64* %_w1369, align 8, !dbg !16861, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %_incr1377, metadata !16863, metadata !DIExpression()), !dbg !16861
  %739 = load i64, i64* %_n1367, align 8, !dbg !16861, !tbaa !2611
  %740 = load i64, i64* %_w1369, align 8, !dbg !16861, !tbaa !2611
  %cmp1378 = icmp ult i64 %739, %740, !dbg !16861
  br i1 %cmp1378, label %cond.true1380, label %cond.false1381, !dbg !16861

cond.true1380:                                    ; preds = %cond.end1374
  %741 = load i64, i64* %_w1369, align 8, !dbg !16861, !tbaa !2611
  br label %cond.end1382, !dbg !16861

cond.false1381:                                   ; preds = %cond.end1374
  %742 = load i64, i64* %_n1367, align 8, !dbg !16861, !tbaa !2611
  br label %cond.end1382, !dbg !16861

cond.end1382:                                     ; preds = %cond.false1381, %cond.true1380
  %cond1383 = phi i64 [ %741, %cond.true1380 ], [ %742, %cond.false1381 ], !dbg !16861
  store i64 %cond1383, i64* %_incr1377, align 8, !dbg !16861, !tbaa !2611
  %743 = load i64, i64* %_incr1377, align 8, !dbg !16864, !tbaa !2611
  %744 = load i64, i64* %maxsize.addr, align 8, !dbg !16864, !tbaa !2611
  %745 = load i64, i64* %i, align 8, !dbg !16864, !tbaa !2611
  %sub1384 = sub i64 %744, %745, !dbg !16864
  %cmp1385 = icmp uge i64 %743, %sub1384, !dbg !16864
  br i1 %cmp1385, label %if.then1387, label %if.end1388, !dbg !16861

if.then1387:                                      ; preds = %cond.end1382
  store i64 0, i64* %retval, align 8, !dbg !16864
  br label %return, !dbg !16864

if.end1388:                                       ; preds = %cond.end1382
  %746 = load i8*, i8** %p, align 8, !dbg !16866, !tbaa !2474
  %tobool1389 = icmp ne i8* %746, null, !dbg !16866
  br i1 %tobool1389, label %if.then1390, label %if.end1431, !dbg !16861

if.then1390:                                      ; preds = %if.end1388
  %747 = load i32, i32* %digits, align 4, !dbg !16868, !tbaa !2468
  %cmp1391 = icmp eq i32 %747, 0, !dbg !16868
  br i1 %cmp1391, label %land.lhs.true1393, label %if.end1410, !dbg !16868

land.lhs.true1393:                                ; preds = %if.then1390
  %748 = load i64, i64* %_n1367, align 8, !dbg !16868, !tbaa !2611
  %749 = load i64, i64* %_w1369, align 8, !dbg !16868, !tbaa !2611
  %cmp1394 = icmp ult i64 %748, %749, !dbg !16868
  br i1 %cmp1394, label %if.then1396, label %if.end1410, !dbg !16871

if.then1396:                                      ; preds = %land.lhs.true1393
  call void @llvm.dbg.declare(metadata i64* %_delta1397, metadata !16872, metadata !DIExpression()), !dbg !16874
  %750 = load i32, i32* %width.addr, align 4, !dbg !16874, !tbaa !2468
  %conv1398 = sext i32 %750 to i64, !dbg !16874
  %751 = load i64, i64* %_n1367, align 8, !dbg !16874, !tbaa !2611
  %sub1399 = sub i64 %conv1398, %751, !dbg !16874
  store i64 %sub1399, i64* %_delta1397, align 8, !dbg !16874, !tbaa !2611
  %752 = load i32, i32* %pad, align 4, !dbg !16875, !tbaa !2468
  %cmp1400 = icmp eq i32 %752, 48, !dbg !16875
  br i1 %cmp1400, label %if.then1405, label %lor.lhs.false1402, !dbg !16875

lor.lhs.false1402:                                ; preds = %if.then1396
  %753 = load i32, i32* %pad, align 4, !dbg !16875, !tbaa !2468
  %cmp1403 = icmp eq i32 %753, 43, !dbg !16875
  br i1 %cmp1403, label %if.then1405, label %if.else1407, !dbg !16874

if.then1405:                                      ; preds = %lor.lhs.false1402, %if.then1396
  %754 = load i8*, i8** %p, align 8, !dbg !16875, !tbaa !2474
  %755 = load i64, i64* %_delta1397, align 8, !dbg !16875, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %754, i8 48, i64 %755, i1 false), !dbg !16875
  %756 = load i64, i64* %_delta1397, align 8, !dbg !16875, !tbaa !2611
  %757 = load i8*, i8** %p, align 8, !dbg !16875, !tbaa !2474
  %add.ptr1406 = getelementptr inbounds i8, i8* %757, i64 %756, !dbg !16875
  store i8* %add.ptr1406, i8** %p, align 8, !dbg !16875, !tbaa !2474
  br label %if.end1409, !dbg !16875

if.else1407:                                      ; preds = %lor.lhs.false1402
  %758 = load i8*, i8** %p, align 8, !dbg !16875, !tbaa !2474
  %759 = load i64, i64* %_delta1397, align 8, !dbg !16875, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %758, i8 32, i64 %759, i1 false), !dbg !16875
  %760 = load i64, i64* %_delta1397, align 8, !dbg !16875, !tbaa !2611
  %761 = load i8*, i8** %p, align 8, !dbg !16875, !tbaa !2474
  %add.ptr1408 = getelementptr inbounds i8, i8* %761, i64 %760, !dbg !16875
  store i8* %add.ptr1408, i8** %p, align 8, !dbg !16875, !tbaa !2474
  br label %if.end1409

if.end1409:                                       ; preds = %if.else1407, %if.then1405
  br label %if.end1410, !dbg !16874

if.end1410:                                       ; preds = %if.end1409, %land.lhs.true1393, %if.then1390
  %762 = load i8, i8* %to_lowcase, align 1, !dbg !16877, !tbaa !2493
  %tobool1411 = trunc i8 %762 to i1, !dbg !16877
  br i1 %tobool1411, label %if.then1412, label %if.else1417, !dbg !16871

if.then1412:                                      ; preds = %if.end1410
  %763 = load i8*, i8** %p, align 8, !dbg !16877, !tbaa !2474
  %764 = load i8*, i8** %f, align 8, !dbg !16877, !tbaa !2474
  %765 = load i32, i32* %flen, align 4, !dbg !16877, !tbaa !2468
  %sub1413 = sub nsw i32 1, %765, !dbg !16877
  %idxprom1414 = sext i32 %sub1413 to i64, !dbg !16877
  %arrayidx1415 = getelementptr inbounds i8, i8* %764, i64 %idxprom1414, !dbg !16877, !ctir !146
  %766 = load i64, i64* %_n1367, align 8, !dbg !16877, !tbaa !2611
  %call1416 = call i8* @memcpy_lowcase(i8* %763, i8* %arrayidx1415, i64 %766), !dbg !16877
  br label %if.end1429, !dbg !16877

if.else1417:                                      ; preds = %if.end1410
  %767 = load i8, i8* %to_uppcase, align 1, !dbg !16879, !tbaa !2493
  %tobool1418 = trunc i8 %767 to i1, !dbg !16879
  br i1 %tobool1418, label %if.then1419, label %if.else1424, !dbg !16877

if.then1419:                                      ; preds = %if.else1417
  %768 = load i8*, i8** %p, align 8, !dbg !16879, !tbaa !2474
  %769 = load i8*, i8** %f, align 8, !dbg !16879, !tbaa !2474
  %770 = load i32, i32* %flen, align 4, !dbg !16879, !tbaa !2468
  %sub1420 = sub nsw i32 1, %770, !dbg !16879
  %idxprom1421 = sext i32 %sub1420 to i64, !dbg !16879
  %arrayidx1422 = getelementptr inbounds i8, i8* %769, i64 %idxprom1421, !dbg !16879, !ctir !146
  %771 = load i64, i64* %_n1367, align 8, !dbg !16879, !tbaa !2611
  %call1423 = call i8* @memcpy_uppcase(i8* %768, i8* %arrayidx1422, i64 %771), !dbg !16879
  br label %if.end1428, !dbg !16879

if.else1424:                                      ; preds = %if.else1417
  %772 = load i8*, i8** %p, align 8, !dbg !16879, !tbaa !2474
  %773 = load i8*, i8** %f, align 8, !dbg !16879, !tbaa !2474
  %774 = load i32, i32* %flen, align 4, !dbg !16879, !tbaa !2468
  %sub1425 = sub nsw i32 1, %774, !dbg !16879
  %idxprom1426 = sext i32 %sub1425 to i64, !dbg !16879
  %arrayidx1427 = getelementptr inbounds i8, i8* %773, i64 %idxprom1426, !dbg !16879, !ctir !146
  %775 = load i64, i64* %_n1367, align 8, !dbg !16879, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %772, i8* align 1 %arrayidx1427, i64 %775, i1 false), !dbg !16879
  br label %if.end1428

if.end1428:                                       ; preds = %if.else1424, %if.then1419
  br label %if.end1429

if.end1429:                                       ; preds = %if.end1428, %if.then1412
  %776 = load i64, i64* %_n1367, align 8, !dbg !16871, !tbaa !2611
  %777 = load i8*, i8** %p, align 8, !dbg !16871, !tbaa !2474
  %add.ptr1430 = getelementptr inbounds i8, i8* %777, i64 %776, !dbg !16871
  store i8* %add.ptr1430, i8** %p, align 8, !dbg !16871, !tbaa !2474
  br label %if.end1431, !dbg !16871

if.end1431:                                       ; preds = %if.end1429, %if.end1388
  %778 = load i64, i64* %_incr1377, align 8, !dbg !16861, !tbaa !2611
  %779 = load i64, i64* %i, align 8, !dbg !16861, !tbaa !2611
  %add1432 = add i64 %779, %778, !dbg !16861
  store i64 %add1432, i64* %i, align 8, !dbg !16861, !tbaa !2611
  br label %do.end1434, !dbg !16861

do.end1434:                                       ; preds = %if.end1431
  br label %sw.epilog1435, !dbg !16881

sw.epilog1435:                                    ; preds = %do.end1434, %if.then1299, %do.end1279, %do.end1018, %do.end927, %do.end914, %do.end760, %if.end316, %do.end232, %do.end142
  br label %for.inc1436, !dbg !16882

for.inc1436:                                      ; preds = %sw.epilog1435, %do.end
  store i32 -1, i32* %width.addr, align 4, !dbg !16883, !tbaa !2468
  %780 = load i8*, i8** %f, align 8, !dbg !16884, !tbaa !2474
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %780, i32 1, !dbg !16884
  store i8* %incdec.ptr1437, i8** %f, align 8, !dbg !16884, !tbaa !2474
  br label %for.cond, !dbg !16885, !llvm.loop !16886

for.end1438:                                      ; preds = %for.cond
  %781 = load i8*, i8** %p, align 8, !dbg !16888, !tbaa !2474
  %tobool1439 = icmp ne i8* %781, null, !dbg !16888
  br i1 %tobool1439, label %land.lhs.true1440, label %if.end1444, !dbg !16890

land.lhs.true1440:                                ; preds = %for.end1438
  %782 = load i64, i64* %maxsize.addr, align 8, !dbg !16891, !tbaa !2611
  %cmp1441 = icmp ne i64 %782, 0, !dbg !16892
  br i1 %cmp1441, label %if.then1443, label %if.end1444, !dbg !16893

if.then1443:                                      ; preds = %land.lhs.true1440
  %783 = load i8*, i8** %p, align 8, !dbg !16894, !tbaa !2474
  store i8 0, i8* %783, align 1, !dbg !16895, !tbaa !2529, !ctir !144
  br label %if.end1444, !dbg !16896

if.end1444:                                       ; preds = %if.then1443, %land.lhs.true1440, %for.end1438
  %784 = load i64, i64* %i, align 8, !dbg !16897, !tbaa !2611
  store i64 %784, i64* %retval, align 8, !dbg !16898
  br label %return, !dbg !16898

return:                                           ; preds = %if.end1444, %if.then1387, %if.then1241, %if.then990, %if.then886, %if.then722, %if.then665, %if.then603, %if.then579, %if.then544, %if.then506, %if.then456, %if.then271, %if.then201, %if.then114, %if.then26
  %785 = load i64, i64* %retval, align 8, !dbg !16899
  ret i64 %785, !dbg !16899
}

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_lowcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16900 !ctir !1884 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !143
  %src.addr = alloca i8*, align 8, !ctir !146
  %len.addr = alloca i64, align 8, !ctir !149
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16901, metadata !DIExpression()), !dbg !16902
  store i8* %src, i8** %src.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16903, metadata !DIExpression()), !dbg !16904
  store i64 %len, i64* %len.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16905, metadata !DIExpression()), !dbg !16906
  br label %while.cond, !dbg !16907

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16908, !tbaa !2611
  %dec = add i64 %0, -1, !dbg !16908
  store i64 %dec, i64* %len.addr, align 8, !dbg !16908, !tbaa !2611
  %cmp = icmp ugt i64 %0, 0, !dbg !16909
  br i1 %cmp, label %while.body, label %while.end, !dbg !16907

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16910, !tbaa !2474
  %2 = load i64, i64* %len.addr, align 8, !dbg !16910, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16910, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16910, !tbaa !2529
  %conv = zext i8 %3 to i32, !dbg !16910
  %call = call i32 @tolower(i32 %conv) #16, !dbg !16910
  %conv1 = trunc i32 %call to i8, !dbg !16910
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16911, !tbaa !2474
  %5 = load i64, i64* %len.addr, align 8, !dbg !16912, !tbaa !2611
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16911, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16913, !tbaa !2529
  br label %while.cond, !dbg !16907, !llvm.loop !16914

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16915, !tbaa !2474
  ret i8* %6, !dbg !16916
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_uppcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16917 !ctir !1884 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !143
  %src.addr = alloca i8*, align 8, !ctir !146
  %len.addr = alloca i64, align 8, !ctir !149
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16918, metadata !DIExpression()), !dbg !16919
  store i8* %src, i8** %src.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16920, metadata !DIExpression()), !dbg !16921
  store i64 %len, i64* %len.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16922, metadata !DIExpression()), !dbg !16923
  br label %while.cond, !dbg !16924

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16925, !tbaa !2611
  %dec = add i64 %0, -1, !dbg !16925
  store i64 %dec, i64* %len.addr, align 8, !dbg !16925, !tbaa !2611
  %cmp = icmp ugt i64 %0, 0, !dbg !16926
  br i1 %cmp, label %while.body, label %while.end, !dbg !16924

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16927, !tbaa !2474
  %2 = load i64, i64* %len.addr, align 8, !dbg !16927, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16927, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16927, !tbaa !2529
  %conv = zext i8 %3 to i32, !dbg !16927
  %call = call i32 @toupper(i32 %conv) #16, !dbg !16927
  %conv1 = trunc i32 %call to i8, !dbg !16927
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16928, !tbaa !2474
  %5 = load i64, i64* %len.addr, align 8, !dbg !16929, !tbaa !2611
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16928, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16930, !tbaa !2529
  br label %while.cond, !dbg !16924, !llvm.loop !16931

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16932, !tbaa !2474
  ret i8* %6, !dbg !16933
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iso_week_days(i32 %yday, i32 %wday) #0 !dbg !16934 !ctir !1953 {
entry:
  %yday.addr = alloca i32, align 4, !ctir !27
  %wday.addr = alloca i32, align 4, !ctir !27
  %big_enough_multiple_of_7 = alloca i32, align 4, !ctir !27
  store i32 %yday, i32* %yday.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %yday.addr, metadata !16935, metadata !DIExpression()), !dbg !16936
  store i32 %wday, i32* %wday.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %wday.addr, metadata !16937, metadata !DIExpression()), !dbg !16938
  call void @llvm.dbg.declare(metadata i32* %big_enough_multiple_of_7, metadata !16939, metadata !DIExpression()), !dbg !16940
  store i32 378, i32* %big_enough_multiple_of_7, align 4, !dbg !16940, !tbaa !2468
  %0 = load i32, i32* %yday.addr, align 4, !dbg !16941, !tbaa !2468
  %1 = load i32, i32* %yday.addr, align 4, !dbg !16942, !tbaa !2468
  %2 = load i32, i32* %wday.addr, align 4, !dbg !16943, !tbaa !2468
  %sub = sub nsw i32 %1, %2, !dbg !16944
  %add = add nsw i32 %sub, 4, !dbg !16945
  %3 = load i32, i32* %big_enough_multiple_of_7, align 4, !dbg !16946, !tbaa !2468
  %add1 = add nsw i32 %add, %3, !dbg !16947
  %rem = srem i32 %add1, 7, !dbg !16948
  %sub2 = sub nsw i32 %0, %rem, !dbg !16949
  %add3 = add nsw i32 %sub2, 4, !dbg !16950
  %sub4 = sub nsw i32 %add3, 1, !dbg !16951
  ret i32 %sub4, !dbg !16952
}

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #5

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #0 !dbg !16953 !ctir !558 {
entry:
  %argv0.addr = alloca i8*, align 8, !ctir !146
  %slash = alloca i8*, align 8, !ctir !146
  %base = alloca i8*, align 8, !ctir !146
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !16954, metadata !DIExpression()), !dbg !16955
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !16956, metadata !DIExpression()), !dbg !16957
  call void @llvm.dbg.declare(metadata i8** %base, metadata !16958, metadata !DIExpression()), !dbg !16959
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !16960, !tbaa !2474
  %cmp = icmp eq i8* %0, null, !dbg !16962
  br i1 %cmp, label %if.then, label %if.end, !dbg !16963

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16964, !tbaa !2474
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.368, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !16966
  call void @abort() #15, !dbg !16967
  unreachable, !dbg !16967

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !16968, !tbaa !2474
  %call1 = call i8* @strrchr(i8* %2, i32 47) #16, !dbg !16969
  store i8* %call1, i8** %slash, align 8, !dbg !16970, !tbaa !2474
  %3 = load i8*, i8** %slash, align 8, !dbg !16971, !tbaa !2474
  %cmp2 = icmp ne i8* %3, null, !dbg !16972
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !16971

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !16973, !tbaa !2474
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !16974
  br label %cond.end, !dbg !16971

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !16975, !tbaa !2474
  br label %cond.end, !dbg !16971

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !16971
  store i8* %cond, i8** %base, align 8, !dbg !16976, !tbaa !2474
  %6 = load i8*, i8** %base, align 8, !dbg !16977, !tbaa !2474
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !16979, !tbaa !2474
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !16980
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !16980
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16980
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !16981
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !16982

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !16983, !tbaa !2474
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !16984
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.369, i64 0, i64 0), i64 7) #16, !dbg !16985
  %cmp6 = icmp eq i32 %call5, 0, !dbg !16986
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !16987

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !16988, !tbaa !2474
  store i8* %9, i8** %argv0.addr, align 8, !dbg !16990, !tbaa !2474
  %10 = load i8*, i8** %base, align 8, !dbg !16991, !tbaa !2474
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.370, i64 0, i64 0), i64 3) #16, !dbg !16993
  %cmp9 = icmp eq i32 %call8, 0, !dbg !16994
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !16995

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !16996, !tbaa !2474
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !16998
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !16999, !tbaa !2474
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !17000, !tbaa !2474
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !17001, !tbaa !2474
  br label %if.end12, !dbg !17002

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !17003

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !17004, !tbaa !2474
  store i8* %13, i8** @program_name, align 8, !dbg !17005, !tbaa !2474
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !17006, !tbaa !2474
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !17007, !tbaa !2474
  ret void, !dbg !17008
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #0 !dbg !17009 !ctir !1444 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1446
  %e = alloca i32, align 4, !ctir !27
  %p = alloca %struct.quoting_options*, align 8, !ctir !1446
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17010, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17012, metadata !DIExpression()), !dbg !17013
  %call = call i32* @__errno_location() #17, !dbg !17014
  %0 = load i32, i32* %call, align 4, !dbg !17014, !tbaa !2468, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !17013, !tbaa !2468
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17015, metadata !DIExpression()), !dbg !17016
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17017, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17017
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17017

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17018, !tbaa !2474
  br label %cond.end, !dbg !17017

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17017

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17017
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !17017
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !17019
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !17019
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !17016, !tbaa !2474
  %5 = load i32, i32* %e, align 4, !dbg !17020, !tbaa !2468
  %call2 = call i32* @__errno_location() #17, !dbg !17021
  store i32 %5, i32* %call2, align 4, !dbg !17022, !tbaa !2468, !ctir !27
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17023, !tbaa !2474
  ret %struct.quoting_options* %6, !dbg !17024
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #0 !dbg !17025 !ctir !1456 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1458
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17026, metadata !DIExpression()), !dbg !17027
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17028, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17028
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17028

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17029, !tbaa !2474
  br label %cond.end, !dbg !17028

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17028

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17028
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !17030, !ctir !1459
  %2 = load i32, i32* %style, align 8, !dbg !17030, !tbaa !17031, !ctir !95
  ret i32 %2, !dbg !17033
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #0 !dbg !17034 !ctir !1460 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1446
  %s.addr = alloca i32, align 4, !ctir !95
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17035, metadata !DIExpression()), !dbg !17036
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !17037, metadata !DIExpression()), !dbg !17038
  %0 = load i32, i32* %s.addr, align 4, !dbg !17039, !tbaa !2529
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17040, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17040
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17040

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17041, !tbaa !2474
  br label %cond.end, !dbg !17040

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17040
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !17042, !ctir !1447
  store i32 %0, i32* %style, align 8, !dbg !17043, !tbaa !17031, !ctir !95
  ret void, !dbg !17044
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #0 !dbg !17045 !ctir !1462 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1446
  %c.addr = alloca i8, align 1, !ctir !144
  %i.addr = alloca i32, align 4, !ctir !27
  %uc = alloca i8, align 1, !ctir !579
  %p = alloca i32*, align 8, !ctir !1464
  %shift = alloca i32, align 4, !ctir !27
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17046, metadata !DIExpression()), !dbg !17047
  store i8 %c, i8* %c.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !17048, metadata !DIExpression()), !dbg !17049
  store i32 %i, i32* %i.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17050, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !17052, metadata !DIExpression()), !dbg !17053
  %0 = load i8, i8* %c.addr, align 1, !dbg !17054, !tbaa !2529
  store i8 %0, i8* %uc, align 1, !dbg !17053, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32** %p, metadata !17055, metadata !DIExpression()), !dbg !17056
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17057, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17057
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17057

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17058, !tbaa !2474
  br label %cond.end, !dbg !17057

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17057

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17057
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !17059, !ctir !1447
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17060
  %3 = load i8, i8* %uc, align 1, !dbg !17061, !tbaa !2529
  %conv = zext i8 %3 to i64, !dbg !17061
  %div = udiv i64 %conv, 32, !dbg !17062
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !17063
  store i32* %add.ptr, i32** %p, align 8, !dbg !17056, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !17064, metadata !DIExpression()), !dbg !17065
  %4 = load i8, i8* %uc, align 1, !dbg !17066, !tbaa !2529
  %conv1 = zext i8 %4 to i64, !dbg !17066
  %rem = urem i64 %conv1, 32, !dbg !17067
  %conv2 = trunc i64 %rem to i32, !dbg !17066
  store i32 %conv2, i32* %shift, align 4, !dbg !17065, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17068, metadata !DIExpression()), !dbg !17069
  %5 = load i32*, i32** %p, align 8, !dbg !17070, !tbaa !2474
  %6 = load i32, i32* %5, align 4, !dbg !17071, !tbaa !2468, !ctir !6
  %7 = load i32, i32* %shift, align 4, !dbg !17072, !tbaa !2468
  %shr = lshr i32 %6, %7, !dbg !17073
  %and = and i32 %shr, 1, !dbg !17074
  store i32 %and, i32* %r, align 4, !dbg !17069, !tbaa !2468
  %8 = load i32, i32* %i.addr, align 4, !dbg !17075, !tbaa !2468
  %and3 = and i32 %8, 1, !dbg !17076
  %9 = load i32, i32* %r, align 4, !dbg !17077, !tbaa !2468
  %xor = xor i32 %and3, %9, !dbg !17078
  %10 = load i32, i32* %shift, align 4, !dbg !17079, !tbaa !2468
  %shl = shl i32 %xor, %10, !dbg !17080
  %11 = load i32*, i32** %p, align 8, !dbg !17081, !tbaa !2474
  %12 = load i32, i32* %11, align 4, !dbg !17082, !tbaa !2468, !ctir !6
  %xor4 = xor i32 %12, %shl, !dbg !17082
  store i32 %xor4, i32* %11, align 4, !dbg !17082, !tbaa !2468, !ctir !6
  %13 = load i32, i32* %r, align 4, !dbg !17083, !tbaa !2468
  ret i32 %13, !dbg !17084
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #0 !dbg !17085 !ctir !1465 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1446
  %i.addr = alloca i32, align 4, !ctir !27
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17086, metadata !DIExpression()), !dbg !17087
  store i32 %i, i32* %i.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17088, metadata !DIExpression()), !dbg !17089
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17090, metadata !DIExpression()), !dbg !17091
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17092, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17092
  br i1 %tobool, label %if.end, label %if.then, !dbg !17094

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !17095, !tbaa !2474
  br label %if.end, !dbg !17096

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17097, !tbaa !2474
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !17098, !ctir !1447
  %2 = load i32, i32* %flags, align 4, !dbg !17098, !tbaa !17099, !ctir !27
  store i32 %2, i32* %r, align 4, !dbg !17100, !tbaa !2468
  %3 = load i32, i32* %i.addr, align 4, !dbg !17101, !tbaa !2468
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17102, !tbaa !2474
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !17103, !ctir !1447
  store i32 %3, i32* %flags1, align 4, !dbg !17104, !tbaa !17099, !ctir !27
  %5 = load i32, i32* %r, align 4, !dbg !17105, !tbaa !2468
  ret i32 %5, !dbg !17106
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #0 !dbg !17107 !ctir !1467 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1446
  %left_quote.addr = alloca i8*, align 8, !ctir !146
  %right_quote.addr = alloca i8*, align 8, !ctir !146
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17108, metadata !DIExpression()), !dbg !17109
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !17110, metadata !DIExpression()), !dbg !17111
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !17112, metadata !DIExpression()), !dbg !17113
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17114, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17114
  br i1 %tobool, label %if.end, label %if.then, !dbg !17116

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !17117, !tbaa !2474
  br label %if.end, !dbg !17118

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17119, !tbaa !2474
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !17120, !ctir !1447
  store i32 10, i32* %style, align 8, !dbg !17121, !tbaa !17031, !ctir !95
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !17122, !tbaa !2474
  %tobool1 = icmp ne i8* %2, null, !dbg !17122
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !17124

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !17125, !tbaa !2474
  %tobool2 = icmp ne i8* %3, null, !dbg !17125
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !17126

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #15, !dbg !17127
  unreachable, !dbg !17127

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !17128, !tbaa !2474
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17129, !tbaa !2474
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !17130, !ctir !1447
  store i8* %4, i8** %left_quote5, align 8, !dbg !17131, !tbaa !17132, !ctir !146
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !17133, !tbaa !2474
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17134, !tbaa !2474
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !17135, !ctir !1447
  store i8* %6, i8** %right_quote6, align 8, !dbg !17136, !tbaa !17137, !ctir !146
  ret void, !dbg !17138
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !17139 !ctir !1469 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !143
  %buffersize.addr = alloca i64, align 8, !ctir !149
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1458
  %p = alloca %struct.quoting_options*, align 8, !ctir !1458
  %e = alloca i32, align 4, !ctir !27
  %r = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !17140, metadata !DIExpression()), !dbg !17141
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !17142, metadata !DIExpression()), !dbg !17143
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17144, metadata !DIExpression()), !dbg !17145
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17146, metadata !DIExpression()), !dbg !17147
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17148, metadata !DIExpression()), !dbg !17149
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17150, metadata !DIExpression()), !dbg !17151
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17152, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17152
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17152

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17153, !tbaa !2474
  br label %cond.end, !dbg !17152

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17152

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17152
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !17151, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17154, metadata !DIExpression()), !dbg !17155
  %call = call i32* @__errno_location() #17, !dbg !17156
  %2 = load i32, i32* %call, align 4, !dbg !17156, !tbaa !2468, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !17155, !tbaa !2468
  call void @llvm.dbg.declare(metadata i64* %r, metadata !17157, metadata !DIExpression()), !dbg !17158
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !17159, !tbaa !2474
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !17160, !tbaa !2611
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !17161, !tbaa !2474
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !17162, !tbaa !2611
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17163, !tbaa !2474
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !17164, !ctir !1459
  %8 = load i32, i32* %style, align 8, !dbg !17164, !tbaa !17031, !ctir !95
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17165, !tbaa !2474
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !17166, !ctir !1459
  %10 = load i32, i32* %flags, align 4, !dbg !17166, !tbaa !17099, !ctir !27
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17167, !tbaa !2474
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !17168, !ctir !1459
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17167
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17169, !tbaa !2474
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !17170, !ctir !1459
  %13 = load i8*, i8** %left_quote, align 8, !dbg !17170, !tbaa !17132, !ctir !146
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17171, !tbaa !2474
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !17172, !ctir !1459
  %15 = load i8*, i8** %right_quote, align 8, !dbg !17172, !tbaa !17137, !ctir !146
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !17173
  store i64 %call1, i64* %r, align 8, !dbg !17158, !tbaa !2611
  %16 = load i32, i32* %e, align 4, !dbg !17174, !tbaa !2468
  %call2 = call i32* @__errno_location() #17, !dbg !17175
  store i32 %16, i32* %call2, align 4, !dbg !17176, !tbaa !2468, !ctir !27
  %17 = load i64, i64* %r, align 8, !dbg !17177, !tbaa !2611
  ret i64 %17, !dbg !17178
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #0 !dbg !17179 !ctir !1512 {
entry:
  %retval = alloca i64, align 8, !ctir !149
  %buffer.addr = alloca i8*, align 8, !ctir !143
  %buffersize.addr = alloca i64, align 8, !ctir !149
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %quoting_style.addr = alloca i32, align 4, !ctir !95
  %flags.addr = alloca i32, align 4, !ctir !27
  %quote_these_too.addr = alloca i32*, align 8, !ctir !1514
  %left_quote.addr = alloca i8*, align 8, !ctir !146
  %right_quote.addr = alloca i8*, align 8, !ctir !146
  %i = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %orig_buffersize = alloca i64, align 8, !ctir !149
  %quote_string = alloca i8*, align 8, !ctir !146
  %quote_string_len = alloca i64, align 8, !ctir !149
  %backslash_escapes = alloca i8, align 1, !ctir !141
  %unibyte_locale = alloca i8, align 1, !ctir !141
  %elide_outer_quotes = alloca i8, align 1, !ctir !141
  %pending_shell_escape_end = alloca i8, align 1, !ctir !141
  %encountered_single_quote = alloca i8, align 1, !ctir !141
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %c = alloca i8, align 1, !ctir !579
  %esc = alloca i8, align 1, !ctir !579
  %is_right_quote = alloca i8, align 1, !ctir !141
  %escaping = alloca i8, align 1, !ctir !141
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %m = alloca i64, align 8, !ctir !149
  %printable = alloca i8, align 1, !ctir !141
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1516
  %w = alloca i32, align 4, !ctir !641
  %bytes = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ilim = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !17180, metadata !DIExpression()), !dbg !17181
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !17182, metadata !DIExpression()), !dbg !17183
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17184, metadata !DIExpression()), !dbg !17185
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17186, metadata !DIExpression()), !dbg !17187
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !17188, metadata !DIExpression()), !dbg !17189
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17190, metadata !DIExpression()), !dbg !17191
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !17192, metadata !DIExpression()), !dbg !17193
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !17194, metadata !DIExpression()), !dbg !17195
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !17196, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17198, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17200, metadata !DIExpression()), !dbg !17201
  store i64 0, i64* %len, align 8, !dbg !17201, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !17202, metadata !DIExpression()), !dbg !17203
  store i64 0, i64* %orig_buffersize, align 8, !dbg !17203, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !17204, metadata !DIExpression()), !dbg !17205
  store i8* null, i8** %quote_string, align 8, !dbg !17205, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !17206, metadata !DIExpression()), !dbg !17207
  store i64 0, i64* %quote_string_len, align 8, !dbg !17207, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !17208, metadata !DIExpression()), !dbg !17209
  store i8 0, i8* %backslash_escapes, align 1, !dbg !17209, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !17210, metadata !DIExpression()), !dbg !17211
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !17212
  %cmp = icmp eq i64 %call, 1, !dbg !17213
  %frombool = zext i1 %cmp to i8, !dbg !17211
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !17211, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !17214, metadata !DIExpression()), !dbg !17215
  %0 = load i32, i32* %flags.addr, align 4, !dbg !17216, !tbaa !2468
  %and = and i32 %0, 2, !dbg !17217
  %cmp1 = icmp ne i32 %and, 0, !dbg !17218
  %frombool2 = zext i1 %cmp1 to i8, !dbg !17215
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !17215, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17220, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !17221, metadata !DIExpression()), !dbg !17222
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !17222, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !17223, metadata !DIExpression()), !dbg !17224
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17224, !tbaa !2493
  br label %process_input, !dbg !17225

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !17226), !dbg !17227
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !17228, !tbaa !2529
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !17229

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !17230, !tbaa !2529
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17232, !tbaa !2493
  br label %sw.bb3, !dbg !17233

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17234, !tbaa !2493
  %tobool = trunc i8 %2 to i1, !dbg !17234
  br i1 %tobool, label %if.end6, label %if.then, !dbg !17236

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !17237

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !17238, !tbaa !2611
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !17238, !tbaa !2611
  %cmp4 = icmp ult i64 %3, %4, !dbg !17238
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !17241

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !17238, !tbaa !2474
  %6 = load i64, i64* %len, align 8, !dbg !17238, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !17238, !ctir !143
  store i8 34, i8* %arrayidx, align 1, !dbg !17238, !tbaa !2529
  br label %if.end, !dbg !17238

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !17241, !tbaa !2611
  %inc = add i64 %7, 1, !dbg !17241
  store i64 %inc, i64* %len, align 8, !dbg !17241, !tbaa !2611
  br label %do.end, !dbg !17241

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !17241

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17242, !tbaa !2493
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.395, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17243, !tbaa !2474
  store i64 1, i64* %quote_string_len, align 8, !dbg !17244, !tbaa !2611
  br label %sw.epilog, !dbg !17245

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17246, !tbaa !2493
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17247, !tbaa !2493
  br label %sw.epilog, !dbg !17248

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !17249, !tbaa !2529
  %cmp9 = icmp ne i32 %8, 10, !dbg !17252
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !17253

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !17254, !tbaa !2529
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.396, i64 0, i64 0), i32 %9), !dbg !17256
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !17257, !tbaa !2474
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !17258, !tbaa !2529
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.397, i64 0, i64 0), i32 %10), !dbg !17259
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !17260, !tbaa !2474
  br label %if.end13, !dbg !17261

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17262, !tbaa !2493
  %tobool14 = trunc i8 %11 to i1, !dbg !17262
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !17264

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !17265, !tbaa !2474
  store i8* %12, i8** %quote_string, align 8, !dbg !17267, !tbaa !2474
  br label %for.cond, !dbg !17268

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !17269, !tbaa !2474
  %14 = load i8, i8* %13, align 1, !dbg !17271, !tbaa !2529, !ctir !147
  %tobool16 = icmp ne i8 %14, 0, !dbg !17272
  br i1 %tobool16, label %for.body, label %for.end, !dbg !17272

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !17273

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !17274, !tbaa !2611
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !17274, !tbaa !2611
  %cmp18 = icmp ult i64 %15, %16, !dbg !17274
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !17277

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !17274, !tbaa !2474
  %18 = load i8, i8* %17, align 1, !dbg !17274, !tbaa !2529, !ctir !147
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !17274, !tbaa !2474
  %20 = load i64, i64* %len, align 8, !dbg !17274, !tbaa !2611
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !17274, !ctir !143
  store i8 %18, i8* %arrayidx20, align 1, !dbg !17274, !tbaa !2529
  br label %if.end21, !dbg !17274

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !17277, !tbaa !2611
  %inc22 = add i64 %21, 1, !dbg !17277
  store i64 %inc22, i64* %len, align 8, !dbg !17277, !tbaa !2611
  br label %do.end23, !dbg !17277

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !17277

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !17278, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !17278
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !17278, !tbaa !2474
  br label %for.cond, !dbg !17279, !llvm.loop !17280

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !17281

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17282, !tbaa !2493
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !17283, !tbaa !2474
  store i8* %23, i8** %quote_string, align 8, !dbg !17284, !tbaa !2474
  %24 = load i8*, i8** %quote_string, align 8, !dbg !17285, !tbaa !2474
  %call25 = call i64 @strlen(i8* %24) #16, !dbg !17286
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !17287, !tbaa !2611
  br label %sw.epilog, !dbg !17288

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17289, !tbaa !2493
  br label %sw.bb27, !dbg !17290

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17291, !tbaa !2493
  br label %sw.bb28, !dbg !17292

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17293, !tbaa !2493
  %tobool29 = trunc i8 %25 to i1, !dbg !17293
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !17295

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17296, !tbaa !2493
  br label %if.end31, !dbg !17297

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !17298

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !17299, !tbaa !2529
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17300, !tbaa !2493
  %tobool33 = trunc i8 %26 to i1, !dbg !17300
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !17302

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !17303

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !17304, !tbaa !2611
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !17304, !tbaa !2611
  %cmp36 = icmp ult i64 %27, %28, !dbg !17304
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !17307

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !17304, !tbaa !2474
  %30 = load i64, i64* %len, align 8, !dbg !17304, !tbaa !2611
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !17304, !ctir !143
  store i8 39, i8* %arrayidx38, align 1, !dbg !17304, !tbaa !2529
  br label %if.end39, !dbg !17304

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !17307, !tbaa !2611
  %inc40 = add i64 %31, 1, !dbg !17307
  store i64 %inc40, i64* %len, align 8, !dbg !17307, !tbaa !2611
  br label %do.end41, !dbg !17307

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !17307

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.397, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17308, !tbaa !2474
  store i64 1, i64* %quote_string_len, align 8, !dbg !17309, !tbaa !2611
  br label %sw.epilog, !dbg !17310

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17311, !tbaa !2493
  br label %sw.epilog, !dbg !17312

sw.default:                                       ; preds = %process_input
  call void @abort() #15, !dbg !17313
  unreachable, !dbg !17313

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !17314, !tbaa !2611
  br label %for.cond44, !dbg !17316

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !17317, !tbaa !2611
  %cmp45 = icmp eq i64 %32, -1, !dbg !17319
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !17317

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !17320, !tbaa !2474
  %34 = load i64, i64* %i, align 8, !dbg !17321, !tbaa !2611
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !17320, !ctir !146
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !17320, !tbaa !2529
  %conv = sext i8 %35 to i32, !dbg !17320
  %cmp47 = icmp eq i32 %conv, 0, !dbg !17322
  %conv48 = zext i1 %cmp47 to i32, !dbg !17322
  br label %cond.end, !dbg !17317

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !17323, !tbaa !2611
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !17324, !tbaa !2611
  %cmp49 = icmp eq i64 %36, %37, !dbg !17325
  %conv50 = zext i1 %cmp49 to i32, !dbg !17325
  br label %cond.end, !dbg !17317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !17317
  %tobool51 = icmp ne i32 %cond, 0, !dbg !17326
  %lnot = xor i1 %tobool51, true, !dbg !17326
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !17327

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !17328, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !17331, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !17333, metadata !DIExpression()), !dbg !17334
  store i8 0, i8* %is_right_quote, align 1, !dbg !17334, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !17335, metadata !DIExpression()), !dbg !17336
  store i8 0, i8* %escaping, align 1, !dbg !17336, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !17337, metadata !DIExpression()), !dbg !17338
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !17338, !tbaa !2493
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !17339, !tbaa !2493
  %tobool53 = trunc i8 %38 to i1, !dbg !17339
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !17341

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !17342, !tbaa !2529
  %cmp55 = icmp ne i32 %39, 2, !dbg !17343
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !17344

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !17345, !tbaa !2611
  %tobool58 = icmp ne i64 %40, 0, !dbg !17345
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !17346

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !17347, !tbaa !2611
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !17348, !tbaa !2611
  %add = add i64 %41, %42, !dbg !17349
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !17350, !tbaa !2611
  %cmp60 = icmp eq i64 %43, -1, !dbg !17351
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !17352

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !17353, !tbaa !2611
  %cmp63 = icmp ult i64 1, %44, !dbg !17354
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !17350

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !17355, !tbaa !2474
  %call66 = call i64 @strlen(i8* %45) #16, !dbg !17356
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !17357, !tbaa !2611
  br label %cond.end68, !dbg !17350

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !17358, !tbaa !2611
  br label %cond.end68, !dbg !17350

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !17350
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !17359
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !17360

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !17361, !tbaa !2474
  %48 = load i64, i64* %i, align 8, !dbg !17362, !tbaa !2611
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !17363
  %49 = load i8*, i8** %quote_string, align 8, !dbg !17364, !tbaa !2474
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !17365, !tbaa !2611
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #16, !dbg !17366
  %cmp74 = icmp eq i32 %call73, 0, !dbg !17367
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !17368

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17369, !tbaa !2493
  %tobool77 = trunc i8 %51 to i1, !dbg !17369
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !17372

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !17373

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !17374, !tbaa !2493
  br label %if.end80, !dbg !17375

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !17376, !tbaa !2474
  %53 = load i64, i64* %i, align 8, !dbg !17377, !tbaa !2611
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !17376, !ctir !146
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !17376, !tbaa !2529
  store i8 %54, i8* %c, align 1, !dbg !17378, !tbaa !2529
  %55 = load i8, i8* %c, align 1, !dbg !17379, !tbaa !2529
  %conv82 = zext i8 %55 to i32, !dbg !17379
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !17380

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !17381, !tbaa !2493
  %tobool84 = trunc i8 %56 to i1, !dbg !17381
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !17384

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !17385

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17387, !tbaa !2493
  %tobool87 = trunc i8 %57 to i1, !dbg !17387
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !17390

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !17387

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !17390, !tbaa !2493
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !17391, !tbaa !2529
  %cmp90 = icmp eq i32 %58, 2, !dbg !17391
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !17391

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17391, !tbaa !2493
  %tobool93 = trunc i8 %59 to i1, !dbg !17391
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !17390

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !17393

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !17395, !tbaa !2611
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !17395, !tbaa !2611
  %cmp96 = icmp ult i64 %60, %61, !dbg !17395
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !17398

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !17395, !tbaa !2474
  %63 = load i64, i64* %len, align 8, !dbg !17395, !tbaa !2611
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !17395, !ctir !143
  store i8 39, i8* %arrayidx99, align 1, !dbg !17395, !tbaa !2529
  br label %if.end100, !dbg !17395

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !17398, !tbaa !2611
  %inc101 = add i64 %64, 1, !dbg !17398
  store i64 %inc101, i64* %len, align 8, !dbg !17398, !tbaa !2611
  br label %do.end102, !dbg !17398

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !17393

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !17399, !tbaa !2611
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !17399, !tbaa !2611
  %cmp104 = icmp ult i64 %65, %66, !dbg !17399
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !17402

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !17399, !tbaa !2474
  %68 = load i64, i64* %len, align 8, !dbg !17399, !tbaa !2611
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !17399, !ctir !143
  store i8 36, i8* %arrayidx107, align 1, !dbg !17399, !tbaa !2529
  br label %if.end108, !dbg !17399

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !17402, !tbaa !2611
  %inc109 = add i64 %69, 1, !dbg !17402
  store i64 %inc109, i64* %len, align 8, !dbg !17402, !tbaa !2611
  br label %do.end110, !dbg !17402

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !17393

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !17403, !tbaa !2611
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !17403, !tbaa !2611
  %cmp112 = icmp ult i64 %70, %71, !dbg !17403
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !17406

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !17403, !tbaa !2474
  %73 = load i64, i64* %len, align 8, !dbg !17403, !tbaa !2611
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !17403, !ctir !143
  store i8 39, i8* %arrayidx115, align 1, !dbg !17403, !tbaa !2529
  br label %if.end116, !dbg !17403

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !17406, !tbaa !2611
  %inc117 = add i64 %74, 1, !dbg !17406
  store i64 %inc117, i64* %len, align 8, !dbg !17406, !tbaa !2611
  br label %do.end118, !dbg !17406

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17393, !tbaa !2493
  br label %if.end119, !dbg !17393

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !17390

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !17407, !tbaa !2611
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !17407, !tbaa !2611
  %cmp121 = icmp ult i64 %75, %76, !dbg !17407
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !17410

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !17407, !tbaa !2474
  %78 = load i64, i64* %len, align 8, !dbg !17407, !tbaa !2611
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !17407, !ctir !143
  store i8 92, i8* %arrayidx124, align 1, !dbg !17407, !tbaa !2529
  br label %if.end125, !dbg !17407

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !17410, !tbaa !2611
  %inc126 = add i64 %79, 1, !dbg !17410
  store i64 %inc126, i64* %len, align 8, !dbg !17410, !tbaa !2611
  br label %do.end127, !dbg !17410

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !17390

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !17411, !tbaa !2529
  %cmp129 = icmp ne i32 %80, 2, !dbg !17413
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !17414

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !17415, !tbaa !2611
  %add132 = add i64 %81, 1, !dbg !17416
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !17417, !tbaa !2611
  %cmp133 = icmp ult i64 %add132, %82, !dbg !17418
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !17419

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !17420, !tbaa !2474
  %84 = load i64, i64* %i, align 8, !dbg !17421, !tbaa !2611
  %add136 = add i64 %84, 1, !dbg !17422
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !17420, !ctir !146
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !17420, !tbaa !2529
  %conv138 = sext i8 %85 to i32, !dbg !17420
  %cmp139 = icmp sle i32 48, %conv138, !dbg !17423
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !17424

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !17425, !tbaa !2474
  %87 = load i64, i64* %i, align 8, !dbg !17426, !tbaa !2611
  %add142 = add i64 %87, 1, !dbg !17427
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !17425, !ctir !146
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !17425, !tbaa !2529
  %conv144 = sext i8 %88 to i32, !dbg !17425
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !17428
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !17429

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !17430

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !17432, !tbaa !2611
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !17432, !tbaa !2611
  %cmp149 = icmp ult i64 %89, %90, !dbg !17432
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !17435

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !17432, !tbaa !2474
  %92 = load i64, i64* %len, align 8, !dbg !17432, !tbaa !2611
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !17432, !ctir !143
  store i8 48, i8* %arrayidx152, align 1, !dbg !17432, !tbaa !2529
  br label %if.end153, !dbg !17432

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !17435, !tbaa !2611
  %inc154 = add i64 %93, 1, !dbg !17435
  store i64 %inc154, i64* %len, align 8, !dbg !17435, !tbaa !2611
  br label %do.end155, !dbg !17435

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !17436

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !17437, !tbaa !2611
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !17437, !tbaa !2611
  %cmp157 = icmp ult i64 %94, %95, !dbg !17437
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !17440

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !17437, !tbaa !2474
  %97 = load i64, i64* %len, align 8, !dbg !17437, !tbaa !2611
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !17437, !ctir !143
  store i8 48, i8* %arrayidx160, align 1, !dbg !17437, !tbaa !2529
  br label %if.end161, !dbg !17437

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !17440, !tbaa !2611
  %inc162 = add i64 %98, 1, !dbg !17440
  store i64 %inc162, i64* %len, align 8, !dbg !17440, !tbaa !2611
  br label %do.end163, !dbg !17440

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !17441

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !17442, !tbaa !2529
  br label %if.end169, !dbg !17443

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !17444, !tbaa !2468
  %and165 = and i32 %99, 1, !dbg !17446
  %tobool166 = icmp ne i32 %and165, 0, !dbg !17446
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !17447

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !17448

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !17449

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !17450, !tbaa !2529
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !17451

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17452, !tbaa !2493
  %tobool172 = trunc i8 %101 to i1, !dbg !17452
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !17455

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !17456

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !17457

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !17458, !tbaa !2468
  %and176 = and i32 %102, 4, !dbg !17460
  %tobool177 = icmp ne i32 %and176, 0, !dbg !17460
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !17461

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !17462, !tbaa !2611
  %add179 = add i64 %103, 2, !dbg !17463
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !17464, !tbaa !2611
  %cmp180 = icmp ult i64 %add179, %104, !dbg !17465
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !17466

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !17467, !tbaa !2474
  %106 = load i64, i64* %i, align 8, !dbg !17468, !tbaa !2611
  %add183 = add i64 %106, 1, !dbg !17469
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !17467, !ctir !146
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !17467, !tbaa !2529
  %conv185 = sext i8 %107 to i32, !dbg !17467
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !17470
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !17471

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !17472, !tbaa !2474
  %109 = load i64, i64* %i, align 8, !dbg !17473, !tbaa !2611
  %add189 = add i64 %109, 2, !dbg !17474
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !17472, !ctir !146
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !17472, !tbaa !2529
  %conv191 = sext i8 %110 to i32, !dbg !17472
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !17475

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17476, !tbaa !2493
  %tobool193 = trunc i8 %111 to i1, !dbg !17476
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !17479

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !17480

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !17481, !tbaa !2474
  %113 = load i64, i64* %i, align 8, !dbg !17482, !tbaa !2611
  %add196 = add i64 %113, 2, !dbg !17483
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !17481, !ctir !146
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !17481, !tbaa !2529
  store i8 %114, i8* %c, align 1, !dbg !17484, !tbaa !2529
  %115 = load i64, i64* %i, align 8, !dbg !17485, !tbaa !2611
  %add198 = add i64 %115, 2, !dbg !17485
  store i64 %add198, i64* %i, align 8, !dbg !17485, !tbaa !2611
  br label %do.body199, !dbg !17486

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !17487, !tbaa !2611
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !17487, !tbaa !2611
  %cmp200 = icmp ult i64 %116, %117, !dbg !17487
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !17490

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !17487, !tbaa !2474
  %119 = load i64, i64* %len, align 8, !dbg !17487, !tbaa !2611
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !17487, !ctir !143
  store i8 63, i8* %arrayidx203, align 1, !dbg !17487, !tbaa !2529
  br label %if.end204, !dbg !17487

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !17490, !tbaa !2611
  %inc205 = add i64 %120, 1, !dbg !17490
  store i64 %inc205, i64* %len, align 8, !dbg !17490, !tbaa !2611
  br label %do.end206, !dbg !17490

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !17491

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !17492, !tbaa !2611
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !17492, !tbaa !2611
  %cmp208 = icmp ult i64 %121, %122, !dbg !17492
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !17495

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !17492, !tbaa !2474
  %124 = load i64, i64* %len, align 8, !dbg !17492, !tbaa !2611
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !17492, !ctir !143
  store i8 34, i8* %arrayidx211, align 1, !dbg !17492, !tbaa !2529
  br label %if.end212, !dbg !17492

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !17495, !tbaa !2611
  %inc213 = add i64 %125, 1, !dbg !17495
  store i64 %inc213, i64* %len, align 8, !dbg !17495, !tbaa !2611
  br label %do.end214, !dbg !17495

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !17496

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !17497, !tbaa !2611
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !17497, !tbaa !2611
  %cmp216 = icmp ult i64 %126, %127, !dbg !17497
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !17500

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !17497, !tbaa !2474
  %129 = load i64, i64* %len, align 8, !dbg !17497, !tbaa !2611
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !17497, !ctir !143
  store i8 34, i8* %arrayidx219, align 1, !dbg !17497, !tbaa !2529
  br label %if.end220, !dbg !17497

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !17500, !tbaa !2611
  %inc221 = add i64 %130, 1, !dbg !17500
  store i64 %inc221, i64* %len, align 8, !dbg !17500, !tbaa !2611
  br label %do.end222, !dbg !17500

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !17501

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !17502, !tbaa !2611
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !17502, !tbaa !2611
  %cmp224 = icmp ult i64 %131, %132, !dbg !17502
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !17505

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !17502, !tbaa !2474
  %134 = load i64, i64* %len, align 8, !dbg !17502, !tbaa !2611
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !17502, !ctir !143
  store i8 63, i8* %arrayidx227, align 1, !dbg !17502, !tbaa !2529
  br label %if.end228, !dbg !17502

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !17505, !tbaa !2611
  %inc229 = add i64 %135, 1, !dbg !17505
  store i64 %inc229, i64* %len, align 8, !dbg !17505, !tbaa !2611
  br label %do.end230, !dbg !17505

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !17506

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !17507

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !17508

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !17509

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !17510

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !17511

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !17512, !tbaa !2529
  br label %c_escape, !dbg !17513

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !17514, !tbaa !2529
  br label %c_escape, !dbg !17515

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !17516, !tbaa !2529
  br label %c_escape, !dbg !17517

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !17518, !tbaa !2529
  br label %c_and_shell_escape, !dbg !17519

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !17520, !tbaa !2529
  br label %c_and_shell_escape, !dbg !17521

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !17522, !tbaa !2529
  br label %c_and_shell_escape, !dbg !17523

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !17524, !tbaa !2529
  br label %c_escape, !dbg !17525

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !17526, !tbaa !2529
  store i8 %136, i8* %esc, align 1, !dbg !17527, !tbaa !2529
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !17528, !tbaa !2529
  %cmp244 = icmp eq i32 %137, 2, !dbg !17530
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !17531

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17532, !tbaa !2493
  %tobool247 = trunc i8 %138 to i1, !dbg !17532
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !17535

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !17536

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !17537

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !17538, !tbaa !2493
  %tobool251 = trunc i8 %139 to i1, !dbg !17538
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !17540

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17541, !tbaa !2493
  %tobool254 = trunc i8 %140 to i1, !dbg !17541
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !17542

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !17543, !tbaa !2611
  %tobool257 = icmp ne i64 %141, 0, !dbg !17543
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !17544

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !17545

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !17543

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !17546), !dbg !17547
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !17548, !tbaa !2529
  %cmp260 = icmp eq i32 %142, 2, !dbg !17550
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !17551

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17552, !tbaa !2493
  %tobool263 = trunc i8 %143 to i1, !dbg !17552
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !17553

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !17554

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !17552

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !17555), !dbg !17556
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !17557, !tbaa !2493
  %tobool267 = trunc i8 %144 to i1, !dbg !17557
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !17559

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !17560, !tbaa !2529
  store i8 %145, i8* %c, align 1, !dbg !17562, !tbaa !2529
  br label %store_escape, !dbg !17563

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !17564

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !17565, !tbaa !2611
  %cmp271 = icmp eq i64 %146, -1, !dbg !17567
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !17568

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !17569, !tbaa !2474
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !17569, !ctir !146
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !17569, !tbaa !2529
  %conv275 = sext i8 %148 to i32, !dbg !17569
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !17570
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !17565

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !17571, !tbaa !2611
  %cmp279 = icmp eq i64 %149, 1, !dbg !17572
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !17568

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !17573

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !17574

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !17575, !tbaa !2611
  %cmp284 = icmp ne i64 %150, 0, !dbg !17577
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !17578

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !17579

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !17580

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17581, !tbaa !2493
  br label %sw.bb289, !dbg !17582

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !17583, !tbaa !2529
  %cmp290 = icmp eq i32 %151, 2, !dbg !17585
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !17586

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17587, !tbaa !2493
  %tobool293 = trunc i8 %152 to i1, !dbg !17587
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !17588

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !17589

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !17590

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !17591, !tbaa !2493
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17592, !tbaa !2493
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !17593, !tbaa !2529
  %cmp298 = icmp eq i32 %153, 2, !dbg !17595
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !17596

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17597, !tbaa !2493
  %tobool301 = trunc i8 %154 to i1, !dbg !17597
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !17600

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !17601

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !17602, !tbaa !2611
  %tobool304 = icmp ne i64 %155, 0, !dbg !17602
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !17604

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !17605, !tbaa !2611
  %tobool306 = icmp ne i64 %156, 0, !dbg !17605
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !17606

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !17607, !tbaa !2611
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !17609, !tbaa !2611
  store i64 0, i64* %buffersize.addr, align 8, !dbg !17610, !tbaa !2611
  br label %if.end308, !dbg !17611

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !17612

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !17613, !tbaa !2611
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !17613, !tbaa !2611
  %cmp310 = icmp ult i64 %158, %159, !dbg !17613
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !17616

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !17613, !tbaa !2474
  %161 = load i64, i64* %len, align 8, !dbg !17613, !tbaa !2611
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !17613, !ctir !143
  store i8 39, i8* %arrayidx313, align 1, !dbg !17613, !tbaa !2529
  br label %if.end314, !dbg !17613

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !17616, !tbaa !2611
  %inc315 = add i64 %162, 1, !dbg !17616
  store i64 %inc315, i64* %len, align 8, !dbg !17616, !tbaa !2611
  br label %do.end316, !dbg !17616

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !17617

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !17618, !tbaa !2611
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !17618, !tbaa !2611
  %cmp318 = icmp ult i64 %163, %164, !dbg !17618
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !17621

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !17618, !tbaa !2474
  %166 = load i64, i64* %len, align 8, !dbg !17618, !tbaa !2611
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !17618, !ctir !143
  store i8 92, i8* %arrayidx321, align 1, !dbg !17618, !tbaa !2529
  br label %if.end322, !dbg !17618

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !17621, !tbaa !2611
  %inc323 = add i64 %167, 1, !dbg !17621
  store i64 %inc323, i64* %len, align 8, !dbg !17621, !tbaa !2611
  br label %do.end324, !dbg !17621

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !17622

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !17623, !tbaa !2611
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !17623, !tbaa !2611
  %cmp326 = icmp ult i64 %168, %169, !dbg !17623
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !17626

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !17623, !tbaa !2474
  %171 = load i64, i64* %len, align 8, !dbg !17623, !tbaa !2611
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !17623, !ctir !143
  store i8 39, i8* %arrayidx329, align 1, !dbg !17623, !tbaa !2529
  br label %if.end330, !dbg !17623

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !17626, !tbaa !2611
  %inc331 = add i64 %172, 1, !dbg !17626
  store i64 %inc331, i64* %len, align 8, !dbg !17626, !tbaa !2611
  br label %do.end332, !dbg !17626

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17627, !tbaa !2493
  br label %if.end333, !dbg !17628

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !17629

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17630, !tbaa !2493
  br label %sw.epilog564, !dbg !17631

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !17632, metadata !DIExpression()), !dbg !17634
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !17635, metadata !DIExpression()), !dbg !17636
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !17637, !tbaa !2493
  %tobool336 = trunc i8 %173 to i1, !dbg !17637
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !17639

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !17640, !tbaa !2611
  %call338 = call i16** @__ctype_b_loc() #17, !dbg !17642
  %174 = load i16*, i16** %call338, align 8, !dbg !17642, !tbaa !2474, !ctir !575
  %175 = load i8, i8* %c, align 1, !dbg !17642, !tbaa !2529
  %conv339 = zext i8 %175 to i32, !dbg !17642
  %idxprom = sext i32 %conv339 to i64, !dbg !17642
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !17642, !ctir !575
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !17642, !tbaa !5852
  %conv341 = zext i16 %176 to i32, !dbg !17642
  %and342 = and i32 %conv341, 16384, !dbg !17642
  %cmp343 = icmp ne i32 %and342, 0, !dbg !17643
  %frombool345 = zext i1 %cmp343 to i8, !dbg !17644
  store i8 %frombool345, i8* %printable, align 1, !dbg !17644, !tbaa !2493
  br label %if.end410, !dbg !17645

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !17646, metadata !DIExpression()), !dbg !17648
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !17649
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !17649
  store i64 0, i64* %m, align 8, !dbg !17650, !tbaa !2611
  store i8 1, i8* %printable, align 1, !dbg !17651, !tbaa !2493
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !17652, !tbaa !2611
  %cmp347 = icmp eq i64 %178, -1, !dbg !17654
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !17655

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !17656, !tbaa !2474
  %call350 = call i64 @strlen(i8* %179) #16, !dbg !17657
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !17658, !tbaa !2611
  br label %if.end351, !dbg !17659

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !17660

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !17661, metadata !DIExpression()), !dbg !17663
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !17664, metadata !DIExpression()), !dbg !17665
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !17666, !tbaa !2474
  %181 = load i64, i64* %i, align 8, !dbg !17667, !tbaa !2611
  %182 = load i64, i64* %m, align 8, !dbg !17668, !tbaa !2611
  %add353 = add i64 %181, %182, !dbg !17669
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !17666, !ctir !146
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !17670, !tbaa !2611
  %184 = load i64, i64* %i, align 8, !dbg !17671, !tbaa !2611
  %185 = load i64, i64* %m, align 8, !dbg !17672, !tbaa !2611
  %add355 = add i64 %184, %185, !dbg !17673
  %sub = sub i64 %183, %add355, !dbg !17674
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !17675
  store i64 %call356, i64* %bytes, align 8, !dbg !17665, !tbaa !2611
  %186 = load i64, i64* %bytes, align 8, !dbg !17676, !tbaa !2611
  %cmp357 = icmp eq i64 %186, 0, !dbg !17678
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !17679

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !17680

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !17681, !tbaa !2611
  %cmp361 = icmp eq i64 %187, -1, !dbg !17683
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !17684

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !17685, !tbaa !2493
  br label %do.end409, !dbg !17687

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !17688, !tbaa !2611
  %cmp365 = icmp eq i64 %188, -2, !dbg !17690
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !17691

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !17692, !tbaa !2493
  br label %while.cond, !dbg !17694

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !17695, !tbaa !2611
  %190 = load i64, i64* %m, align 8, !dbg !17696, !tbaa !2611
  %add368 = add i64 %189, %190, !dbg !17697
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !17698, !tbaa !2611
  %cmp369 = icmp ult i64 %add368, %191, !dbg !17699
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !17700

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !17701, !tbaa !2474
  %193 = load i64, i64* %i, align 8, !dbg !17702, !tbaa !2611
  %194 = load i64, i64* %m, align 8, !dbg !17703, !tbaa !2611
  %add371 = add i64 %193, %194, !dbg !17704
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !17701, !ctir !146
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !17701, !tbaa !2529
  %conv373 = sext i8 %195 to i32, !dbg !17701
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !17700
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !17705
  br i1 %196, label %while.body, label %while.end, !dbg !17694

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !17706, !tbaa !2611
  %inc375 = add i64 %197, 1, !dbg !17706
  store i64 %inc375, i64* %m, align 8, !dbg !17706, !tbaa !2611
  br label %while.cond, !dbg !17694, !llvm.loop !17707

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !17708

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17709, !tbaa !2493
  %tobool377 = trunc i8 %198 to i1, !dbg !17709
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !17712

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !17713, !tbaa !2529
  %cmp380 = icmp eq i32 %199, 2, !dbg !17714
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !17715

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !17716, metadata !DIExpression()), !dbg !17718
  store i64 1, i64* %j, align 8, !dbg !17719, !tbaa !2611
  br label %for.cond383, !dbg !17721

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !17722, !tbaa !2611
  %201 = load i64, i64* %bytes, align 8, !dbg !17724, !tbaa !2611
  %cmp384 = icmp ult i64 %200, %201, !dbg !17725
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !17726

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !17727, !tbaa !2474
  %203 = load i64, i64* %i, align 8, !dbg !17728, !tbaa !2611
  %204 = load i64, i64* %m, align 8, !dbg !17729, !tbaa !2611
  %add387 = add i64 %203, %204, !dbg !17730
  %205 = load i64, i64* %j, align 8, !dbg !17731, !tbaa !2611
  %add388 = add i64 %add387, %205, !dbg !17732
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !17727, !ctir !146
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !17727, !tbaa !2529
  %conv390 = sext i8 %206 to i32, !dbg !17727
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !17733

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !17734

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !17736

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !17737

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !17738, !tbaa !2611
  %inc395 = add i64 %207, 1, !dbg !17738
  store i64 %inc395, i64* %j, align 8, !dbg !17738, !tbaa !2611
  br label %for.cond383, !dbg !17739, !llvm.loop !17740

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !17742

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !17743, !tbaa !2468
  %call398 = call i32 @iswprint(i32 %208) #13, !dbg !17745
  %tobool399 = icmp ne i32 %call398, 0, !dbg !17745
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !17746

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !17747, !tbaa !2493
  br label %if.end401, !dbg !17748

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !17749, !tbaa !2611
  %210 = load i64, i64* %m, align 8, !dbg !17750, !tbaa !2611
  %add402 = add i64 %210, %209, !dbg !17750
  store i64 %add402, i64* %m, align 8, !dbg !17750, !tbaa !2611
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !17751

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !17752
  %tobool407 = icmp ne i32 %call406, 0, !dbg !17753
  %lnot408 = xor i1 %tobool407, true, !dbg !17753
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !17751, !llvm.loop !17754

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !17756, !tbaa !2493
  %tobool411 = trunc i8 %211 to i1, !dbg !17756
  %frombool412 = zext i1 %tobool411 to i8, !dbg !17757
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !17757, !tbaa !2493
  %212 = load i64, i64* %m, align 8, !dbg !17758, !tbaa !2611
  %cmp413 = icmp ult i64 1, %212, !dbg !17760
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !17761

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !17762, !tbaa !2493
  %tobool415 = trunc i8 %213 to i1, !dbg !17762
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !17763

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !17764, !tbaa !2493
  %tobool418 = trunc i8 %214 to i1, !dbg !17764
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !17765

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !17766, metadata !DIExpression()), !dbg !17768
  %215 = load i64, i64* %i, align 8, !dbg !17769, !tbaa !2611
  %216 = load i64, i64* %m, align 8, !dbg !17770, !tbaa !2611
  %add420 = add i64 %215, %216, !dbg !17771
  store i64 %add420, i64* %ilim, align 8, !dbg !17768, !tbaa !2611
  br label %for.cond421, !dbg !17772

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !17773, !tbaa !2493
  %tobool422 = trunc i8 %217 to i1, !dbg !17773
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !17778

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !17779, !tbaa !2493
  %tobool425 = trunc i8 %218 to i1, !dbg !17779
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !17780

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !17781

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17783, !tbaa !2493
  %tobool428 = trunc i8 %219 to i1, !dbg !17783
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !17786

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !17783

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !17786, !tbaa !2493
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !17787, !tbaa !2529
  %cmp431 = icmp eq i32 %220, 2, !dbg !17787
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !17787

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17787, !tbaa !2493
  %tobool434 = trunc i8 %221 to i1, !dbg !17787
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !17786

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !17789

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !17791, !tbaa !2611
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !17791, !tbaa !2611
  %cmp437 = icmp ult i64 %222, %223, !dbg !17791
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !17794

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !17791, !tbaa !2474
  %225 = load i64, i64* %len, align 8, !dbg !17791, !tbaa !2611
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !17791, !ctir !143
  store i8 39, i8* %arrayidx440, align 1, !dbg !17791, !tbaa !2529
  br label %if.end441, !dbg !17791

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !17794, !tbaa !2611
  %inc442 = add i64 %226, 1, !dbg !17794
  store i64 %inc442, i64* %len, align 8, !dbg !17794, !tbaa !2611
  br label %do.end444, !dbg !17794

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !17789

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !17795, !tbaa !2611
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !17795, !tbaa !2611
  %cmp446 = icmp ult i64 %227, %228, !dbg !17795
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !17798

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !17795, !tbaa !2474
  %230 = load i64, i64* %len, align 8, !dbg !17795, !tbaa !2611
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !17795, !ctir !143
  store i8 36, i8* %arrayidx449, align 1, !dbg !17795, !tbaa !2529
  br label %if.end450, !dbg !17795

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !17798, !tbaa !2611
  %inc451 = add i64 %231, 1, !dbg !17798
  store i64 %inc451, i64* %len, align 8, !dbg !17798, !tbaa !2611
  br label %do.end453, !dbg !17798

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !17789

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !17799, !tbaa !2611
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !17799, !tbaa !2611
  %cmp455 = icmp ult i64 %232, %233, !dbg !17799
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !17802

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !17799, !tbaa !2474
  %235 = load i64, i64* %len, align 8, !dbg !17799, !tbaa !2611
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !17799, !ctir !143
  store i8 39, i8* %arrayidx458, align 1, !dbg !17799, !tbaa !2529
  br label %if.end459, !dbg !17799

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !17802, !tbaa !2611
  %inc460 = add i64 %236, 1, !dbg !17802
  store i64 %inc460, i64* %len, align 8, !dbg !17802, !tbaa !2611
  br label %do.end462, !dbg !17802

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17789, !tbaa !2493
  br label %if.end463, !dbg !17789

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !17786

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !17803, !tbaa !2611
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !17803, !tbaa !2611
  %cmp465 = icmp ult i64 %237, %238, !dbg !17803
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !17806

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !17803, !tbaa !2474
  %240 = load i64, i64* %len, align 8, !dbg !17803, !tbaa !2611
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !17803, !ctir !143
  store i8 92, i8* %arrayidx468, align 1, !dbg !17803, !tbaa !2529
  br label %if.end469, !dbg !17803

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !17806, !tbaa !2611
  %inc470 = add i64 %241, 1, !dbg !17806
  store i64 %inc470, i64* %len, align 8, !dbg !17806, !tbaa !2611
  br label %do.end472, !dbg !17806

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !17786

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !17807

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !17808, !tbaa !2611
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !17808, !tbaa !2611
  %cmp476 = icmp ult i64 %242, %243, !dbg !17808
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !17811

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !17808, !tbaa !2529
  %conv479 = zext i8 %244 to i32, !dbg !17808
  %shr = ashr i32 %conv479, 6, !dbg !17808
  %add480 = add nsw i32 48, %shr, !dbg !17808
  %conv481 = trunc i32 %add480 to i8, !dbg !17808
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !17808, !tbaa !2474
  %246 = load i64, i64* %len, align 8, !dbg !17808, !tbaa !2611
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !17808, !ctir !143
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !17808, !tbaa !2529
  br label %if.end483, !dbg !17808

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !17811, !tbaa !2611
  %inc484 = add i64 %247, 1, !dbg !17811
  store i64 %inc484, i64* %len, align 8, !dbg !17811, !tbaa !2611
  br label %do.end486, !dbg !17811

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !17812

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !17813, !tbaa !2611
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !17813, !tbaa !2611
  %cmp488 = icmp ult i64 %248, %249, !dbg !17813
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !17816

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !17813, !tbaa !2529
  %conv491 = zext i8 %250 to i32, !dbg !17813
  %shr492 = ashr i32 %conv491, 3, !dbg !17813
  %and493 = and i32 %shr492, 7, !dbg !17813
  %add494 = add nsw i32 48, %and493, !dbg !17813
  %conv495 = trunc i32 %add494 to i8, !dbg !17813
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !17813, !tbaa !2474
  %252 = load i64, i64* %len, align 8, !dbg !17813, !tbaa !2611
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !17813, !ctir !143
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !17813, !tbaa !2529
  br label %if.end497, !dbg !17813

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !17816, !tbaa !2611
  %inc498 = add i64 %253, 1, !dbg !17816
  store i64 %inc498, i64* %len, align 8, !dbg !17816, !tbaa !2611
  br label %do.end500, !dbg !17816

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !17817, !tbaa !2529
  %conv501 = zext i8 %254 to i32, !dbg !17817
  %and502 = and i32 %conv501, 7, !dbg !17818
  %add503 = add nsw i32 48, %and502, !dbg !17819
  %conv504 = trunc i32 %add503 to i8, !dbg !17820
  store i8 %conv504, i8* %c, align 1, !dbg !17821, !tbaa !2529
  br label %if.end518, !dbg !17822

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !17823, !tbaa !2493
  %tobool506 = trunc i8 %255 to i1, !dbg !17823
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !17825

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !17826

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !17828, !tbaa !2611
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !17828, !tbaa !2611
  %cmp509 = icmp ult i64 %256, %257, !dbg !17828
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !17831

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !17828, !tbaa !2474
  %259 = load i64, i64* %len, align 8, !dbg !17828, !tbaa !2611
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !17828, !ctir !143
  store i8 92, i8* %arrayidx512, align 1, !dbg !17828, !tbaa !2529
  br label %if.end513, !dbg !17828

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !17831, !tbaa !2611
  %inc514 = add i64 %260, 1, !dbg !17831
  store i64 %inc514, i64* %len, align 8, !dbg !17831, !tbaa !2611
  br label %do.end516, !dbg !17831

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !17832, !tbaa !2493
  br label %if.end517, !dbg !17833

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !17834, !tbaa !2611
  %262 = load i64, i64* %i, align 8, !dbg !17836, !tbaa !2611
  %add519 = add i64 %262, 1, !dbg !17837
  %cmp520 = icmp ule i64 %261, %add519, !dbg !17838
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !17839

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !17840

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !17841

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17842, !tbaa !2493
  %tobool525 = trunc i8 %263 to i1, !dbg !17842
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !17842

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !17842, !tbaa !2493
  %tobool528 = trunc i8 %264 to i1, !dbg !17842
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !17845

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !17846

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !17848, !tbaa !2611
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !17848, !tbaa !2611
  %cmp531 = icmp ult i64 %265, %266, !dbg !17848
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !17851

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !17848, !tbaa !2474
  %268 = load i64, i64* %len, align 8, !dbg !17848, !tbaa !2611
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !17848, !ctir !143
  store i8 39, i8* %arrayidx534, align 1, !dbg !17848, !tbaa !2529
  br label %if.end535, !dbg !17848

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !17851, !tbaa !2611
  %inc536 = add i64 %269, 1, !dbg !17851
  store i64 %inc536, i64* %len, align 8, !dbg !17851, !tbaa !2611
  br label %do.end538, !dbg !17851

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !17846

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !17852, !tbaa !2611
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !17852, !tbaa !2611
  %cmp540 = icmp ult i64 %270, %271, !dbg !17852
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !17855

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !17852, !tbaa !2474
  %273 = load i64, i64* %len, align 8, !dbg !17852, !tbaa !2611
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !17852, !ctir !143
  store i8 39, i8* %arrayidx543, align 1, !dbg !17852, !tbaa !2529
  br label %if.end544, !dbg !17852

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !17855, !tbaa !2611
  %inc545 = add i64 %274, 1, !dbg !17855
  store i64 %inc545, i64* %len, align 8, !dbg !17855, !tbaa !2611
  br label %do.end547, !dbg !17855

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17846, !tbaa !2493
  br label %if.end548, !dbg !17846

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !17845

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !17856

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !17857, !tbaa !2611
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !17857, !tbaa !2611
  %cmp552 = icmp ult i64 %275, %276, !dbg !17857
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !17860

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !17857, !tbaa !2529
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !17857, !tbaa !2474
  %279 = load i64, i64* %len, align 8, !dbg !17857, !tbaa !2611
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !17857, !ctir !143
  store i8 %277, i8* %arrayidx555, align 1, !dbg !17857, !tbaa !2529
  br label %if.end556, !dbg !17857

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !17860, !tbaa !2611
  %inc557 = add i64 %280, 1, !dbg !17860
  store i64 %inc557, i64* %len, align 8, !dbg !17860, !tbaa !2611
  br label %do.end559, !dbg !17860

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !17861, !tbaa !2474
  %282 = load i64, i64* %i, align 8, !dbg !17862, !tbaa !2611
  %inc560 = add i64 %282, 1, !dbg !17862
  store i64 %inc560, i64* %i, align 8, !dbg !17862, !tbaa !2611
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !17861, !ctir !146
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !17861, !tbaa !2529
  store i8 %283, i8* %c, align 1, !dbg !17863, !tbaa !2529
  br label %for.cond421, !dbg !17864, !llvm.loop !17865

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !17868

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !17869

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !17870, !tbaa !2493
  %tobool565 = trunc i8 %284 to i1, !dbg !17870
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !17872

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !17873, !tbaa !2529
  %cmp568 = icmp ne i32 %285, 2, !dbg !17874
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !17875

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17876, !tbaa !2493
  %tobool571 = trunc i8 %286 to i1, !dbg !17876
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !17877

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17878, !tbaa !2474
  %tobool574 = icmp ne i32* %287, null, !dbg !17878
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !17879

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17880, !tbaa !2474
  %289 = load i8, i8* %c, align 1, !dbg !17881, !tbaa !2529
  %conv576 = zext i8 %289 to i64, !dbg !17881
  %div = udiv i64 %conv576, 32, !dbg !17882
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !17880, !ctir !1514
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !17880, !tbaa !2468
  %291 = load i8, i8* %c, align 1, !dbg !17883, !tbaa !2529
  %conv578 = zext i8 %291 to i64, !dbg !17883
  %rem = urem i64 %conv578, 32, !dbg !17884
  %sh_prom = trunc i64 %rem to i32, !dbg !17885
  %shr579 = lshr i32 %290, %sh_prom, !dbg !17885
  %and580 = and i32 %shr579, 1, !dbg !17886
  %tobool581 = icmp ne i32 %and580, 0, !dbg !17886
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !17887

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !17888, !tbaa !2493
  %tobool583 = trunc i8 %292 to i1, !dbg !17888
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !17889

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !17890

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !17888

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !17891), !dbg !17892
  br label %do.body586, !dbg !17893

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17894, !tbaa !2493
  %tobool587 = trunc i8 %293 to i1, !dbg !17894
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !17897

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !17894

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !17897, !tbaa !2493
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !17898, !tbaa !2529
  %cmp590 = icmp eq i32 %294, 2, !dbg !17898
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !17898

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17898, !tbaa !2493
  %tobool593 = trunc i8 %295 to i1, !dbg !17898
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !17897

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !17900

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !17902, !tbaa !2611
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !17902, !tbaa !2611
  %cmp596 = icmp ult i64 %296, %297, !dbg !17902
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !17905

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !17902, !tbaa !2474
  %299 = load i64, i64* %len, align 8, !dbg !17902, !tbaa !2611
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !17902, !ctir !143
  store i8 39, i8* %arrayidx599, align 1, !dbg !17902, !tbaa !2529
  br label %if.end600, !dbg !17902

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !17905, !tbaa !2611
  %inc601 = add i64 %300, 1, !dbg !17905
  store i64 %inc601, i64* %len, align 8, !dbg !17905, !tbaa !2611
  br label %do.end603, !dbg !17905

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !17900

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !17906, !tbaa !2611
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !17906, !tbaa !2611
  %cmp605 = icmp ult i64 %301, %302, !dbg !17906
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !17909

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !17906, !tbaa !2474
  %304 = load i64, i64* %len, align 8, !dbg !17906, !tbaa !2611
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !17906, !ctir !143
  store i8 36, i8* %arrayidx608, align 1, !dbg !17906, !tbaa !2529
  br label %if.end609, !dbg !17906

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !17909, !tbaa !2611
  %inc610 = add i64 %305, 1, !dbg !17909
  store i64 %inc610, i64* %len, align 8, !dbg !17909, !tbaa !2611
  br label %do.end612, !dbg !17909

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !17900

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !17910, !tbaa !2611
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !17910, !tbaa !2611
  %cmp614 = icmp ult i64 %306, %307, !dbg !17910
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !17913

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !17910, !tbaa !2474
  %309 = load i64, i64* %len, align 8, !dbg !17910, !tbaa !2611
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !17910, !ctir !143
  store i8 39, i8* %arrayidx617, align 1, !dbg !17910, !tbaa !2529
  br label %if.end618, !dbg !17910

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !17913, !tbaa !2611
  %inc619 = add i64 %310, 1, !dbg !17913
  store i64 %inc619, i64* %len, align 8, !dbg !17913, !tbaa !2611
  br label %do.end621, !dbg !17913

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17900, !tbaa !2493
  br label %if.end622, !dbg !17900

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !17897

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !17914, !tbaa !2611
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !17914, !tbaa !2611
  %cmp624 = icmp ult i64 %311, %312, !dbg !17914
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !17917

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !17914, !tbaa !2474
  %314 = load i64, i64* %len, align 8, !dbg !17914, !tbaa !2611
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !17914, !ctir !143
  store i8 92, i8* %arrayidx627, align 1, !dbg !17914, !tbaa !2529
  br label %if.end628, !dbg !17914

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !17917, !tbaa !2611
  %inc629 = add i64 %315, 1, !dbg !17917
  store i64 %inc629, i64* %len, align 8, !dbg !17917, !tbaa !2611
  br label %do.end631, !dbg !17917

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !17897

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !17897

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !17918), !dbg !17919
  br label %do.body634, !dbg !17920

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17921, !tbaa !2493
  %tobool635 = trunc i8 %316 to i1, !dbg !17921
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !17921

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !17921, !tbaa !2493
  %tobool638 = trunc i8 %317 to i1, !dbg !17921
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !17924

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !17925

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !17927, !tbaa !2611
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !17927, !tbaa !2611
  %cmp641 = icmp ult i64 %318, %319, !dbg !17927
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !17930

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !17927, !tbaa !2474
  %321 = load i64, i64* %len, align 8, !dbg !17927, !tbaa !2611
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !17927, !ctir !143
  store i8 39, i8* %arrayidx644, align 1, !dbg !17927, !tbaa !2529
  br label %if.end645, !dbg !17927

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !17930, !tbaa !2611
  %inc646 = add i64 %322, 1, !dbg !17930
  store i64 %inc646, i64* %len, align 8, !dbg !17930, !tbaa !2611
  br label %do.end648, !dbg !17930

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !17925

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !17931, !tbaa !2611
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !17931, !tbaa !2611
  %cmp650 = icmp ult i64 %323, %324, !dbg !17931
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !17934

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !17931, !tbaa !2474
  %326 = load i64, i64* %len, align 8, !dbg !17931, !tbaa !2611
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !17931, !ctir !143
  store i8 39, i8* %arrayidx653, align 1, !dbg !17931, !tbaa !2529
  br label %if.end654, !dbg !17931

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !17934, !tbaa !2611
  %inc655 = add i64 %327, 1, !dbg !17934
  store i64 %inc655, i64* %len, align 8, !dbg !17934, !tbaa !2611
  br label %do.end657, !dbg !17934

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17925, !tbaa !2493
  br label %if.end658, !dbg !17925

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !17924

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !17935

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !17936, !tbaa !2611
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !17936, !tbaa !2611
  %cmp662 = icmp ult i64 %328, %329, !dbg !17936
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !17939

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !17936, !tbaa !2529
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !17936, !tbaa !2474
  %332 = load i64, i64* %len, align 8, !dbg !17936, !tbaa !2611
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !17936, !ctir !143
  store i8 %330, i8* %arrayidx665, align 1, !dbg !17936, !tbaa !2529
  br label %if.end666, !dbg !17936

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !17939, !tbaa !2611
  %inc667 = add i64 %333, 1, !dbg !17939
  store i64 %inc667, i64* %len, align 8, !dbg !17939, !tbaa !2611
  br label %do.end669, !dbg !17939

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !17940, !tbaa !2493
  %tobool670 = trunc i8 %334 to i1, !dbg !17940
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !17942

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17943, !tbaa !2493
  br label %if.end672, !dbg !17944

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !17945

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !17946, !tbaa !2611
  %inc674 = add i64 %335, 1, !dbg !17946
  store i64 %inc674, i64* %i, align 8, !dbg !17946, !tbaa !2611
  br label %for.cond44, !dbg !17947, !llvm.loop !17948

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !17950, !tbaa !2611
  %cmp676 = icmp eq i64 %336, 0, !dbg !17952
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !17953

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !17954, !tbaa !2529
  %cmp679 = icmp eq i32 %337, 2, !dbg !17955
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !17956

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17957, !tbaa !2493
  %tobool682 = trunc i8 %338 to i1, !dbg !17957
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !17958

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !17959

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !17960, !tbaa !2529
  %cmp686 = icmp eq i32 %339, 2, !dbg !17962
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !17963

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17964, !tbaa !2493
  %tobool689 = trunc i8 %340 to i1, !dbg !17964
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !17965

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !17966, !tbaa !2493
  %tobool691 = trunc i8 %341 to i1, !dbg !17966
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !17967

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17968, !tbaa !2493
  %tobool694 = trunc i8 %342 to i1, !dbg !17968
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !17971

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !17972, !tbaa !2474
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !17973, !tbaa !2611
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !17974, !tbaa !2474
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !17975, !tbaa !2611
  %347 = load i32, i32* %flags.addr, align 4, !dbg !17976, !tbaa !2468
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17977, !tbaa !2474
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !17978, !tbaa !2474
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !17979, !tbaa !2474
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !17980
  store i64 %call696, i64* %retval, align 8, !dbg !17981
  br label %return, !dbg !17981

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !17982, !tbaa !2611
  %tobool698 = icmp ne i64 %351, 0, !dbg !17982
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !17984

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !17985, !tbaa !2611
  %tobool700 = icmp ne i64 %352, 0, !dbg !17985
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !17986

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !17987, !tbaa !2611
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !17989, !tbaa !2611
  store i64 0, i64* %len, align 8, !dbg !17990, !tbaa !2611
  br label %process_input, !dbg !17991

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !17992

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !17993, !tbaa !2474
  %tobool705 = icmp ne i8* %354, null, !dbg !17993
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !17995

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17996, !tbaa !2493
  %tobool707 = trunc i8 %355 to i1, !dbg !17996
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !17997

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !17998

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !17999, !tbaa !2474
  %357 = load i8, i8* %356, align 1, !dbg !18002, !tbaa !2529, !ctir !147
  %tobool710 = icmp ne i8 %357, 0, !dbg !18003
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !18003

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !18004

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !18005, !tbaa !2611
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !18005, !tbaa !2611
  %cmp713 = icmp ult i64 %358, %359, !dbg !18005
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !18008

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !18005, !tbaa !2474
  %361 = load i8, i8* %360, align 1, !dbg !18005, !tbaa !2529, !ctir !147
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !18005, !tbaa !2474
  %363 = load i64, i64* %len, align 8, !dbg !18005, !tbaa !2611
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !18005, !ctir !143
  store i8 %361, i8* %arrayidx716, align 1, !dbg !18005, !tbaa !2529
  br label %if.end717, !dbg !18005

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !18008, !tbaa !2611
  %inc718 = add i64 %364, 1, !dbg !18008
  store i64 %inc718, i64* %len, align 8, !dbg !18008, !tbaa !2611
  br label %do.end720, !dbg !18008

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !18008

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !18009, !tbaa !2474
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !18009
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !18009, !tbaa !2474
  br label %for.cond709, !dbg !18010, !llvm.loop !18011

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !18012

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !18013, !tbaa !2611
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !18015, !tbaa !2611
  %cmp725 = icmp ult i64 %366, %367, !dbg !18016
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !18017

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !18018, !tbaa !2474
  %369 = load i64, i64* %len, align 8, !dbg !18019, !tbaa !2611
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !18018, !ctir !143
  store i8 0, i8* %arrayidx728, align 1, !dbg !18020, !tbaa !2529
  br label %if.end729, !dbg !18018

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !18021, !tbaa !2611
  store i64 %370, i64* %retval, align 8, !dbg !18022
  br label %return, !dbg !18022

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !18023), !dbg !18024
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !18025, !tbaa !2529
  %cmp730 = icmp eq i32 %371, 2, !dbg !18027
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !18028

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !18029, !tbaa !2493
  %tobool733 = trunc i8 %372 to i1, !dbg !18029
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !18030

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !18031, !tbaa !2529
  br label %if.end736, !dbg !18032

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !18033, !tbaa !2474
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !18034, !tbaa !2611
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !18035, !tbaa !2474
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !18036, !tbaa !2611
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !18037, !tbaa !2529
  %378 = load i32, i32* %flags.addr, align 4, !dbg !18038, !tbaa !2468
  %and737 = and i32 %378, -3, !dbg !18039
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !18040, !tbaa !2474
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !18041, !tbaa !2474
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !18042
  store i64 %call738, i64* %retval, align 8, !dbg !18043
  br label %return, !dbg !18043

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !18044
  ret i64 %381, !dbg !18044
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #0 !dbg !18045 !ctir !1526 {
entry:
  %retval = alloca i8*, align 8, !ctir !146
  %msgid.addr = alloca i8*, align 8, !ctir !146
  %s.addr = alloca i32, align 4, !ctir !95
  %translation = alloca i8*, align 8, !ctir !146
  %locale_code = alloca i8*, align 8, !ctir !146
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !18046, metadata !DIExpression()), !dbg !18047
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18048, metadata !DIExpression()), !dbg !18049
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !18050, metadata !DIExpression()), !dbg !18051
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !18052, !tbaa !2474
  %call = call i8* @gettext(i8* %0) #13, !dbg !18052
  store i8* %call, i8** %translation, align 8, !dbg !18051, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !18053, metadata !DIExpression()), !dbg !18054
  %1 = load i8*, i8** %translation, align 8, !dbg !18055, !tbaa !2474
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !18057, !tbaa !2474
  %cmp = icmp ne i8* %1, %2, !dbg !18058
  br i1 %cmp, label %if.then, label %if.end, !dbg !18059

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !18060, !tbaa !2474
  store i8* %3, i8** %retval, align 8, !dbg !18061
  br label %return, !dbg !18061

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !18062
  store i8* %call1, i8** %locale_code, align 8, !dbg !18063, !tbaa !2474
  %4 = load i8*, i8** %locale_code, align 8, !dbg !18064, !tbaa !2474
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.398, i64 0, i64 0)) #16, !dbg !18064
  %cmp3 = icmp eq i32 %call2, 0, !dbg !18064
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !18066

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !18067, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !18067, !ctir !146
  %6 = load i8, i8* %arrayidx, align 1, !dbg !18067, !tbaa !2529
  %conv = sext i8 %6 to i32, !dbg !18067
  %cmp5 = icmp eq i32 %conv, 96, !dbg !18068
  %7 = zext i1 %cmp5 to i64, !dbg !18067
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.399, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.400, i64 0, i64 0), !dbg !18067
  store i8* %cond, i8** %retval, align 8, !dbg !18069
  br label %return, !dbg !18069

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !18070, !tbaa !2474
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.401, i64 0, i64 0)) #16, !dbg !18070
  %cmp9 = icmp eq i32 %call8, 0, !dbg !18070
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !18072

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !18073, !tbaa !2474
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !18073, !ctir !146
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !18073, !tbaa !2529
  %conv13 = sext i8 %10 to i32, !dbg !18073
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !18074
  %11 = zext i1 %cmp14 to i64, !dbg !18073
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.402, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.403, i64 0, i64 0), !dbg !18073
  store i8* %cond16, i8** %retval, align 8, !dbg !18075
  br label %return, !dbg !18075

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !18076, !tbaa !2529
  %cmp18 = icmp eq i32 %12, 9, !dbg !18077
  %13 = zext i1 %cmp18 to i64, !dbg !18076
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.395, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.397, i64 0, i64 0), !dbg !18076
  store i8* %cond20, i8** %retval, align 8, !dbg !18078
  br label %return, !dbg !18078

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !18079
  ret i8* %14, !dbg !18079
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !18080 !ctir !1471 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1458
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18081, metadata !DIExpression()), !dbg !18082
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18083, metadata !DIExpression()), !dbg !18084
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !18085, metadata !DIExpression()), !dbg !18086
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18087, !tbaa !2474
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18088, !tbaa !2611
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18089, !tbaa !2474
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !18090
  ret i8* %call, !dbg !18091
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #0 !dbg !18092 !ctir !1473 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %size.addr = alloca i64*, align 8, !ctir !148
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1458
  %p = alloca %struct.quoting_options*, align 8, !ctir !1458
  %e = alloca i32, align 4, !ctir !27
  %flags = alloca i32, align 4, !ctir !27
  %bufsize = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18093, metadata !DIExpression()), !dbg !18094
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18095, metadata !DIExpression()), !dbg !18096
  store i64* %size, i64** %size.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !18097, metadata !DIExpression()), !dbg !18098
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !18099, metadata !DIExpression()), !dbg !18100
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !18101, metadata !DIExpression()), !dbg !18102
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18103, !tbaa !2474
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !18103
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18103

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18104, !tbaa !2474
  br label %cond.end, !dbg !18103

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18103

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !18103
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !18102, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %e, metadata !18105, metadata !DIExpression()), !dbg !18106
  %call = call i32* @__errno_location() #17, !dbg !18107
  %2 = load i32, i32* %call, align 4, !dbg !18107, !tbaa !2468, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !18106, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18108, metadata !DIExpression()), !dbg !18109
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18110, !tbaa !2474
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !18111, !ctir !1459
  %4 = load i32, i32* %flags1, align 4, !dbg !18111, !tbaa !17099, !ctir !27
  %5 = load i64*, i64** %size.addr, align 8, !dbg !18112, !tbaa !2474
  %tobool2 = icmp ne i64* %5, null, !dbg !18112
  %6 = zext i1 %tobool2 to i64, !dbg !18112
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !18112
  %or = or i32 %4, %cond3, !dbg !18113
  store i32 %or, i32* %flags, align 4, !dbg !18109, !tbaa !2468
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !18114, metadata !DIExpression()), !dbg !18115
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !18116, !tbaa !2474
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !18117, !tbaa !2611
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18118, !tbaa !2474
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !18119, !ctir !1459
  %10 = load i32, i32* %style, align 8, !dbg !18119, !tbaa !17031, !ctir !95
  %11 = load i32, i32* %flags, align 4, !dbg !18120, !tbaa !2468
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18121, !tbaa !2474
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !18122, !ctir !1459
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18121
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18123, !tbaa !2474
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !18124, !ctir !1459
  %14 = load i8*, i8** %left_quote, align 8, !dbg !18124, !tbaa !17132, !ctir !146
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18125, !tbaa !2474
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !18126, !ctir !1459
  %16 = load i8*, i8** %right_quote, align 8, !dbg !18126, !tbaa !17137, !ctir !146
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !18127
  %add = add i64 %call4, 1, !dbg !18128
  store i64 %add, i64* %bufsize, align 8, !dbg !18115, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !18129, metadata !DIExpression()), !dbg !18130
  %17 = load i64, i64* %bufsize, align 8, !dbg !18131, !tbaa !2611
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !18132
  store i8* %call5, i8** %buf, align 8, !dbg !18130, !tbaa !2474
  %18 = load i8*, i8** %buf, align 8, !dbg !18133, !tbaa !2474
  %19 = load i64, i64* %bufsize, align 8, !dbg !18134, !tbaa !2611
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !18135, !tbaa !2474
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !18136, !tbaa !2611
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18137, !tbaa !2474
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !18138, !ctir !1459
  %23 = load i32, i32* %style6, align 8, !dbg !18138, !tbaa !17031, !ctir !95
  %24 = load i32, i32* %flags, align 4, !dbg !18139, !tbaa !2468
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18140, !tbaa !2474
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !18141, !ctir !1459
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !18140
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18142, !tbaa !2474
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !18143, !ctir !1459
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !18143, !tbaa !17132, !ctir !146
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18144, !tbaa !2474
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !18145, !ctir !1459
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !18145, !tbaa !17137, !ctir !146
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !18146
  %30 = load i32, i32* %e, align 4, !dbg !18147, !tbaa !2468
  %call12 = call i32* @__errno_location() #17, !dbg !18148
  store i32 %30, i32* %call12, align 4, !dbg !18149, !tbaa !2468, !ctir !27
  %31 = load i64*, i64** %size.addr, align 8, !dbg !18150, !tbaa !2474
  %tobool13 = icmp ne i64* %31, null, !dbg !18150
  br i1 %tobool13, label %if.then, label %if.end, !dbg !18152

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !18153, !tbaa !2611
  %sub = sub i64 %32, 1, !dbg !18154
  %33 = load i64*, i64** %size.addr, align 8, !dbg !18155, !tbaa !2474
  store i64 %sub, i64* %33, align 8, !dbg !18156, !tbaa !2611, !ctir !149
  br label %if.end, !dbg !18157

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !18158, !tbaa !2474
  ret i8* %34, !dbg !18159
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #0 !dbg !18160 !ctir !336 {
entry:
  %sv = alloca %struct.bin_str*, align 8, !ctir !1475
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !18161, metadata !DIExpression()), !dbg !18162
  %0 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !18163, !tbaa !2474
  store %struct.bin_str* %0, %struct.bin_str** %sv, align 8, !dbg !18162, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18164, metadata !DIExpression()), !dbg !18165
  store i32 1, i32* %i, align 4, !dbg !18166, !tbaa !2468
  br label %for.cond, !dbg !18168

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !18169, !tbaa !2468
  %2 = load i32, i32* @nslots, align 4, !dbg !18171, !tbaa !2468
  %cmp = icmp slt i32 %1, %2, !dbg !18172
  br i1 %cmp, label %for.body, label %for.end, !dbg !18173

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18174, !tbaa !2474
  %4 = load i32, i32* %i, align 4, !dbg !18175, !tbaa !2468
  %idxprom = sext i32 %4 to i64, !dbg !18174
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i64 %idxprom, !dbg !18174, !ctir !1475
  %val = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 1, !dbg !18176, !ctir !1476
  %5 = load i8*, i8** %val, align 8, !dbg !18176, !tbaa !18177, !ctir !143
  call void @free(i8* %5) #13, !dbg !18179
  br label %for.inc, !dbg !18179

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !18180, !tbaa !2468
  %inc = add nsw i32 %6, 1, !dbg !18180
  store i32 %inc, i32* %i, align 4, !dbg !18180, !tbaa !2468
  br label %for.cond, !dbg !18181, !llvm.loop !18182

for.end:                                          ; preds = %for.cond
  %7 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18184, !tbaa !2474
  %arrayidx1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %7, i64 0, !dbg !18184, !ctir !1475
  %val2 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx1, i32 0, i32 1, !dbg !18186, !ctir !1476
  %8 = load i8*, i8** %val2, align 8, !dbg !18186, !tbaa !18177, !ctir !143
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18187
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18188

if.then:                                          ; preds = %for.end
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18189, !tbaa !2474
  %arrayidx4 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %9, i64 0, !dbg !18189, !ctir !1475
  %val5 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx4, i32 0, i32 1, !dbg !18191, !ctir !1476
  %10 = load i8*, i8** %val5, align 8, !dbg !18191, !tbaa !18177, !ctir !143
  call void @free(i8* %10) #13, !dbg !18192
  store i64 256, i64* getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 0), align 8, !dbg !18193, !tbaa !18194, !ctir !149
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 1), align 8, !dbg !18195, !tbaa !18177, !ctir !143
  br label %if.end, !dbg !18196

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18197, !tbaa !2474
  %cmp6 = icmp ne %struct.bin_str* %11, @slotvec0, !dbg !18199
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !18200

if.then7:                                         ; preds = %if.end
  %12 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18201, !tbaa !2474
  %13 = bitcast %struct.bin_str* %12 to i8*, !dbg !18201
  call void @free(i8* %13) #13, !dbg !18203
  store %struct.bin_str* @slotvec0, %struct.bin_str** @slotvec, align 8, !dbg !18204, !tbaa !2474
  br label %if.end8, !dbg !18205

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !18206, !tbaa !2468
  ret void, !dbg !18207
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #0 !dbg !18208 !ctir !1480 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18209, metadata !DIExpression()), !dbg !18210
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18211, metadata !DIExpression()), !dbg !18212
  %0 = load i32, i32* %n.addr, align 4, !dbg !18213, !tbaa !2468
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18214, !tbaa !2474
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !18215
  ret i8* %call, !dbg !18216
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #0 !dbg !18217 !ctir !1528 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !1458
  %e = alloca i32, align 4, !ctir !27
  %sv = alloca %struct.bin_str*, align 8, !ctir !1475
  %preallocated = alloca i8, align 1, !ctir !141
  %nmax = alloca i32, align 4, !ctir !27
  %size = alloca i64, align 8, !ctir !149
  %val = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %qsize = alloca i64, align 8, !ctir !149
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18218, metadata !DIExpression()), !dbg !18219
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18220, metadata !DIExpression()), !dbg !18221
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18222, metadata !DIExpression()), !dbg !18223
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !18224, metadata !DIExpression()), !dbg !18225
  call void @llvm.dbg.declare(metadata i32* %e, metadata !18226, metadata !DIExpression()), !dbg !18227
  %call = call i32* @__errno_location() #17, !dbg !18228
  %0 = load i32, i32* %call, align 4, !dbg !18228, !tbaa !2468, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !18227, !tbaa !2468
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !18229, metadata !DIExpression()), !dbg !18230
  %1 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !18231, !tbaa !2474
  store %struct.bin_str* %1, %struct.bin_str** %sv, align 8, !dbg !18230, !tbaa !2474
  %2 = load i32, i32* %n.addr, align 4, !dbg !18232, !tbaa !2468
  %cmp = icmp slt i32 %2, 0, !dbg !18234
  br i1 %cmp, label %if.then, label %if.end, !dbg !18235

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18236
  unreachable, !dbg !18236

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !18237, !tbaa !2468
  %4 = load i32, i32* %n.addr, align 4, !dbg !18239, !tbaa !2468
  %cmp1 = icmp sle i32 %3, %4, !dbg !18240
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !18241

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !18242, metadata !DIExpression()), !dbg !18244
  %5 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18245, !tbaa !2474
  %cmp3 = icmp eq %struct.bin_str* %5, @slotvec0, !dbg !18246
  %frombool = zext i1 %cmp3 to i8, !dbg !18244
  store i8 %frombool, i8* %preallocated, align 1, !dbg !18244, !tbaa !2493
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !18247, metadata !DIExpression()), !dbg !18248
  store i32 2147483646, i32* %nmax, align 4, !dbg !18248, !tbaa !2468
  %6 = load i32, i32* %nmax, align 4, !dbg !18249, !tbaa !2468
  %7 = load i32, i32* %n.addr, align 4, !dbg !18251, !tbaa !2468
  %cmp4 = icmp slt i32 %6, %7, !dbg !18252
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18253

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #14, !dbg !18254
  unreachable, !dbg !18254

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !18255, !tbaa !2493
  %tobool = trunc i8 %8 to i1, !dbg !18255
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18255

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !18255

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18256, !tbaa !2474
  br label %cond.end, !dbg !18255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bin_str* [ null, %cond.true ], [ %9, %cond.false ], !dbg !18255
  %10 = bitcast %struct.bin_str* %cond to i8*, !dbg !18255
  %11 = load i32, i32* %n.addr, align 4, !dbg !18257, !tbaa !2468
  %add = add nsw i32 %11, 1, !dbg !18258
  %conv = sext i32 %add to i64, !dbg !18259
  %mul = mul i64 %conv, 16, !dbg !18260
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !18261
  %12 = bitcast i8* %call7 to %struct.bin_str*, !dbg !18261
  store %struct.bin_str* %12, %struct.bin_str** %sv, align 8, !dbg !18262, !tbaa !2474
  store %struct.bin_str* %12, %struct.bin_str** @slotvec, align 8, !dbg !18263, !tbaa !2474
  %13 = load i8, i8* %preallocated, align 1, !dbg !18264, !tbaa !2493
  %tobool8 = trunc i8 %13 to i1, !dbg !18264
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !18266

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18267, !tbaa !2474
  %15 = bitcast %struct.bin_str* %14 to i8*, !dbg !18268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.bin_str* @slotvec0 to i8*), i64 16, i1 false), !dbg !18268, !tbaa.struct !18269
  br label %if.end10, !dbg !18270

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18271, !tbaa !2474
  %17 = load i32, i32* @nslots, align 4, !dbg !18272, !tbaa !2468
  %idx.ext = sext i32 %17 to i64, !dbg !18273
  %add.ptr = getelementptr inbounds %struct.bin_str, %struct.bin_str* %16, i64 %idx.ext, !dbg !18273
  %18 = bitcast %struct.bin_str* %add.ptr to i8*, !dbg !18274
  %19 = load i32, i32* %n.addr, align 4, !dbg !18275, !tbaa !2468
  %add11 = add nsw i32 %19, 1, !dbg !18276
  %20 = load i32, i32* @nslots, align 4, !dbg !18277, !tbaa !2468
  %sub = sub nsw i32 %add11, %20, !dbg !18278
  %conv12 = sext i32 %sub to i64, !dbg !18279
  %mul13 = mul i64 %conv12, 16, !dbg !18280
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !18274
  %21 = load i32, i32* %n.addr, align 4, !dbg !18281, !tbaa !2468
  %add14 = add nsw i32 %21, 1, !dbg !18282
  store i32 %add14, i32* @nslots, align 4, !dbg !18283, !tbaa !2468
  br label %if.end15, !dbg !18284

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !18285, metadata !DIExpression()), !dbg !18287
  %22 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18288, !tbaa !2474
  %23 = load i32, i32* %n.addr, align 4, !dbg !18289, !tbaa !2468
  %idxprom = sext i32 %23 to i64, !dbg !18288
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %22, i64 %idxprom, !dbg !18288, !ctir !1475
  %size16 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !18290, !ctir !1476
  %24 = load i64, i64* %size16, align 8, !dbg !18290, !tbaa !18194, !ctir !149
  store i64 %24, i64* %size, align 8, !dbg !18287, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %val, metadata !18291, metadata !DIExpression()), !dbg !18292
  %25 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18293, !tbaa !2474
  %26 = load i32, i32* %n.addr, align 4, !dbg !18294, !tbaa !2468
  %idxprom17 = sext i32 %26 to i64, !dbg !18293
  %arrayidx18 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %25, i64 %idxprom17, !dbg !18293, !ctir !1475
  %val19 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx18, i32 0, i32 1, !dbg !18295, !ctir !1476
  %27 = load i8*, i8** %val19, align 8, !dbg !18295, !tbaa !18177, !ctir !143
  store i8* %27, i8** %val, align 8, !dbg !18292, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18296, metadata !DIExpression()), !dbg !18297
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18298, !tbaa !2474
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !18299, !ctir !1459
  %29 = load i32, i32* %flags20, align 4, !dbg !18299, !tbaa !17099, !ctir !27
  %or = or i32 %29, 1, !dbg !18300
  store i32 %or, i32* %flags, align 4, !dbg !18297, !tbaa !2468
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !18301, metadata !DIExpression()), !dbg !18302
  %30 = load i8*, i8** %val, align 8, !dbg !18303, !tbaa !2474
  %31 = load i64, i64* %size, align 8, !dbg !18304, !tbaa !2611
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !18305, !tbaa !2474
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !18306, !tbaa !2611
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18307, !tbaa !2474
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !18308, !ctir !1459
  %35 = load i32, i32* %style, align 8, !dbg !18308, !tbaa !17031, !ctir !95
  %36 = load i32, i32* %flags, align 4, !dbg !18309, !tbaa !2468
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18310, !tbaa !2474
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !18311, !ctir !1459
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18310
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18312, !tbaa !2474
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !18313, !ctir !1459
  %39 = load i8*, i8** %left_quote, align 8, !dbg !18313, !tbaa !17132, !ctir !146
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18314, !tbaa !2474
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !18315, !ctir !1459
  %41 = load i8*, i8** %right_quote, align 8, !dbg !18315, !tbaa !17137, !ctir !146
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !18316
  store i64 %call21, i64* %qsize, align 8, !dbg !18302, !tbaa !2611
  %42 = load i64, i64* %size, align 8, !dbg !18317, !tbaa !2611
  %43 = load i64, i64* %qsize, align 8, !dbg !18319, !tbaa !2611
  %cmp22 = icmp ule i64 %42, %43, !dbg !18320
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !18321

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !18322, !tbaa !2611
  %add25 = add i64 %44, 1, !dbg !18324
  store i64 %add25, i64* %size, align 8, !dbg !18325, !tbaa !2611
  %45 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18326, !tbaa !2474
  %46 = load i32, i32* %n.addr, align 4, !dbg !18327, !tbaa !2468
  %idxprom26 = sext i32 %46 to i64, !dbg !18326
  %arrayidx27 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %45, i64 %idxprom26, !dbg !18326, !ctir !1475
  %size28 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx27, i32 0, i32 0, !dbg !18328, !ctir !1476
  store i64 %add25, i64* %size28, align 8, !dbg !18329, !tbaa !18194, !ctir !149
  %47 = load i8*, i8** %val, align 8, !dbg !18330, !tbaa !2474
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18332
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !18333

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !18334, !tbaa !2474
  call void @free(i8* %48) #13, !dbg !18335
  br label %if.end32, !dbg !18335

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !18336, !tbaa !2611
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !18337
  store i8* %call33, i8** %val, align 8, !dbg !18338, !tbaa !2474
  %50 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18339, !tbaa !2474
  %51 = load i32, i32* %n.addr, align 4, !dbg !18340, !tbaa !2468
  %idxprom34 = sext i32 %51 to i64, !dbg !18339
  %arrayidx35 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %50, i64 %idxprom34, !dbg !18339, !ctir !1475
  %val36 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx35, i32 0, i32 1, !dbg !18341, !ctir !1476
  store i8* %call33, i8** %val36, align 8, !dbg !18342, !tbaa !18177, !ctir !143
  %52 = load i8*, i8** %val, align 8, !dbg !18343, !tbaa !2474
  %53 = load i64, i64* %size, align 8, !dbg !18344, !tbaa !2611
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !18345, !tbaa !2474
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !18346, !tbaa !2611
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18347, !tbaa !2474
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !18348, !ctir !1459
  %57 = load i32, i32* %style37, align 8, !dbg !18348, !tbaa !17031, !ctir !95
  %58 = load i32, i32* %flags, align 4, !dbg !18349, !tbaa !2468
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18350, !tbaa !2474
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !18351, !ctir !1459
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !18350
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18352, !tbaa !2474
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !18353, !ctir !1459
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !18353, !tbaa !17132, !ctir !146
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18354, !tbaa !2474
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !18355, !ctir !1459
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !18355, !tbaa !17137, !ctir !146
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !18356
  br label %if.end43, !dbg !18357

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !18358, !tbaa !2468
  %call44 = call i32* @__errno_location() #17, !dbg !18359
  store i32 %64, i32* %call44, align 4, !dbg !18360, !tbaa !2468, !ctir !27
  %65 = load i8*, i8** %val, align 8, !dbg !18361, !tbaa !2474
  ret i8* %65, !dbg !18362
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18363 !ctir !1482 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18364, metadata !DIExpression()), !dbg !18365
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18366, metadata !DIExpression()), !dbg !18367
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18368, metadata !DIExpression()), !dbg !18369
  %0 = load i32, i32* %n.addr, align 4, !dbg !18370, !tbaa !2468
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18371, !tbaa !2474
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18372, !tbaa !2611
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !18373
  ret i8* %call, !dbg !18374
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #0 !dbg !18375 !ctir !560 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18376, metadata !DIExpression()), !dbg !18377
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18378, !tbaa !2474
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !18379
  ret i8* %call, !dbg !18380
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #0 !dbg !18381 !ctir !1484 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18382, metadata !DIExpression()), !dbg !18383
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18384, metadata !DIExpression()), !dbg !18385
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18386, !tbaa !2474
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18387, !tbaa !2611
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !18388
  ret i8* %call, !dbg !18389
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #0 !dbg !18390 !ctir !1486 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %s.addr = alloca i32, align 4, !ctir !95
  %arg.addr = alloca i8*, align 8, !ctir !146
  %o = alloca %struct.quoting_options, align 8, !ctir !1459
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18391, metadata !DIExpression()), !dbg !18392
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18393, metadata !DIExpression()), !dbg !18394
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18395, metadata !DIExpression()), !dbg !18396
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18397, metadata !DIExpression()), !dbg !18398
  %0 = load i32, i32* %s.addr, align 4, !dbg !18399, !tbaa !2529
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18400
  %1 = load i32, i32* %n.addr, align 4, !dbg !18401, !tbaa !2468
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18402, !tbaa !2474
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !18403
  ret i8* %call, !dbg !18404
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #0 !dbg !18405 !ctir !1530 {
entry:
  %style.addr = alloca i32, align 4, !ctir !95
  store i32 %style, i32* %style.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !18406, metadata !DIExpression()), !dbg !18407
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !18408, metadata !DIExpression()), !dbg !18409
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !18409
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !18409
  %1 = load i32, i32* %style.addr, align 4, !dbg !18410, !tbaa !2529
  %cmp = icmp eq i32 %1, 10, !dbg !18412
  br i1 %cmp, label %if.then, label %if.end, !dbg !18413

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18414
  unreachable, !dbg !18414

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !18415, !tbaa !2529
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !18416, !ctir !1447
  store i32 %2, i32* %style1, align 8, !dbg !18417, !tbaa !17031, !ctir !95
  ret void, !dbg !18418
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18419 !ctir !1488 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %s.addr = alloca i32, align 4, !ctir !95
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %o = alloca %struct.quoting_options, align 8, !ctir !1459
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18420, metadata !DIExpression()), !dbg !18421
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18422, metadata !DIExpression()), !dbg !18423
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18424, metadata !DIExpression()), !dbg !18425
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18426, metadata !DIExpression()), !dbg !18427
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18428, metadata !DIExpression()), !dbg !18429
  %0 = load i32, i32* %s.addr, align 4, !dbg !18430, !tbaa !2529
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18431
  %1 = load i32, i32* %n.addr, align 4, !dbg !18432, !tbaa !2468
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18433, !tbaa !2474
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18434, !tbaa !2611
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !18435
  ret i8* %call, !dbg !18436
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #0 !dbg !18437 !ctir !1490 {
entry:
  %s.addr = alloca i32, align 4, !ctir !95
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18438, metadata !DIExpression()), !dbg !18439
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18440, metadata !DIExpression()), !dbg !18441
  %0 = load i32, i32* %s.addr, align 4, !dbg !18442, !tbaa !2529
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18443, !tbaa !2474
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !18444
  ret i8* %call, !dbg !18445
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18446 !ctir !1492 {
entry:
  %s.addr = alloca i32, align 4, !ctir !95
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18447, metadata !DIExpression()), !dbg !18448
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18449, metadata !DIExpression()), !dbg !18450
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18451, metadata !DIExpression()), !dbg !18452
  %0 = load i32, i32* %s.addr, align 4, !dbg !18453, !tbaa !2529
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18454, !tbaa !2474
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18455, !tbaa !2611
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !18456
  ret i8* %call, !dbg !18457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #0 !dbg !18458 !ctir !1494 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %ch.addr = alloca i8, align 1, !ctir !144
  %options = alloca %struct.quoting_options, align 8, !ctir !1447
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18459, metadata !DIExpression()), !dbg !18460
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18461, metadata !DIExpression()), !dbg !18462
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18463, metadata !DIExpression()), !dbg !18464
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18465, metadata !DIExpression()), !dbg !18466
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !18467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18467, !tbaa.struct !18468
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18469, !tbaa !2529
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !18470
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18471, !tbaa !2474
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18472, !tbaa !2611
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !18473
  ret i8* %call1, !dbg !18474
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #0 !dbg !18475 !ctir !1496 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %ch.addr = alloca i8, align 1, !ctir !144
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18476, metadata !DIExpression()), !dbg !18477
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18478, metadata !DIExpression()), !dbg !18479
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18480, !tbaa !2474
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18481, !tbaa !2529
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !18482
  ret i8* %call, !dbg !18483
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #0 !dbg !18484 !ctir !560 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18485, metadata !DIExpression()), !dbg !18486
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18487, !tbaa !2474
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !18488
  ret i8* %call, !dbg !18489
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #0 !dbg !18490 !ctir !1484 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18491, metadata !DIExpression()), !dbg !18492
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18493, metadata !DIExpression()), !dbg !18494
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18495, !tbaa !2474
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18496, !tbaa !2611
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !18497
  ret i8* %call, !dbg !18498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #0 !dbg !18499 !ctir !1486 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %s.addr = alloca i32, align 4, !ctir !95
  %arg.addr = alloca i8*, align 8, !ctir !146
  %options = alloca %struct.quoting_options, align 8, !ctir !1447
  %tmp = alloca %struct.quoting_options, align 8, !ctir !1447
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18500, metadata !DIExpression()), !dbg !18501
  store i32 %s, i32* %s.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18502, metadata !DIExpression()), !dbg !18503
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18504, metadata !DIExpression()), !dbg !18505
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18506, metadata !DIExpression()), !dbg !18507
  %0 = load i32, i32* %s.addr, align 4, !dbg !18508, !tbaa !2529
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !18509
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !18509
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !18509
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !18509, !tbaa.struct !18468
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !18510
  %3 = load i32, i32* %n.addr, align 4, !dbg !18511, !tbaa !2468
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18512, !tbaa !2474
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !18513
  ret i8* %call1, !dbg !18514
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18515 !ctir !1498 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %left_quote.addr = alloca i8*, align 8, !ctir !146
  %right_quote.addr = alloca i8*, align 8, !ctir !146
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18516, metadata !DIExpression()), !dbg !18517
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18518, metadata !DIExpression()), !dbg !18519
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18520, metadata !DIExpression()), !dbg !18521
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18522, metadata !DIExpression()), !dbg !18523
  %0 = load i32, i32* %n.addr, align 4, !dbg !18524, !tbaa !2468
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18525, !tbaa !2474
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18526, !tbaa !2474
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !18527, !tbaa !2474
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !18528
  ret i8* %call, !dbg !18529
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18530 !ctir !1500 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %left_quote.addr = alloca i8*, align 8, !ctir !146
  %right_quote.addr = alloca i8*, align 8, !ctir !146
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  %o = alloca %struct.quoting_options, align 8, !ctir !1447
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18531, metadata !DIExpression()), !dbg !18532
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18533, metadata !DIExpression()), !dbg !18534
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18535, metadata !DIExpression()), !dbg !18536
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18537, metadata !DIExpression()), !dbg !18538
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18539, metadata !DIExpression()), !dbg !18540
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18541, metadata !DIExpression()), !dbg !18542
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !18543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18543, !tbaa.struct !18468
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18544, !tbaa !2474
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18545, !tbaa !2474
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !18546
  %3 = load i32, i32* %n.addr, align 4, !dbg !18547, !tbaa !2468
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18548, !tbaa !2474
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !18549, !tbaa !2611
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !18550
  ret i8* %call, !dbg !18551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18552 !ctir !1502 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !146
  %right_quote.addr = alloca i8*, align 8, !ctir !146
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18553, metadata !DIExpression()), !dbg !18554
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18555, metadata !DIExpression()), !dbg !18556
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18557, metadata !DIExpression()), !dbg !18558
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18559, !tbaa !2474
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18560, !tbaa !2474
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18561, !tbaa !2474
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !18562
  ret i8* %call, !dbg !18563
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18564 !ctir !1504 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !146
  %right_quote.addr = alloca i8*, align 8, !ctir !146
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18565, metadata !DIExpression()), !dbg !18566
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18567, metadata !DIExpression()), !dbg !18568
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18569, metadata !DIExpression()), !dbg !18570
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18571, metadata !DIExpression()), !dbg !18572
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18573, !tbaa !2474
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18574, !tbaa !2474
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18575, !tbaa !2474
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18576, !tbaa !2611
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !18577
  ret i8* %call, !dbg !18578
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18579 !ctir !1506 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18580, metadata !DIExpression()), !dbg !18581
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18582, metadata !DIExpression()), !dbg !18583
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18584, metadata !DIExpression()), !dbg !18585
  %0 = load i32, i32* %n.addr, align 4, !dbg !18586, !tbaa !2468
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18587, !tbaa !2474
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18588, !tbaa !2611
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !18589
  ret i8* %call, !dbg !18590
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #0 !dbg !18591 !ctir !1508 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  %argsize.addr = alloca i64, align 8, !ctir !149
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18592, metadata !DIExpression()), !dbg !18593
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18594, metadata !DIExpression()), !dbg !18595
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18596, !tbaa !2474
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18597, !tbaa !2611
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !18598
  ret i8* %call, !dbg !18599
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #0 !dbg !18600 !ctir !1510 {
entry:
  %n.addr = alloca i32, align 4, !ctir !27
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18601, metadata !DIExpression()), !dbg !18602
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18603, metadata !DIExpression()), !dbg !18604
  %0 = load i32, i32* %n.addr, align 4, !dbg !18605, !tbaa !2468
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18606, !tbaa !2474
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !18607
  ret i8* %call, !dbg !18608
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #0 !dbg !18609 !ctir !567 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18610, metadata !DIExpression()), !dbg !18611
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18612, !tbaa !2474
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !18613
  ret i8* %call, !dbg !18614
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #0 !dbg !18615 !ctir !1958 {
entry:
  %source.addr = alloca i8*, align 8, !ctir !146
  %dest.addr = alloca i8*, align 8, !ctir !146
  store i8* %source, i8** %source.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18617, metadata !DIExpression()), !dbg !18618
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18619, metadata !DIExpression()), !dbg !18620
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18621, !tbaa !2474
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18622, !tbaa !2474
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !18623
  ret i1 %call, !dbg !18624
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #0 !dbg !18625 !ctir !1960 {
entry:
  %source_dfd.addr = alloca i32, align 4, !ctir !27
  %source.addr = alloca i8*, align 8, !ctir !146
  %dest_dfd.addr = alloca i32, align 4, !ctir !27
  %dest.addr = alloca i8*, align 8, !ctir !146
  %source_basename = alloca i8*, align 8, !ctir !146
  %dest_basename = alloca i8*, align 8, !ctir !146
  %source_baselen = alloca i64, align 8, !ctir !149
  %dest_baselen = alloca i64, align 8, !ctir !149
  %identical_basenames = alloca i8, align 1, !ctir !141
  %compare_dirs = alloca i8, align 1, !ctir !141
  %same = alloca i8, align 1, !ctir !141
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !18626
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !18626
  %source_dirname = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %dest_dirname = alloca i8*, align 8, !ctir !143
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !18647, metadata !DIExpression()), !dbg !18648
  store i8* %source, i8** %source.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18649, metadata !DIExpression()), !dbg !18650
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !18651, metadata !DIExpression()), !dbg !18652
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18653, metadata !DIExpression()), !dbg !18654
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !18655, metadata !DIExpression()), !dbg !18656
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18657, !tbaa !2474
  %call = call i8* @last_component(i8* %0) #16, !dbg !18658
  store i8* %call, i8** %source_basename, align 8, !dbg !18656, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !18659, metadata !DIExpression()), !dbg !18660
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18661, !tbaa !2474
  %call1 = call i8* @last_component(i8* %1) #16, !dbg !18662
  store i8* %call1, i8** %dest_basename, align 8, !dbg !18660, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !18663, metadata !DIExpression()), !dbg !18664
  %2 = load i8*, i8** %source_basename, align 8, !dbg !18665, !tbaa !2474
  %call2 = call i64 @base_len(i8* %2) #16, !dbg !18666
  store i64 %call2, i64* %source_baselen, align 8, !dbg !18664, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !18667, metadata !DIExpression()), !dbg !18668
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !18669, !tbaa !2474
  %call3 = call i64 @base_len(i8* %3) #16, !dbg !18670
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !18668, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !18671, metadata !DIExpression()), !dbg !18672
  %4 = load i64, i64* %source_baselen, align 8, !dbg !18673, !tbaa !2611
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !18674, !tbaa !2611
  %cmp = icmp eq i64 %4, %5, !dbg !18675
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18676

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !18677, !tbaa !2474
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !18678, !tbaa !2474
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !18679, !tbaa !2611
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #16, !dbg !18680
  %cmp5 = icmp eq i32 %call4, 0, !dbg !18681
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !18682
  %frombool = zext i1 %9 to i8, !dbg !18672
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !18672, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !18683, metadata !DIExpression()), !dbg !18684
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !18685, !tbaa !2493
  %tobool = trunc i8 %10 to i1, !dbg !18685
  %frombool6 = zext i1 %tobool to i8, !dbg !18684
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !18684, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %same, metadata !18686, metadata !DIExpression()), !dbg !18687
  store i8 0, i8* %same, align 1, !dbg !18687, !tbaa !2493
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !18688, !tbaa !2493
  %tobool7 = trunc i8 %11 to i1, !dbg !18688
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !18690

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !18691, metadata !DIExpression()), !dbg !18693
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !18694, metadata !DIExpression()), !dbg !18695
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !18696, metadata !DIExpression()), !dbg !18697
  %12 = load i8*, i8** %source.addr, align 8, !dbg !18698, !tbaa !2474
  %call8 = call i8* @dir_name(i8* %12), !dbg !18699
  store i8* %call8, i8** %source_dirname, align 8, !dbg !18697, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18700, metadata !DIExpression()), !dbg !18701
  store i32 256, i32* %flags, align 4, !dbg !18701, !tbaa !2468
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !18702, !tbaa !2468
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !18704, !tbaa !2474
  %15 = load i32, i32* %flags, align 4, !dbg !18705, !tbaa !2468
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #13, !dbg !18706
  %cmp10 = icmp ne i32 %call9, 0, !dbg !18707
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !18708

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #17, !dbg !18709
  %16 = load i32, i32* %call12, align 4, !dbg !18709, !tbaa !2468, !ctir !27
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !18711, !tbaa !2474
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.418, i64 0, i64 0), i8* %17), !dbg !18712
  br label %if.end, !dbg !18713

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !18714, !tbaa !2474
  call void @free(i8* %18) #13, !dbg !18715
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !18716, metadata !DIExpression()), !dbg !18717
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !18718, !tbaa !2474
  %call13 = call i8* @dir_name(i8* %19), !dbg !18719
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !18717, !tbaa !2474
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !18720, !tbaa !2468
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !18722, !tbaa !2474
  %22 = load i32, i32* %flags, align 4, !dbg !18723, !tbaa !2468
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #13, !dbg !18724
  %cmp15 = icmp ne i32 %call14, 0, !dbg !18725
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !18726

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #17, !dbg !18727
  %23 = load i32, i32* %call17, align 4, !dbg !18727, !tbaa !2468, !ctir !27
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !18729, !tbaa !2474
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.418, i64 0, i64 0), i8* %24), !dbg !18730
  br label %if.end18, !dbg !18731

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !18732, !ctir !18626
  %25 = load i64, i64* %st_ino, align 8, !dbg !18732, !tbaa !4844, !ctir !196
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !18732, !ctir !18626
  %26 = load i64, i64* %st_ino19, align 8, !dbg !18732, !tbaa !4844, !ctir !196
  %cmp20 = icmp eq i64 %25, %26, !dbg !18732
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !18732

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !18732, !ctir !18626
  %27 = load i64, i64* %st_dev, align 8, !dbg !18732, !tbaa !4842, !ctir !194
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !18732, !ctir !18626
  %28 = load i64, i64* %st_dev22, align 8, !dbg !18732, !tbaa !4842, !ctir !194
  %cmp23 = icmp eq i64 %27, %28, !dbg !18732
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !18733
  %frombool25 = zext i1 %29 to i8, !dbg !18734
  store i8 %frombool25, i8* %same, align 1, !dbg !18734, !tbaa !2493
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !18735, !tbaa !2474
  call void @free(i8* %30) #13, !dbg !18736
  br label %if.end26, !dbg !18737

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !18738, !tbaa !2493
  %tobool27 = trunc i8 %31 to i1, !dbg !18738
  ret i1 %tobool27, !dbg !18739
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #0 !dbg !18740 !ctir !1965 {
entry:
  %con.addr = alloca i8**, align 8, !ctir !1967
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18741, metadata !DIExpression()), !dbg !18742
  %call = call i32* @__errno_location() #17, !dbg !18743
  store i32 95, i32* %call, align 4, !dbg !18744, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18745
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #0 !dbg !18746 !ctir !1970 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18747, metadata !DIExpression()), !dbg !18748
  ret void, !dbg !18749
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #0 !dbg !18750 !ctir !1965 {
entry:
  %con.addr = alloca i8**, align 8, !ctir !1967
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18751, metadata !DIExpression()), !dbg !18752
  %call = call i32* @__errno_location() #17, !dbg !18753
  store i32 95, i32* %call, align 4, !dbg !18754, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18755
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #0 !dbg !18756 !ctir !1972 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18757, metadata !DIExpression()), !dbg !18758
  %call = call i32* @__errno_location() #17, !dbg !18759
  store i32 95, i32* %call, align 4, !dbg !18760, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18761
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #0 !dbg !18762 !ctir !1974 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %m.addr = alloca i32, align 4, !ctir !226
  %con.addr = alloca i8**, align 8, !ctir !1967
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18763, metadata !DIExpression()), !dbg !18764
  store i32 %m, i32* %m.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !18765, metadata !DIExpression()), !dbg !18766
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18767, metadata !DIExpression()), !dbg !18768
  %call = call i32* @__errno_location() #17, !dbg !18769
  store i32 95, i32* %call, align 4, !dbg !18770, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18771
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #0 !dbg !18772 !ctir !1976 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %con.addr = alloca i8**, align 8, !ctir !1967
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18773, metadata !DIExpression()), !dbg !18774
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18775, metadata !DIExpression()), !dbg !18776
  %call = call i32* @__errno_location() #17, !dbg !18777
  store i32 95, i32* %call, align 4, !dbg !18778, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18779
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #0 !dbg !18780 !ctir !1976 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %con.addr = alloca i8**, align 8, !ctir !1967
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18781, metadata !DIExpression()), !dbg !18782
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18783, metadata !DIExpression()), !dbg !18784
  %call = call i32* @__errno_location() #17, !dbg !18785
  store i32 95, i32* %call, align 4, !dbg !18786, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18787
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #0 !dbg !18788 !ctir !1978 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !27
  %con.addr = alloca i8**, align 8, !ctir !1967
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18789, metadata !DIExpression()), !dbg !18790
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18791, metadata !DIExpression()), !dbg !18792
  %call = call i32* @__errno_location() #17, !dbg !18793
  store i32 95, i32* %call, align 4, !dbg !18794, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18795
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #0 !dbg !18796 !ctir !1980 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18797, metadata !DIExpression()), !dbg !18798
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18799, metadata !DIExpression()), !dbg !18800
  %call = call i32* @__errno_location() #17, !dbg !18801
  store i32 95, i32* %call, align 4, !dbg !18802, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18803
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #0 !dbg !18804 !ctir !1980 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18805, metadata !DIExpression()), !dbg !18806
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18807, metadata !DIExpression()), !dbg !18808
  %call = call i32* @__errno_location() #17, !dbg !18809
  store i32 95, i32* %call, align 4, !dbg !18810, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18811
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #0 !dbg !18812 !ctir !1982 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !27
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18813, metadata !DIExpression()), !dbg !18814
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  %call = call i32* @__errno_location() #17, !dbg !18817
  store i32 95, i32* %call, align 4, !dbg !18818, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #0 !dbg !18820 !ctir !1972 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18821, metadata !DIExpression()), !dbg !18822
  %call = call i32* @__errno_location() #17, !dbg !18823
  store i32 95, i32* %call, align 4, !dbg !18824, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #0 !dbg !18826 !ctir !1972 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18827, metadata !DIExpression()), !dbg !18828
  %call = call i32* @__errno_location() #17, !dbg !18829
  store i32 95, i32* %call, align 4, !dbg !18830, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18831
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #0 !dbg !18832 !ctir !1972 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1968
  store i8* %con, i8** %con.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18833, metadata !DIExpression()), !dbg !18834
  %call = call i32* @__errno_location() #17, !dbg !18835
  store i32 95, i32* %call, align 4, !dbg !18836, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18837
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #0 !dbg !18838 !ctir !1984 {
entry:
  %scon.addr = alloca i8*, align 8, !ctir !1968
  %tcon.addr = alloca i8*, align 8, !ctir !1968
  %tclass.addr = alloca i16, align 2, !ctir !1986
  %newcon.addr = alloca i8**, align 8, !ctir !1967
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !18839, metadata !DIExpression()), !dbg !18840
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !18841, metadata !DIExpression()), !dbg !18842
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !5852
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !18843, metadata !DIExpression()), !dbg !18844
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !18845, metadata !DIExpression()), !dbg !18846
  %call = call i32* @__errno_location() #17, !dbg !18847
  store i32 95, i32* %call, align 4, !dbg !18848, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18849
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #0 !dbg !18850 !ctir !1987 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18851, metadata !DIExpression()), !dbg !18852
  %call = call i32* @__errno_location() #17, !dbg !18853
  store i32 95, i32* %call, align 4, !dbg !18854, !tbaa !2468, !ctir !27
  ret i16 0, !dbg !18855
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #0 !dbg !18856 !ctir !714 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !146
  %prefix.addr = alloca i8*, align 8, !ctir !146
  store i8* %path, i8** %path.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !18857, metadata !DIExpression()), !dbg !18858
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !18859, metadata !DIExpression()), !dbg !18860
  %call = call i32* @__errno_location() #17, !dbg !18861
  store i32 95, i32* %call, align 4, !dbg !18862, !tbaa !2468, !ctir !27
  ret i32 -1, !dbg !18863
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !18864 !ctir !1992 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18866, metadata !DIExpression()), !dbg !18867
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18868, !tbaa !2474
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18868, !ctir !1995
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_atim, i32 0, i32 1, !dbg !18869, !ctir !2010
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18869, !tbaa !18870, !ctir !217
  ret i64 %1, !dbg !18871
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !18872 !ctir !1992 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18873, metadata !DIExpression()), !dbg !18874
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18875, !tbaa !2474
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18875, !ctir !1995
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_ctim, i32 0, i32 1, !dbg !18876, !ctir !2010
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18876, !tbaa !18877, !ctir !217
  ret i64 %1, !dbg !18878
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !18879 !ctir !1992 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18880, metadata !DIExpression()), !dbg !18881
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18882, !tbaa !2474
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18882, !ctir !1995
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_mtim, i32 0, i32 1, !dbg !18883, !ctir !2010
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18883, !tbaa !18884, !ctir !217
  ret i64 %1, !dbg !18885
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !18886 !ctir !1992 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18887, metadata !DIExpression()), !dbg !18888
  ret i64 0, !dbg !18889
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !18890 !ctir !2017 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !2010
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18891, metadata !DIExpression()), !dbg !18892
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18893, !tbaa !2474
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18893, !ctir !1995
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18893
  %2 = bitcast %struct.dev_ino* %st_atim to i8*, !dbg !18893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18893, !tbaa.struct !4772
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18894
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18894
  ret { i64, i64 } %4, !dbg !18894
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !18895 !ctir !2017 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !2010
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18896, metadata !DIExpression()), !dbg !18897
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18898, !tbaa !2474
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18898, !ctir !1995
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18898
  %2 = bitcast %struct.dev_ino* %st_ctim to i8*, !dbg !18898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18898, !tbaa.struct !4772
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18899
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18899
  ret { i64, i64 } %4, !dbg !18899
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !18900 !ctir !2017 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !2010
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18901, metadata !DIExpression()), !dbg !18902
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18903, !tbaa !2474
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18903, !ctir !1995
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18903
  %2 = bitcast %struct.dev_ino* %st_mtim to i8*, !dbg !18903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18903, !tbaa.struct !4772
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18904
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18904
  ret { i64, i64 } %4, !dbg !18904
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !18905 !ctir !2017 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !2010
  %st.addr = alloca %struct.stat*, align 8, !ctir !1994
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18906, metadata !DIExpression()), !dbg !18907
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18908, metadata !DIExpression()), !dbg !18909
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18910, !ctir !2010
  store i64 -1, i64* %tv_sec, align 8, !dbg !18911, !tbaa !2497, !ctir !164
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18912, !ctir !2010
  store i64 -1, i64* %tv_nsec, align 8, !dbg !18913, !tbaa !2501, !ctir !217
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18914
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !18914
  ret { i64, i64 } %1, !dbg !18914
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #0 !dbg !18915 !ctir !2019 {
entry:
  %result.addr = alloca i32, align 4, !ctir !27
  %st.addr = alloca %struct.stat*, align 8, !ctir !2021
  store i32 %result, i32* %result.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !18916, metadata !DIExpression()), !dbg !18917
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18918, metadata !DIExpression()), !dbg !18919
  %0 = load i32, i32* %result.addr, align 4, !dbg !18920, !tbaa !2468
  ret i32 %0, !dbg !18921
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @make_timespec(i64 %s, i64 %ns) #0 !dbg !18922 !ctir !2025 {
entry:
  %retval = alloca %struct.dev_ino, align 8, !ctir !2027
  %s.addr = alloca i64, align 8, !ctir !162
  %ns.addr = alloca i64, align 8, !ctir !166
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18924, metadata !DIExpression()), !dbg !18925
  store i64 %ns, i64* %ns.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !18926, metadata !DIExpression()), !dbg !18927
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18928, metadata !DIExpression()), !dbg !18929
  %0 = load i64, i64* %s.addr, align 8, !dbg !18930, !tbaa !2611
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18931, !ctir !2027
  store i64 %0, i64* %tv_sec, align 8, !dbg !18932, !tbaa !2497, !ctir !164
  %1 = load i64, i64* %ns.addr, align 8, !dbg !18933, !tbaa !2611
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18934, !ctir !2027
  store i64 %1, i64* %tv_nsec, align 8, !dbg !18935, !tbaa !2501, !ctir !217
  %2 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18936
  %3 = load { i64, i64 }, { i64, i64 }* %2, align 8, !dbg !18936
  ret { i64, i64 } %3, !dbg !18936
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_cmp(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) #9 !dbg !18937 !ctir !2031 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %a = alloca %struct.dev_ino, align 8, !ctir !2027
  %b = alloca %struct.dev_ino, align 8, !ctir !2027
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  %3 = bitcast %struct.dev_ino* %b to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %b.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %b.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18938, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %b, metadata !18940, metadata !DIExpression()), !dbg !18941
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18942, !ctir !2027
  %6 = load i64, i64* %tv_sec, align 8, !dbg !18942, !tbaa !2497, !ctir !164
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !18944, !ctir !2027
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !18944, !tbaa !2497, !ctir !164
  %cmp = icmp slt i64 %6, %7, !dbg !18945
  br i1 %cmp, label %if.then, label %if.end, !dbg !18946

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !18947
  br label %return, !dbg !18947

if.end:                                           ; preds = %entry
  %tv_sec2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18948, !ctir !2027
  %8 = load i64, i64* %tv_sec2, align 8, !dbg !18948, !tbaa !2497, !ctir !164
  %tv_sec3 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !18950, !ctir !2027
  %9 = load i64, i64* %tv_sec3, align 8, !dbg !18950, !tbaa !2497, !ctir !164
  %cmp4 = icmp sgt i64 %8, %9, !dbg !18951
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18952

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !18953
  br label %return, !dbg !18953

if.end6:                                          ; preds = %if.end
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18954, !ctir !2027
  %10 = load i64, i64* %tv_nsec, align 8, !dbg !18954, !tbaa !2501, !ctir !217
  %cmp7 = icmp sle i64 -1, %10, !dbg !18954
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !18954

land.lhs.true:                                    ; preds = %if.end6
  %tv_nsec8 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18954, !ctir !2027
  %11 = load i64, i64* %tv_nsec8, align 8, !dbg !18954, !tbaa !2501, !ctir !217
  %cmp9 = icmp sle i64 %11, 2000000000, !dbg !18954
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !18954

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !18954

cond.false:                                       ; preds = %land.lhs.true, %if.end6
  unreachable, !dbg !18954

unreachable.cont:                                 ; No predecessors!
  br label %cond.end, !dbg !18954

cond.end:                                         ; preds = %unreachable.cont, %cond.true
  %tv_nsec10 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18955, !ctir !2027
  %12 = load i64, i64* %tv_nsec10, align 8, !dbg !18955, !tbaa !2501, !ctir !217
  %cmp11 = icmp sle i64 -1, %12, !dbg !18955
  br i1 %cmp11, label %land.lhs.true12, label %cond.false16, !dbg !18955

land.lhs.true12:                                  ; preds = %cond.end
  %tv_nsec13 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18955, !ctir !2027
  %13 = load i64, i64* %tv_nsec13, align 8, !dbg !18955, !tbaa !2501, !ctir !217
  %cmp14 = icmp sle i64 %13, 2000000000, !dbg !18955
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !18955

cond.true15:                                      ; preds = %land.lhs.true12
  br label %cond.end18, !dbg !18955

cond.false16:                                     ; preds = %land.lhs.true12, %cond.end
  unreachable, !dbg !18955

unreachable.cont17:                               ; No predecessors!
  br label %cond.end18, !dbg !18955

cond.end18:                                       ; preds = %unreachable.cont17, %cond.true15
  %tv_nsec19 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18956, !ctir !2027
  %14 = load i64, i64* %tv_nsec19, align 8, !dbg !18956, !tbaa !2501, !ctir !217
  %tv_nsec20 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18957, !ctir !2027
  %15 = load i64, i64* %tv_nsec20, align 8, !dbg !18957, !tbaa !2501, !ctir !217
  %sub = sub nsw i64 %14, %15, !dbg !18958
  %conv = trunc i64 %sub to i32, !dbg !18959
  store i32 %conv, i32* %retval, align 4, !dbg !18960
  br label %return, !dbg !18960

return:                                           ; preds = %cond.end18, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !18961
  ret i32 %16, !dbg !18961
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_sign(i64 %a.coerce0, i64 %a.coerce1) #9 !dbg !18962 !ctir !2033 {
entry:
  %a = alloca %struct.dev_ino, align 8, !ctir !2027
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18963, metadata !DIExpression()), !dbg !18964
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18965, !ctir !2027
  %3 = load i64, i64* %tv_sec, align 8, !dbg !18965, !tbaa !2497, !ctir !164
  %cmp = icmp slt i64 %3, 0, !dbg !18966
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18967

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !18967

cond.false:                                       ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18968, !ctir !2027
  %4 = load i64, i64* %tv_sec1, align 8, !dbg !18968, !tbaa !2497, !ctir !164
  %tobool = icmp ne i64 %4, 0, !dbg !18969
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !18970

lor.rhs:                                          ; preds = %cond.false
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18971, !ctir !2027
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !18971, !tbaa !2501, !ctir !217
  %tobool2 = icmp ne i64 %5, 0, !dbg !18970
  br label %lor.end, !dbg !18970

lor.end:                                          ; preds = %lor.rhs, %cond.false
  %6 = phi i1 [ true, %cond.false ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !18970
  br label %cond.end, !dbg !18967

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %lor.ext, %lor.end ], !dbg !18967
  ret i32 %cond, !dbg !18972
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timespectod(i64 %a.coerce0, i64 %a.coerce1) #0 !dbg !18973 !ctir !2035 {
entry:
  %a = alloca %struct.dev_ino, align 8, !ctir !2027
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18974, metadata !DIExpression()), !dbg !18975
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18976, !ctir !2027
  %3 = load i64, i64* %tv_sec, align 8, !dbg !18976, !tbaa !2497, !ctir !164
  %conv = sitofp i64 %3 to double, !dbg !18977
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18978, !ctir !2027
  %4 = load i64, i64* %tv_nsec, align 8, !dbg !18978, !tbaa !2501, !ctir !217
  %conv1 = sitofp i64 %4 to double, !dbg !18979
  %div = fdiv double %conv1, 1.000000e+09, !dbg !18980
  %add = fadd double %conv, %div, !dbg !18981
  ret double %add, !dbg !18982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #0 !dbg !18983 !ctir !2041 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2043
  %command_name.addr = alloca i8*, align 8, !ctir !146
  %package.addr = alloca i8*, align 8, !ctir !146
  %version.addr = alloca i8*, align 8, !ctir !146
  %authors.addr = alloca i8**, align 8, !ctir !555
  %n_authors.addr = alloca i64, align 8, !ctir !149
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18985, metadata !DIExpression()), !dbg !18986
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18987, metadata !DIExpression()), !dbg !18988
  store i8* %package, i8** %package.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18989, metadata !DIExpression()), !dbg !18990
  store i8* %version, i8** %version.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18991, metadata !DIExpression()), !dbg !18992
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18993, metadata !DIExpression()), !dbg !18994
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18995, metadata !DIExpression()), !dbg !18996
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18997, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !18997
  br i1 %tobool, label %if.then, label %if.else, !dbg !18999

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19000, !tbaa !2474
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !19001, !tbaa !2474
  %3 = load i8*, i8** %package.addr, align 8, !dbg !19002, !tbaa !2474
  %4 = load i8*, i8** %version.addr, align 8, !dbg !19003, !tbaa !2474
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.433, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !19004
  br label %if.end, !dbg !19004

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19005, !tbaa !2474
  %6 = load i8*, i8** %package.addr, align 8, !dbg !19006, !tbaa !2474
  %7 = load i8*, i8** %version.addr, align 8, !dbg !19007, !tbaa !2474
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.434, i64 0, i64 0), i8* %6, i8* %7), !dbg !19008
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19009, !tbaa !2474
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.435, i64 0, i64 0)) #13, !dbg !19010
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !19011
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19012, !tbaa !2474
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.436, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !19012
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19013, !tbaa !2474
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.437, i64 0, i64 0)) #13, !dbg !19014
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.438, i64 0, i64 0)), !dbg !19015
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19016, !tbaa !2474
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.436, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !19016
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !19017, !tbaa !2611
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !19018

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !19019

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19021, !tbaa !2474
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.439, i64 0, i64 0)) #13, !dbg !19022
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !19023, !tbaa !2474
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !19023, !ctir !555
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !19023, !tbaa !2474
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !19024
  br label %sw.epilog, !dbg !19025

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19026, !tbaa !2474
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.440, i64 0, i64 0)) #13, !dbg !19027
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !19028, !tbaa !2474
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !19028, !ctir !555
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !19028, !tbaa !2474
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !19029, !tbaa !2474
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !19029, !ctir !555
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !19029, !tbaa !2474
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !19030
  br label %sw.epilog, !dbg !19031

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19032, !tbaa !2474
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.441, i64 0, i64 0)) #13, !dbg !19033
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !19034, !tbaa !2474
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !19034, !ctir !555
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !19034, !tbaa !2474
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !19035, !tbaa !2474
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !19035, !ctir !555
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !19035, !tbaa !2474
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !19036, !tbaa !2474
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !19036, !ctir !555
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !19036, !tbaa !2474
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !19037
  br label %sw.epilog, !dbg !19038

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19039, !tbaa !2474
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.442, i64 0, i64 0)) #13, !dbg !19040
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !19041, !tbaa !2474
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !19041, !ctir !555
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !19041, !tbaa !2474
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !19042, !tbaa !2474
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !19042, !ctir !555
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !19042, !tbaa !2474
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !19043, !tbaa !2474
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !19043, !ctir !555
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !19043, !tbaa !2474
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !19044, !tbaa !2474
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !19044, !ctir !555
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !19044, !tbaa !2474
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !19045
  br label %sw.epilog, !dbg !19046

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19047, !tbaa !2474
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.443, i64 0, i64 0)) #13, !dbg !19048
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !19049, !tbaa !2474
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !19049, !ctir !555
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !19049, !tbaa !2474
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !19050, !tbaa !2474
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !19050, !ctir !555
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !19050, !tbaa !2474
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !19051, !tbaa !2474
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !19051, !ctir !555
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !19051, !tbaa !2474
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !19052, !tbaa !2474
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !19052, !ctir !555
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !19052, !tbaa !2474
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !19053, !tbaa !2474
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !19053, !ctir !555
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !19053, !tbaa !2474
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !19054
  br label %sw.epilog, !dbg !19055

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19056, !tbaa !2474
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.444, i64 0, i64 0)) #13, !dbg !19057
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !19058, !tbaa !2474
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !19058, !ctir !555
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !19058, !tbaa !2474
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !19059, !tbaa !2474
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !19059, !ctir !555
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !19059, !tbaa !2474
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !19060, !tbaa !2474
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !19060, !ctir !555
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !19060, !tbaa !2474
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !19061, !tbaa !2474
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !19061, !ctir !555
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !19061, !tbaa !2474
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !19062, !tbaa !2474
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !19062, !ctir !555
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !19062, !tbaa !2474
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !19063, !tbaa !2474
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !19063, !ctir !555
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !19063, !tbaa !2474
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !19064
  br label %sw.epilog, !dbg !19065

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19066, !tbaa !2474
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.445, i64 0, i64 0)) #13, !dbg !19067
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !19068, !tbaa !2474
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !19068, !ctir !555
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !19068, !tbaa !2474
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !19069, !tbaa !2474
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !19069, !ctir !555
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !19069, !tbaa !2474
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !19070, !tbaa !2474
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !19070, !ctir !555
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !19070, !tbaa !2474
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !19071, !tbaa !2474
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !19071, !ctir !555
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !19071, !tbaa !2474
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !19072, !tbaa !2474
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !19072, !ctir !555
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !19072, !tbaa !2474
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !19073, !tbaa !2474
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !19073, !ctir !555
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !19073, !tbaa !2474
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !19074, !tbaa !2474
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !19074, !ctir !555
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !19074, !tbaa !2474
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !19075
  br label %sw.epilog, !dbg !19076

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19077, !tbaa !2474
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.446, i64 0, i64 0)) #13, !dbg !19078
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !19079, !tbaa !2474
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !19079, !ctir !555
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !19079, !tbaa !2474
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !19080, !tbaa !2474
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !19080, !ctir !555
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !19080, !tbaa !2474
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !19081, !tbaa !2474
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !19081, !ctir !555
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !19081, !tbaa !2474
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !19082, !tbaa !2474
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !19082, !ctir !555
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !19082, !tbaa !2474
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !19083, !tbaa !2474
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !19083, !ctir !555
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !19083, !tbaa !2474
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !19084, !tbaa !2474
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !19084, !ctir !555
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !19084, !tbaa !2474
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !19085, !tbaa !2474
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !19085, !ctir !555
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !19085, !tbaa !2474
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !19086, !tbaa !2474
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !19086, !ctir !555
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !19086, !tbaa !2474
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !19087
  br label %sw.epilog, !dbg !19088

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19089, !tbaa !2474
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.447, i64 0, i64 0)) #13, !dbg !19090
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !19091, !tbaa !2474
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !19091, !ctir !555
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !19091, !tbaa !2474
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !19092, !tbaa !2474
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !19092, !ctir !555
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !19092, !tbaa !2474
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !19093, !tbaa !2474
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !19093, !ctir !555
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !19093, !tbaa !2474
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !19094, !tbaa !2474
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !19094, !ctir !555
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !19094, !tbaa !2474
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !19095, !tbaa !2474
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !19095, !ctir !555
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !19095, !tbaa !2474
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !19096, !tbaa !2474
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !19096, !ctir !555
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !19096, !tbaa !2474
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !19097, !tbaa !2474
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !19097, !ctir !555
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !19097, !tbaa !2474
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !19098, !tbaa !2474
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !19098, !ctir !555
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !19098, !tbaa !2474
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !19099, !tbaa !2474
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !19099, !ctir !555
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !19099, !tbaa !2474
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !19100
  br label %sw.epilog, !dbg !19101

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19102, !tbaa !2474
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.448, i64 0, i64 0)) #13, !dbg !19103
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !19104, !tbaa !2474
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !19104, !ctir !555
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !19104, !tbaa !2474
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !19105, !tbaa !2474
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !19105, !ctir !555
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !19105, !tbaa !2474
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !19106, !tbaa !2474
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !19106, !ctir !555
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !19106, !tbaa !2474
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !19107, !tbaa !2474
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !19107, !ctir !555
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !19107, !tbaa !2474
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !19108, !tbaa !2474
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !19108, !ctir !555
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !19108, !tbaa !2474
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !19109, !tbaa !2474
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !19109, !ctir !555
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !19109, !tbaa !2474
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !19110, !tbaa !2474
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !19110, !ctir !555
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !19110, !tbaa !2474
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !19111, !tbaa !2474
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !19111, !ctir !555
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !19111, !tbaa !2474
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !19112, !tbaa !2474
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !19112, !ctir !555
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !19112, !tbaa !2474
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !19113
  br label %sw.epilog, !dbg !19114

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !19115
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #0 !dbg !19116 !ctir !2084 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2043
  %command_name.addr = alloca i8*, align 8, !ctir !146
  %package.addr = alloca i8*, align 8, !ctir !146
  %version.addr = alloca i8*, align 8, !ctir !146
  %authors.addr = alloca i8**, align 8, !ctir !555
  %n_authors = alloca i64, align 8, !ctir !149
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19117, metadata !DIExpression()), !dbg !19118
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19119, metadata !DIExpression()), !dbg !19120
  store i8* %package, i8** %package.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19121, metadata !DIExpression()), !dbg !19122
  store i8* %version, i8** %version.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19123, metadata !DIExpression()), !dbg !19124
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !19125, metadata !DIExpression()), !dbg !19126
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !19127, metadata !DIExpression()), !dbg !19128
  store i64 0, i64* %n_authors, align 8, !dbg !19129, !tbaa !2611
  br label %for.cond, !dbg !19131

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !19132, !tbaa !2474
  %1 = load i64, i64* %n_authors, align 8, !dbg !19134, !tbaa !2611
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !19132, !ctir !555
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !19132, !tbaa !2474
  %tobool = icmp ne i8* %2, null, !dbg !19135
  br i1 %tobool, label %for.body, label %for.end, !dbg !19135

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !19135

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !19136, !tbaa !2611
  %inc = add i64 %3, 1, !dbg !19136
  store i64 %inc, i64* %n_authors, align 8, !dbg !19136, !tbaa !2611
  br label %for.cond, !dbg !19137, !llvm.loop !19138

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19140, !tbaa !2474
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !19141, !tbaa !2474
  %6 = load i8*, i8** %package.addr, align 8, !dbg !19142, !tbaa !2474
  %7 = load i8*, i8** %version.addr, align 8, !dbg !19143, !tbaa !2474
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !19144, !tbaa !2474
  %9 = load i64, i64* %n_authors, align 8, !dbg !19145, !tbaa !2611
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !19146
  ret void, !dbg !19147
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #0 !dbg !19148 !ctir !2086 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2043
  %command_name.addr = alloca i8*, align 8, !ctir !146
  %package.addr = alloca i8*, align 8, !ctir !146
  %version.addr = alloca i8*, align 8, !ctir !146
  %authors.addr = alloca %struct.__va_list_tag*, align 8, !ctir !2088
  %n_authors = alloca i64, align 8, !ctir !149
  %authtab = alloca [10 x i8*], align 16, !ctir !2095
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19149, metadata !DIExpression()), !dbg !19150
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19151, metadata !DIExpression()), !dbg !19152
  store i8* %package, i8** %package.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19153, metadata !DIExpression()), !dbg !19154
  store i8* %version, i8** %version.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19155, metadata !DIExpression()), !dbg !19156
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !19157, metadata !DIExpression()), !dbg !19158
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !19159, metadata !DIExpression()), !dbg !19160
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !19161, metadata !DIExpression()), !dbg !19162
  store i64 0, i64* %n_authors, align 8, !dbg !19163, !tbaa !2611
  br label %for.cond, !dbg !19165

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !19166, !tbaa !2611
  %cmp = icmp ult i64 %0, 10, !dbg !19168
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19169

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !19170, !tbaa !2474
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !19170
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !19170
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !19170
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !19170

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !19170
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !19170
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !19170
  %4 = bitcast i8* %3 to i8**, !dbg !19170
  %5 = add i32 %gp_offset, 8, !dbg !19170
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !19170
  br label %vaarg.end, !dbg !19170

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !19170
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !19170
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !19170
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !19170
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !19170
  br label %vaarg.end, !dbg !19170

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !19170
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !19170
  %8 = load i64, i64* %n_authors, align 8, !dbg !19171, !tbaa !2611
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !19172, !ctir !2095
  store i8* %7, i8** %arrayidx, align 8, !dbg !19173, !tbaa !2474
  %cmp1 = icmp ne i8* %7, null, !dbg !19174
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !19175
  br i1 %9, label %for.body, label %for.end, !dbg !19176

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !19176

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !19177, !tbaa !2611
  %inc = add i64 %10, 1, !dbg !19177
  store i64 %inc, i64* %n_authors, align 8, !dbg !19177, !tbaa !2611
  br label %for.cond, !dbg !19178, !llvm.loop !19179

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19181, !tbaa !2474
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !19182, !tbaa !2474
  %13 = load i8*, i8** %package.addr, align 8, !dbg !19183, !tbaa !2474
  %14 = load i8*, i8** %version.addr, align 8, !dbg !19184, !tbaa !2474
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !19185
  %15 = load i64, i64* %n_authors, align 8, !dbg !19186, !tbaa !2611
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !19187
  ret void, !dbg !19188
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #0 !dbg !19189 !ctir !2096 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2043
  %command_name.addr = alloca i8*, align 8, !ctir !146
  %package.addr = alloca i8*, align 8, !ctir !146
  %version.addr = alloca i8*, align 8, !ctir !146
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2098
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19192, metadata !DIExpression()), !dbg !19193
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19194, metadata !DIExpression()), !dbg !19195
  store i8* %package, i8** %package.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19196, metadata !DIExpression()), !dbg !19197
  store i8* %version, i8** %version.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19198, metadata !DIExpression()), !dbg !19199
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !19200, metadata !DIExpression()), !dbg !19201
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19202
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19202
  call void @llvm.va_start(i8* %arraydecay1), !dbg !19202
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19203, !tbaa !2474
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !19204, !tbaa !2474
  %2 = load i8*, i8** %package.addr, align 8, !dbg !19205, !tbaa !2474
  %3 = load i8*, i8** %version.addr, align 8, !dbg !19206, !tbaa !2474
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19207
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !19208
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19209
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19209
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19209
  ret void, !dbg !19210
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #0 !dbg !19211 !ctir !336 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !19212, !tbaa !2474
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.436, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !19212
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.451, i64 0, i64 0)) #13, !dbg !19213
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.452, i64 0, i64 0)), !dbg !19214
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.453, i64 0, i64 0)) #13, !dbg !19215
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.454, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.455, i64 0, i64 0)), !dbg !19216
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.456, i64 0, i64 0)) #13, !dbg !19217
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.457, i64 0, i64 0)), !dbg !19218
  ret void, !dbg !19219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #0 !dbg !19220 !ctir !2106 {
entry:
  %n.addr = alloca i64, align 8, !ctir !149
  %s.addr = alloca i64, align 8, !ctir !149
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19222, metadata !DIExpression()), !dbg !19223
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19224, metadata !DIExpression()), !dbg !19225
  %0 = load i64, i64* %s.addr, align 8, !dbg !19226, !tbaa !2611
  %div = udiv i64 9223372036854775807, %0, !dbg !19226
  %1 = load i64, i64* %n.addr, align 8, !dbg !19226, !tbaa !2611
  %cmp = icmp ult i64 %div, %1, !dbg !19226
  br i1 %cmp, label %if.then, label %if.end, !dbg !19228

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19229
  unreachable, !dbg !19229

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19230, !tbaa !2611
  %3 = load i64, i64* %s.addr, align 8, !dbg !19231, !tbaa !2611
  %mul = mul i64 %2, %3, !dbg !19232
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !19233
  ret i8* %call, !dbg !19234
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #0 !dbg !19235 !ctir !371 {
entry:
  %n.addr = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19237, metadata !DIExpression()), !dbg !19238
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19239, metadata !DIExpression()), !dbg !19240
  %0 = load i64, i64* %n.addr, align 8, !dbg !19241, !tbaa !2611
  %call = call noalias i8* @malloc(i64 %0) #13, !dbg !19242
  store i8* %call, i8** %p, align 8, !dbg !19240, !tbaa !2474
  %1 = load i8*, i8** %p, align 8, !dbg !19243, !tbaa !2474
  %tobool = icmp ne i8* %1, null, !dbg !19243
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19245

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19246, !tbaa !2611
  %cmp = icmp ne i64 %2, 0, !dbg !19247
  br i1 %cmp, label %if.then, label %if.end, !dbg !19248

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19249
  unreachable, !dbg !19249

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !19250, !tbaa !2474
  ret i8* %3, !dbg !19251
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #0 !dbg !19252 !ctir !2108 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !167
  %n.addr = alloca i64, align 8, !ctir !149
  %s.addr = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19253, metadata !DIExpression()), !dbg !19254
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19255, metadata !DIExpression()), !dbg !19256
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19257, metadata !DIExpression()), !dbg !19258
  %0 = load i64, i64* %s.addr, align 8, !dbg !19259, !tbaa !2611
  %div = udiv i64 9223372036854775807, %0, !dbg !19259
  %1 = load i64, i64* %n.addr, align 8, !dbg !19259, !tbaa !2611
  %cmp = icmp ult i64 %div, %1, !dbg !19259
  br i1 %cmp, label %if.then, label %if.end, !dbg !19261

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19262
  unreachable, !dbg !19262

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19263, !tbaa !2474
  %3 = load i64, i64* %n.addr, align 8, !dbg !19264, !tbaa !2611
  %4 = load i64, i64* %s.addr, align 8, !dbg !19265, !tbaa !2611
  %mul = mul i64 %3, %4, !dbg !19266
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !19267
  ret i8* %call, !dbg !19268
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #0 !dbg !19269 !ctir !375 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %p.addr = alloca i8*, align 8, !ctir !167
  %n.addr = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19270, metadata !DIExpression()), !dbg !19271
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19272, metadata !DIExpression()), !dbg !19273
  %0 = load i64, i64* %n.addr, align 8, !dbg !19274, !tbaa !2611
  %tobool = icmp ne i64 %0, 0, !dbg !19274
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19276

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19277, !tbaa !2474
  %tobool1 = icmp ne i8* %1, null, !dbg !19277
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19278

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19279, !tbaa !2474
  call void @free(i8* %2) #13, !dbg !19281
  store i8* null, i8** %retval, align 8, !dbg !19282
  br label %return, !dbg !19282

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !19283, !tbaa !2474
  %4 = load i64, i64* %n.addr, align 8, !dbg !19284, !tbaa !2611
  %call = call i8* @realloc(i8* %3, i64 %4) #13, !dbg !19285
  store i8* %call, i8** %p.addr, align 8, !dbg !19286, !tbaa !2474
  %5 = load i8*, i8** %p.addr, align 8, !dbg !19287, !tbaa !2474
  %tobool2 = icmp ne i8* %5, null, !dbg !19287
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !19289

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19290, !tbaa !2611
  %tobool4 = icmp ne i64 %6, 0, !dbg !19290
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !19291

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #14, !dbg !19292
  unreachable, !dbg !19292

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !19293, !tbaa !2474
  store i8* %7, i8** %retval, align 8, !dbg !19294
  br label %return, !dbg !19294

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !19295
  ret i8* %8, !dbg !19295
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #0 !dbg !19296 !ctir !2110 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !167
  %pn.addr = alloca i64*, align 8, !ctir !148
  %s.addr = alloca i64, align 8, !ctir !149
  %n = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19297, metadata !DIExpression()), !dbg !19298
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19299, metadata !DIExpression()), !dbg !19300
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19301, metadata !DIExpression()), !dbg !19302
  call void @llvm.dbg.declare(metadata i64* %n, metadata !19303, metadata !DIExpression()), !dbg !19304
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !19305, !tbaa !2474
  %1 = load i64, i64* %0, align 8, !dbg !19306, !tbaa !2611, !ctir !149
  store i64 %1, i64* %n, align 8, !dbg !19304, !tbaa !2611
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19307, !tbaa !2474
  %tobool = icmp ne i8* %2, null, !dbg !19307
  br i1 %tobool, label %if.else, label %if.then, !dbg !19309

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !19310, !tbaa !2611
  %tobool1 = icmp ne i64 %3, 0, !dbg !19310
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19313

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !19314, !tbaa !2611
  %div = udiv i64 128, %4, !dbg !19316
  store i64 %div, i64* %n, align 8, !dbg !19317, !tbaa !2611
  %5 = load i64, i64* %n, align 8, !dbg !19318, !tbaa !2611
  %tobool3 = icmp ne i64 %5, 0, !dbg !19319
  %lnot = xor i1 %tobool3, true, !dbg !19319
  %lnot.ext = zext i1 %lnot to i32, !dbg !19319
  %conv = sext i32 %lnot.ext to i64, !dbg !19319
  %6 = load i64, i64* %n, align 8, !dbg !19320, !tbaa !2611
  %add = add i64 %6, %conv, !dbg !19320
  store i64 %add, i64* %n, align 8, !dbg !19320, !tbaa !2611
  br label %if.end, !dbg !19321

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !19322, !tbaa !2611
  %div4 = udiv i64 9223372036854775807, %7, !dbg !19322
  %8 = load i64, i64* %n, align 8, !dbg !19322, !tbaa !2611
  %cmp = icmp ult i64 %div4, %8, !dbg !19322
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !19324

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !19325
  unreachable, !dbg !19325

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !19326

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !19327, !tbaa !2611
  %div8 = udiv i64 6148914691236517204, %9, !dbg !19330
  %10 = load i64, i64* %n, align 8, !dbg !19331, !tbaa !2611
  %cmp9 = icmp ule i64 %div8, %10, !dbg !19332
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !19333

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #14, !dbg !19334
  unreachable, !dbg !19334

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !19335, !tbaa !2611
  %div13 = udiv i64 %11, 2, !dbg !19336
  %add14 = add i64 %div13, 1, !dbg !19337
  %12 = load i64, i64* %n, align 8, !dbg !19338, !tbaa !2611
  %add15 = add i64 %12, %add14, !dbg !19338
  store i64 %add15, i64* %n, align 8, !dbg !19338, !tbaa !2611
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !19339, !tbaa !2611
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !19340, !tbaa !2474
  store i64 %13, i64* %14, align 8, !dbg !19341, !tbaa !2611, !ctir !149
  %15 = load i8*, i8** %p.addr, align 8, !dbg !19342, !tbaa !2474
  %16 = load i64, i64* %n, align 8, !dbg !19343, !tbaa !2611
  %17 = load i64, i64* %s.addr, align 8, !dbg !19344, !tbaa !2611
  %mul = mul i64 %16, %17, !dbg !19345
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !19346
  ret i8* %call, !dbg !19347
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #0 !dbg !19348 !ctir !2112 {
entry:
  %n.addr = alloca i64, align 8, !ctir !149
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19349, metadata !DIExpression()), !dbg !19350
  %0 = load i64, i64* %n.addr, align 8, !dbg !19351, !tbaa !2611
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19351
  ret i8* %call, !dbg !19352
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #0 !dbg !19353 !ctir !2114 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !167
  %pn.addr = alloca i64*, align 8, !ctir !148
  store i8* %p, i8** %p.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19354, metadata !DIExpression()), !dbg !19355
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19356, metadata !DIExpression()), !dbg !19357
  %0 = load i8*, i8** %p.addr, align 8, !dbg !19358, !tbaa !2474
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !19359, !tbaa !2474
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !19360
  ret i8* %call, !dbg !19361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #0 !dbg !19362 !ctir !371 {
entry:
  %s.addr = alloca i64, align 8, !ctir !149
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19363, metadata !DIExpression()), !dbg !19364
  %0 = load i64, i64* %s.addr, align 8, !dbg !19365, !tbaa !2611
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19366
  %1 = load i64, i64* %s.addr, align 8, !dbg !19367, !tbaa !2611
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !19368
  ret i8* %call, !dbg !19369
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #0 !dbg !19370 !ctir !2106 {
entry:
  %n.addr = alloca i64, align 8, !ctir !149
  %s.addr = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19371, metadata !DIExpression()), !dbg !19372
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19373, metadata !DIExpression()), !dbg !19374
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19375, metadata !DIExpression()), !dbg !19376
  %0 = load i64, i64* %s.addr, align 8, !dbg !19377, !tbaa !2611
  %div = udiv i64 9223372036854775807, %0, !dbg !19377
  %1 = load i64, i64* %n.addr, align 8, !dbg !19377, !tbaa !2611
  %cmp = icmp ult i64 %div, %1, !dbg !19377
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19379

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19380, !tbaa !2611
  %3 = load i64, i64* %s.addr, align 8, !dbg !19381, !tbaa !2611
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #13, !dbg !19382
  store i8* %call, i8** %p, align 8, !dbg !19383, !tbaa !2474
  %tobool = icmp ne i8* %call, null, !dbg !19383
  br i1 %tobool, label %if.end, label %if.then, !dbg !19384

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #14, !dbg !19385
  unreachable, !dbg !19385

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !19386, !tbaa !2474
  ret i8* %4, !dbg !19387
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #0 !dbg !19388 !ctir !2116 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !175
  %s.addr = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19389, metadata !DIExpression()), !dbg !19390
  store i64 %s, i64* %s.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19391, metadata !DIExpression()), !dbg !19392
  %0 = load i64, i64* %s.addr, align 8, !dbg !19393, !tbaa !2611
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19394
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19395, !tbaa !2474
  %2 = load i64, i64* %s.addr, align 8, !dbg !19396, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !19397
  ret i8* %call, !dbg !19398
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #0 !dbg !19399 !ctir !560 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !146
  store i8* %string, i8** %string.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !19400, metadata !DIExpression()), !dbg !19401
  %0 = load i8*, i8** %string.addr, align 8, !dbg !19402, !tbaa !2474
  %1 = load i8*, i8** %string.addr, align 8, !dbg !19403, !tbaa !2474
  %call = call i64 @strlen(i8* %1) #16, !dbg !19404
  %add = add i64 %call, 1, !dbg !19405
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !19406
  ret i8* %call1, !dbg !19407
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #10 !dbg !19408 !ctir !336 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !19410, !tbaa !2468
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.476, i64 0, i64 0)) #13, !dbg !19411
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i64 0, i64 0), i8* %call), !dbg !19412
  call void @abort() #15, !dbg !19413
  unreachable, !dbg !19413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xnumtoumax(i8* %n_str, i32 %base, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19414 !ctir !2124 {
entry:
  %n_str.addr = alloca i8*, align 8, !ctir !146
  %base.addr = alloca i32, align 4, !ctir !27
  %min.addr = alloca i64, align 8, !ctir !168
  %max.addr = alloca i64, align 8, !ctir !168
  %suffixes.addr = alloca i8*, align 8, !ctir !146
  %err.addr = alloca i8*, align 8, !ctir !146
  %err_exit.addr = alloca i32, align 4, !ctir !27
  %s_err = alloca i32, align 4, !ctir !1319
  %tnum = alloca i64, align 8, !ctir !168
  store i8* %n_str, i8** %n_str.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19416, metadata !DIExpression()), !dbg !19417
  store i32 %base, i32* %base.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19418, metadata !DIExpression()), !dbg !19419
  store i64 %min, i64* %min.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19420, metadata !DIExpression()), !dbg !19421
  store i64 %max, i64* %max.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19422, metadata !DIExpression()), !dbg !19423
  store i8* %suffixes, i8** %suffixes.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19424, metadata !DIExpression()), !dbg !19425
  store i8* %err, i8** %err.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19426, metadata !DIExpression()), !dbg !19427
  store i32 %err_exit, i32* %err_exit.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19428, metadata !DIExpression()), !dbg !19429
  call void @llvm.dbg.declare(metadata i32* %s_err, metadata !19430, metadata !DIExpression()), !dbg !19431
  call void @llvm.dbg.declare(metadata i64* %tnum, metadata !19432, metadata !DIExpression()), !dbg !19433
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19434, !tbaa !2474
  %1 = load i32, i32* %base.addr, align 4, !dbg !19435, !tbaa !2468
  %2 = load i8*, i8** %suffixes.addr, align 8, !dbg !19436, !tbaa !2474
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 %1, i64* %tnum, i8* %2), !dbg !19437
  store i32 %call, i32* %s_err, align 4, !dbg !19438, !tbaa !2529
  %3 = load i32, i32* %s_err, align 4, !dbg !19439, !tbaa !2529
  %cmp = icmp eq i32 %3, 0, !dbg !19441
  br i1 %cmp, label %if.then, label %if.else9, !dbg !19442

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %tnum, align 8, !dbg !19443, !tbaa !2611
  %5 = load i64, i64* %min.addr, align 8, !dbg !19446, !tbaa !2611
  %cmp1 = icmp ult i64 %4, %5, !dbg !19447
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !19448

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i64, i64* %max.addr, align 8, !dbg !19449, !tbaa !2611
  %7 = load i64, i64* %tnum, align 8, !dbg !19450, !tbaa !2611
  %cmp2 = icmp ult i64 %6, %7, !dbg !19451
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !19452

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %s_err, align 4, !dbg !19453, !tbaa !2529
  %8 = load i64, i64* %tnum, align 8, !dbg !19455, !tbaa !2611
  %cmp4 = icmp ugt i64 %8, 1073741823, !dbg !19457
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !19458

if.then5:                                         ; preds = %if.then3
  %call6 = call i32* @__errno_location() #17, !dbg !19459
  store i32 75, i32* %call6, align 4, !dbg !19460, !tbaa !2468, !ctir !27
  br label %if.end, !dbg !19459

if.else:                                          ; preds = %if.then3
  %call7 = call i32* @__errno_location() #17, !dbg !19461
  store i32 34, i32* %call7, align 4, !dbg !19462, !tbaa !2468, !ctir !27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end8, !dbg !19463

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  br label %if.end19, !dbg !19464

if.else9:                                         ; preds = %entry
  %9 = load i32, i32* %s_err, align 4, !dbg !19465, !tbaa !2529
  %cmp10 = icmp eq i32 %9, 1, !dbg !19467
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !19468

if.then11:                                        ; preds = %if.else9
  %call12 = call i32* @__errno_location() #17, !dbg !19469
  store i32 75, i32* %call12, align 4, !dbg !19470, !tbaa !2468, !ctir !27
  br label %if.end18, !dbg !19469

if.else13:                                        ; preds = %if.else9
  %10 = load i32, i32* %s_err, align 4, !dbg !19471, !tbaa !2529
  %cmp14 = icmp eq i32 %10, 3, !dbg !19473
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !19474

if.then15:                                        ; preds = %if.else13
  %call16 = call i32* @__errno_location() #17, !dbg !19475
  store i32 0, i32* %call16, align 4, !dbg !19476, !tbaa !2468, !ctir !27
  br label %if.end17, !dbg !19475

if.end17:                                         ; preds = %if.then15, %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then11
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end8
  %11 = load i32, i32* %s_err, align 4, !dbg !19477, !tbaa !2529
  %cmp20 = icmp ne i32 %11, 0, !dbg !19479
  br i1 %cmp20, label %if.then21, label %if.end30, !dbg !19480

if.then21:                                        ; preds = %if.end19
  %12 = load i32, i32* %err_exit.addr, align 4, !dbg !19481, !tbaa !2468
  %tobool = icmp ne i32 %12, 0, !dbg !19481
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19481

cond.true:                                        ; preds = %if.then21
  %13 = load i32, i32* %err_exit.addr, align 4, !dbg !19483, !tbaa !2468
  br label %cond.end, !dbg !19481

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !19481

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 1, %cond.false ], !dbg !19481
  %call22 = call i32* @__errno_location() #17, !dbg !19484
  %14 = load i32, i32* %call22, align 4, !dbg !19484, !tbaa !2468, !ctir !27
  %cmp23 = icmp eq i32 %14, 22, !dbg !19485
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !19484

cond.true24:                                      ; preds = %cond.end
  br label %cond.end27, !dbg !19484

cond.false25:                                     ; preds = %cond.end
  %call26 = call i32* @__errno_location() #17, !dbg !19486
  %15 = load i32, i32* %call26, align 4, !dbg !19486, !tbaa !2468, !ctir !27
  br label %cond.end27, !dbg !19484

cond.end27:                                       ; preds = %cond.false25, %cond.true24
  %cond28 = phi i32 [ 0, %cond.true24 ], [ %15, %cond.false25 ], !dbg !19484
  %16 = load i8*, i8** %err.addr, align 8, !dbg !19487, !tbaa !2474
  %17 = load i8*, i8** %n_str.addr, align 8, !dbg !19488, !tbaa !2474
  %call29 = call i8* @quote(i8* %17), !dbg !19489
  call void (i32, i32, i8*, ...) @error(i32 %cond, i32 %cond28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.480, i64 0, i64 0), i8* %16, i8* %call29), !dbg !19490
  br label %if.end30, !dbg !19491

if.end30:                                         ; preds = %cond.end27, %if.end19
  %18 = load i64, i64* %tnum, align 8, !dbg !19492, !tbaa !2611
  ret i64 %18, !dbg !19493
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xdectoumax(i8* %n_str, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19494 !ctir !2126 {
entry:
  %n_str.addr = alloca i8*, align 8, !ctir !146
  %min.addr = alloca i64, align 8, !ctir !168
  %max.addr = alloca i64, align 8, !ctir !168
  %suffixes.addr = alloca i8*, align 8, !ctir !146
  %err.addr = alloca i8*, align 8, !ctir !146
  %err_exit.addr = alloca i32, align 4, !ctir !27
  store i8* %n_str, i8** %n_str.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19495, metadata !DIExpression()), !dbg !19496
  store i64 %min, i64* %min.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19497, metadata !DIExpression()), !dbg !19498
  store i64 %max, i64* %max.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19499, metadata !DIExpression()), !dbg !19500
  store i8* %suffixes, i8** %suffixes.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19501, metadata !DIExpression()), !dbg !19502
  store i8* %err, i8** %err.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19503, metadata !DIExpression()), !dbg !19504
  store i32 %err_exit, i32* %err_exit.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19505, metadata !DIExpression()), !dbg !19506
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19507, !tbaa !2474
  %1 = load i64, i64* %min.addr, align 8, !dbg !19508, !tbaa !2611
  %2 = load i64, i64* %max.addr, align 8, !dbg !19509, !tbaa !2611
  %3 = load i8*, i8** %suffixes.addr, align 8, !dbg !19510, !tbaa !2474
  %4 = load i8*, i8** %err.addr, align 8, !dbg !19511, !tbaa !2474
  %5 = load i32, i32* %err_exit.addr, align 4, !dbg !19512, !tbaa !2468
  %call = call i64 @xnumtoumax(i8* %0, i32 10, i64 %1, i64 %2, i8* %3, i8* %4, i32 %5), !dbg !19513
  ret i64 %call, !dbg !19514
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgetcwd() #0 !dbg !19515 !ctir !2131 {
entry:
  %cwd = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %cwd, metadata !19517, metadata !DIExpression()), !dbg !19518
  %call = call i8* @getcwd(i8* null, i64 0) #13, !dbg !19519
  store i8* %call, i8** %cwd, align 8, !dbg !19518, !tbaa !2474
  %0 = load i8*, i8** %cwd, align 8, !dbg !19520, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !19520
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19522

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !19523
  %1 = load i32, i32* %call1, align 4, !dbg !19523, !tbaa !2468, !ctir !27
  %cmp = icmp eq i32 %1, 12, !dbg !19524
  br i1 %cmp, label %if.then, label %if.end, !dbg !19525

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19526
  unreachable, !dbg !19526

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %cwd, align 8, !dbg !19527, !tbaa !2474
  ret i8* %2, !dbg !19528
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgethostname() #0 !dbg !19529 !ctir !2131 {
entry:
  %retval = alloca i8*, align 8, !ctir !143
  %hostname = alloca i8*, align 8, !ctir !143
  %size = alloca i64, align 8, !ctir !149
  %size_1 = alloca i64, align 8, !ctir !149
  %saved_errno = alloca i32, align 4, !ctir !27
  %actual_size = alloca i64, align 8, !ctir !149
  %shrinked_hostname = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %hostname, metadata !19531, metadata !DIExpression()), !dbg !19532
  store i8* null, i8** %hostname, align 8, !dbg !19532, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %size, metadata !19533, metadata !DIExpression()), !dbg !19534
  store i64 34, i64* %size, align 8, !dbg !19534, !tbaa !2611
  br label %while.body, !dbg !19535

while.body:                                       ; preds = %entry, %if.end21
  call void @llvm.dbg.declare(metadata i64* %size_1, metadata !19536, metadata !DIExpression()), !dbg !19538
  %0 = load i8*, i8** %hostname, align 8, !dbg !19539, !tbaa !2474
  %call = call i8* @x2realloc(i8* %0, i64* %size), !dbg !19540
  store i8* %call, i8** %hostname, align 8, !dbg !19541, !tbaa !2474
  %1 = load i64, i64* %size, align 8, !dbg !19542, !tbaa !2611
  %sub = sub i64 %1, 1, !dbg !19543
  store i64 %sub, i64* %size_1, align 8, !dbg !19544, !tbaa !2611
  %2 = load i8*, i8** %hostname, align 8, !dbg !19545, !tbaa !2474
  %3 = load i64, i64* %size_1, align 8, !dbg !19546, !tbaa !2611
  %sub1 = sub i64 %3, 1, !dbg !19547
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub1, !dbg !19545, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !19548, !tbaa !2529
  %call2 = call i32* @__errno_location() #17, !dbg !19549
  store i32 0, i32* %call2, align 4, !dbg !19550, !tbaa !2468, !ctir !27
  %4 = load i8*, i8** %hostname, align 8, !dbg !19551, !tbaa !2474
  %5 = load i64, i64* %size_1, align 8, !dbg !19553, !tbaa !2611
  %call3 = call i32 @gethostname(i8* %4, i64 %5) #13, !dbg !19554
  %cmp = icmp eq i32 %call3, 0, !dbg !19555
  br i1 %cmp, label %if.then, label %if.else, !dbg !19556

if.then:                                          ; preds = %while.body
  %6 = load i8*, i8** %hostname, align 8, !dbg !19557, !tbaa !2474
  %7 = load i64, i64* %size_1, align 8, !dbg !19560, !tbaa !2611
  %sub4 = sub i64 %7, 1, !dbg !19561
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %sub4, !dbg !19557, !ctir !143
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !19557, !tbaa !2529
  %tobool = icmp ne i8 %8, 0, !dbg !19557
  br i1 %tobool, label %if.end, label %if.then6, !dbg !19562

if.then6:                                         ; preds = %if.then
  br label %while.end, !dbg !19563

if.end:                                           ; preds = %if.then
  br label %if.end21, !dbg !19564

if.else:                                          ; preds = %while.body
  %call7 = call i32* @__errno_location() #17, !dbg !19565
  %9 = load i32, i32* %call7, align 4, !dbg !19565, !tbaa !2468, !ctir !27
  %cmp8 = icmp ne i32 %9, 0, !dbg !19567
  br i1 %cmp8, label %land.lhs.true, label %if.end20, !dbg !19568

land.lhs.true:                                    ; preds = %if.else
  %call9 = call i32* @__errno_location() #17, !dbg !19569
  %10 = load i32, i32* %call9, align 4, !dbg !19569, !tbaa !2468, !ctir !27
  %cmp10 = icmp ne i32 %10, 36, !dbg !19570
  br i1 %cmp10, label %land.lhs.true11, label %if.end20, !dbg !19571

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call12 = call i32* @__errno_location() #17, !dbg !19572
  %11 = load i32, i32* %call12, align 4, !dbg !19572, !tbaa !2468, !ctir !27
  %cmp13 = icmp ne i32 %11, 22, !dbg !19573
  br i1 %cmp13, label %land.lhs.true14, label %if.end20, !dbg !19574

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %call15 = call i32* @__errno_location() #17, !dbg !19575
  %12 = load i32, i32* %call15, align 4, !dbg !19575, !tbaa !2468, !ctir !27
  %cmp16 = icmp ne i32 %12, 12, !dbg !19576
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !19577

if.then17:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19578, metadata !DIExpression()), !dbg !19580
  %call18 = call i32* @__errno_location() #17, !dbg !19581
  %13 = load i32, i32* %call18, align 4, !dbg !19581, !tbaa !2468, !ctir !27
  store i32 %13, i32* %saved_errno, align 4, !dbg !19580, !tbaa !2468
  %14 = load i8*, i8** %hostname, align 8, !dbg !19582, !tbaa !2474
  call void @free(i8* %14) #13, !dbg !19583
  %15 = load i32, i32* %saved_errno, align 4, !dbg !19584, !tbaa !2468
  %call19 = call i32* @__errno_location() #17, !dbg !19585
  store i32 %15, i32* %call19, align 4, !dbg !19586, !tbaa !2468, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !19587
  br label %return, !dbg !19587

if.end20:                                         ; preds = %land.lhs.true14, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %while.body, !dbg !19535, !llvm.loop !19588

while.end:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i64* %actual_size, metadata !19590, metadata !DIExpression()), !dbg !19592
  %16 = load i8*, i8** %hostname, align 8, !dbg !19593, !tbaa !2474
  %call22 = call i64 @strlen(i8* %16) #16, !dbg !19594
  %add = add i64 %call22, 1, !dbg !19595
  store i64 %add, i64* %actual_size, align 8, !dbg !19592, !tbaa !2611
  %17 = load i64, i64* %actual_size, align 8, !dbg !19596, !tbaa !2611
  %18 = load i64, i64* %size, align 8, !dbg !19598, !tbaa !2611
  %cmp23 = icmp ult i64 %17, %18, !dbg !19599
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !19600

if.then24:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %shrinked_hostname, metadata !19601, metadata !DIExpression()), !dbg !19603
  %19 = load i8*, i8** %hostname, align 8, !dbg !19604, !tbaa !2474
  %20 = load i64, i64* %actual_size, align 8, !dbg !19605, !tbaa !2611
  %call25 = call i8* @realloc(i8* %19, i64 %20) #13, !dbg !19606
  store i8* %call25, i8** %shrinked_hostname, align 8, !dbg !19603, !tbaa !2474
  %21 = load i8*, i8** %shrinked_hostname, align 8, !dbg !19607, !tbaa !2474
  %cmp26 = icmp ne i8* %21, null, !dbg !19609
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !19610

if.then27:                                        ; preds = %if.then24
  %22 = load i8*, i8** %shrinked_hostname, align 8, !dbg !19611, !tbaa !2474
  store i8* %22, i8** %hostname, align 8, !dbg !19612, !tbaa !2474
  br label %if.end28, !dbg !19613

if.end28:                                         ; preds = %if.then27, %if.then24
  br label %if.end29, !dbg !19614

if.end29:                                         ; preds = %if.end28, %while.end
  %23 = load i8*, i8** %hostname, align 8, !dbg !19615, !tbaa !2474
  store i8* %23, i8** %retval, align 8, !dbg !19616
  br label %return, !dbg !19616

return:                                           ; preds = %if.end29, %if.then17
  %24 = load i8*, i8** %retval, align 8, !dbg !19617
  ret i8* %24, !dbg !19617
}

; Function Attrs: nounwind
declare dso_local i32 @gethostname(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19618 !ctir !2139 {
entry:
  %retval = alloca i32, align 4, !ctir !1319
  %s.addr = alloca i8*, align 8, !ctir !146
  %ptr.addr = alloca i8**, align 8, !ctir !142
  %strtol_base.addr = alloca i32, align 4, !ctir !27
  %val.addr = alloca i64*, align 8, !ctir !2141
  %valid_suffixes.addr = alloca i8*, align 8, !ctir !146
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !151
  %err = alloca i32, align 4, !ctir !1319
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !579
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1319
  store i8* %s, i8** %s.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19620, metadata !DIExpression()), !dbg !19621
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19622, metadata !DIExpression()), !dbg !19623
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19624, metadata !DIExpression()), !dbg !19625
  store i64* %val, i64** %val.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19626, metadata !DIExpression()), !dbg !19627
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19628, metadata !DIExpression()), !dbg !19629
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19630, metadata !DIExpression()), !dbg !19631
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19632, metadata !DIExpression()), !dbg !19633
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19634, metadata !DIExpression()), !dbg !19635
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19636, metadata !DIExpression()), !dbg !19637
  store i32 0, i32* %err, align 4, !dbg !19637, !tbaa !2529
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19638, !tbaa !2468
  %cmp = icmp sle i32 0, %0, !dbg !19638
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !19638

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19638, !tbaa !2468
  %cmp1 = icmp sle i32 %1, 36, !dbg !19638
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !19638

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !19638

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.487, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.488, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #15, !dbg !19638
  unreachable, !dbg !19638

2:                                                ; No predecessors!
  br label %cond.end, !dbg !19638

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19639, !tbaa !2474
  %tobool = icmp ne i8** %3, null, !dbg !19639
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !19639

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !19640, !tbaa !2474
  br label %cond.end4, !dbg !19639

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !19639

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !19639
  store i8** %cond, i8*** %p, align 8, !dbg !19641, !tbaa !2474
  %call = call i32* @__errno_location() #17, !dbg !19642
  store i32 0, i32* %call, align 4, !dbg !19643, !tbaa !2468, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19644, metadata !DIExpression()), !dbg !19647
  %5 = load i8*, i8** %s.addr, align 8, !dbg !19648, !tbaa !2474
  store i8* %5, i8** %q, align 8, !dbg !19647, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19649, metadata !DIExpression()), !dbg !19650
  %6 = load i8*, i8** %q, align 8, !dbg !19651, !tbaa !2474
  %7 = load i8, i8* %6, align 1, !dbg !19652, !tbaa !2529, !ctir !147
  store i8 %7, i8* %ch, align 1, !dbg !19650, !tbaa !2529
  br label %while.cond, !dbg !19653

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #17, !dbg !19654
  %8 = load i16*, i16** %call5, align 8, !dbg !19654, !tbaa !2474, !ctir !575
  %9 = load i8, i8* %ch, align 1, !dbg !19654, !tbaa !2529
  %conv = zext i8 %9 to i32, !dbg !19654
  %idxprom = sext i32 %conv to i64, !dbg !19654
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !19654, !ctir !575
  %10 = load i16, i16* %arrayidx, align 2, !dbg !19654, !tbaa !5852
  %conv6 = zext i16 %10 to i32, !dbg !19654
  %and = and i32 %conv6, 8192, !dbg !19654
  %tobool7 = icmp ne i32 %and, 0, !dbg !19653
  br i1 %tobool7, label %while.body, label %while.end, !dbg !19653

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !19655, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !19655
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19655, !tbaa !2474
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !19656, !tbaa !2529, !ctir !147
  store i8 %12, i8* %ch, align 1, !dbg !19657, !tbaa !2529
  br label %while.cond, !dbg !19653, !llvm.loop !19658

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !19660, !tbaa !2529
  %conv8 = zext i8 %13 to i32, !dbg !19660
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !19662
  br i1 %cmp9, label %if.then, label %if.end, !dbg !19663

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19664
  br label %return, !dbg !19664

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !19665, !tbaa !2474
  %15 = load i8**, i8*** %p, align 8, !dbg !19666, !tbaa !2474
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !19667, !tbaa !2468
  %call11 = call i64 @strtoul(i8* %14, i8** %15, i32 %16) #13, !dbg !19668
  store i64 %call11, i64* %tmp, align 8, !dbg !19669, !tbaa !2611
  %17 = load i8**, i8*** %p, align 8, !dbg !19670, !tbaa !2474
  %18 = load i8*, i8** %17, align 8, !dbg !19672, !tbaa !2474, !ctir !143
  %19 = load i8*, i8** %s.addr, align 8, !dbg !19673, !tbaa !2474
  %cmp12 = icmp eq i8* %18, %19, !dbg !19674
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !19675

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19676, !tbaa !2474
  %tobool15 = icmp ne i8* %20, null, !dbg !19676
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !19679

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !19680, !tbaa !2474
  %22 = load i8*, i8** %21, align 8, !dbg !19681, !tbaa !2474, !ctir !143
  %23 = load i8, i8* %22, align 1, !dbg !19682, !tbaa !2529, !ctir !144
  %conv17 = sext i8 %23 to i32, !dbg !19682
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !19682
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !19683

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19684, !tbaa !2474
  %25 = load i8**, i8*** %p, align 8, !dbg !19685, !tbaa !2474
  %26 = load i8*, i8** %25, align 8, !dbg !19686, !tbaa !2474, !ctir !143
  %27 = load i8, i8* %26, align 1, !dbg !19687, !tbaa !2529, !ctir !144
  %conv20 = sext i8 %27 to i32, !dbg !19687
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #16, !dbg !19688
  %tobool22 = icmp ne i8* %call21, null, !dbg !19688
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !19689

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !19690, !tbaa !2611
  br label %if.end24, !dbg !19691

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !19692
  br label %return, !dbg !19692

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !19693

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #17, !dbg !19694
  %28 = load i32, i32* %call26, align 4, !dbg !19694, !tbaa !2468, !ctir !27
  %cmp27 = icmp ne i32 %28, 0, !dbg !19696
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19697

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !19698
  %29 = load i32, i32* %call30, align 4, !dbg !19698, !tbaa !2468, !ctir !27
  %cmp31 = icmp ne i32 %29, 34, !dbg !19701
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19702

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19703
  br label %return, !dbg !19703

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19704, !tbaa !2529
  br label %if.end35, !dbg !19705

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19706, !tbaa !2474
  %tobool37 = icmp ne i8* %30, null, !dbg !19706
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19708

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !19709, !tbaa !2611
  %32 = load i64*, i64** %val.addr, align 8, !dbg !19711, !tbaa !2474
  store i64 %31, i64* %32, align 8, !dbg !19712, !tbaa !2611, !ctir !151
  %33 = load i32, i32* %err, align 4, !dbg !19713, !tbaa !2529
  store i32 %33, i32* %retval, align 4, !dbg !19714
  br label %return, !dbg !19714

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !19715, !tbaa !2474
  %35 = load i8*, i8** %34, align 8, !dbg !19717, !tbaa !2474, !ctir !143
  %36 = load i8, i8* %35, align 1, !dbg !19718, !tbaa !2529, !ctir !144
  %conv40 = sext i8 %36 to i32, !dbg !19718
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19719
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19720

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19721, metadata !DIExpression()), !dbg !19723
  store i32 1024, i32* %base, align 4, !dbg !19723, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19724, metadata !DIExpression()), !dbg !19725
  store i32 1, i32* %suffixes, align 4, !dbg !19725, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19726, metadata !DIExpression()), !dbg !19727
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19728, !tbaa !2474
  %38 = load i8**, i8*** %p, align 8, !dbg !19730, !tbaa !2474
  %39 = load i8*, i8** %38, align 8, !dbg !19731, !tbaa !2474, !ctir !143
  %40 = load i8, i8* %39, align 1, !dbg !19732, !tbaa !2529, !ctir !144
  %conv44 = sext i8 %40 to i32, !dbg !19732
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #16, !dbg !19733
  %tobool46 = icmp ne i8* %call45, null, !dbg !19733
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19734

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !19735, !tbaa !2611
  %42 = load i64*, i64** %val.addr, align 8, !dbg !19737, !tbaa !2474
  store i64 %41, i64* %42, align 8, !dbg !19738, !tbaa !2611, !ctir !151
  %43 = load i32, i32* %err, align 4, !dbg !19739, !tbaa !2529
  %or = or i32 %43, 2, !dbg !19740
  store i32 %or, i32* %retval, align 4, !dbg !19741
  br label %return, !dbg !19741

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !19742, !tbaa !2474
  %45 = load i8*, i8** %44, align 8, !dbg !19743, !tbaa !2474, !ctir !143
  %46 = load i8, i8* %45, align 1, !dbg !19744, !tbaa !2529, !ctir !144
  %conv49 = sext i8 %46 to i32, !dbg !19744
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19745

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19746, !tbaa !2474
  %call50 = call i8* @strchr(i8* %47, i32 48) #16, !dbg !19749
  %tobool51 = icmp ne i8* %call50, null, !dbg !19749
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19750

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !19751, !tbaa !2474
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !19751, !ctir !142
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !19751, !tbaa !2474
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !19751, !ctir !143
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !19751, !tbaa !2529
  %conv55 = sext i8 %50 to i32, !dbg !19751
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19752

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !19753, !tbaa !2474
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !19753, !ctir !142
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !19753, !tbaa !2474
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !19753, !ctir !143
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !19753, !tbaa !2529
  %conv59 = sext i8 %53 to i32, !dbg !19753
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19756
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19757

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !19758, !tbaa !2468
  %add = add nsw i32 %54, 2, !dbg !19758
  store i32 %add, i32* %suffixes, align 4, !dbg !19758, !tbaa !2468
  br label %if.end63, !dbg !19759

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19760

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19761, !tbaa !2468
  %55 = load i32, i32* %suffixes, align 4, !dbg !19762, !tbaa !2468
  %inc = add nsw i32 %55, 1, !dbg !19762
  store i32 %inc, i32* %suffixes, align 4, !dbg !19762, !tbaa !2468
  br label %sw.epilog, !dbg !19763

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19764

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19765

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !19766, !tbaa !2474
  %57 = load i8*, i8** %56, align 8, !dbg !19767, !tbaa !2474, !ctir !143
  %58 = load i8, i8* %57, align 1, !dbg !19768, !tbaa !2529, !ctir !144
  %conv67 = sext i8 %58 to i32, !dbg !19768
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19769

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !19770
  store i32 %call69, i32* %overflow, align 4, !dbg !19772, !tbaa !2529
  br label %sw.epilog92, !dbg !19773

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !19774
  store i32 %call71, i32* %overflow, align 4, !dbg !19775, !tbaa !2529
  br label %sw.epilog92, !dbg !19776

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19777, !tbaa !2529
  br label %sw.epilog92, !dbg !19778

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19779, !tbaa !2468
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 6), !dbg !19780
  store i32 %call74, i32* %overflow, align 4, !dbg !19781, !tbaa !2529
  br label %sw.epilog92, !dbg !19782

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19783, !tbaa !2468
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 3), !dbg !19784
  store i32 %call76, i32* %overflow, align 4, !dbg !19785, !tbaa !2529
  br label %sw.epilog92, !dbg !19786

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19787, !tbaa !2468
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 1), !dbg !19788
  store i32 %call78, i32* %overflow, align 4, !dbg !19789, !tbaa !2529
  br label %sw.epilog92, !dbg !19790

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19791, !tbaa !2468
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 2), !dbg !19792
  store i32 %call80, i32* %overflow, align 4, !dbg !19793, !tbaa !2529
  br label %sw.epilog92, !dbg !19794

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19795, !tbaa !2468
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 5), !dbg !19796
  store i32 %call82, i32* %overflow, align 4, !dbg !19797, !tbaa !2529
  br label %sw.epilog92, !dbg !19798

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19799, !tbaa !2468
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 4), !dbg !19800
  store i32 %call84, i32* %overflow, align 4, !dbg !19801, !tbaa !2529
  br label %sw.epilog92, !dbg !19802

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !19803
  store i32 %call86, i32* %overflow, align 4, !dbg !19804, !tbaa !2529
  br label %sw.epilog92, !dbg !19805

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19806, !tbaa !2468
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 8), !dbg !19807
  store i32 %call88, i32* %overflow, align 4, !dbg !19808, !tbaa !2529
  br label %sw.epilog92, !dbg !19809

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !19810, !tbaa !2468
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %66, i32 7), !dbg !19811
  store i32 %call90, i32* %overflow, align 4, !dbg !19812, !tbaa !2529
  br label %sw.epilog92, !dbg !19813

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !19814, !tbaa !2611
  %68 = load i64*, i64** %val.addr, align 8, !dbg !19815, !tbaa !2474
  store i64 %67, i64* %68, align 8, !dbg !19816, !tbaa !2611, !ctir !151
  %69 = load i32, i32* %err, align 4, !dbg !19817, !tbaa !2529
  %or91 = or i32 %69, 2, !dbg !19818
  store i32 %or91, i32* %retval, align 4, !dbg !19819
  br label %return, !dbg !19819

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !19820, !tbaa !2529
  %71 = load i32, i32* %err, align 4, !dbg !19821, !tbaa !2529
  %or93 = or i32 %71, %70, !dbg !19821
  store i32 %or93, i32* %err, align 4, !dbg !19821, !tbaa !2529
  %72 = load i32, i32* %suffixes, align 4, !dbg !19822, !tbaa !2468
  %73 = load i8**, i8*** %p, align 8, !dbg !19823, !tbaa !2474
  %74 = load i8*, i8** %73, align 8, !dbg !19824, !tbaa !2474, !ctir !143
  %idx.ext = sext i32 %72 to i64, !dbg !19824
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !19824
  store i8* %add.ptr, i8** %73, align 8, !dbg !19824, !tbaa !2474, !ctir !143
  %75 = load i8**, i8*** %p, align 8, !dbg !19825, !tbaa !2474
  %76 = load i8*, i8** %75, align 8, !dbg !19827, !tbaa !2474, !ctir !143
  %77 = load i8, i8* %76, align 1, !dbg !19828, !tbaa !2529, !ctir !144
  %tobool94 = icmp ne i8 %77, 0, !dbg !19828
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19829

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !19830, !tbaa !2529
  %or96 = or i32 %78, 2, !dbg !19830
  store i32 %or96, i32* %err, align 4, !dbg !19830, !tbaa !2529
  br label %if.end97, !dbg !19831

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19832

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !19833, !tbaa !2611
  %80 = load i64*, i64** %val.addr, align 8, !dbg !19834, !tbaa !2474
  store i64 %79, i64* %80, align 8, !dbg !19835, !tbaa !2611, !ctir !151
  %81 = load i32, i32* %err, align 4, !dbg !19836, !tbaa !2529
  store i32 %81, i32* %retval, align 4, !dbg !19837
  br label %return, !dbg !19837

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !19838
  ret i32 %82, !dbg !19838
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #0 !dbg !19839 !ctir !2142 {
entry:
  %retval = alloca i32, align 4, !ctir !1319
  %x.addr = alloca i64*, align 8, !ctir !2141
  %scale_factor.addr = alloca i32, align 4, !ctir !27
  store i64* %x, i64** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19840, metadata !DIExpression()), !dbg !19841
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19842, metadata !DIExpression()), !dbg !19843
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19844, !tbaa !2468
  %conv = sext i32 %0 to i64, !dbg !19844
  %div = udiv i64 -1, %conv, !dbg !19846
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19847, !tbaa !2474
  %2 = load i64, i64* %1, align 8, !dbg !19848, !tbaa !2611, !ctir !151
  %cmp = icmp ult i64 %div, %2, !dbg !19849
  br i1 %cmp, label %if.then, label %if.end, !dbg !19850

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19851, !tbaa !2474
  store i64 -1, i64* %3, align 8, !dbg !19853, !tbaa !2611, !ctir !151
  store i32 1, i32* %retval, align 4, !dbg !19854
  br label %return, !dbg !19854

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19855, !tbaa !2468
  %conv2 = sext i32 %4 to i64, !dbg !19855
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19856, !tbaa !2474
  %6 = load i64, i64* %5, align 8, !dbg !19857, !tbaa !2611, !ctir !151
  %mul = mul i64 %6, %conv2, !dbg !19857
  store i64 %mul, i64* %5, align 8, !dbg !19857, !tbaa !2611, !ctir !151
  store i32 0, i32* %retval, align 4, !dbg !19858
  br label %return, !dbg !19858

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19859
  ret i32 %7, !dbg !19859
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #0 !dbg !19860 !ctir !2144 {
entry:
  %x.addr = alloca i64*, align 8, !ctir !2141
  %base.addr = alloca i32, align 4, !ctir !27
  %power.addr = alloca i32, align 4, !ctir !27
  %err = alloca i32, align 4, !ctir !1319
  store i64* %x, i64** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19861, metadata !DIExpression()), !dbg !19862
  store i32 %base, i32* %base.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19863, metadata !DIExpression()), !dbg !19864
  store i32 %power, i32* %power.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19865, metadata !DIExpression()), !dbg !19866
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19867, metadata !DIExpression()), !dbg !19868
  store i32 0, i32* %err, align 4, !dbg !19868, !tbaa !2529
  br label %while.cond, !dbg !19869

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19870, !tbaa !2468
  %dec = add nsw i32 %0, -1, !dbg !19870
  store i32 %dec, i32* %power.addr, align 4, !dbg !19870, !tbaa !2468
  %tobool = icmp ne i32 %0, 0, !dbg !19869
  br i1 %tobool, label %while.body, label %while.end, !dbg !19869

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19871, !tbaa !2474
  %2 = load i32, i32* %base.addr, align 4, !dbg !19872, !tbaa !2468
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19873
  %3 = load i32, i32* %err, align 4, !dbg !19874, !tbaa !2529
  %or = or i32 %3, %call, !dbg !19874
  store i32 %or, i32* %err, align 4, !dbg !19874, !tbaa !2529
  br label %while.cond, !dbg !19869, !llvm.loop !19875

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19877, !tbaa !2529
  ret i32 %4, !dbg !19878
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) #10 !dbg !19879 !ctir !2149 {
entry:
  %err.addr = alloca i32, align 4, !ctir !109
  %opt_idx.addr = alloca i32, align 4, !ctir !27
  %c.addr = alloca i8, align 1, !ctir !144
  %long_options.addr = alloca %struct.option*, align 8, !ctir !2151
  %arg.addr = alloca i8*, align 8, !ctir !146
  store i32 %err, i32* %err.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19881, metadata !DIExpression()), !dbg !19882
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19883, metadata !DIExpression()), !dbg !19884
  store i8 %c, i8* %c.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19885, metadata !DIExpression()), !dbg !19886
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19887, metadata !DIExpression()), !dbg !19888
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19889, metadata !DIExpression()), !dbg !19890
  %0 = load i32, i32* %err.addr, align 4, !dbg !19891, !tbaa !2529
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19892, !tbaa !2468
  %2 = load i8, i8* %c.addr, align 1, !dbg !19893, !tbaa !2529
  %3 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19894, !tbaa !2474
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !19895, !tbaa !2474
  %5 = load volatile i32, i32* @exit_failure, align 4, !dbg !19896, !tbaa !2468
  call void @xstrtol_error(i32 %0, i32 %1, i8 signext %2, %struct.option* %3, i8* %4, i32 %5), !dbg !19897
  call void @abort() #15, !dbg !19898
  unreachable, !dbg !19898
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) #0 !dbg !19899 !ctir !2159 {
entry:
  %err.addr = alloca i32, align 4, !ctir !109
  %opt_idx.addr = alloca i32, align 4, !ctir !27
  %c.addr = alloca i8, align 1, !ctir !144
  %long_options.addr = alloca %struct.option*, align 8, !ctir !2151
  %arg.addr = alloca i8*, align 8, !ctir !146
  %exit_status.addr = alloca i32, align 4, !ctir !27
  %hyphens = alloca i8*, align 8, !ctir !146
  %msgid = alloca i8*, align 8, !ctir !146
  %option = alloca i8*, align 8, !ctir !146
  %option_buffer = alloca [2 x i8], align 1, !ctir !653
  store i32 %err, i32* %err.addr, align 4, !tbaa !2529
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19900, metadata !DIExpression()), !dbg !19901
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19902, metadata !DIExpression()), !dbg !19903
  store i8 %c, i8* %c.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19904, metadata !DIExpression()), !dbg !19905
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19906, metadata !DIExpression()), !dbg !19907
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19908, metadata !DIExpression()), !dbg !19909
  store i32 %exit_status, i32* %exit_status.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !19910, metadata !DIExpression()), !dbg !19911
  call void @llvm.dbg.declare(metadata i8** %hyphens, metadata !19912, metadata !DIExpression()), !dbg !19913
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.491, i64 0, i64 0), i8** %hyphens, align 8, !dbg !19913, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %msgid, metadata !19914, metadata !DIExpression()), !dbg !19915
  call void @llvm.dbg.declare(metadata i8** %option, metadata !19916, metadata !DIExpression()), !dbg !19917
  call void @llvm.dbg.declare(metadata [2 x i8]* %option_buffer, metadata !19918, metadata !DIExpression()), !dbg !19919
  %0 = load i32, i32* %err.addr, align 4, !dbg !19920, !tbaa !2529
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !19921

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !19922
  unreachable, !dbg !19922

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.492, i64 0, i64 0), i8** %msgid, align 8, !dbg !19924, !tbaa !2474
  br label %sw.epilog, !dbg !19925

sw.bb1:                                           ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.493, i64 0, i64 0), i8** %msgid, align 8, !dbg !19926, !tbaa !2474
  br label %sw.epilog, !dbg !19927

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.494, i64 0, i64 0), i8** %msgid, align 8, !dbg !19928, !tbaa !2474
  br label %sw.epilog, !dbg !19929

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19930, !tbaa !2468
  %cmp = icmp slt i32 %1, 0, !dbg !19932
  br i1 %cmp, label %if.then, label %if.else, !dbg !19933

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %opt_idx.addr, align 4, !dbg !19934, !tbaa !2468
  %3 = load i8*, i8** %hyphens, align 8, !dbg !19936, !tbaa !2474
  %idx.ext = sext i32 %2 to i64, !dbg !19936
  %idx.neg = sub i64 0, %idx.ext, !dbg !19936
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !19936
  store i8* %add.ptr, i8** %hyphens, align 8, !dbg !19936, !tbaa !2474
  %4 = load i8, i8* %c.addr, align 1, !dbg !19937, !tbaa !2529
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !19938, !ctir !653
  store i8 %4, i8* %arrayidx, align 1, !dbg !19939, !tbaa !2529
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 1, !dbg !19940, !ctir !653
  store i8 0, i8* %arrayidx3, align 1, !dbg !19941, !tbaa !2529
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !19942
  store i8* %arraydecay, i8** %option, align 8, !dbg !19943, !tbaa !2474
  br label %if.end, !dbg !19944

if.else:                                          ; preds = %sw.epilog
  %5 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19945, !tbaa !2474
  %6 = load i32, i32* %opt_idx.addr, align 4, !dbg !19946, !tbaa !2468
  %idxprom = sext i32 %6 to i64, !dbg !19945
  %arrayidx4 = getelementptr inbounds %struct.option, %struct.option* %5, i64 %idxprom, !dbg !19945, !ctir !2151
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx4, i32 0, i32 0, !dbg !19947, !ctir !2152
  %7 = load i8*, i8** %name, align 8, !dbg !19947, !tbaa !19948, !ctir !146
  store i8* %7, i8** %option, align 8, !dbg !19950, !tbaa !2474
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %exit_status.addr, align 4, !dbg !19951, !tbaa !2468
  %9 = load i8*, i8** %msgid, align 8, !dbg !19952, !tbaa !2474
  %call = call i8* @gettext(i8* %9) #13, !dbg !19953
  %10 = load i8*, i8** %hyphens, align 8, !dbg !19954, !tbaa !2474
  %11 = load i8*, i8** %option, align 8, !dbg !19955, !tbaa !2474
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !19956, !tbaa !2474
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 0, i8* %call, i8* %10, i8* %11, i8* %12), !dbg !19957
  ret void, !dbg !19958
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19959 !ctir !2164 {
entry:
  %retval = alloca i32, align 4, !ctir !1319
  %s.addr = alloca i8*, align 8, !ctir !146
  %ptr.addr = alloca i8**, align 8, !ctir !142
  %strtol_base.addr = alloca i32, align 4, !ctir !27
  %val.addr = alloca i64*, align 8, !ctir !1318
  %valid_suffixes.addr = alloca i8*, align 8, !ctir !146
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !168
  %err = alloca i32, align 4, !ctir !1319
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !579
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1319
  store i8* %s, i8** %s.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19960, metadata !DIExpression()), !dbg !19961
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19962, metadata !DIExpression()), !dbg !19963
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19964, metadata !DIExpression()), !dbg !19965
  store i64* %val, i64** %val.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19966, metadata !DIExpression()), !dbg !19967
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19968, metadata !DIExpression()), !dbg !19969
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19970, metadata !DIExpression()), !dbg !19971
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19972, metadata !DIExpression()), !dbg !19973
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19974, metadata !DIExpression()), !dbg !19975
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19976, metadata !DIExpression()), !dbg !19977
  store i32 0, i32* %err, align 4, !dbg !19977, !tbaa !2529
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19978, !tbaa !2468
  %cmp = icmp sle i32 0, %0, !dbg !19978
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !19978

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19978, !tbaa !2468
  %cmp1 = icmp sle i32 %1, 36, !dbg !19978
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !19978

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !19978

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.497, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.498, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.xstrtoumax, i64 0, i64 0)) #15, !dbg !19978
  unreachable, !dbg !19978

2:                                                ; No predecessors!
  br label %cond.end, !dbg !19978

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19979, !tbaa !2474
  %tobool = icmp ne i8** %3, null, !dbg !19979
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !19979

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !19980, !tbaa !2474
  br label %cond.end4, !dbg !19979

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !19979

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !19979
  store i8** %cond, i8*** %p, align 8, !dbg !19981, !tbaa !2474
  %call = call i32* @__errno_location() #17, !dbg !19982
  store i32 0, i32* %call, align 4, !dbg !19983, !tbaa !2468, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19984, metadata !DIExpression()), !dbg !19987
  %5 = load i8*, i8** %s.addr, align 8, !dbg !19988, !tbaa !2474
  store i8* %5, i8** %q, align 8, !dbg !19987, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19989, metadata !DIExpression()), !dbg !19990
  %6 = load i8*, i8** %q, align 8, !dbg !19991, !tbaa !2474
  %7 = load i8, i8* %6, align 1, !dbg !19992, !tbaa !2529, !ctir !147
  store i8 %7, i8* %ch, align 1, !dbg !19990, !tbaa !2529
  br label %while.cond, !dbg !19993

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #17, !dbg !19994
  %8 = load i16*, i16** %call5, align 8, !dbg !19994, !tbaa !2474, !ctir !575
  %9 = load i8, i8* %ch, align 1, !dbg !19994, !tbaa !2529
  %conv = zext i8 %9 to i32, !dbg !19994
  %idxprom = sext i32 %conv to i64, !dbg !19994
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !19994, !ctir !575
  %10 = load i16, i16* %arrayidx, align 2, !dbg !19994, !tbaa !5852
  %conv6 = zext i16 %10 to i32, !dbg !19994
  %and = and i32 %conv6, 8192, !dbg !19994
  %tobool7 = icmp ne i32 %and, 0, !dbg !19993
  br i1 %tobool7, label %while.body, label %while.end, !dbg !19993

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !19995, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !19995
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19995, !tbaa !2474
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !19996, !tbaa !2529, !ctir !147
  store i8 %12, i8* %ch, align 1, !dbg !19997, !tbaa !2529
  br label %while.cond, !dbg !19993, !llvm.loop !19998

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !20000, !tbaa !2529
  %conv8 = zext i8 %13 to i32, !dbg !20000
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !20002
  br i1 %cmp9, label %if.then, label %if.end, !dbg !20003

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !20004
  br label %return, !dbg !20004

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !20005, !tbaa !2474
  %15 = load i8**, i8*** %p, align 8, !dbg !20006, !tbaa !2474
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !20007, !tbaa !2468
  %call11 = call i64 @strtoumax(i8* %14, i8** %15, i32 %16) #13, !dbg !20008
  store i64 %call11, i64* %tmp, align 8, !dbg !20009, !tbaa !2611
  %17 = load i8**, i8*** %p, align 8, !dbg !20010, !tbaa !2474
  %18 = load i8*, i8** %17, align 8, !dbg !20012, !tbaa !2474, !ctir !143
  %19 = load i8*, i8** %s.addr, align 8, !dbg !20013, !tbaa !2474
  %cmp12 = icmp eq i8* %18, %19, !dbg !20014
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !20015

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20016, !tbaa !2474
  %tobool15 = icmp ne i8* %20, null, !dbg !20016
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !20019

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !20020, !tbaa !2474
  %22 = load i8*, i8** %21, align 8, !dbg !20021, !tbaa !2474, !ctir !143
  %23 = load i8, i8* %22, align 1, !dbg !20022, !tbaa !2529, !ctir !144
  %conv17 = sext i8 %23 to i32, !dbg !20022
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !20022
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !20023

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20024, !tbaa !2474
  %25 = load i8**, i8*** %p, align 8, !dbg !20025, !tbaa !2474
  %26 = load i8*, i8** %25, align 8, !dbg !20026, !tbaa !2474, !ctir !143
  %27 = load i8, i8* %26, align 1, !dbg !20027, !tbaa !2529, !ctir !144
  %conv20 = sext i8 %27 to i32, !dbg !20027
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #16, !dbg !20028
  %tobool22 = icmp ne i8* %call21, null, !dbg !20028
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !20029

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !20030, !tbaa !2611
  br label %if.end24, !dbg !20031

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !20032
  br label %return, !dbg !20032

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !20033

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #17, !dbg !20034
  %28 = load i32, i32* %call26, align 4, !dbg !20034, !tbaa !2468, !ctir !27
  %cmp27 = icmp ne i32 %28, 0, !dbg !20036
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !20037

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !20038
  %29 = load i32, i32* %call30, align 4, !dbg !20038, !tbaa !2468, !ctir !27
  %cmp31 = icmp ne i32 %29, 34, !dbg !20041
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !20042

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !20043
  br label %return, !dbg !20043

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !20044, !tbaa !2529
  br label %if.end35, !dbg !20045

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20046, !tbaa !2474
  %tobool37 = icmp ne i8* %30, null, !dbg !20046
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !20048

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !20049, !tbaa !2611
  %32 = load i64*, i64** %val.addr, align 8, !dbg !20051, !tbaa !2474
  store i64 %31, i64* %32, align 8, !dbg !20052, !tbaa !2611, !ctir !168
  %33 = load i32, i32* %err, align 4, !dbg !20053, !tbaa !2529
  store i32 %33, i32* %retval, align 4, !dbg !20054
  br label %return, !dbg !20054

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !20055, !tbaa !2474
  %35 = load i8*, i8** %34, align 8, !dbg !20057, !tbaa !2474, !ctir !143
  %36 = load i8, i8* %35, align 1, !dbg !20058, !tbaa !2529, !ctir !144
  %conv40 = sext i8 %36 to i32, !dbg !20058
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !20059
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !20060

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !20061, metadata !DIExpression()), !dbg !20063
  store i32 1024, i32* %base, align 4, !dbg !20063, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !20064, metadata !DIExpression()), !dbg !20065
  store i32 1, i32* %suffixes, align 4, !dbg !20065, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !20066, metadata !DIExpression()), !dbg !20067
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20068, !tbaa !2474
  %38 = load i8**, i8*** %p, align 8, !dbg !20070, !tbaa !2474
  %39 = load i8*, i8** %38, align 8, !dbg !20071, !tbaa !2474, !ctir !143
  %40 = load i8, i8* %39, align 1, !dbg !20072, !tbaa !2529, !ctir !144
  %conv44 = sext i8 %40 to i32, !dbg !20072
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #16, !dbg !20073
  %tobool46 = icmp ne i8* %call45, null, !dbg !20073
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !20074

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !20075, !tbaa !2611
  %42 = load i64*, i64** %val.addr, align 8, !dbg !20077, !tbaa !2474
  store i64 %41, i64* %42, align 8, !dbg !20078, !tbaa !2611, !ctir !168
  %43 = load i32, i32* %err, align 4, !dbg !20079, !tbaa !2529
  %or = or i32 %43, 2, !dbg !20080
  store i32 %or, i32* %retval, align 4, !dbg !20081
  br label %return, !dbg !20081

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !20082, !tbaa !2474
  %45 = load i8*, i8** %44, align 8, !dbg !20083, !tbaa !2474, !ctir !143
  %46 = load i8, i8* %45, align 1, !dbg !20084, !tbaa !2529, !ctir !144
  %conv49 = sext i8 %46 to i32, !dbg !20084
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !20085

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20086, !tbaa !2474
  %call50 = call i8* @strchr(i8* %47, i32 48) #16, !dbg !20089
  %tobool51 = icmp ne i8* %call50, null, !dbg !20089
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !20090

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !20091, !tbaa !2474
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !20091, !ctir !142
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !20091, !tbaa !2474
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !20091, !ctir !143
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !20091, !tbaa !2529
  %conv55 = sext i8 %50 to i32, !dbg !20091
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !20092

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !20093, !tbaa !2474
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !20093, !ctir !142
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !20093, !tbaa !2474
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !20093, !ctir !143
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !20093, !tbaa !2529
  %conv59 = sext i8 %53 to i32, !dbg !20093
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !20096
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !20097

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !20098, !tbaa !2468
  %add = add nsw i32 %54, 2, !dbg !20098
  store i32 %add, i32* %suffixes, align 4, !dbg !20098, !tbaa !2468
  br label %if.end63, !dbg !20099

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !20100

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !20101, !tbaa !2468
  %55 = load i32, i32* %suffixes, align 4, !dbg !20102, !tbaa !2468
  %inc = add nsw i32 %55, 1, !dbg !20102
  store i32 %inc, i32* %suffixes, align 4, !dbg !20102, !tbaa !2468
  br label %sw.epilog, !dbg !20103

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !20104

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !20105

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !20106, !tbaa !2474
  %57 = load i8*, i8** %56, align 8, !dbg !20107, !tbaa !2474, !ctir !143
  %58 = load i8, i8* %57, align 1, !dbg !20108, !tbaa !2529, !ctir !144
  %conv67 = sext i8 %58 to i32, !dbg !20108
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !20109

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale.499(i64* %tmp, i32 512), !dbg !20110
  store i32 %call69, i32* %overflow, align 4, !dbg !20112, !tbaa !2529
  br label %sw.epilog92, !dbg !20113

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale.499(i64* %tmp, i32 1024), !dbg !20114
  store i32 %call71, i32* %overflow, align 4, !dbg !20115, !tbaa !2529
  br label %sw.epilog92, !dbg !20116

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !20117, !tbaa !2529
  br label %sw.epilog92, !dbg !20118

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !20119, !tbaa !2468
  %call74 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %59, i32 6), !dbg !20120
  store i32 %call74, i32* %overflow, align 4, !dbg !20121, !tbaa !2529
  br label %sw.epilog92, !dbg !20122

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !20123, !tbaa !2468
  %call76 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %60, i32 3), !dbg !20124
  store i32 %call76, i32* %overflow, align 4, !dbg !20125, !tbaa !2529
  br label %sw.epilog92, !dbg !20126

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !20127, !tbaa !2468
  %call78 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %61, i32 1), !dbg !20128
  store i32 %call78, i32* %overflow, align 4, !dbg !20129, !tbaa !2529
  br label %sw.epilog92, !dbg !20130

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !20131, !tbaa !2468
  %call80 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %62, i32 2), !dbg !20132
  store i32 %call80, i32* %overflow, align 4, !dbg !20133, !tbaa !2529
  br label %sw.epilog92, !dbg !20134

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !20135, !tbaa !2468
  %call82 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %63, i32 5), !dbg !20136
  store i32 %call82, i32* %overflow, align 4, !dbg !20137, !tbaa !2529
  br label %sw.epilog92, !dbg !20138

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !20139, !tbaa !2468
  %call84 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %64, i32 4), !dbg !20140
  store i32 %call84, i32* %overflow, align 4, !dbg !20141, !tbaa !2529
  br label %sw.epilog92, !dbg !20142

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale.499(i64* %tmp, i32 2), !dbg !20143
  store i32 %call86, i32* %overflow, align 4, !dbg !20144, !tbaa !2529
  br label %sw.epilog92, !dbg !20145

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !20146, !tbaa !2468
  %call88 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %65, i32 8), !dbg !20147
  store i32 %call88, i32* %overflow, align 4, !dbg !20148, !tbaa !2529
  br label %sw.epilog92, !dbg !20149

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !20150, !tbaa !2468
  %call90 = call i32 @bkm_scale_by_power.500(i64* %tmp, i32 %66, i32 7), !dbg !20151
  store i32 %call90, i32* %overflow, align 4, !dbg !20152, !tbaa !2529
  br label %sw.epilog92, !dbg !20153

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !20154, !tbaa !2611
  %68 = load i64*, i64** %val.addr, align 8, !dbg !20155, !tbaa !2474
  store i64 %67, i64* %68, align 8, !dbg !20156, !tbaa !2611, !ctir !168
  %69 = load i32, i32* %err, align 4, !dbg !20157, !tbaa !2529
  %or91 = or i32 %69, 2, !dbg !20158
  store i32 %or91, i32* %retval, align 4, !dbg !20159
  br label %return, !dbg !20159

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !20160, !tbaa !2529
  %71 = load i32, i32* %err, align 4, !dbg !20161, !tbaa !2529
  %or93 = or i32 %71, %70, !dbg !20161
  store i32 %or93, i32* %err, align 4, !dbg !20161, !tbaa !2529
  %72 = load i32, i32* %suffixes, align 4, !dbg !20162, !tbaa !2468
  %73 = load i8**, i8*** %p, align 8, !dbg !20163, !tbaa !2474
  %74 = load i8*, i8** %73, align 8, !dbg !20164, !tbaa !2474, !ctir !143
  %idx.ext = sext i32 %72 to i64, !dbg !20164
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !20164
  store i8* %add.ptr, i8** %73, align 8, !dbg !20164, !tbaa !2474, !ctir !143
  %75 = load i8**, i8*** %p, align 8, !dbg !20165, !tbaa !2474
  %76 = load i8*, i8** %75, align 8, !dbg !20167, !tbaa !2474, !ctir !143
  %77 = load i8, i8* %76, align 1, !dbg !20168, !tbaa !2529, !ctir !144
  %tobool94 = icmp ne i8 %77, 0, !dbg !20168
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !20169

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !20170, !tbaa !2529
  %or96 = or i32 %78, 2, !dbg !20170
  store i32 %or96, i32* %err, align 4, !dbg !20170, !tbaa !2529
  br label %if.end97, !dbg !20171

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !20172

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !20173, !tbaa !2611
  %80 = load i64*, i64** %val.addr, align 8, !dbg !20174, !tbaa !2474
  store i64 %79, i64* %80, align 8, !dbg !20175, !tbaa !2611, !ctir !168
  %81 = load i32, i32* %err, align 4, !dbg !20176, !tbaa !2529
  store i32 %81, i32* %retval, align 4, !dbg !20177
  br label %return, !dbg !20177

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !20178
  ret i32 %82, !dbg !20178
}

; Function Attrs: nounwind
declare dso_local i64 @strtoumax(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale.499(i64* %x, i32 %scale_factor) #0 !dbg !20179 !ctir !2166 {
entry:
  %retval = alloca i32, align 4, !ctir !1319
  %x.addr = alloca i64*, align 8, !ctir !1318
  %scale_factor.addr = alloca i32, align 4, !ctir !27
  store i64* %x, i64** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20180, metadata !DIExpression()), !dbg !20181
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !20182, metadata !DIExpression()), !dbg !20183
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !20184, !tbaa !2468
  %conv = sext i32 %0 to i64, !dbg !20184
  %div = udiv i64 -1, %conv, !dbg !20186
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20187, !tbaa !2474
  %2 = load i64, i64* %1, align 8, !dbg !20188, !tbaa !2611, !ctir !168
  %cmp = icmp ult i64 %div, %2, !dbg !20189
  br i1 %cmp, label %if.then, label %if.end, !dbg !20190

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !20191, !tbaa !2474
  store i64 -1, i64* %3, align 8, !dbg !20193, !tbaa !2611, !ctir !168
  store i32 1, i32* %retval, align 4, !dbg !20194
  br label %return, !dbg !20194

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !20195, !tbaa !2468
  %conv2 = sext i32 %4 to i64, !dbg !20195
  %5 = load i64*, i64** %x.addr, align 8, !dbg !20196, !tbaa !2474
  %6 = load i64, i64* %5, align 8, !dbg !20197, !tbaa !2611, !ctir !168
  %mul = mul i64 %6, %conv2, !dbg !20197
  store i64 %mul, i64* %5, align 8, !dbg !20197, !tbaa !2611, !ctir !168
  store i32 0, i32* %retval, align 4, !dbg !20198
  br label %return, !dbg !20198

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !20199
  ret i32 %7, !dbg !20199
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power.500(i64* %x, i32 %base, i32 %power) #0 !dbg !20200 !ctir !2168 {
entry:
  %x.addr = alloca i64*, align 8, !ctir !1318
  %base.addr = alloca i32, align 4, !ctir !27
  %power.addr = alloca i32, align 4, !ctir !27
  %err = alloca i32, align 4, !ctir !1319
  store i64* %x, i64** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20201, metadata !DIExpression()), !dbg !20202
  store i32 %base, i32* %base.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !20203, metadata !DIExpression()), !dbg !20204
  store i32 %power, i32* %power.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !20205, metadata !DIExpression()), !dbg !20206
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20207, metadata !DIExpression()), !dbg !20208
  store i32 0, i32* %err, align 4, !dbg !20208, !tbaa !2529
  br label %while.cond, !dbg !20209

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !20210, !tbaa !2468
  %dec = add nsw i32 %0, -1, !dbg !20210
  store i32 %dec, i32* %power.addr, align 4, !dbg !20210, !tbaa !2468
  %tobool = icmp ne i32 %0, 0, !dbg !20209
  br i1 %tobool, label %while.body, label %while.end, !dbg !20209

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20211, !tbaa !2474
  %2 = load i32, i32* %base.addr, align 4, !dbg !20212, !tbaa !2468
  %call = call i32 @bkm_scale.499(i64* %1, i32 %2), !dbg !20213
  %3 = load i32, i32* %err, align 4, !dbg !20214, !tbaa !2529
  %or = or i32 %3, %call, !dbg !20214
  store i32 %or, i32* %err, align 4, !dbg !20214, !tbaa !2529
  br label %while.cond, !dbg !20209, !llvm.loop !20215

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !20217, !tbaa !2529
  ret i32 %4, !dbg !20218
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #0 !dbg !20219 !ctir !2173 {
entry:
  %retval = alloca i64, align 8, !ctir !149
  %pwc.addr = alloca i32*, align 8, !ctir !1877
  %s.addr = alloca i8*, align 8, !ctir !146
  %n.addr = alloca i64, align 8, !ctir !149
  %ps.addr = alloca %struct.__mbstate_t*, align 8, !ctir !2175
  %ret = alloca i64, align 8, !ctir !149
  %wc = alloca i32, align 4, !ctir !641
  %uc = alloca i8, align 1, !ctir !579
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !20221, metadata !DIExpression()), !dbg !20222
  store i8* %s, i8** %s.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20223, metadata !DIExpression()), !dbg !20224
  store i64 %n, i64* %n.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20225, metadata !DIExpression()), !dbg !20226
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !20227, metadata !DIExpression()), !dbg !20228
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !20229, metadata !DIExpression()), !dbg !20230
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !20231, metadata !DIExpression()), !dbg !20232
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !20233, !tbaa !2474
  %tobool = icmp ne i32* %0, null, !dbg !20233
  br i1 %tobool, label %if.end, label %if.then, !dbg !20235

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !20236, !tbaa !2474
  br label %if.end, !dbg !20237

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !20238, !tbaa !2474
  %2 = load i8*, i8** %s.addr, align 8, !dbg !20239, !tbaa !2474
  %3 = load i64, i64* %n.addr, align 8, !dbg !20240, !tbaa !2611
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !20241, !tbaa !2474
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #13, !dbg !20242
  store i64 %call, i64* %ret, align 8, !dbg !20243, !tbaa !2611
  %5 = load i64, i64* %ret, align 8, !dbg !20244, !tbaa !2611
  %cmp = icmp ule i64 -2, %5, !dbg !20246
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !20247

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !20248, !tbaa !2611
  %cmp1 = icmp ne i64 %6, 0, !dbg !20249
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !20250

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !20251
  br i1 %call3, label %if.end5, label %if.then4, !dbg !20252

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !20253, metadata !DIExpression()), !dbg !20255
  %7 = load i8*, i8** %s.addr, align 8, !dbg !20256, !tbaa !2474
  %8 = load i8, i8* %7, align 1, !dbg !20257, !tbaa !2529, !ctir !147
  store i8 %8, i8* %uc, align 1, !dbg !20255, !tbaa !2529
  %9 = load i8, i8* %uc, align 1, !dbg !20258, !tbaa !2529
  %conv = zext i8 %9 to i32, !dbg !20258
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !20259, !tbaa !2474
  store i32 %conv, i32* %10, align 4, !dbg !20260, !tbaa !2468, !ctir !641
  store i64 1, i64* %retval, align 8, !dbg !20261
  br label %return, !dbg !20261

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !20262, !tbaa !2611
  store i64 %11, i64* %retval, align 8, !dbg !20263
  br label %return, !dbg !20263

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !20264
  ret i64 %12, !dbg !20264
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #0 !dbg !20265 !ctir !2189 {
entry:
  %item.addr = alloca i32, align 4, !ctir !2191
  store i32 %item, i32* %item.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !20267, metadata !DIExpression()), !dbg !20268
  %0 = load i32, i32* %item.addr, align 4, !dbg !20269, !tbaa !2468
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !20270

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !20271, !tbaa !2468
  %sub = sub nsw i32 %1, 10200, !dbg !20273
  %add = add nsw i32 %sub, 131098, !dbg !20274
  store i32 %add, i32* %item.addr, align 4, !dbg !20275, !tbaa !2468
  br label %sw.epilog, !dbg !20276

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !20277

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !20278, !tbaa !2468
  %call = call i8* @nl_langinfo(i32 %2) #13, !dbg !20279
  ret i8* %call, !dbg !20280
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #10 !dbg !20281 !ctir !336 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20282, !tbaa !2474
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.505, i64 0, i64 0)) #13, !dbg !20283
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.506, i64 0, i64 0), i8* %call), !dbg !20284
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !20285, !tbaa !2468
  call void @exit(i32 %1) #15, !dbg !20286
  unreachable, !dbg !20286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i64)* %chunkfun, void (i8*)* %freefun) #0 !dbg !20287 !ctir !1562 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %size.addr = alloca i64, align 8, !ctir !149
  %alignment.addr = alloca i64, align 8, !ctir !149
  %chunkfun.addr = alloca i8* (i64)*, align 8, !ctir !370
  %freefun.addr = alloca void (i8*)*, align 8, !ctir !381
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20288, metadata !DIExpression()), !dbg !20289
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20290, metadata !DIExpression()), !dbg !20291
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20292, metadata !DIExpression()), !dbg !20293
  store i8* (i64)* %chunkfun, i8* (i64)** %chunkfun.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* (i64)** %chunkfun.addr, metadata !20294, metadata !DIExpression()), !dbg !20295
  store void (i8*)* %freefun, void (i8*)** %freefun.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata void (i8*)** %freefun.addr, metadata !20296, metadata !DIExpression()), !dbg !20297
  %0 = load i8* (i64)*, i8* (i64)** %chunkfun.addr, align 8, !dbg !20298, !tbaa !2474
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20299, !tbaa !2474
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20300, !ctir !1565
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20301
  store i8* (i64)* %0, i8* (i64)** %plain, align 8, !dbg !20302, !tbaa !2529, !ctir !1585
  %2 = load void (i8*)*, void (i8*)** %freefun.addr, align 8, !dbg !20303, !tbaa !2474
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20304, !tbaa !2474
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20305, !ctir !1565
  %plain3 = bitcast %union.anon.1* %freefun2 to void (i8*)**, !dbg !20306
  store void (i8*)* %2, void (i8*)** %plain3, align 8, !dbg !20307, !tbaa !2529, !ctir !1590
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20308, !tbaa !2474
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 10, !dbg !20309, !ctir !1565
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20310
  %bf.clear = and i8 %bf.load, -2, !dbg !20310
  store i8 %bf.clear, i8* %use_extra_arg, align 8, !dbg !20310
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20311, !tbaa !2474
  %6 = load i64, i64* %size.addr, align 8, !dbg !20312, !tbaa !2611
  %7 = load i64, i64* %alignment.addr, align 8, !dbg !20313, !tbaa !2611
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %5, i64 %6, i64 %7), !dbg !20314
  ret i32 %call, !dbg !20315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %h, i64 %size, i64 %alignment) #0 !dbg !20316 !ctir !1608 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %size.addr = alloca i64, align 8, !ctir !149
  %alignment.addr = alloca i64, align 8, !ctir !149
  %chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  %extra = alloca i32, align 4, !ctir !27
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20317, metadata !DIExpression()), !dbg !20318
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20319, metadata !DIExpression()), !dbg !20320
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20321, metadata !DIExpression()), !dbg !20322
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %chunk, metadata !20323, metadata !DIExpression()), !dbg !20324
  %0 = load i64, i64* %alignment.addr, align 8, !dbg !20325, !tbaa !2611
  %cmp = icmp eq i64 %0, 0, !dbg !20327
  br i1 %cmp, label %if.then, label %if.end, !dbg !20328

if.then:                                          ; preds = %entry
  store i64 16, i64* %alignment.addr, align 8, !dbg !20329, !tbaa !2611
  br label %if.end, !dbg !20330

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !20331, !tbaa !2611
  %cmp1 = icmp eq i64 %1, 0, !dbg !20333
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !20334

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !20335, metadata !DIExpression()), !dbg !20337
  store i32 32, i32* %extra, align 4, !dbg !20337, !tbaa !2468
  %2 = load i32, i32* %extra, align 4, !dbg !20338, !tbaa !2468
  %sub = sub nsw i32 4096, %2, !dbg !20339
  %conv = sext i32 %sub to i64, !dbg !20340
  store i64 %conv, i64* %size.addr, align 8, !dbg !20341, !tbaa !2611
  br label %if.end3, !dbg !20342

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, i64* %size.addr, align 8, !dbg !20343, !tbaa !2611
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20344, !tbaa !2474
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 0, !dbg !20345, !ctir !1565
  store i64 %3, i64* %chunk_size, align 8, !dbg !20346, !tbaa !20347, !ctir !149
  %5 = load i64, i64* %alignment.addr, align 8, !dbg !20348, !tbaa !2611
  %sub4 = sub i64 %5, 1, !dbg !20349
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20350, !tbaa !2474
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 6, !dbg !20351, !ctir !1565
  store i64 %sub4, i64* %alignment_mask, align 8, !dbg !20352, !tbaa !5086, !ctir !149
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20353, !tbaa !2474
  %8 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20354, !tbaa !2474
  %chunk_size5 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 0, !dbg !20355, !ctir !1565
  %9 = load i64, i64* %chunk_size5, align 8, !dbg !20355, !tbaa !20347, !ctir !149
  %call = call i8* @call_chunkfun(%struct.obstack* %7, i64 %9), !dbg !20356
  %10 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20356
  %11 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20357, !tbaa !2474
  %chunk6 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 1, !dbg !20358, !ctir !1565
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk6, align 8, !dbg !20359, !tbaa !5089, !ctir !1569
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk, align 8, !dbg !20360, !tbaa !2474
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20361, !tbaa !2474
  %tobool = icmp ne %struct._obstack_chunk* %12, null, !dbg !20361
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !20363

if.then7:                                         ; preds = %if.end3
  %13 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20364, !tbaa !2474
  call void %13() #14, !dbg !20365
  unreachable, !dbg !20365

if.end8:                                          ; preds = %if.end3
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20366, !tbaa !2474
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %14, i32 0, i32 2, !dbg !20366, !ctir !1570
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20366
  %sub.ptr.lhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !20366
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !20366
  %15 = load i64, i64* %alignment.addr, align 8, !dbg !20366, !tbaa !2611
  %sub9 = sub i64 %15, 1, !dbg !20366
  %add = add i64 %sub.ptr.sub, %sub9, !dbg !20366
  %16 = load i64, i64* %alignment.addr, align 8, !dbg !20366, !tbaa !2611
  %sub10 = sub i64 %16, 1, !dbg !20366
  %neg = xor i64 %sub10, -1, !dbg !20366
  %and = and i64 %add, %neg, !dbg !20366
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20366
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20367, !tbaa !2474
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 2, !dbg !20368, !ctir !1565
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !20369, !tbaa !4764, !ctir !143
  %18 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20370, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3, !dbg !20371, !ctir !1565
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !20372, !tbaa !4762, !ctir !143
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20373, !tbaa !2474
  %20 = bitcast %struct._obstack_chunk* %19 to i8*, !dbg !20374
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20375, !tbaa !2474
  %chunk_size11 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !20376, !ctir !1565
  %22 = load i64, i64* %chunk_size11, align 8, !dbg !20376, !tbaa !20347, !ctir !149
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !20377
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20378, !tbaa !2474
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 0, !dbg !20379, !ctir !1570
  store i8* %add.ptr12, i8** %limit, align 8, !dbg !20380, !tbaa !2474, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20381, !tbaa !2474
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20382, !ctir !1565
  store i8* %add.ptr12, i8** %chunk_limit, align 8, !dbg !20383, !tbaa !5090, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20384, !tbaa !2474
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %25, i32 0, i32 1, !dbg !20385, !ctir !1570
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %prev, align 8, !dbg !20386, !tbaa !2474, !ctir !1569
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20387, !tbaa !2474
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 10, !dbg !20388, !ctir !1565
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20389
  %bf.clear = and i8 %bf.load, -3, !dbg !20389
  store i8 %bf.clear, i8* %maybe_empty_object, align 8, !dbg !20389
  %27 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20390, !tbaa !2474
  %alloc_failed = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 10, !dbg !20391, !ctir !1565
  %bf.load13 = load i8, i8* %alloc_failed, align 8, !dbg !20392
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !20392
  store i8 %bf.clear14, i8* %alloc_failed, align 8, !dbg !20392
  ret i32 1, !dbg !20393
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %h, i64 %size) #0 !dbg !20394 !ctir !1610 {
entry:
  %retval = alloca i8*, align 8, !ctir !167
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %size.addr = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20395, metadata !DIExpression()), !dbg !20396
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20397, metadata !DIExpression()), !dbg !20398
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20399, !tbaa !2474
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20401, !ctir !1565
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20401
  %bf.clear = and i8 %bf.load, 1, !dbg !20401
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20401
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20399
  br i1 %tobool, label %if.then, label %if.else, !dbg !20402

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20403, !tbaa !2474
  %chunkfun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20404, !ctir !1565
  %extra = bitcast %union.anon.0* %chunkfun to i8* (i8*, i64)**, !dbg !20405
  %2 = load i8* (i8*, i64)*, i8* (i8*, i64)** %extra, align 8, !dbg !20405, !tbaa !2529, !ctir !1585
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20406, !tbaa !2474
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20407, !ctir !1565
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20407, !tbaa !20408, !ctir !167
  %5 = load i64, i64* %size.addr, align 8, !dbg !20409, !tbaa !2611
  %call = call i8* %2(i8* %4, i64 %5), !dbg !20403
  store i8* %call, i8** %retval, align 8, !dbg !20410
  br label %return, !dbg !20410

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20411, !tbaa !2474
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 7, !dbg !20412, !ctir !1565
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20413
  %7 = load i8* (i64)*, i8* (i64)** %plain, align 8, !dbg !20413, !tbaa !2529, !ctir !1585
  %8 = load i64, i64* %size.addr, align 8, !dbg !20414, !tbaa !2611
  %call2 = call i8* %7(i64 %8), !dbg !20411
  store i8* %call2, i8** %retval, align 8, !dbg !20415
  br label %return, !dbg !20415

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !20416
  ret i8* %9, !dbg !20416
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i8*, i64)* %chunkfun, void (i8*, i8*)* %freefun, i8* %arg) #0 !dbg !20417 !ctir !1598 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %size.addr = alloca i64, align 8, !ctir !149
  %alignment.addr = alloca i64, align 8, !ctir !149
  %chunkfun.addr = alloca i8* (i8*, i64)*, align 8, !ctir !374
  %freefun.addr = alloca void (i8*, i8*)*, align 8, !ctir !383
  %arg.addr = alloca i8*, align 8, !ctir !167
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20418, metadata !DIExpression()), !dbg !20419
  store i64 %size, i64* %size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20420, metadata !DIExpression()), !dbg !20421
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20422, metadata !DIExpression()), !dbg !20423
  store i8* (i8*, i64)* %chunkfun, i8* (i8*, i64)** %chunkfun.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %chunkfun.addr, metadata !20424, metadata !DIExpression()), !dbg !20425
  store void (i8*, i8*)* %freefun, void (i8*, i8*)** %freefun.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %freefun.addr, metadata !20426, metadata !DIExpression()), !dbg !20427
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20428, metadata !DIExpression()), !dbg !20429
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** %chunkfun.addr, align 8, !dbg !20430, !tbaa !2474
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20431, !tbaa !2474
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20432, !ctir !1565
  %extra = bitcast %union.anon.0* %chunkfun1 to i8* (i8*, i64)**, !dbg !20433
  store i8* (i8*, i64)* %0, i8* (i8*, i64)** %extra, align 8, !dbg !20434, !tbaa !2529, !ctir !1585
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %freefun.addr, align 8, !dbg !20435, !tbaa !2474
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20436, !tbaa !2474
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20437, !ctir !1565
  %extra3 = bitcast %union.anon.1* %freefun2 to void (i8*, i8*)**, !dbg !20438
  store void (i8*, i8*)* %2, void (i8*, i8*)** %extra3, align 8, !dbg !20439, !tbaa !2529, !ctir !1590
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !20440, !tbaa !2474
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20441, !tbaa !2474
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 9, !dbg !20442, !ctir !1565
  store i8* %4, i8** %extra_arg, align 8, !dbg !20443, !tbaa !20408, !ctir !167
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20444, !tbaa !2474
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !20445, !ctir !1565
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20446
  %bf.clear = and i8 %bf.load, -2, !dbg !20446
  %bf.set = or i8 %bf.clear, 1, !dbg !20446
  store i8 %bf.set, i8* %use_extra_arg, align 8, !dbg !20446
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20447, !tbaa !2474
  %8 = load i64, i64* %size.addr, align 8, !dbg !20448, !tbaa !2611
  %9 = load i64, i64* %alignment.addr, align 8, !dbg !20449, !tbaa !2611
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %7, i64 %8, i64 %9), !dbg !20450
  ret i32 %call, !dbg !20451
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %h, i64 %length) #0 !dbg !20452 !ctir !1600 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %length.addr = alloca i64, align 8, !ctir !149
  %old_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  %new_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  %obj_size = alloca i64, align 8, !ctir !149
  %object_base1 = alloca i8*, align 8, !ctir !143
  %sum1 = alloca i64, align 8, !ctir !149
  %sum2 = alloca i64, align 8, !ctir !149
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20453, metadata !DIExpression()), !dbg !20454
  store i64 %length, i64* %length.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !20455, metadata !DIExpression()), !dbg !20456
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %old_chunk, metadata !20457, metadata !DIExpression()), !dbg !20458
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20459, !tbaa !2474
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20460, !ctir !1565
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20460, !tbaa !5089, !ctir !1569
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20458, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %new_chunk, metadata !20461, metadata !DIExpression()), !dbg !20462
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20462, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64* %obj_size, metadata !20463, metadata !DIExpression()), !dbg !20464
  %2 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20465, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 3, !dbg !20466, !ctir !1565
  %3 = load i8*, i8** %next_free, align 8, !dbg !20466, !tbaa !4762, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20467, !tbaa !2474
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 2, !dbg !20468, !ctir !1565
  %5 = load i8*, i8** %object_base, align 8, !dbg !20468, !tbaa !4764, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !20469
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !20469
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20469
  store i64 %sub.ptr.sub, i64* %obj_size, align 8, !dbg !20464, !tbaa !2611
  call void @llvm.dbg.declare(metadata i8** %object_base1, metadata !20470, metadata !DIExpression()), !dbg !20471
  call void @llvm.dbg.declare(metadata i64* %sum1, metadata !20472, metadata !DIExpression()), !dbg !20473
  %6 = load i64, i64* %obj_size, align 8, !dbg !20474, !tbaa !2611
  %7 = load i64, i64* %length.addr, align 8, !dbg !20475, !tbaa !2611
  %add = add i64 %6, %7, !dbg !20476
  store i64 %add, i64* %sum1, align 8, !dbg !20473, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !20477, metadata !DIExpression()), !dbg !20478
  %8 = load i64, i64* %sum1, align 8, !dbg !20479, !tbaa !2611
  %9 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20480, !tbaa !2474
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 6, !dbg !20481, !ctir !1565
  %10 = load i64, i64* %alignment_mask, align 8, !dbg !20481, !tbaa !5086, !ctir !149
  %add2 = add i64 %8, %10, !dbg !20482
  store i64 %add2, i64* %sum2, align 8, !dbg !20478, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !20483, metadata !DIExpression()), !dbg !20484
  %11 = load i64, i64* %sum2, align 8, !dbg !20485, !tbaa !2611
  %12 = load i64, i64* %obj_size, align 8, !dbg !20486, !tbaa !2611
  %shr = lshr i64 %12, 3, !dbg !20487
  %add3 = add i64 %11, %shr, !dbg !20488
  %add4 = add i64 %add3, 100, !dbg !20489
  store i64 %add4, i64* %new_size, align 8, !dbg !20484, !tbaa !2611
  %13 = load i64, i64* %new_size, align 8, !dbg !20490, !tbaa !2611
  %14 = load i64, i64* %sum2, align 8, !dbg !20492, !tbaa !2611
  %cmp = icmp ult i64 %13, %14, !dbg !20493
  br i1 %cmp, label %if.then, label %if.end, !dbg !20494

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %sum2, align 8, !dbg !20495, !tbaa !2611
  store i64 %15, i64* %new_size, align 8, !dbg !20496, !tbaa !2611
  br label %if.end, !dbg !20497

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %new_size, align 8, !dbg !20498, !tbaa !2611
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20500, !tbaa !2474
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 0, !dbg !20501, !ctir !1565
  %18 = load i64, i64* %chunk_size, align 8, !dbg !20501, !tbaa !20347, !ctir !149
  %cmp5 = icmp ult i64 %16, %18, !dbg !20502
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !20503

if.then6:                                         ; preds = %if.end
  %19 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20504, !tbaa !2474
  %chunk_size7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 0, !dbg !20505, !ctir !1565
  %20 = load i64, i64* %chunk_size7, align 8, !dbg !20505, !tbaa !20347, !ctir !149
  store i64 %20, i64* %new_size, align 8, !dbg !20506, !tbaa !2611
  br label %if.end8, !dbg !20507

if.end8:                                          ; preds = %if.then6, %if.end
  %21 = load i64, i64* %obj_size, align 8, !dbg !20508, !tbaa !2611
  %22 = load i64, i64* %sum1, align 8, !dbg !20510, !tbaa !2611
  %cmp9 = icmp ule i64 %21, %22, !dbg !20511
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !20512

land.lhs.true:                                    ; preds = %if.end8
  %23 = load i64, i64* %sum1, align 8, !dbg !20513, !tbaa !2611
  %24 = load i64, i64* %sum2, align 8, !dbg !20514, !tbaa !2611
  %cmp10 = icmp ule i64 %23, %24, !dbg !20515
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !20516

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20517, !tbaa !2474
  %26 = load i64, i64* %new_size, align 8, !dbg !20518, !tbaa !2611
  %call = call i8* @call_chunkfun(%struct.obstack* %25, i64 %26), !dbg !20519
  %27 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20519
  store %struct._obstack_chunk* %27, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20520, !tbaa !2474
  br label %if.end12, !dbg !20521

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20522, !tbaa !2474
  %tobool = icmp ne %struct._obstack_chunk* %28, null, !dbg !20522
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !20524

if.then13:                                        ; preds = %if.end12
  %29 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20525, !tbaa !2474
  call void %29() #14, !dbg !20526
  unreachable, !dbg !20526

if.end14:                                         ; preds = %if.end12
  %30 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20527, !tbaa !2474
  %31 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20528, !tbaa !2474
  %chunk15 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 1, !dbg !20529, !ctir !1565
  store %struct._obstack_chunk* %30, %struct._obstack_chunk** %chunk15, align 8, !dbg !20530, !tbaa !5089, !ctir !1569
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20531, !tbaa !2474
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20532, !tbaa !2474
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %33, i32 0, i32 1, !dbg !20533, !ctir !1570
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %prev, align 8, !dbg !20534, !tbaa !2474, !ctir !1569
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20535, !tbaa !2474
  %35 = bitcast %struct._obstack_chunk* %34 to i8*, !dbg !20536
  %36 = load i64, i64* %new_size, align 8, !dbg !20537, !tbaa !2611
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !20538
  %37 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20539, !tbaa !2474
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 4, !dbg !20540, !ctir !1565
  store i8* %add.ptr, i8** %chunk_limit, align 8, !dbg !20541, !tbaa !5090, !ctir !143
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20542, !tbaa !2474
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %38, i32 0, i32 0, !dbg !20543, !ctir !1570
  store i8* %add.ptr, i8** %limit, align 8, !dbg !20544, !tbaa !2474, !ctir !143
  %39 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20545, !tbaa !2474
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %39, i32 0, i32 2, !dbg !20545, !ctir !1570
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20545
  %sub.ptr.lhs.cast16 = ptrtoint i8* %arraydecay to i64, !dbg !20545
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast16, 0, !dbg !20545
  %40 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20545, !tbaa !2474
  %alignment_mask18 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6, !dbg !20545, !ctir !1565
  %41 = load i64, i64* %alignment_mask18, align 8, !dbg !20545, !tbaa !5086, !ctir !149
  %add19 = add i64 %sub.ptr.sub17, %41, !dbg !20545
  %42 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20545, !tbaa !2474
  %alignment_mask20 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 6, !dbg !20545, !ctir !1565
  %43 = load i64, i64* %alignment_mask20, align 8, !dbg !20545, !tbaa !5086, !ctir !149
  %neg = xor i64 %43, -1, !dbg !20545
  %and = and i64 %add19, %neg, !dbg !20545
  %add.ptr21 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20545
  store i8* %add.ptr21, i8** %object_base1, align 8, !dbg !20546, !tbaa !2474
  %44 = load i8*, i8** %object_base1, align 8, !dbg !20547, !tbaa !2474
  %45 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20548, !tbaa !2474
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 2, !dbg !20549, !ctir !1565
  %46 = load i8*, i8** %object_base22, align 8, !dbg !20549, !tbaa !4764, !ctir !143
  %47 = load i64, i64* %obj_size, align 8, !dbg !20550, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %46, i64 %47, i1 false), !dbg !20551
  %48 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20552, !tbaa !2474
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 10, !dbg !20554, !ctir !1565
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20554
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !20554
  %bf.clear = and i8 %bf.lshr, 1, !dbg !20554
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20554
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !20552
  br i1 %tobool23, label %if.end40, label %land.lhs.true24, !dbg !20555

land.lhs.true24:                                  ; preds = %if.end14
  %49 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20556, !tbaa !2474
  %object_base25 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !20557, !ctir !1565
  %50 = load i8*, i8** %object_base25, align 8, !dbg !20557, !tbaa !4764, !ctir !143
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20558, !tbaa !2474
  %contents26 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %51, i32 0, i32 2, !dbg !20558, !ctir !1570
  %arraydecay27 = getelementptr inbounds [0 x i8], [0 x i8]* %contents26, i64 0, i64 0, !dbg !20558
  %sub.ptr.lhs.cast28 = ptrtoint i8* %arraydecay27 to i64, !dbg !20558
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast28, 0, !dbg !20558
  %52 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20558, !tbaa !2474
  %alignment_mask30 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 6, !dbg !20558, !ctir !1565
  %53 = load i64, i64* %alignment_mask30, align 8, !dbg !20558, !tbaa !5086, !ctir !149
  %add31 = add i64 %sub.ptr.sub29, %53, !dbg !20558
  %54 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20558, !tbaa !2474
  %alignment_mask32 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !20558, !ctir !1565
  %55 = load i64, i64* %alignment_mask32, align 8, !dbg !20558, !tbaa !5086, !ctir !149
  %neg33 = xor i64 %55, -1, !dbg !20558
  %and34 = and i64 %add31, %neg33, !dbg !20558
  %add.ptr35 = getelementptr inbounds i8, i8* null, i64 %and34, !dbg !20558
  %cmp36 = icmp eq i8* %50, %add.ptr35, !dbg !20559
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !20560

if.then37:                                        ; preds = %land.lhs.true24
  %56 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20561, !tbaa !2474
  %prev38 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %56, i32 0, i32 1, !dbg !20563, !ctir !1570
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev38, align 8, !dbg !20563, !tbaa !2474, !ctir !1569
  %58 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20564, !tbaa !2474
  %prev39 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %58, i32 0, i32 1, !dbg !20565, !ctir !1570
  store %struct._obstack_chunk* %57, %struct._obstack_chunk** %prev39, align 8, !dbg !20566, !tbaa !2474, !ctir !1569
  %59 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20567, !tbaa !2474
  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20568, !tbaa !2474
  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !20568
  call void @call_freefun(%struct.obstack* %59, i8* %61), !dbg !20569
  br label %if.end40, !dbg !20570

if.end40:                                         ; preds = %if.then37, %land.lhs.true24, %if.end14
  %62 = load i8*, i8** %object_base1, align 8, !dbg !20571, !tbaa !2474
  %63 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20572, !tbaa !2474
  %object_base41 = getelementptr inbounds %struct.obstack, %struct.obstack* %63, i32 0, i32 2, !dbg !20573, !ctir !1565
  store i8* %62, i8** %object_base41, align 8, !dbg !20574, !tbaa !4764, !ctir !143
  %64 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20575, !tbaa !2474
  %object_base42 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 2, !dbg !20576, !ctir !1565
  %65 = load i8*, i8** %object_base42, align 8, !dbg !20576, !tbaa !4764, !ctir !143
  %66 = load i64, i64* %obj_size, align 8, !dbg !20577, !tbaa !2611
  %add.ptr43 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !20578
  %67 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20579, !tbaa !2474
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3, !dbg !20580, !ctir !1565
  store i8* %add.ptr43, i8** %next_free44, align 8, !dbg !20581, !tbaa !4762, !ctir !143
  %68 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20582, !tbaa !2474
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0, i32 10, !dbg !20583, !ctir !1565
  %bf.load46 = load i8, i8* %maybe_empty_object45, align 8, !dbg !20584
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !20584
  store i8 %bf.clear47, i8* %maybe_empty_object45, align 8, !dbg !20584
  ret void, !dbg !20585
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %h, i8* %old_chunk) #0 !dbg !20586 !ctir !1604 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %old_chunk.addr = alloca i8*, align 8, !ctir !167
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20587, metadata !DIExpression()), !dbg !20588
  store i8* %old_chunk, i8** %old_chunk.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %old_chunk.addr, metadata !20589, metadata !DIExpression()), !dbg !20590
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20591, !tbaa !2474
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20593, !ctir !1565
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20593
  %bf.clear = and i8 %bf.load, 1, !dbg !20593
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20593
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20591
  br i1 %tobool, label %if.then, label %if.else, !dbg !20594

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20595, !tbaa !2474
  %freefun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 8, !dbg !20596, !ctir !1565
  %extra = bitcast %union.anon.1* %freefun to void (i8*, i8*)**, !dbg !20597
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %extra, align 8, !dbg !20597, !tbaa !2529, !ctir !1590
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20598, !tbaa !2474
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20599, !ctir !1565
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20599, !tbaa !20408, !ctir !167
  %5 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20600, !tbaa !2474
  call void %2(i8* %4, i8* %5), !dbg !20595
  br label %if.end, !dbg !20595

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20601, !tbaa !2474
  %freefun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 8, !dbg !20602, !ctir !1565
  %plain = bitcast %union.anon.1* %freefun1 to void (i8*)**, !dbg !20603
  %7 = load void (i8*)*, void (i8*)** %plain, align 8, !dbg !20603, !tbaa !2529, !ctir !1590
  %8 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20604, !tbaa !2474
  call void %7(i8* %8), !dbg !20601
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20605
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %h, i8* %obj) #9 !dbg !20606 !ctir !1602 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %obj.addr = alloca i8*, align 8, !ctir !167
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20607, metadata !DIExpression()), !dbg !20608
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20609, metadata !DIExpression()), !dbg !20610
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20611, metadata !DIExpression()), !dbg !20612
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20613, metadata !DIExpression()), !dbg !20614
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20615, !tbaa !2474
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20616, !ctir !1565
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20616, !tbaa !5089, !ctir !1569
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20617, !tbaa !2474
  br label %while.cond, !dbg !20618

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20619, !tbaa !2474
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20620
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20621

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20622, !tbaa !2474
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20623
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20624, !tbaa !2474
  %cmp1 = icmp uge i8* %4, %5, !dbg !20625
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20626

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20627, !tbaa !2474
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20628, !ctir !1570
  %7 = load i8*, i8** %limit, align 8, !dbg !20628, !tbaa !2474, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20629, !tbaa !2474
  %cmp2 = icmp ult i8* %7, %8, !dbg !20630
  br label %lor.end, !dbg !20626

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20631
  br i1 %10, label %while.body, label %while.end, !dbg !20618

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20632, !tbaa !2474
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20634, !ctir !1570
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20634, !tbaa !2474, !ctir !1569
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20635, !tbaa !2474
  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20636, !tbaa !2474
  store %struct._obstack_chunk* %13, %struct._obstack_chunk** %lp, align 8, !dbg !20637, !tbaa !2474
  br label %while.cond, !dbg !20618, !llvm.loop !20638

while.end:                                        ; preds = %land.end
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20640, !tbaa !2474
  %cmp3 = icmp ne %struct._obstack_chunk* %14, null, !dbg !20641
  %conv = zext i1 %cmp3 to i32, !dbg !20641
  ret i32 %conv, !dbg !20642
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %h, i8* %obj) #0 !dbg !20643 !ctir !1604 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %obj.addr = alloca i8*, align 8, !ctir !167
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20644, metadata !DIExpression()), !dbg !20645
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20646, metadata !DIExpression()), !dbg !20647
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20648, metadata !DIExpression()), !dbg !20649
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20650, metadata !DIExpression()), !dbg !20651
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20652, !tbaa !2474
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20653, !ctir !1565
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20653, !tbaa !5089, !ctir !1569
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20654, !tbaa !2474
  br label %while.cond, !dbg !20655

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20656, !tbaa !2474
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20657
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20658

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20659, !tbaa !2474
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20660
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20661, !tbaa !2474
  %cmp1 = icmp uge i8* %4, %5, !dbg !20662
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20663

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20664, !tbaa !2474
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20665, !ctir !1570
  %7 = load i8*, i8** %limit, align 8, !dbg !20665, !tbaa !2474, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20666, !tbaa !2474
  %cmp2 = icmp ult i8* %7, %8, !dbg !20667
  br label %lor.end, !dbg !20663

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20668
  br i1 %10, label %while.body, label %while.end, !dbg !20655

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20669, !tbaa !2474
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20671, !ctir !1570
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20671, !tbaa !2474, !ctir !1569
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20672, !tbaa !2474
  %13 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20673, !tbaa !2474
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20674, !tbaa !2474
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !20674
  call void @call_freefun(%struct.obstack* %13, i8* %15), !dbg !20675
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20676, !tbaa !2474
  store %struct._obstack_chunk* %16, %struct._obstack_chunk** %lp, align 8, !dbg !20677, !tbaa !2474
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20678, !tbaa !2474
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10, !dbg !20679, !ctir !1565
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20680
  %bf.clear = and i8 %bf.load, -3, !dbg !20680
  %bf.set = or i8 %bf.clear, 2, !dbg !20680
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !20680
  br label %while.cond, !dbg !20655, !llvm.loop !20681

while.end:                                        ; preds = %land.end
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20683, !tbaa !2474
  %tobool = icmp ne %struct._obstack_chunk* %18, null, !dbg !20683
  br i1 %tobool, label %if.then, label %if.else, !dbg !20685

if.then:                                          ; preds = %while.end
  %19 = load i8*, i8** %obj.addr, align 8, !dbg !20686, !tbaa !2474
  %20 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20688, !tbaa !2474
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !20689, !ctir !1565
  store i8* %19, i8** %next_free, align 8, !dbg !20690, !tbaa !4762, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20691, !tbaa !2474
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 2, !dbg !20692, !ctir !1565
  store i8* %19, i8** %object_base, align 8, !dbg !20693, !tbaa !4764, !ctir !143
  %22 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20694, !tbaa !2474
  %limit3 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %22, i32 0, i32 0, !dbg !20695, !ctir !1570
  %23 = load i8*, i8** %limit3, align 8, !dbg !20695, !tbaa !2474, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20696, !tbaa !2474
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20697, !ctir !1565
  store i8* %23, i8** %chunk_limit, align 8, !dbg !20698, !tbaa !5090, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20699, !tbaa !2474
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20700, !tbaa !2474
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 1, !dbg !20701, !ctir !1565
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %chunk4, align 8, !dbg !20702, !tbaa !5089, !ctir !1569
  br label %if.end7, !dbg !20703

if.else:                                          ; preds = %while.end
  %27 = load i8*, i8** %obj.addr, align 8, !dbg !20704, !tbaa !2474
  %cmp5 = icmp ne i8* %27, null, !dbg !20706
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !20707

if.then6:                                         ; preds = %if.else
  call void @abort() #15, !dbg !20708
  unreachable, !dbg !20708

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !20709
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @_obstack_memory_used(%struct.obstack* %h) #9 !dbg !20710 !ctir !1606 {
entry:
  %h.addr = alloca %struct.obstack*, align 8, !ctir !1564
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1569
  %nbytes = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20711, metadata !DIExpression()), !dbg !20712
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20713, metadata !DIExpression()), !dbg !20714
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !20715, metadata !DIExpression()), !dbg !20716
  store i64 0, i64* %nbytes, align 8, !dbg !20716, !tbaa !2611
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20717, !tbaa !2474
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20719, !ctir !1565
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20719, !tbaa !5089, !ctir !1569
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20720, !tbaa !2474
  br label %for.cond, !dbg !20721

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20722, !tbaa !2474
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20724
  br i1 %cmp, label %for.body, label %for.end, !dbg !20725

for.body:                                         ; preds = %for.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20726, !tbaa !2474
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %3, i32 0, i32 0, !dbg !20728, !ctir !1570
  %4 = load i8*, i8** %limit, align 8, !dbg !20728, !tbaa !2474, !ctir !143
  %5 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20729, !tbaa !2474
  %6 = bitcast %struct._obstack_chunk* %5 to i8*, !dbg !20730
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !20731
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !20731
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20731
  %7 = load i64, i64* %nbytes, align 8, !dbg !20732, !tbaa !2611
  %add = add i64 %7, %sub.ptr.sub, !dbg !20732
  store i64 %add, i64* %nbytes, align 8, !dbg !20732, !tbaa !2611
  br label %for.inc, !dbg !20733

for.inc:                                          ; preds = %for.body
  %8 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20734, !tbaa !2474
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %8, i32 0, i32 1, !dbg !20735, !ctir !1570
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20735, !tbaa !2474, !ctir !1569
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %lp, align 8, !dbg !20736, !tbaa !2474
  br label %for.cond, !dbg !20737, !llvm.loop !20738

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %nbytes, align 8, !dbg !20740, !tbaa !2611
  ret i64 %10, !dbg !20741
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm_zone* @tzalloc(i8* %name) #0 !dbg !20742 !ctir !2196 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !146
  %name_size = alloca i64, align 8, !ctir !149
  %abbr_size = alloca i64, align 8, !ctir !149
  %tz = alloca %struct.tm_zone*, align 8, !ctir !2198
  store i8* %name, i8** %name.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20743, metadata !DIExpression()), !dbg !20744
  call void @llvm.dbg.declare(metadata i64* %name_size, metadata !20745, metadata !DIExpression()), !dbg !20746
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20747, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !20747
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20747

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20748, !tbaa !2474
  %call = call i64 @strlen(i8* %1) #16, !dbg !20749
  %add = add i64 %call, 1, !dbg !20750
  br label %cond.end, !dbg !20747

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20747

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !20747
  store i64 %cond, i64* %name_size, align 8, !dbg !20746, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %abbr_size, metadata !20751, metadata !DIExpression()), !dbg !20752
  %2 = load i64, i64* %name_size, align 8, !dbg !20753, !tbaa !2611
  %cmp = icmp ult i64 %2, 119, !dbg !20754
  br i1 %cmp, label %cond.true1, label %cond.false2, !dbg !20753

cond.true1:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !20753

cond.false2:                                      ; preds = %cond.end
  %3 = load i64, i64* %name_size, align 8, !dbg !20755, !tbaa !2611
  %add3 = add i64 %3, 1, !dbg !20756
  br label %cond.end4, !dbg !20753

cond.end4:                                        ; preds = %cond.false2, %cond.true1
  %cond5 = phi i64 [ 119, %cond.true1 ], [ %add3, %cond.false2 ], !dbg !20753
  store i64 %cond5, i64* %abbr_size, align 8, !dbg !20752, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz, metadata !20757, metadata !DIExpression()), !dbg !20758
  %4 = load i64, i64* %abbr_size, align 8, !dbg !20759, !tbaa !2611
  %add6 = add i64 16, %4, !dbg !20759
  %and = and i64 %add6, -8, !dbg !20759
  %call7 = call noalias i8* @malloc(i64 %and) #13, !dbg !20760
  %5 = bitcast i8* %call7 to %struct.tm_zone*, !dbg !20760
  store %struct.tm_zone* %5, %struct.tm_zone** %tz, align 8, !dbg !20758, !tbaa !2474
  %6 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20761, !tbaa !2474
  %tobool8 = icmp ne %struct.tm_zone* %6, null, !dbg !20761
  br i1 %tobool8, label %if.then, label %if.end14, !dbg !20763

if.then:                                          ; preds = %cond.end4
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20764, !tbaa !2474
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %7, i32 0, i32 0, !dbg !20766, !ctir !2200
  store %struct.tm_zone* null, %struct.tm_zone** %next, align 8, !dbg !20767, !tbaa !2474, !ctir !2199
  %8 = load i8*, i8** %name.addr, align 8, !dbg !20768, !tbaa !2474
  %tobool9 = icmp ne i8* %8, null, !dbg !20769
  %lnot = xor i1 %tobool9, true, !dbg !20769
  %lnot10 = xor i1 %lnot, true, !dbg !20770
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !20770
  %conv = trunc i32 %lnot.ext to i8, !dbg !20770
  %9 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20771, !tbaa !2474
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %9, i32 0, i32 1, !dbg !20772, !ctir !2200
  store i8 %conv, i8* %tz_is_set, align 8, !dbg !20773, !tbaa !2529, !ctir !144
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20774, !tbaa !2474
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %10, i32 0, i32 2, !dbg !20775, !ctir !2200
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20774, !ctir !356
  store i8 0, i8* %arrayidx, align 1, !dbg !20776, !tbaa !2529
  %11 = load i8*, i8** %name.addr, align 8, !dbg !20777, !tbaa !2474
  %tobool11 = icmp ne i8* %11, null, !dbg !20777
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !20779

if.then12:                                        ; preds = %if.then
  %12 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20780, !tbaa !2474
  %abbrs13 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %12, i32 0, i32 2, !dbg !20781, !ctir !2200
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs13, i64 0, i64 0, !dbg !20780
  %13 = load i8*, i8** %name.addr, align 8, !dbg !20782, !tbaa !2474
  %14 = load i64, i64* %name_size, align 8, !dbg !20783, !tbaa !2611
  call void @extend_abbrs(i8* %arraydecay, i8* %13, i64 %14), !dbg !20784
  br label %if.end, !dbg !20784

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end14, !dbg !20785

if.end14:                                         ; preds = %if.end, %cond.end4
  %15 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20786, !tbaa !2474
  ret %struct.tm_zone* %15, !dbg !20787
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extend_abbrs(i8* %abbrs, i8* %abbr, i64 %abbr_size) #0 !dbg !20788 !ctir !2227 {
entry:
  %abbrs.addr = alloca i8*, align 8, !ctir !143
  %abbr.addr = alloca i8*, align 8, !ctir !146
  %abbr_size.addr = alloca i64, align 8, !ctir !149
  store i8* %abbrs, i8** %abbrs.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %abbrs.addr, metadata !20789, metadata !DIExpression()), !dbg !20790
  store i8* %abbr, i8** %abbr.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %abbr.addr, metadata !20791, metadata !DIExpression()), !dbg !20792
  store i64 %abbr_size, i64* %abbr_size.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %abbr_size.addr, metadata !20793, metadata !DIExpression()), !dbg !20794
  %0 = load i8*, i8** %abbrs.addr, align 8, !dbg !20795, !tbaa !2474
  %1 = load i8*, i8** %abbr.addr, align 8, !dbg !20796, !tbaa !2474
  %2 = load i64, i64* %abbr_size.addr, align 8, !dbg !20797, !tbaa !2611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false), !dbg !20798
  %3 = load i8*, i8** %abbrs.addr, align 8, !dbg !20799, !tbaa !2474
  %4 = load i64, i64* %abbr_size.addr, align 8, !dbg !20800, !tbaa !2611
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !20799, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !20801, !tbaa !2529
  ret void, !dbg !20802
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @tzfree(%struct.tm_zone* %tz) #0 !dbg !20803 !ctir !2205 {
entry:
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  %next = alloca %struct.tm_zone*, align 8, !ctir !2198
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20804, metadata !DIExpression()), !dbg !20805
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20806, !tbaa !2474
  %cmp = icmp ne %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !20808
  br i1 %cmp, label %if.then, label %if.end, !dbg !20809

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !20810

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20811, !tbaa !2474
  %tobool = icmp ne %struct.tm_zone* %1, null, !dbg !20810
  br i1 %tobool, label %while.body, label %while.end, !dbg !20810

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %next, metadata !20812, metadata !DIExpression()), !dbg !20814
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20815, !tbaa !2474
  %next1 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 0, !dbg !20816, !ctir !2200
  %3 = load %struct.tm_zone*, %struct.tm_zone** %next1, align 8, !dbg !20816, !tbaa !2474, !ctir !2199
  store %struct.tm_zone* %3, %struct.tm_zone** %next, align 8, !dbg !20814, !tbaa !2474
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20817, !tbaa !2474
  %5 = bitcast %struct.tm_zone* %4 to i8*, !dbg !20817
  call void @free(i8* %5) #13, !dbg !20818
  %6 = load %struct.tm_zone*, %struct.tm_zone** %next, align 8, !dbg !20819, !tbaa !2474
  store %struct.tm_zone* %6, %struct.tm_zone** %tz.addr, align 8, !dbg !20820, !tbaa !2474
  br label %while.cond, !dbg !20810, !llvm.loop !20821

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !20810

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !20823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm* @localtime_rz(%struct.tm_zone* %tz, i64* nonnull %t, %struct.tm* nonnull %tm) #0 !dbg !20824 !ctir !2207 {
entry:
  %retval = alloca %struct.tm*, align 8, !ctir !2209
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  %t.addr = alloca i64*, align 8, !ctir !2223
  %tm.addr = alloca %struct.tm*, align 8, !ctir !2209
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2198
  %abbr_saved = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20825, metadata !DIExpression()), !dbg !20826
  store i64* %t, i64** %t.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i64** %t.addr, metadata !20827, metadata !DIExpression()), !dbg !20828
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20829, metadata !DIExpression()), !dbg !20830
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20831, !tbaa !2474
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !20831
  br i1 %tobool, label %if.else, label %if.then, !dbg !20833

if.then:                                          ; preds = %entry
  %1 = load i64*, i64** %t.addr, align 8, !dbg !20834, !tbaa !2474
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20835, !tbaa !2474
  %call = call %struct.tm* @gmtime_r(i64* %1, %struct.tm* %2) #13, !dbg !20836
  store %struct.tm* %call, %struct.tm** %retval, align 8, !dbg !20837
  br label %return, !dbg !20837

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20838, metadata !DIExpression()), !dbg !20840
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20841, !tbaa !2474
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %3), !dbg !20842
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !20840, !tbaa !2474
  %4 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20843, !tbaa !2474
  %tobool2 = icmp ne %struct.tm_zone* %4, null, !dbg !20843
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !20845

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %abbr_saved, metadata !20846, metadata !DIExpression()), !dbg !20848
  %5 = load i64*, i64** %t.addr, align 8, !dbg !20849, !tbaa !2474
  %6 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20850, !tbaa !2474
  %call4 = call %struct.tm* @localtime_r(i64* %5, %struct.tm* %6) #13, !dbg !20851
  %tobool5 = icmp ne %struct.tm* %call4, null, !dbg !20851
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !20852

land.rhs:                                         ; preds = %if.then3
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20853, !tbaa !2474
  %8 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20854, !tbaa !2474
  %call6 = call zeroext i1 @save_abbr(%struct.tm_zone* %7, %struct.tm* %8), !dbg !20855
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then3
  %9 = phi i1 [ false, %if.then3 ], [ %call6, %land.rhs ], !dbg !20856
  %frombool = zext i1 %9 to i8, !dbg !20848
  store i8 %frombool, i8* %abbr_saved, align 1, !dbg !20848, !tbaa !2493
  %10 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20857, !tbaa !2474
  %call7 = call zeroext i1 @revert_tz(%struct.tm_zone* %10), !dbg !20859
  br i1 %call7, label %land.lhs.true, label %if.end, !dbg !20860

land.lhs.true:                                    ; preds = %land.end
  %11 = load i8, i8* %abbr_saved, align 1, !dbg !20861, !tbaa !2493
  %tobool8 = trunc i8 %11 to i1, !dbg !20861
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !20862

if.then9:                                         ; preds = %land.lhs.true
  %12 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20863, !tbaa !2474
  store %struct.tm* %12, %struct.tm** %retval, align 8, !dbg !20864
  br label %return, !dbg !20864

if.end:                                           ; preds = %land.lhs.true, %land.end
  br label %if.end10, !dbg !20865

if.end10:                                         ; preds = %if.end, %if.else
  store %struct.tm* null, %struct.tm** %retval, align 8, !dbg !20866
  br label %return, !dbg !20866

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %13 = load %struct.tm*, %struct.tm** %retval, align 8, !dbg !20867
  ret %struct.tm* %13, !dbg !20867
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @gmtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm_zone* @set_tz(%struct.tm_zone* %tz) #0 !dbg !20868 !ctir !2229 {
entry:
  %retval = alloca %struct.tm_zone*, align 8, !ctir !2198
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  %env_tz = alloca i8*, align 8, !ctir !143
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2198
  %saved_errno = alloca i32, align 4, !ctir !27
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20869, metadata !DIExpression()), !dbg !20870
  call void @llvm.dbg.declare(metadata i8** %env_tz, metadata !20871, metadata !DIExpression()), !dbg !20872
  %call = call i8* @getenv_TZ(), !dbg !20873
  store i8* %call, i8** %env_tz, align 8, !dbg !20872, !tbaa !2474
  %0 = load i8*, i8** %env_tz, align 8, !dbg !20874, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !20874
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20876

cond.true:                                        ; preds = %entry
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20877, !tbaa !2474
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %1, i32 0, i32 1, !dbg !20878, !ctir !2200
  %2 = load i8, i8* %tz_is_set, align 8, !dbg !20878, !tbaa !2529, !ctir !144
  %conv = sext i8 %2 to i32, !dbg !20877
  %tobool1 = icmp ne i32 %conv, 0, !dbg !20877
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !20879

land.lhs.true:                                    ; preds = %cond.true
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20880, !tbaa !2474
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %3, i32 0, i32 2, !dbg !20881, !ctir !2200
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20880
  %4 = load i8*, i8** %env_tz, align 8, !dbg !20882, !tbaa !2474
  %call2 = call i32 @strcmp(i8* %arraydecay, i8* %4) #16, !dbg !20883
  %cmp = icmp eq i32 %call2, 0, !dbg !20884
  br i1 %cmp, label %if.then, label %if.else, !dbg !20874

cond.false:                                       ; preds = %entry
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20885, !tbaa !2474
  %tz_is_set4 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %5, i32 0, i32 1, !dbg !20886, !ctir !2200
  %6 = load i8, i8* %tz_is_set4, align 8, !dbg !20886, !tbaa !2529, !ctir !144
  %tobool5 = icmp ne i8 %6, 0, !dbg !20885
  br i1 %tobool5, label %if.else, label %if.then, !dbg !20876

if.then:                                          ; preds = %cond.false, %land.lhs.true
  store %struct.tm_zone* inttoptr (i64 1 to %struct.tm_zone*), %struct.tm_zone** %retval, align 8, !dbg !20887
  br label %return, !dbg !20887

if.else:                                          ; preds = %cond.false, %land.lhs.true, %cond.true
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20888, metadata !DIExpression()), !dbg !20890
  %7 = load i8*, i8** %env_tz, align 8, !dbg !20891, !tbaa !2474
  %call6 = call %struct.tm_zone* @tzalloc(i8* %7), !dbg !20892
  store %struct.tm_zone* %call6, %struct.tm_zone** %old_tz, align 8, !dbg !20890, !tbaa !2474
  %8 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20893, !tbaa !2474
  %tobool7 = icmp ne %struct.tm_zone* %8, null, !dbg !20893
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !20895

if.then8:                                         ; preds = %if.else
  %9 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20896, !tbaa !2474
  store %struct.tm_zone* %9, %struct.tm_zone** %retval, align 8, !dbg !20897
  br label %return, !dbg !20897

if.end:                                           ; preds = %if.else
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20898, !tbaa !2474
  %call9 = call zeroext i1 @change_env(%struct.tm_zone* %10), !dbg !20900
  br i1 %call9, label %if.end13, label %if.then10, !dbg !20901

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20902, metadata !DIExpression()), !dbg !20904
  %call11 = call i32* @__errno_location() #17, !dbg !20905
  %11 = load i32, i32* %call11, align 4, !dbg !20905, !tbaa !2468, !ctir !27
  store i32 %11, i32* %saved_errno, align 4, !dbg !20904, !tbaa !2468
  %12 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20906, !tbaa !2474
  call void @tzfree(%struct.tm_zone* %12), !dbg !20907
  %13 = load i32, i32* %saved_errno, align 4, !dbg !20908, !tbaa !2468
  %call12 = call i32* @__errno_location() #17, !dbg !20909
  store i32 %13, i32* %call12, align 4, !dbg !20910, !tbaa !2468, !ctir !27
  store %struct.tm_zone* null, %struct.tm_zone** %retval, align 8, !dbg !20911
  br label %return, !dbg !20911

if.end13:                                         ; preds = %if.end
  %14 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20912, !tbaa !2474
  store %struct.tm_zone* %14, %struct.tm_zone** %retval, align 8, !dbg !20913
  br label %return, !dbg !20913

return:                                           ; preds = %if.end13, %if.then10, %if.then8, %if.then
  %15 = load %struct.tm_zone*, %struct.tm_zone** %retval, align 8, !dbg !20914
  ret %struct.tm_zone* %15, !dbg !20914
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @save_abbr(%struct.tm_zone* %tz, %struct.tm* %tm) #0 !dbg !20915 !ctir !2235 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  %tm.addr = alloca %struct.tm*, align 8, !ctir !2209
  %zone = alloca i8*, align 8, !ctir !146
  %zone_copy = alloca i8*, align 8, !ctir !143
  %zone_size = alloca i64, align 8, !ctir !149
  %zone_used = alloca i64, align 8, !ctir !149
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20916, metadata !DIExpression()), !dbg !20917
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20918, metadata !DIExpression()), !dbg !20919
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !20920, metadata !DIExpression()), !dbg !20921
  store i8* null, i8** %zone, align 8, !dbg !20921, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %zone_copy, metadata !20922, metadata !DIExpression()), !dbg !20923
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.516, i64 0, i64 0), i8** %zone_copy, align 8, !dbg !20923, !tbaa !2474
  %0 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20924, !tbaa !2474
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 10, !dbg !20925, !ctir !2210
  %1 = load i8*, i8** %tm_zone, align 8, !dbg !20925, !tbaa !15626, !ctir !146
  store i8* %1, i8** %zone, align 8, !dbg !20926, !tbaa !2474
  %2 = load i8*, i8** %zone, align 8, !dbg !20927, !tbaa !2474
  %tobool = icmp ne i8* %2, null, !dbg !20927
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !20929

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20930, !tbaa !2474
  %4 = bitcast %struct.tm* %3 to i8*, !dbg !20931
  %5 = load i8*, i8** %zone, align 8, !dbg !20932, !tbaa !2474
  %cmp = icmp ule i8* %4, %5, !dbg !20933
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20934

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %zone, align 8, !dbg !20935, !tbaa !2474
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20936, !tbaa !2474
  %add.ptr = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 1, !dbg !20937
  %8 = bitcast %struct.tm* %add.ptr to i8*, !dbg !20938
  %cmp1 = icmp ult i8* %6, %8, !dbg !20939
  br i1 %cmp1, label %if.then, label %if.end, !dbg !20940

if.then:                                          ; preds = %land.lhs.true, %entry
  store i1 true, i1* %retval, align 1, !dbg !20941
  br label %return, !dbg !20941

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load i8*, i8** %zone, align 8, !dbg !20942, !tbaa !2474
  %10 = load i8, i8* %9, align 1, !dbg !20944, !tbaa !2529, !ctir !147
  %tobool2 = icmp ne i8 %10, 0, !dbg !20944
  br i1 %tobool2, label %if.then3, label %if.end48, !dbg !20945

if.then3:                                         ; preds = %if.end
  %11 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20946, !tbaa !2474
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %11, i32 0, i32 2, !dbg !20948, !ctir !2200
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20946
  store i8* %arraydecay, i8** %zone_copy, align 8, !dbg !20949, !tbaa !2474
  br label %while.cond, !dbg !20950

while.cond:                                       ; preds = %if.end47, %if.then3
  %12 = load i8*, i8** %zone_copy, align 8, !dbg !20951, !tbaa !2474
  %13 = load i8*, i8** %zone, align 8, !dbg !20952, !tbaa !2474
  %call = call i32 @strcmp(i8* %12, i8* %13) #16, !dbg !20953
  %cmp4 = icmp ne i32 %call, 0, !dbg !20954
  br i1 %cmp4, label %while.body, label %while.end, !dbg !20950

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %zone_copy, align 8, !dbg !20955, !tbaa !2474
  %15 = load i8, i8* %14, align 1, !dbg !20958, !tbaa !2529, !ctir !144
  %conv = sext i8 %15 to i32, !dbg !20958
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20958
  br i1 %tobool5, label %if.end35, label %lor.lhs.false6, !dbg !20959

lor.lhs.false6:                                   ; preds = %while.body
  %16 = load i8*, i8** %zone_copy, align 8, !dbg !20960, !tbaa !2474
  %17 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20961, !tbaa !2474
  %abbrs7 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %17, i32 0, i32 2, !dbg !20962, !ctir !2200
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs7, i64 0, i64 0, !dbg !20961
  %cmp9 = icmp eq i8* %16, %arraydecay8, !dbg !20963
  br i1 %cmp9, label %land.lhs.true11, label %if.then14, !dbg !20964

land.lhs.true11:                                  ; preds = %lor.lhs.false6
  %18 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20965, !tbaa !2474
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %18, i32 0, i32 1, !dbg !20966, !ctir !2200
  %19 = load i8, i8* %tz_is_set, align 8, !dbg !20966, !tbaa !2529, !ctir !144
  %conv12 = sext i8 %19 to i32, !dbg !20965
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !20965
  br i1 %tobool13, label %if.end35, label %if.then14, !dbg !20967

if.then14:                                        ; preds = %land.lhs.true11, %lor.lhs.false6
  call void @llvm.dbg.declare(metadata i64* %zone_size, metadata !20968, metadata !DIExpression()), !dbg !20970
  %20 = load i8*, i8** %zone, align 8, !dbg !20971, !tbaa !2474
  %call15 = call i64 @strlen(i8* %20) #16, !dbg !20972
  %add = add i64 %call15, 1, !dbg !20973
  store i64 %add, i64* %zone_size, align 8, !dbg !20970, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %zone_used, metadata !20974, metadata !DIExpression()), !dbg !20975
  %21 = load i8*, i8** %zone_copy, align 8, !dbg !20976, !tbaa !2474
  %22 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20977, !tbaa !2474
  %abbrs16 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %22, i32 0, i32 2, !dbg !20978, !ctir !2200
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs16, i64 0, i64 0, !dbg !20977
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !20979
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay17 to i64, !dbg !20979
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20979
  store i64 %sub.ptr.sub, i64* %zone_used, align 8, !dbg !20975, !tbaa !2611
  %23 = load i64, i64* %zone_used, align 8, !dbg !20980, !tbaa !2611
  %sub = sub i64 -1, %23, !dbg !20982
  %24 = load i64, i64* %zone_size, align 8, !dbg !20983, !tbaa !2611
  %cmp18 = icmp ult i64 %sub, %24, !dbg !20984
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !20985

if.then20:                                        ; preds = %if.then14
  %call21 = call i32* @__errno_location() #17, !dbg !20986
  store i32 12, i32* %call21, align 4, !dbg !20988, !tbaa !2468, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !20989
  br label %return, !dbg !20989

if.end22:                                         ; preds = %if.then14
  %25 = load i64, i64* %zone_used, align 8, !dbg !20990, !tbaa !2611
  %26 = load i64, i64* %zone_size, align 8, !dbg !20992, !tbaa !2611
  %add23 = add i64 %25, %26, !dbg !20993
  %cmp24 = icmp ult i64 %add23, 119, !dbg !20994
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !20995

if.then26:                                        ; preds = %if.end22
  %27 = load i8*, i8** %zone_copy, align 8, !dbg !20996, !tbaa !2474
  %28 = load i8*, i8** %zone, align 8, !dbg !20997, !tbaa !2474
  %29 = load i64, i64* %zone_size, align 8, !dbg !20998, !tbaa !2611
  call void @extend_abbrs(i8* %27, i8* %28, i64 %29), !dbg !20999
  br label %if.end34, !dbg !20999

if.else:                                          ; preds = %if.end22
  %30 = load i8*, i8** %zone, align 8, !dbg !21000, !tbaa !2474
  %call27 = call %struct.tm_zone* @tzalloc(i8* %30), !dbg !21002
  %31 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21003, !tbaa !2474
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %31, i32 0, i32 0, !dbg !21004, !ctir !2200
  store %struct.tm_zone* %call27, %struct.tm_zone** %next, align 8, !dbg !21005, !tbaa !2474, !ctir !2199
  store %struct.tm_zone* %call27, %struct.tm_zone** %tz.addr, align 8, !dbg !21006, !tbaa !2474
  %32 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21007, !tbaa !2474
  %tobool28 = icmp ne %struct.tm_zone* %32, null, !dbg !21007
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !21009

if.then29:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !21010
  br label %return, !dbg !21010

if.end30:                                         ; preds = %if.else
  %33 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21011, !tbaa !2474
  %tz_is_set31 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %33, i32 0, i32 1, !dbg !21012, !ctir !2200
  store i8 0, i8* %tz_is_set31, align 8, !dbg !21013, !tbaa !2529, !ctir !144
  %34 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21014, !tbaa !2474
  %abbrs32 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %34, i32 0, i32 2, !dbg !21015, !ctir !2200
  %arraydecay33 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs32, i64 0, i64 0, !dbg !21014
  store i8* %arraydecay33, i8** %zone_copy, align 8, !dbg !21016, !tbaa !2474
  br label %if.end34

if.end34:                                         ; preds = %if.end30, %if.then26
  br label %while.end, !dbg !21017

if.end35:                                         ; preds = %land.lhs.true11, %while.body
  %35 = load i8*, i8** %zone_copy, align 8, !dbg !21018, !tbaa !2474
  %call36 = call i64 @strlen(i8* %35) #16, !dbg !21019
  %add37 = add i64 %call36, 1, !dbg !21020
  %36 = load i8*, i8** %zone_copy, align 8, !dbg !21021, !tbaa !2474
  %add.ptr38 = getelementptr inbounds i8, i8* %36, i64 %add37, !dbg !21021
  store i8* %add.ptr38, i8** %zone_copy, align 8, !dbg !21021, !tbaa !2474
  %37 = load i8*, i8** %zone_copy, align 8, !dbg !21022, !tbaa !2474
  %38 = load i8, i8* %37, align 1, !dbg !21024, !tbaa !2529, !ctir !144
  %tobool39 = icmp ne i8 %38, 0, !dbg !21024
  br i1 %tobool39, label %if.end47, label %land.lhs.true40, !dbg !21025

land.lhs.true40:                                  ; preds = %if.end35
  %39 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21026, !tbaa !2474
  %next41 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %39, i32 0, i32 0, !dbg !21027, !ctir !2200
  %40 = load %struct.tm_zone*, %struct.tm_zone** %next41, align 8, !dbg !21027, !tbaa !2474, !ctir !2199
  %tobool42 = icmp ne %struct.tm_zone* %40, null, !dbg !21026
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !21028

if.then43:                                        ; preds = %land.lhs.true40
  %41 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21029, !tbaa !2474
  %next44 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %41, i32 0, i32 0, !dbg !21031, !ctir !2200
  %42 = load %struct.tm_zone*, %struct.tm_zone** %next44, align 8, !dbg !21031, !tbaa !2474, !ctir !2199
  store %struct.tm_zone* %42, %struct.tm_zone** %tz.addr, align 8, !dbg !21032, !tbaa !2474
  %43 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21033, !tbaa !2474
  %abbrs45 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %43, i32 0, i32 2, !dbg !21034, !ctir !2200
  %arraydecay46 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs45, i64 0, i64 0, !dbg !21033
  store i8* %arraydecay46, i8** %zone_copy, align 8, !dbg !21035, !tbaa !2474
  br label %if.end47, !dbg !21036

if.end47:                                         ; preds = %if.then43, %land.lhs.true40, %if.end35
  br label %while.cond, !dbg !20950, !llvm.loop !21037

while.end:                                        ; preds = %if.end34, %while.cond
  br label %if.end48, !dbg !21039

if.end48:                                         ; preds = %while.end, %if.end
  %44 = load i8*, i8** %zone_copy, align 8, !dbg !21040, !tbaa !2474
  %45 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21041, !tbaa !2474
  %tm_zone49 = getelementptr inbounds %struct.tm, %struct.tm* %45, i32 0, i32 10, !dbg !21042, !ctir !2210
  store i8* %44, i8** %tm_zone49, align 8, !dbg !21043, !tbaa !15626, !ctir !146
  store i1 true, i1* %retval, align 1, !dbg !21044
  br label %return, !dbg !21044

return:                                           ; preds = %if.end48, %if.then29, %if.then20, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !21045
  ret i1 %46, !dbg !21045
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @revert_tz(%struct.tm_zone* %tz) #0 !dbg !21046 !ctir !2231 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  %saved_errno = alloca i32, align 4, !ctir !27
  %ok = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21047, metadata !DIExpression()), !dbg !21048
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21049, !tbaa !2474
  %cmp = icmp eq %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !21051
  br i1 %cmp, label %if.then, label %if.else, !dbg !21052

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21053
  br label %return, !dbg !21053

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21054, metadata !DIExpression()), !dbg !21056
  %call = call i32* @__errno_location() #17, !dbg !21057
  %1 = load i32, i32* %call, align 4, !dbg !21057, !tbaa !2468, !ctir !27
  store i32 %1, i32* %saved_errno, align 4, !dbg !21056, !tbaa !2468
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !21058, metadata !DIExpression()), !dbg !21059
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21060, !tbaa !2474
  %call1 = call zeroext i1 @change_env(%struct.tm_zone* %2), !dbg !21061
  %frombool = zext i1 %call1 to i8, !dbg !21059
  store i8 %frombool, i8* %ok, align 1, !dbg !21059, !tbaa !2493
  %3 = load i8, i8* %ok, align 1, !dbg !21062, !tbaa !2493
  %tobool = trunc i8 %3 to i1, !dbg !21062
  br i1 %tobool, label %if.end, label %if.then2, !dbg !21064

if.then2:                                         ; preds = %if.else
  %call3 = call i32* @__errno_location() #17, !dbg !21065
  %4 = load i32, i32* %call3, align 4, !dbg !21065, !tbaa !2468, !ctir !27
  store i32 %4, i32* %saved_errno, align 4, !dbg !21066, !tbaa !2468
  br label %if.end, !dbg !21067

if.end:                                           ; preds = %if.then2, %if.else
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21068, !tbaa !2474
  call void @tzfree(%struct.tm_zone* %5), !dbg !21069
  %6 = load i32, i32* %saved_errno, align 4, !dbg !21070, !tbaa !2468
  %call4 = call i32* @__errno_location() #17, !dbg !21071
  store i32 %6, i32* %call4, align 4, !dbg !21072, !tbaa !2468, !ctir !27
  %7 = load i8, i8* %ok, align 1, !dbg !21073, !tbaa !2493
  %tobool5 = trunc i8 %7 to i1, !dbg !21073
  store i1 %tobool5, i1* %retval, align 1, !dbg !21074
  br label %return, !dbg !21074

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !21075
  ret i1 %8, !dbg !21075
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_env(%struct.tm_zone* %tz) #0 !dbg !21076 !ctir !2231 {
entry:
  %retval = alloca i1, align 1, !ctir !141
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21077, metadata !DIExpression()), !dbg !21078
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21079, !tbaa !2474
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %0, i32 0, i32 1, !dbg !21081, !ctir !2200
  %1 = load i8, i8* %tz_is_set, align 8, !dbg !21081, !tbaa !2529, !ctir !144
  %conv = sext i8 %1 to i32, !dbg !21079
  %tobool = icmp ne i32 %conv, 0, !dbg !21079
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21079

cond.true:                                        ; preds = %entry
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21082, !tbaa !2474
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 2, !dbg !21083, !ctir !2200
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !21082
  br label %cond.end, !dbg !21079

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !21079
  %call = call i32 @setenv_TZ(i8* %cond), !dbg !21084
  %cmp = icmp ne i32 %call, 0, !dbg !21085
  br i1 %cmp, label %if.then, label %if.end, !dbg !21086

if.then:                                          ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !21087
  br label %return, !dbg !21087

if.end:                                           ; preds = %cond.end
  call void @tzset() #13, !dbg !21088
  store i1 true, i1* %retval, align 1, !dbg !21089
  br label %return, !dbg !21089

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !21090
  ret i1 %3, !dbg !21090
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setenv_TZ(i8* %tz) #0 !dbg !21091 !ctir !2233 {
entry:
  %tz.addr = alloca i8*, align 8, !ctir !146
  store i8* %tz, i8** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %tz.addr, metadata !21092, metadata !DIExpression()), !dbg !21093
  %0 = load i8*, i8** %tz.addr, align 8, !dbg !21094, !tbaa !2474
  %tobool = icmp ne i8* %0, null, !dbg !21094
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21094

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %tz.addr, align 8, !dbg !21095, !tbaa !2474
  %call = call i32 @setenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0), i8* %1, i32 1) #13, !dbg !21096
  br label %cond.end, !dbg !21094

cond.false:                                       ; preds = %entry
  %call1 = call i32 @unsetenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0)) #13, !dbg !21097
  br label %cond.end, !dbg !21094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21094
  ret i32 %cond, !dbg !21098
}

; Function Attrs: nounwind
declare dso_local void @tzset() #2

; Function Attrs: nounwind
declare dso_local i32 @setenv(i8*, i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @unsetenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @getenv_TZ() #0 !dbg !21099 !ctir !2131 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0)) #13, !dbg !21100
  ret i8* %call, !dbg !21101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mktime_z(%struct.tm_zone* %tz, %struct.tm* nonnull %tm) #0 !dbg !21102 !ctir !2225 {
entry:
  %retval = alloca i64, align 8, !ctir !162
  %tz.addr = alloca %struct.tm_zone*, align 8, !ctir !2198
  %tm.addr = alloca %struct.tm*, align 8, !ctir !2209
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2198
  %t = alloca i64, align 8, !ctir !162
  %badtime = alloca i64, align 8, !ctir !162
  %tm_1 = alloca %struct.tm, align 8, !ctir !2210
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21103, metadata !DIExpression()), !dbg !21104
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !21105, metadata !DIExpression()), !dbg !21106
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21107, !tbaa !2474
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !21107
  br i1 %tobool, label %if.else, label %if.then, !dbg !21109

if.then:                                          ; preds = %entry
  %1 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21110, !tbaa !2474
  %call = call i64 @timegm(%struct.tm* %1) #13, !dbg !21111
  store i64 %call, i64* %retval, align 8, !dbg !21112
  br label %return, !dbg !21112

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !21113, metadata !DIExpression()), !dbg !21115
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21116, !tbaa !2474
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %2), !dbg !21117
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !21115, !tbaa !2474
  %3 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21118, !tbaa !2474
  %tobool2 = icmp ne %struct.tm_zone* %3, null, !dbg !21118
  br i1 %tobool2, label %if.then3, label %if.end15, !dbg !21120

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %t, metadata !21121, metadata !DIExpression()), !dbg !21123
  %4 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21124, !tbaa !2474
  %call4 = call i64 @mktime(%struct.tm* %4) #13, !dbg !21125
  store i64 %call4, i64* %t, align 8, !dbg !21123, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %badtime, metadata !21126, metadata !DIExpression()), !dbg !21127
  store i64 -1, i64* %badtime, align 8, !dbg !21127, !tbaa !2611
  call void @llvm.dbg.declare(metadata %struct.tm* %tm_1, metadata !21128, metadata !DIExpression()), !dbg !21129
  %5 = load i64, i64* %t, align 8, !dbg !21130, !tbaa !2611
  %6 = load i64, i64* %badtime, align 8, !dbg !21132, !tbaa !2611
  %cmp = icmp ne i64 %5, %6, !dbg !21133
  br i1 %cmp, label %land.lhs.true9, label %lor.lhs.false, !dbg !21134

lor.lhs.false:                                    ; preds = %if.then3
  %call5 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tm_1) #13, !dbg !21135
  %tobool6 = icmp ne %struct.tm* %call5, null, !dbg !21135
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !21136

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21137, !tbaa !2474
  %call7 = call i32 @equal_tm(%struct.tm* %7, %struct.tm* %tm_1), !dbg !21138
  %tobool8 = icmp ne i32 %call7, 0, !dbg !21138
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !21139

land.lhs.true9:                                   ; preds = %land.lhs.true, %if.then3
  %8 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21140, !tbaa !2474
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21141, !tbaa !2474
  %call10 = call zeroext i1 @save_abbr(%struct.tm_zone* %8, %struct.tm* %9), !dbg !21142
  br i1 %call10, label %if.end, label %if.then11, !dbg !21143

if.then11:                                        ; preds = %land.lhs.true9
  %10 = load i64, i64* %badtime, align 8, !dbg !21144, !tbaa !2611
  store i64 %10, i64* %t, align 8, !dbg !21145, !tbaa !2611
  br label %if.end, !dbg !21146

if.end:                                           ; preds = %if.then11, %land.lhs.true9, %land.lhs.true, %lor.lhs.false
  %11 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21147, !tbaa !2474
  %call12 = call zeroext i1 @revert_tz(%struct.tm_zone* %11), !dbg !21149
  br i1 %call12, label %if.then13, label %if.end14, !dbg !21150

if.then13:                                        ; preds = %if.end
  %12 = load i64, i64* %t, align 8, !dbg !21151, !tbaa !2611
  store i64 %12, i64* %retval, align 8, !dbg !21152
  br label %return, !dbg !21152

if.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !21153

if.end15:                                         ; preds = %if.end14, %if.else
  store i64 -1, i64* %retval, align 8, !dbg !21154
  br label %return, !dbg !21154

return:                                           ; preds = %if.end15, %if.then13, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21155
  ret i64 %13, !dbg !21155
}

; Function Attrs: nounwind
declare dso_local i64 @timegm(%struct.tm*) #2

; Function Attrs: nounwind
declare dso_local i64 @mktime(%struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @equal_tm(%struct.tm* %a, %struct.tm* %b) #0 !dbg !21156 !ctir !2237 {
entry:
  %a.addr = alloca %struct.tm*, align 8, !ctir !2239
  %b.addr = alloca %struct.tm*, align 8, !ctir !2239
  store %struct.tm* %a, %struct.tm** %a.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %a.addr, metadata !21157, metadata !DIExpression()), !dbg !21158
  store %struct.tm* %b, %struct.tm** %b.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct.tm** %b.addr, metadata !21159, metadata !DIExpression()), !dbg !21160
  %0 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21161, !tbaa !2474
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 0, !dbg !21162, !ctir !2240
  %1 = load i32, i32* %tm_sec, align 8, !dbg !21162, !tbaa !16482, !ctir !27
  %2 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21163, !tbaa !2474
  %tm_sec1 = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 0, !dbg !21164, !ctir !2240
  %3 = load i32, i32* %tm_sec1, align 8, !dbg !21164, !tbaa !16482, !ctir !27
  %xor = xor i32 %1, %3, !dbg !21165
  %4 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21166, !tbaa !2474
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %4, i32 0, i32 1, !dbg !21167, !ctir !2240
  %5 = load i32, i32* %tm_min, align 4, !dbg !21167, !tbaa !16394, !ctir !27
  %6 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21168, !tbaa !2474
  %tm_min2 = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 1, !dbg !21169, !ctir !2240
  %7 = load i32, i32* %tm_min2, align 4, !dbg !21169, !tbaa !16394, !ctir !27
  %xor3 = xor i32 %5, %7, !dbg !21170
  %or = or i32 %xor, %xor3, !dbg !21171
  %8 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21172, !tbaa !2474
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2, !dbg !21173, !ctir !2240
  %9 = load i32, i32* %tm_hour, align 8, !dbg !21173, !tbaa !15613, !ctir !27
  %10 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21174, !tbaa !2474
  %tm_hour4 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 2, !dbg !21175, !ctir !2240
  %11 = load i32, i32* %tm_hour4, align 8, !dbg !21175, !tbaa !15613, !ctir !27
  %xor5 = xor i32 %9, %11, !dbg !21176
  %or6 = or i32 %or, %xor5, !dbg !21177
  %12 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21178, !tbaa !2474
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 3, !dbg !21179, !ctir !2240
  %13 = load i32, i32* %tm_mday, align 4, !dbg !21179, !tbaa !16015, !ctir !27
  %14 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21180, !tbaa !2474
  %tm_mday7 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 3, !dbg !21181, !ctir !2240
  %15 = load i32, i32* %tm_mday7, align 4, !dbg !21181, !tbaa !16015, !ctir !27
  %xor8 = xor i32 %13, %15, !dbg !21182
  %or9 = or i32 %or6, %xor8, !dbg !21183
  %16 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21184, !tbaa !2474
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 4, !dbg !21185, !ctir !2240
  %17 = load i32, i32* %tm_mon, align 8, !dbg !21185, !tbaa !6850, !ctir !27
  %18 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21186, !tbaa !2474
  %tm_mon10 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 4, !dbg !21187, !ctir !2240
  %19 = load i32, i32* %tm_mon10, align 8, !dbg !21187, !tbaa !6850, !ctir !27
  %xor11 = xor i32 %17, %19, !dbg !21188
  %or12 = or i32 %or9, %xor11, !dbg !21189
  %20 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21190, !tbaa !2474
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 5, !dbg !21191, !ctir !2240
  %21 = load i32, i32* %tm_year, align 4, !dbg !21191, !tbaa !15978, !ctir !27
  %22 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21192, !tbaa !2474
  %tm_year13 = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 5, !dbg !21193, !ctir !2240
  %23 = load i32, i32* %tm_year13, align 4, !dbg !21193, !tbaa !15978, !ctir !27
  %xor14 = xor i32 %21, %23, !dbg !21194
  %or15 = or i32 %or12, %xor14, !dbg !21195
  %24 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21196, !tbaa !2474
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %24, i32 0, i32 8, !dbg !21197, !ctir !2240
  %25 = load i32, i32* %tm_isdst, align 8, !dbg !21197, !tbaa !16768, !ctir !27
  %26 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21198, !tbaa !2474
  %tm_isdst16 = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 8, !dbg !21199, !ctir !2240
  %27 = load i32, i32* %tm_isdst16, align 8, !dbg !21199, !tbaa !16768, !ctir !27
  %call = call zeroext i1 @isdst_differ(i32 %25, i32 %27), !dbg !21200
  %conv = zext i1 %call to i32, !dbg !21200
  %or17 = or i32 %or15, %conv, !dbg !21201
  %tobool = icmp ne i32 %or17, 0, !dbg !21202
  %lnot = xor i1 %tobool, true, !dbg !21202
  %lnot.ext = zext i1 %lnot to i32, !dbg !21202
  ret i32 %lnot.ext, !dbg !21203
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isdst_differ(i32 %a, i32 %b) #0 !dbg !21204 !ctir !2241 {
entry:
  %a.addr = alloca i32, align 4, !ctir !27
  %b.addr = alloca i32, align 4, !ctir !27
  store i32 %a, i32* %a.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21205, metadata !DIExpression()), !dbg !21206
  store i32 %b, i32* %b.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !21207, metadata !DIExpression()), !dbg !21208
  %0 = load i32, i32* %a.addr, align 4, !dbg !21209, !tbaa !2468
  %tobool = icmp ne i32 %0, 0, !dbg !21210
  %lnot = xor i1 %tobool, true, !dbg !21210
  %lnot.ext = zext i1 %lnot to i32, !dbg !21210
  %1 = load i32, i32* %b.addr, align 4, !dbg !21211, !tbaa !2468
  %tobool1 = icmp ne i32 %1, 0, !dbg !21212
  %lnot2 = xor i1 %tobool1, true, !dbg !21212
  %lnot.ext3 = zext i1 %lnot2 to i32, !dbg !21212
  %cmp = icmp ne i32 %lnot.ext, %lnot.ext3, !dbg !21213
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !21214

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !21215, !tbaa !2468
  %cmp4 = icmp sle i32 0, %2, !dbg !21216
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !21217

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %b.addr, align 4, !dbg !21218, !tbaa !2468
  %cmp5 = icmp sle i32 0, %3, !dbg !21219
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %4 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !21220
  ret i1 %4, !dbg !21221
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #0 !dbg !21222 !ctir !2251 {
entry:
  %x.addr = alloca i64, align 8, !ctir !2253
  %n.addr = alloca i32, align 4, !ctir !27
  store i64 %x, i64* %x.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21224, metadata !DIExpression()), !dbg !21225
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21226, metadata !DIExpression()), !dbg !21227
  %0 = load i64, i64* %x.addr, align 8, !dbg !21228, !tbaa !2611
  %1 = load i32, i32* %n.addr, align 4, !dbg !21229, !tbaa !2468
  %sh_prom = zext i32 %1 to i64, !dbg !21230
  %shl = shl i64 %0, %sh_prom, !dbg !21230
  %2 = load i64, i64* %x.addr, align 8, !dbg !21231, !tbaa !2611
  %3 = load i32, i32* %n.addr, align 4, !dbg !21232, !tbaa !2468
  %sub = sub nsw i32 64, %3, !dbg !21233
  %sh_prom1 = zext i32 %sub to i64, !dbg !21234
  %shr = lshr i64 %2, %sh_prom1, !dbg !21234
  %or = or i64 %shl, %shr, !dbg !21235
  ret i64 %or, !dbg !21236
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #0 !dbg !21237 !ctir !2251 {
entry:
  %x.addr = alloca i64, align 8, !ctir !2253
  %n.addr = alloca i32, align 4, !ctir !27
  store i64 %x, i64* %x.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21238, metadata !DIExpression()), !dbg !21239
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21240, metadata !DIExpression()), !dbg !21241
  %0 = load i64, i64* %x.addr, align 8, !dbg !21242, !tbaa !2611
  %1 = load i32, i32* %n.addr, align 4, !dbg !21243, !tbaa !2468
  %sh_prom = zext i32 %1 to i64, !dbg !21244
  %shr = lshr i64 %0, %sh_prom, !dbg !21244
  %2 = load i64, i64* %x.addr, align 8, !dbg !21245, !tbaa !2611
  %3 = load i32, i32* %n.addr, align 4, !dbg !21246, !tbaa !2468
  %sub = sub nsw i32 64, %3, !dbg !21247
  %sh_prom1 = zext i32 %sub to i64, !dbg !21248
  %shl = shl i64 %2, %sh_prom1, !dbg !21248
  %or = or i64 %shr, %shl, !dbg !21249
  ret i64 %or, !dbg !21250
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #0 !dbg !21251 !ctir !2254 {
entry:
  %x.addr = alloca i32, align 4, !ctir !2256
  %n.addr = alloca i32, align 4, !ctir !27
  store i32 %x, i32* %x.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21252, metadata !DIExpression()), !dbg !21253
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21254, metadata !DIExpression()), !dbg !21255
  %0 = load i32, i32* %x.addr, align 4, !dbg !21256, !tbaa !2468
  %1 = load i32, i32* %n.addr, align 4, !dbg !21257, !tbaa !2468
  %shl = shl i32 %0, %1, !dbg !21258
  %2 = load i32, i32* %x.addr, align 4, !dbg !21259, !tbaa !2468
  %3 = load i32, i32* %n.addr, align 4, !dbg !21260, !tbaa !2468
  %sub = sub nsw i32 32, %3, !dbg !21261
  %shr = lshr i32 %2, %sub, !dbg !21262
  %or = or i32 %shl, %shr, !dbg !21263
  ret i32 %or, !dbg !21264
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #0 !dbg !21265 !ctir !2254 {
entry:
  %x.addr = alloca i32, align 4, !ctir !2256
  %n.addr = alloca i32, align 4, !ctir !27
  store i32 %x, i32* %x.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21266, metadata !DIExpression()), !dbg !21267
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21268, metadata !DIExpression()), !dbg !21269
  %0 = load i32, i32* %x.addr, align 4, !dbg !21270, !tbaa !2468
  %1 = load i32, i32* %n.addr, align 4, !dbg !21271, !tbaa !2468
  %shr = lshr i32 %0, %1, !dbg !21272
  %2 = load i32, i32* %x.addr, align 4, !dbg !21273, !tbaa !2468
  %3 = load i32, i32* %n.addr, align 4, !dbg !21274, !tbaa !2468
  %sub = sub nsw i32 32, %3, !dbg !21275
  %shl = shl i32 %2, %sub, !dbg !21276
  %or = or i32 %shr, %shl, !dbg !21277
  ret i32 %or, !dbg !21278
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #0 !dbg !21279 !ctir !2257 {
entry:
  %x.addr = alloca i64, align 8, !ctir !149
  %n.addr = alloca i32, align 4, !ctir !27
  store i64 %x, i64* %x.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21280, metadata !DIExpression()), !dbg !21281
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21282, metadata !DIExpression()), !dbg !21283
  %0 = load i64, i64* %x.addr, align 8, !dbg !21284, !tbaa !2611
  %1 = load i32, i32* %n.addr, align 4, !dbg !21285, !tbaa !2468
  %sh_prom = zext i32 %1 to i64, !dbg !21286
  %shl = shl i64 %0, %sh_prom, !dbg !21286
  %2 = load i64, i64* %x.addr, align 8, !dbg !21287, !tbaa !2611
  %3 = load i32, i32* %n.addr, align 4, !dbg !21288, !tbaa !2468
  %conv = sext i32 %3 to i64, !dbg !21288
  %sub = sub i64 64, %conv, !dbg !21289
  %shr = lshr i64 %2, %sub, !dbg !21290
  %or = or i64 %shl, %shr, !dbg !21291
  ret i64 %or, !dbg !21292
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #0 !dbg !21293 !ctir !2257 {
entry:
  %x.addr = alloca i64, align 8, !ctir !149
  %n.addr = alloca i32, align 4, !ctir !27
  store i64 %x, i64* %x.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21294, metadata !DIExpression()), !dbg !21295
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21296, metadata !DIExpression()), !dbg !21297
  %0 = load i64, i64* %x.addr, align 8, !dbg !21298, !tbaa !2611
  %1 = load i32, i32* %n.addr, align 4, !dbg !21299, !tbaa !2468
  %sh_prom = zext i32 %1 to i64, !dbg !21300
  %shr = lshr i64 %0, %sh_prom, !dbg !21300
  %2 = load i64, i64* %x.addr, align 8, !dbg !21301, !tbaa !2611
  %3 = load i32, i32* %n.addr, align 4, !dbg !21302, !tbaa !2468
  %conv = sext i32 %3 to i64, !dbg !21302
  %sub = sub i64 64, %conv, !dbg !21303
  %shl = shl i64 %2, %sub, !dbg !21304
  %or = or i64 %shr, %shl, !dbg !21305
  ret i64 %or, !dbg !21306
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #0 !dbg !21307 !ctir !2259 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2261
  %n.addr = alloca i32, align 4, !ctir !27
  store i16 %x, i16* %x.addr, align 2, !tbaa !5852
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21308, metadata !DIExpression()), !dbg !21309
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21310, metadata !DIExpression()), !dbg !21311
  %0 = load i16, i16* %x.addr, align 2, !dbg !21312, !tbaa !5852
  %conv = zext i16 %0 to i32, !dbg !21313
  %1 = load i32, i32* %n.addr, align 4, !dbg !21314, !tbaa !2468
  %shl = shl i32 %conv, %1, !dbg !21315
  %2 = load i16, i16* %x.addr, align 2, !dbg !21316, !tbaa !5852
  %conv1 = zext i16 %2 to i32, !dbg !21317
  %3 = load i32, i32* %n.addr, align 4, !dbg !21318, !tbaa !2468
  %sub = sub nsw i32 16, %3, !dbg !21319
  %shr = lshr i32 %conv1, %sub, !dbg !21320
  %or = or i32 %shl, %shr, !dbg !21321
  %and = and i32 %or, 65535, !dbg !21322
  %conv2 = trunc i32 %and to i16, !dbg !21323
  ret i16 %conv2, !dbg !21324
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #0 !dbg !21325 !ctir !2259 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2261
  %n.addr = alloca i32, align 4, !ctir !27
  store i16 %x, i16* %x.addr, align 2, !tbaa !5852
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21326, metadata !DIExpression()), !dbg !21327
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21328, metadata !DIExpression()), !dbg !21329
  %0 = load i16, i16* %x.addr, align 2, !dbg !21330, !tbaa !5852
  %conv = zext i16 %0 to i32, !dbg !21331
  %1 = load i32, i32* %n.addr, align 4, !dbg !21332, !tbaa !2468
  %shr = lshr i32 %conv, %1, !dbg !21333
  %2 = load i16, i16* %x.addr, align 2, !dbg !21334, !tbaa !5852
  %conv1 = zext i16 %2 to i32, !dbg !21335
  %3 = load i32, i32* %n.addr, align 4, !dbg !21336, !tbaa !2468
  %sub = sub nsw i32 16, %3, !dbg !21337
  %shl = shl i32 %conv1, %sub, !dbg !21338
  %or = or i32 %shr, %shl, !dbg !21339
  %and = and i32 %or, 65535, !dbg !21340
  %conv2 = trunc i32 %and to i16, !dbg !21341
  ret i16 %conv2, !dbg !21342
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #0 !dbg !21343 !ctir !2262 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2264
  %n.addr = alloca i32, align 4, !ctir !27
  store i8 %x, i8* %x.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21344, metadata !DIExpression()), !dbg !21345
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21346, metadata !DIExpression()), !dbg !21347
  %0 = load i8, i8* %x.addr, align 1, !dbg !21348, !tbaa !2529
  %conv = zext i8 %0 to i32, !dbg !21349
  %1 = load i32, i32* %n.addr, align 4, !dbg !21350, !tbaa !2468
  %shl = shl i32 %conv, %1, !dbg !21351
  %2 = load i8, i8* %x.addr, align 1, !dbg !21352, !tbaa !2529
  %conv1 = zext i8 %2 to i32, !dbg !21353
  %3 = load i32, i32* %n.addr, align 4, !dbg !21354, !tbaa !2468
  %sub = sub nsw i32 8, %3, !dbg !21355
  %shr = lshr i32 %conv1, %sub, !dbg !21356
  %or = or i32 %shl, %shr, !dbg !21357
  %and = and i32 %or, 255, !dbg !21358
  %conv2 = trunc i32 %and to i8, !dbg !21359
  ret i8 %conv2, !dbg !21360
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #0 !dbg !21361 !ctir !2262 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2264
  %n.addr = alloca i32, align 4, !ctir !27
  store i8 %x, i8* %x.addr, align 1, !tbaa !2529
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21362, metadata !DIExpression()), !dbg !21363
  store i32 %n, i32* %n.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21364, metadata !DIExpression()), !dbg !21365
  %0 = load i8, i8* %x.addr, align 1, !dbg !21366, !tbaa !2529
  %conv = zext i8 %0 to i32, !dbg !21367
  %1 = load i32, i32* %n.addr, align 4, !dbg !21368, !tbaa !2468
  %shr = lshr i32 %conv, %1, !dbg !21369
  %2 = load i8, i8* %x.addr, align 1, !dbg !21370, !tbaa !2529
  %conv1 = zext i8 %2 to i32, !dbg !21371
  %3 = load i32, i32* %n.addr, align 4, !dbg !21372, !tbaa !2468
  %sub = sub nsw i32 8, %3, !dbg !21373
  %shl = shl i32 %conv1, %sub, !dbg !21374
  %or = or i32 %shr, %shl, !dbg !21375
  %and = and i32 %or, 255, !dbg !21376
  %conv2 = trunc i32 %and to i8, !dbg !21377
  ret i8 %conv2, !dbg !21378
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !21379 !ctir !714 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %s1.addr = alloca i8*, align 8, !ctir !146
  %s2.addr = alloca i8*, align 8, !ctir !146
  %p1 = alloca i8*, align 8, !ctir !1665
  %p2 = alloca i8*, align 8, !ctir !1665
  %c1 = alloca i8, align 1, !ctir !579
  %c2 = alloca i8, align 1, !ctir !579
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !21381, metadata !DIExpression()), !dbg !21382
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !21383, metadata !DIExpression()), !dbg !21384
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !21385, metadata !DIExpression()), !dbg !21386
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !21387, !tbaa !2474
  store i8* %0, i8** %p1, align 8, !dbg !21386, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !21388, metadata !DIExpression()), !dbg !21389
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !21390, !tbaa !2474
  store i8* %1, i8** %p2, align 8, !dbg !21389, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !21391, metadata !DIExpression()), !dbg !21392
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !21393, metadata !DIExpression()), !dbg !21394
  %2 = load i8*, i8** %p1, align 8, !dbg !21395, !tbaa !2474
  %3 = load i8*, i8** %p2, align 8, !dbg !21397, !tbaa !2474
  %cmp = icmp eq i8* %2, %3, !dbg !21398
  br i1 %cmp, label %if.then, label %if.end, !dbg !21399

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21400
  br label %return, !dbg !21400

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !21401

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !21402, !tbaa !2474
  %5 = load i8, i8* %4, align 1, !dbg !21404, !tbaa !2529, !ctir !1666
  %conv = zext i8 %5 to i32, !dbg !21404
  %call = call i32 @c_tolower(i32 %conv), !dbg !21405
  %conv1 = trunc i32 %call to i8, !dbg !21405
  store i8 %conv1, i8* %c1, align 1, !dbg !21406, !tbaa !2529
  %6 = load i8*, i8** %p2, align 8, !dbg !21407, !tbaa !2474
  %7 = load i8, i8* %6, align 1, !dbg !21408, !tbaa !2529, !ctir !1666
  %conv2 = zext i8 %7 to i32, !dbg !21408
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !21409
  %conv4 = trunc i32 %call3 to i8, !dbg !21409
  store i8 %conv4, i8* %c2, align 1, !dbg !21410, !tbaa !2529
  %8 = load i8, i8* %c1, align 1, !dbg !21411, !tbaa !2529
  %conv5 = zext i8 %8 to i32, !dbg !21411
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !21413
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !21414

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !21415

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !21416, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !21416
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !21416, !tbaa !2474
  %10 = load i8*, i8** %p2, align 8, !dbg !21417, !tbaa !2474
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !21417
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !21417, !tbaa !2474
  br label %do.cond, !dbg !21418

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !21419, !tbaa !2529
  %conv11 = zext i8 %11 to i32, !dbg !21419
  %12 = load i8, i8* %c2, align 1, !dbg !21420, !tbaa !2529
  %conv12 = zext i8 %12 to i32, !dbg !21420
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !21421
  br i1 %cmp13, label %do.body, label %do.end, !dbg !21418, !llvm.loop !21422

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !21424, !tbaa !2529
  %conv15 = zext i8 %13 to i32, !dbg !21424
  %14 = load i8, i8* %c2, align 1, !dbg !21426, !tbaa !2529
  %conv16 = zext i8 %14 to i32, !dbg !21426
  %sub = sub nsw i32 %conv15, %conv16, !dbg !21427
  store i32 %sub, i32* %retval, align 4, !dbg !21428
  br label %return, !dbg !21428

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !21429
  ret i32 %15, !dbg !21429
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #0 !dbg !21430 !ctir !2271 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2273
  %some_pending = alloca i8, align 1, !ctir !2313
  %prev_fail = alloca i8, align 1, !ctir !2313
  %fclose_fail = alloca i8, align 1, !ctir !2313
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21432, metadata !DIExpression()), !dbg !21433
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !21434, metadata !DIExpression()), !dbg !21435
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21436, !tbaa !2474
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #13, !dbg !21437
  %cmp = icmp ne i64 %call, 0, !dbg !21438
  %frombool = zext i1 %cmp to i8, !dbg !21435
  store i8 %frombool, i8* %some_pending, align 1, !dbg !21435, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !21439, metadata !DIExpression()), !dbg !21440
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21441, !tbaa !2474
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #13, !dbg !21441
  %cmp2 = icmp ne i32 %call1, 0, !dbg !21442
  %frombool3 = zext i1 %cmp2 to i8, !dbg !21440
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !21440, !tbaa !2493
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !21443, metadata !DIExpression()), !dbg !21444
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21445, !tbaa !2474
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !21446
  %cmp5 = icmp ne i32 %call4, 0, !dbg !21447
  %frombool6 = zext i1 %cmp5 to i8, !dbg !21444
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !21444, !tbaa !2493
  %3 = load i8, i8* %prev_fail, align 1, !dbg !21448, !tbaa !2493
  %tobool = trunc i8 %3 to i1, !dbg !21448
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !21450

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !21451, !tbaa !2493
  %tobool7 = trunc i8 %4 to i1, !dbg !21451
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !21452

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !21453, !tbaa !2493
  %tobool8 = trunc i8 %5 to i1, !dbg !21453
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !21454

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #17, !dbg !21455
  %6 = load i32, i32* %call10, align 4, !dbg !21455, !tbaa !2468, !ctir !27
  %cmp11 = icmp ne i32 %6, 9, !dbg !21456
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !21457

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !21458, !tbaa !2493
  %tobool12 = trunc i8 %7 to i1, !dbg !21458
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !21461

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #17, !dbg !21462
  store i32 0, i32* %call14, align 4, !dbg !21463, !tbaa !2468, !ctir !27
  br label %if.end, !dbg !21462

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21464
  br label %return, !dbg !21464

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !21465
  br label %return, !dbg !21465

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !21466
  ret i32 %8, !dbg !21466
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #0 !dbg !21467 !ctir !560 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !146
  %result = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21469, metadata !DIExpression()), !dbg !21470
  call void @llvm.dbg.declare(metadata i8** %result, metadata !21471, metadata !DIExpression()), !dbg !21472
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21473, !tbaa !2474
  %call = call i8* @mdir_name(i8* %0), !dbg !21474
  store i8* %call, i8** %result, align 8, !dbg !21472, !tbaa !2474
  %1 = load i8*, i8** %result, align 8, !dbg !21475, !tbaa !2474
  %tobool = icmp ne i8* %1, null, !dbg !21475
  br i1 %tobool, label %if.end, label %if.then, !dbg !21477

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !21478
  unreachable, !dbg !21478

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !21479, !tbaa !2474
  ret i8* %2, !dbg !21480
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !21481 !ctir !328 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !175
  %tablesize.addr = alloca i64, align 8, !ctir !149
  %s = alloca i8*, align 8, !ctir !146
  %h = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21483, metadata !DIExpression()), !dbg !21484
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !21485, metadata !DIExpression()), !dbg !21486
  call void @llvm.dbg.declare(metadata i8** %s, metadata !21487, metadata !DIExpression()), !dbg !21488
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21489, metadata !DIExpression()), !dbg !21490
  store i64 0, i64* %h, align 8, !dbg !21490, !tbaa !2611
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21491, !tbaa !2474
  store i8* %0, i8** %s, align 8, !dbg !21493, !tbaa !2474
  br label %for.cond, !dbg !21494

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !21495, !tbaa !2474
  %2 = load i8, i8* %1, align 1, !dbg !21497, !tbaa !2529, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !21498
  br i1 %tobool, label %for.body, label %for.end, !dbg !21498

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !21499, !tbaa !2474
  %4 = load i8, i8* %3, align 1, !dbg !21500, !tbaa !2529, !ctir !147
  %conv = sext i8 %4 to i64, !dbg !21500
  %5 = load i64, i64* %h, align 8, !dbg !21501, !tbaa !2611
  %shl = shl i64 %5, 9, !dbg !21502
  %6 = load i64, i64* %h, align 8, !dbg !21503, !tbaa !2611
  %shr = lshr i64 %6, 55, !dbg !21504
  %or = or i64 %shl, %shr, !dbg !21505
  %add = add i64 %conv, %or, !dbg !21506
  store i64 %add, i64* %h, align 8, !dbg !21507, !tbaa !2611
  br label %for.inc, !dbg !21508

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !21509, !tbaa !2474
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !21509
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !21509, !tbaa !2474
  br label %for.cond, !dbg !21510, !llvm.loop !21511

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !21513, !tbaa !2611
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !21514, !tbaa !2611
  %rem = urem i64 %8, %9, !dbg !21515
  ret i64 %rem, !dbg !21516
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #0 !dbg !21517 !ctir !2323 {
entry:
  %codeset = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !21519, metadata !DIExpression()), !dbg !21520
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !21521
  store i8* %call, i8** %codeset, align 8, !dbg !21522, !tbaa !2474
  %0 = load i8*, i8** %codeset, align 8, !dbg !21523, !tbaa !2474
  %cmp = icmp eq i8* %0, null, !dbg !21525
  br i1 %cmp, label %if.then, label %if.end, !dbg !21526

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.531, i64 0, i64 0), i8** %codeset, align 8, !dbg !21527, !tbaa !2474
  br label %if.end, !dbg !21528

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !21529, !tbaa !2474
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !21529, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !21529, !tbaa !2529
  %conv = sext i8 %2 to i32, !dbg !21529
  %cmp1 = icmp eq i32 %conv, 0, !dbg !21533
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !21534

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.532, i64 0, i64 0), i8** %codeset, align 8, !dbg !21535, !tbaa !2474
  br label %if.end4, !dbg !21536

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !21537, !tbaa !2474
  ret i8* %3, !dbg !21538
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #0 !dbg !21539 !ctir !2327 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2329
  %saved_errno = alloca i32, align 4, !ctir !27
  %fd = alloca i32, align 4, !ctir !27
  %result = alloca i32, align 4, !ctir !27
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21541, metadata !DIExpression()), !dbg !21542
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21543, metadata !DIExpression()), !dbg !21544
  store i32 0, i32* %saved_errno, align 4, !dbg !21544, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21545, metadata !DIExpression()), !dbg !21546
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21547, metadata !DIExpression()), !dbg !21548
  store i32 0, i32* %result, align 4, !dbg !21548, !tbaa !2468
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21549, !tbaa !2474
  %call = call i32 @fileno(%struct._IO_FILE* %0) #13, !dbg !21550
  store i32 %call, i32* %fd, align 4, !dbg !21551, !tbaa !2468
  %1 = load i32, i32* %fd, align 4, !dbg !21552, !tbaa !2468
  %cmp = icmp slt i32 %1, 0, !dbg !21554
  br i1 %cmp, label %if.then, label %if.end, !dbg !21555

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21556, !tbaa !2474
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21557
  store i32 %call1, i32* %retval, align 4, !dbg !21558
  br label %return, !dbg !21558

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21559, !tbaa !2474
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #13, !dbg !21559
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21559
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21561

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21562, !tbaa !2474
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #13, !dbg !21563
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #13, !dbg !21564
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21565
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21566

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21567, !tbaa !2474
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21568
  %tobool = icmp ne i32 %call7, 0, !dbg !21568
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21569

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #17, !dbg !21570
  %6 = load i32, i32* %call9, align 4, !dbg !21570, !tbaa !2468, !ctir !27
  store i32 %6, i32* %saved_errno, align 4, !dbg !21571, !tbaa !2468
  br label %if.end10, !dbg !21572

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21573, !tbaa !2474
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21574
  store i32 %call11, i32* %result, align 4, !dbg !21575, !tbaa !2468
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21576, !tbaa !2468
  %cmp12 = icmp ne i32 %8, 0, !dbg !21578
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21579

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21580, !tbaa !2468
  %call14 = call i32* @__errno_location() #17, !dbg !21582
  store i32 %9, i32* %call14, align 4, !dbg !21583, !tbaa !2468, !ctir !27
  store i32 -1, i32* %result, align 4, !dbg !21584, !tbaa !2468
  br label %if.end15, !dbg !21585

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21586, !tbaa !2468
  store i32 %10, i32* %retval, align 4, !dbg !21587
  br label %return, !dbg !21587

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21588
  ret i32 %11, !dbg !21588
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #0 !dbg !21589 !ctir !2372 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2374
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21591, metadata !DIExpression()), !dbg !21592
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21593, !tbaa !2474
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !21595
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21596

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21597, !tbaa !2474
  %call = call i32 @__freading(%struct._IO_FILE* %1) #13, !dbg !21597
  %cmp1 = icmp ne i32 %call, 0, !dbg !21597
  br i1 %cmp1, label %if.end, label %if.then, !dbg !21598

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21599, !tbaa !2474
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !21600
  store i32 %call2, i32* %retval, align 4, !dbg !21601
  br label %return, !dbg !21601

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21602, !tbaa !2474
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !21603
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21604, !tbaa !2474
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !21605
  store i32 %call3, i32* %retval, align 4, !dbg !21606
  br label %return, !dbg !21606

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21607
  ret i32 %5, !dbg !21607
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #0 !dbg !21608 !ctir !2414 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2374
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21609, metadata !DIExpression()), !dbg !21610
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21611, !tbaa !2474
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !21613, !ctir !2375
  %1 = load i32, i32* %_flags, align 8, !dbg !21613, !tbaa !21614, !ctir !27
  %and = and i32 %1, 256, !dbg !21616
  %tobool = icmp ne i32 %and, 0, !dbg !21616
  br i1 %tobool, label %if.then, label %if.end, !dbg !21617

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21618, !tbaa !2474
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !21619
  br label %if.end, !dbg !21619

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !21620
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #0 !dbg !21621 !ctir !2419 {
entry:
  %retval = alloca i32, align 4, !ctir !27
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2421
  %offset.addr = alloca i64, align 8, !ctir !2461
  %whence.addr = alloca i32, align 4, !ctir !27
  %pos = alloca i64, align 8, !ctir !2461
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2474
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21623, metadata !DIExpression()), !dbg !21624
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2611
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !21625, metadata !DIExpression()), !dbg !21626
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2468
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !21627, metadata !DIExpression()), !dbg !21628
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21629, !tbaa !2474
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !21631, !ctir !2422
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !21631, !tbaa !21632, !ctir !143
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21633, !tbaa !2474
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !21634, !ctir !2422
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !21634, !tbaa !21635, !ctir !143
  %cmp = icmp eq i8* %1, %3, !dbg !21636
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !21637

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21638, !tbaa !2474
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !21639, !ctir !2422
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !21639, !tbaa !21640, !ctir !143
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21641, !tbaa !2474
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !21642, !ctir !2422
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !21642, !tbaa !21643, !ctir !143
  %cmp1 = icmp eq i8* %5, %7, !dbg !21644
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !21645

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21646, !tbaa !2474
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !21647, !ctir !2422
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !21647, !tbaa !21648, !ctir !143
  %cmp3 = icmp eq i8* %9, null, !dbg !21649
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !21650

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !21651, metadata !DIExpression()), !dbg !21653
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21654, !tbaa !2474
  %call = call i32 @fileno(%struct._IO_FILE* %10) #13, !dbg !21655
  %11 = load i64, i64* %offset.addr, align 8, !dbg !21656, !tbaa !2611
  %12 = load i32, i32* %whence.addr, align 4, !dbg !21657, !tbaa !2468
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #13, !dbg !21658
  store i64 %call4, i64* %pos, align 8, !dbg !21653, !tbaa !2611
  %13 = load i64, i64* %pos, align 8, !dbg !21659, !tbaa !2611
  %cmp5 = icmp eq i64 %13, -1, !dbg !21661
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21662

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21663
  br label %return, !dbg !21663

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21665, !tbaa !2474
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !21666, !ctir !2422
  %15 = load i32, i32* %_flags, align 8, !dbg !21667, !tbaa !21614, !ctir !27
  %and = and i32 %15, -17, !dbg !21667
  store i32 %and, i32* %_flags, align 8, !dbg !21667, !tbaa !21614, !ctir !27
  %16 = load i64, i64* %pos, align 8, !dbg !21668, !tbaa !2611
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21669, !tbaa !2474
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !21670, !ctir !2422
  store i64 %16, i64* %_offset, align 8, !dbg !21671, !tbaa !21672, !ctir !304
  store i32 0, i32* %retval, align 4, !dbg !21673
  br label %return, !dbg !21673

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21674, !tbaa !2474
  %19 = load i64, i64* %offset.addr, align 8, !dbg !21675, !tbaa !2611
  %20 = load i32, i32* %whence.addr, align 4, !dbg !21676, !tbaa !2468
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !21677
  store i32 %call8, i32* %retval, align 4, !dbg !21678
  br label %return, !dbg !21678

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !21679
  ret i32 %21, !dbg !21679
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind returns_twice }

!llvm.dbg.cu = !{!2, !1020, !1025, !1652, !1031, !1657, !1662, !1669, !1086, !1709, !1714, !1133, !1717, !1745, !1784, !1816, !1821, !1824, !1833, !1845, !1140, !1848, !1279, !1341, !1859, !1865, !1870, !1886, !1903, !1916, !1393, !1438, !1955, !1962, !1989, !2022, !2038, !1549, !2103, !2118, !2121, !2128, !2133, !2136, !2146, !2161, !2170, !2186, !1559, !2193, !2248, !2265, !2268, !2314, !2317, !2320, !2324, !2369, !2416}
!llvm.ident = !{!2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462, !2462}
!llvm.module.flags = !{!2463, !2464, !2465, !2466}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "exit_status", scope: !2, file: !3, line: 800, type: !27, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !161, globals: !798, nameTableKind: None)
!3 = !DIFile(filename: "src/ls.c", directory: "/home/mohamad/clone/coreutils")
!4 = !{!5, !13, !20, !26, !36, !48, !53, !79, !85, !90, !95, !109, !117, !123, !129, !137}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "format", file: !3, line: 419, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12}
!8 = !DIEnumerator(name: "long_format", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "one_per_line", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "many_per_line", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "horizontal", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "with_commas", value: 4, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !3, line: 576, baseType: !6, size: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19}
!15 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "DEREF_COMMAND_LINE_SYMLINK_TO_DIR", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "DEREF_ALWAYS", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_style", file: !3, line: 534, baseType: !6, size: 32, elements: !21)
!21 = !{!22, !23, !24, !25}
!22 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "slash", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "file_type", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "classify", value: 3, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sort_type", file: !3, line: 470, baseType: !27, size: 32, elements: !28)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !{!29, !30, !31, !32, !33, !34, !35}
!29 = !DIEnumerator(name: "sort_none", value: -1)
!30 = !DIEnumerator(name: "sort_name", value: 0)
!31 = !DIEnumerator(name: "sort_extension", value: 1)
!32 = !DIEnumerator(name: "sort_size", value: 2)
!33 = !DIEnumerator(name: "sort_version", value: 3)
!34 = !DIEnumerator(name: "sort_time", value: 4)
!35 = !DIEnumerator(name: "sort_numtypes", value: 5)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "filetype", file: !3, line: 164, baseType: !6, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47}
!38 = !DIEnumerator(name: "unknown", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "fifo", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "chardev", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "directory", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "blockdev", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "normal", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "symbolic_link", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "sock", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "whiteout", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "arg_directory", value: 9, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acl_type", file: !3, line: 192, baseType: !6, size: 32, elements: !49)
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "ACL_T_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "ACL_T_LSM_CONTEXT_ONLY", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "ACL_T_YES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_no", file: !3, line: 585, baseType: !6, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!55 = !DIEnumerator(name: "C_LEFT", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "C_RIGHT", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "C_END", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "C_RESET", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "C_NORM", value: 4, isUnsigned: true)
!60 = !DIEnumerator(name: "C_FILE", value: 5, isUnsigned: true)
!61 = !DIEnumerator(name: "C_DIR", value: 6, isUnsigned: true)
!62 = !DIEnumerator(name: "C_LINK", value: 7, isUnsigned: true)
!63 = !DIEnumerator(name: "C_FIFO", value: 8, isUnsigned: true)
!64 = !DIEnumerator(name: "C_SOCK", value: 9, isUnsigned: true)
!65 = !DIEnumerator(name: "C_BLK", value: 10, isUnsigned: true)
!66 = !DIEnumerator(name: "C_CHR", value: 11, isUnsigned: true)
!67 = !DIEnumerator(name: "C_MISSING", value: 12, isUnsigned: true)
!68 = !DIEnumerator(name: "C_ORPHAN", value: 13, isUnsigned: true)
!69 = !DIEnumerator(name: "C_EXEC", value: 14, isUnsigned: true)
!70 = !DIEnumerator(name: "C_DOOR", value: 15, isUnsigned: true)
!71 = !DIEnumerator(name: "C_SETUID", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "C_SETGID", value: 17, isUnsigned: true)
!73 = !DIEnumerator(name: "C_STICKY", value: 18, isUnsigned: true)
!74 = !DIEnumerator(name: "C_OTHER_WRITABLE", value: 19, isUnsigned: true)
!75 = !DIEnumerator(name: "C_STICKY_OTHER_WRITABLE", value: 20, isUnsigned: true)
!76 = !DIEnumerator(name: "C_CAP", value: 21, isUnsigned: true)
!77 = !DIEnumerator(name: "C_MULTIHARDLINK", value: 22, isUnsigned: true)
!78 = !DIEnumerator(name: "C_CLR_TO_EOL", value: 23, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_type", file: !3, line: 456, baseType: !6, size: 32, elements: !80)
!80 = !{!81, !82, !83, !84}
!81 = !DIEnumerator(name: "time_mtime", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "time_ctime", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "time_atime", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "time_numtypes", value: 3, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 672, baseType: !6, size: 32, elements: !86)
!86 = !{!87, !88, !89}
!87 = !DIEnumerator(name: "IGNORE_DEFAULT", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "IGNORE_DOT_AND_DOTDOT", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "IGNORE_MINIMAL", value: 2, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "when_type", file: !3, line: 569, baseType: !6, size: 32, elements: !91)
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "when_never", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "when_always", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "when_if_tty", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !96, line: 32, baseType: !6, size: 32, elements: !97)
!96 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!98 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !110, line: 26, baseType: !6, size: 32, elements: !111)
!110 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mohamad/clone/coreutils")
!111 = !{!112, !113, !114, !115, !116}
!112 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_style", file: !3, line: 433, baseType: !6, size: 32, elements: !118)
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "full_iso_time_style", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "long_iso_time_style", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "iso_time_style", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "locale_time_style", value: 3, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 19, baseType: !6, size: 32, elements: !125)
!124 = !DIFile(filename: "./lib/mbsalign.h", directory: "/home/mohamad/clone/coreutils")
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "MBS_ALIGN_LEFT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MBS_ALIGN_RIGHT", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "MBS_ALIGN_CENTER", value: 2, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "parse_state", file: !3, line: 2475, baseType: !6, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136}
!131 = !DIEnumerator(name: "PS_START", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "PS_2", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "PS_3", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "PS_4", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "PS_DONE", value: 5, isUnsigned: true)
!136 = !DIEnumerator(name: "PS_FAIL", value: 6, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !138, file: !3, line: 2286, baseType: !6, size: 32, elements: !153)
!138 = distinct !DISubprogram(name: "get_funky_string", scope: !3, file: !3, line: 2281, type: !139, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!139 = !DISubroutineType(types: !140)
!140 = !{!141, !142, !145, !141, !148}
!141 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !150, line: 46, baseType: !151)
!150 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!151 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!152 = !{}
!153 = !{!154, !155, !156, !157, !158, !159, !160}
!154 = !DIEnumerator(name: "ST_GND", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "ST_BACKSLASH", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "ST_OCTAL", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "ST_HEX", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "ST_CARET", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "ST_END", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "ST_ERROR", value: 6, isUnsigned: true)
!161 = !{!162, !167, !168, !149, !170, !148, !143, !151, !175, !146, !27, !177, !178, !181, !182, !233, !142, !235, !141, !164, !217, !242, !246, !250, !251, !259, !266, !315, !319, !323, !173, !325, !326, !328, !330, !256, !332, !258, !334, !336, !338, !341, !343, !390, !392, !394, !396, !398, !407, !411, !496, !498, !350, !499, !147, !504, !516, !520, !523, !525, !527, !531, !534, !538, !541, !545, !546, !548, !144, !549, !552, !553, !555, !320, !556, !558, !560, !562, !565, !567, !569, !574, !575, !577, !579, !580, !581, !587, !590, !592, !139, !145, !595, !597, !601, !194, !196, !610, !613, !615, !617, !619, !621, !623, !626, !628, !629, !641, !642, !644, !646, !648, !650, !651, !653, !654, !200, !226, !211, !202, !204, !656, !198, !180, !659, !661, !663, !665, !667, !669, !671, !673, !675, !676, !678, !680, !681, !683, !685, !687, !698, !706, !708, !710, !702, !704, !711, !713, !714, !716, !718, !720, !722, !724, !726, !727, !728, !730, !732, !734, !736, !738, !745, !746, !748, !750, !752, !753, !756, !759, !761, !763, !765, !767, !782, !784, !787, !789, !797}
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !163, line: 75, baseType: !164)
!163 = !DIFile(filename: "/usr/include/time.h", directory: "")
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !165, line: 139, baseType: !166)
!165 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!166 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !169, line: 135, baseType: !151)
!169 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !171, line: 85, baseType: !172)
!171 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DISubroutineType(types: !174)
!174 = !{null, !27}
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!177 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !179, line: 86, baseType: !180)
!179 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !165, line: 131, baseType: !166)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fileinfo", file: !3, line: 199, size: 1600, elements: !185)
!185 = !{!186, !187, !188, !189, !224, !225, !227, !228, !229, !230, !231, !232}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !184, file: !3, line: 202, baseType: !143, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "linkname", scope: !184, file: !3, line: 205, baseType: !143, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_name", scope: !184, file: !3, line: 208, baseType: !143, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !184, file: !3, line: 210, baseType: !190, size: 1152, offset: 192)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !192)
!191 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!192 = !{!193, !195, !197, !199, !201, !203, !205, !206, !207, !208, !210, !212, !218, !219, !220}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !190, file: !191, line: 48, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !165, line: 124, baseType: !151)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !190, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !165, line: 127, baseType: !151)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !190, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !165, line: 130, baseType: !151)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !190, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !165, line: 129, baseType: !6)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !190, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !165, line: 125, baseType: !6)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !190, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !165, line: 126, baseType: !6)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !190, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !190, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !190, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !190, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !165, line: 153, baseType: !166)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !190, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !165, line: 158, baseType: !166)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !190, file: !191, line: 91, baseType: !213, size: 128, offset: 576)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !213, file: !163, line: 122, baseType: !164, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !213, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !165, line: 175, baseType: !166)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !190, file: !191, line: 92, baseType: !213, size: 128, offset: 704)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !190, file: !191, line: 93, baseType: !213, size: 128, offset: 832)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !190, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 192, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 3)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "filetype", scope: !184, file: !3, line: 212, baseType: !36, size: 32, offset: 1344)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "linkmode", scope: !184, file: !3, line: 216, baseType: !226, size: 32, offset: 1376)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !179, line: 70, baseType: !200)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "scontext", scope: !184, file: !3, line: 219, baseType: !143, size: 64, offset: 1408)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stat_ok", scope: !184, file: !3, line: 221, baseType: !141, size: 8, offset: 1472)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "linkok", scope: !184, file: !3, line: 225, baseType: !141, size: 8, offset: 1480)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "acl_type", scope: !184, file: !3, line: 229, baseType: !48, size: 32, offset: 1504)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "has_capability", scope: !184, file: !3, line: 232, baseType: !141, size: 8, offset: 1536)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quoted", scope: !184, file: !3, line: 235, baseType: !27, size: 32, offset: 1568)
!233 = !DISubroutineType(types: !234)
!234 = !{!27, !27, !142}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pending", file: !3, line: 367, size: 256, elements: !237)
!237 = !{!238, !239, !240, !241}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !236, file: !3, line: 369, baseType: !143, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "realname", scope: !236, file: !3, line: 373, baseType: !143, size: 64, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "command_line_arg", scope: !236, file: !3, line: 374, baseType: !141, size: 8, offset: 128)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !236, file: !3, line: 375, baseType: !235, size: 64, offset: 192)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !244, line: 69, baseType: !245)
!244 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !244, line: 67, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !247, line: 764, baseType: !248)
!247 = !DIFile(filename: "./lib/time.h", directory: "/home/mohamad/clone/coreutils")
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !247, line: 764, flags: DIFlagFwdDecl)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !253, line: 7, size: 128, elements: !254)
!253 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mohamad/clone/coreutils")
!254 = !{!255, !257}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !252, file: !253, line: 9, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !179, line: 48, baseType: !196)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !252, file: !253, line: 10, baseType: !258, size: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !179, line: 60, baseType: !194)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 3072, elements: !264)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_str", file: !3, line: 244, size: 128, elements: !261)
!261 = !{!262, !263}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !260, file: !3, line: 246, baseType: !149, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !260, file: !3, line: 247, baseType: !146, size: 64, offset: 64)
!264 = !{!265}
!265 = !DISubrange(count: 24)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !269)
!268 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!269 = !{!270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !289, !290, !291, !292, !293, !294, !296, !300, !303, !305, !306, !307, !308, !309, !310, !311}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !267, file: !268, line: 242, baseType: !27, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !267, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !267, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !267, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !267, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !267, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !267, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !267, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !267, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !267, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !267, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !267, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !267, file: !268, line: 260, baseType: !283, size: 64, offset: 768)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !285)
!285 = !{!286, !287, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !284, file: !268, line: 157, baseType: !283, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !284, file: !268, line: 158, baseType: !266, size: 64, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !284, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !267, file: !268, line: 262, baseType: !266, size: 64, offset: 832)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !267, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !267, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !267, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !267, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !267, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!295 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !267, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8, elements: !298)
!298 = !{!299}
!299 = !DISubrange(count: 1)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !267, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !268, line: 150, baseType: null)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !267, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !165, line: 132, baseType: !166)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !267, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !267, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !267, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !267, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !267, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !267, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !267, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 160, elements: !313)
!313 = !{!314}
!314 = !DISubrange(count: 20)
!315 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !171, line: 40, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !318, line: 22, baseType: !27)
!318 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigset.h", directory: "")
!319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, elements: !321)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!321 = !{!322}
!322 = !DISubrange(count: -1)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !96, line: 270, flags: DIFlagFwdDecl)
!325 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !27)
!326 = !DISubroutineType(types: !327)
!327 = !{!141, !53}
!328 = !DISubroutineType(types: !329)
!329 = !{!149, !175, !149}
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!332 = !DISubroutineType(types: !333)
!333 = !{!141, !175, !175}
!334 = !DISubroutineType(types: !335)
!335 = !{null, !167}
!336 = !DISubroutineType(types: !337)
!337 = !{null}
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2048, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 256)
!341 = !DISubroutineType(types: !342)
!342 = !{!252}
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !346, line: 174, size: 704, elements: !347)
!346 = !DIFile(filename: "./lib/obstack.h", directory: "/home/mohamad/clone/coreutils")
!347 = !{!348, !349, !357, !358, !359, !360, !365, !366, !377, !386, !387, !388, !389}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !345, file: !346, line: 176, baseType: !149, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !345, file: !346, line: 177, baseType: !350, size: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !346, line: 167, size: 128, elements: !352)
!352 = !{!353, !354, !355}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !351, file: !346, line: 169, baseType: !143, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !351, file: !346, line: 170, baseType: !350, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !351, file: !346, line: 171, baseType: !356, offset: 128)
!356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, elements: !321)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !345, file: !346, line: 178, baseType: !143, size: 64, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !345, file: !346, line: 179, baseType: !143, size: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !345, file: !346, line: 180, baseType: !143, size: 64, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !345, file: !346, line: 185, baseType: !361, size: 64, offset: 320)
!361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !345, file: !346, line: 181, size: 64, elements: !362)
!362 = !{!363, !364}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !361, file: !346, line: 183, baseType: !149, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !361, file: !346, line: 184, baseType: !167, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !345, file: !346, line: 186, baseType: !149, size: 64, offset: 384)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !345, file: !346, line: 193, baseType: !367, size: 64, offset: 448)
!367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !345, file: !346, line: 189, size: 64, elements: !368)
!368 = !{!369, !373}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !367, file: !346, line: 191, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{!167, !149}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !367, file: !346, line: 192, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!167, !167, !149}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !345, file: !346, line: 198, baseType: !378, size: 64, offset: 512)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !345, file: !346, line: 194, size: 64, elements: !379)
!379 = !{!380, !382}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !378, file: !346, line: 196, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !378, file: !346, line: 197, baseType: !383, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !167, !167}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !345, file: !346, line: 200, baseType: !167, size: 64, offset: 576)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !345, file: !346, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !345, file: !346, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !345, file: !346, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!390 = !DISubroutineType(types: !391)
!391 = !{null, !235}
!392 = !DISubroutineType(types: !393)
!393 = !{null, !394}
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !260)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !141}
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !399, line: 37, baseType: !400)
!399 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !318, line: 30, baseType: !401)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 27, size: 1024, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !401, file: !318, line: 29, baseType: !404, size: 1024)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 1024, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 16)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 384, elements: !409)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!409 = !{!410}
!410 = !DISubrange(count: 12)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !413, file: !412, line: 28, size: 64, elements: !420)
!412 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !412, line: 24, size: 1216, elements: !414)
!414 = !{!415, !416, !417, !418}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !413, file: !412, line: 35, baseType: !411, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !413, file: !412, line: 43, baseType: !400, size: 1024, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !413, file: !412, line: 46, baseType: !27, size: 32, offset: 1088)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !413, file: !412, line: 49, baseType: !419, size: 64, offset: 1152)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!420 = !{!421, !422}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !411, file: !412, line: 31, baseType: !170, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !411, file: !412, line: 33, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{null, !27, !426, !167}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !428, line: 133, baseType: !429)
!428 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/siginfo.h", directory: "")
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !428, line: 62, size: 1024, elements: !430)
!430 = !{!431, !432, !433, !434}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !429, file: !428, line: 64, baseType: !27, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !429, file: !428, line: 65, baseType: !27, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !429, file: !428, line: 67, baseType: !27, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !429, file: !428, line: 132, baseType: !435, size: 896, offset: 128)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !429, file: !428, line: 69, size: 896, elements: !436)
!436 = !{!437, !441, !447, !458, !464, !474, !485, !490}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !435, file: !428, line: 71, baseType: !438, size: 896)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 896, elements: !439)
!439 = !{!440}
!440 = !DISubrange(count: 28)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !435, file: !428, line: 78, baseType: !442, size: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 74, size: 64, elements: !443)
!443 = !{!444, !446}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !442, file: !428, line: 76, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !165, line: 133, baseType: !27)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !442, file: !428, line: 77, baseType: !202, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !435, file: !428, line: 86, baseType: !448, size: 128)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 81, size: 128, elements: !449)
!449 = !{!450, !451, !452}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !448, file: !428, line: 83, baseType: !27, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !448, file: !428, line: 84, baseType: !27, size: 32, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !448, file: !428, line: 85, baseType: !453, size: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !428, line: 36, baseType: !454)
!454 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !428, line: 32, size: 64, elements: !455)
!455 = !{!456, !457}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !454, file: !428, line: 34, baseType: !27, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !454, file: !428, line: 35, baseType: !167, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !435, file: !428, line: 94, baseType: !459, size: 128)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 89, size: 128, elements: !460)
!460 = !{!461, !462, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !459, file: !428, line: 91, baseType: !445, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !459, file: !428, line: 92, baseType: !202, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !459, file: !428, line: 93, baseType: !453, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !435, file: !428, line: 104, baseType: !465, size: 256)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 97, size: 256, elements: !466)
!466 = !{!467, !468, !469, !470, !473}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !465, file: !428, line: 99, baseType: !445, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !465, file: !428, line: 100, baseType: !202, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !465, file: !428, line: 101, baseType: !27, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !465, file: !428, line: 102, baseType: !471, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigchld_clock_t", file: !428, line: 58, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !165, line: 135, baseType: !166)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !465, file: !428, line: 103, baseType: !471, size: 64, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !435, file: !428, line: 116, baseType: !475, size: 256)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 107, size: 256, elements: !476)
!476 = !{!477, !478, !480}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !475, file: !428, line: 109, baseType: !167, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !475, file: !428, line: 110, baseType: !479, size: 16, offset: 64)
!479 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_bnd", scope: !475, file: !428, line: 115, baseType: !481, size: 128, offset: 128)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !475, file: !428, line: 111, size: 128, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !481, file: !428, line: 113, baseType: !167, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !481, file: !428, line: 114, baseType: !167, size: 64, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !435, file: !428, line: 123, baseType: !486, size: 128)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 119, size: 128, elements: !487)
!487 = !{!488, !489}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !486, file: !428, line: 121, baseType: !166, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !486, file: !428, line: 122, baseType: !27, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !435, file: !428, line: 131, baseType: !491, size: 128)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !428, line: 126, size: 128, elements: !492)
!492 = !{!493, !494, !495}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !491, file: !428, line: 128, baseType: !167, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !491, file: !428, line: 129, baseType: !27, size: 32, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !491, file: !428, line: 130, baseType: !6, size: 32, offset: 96)
!496 = !DISubroutineType(types: !497)
!497 = !{null, !146, !498}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ignore_pattern", file: !3, line: 690, size: 128, elements: !501)
!501 = !{!502, !503}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !500, file: !3, line: 692, baseType: !146, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !500, file: !3, line: 693, baseType: !499, size: 64, offset: 64)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 11264, elements: !514)
!505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !507, line: 104, size: 256, elements: !508)
!507 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!508 = !{!509, !510, !511, !513}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !506, file: !507, line: 106, baseType: !146, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !506, file: !507, line: 109, baseType: !27, size: 32, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !506, file: !507, line: 110, baseType: !512, size: 64, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !506, file: !507, line: 111, baseType: !27, size: 32, offset: 192)
!514 = !{!515}
!515 = !DISubrange(count: 44)
!516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 160, elements: !518)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!518 = !{!519}
!519 = !DISubrange(count: 5)
!520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 384, elements: !521)
!521 = !{!522}
!522 = !DISubrange(count: 6)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !524, line: 61, baseType: !419)
!524 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !526, size: 160, elements: !518)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 224, elements: !529)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!529 = !{!530}
!530 = !DISubrange(count: 7)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 512, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 8)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 288, elements: !536)
!535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !90)
!536 = !{!537}
!537 = !DISubrange(count: 9)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 640, elements: !539)
!539 = !{!540}
!540 = !DISubrange(count: 10)
!541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, size: 128, elements: !543)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!543 = !{!544}
!544 = !DISubrange(count: 4)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 320, elements: !518)
!546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !547, elements: !321)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 48, elements: !521)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 128, elements: !550)
!550 = !{!551}
!551 = !DISubrange(count: 2)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !150, line: 35, baseType: !166)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !554, size: 128, elements: !543)
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{!141, !146}
!558 = !DISubroutineType(types: !559)
!559 = !{null, !146}
!560 = !DISubroutineType(types: !561)
!561 = !{!143, !146}
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 12288, elements: !563)
!563 = !{!410, !564}
!564 = !DISubrange(count: 128)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24576, elements: !566)
!566 = !{!551, !410, !564}
!567 = !DISubroutineType(types: !568)
!568 = !{!146, !146}
!569 = !DISubroutineType(types: !570)
!570 = !{!141, !571}
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1024, elements: !573)
!573 = !{!564}
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbs_align_t", file: !124, line: 19, baseType: !123)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!577 = !DISubroutineType(types: !578)
!578 = !{!579, !144}
!579 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24, elements: !222)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "color_ext_type", file: !3, line: 601, size: 320, elements: !583)
!583 = !{!584, !585, !586}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !582, file: !3, line: 603, baseType: !260, size: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !582, file: !3, line: 604, baseType: !260, size: 128, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !582, file: !3, line: 605, baseType: !581, size: 64, offset: 256)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 1600, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 25)
!590 = !DISubroutineType(types: !591)
!591 = !{!141}
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 34432, elements: !593)
!593 = !{!594}
!594 = !DISubrange(count: 4304)
!595 = !DISubroutineType(types: !596)
!596 = !{null, !146, !146, !141}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !599, line: 127, baseType: !600)
!599 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !599, line: 127, flags: DIFlagFwdDecl)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !603, line: 22, size: 2240, elements: !604)
!603 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!604 = !{!605, !606, !607, !608, !609}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !602, file: !603, line: 25, baseType: !196, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !602, file: !603, line: 26, baseType: !180, size: 64, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !602, file: !603, line: 31, baseType: !177, size: 16, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !602, file: !603, line: 32, baseType: !579, size: 8, offset: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !602, file: !603, line: 33, baseType: !338, size: 2048, offset: 152)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 5216, elements: !611)
!611 = !{!612}
!612 = !DISubrange(count: 652)
!613 = !DISubroutineType(types: !614)
!614 = !{null, !141, !146, !146}
!615 = !DISubroutineType(types: !616)
!616 = !{!141, !258, !256}
!617 = !DISubroutineType(types: !618)
!618 = !{null, !258, !256}
!619 = !DISubroutineType(types: !620)
!620 = !{!149, !146, !621, !27, !394, !141, !498, !146}
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 65536, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: 8192)
!626 = !DISubroutineType(types: !627)
!627 = !{!149, !142, !149, !143, !621, !27, !148, !628}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !630, line: 106, baseType: !631)
!630 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !630, line: 94, baseType: !632)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !630, line: 82, size: 64, elements: !633)
!633 = !{!634, !635}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !632, file: !630, line: 84, baseType: !27, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !632, file: !630, line: 93, baseType: !636, size: 32, offset: 32)
!636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !630, line: 85, size: 32, elements: !637)
!637 = !{!638, !639}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !636, file: !630, line: 88, baseType: !6, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !636, file: !630, line: 92, baseType: !640, size: 32)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 32, elements: !543)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !150, line: 74, baseType: !27)
!642 = !DISubroutineType(types: !643)
!643 = !{!141, !394}
!644 = !DISubroutineType(types: !645)
!645 = !{!143, !146, !141}
!646 = !DISubroutineType(types: !647)
!647 = !{!141, !648, !146}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{null, !250}
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 16, elements: !550)
!654 = !DISubroutineType(types: !655)
!655 = !{!168, !146, !36, !256, !141, !146}
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 168, elements: !657)
!657 = !{!658}
!658 = !DISubrange(count: 21)
!659 = !DISubroutineType(types: !660)
!660 = !{null, !143, !146, !146}
!661 = !DISubroutineType(types: !662)
!662 = !{!141, !146, !250}
!663 = !DISubroutineType(types: !664)
!664 = !{!141, !27}
!665 = !DISubroutineType(types: !666)
!666 = !{!27, !146, !250, !141}
!667 = !DISubroutineType(types: !668)
!668 = !{!27, !146, !250}
!669 = !DISubroutineType(types: !670)
!670 = !{null, !146, !250, !141}
!671 = !DISubroutineType(types: !672)
!672 = !{!143, !146, !146}
!673 = !DISubroutineType(types: !674)
!674 = !{!27, !675}
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !179, line: 80, baseType: !202)
!676 = !DISubroutineType(types: !677)
!677 = !{!27, !146, !151}
!678 = !DISubroutineType(types: !679)
!679 = !{!27, !680}
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !179, line: 65, baseType: !204)
!681 = !DISubroutineType(types: !682)
!682 = !{!168, !178}
!683 = !DISubroutineType(types: !684)
!684 = !{null, !146, !141}
!685 = !DISubroutineType(types: !686)
!686 = !{!141, !182}
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !688, line: 48, baseType: !689)
!688 = !DIFile(filename: "/usr/include/setjmp.h", directory: "")
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 1600, elements: !298)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !688, line: 34, size: 1600, elements: !691)
!691 = !{!692, !696, !697}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !690, file: !688, line: 40, baseType: !693, size: 512)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !694, line: 31, baseType: !695)
!694 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/setjmp.h", directory: "")
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 512, elements: !532)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !690, file: !688, line: 41, baseType: !27, size: 32, offset: 512)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !690, file: !688, line: 42, baseType: !400, size: 1024, offset: 576)
!698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 3584, elements: !705)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsortFunc", file: !3, line: 3585, baseType: !701)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{!27, !704, !704}
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "V", file: !3, line: 3584, baseType: !175)
!705 = !{!530, !551, !551, !551}
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 512, elements: !707)
!707 = !{!551, !551, !551}
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 256, elements: !709)
!709 = !{!551, !551}
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 128, elements: !550)
!711 = !DISubroutineType(types: !712)
!712 = !{!27, !182, !182, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!27, !146, !146}
!716 = !DISubroutineType(types: !717)
!717 = !{!27, !182, !182}
!718 = !DISubroutineType(types: !719)
!719 = !{!149, !182, !149}
!720 = !DISubroutineType(types: !721)
!721 = !{!143, !143, !149, !182}
!722 = !DISubroutineType(types: !723)
!723 = !{!149, !182, !141, !498, !149}
!724 = !DISubroutineType(types: !725)
!725 = !{!394, !182, !141}
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 320, elements: !539)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!728 = !DISubroutineType(types: !729)
!729 = !{!141, !141, !226, !36}
!730 = !DISubroutineType(types: !731)
!731 = !{!144, !141, !226, !36}
!732 = !DISubroutineType(types: !733)
!733 = !{null, !144}
!734 = !DISubroutineType(types: !735)
!735 = !{!149, !182}
!736 = !DISubroutineType(types: !737)
!737 = !{!149, !146, !621, !27}
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "column_info", file: !3, line: 937, size: 192, elements: !741)
!741 = !{!742, !743, !744}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "valid_len", scope: !740, file: !3, line: 939, baseType: !141, size: 8)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "line_len", scope: !740, file: !3, line: 940, baseType: !149, size: 64, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "col_arr", scope: !740, file: !3, line: 941, baseType: !148, size: 64, offset: 128)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{!149, !141}
!748 = !DISubroutineType(types: !749)
!749 = !{null, !149, !149}
!750 = !DISubroutineType(types: !751)
!751 = !{null, !182}
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 96, elements: !409)
!753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 29144, elements: !754)
!754 = !{!755}
!755 = !DISubrange(count: 3643)
!756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 88, elements: !757)
!757 = !{!758}
!758 = !DISubrange(count: 11)
!759 = !DISubroutineType(types: !760)
!760 = !{null, !675, !27, !141}
!761 = !DISubroutineType(types: !762)
!762 = !{null, !680, !27, !141}
!763 = !DISubroutineType(types: !764)
!764 = !{null, !146, !151, !27}
!765 = !DISubroutineType(types: !766)
!766 = !{!149, !143, !149, !141, !767, !246, !27}
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !163, line: 133, size: 448, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !769, file: !163, line: 135, baseType: !27, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !769, file: !163, line: 136, baseType: !27, size: 32, offset: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !769, file: !163, line: 137, baseType: !27, size: 32, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !769, file: !163, line: 138, baseType: !27, size: 32, offset: 96)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !769, file: !163, line: 139, baseType: !27, size: 32, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !769, file: !163, line: 140, baseType: !27, size: 32, offset: 160)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !769, file: !163, line: 141, baseType: !27, size: 32, offset: 192)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !769, file: !163, line: 142, baseType: !27, size: 32, offset: 224)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !769, file: !163, line: 143, baseType: !27, size: 32, offset: 256)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !769, file: !163, line: 146, baseType: !166, size: 64, offset: 320)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !769, file: !163, line: 147, baseType: !146, size: 64, offset: 384)
!782 = !DISubroutineType(types: !783)
!783 = !{!27}
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8008, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 1001)
!787 = !DISubroutineType(types: !788)
!788 = !{!143, !162, !143}
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !790, size: 896, elements: !529)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !793, file: !792, line: 633, size: 128, elements: !794)
!792 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!793 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !792, file: !792, line: 631, type: !558, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!794 = !{!795, !796}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !791, file: !792, line: 633, baseType: !146, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !791, file: !792, line: 633, baseType: !146, size: 64, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!798 = !{!799, !801, !803, !805, !807, !809, !811, !813, !815, !817, !819, !821, !823, !825, !827, !829, !831, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !0, !855, !857, !859, !861, !863, !865, !867, !869, !872, !874, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !953, !955, !957, !959, !962, !964, !966, !968, !970, !972, !974, !976, !978, !980, !982, !984, !986, !988, !990, !993, !996, !999, !1001, !1003, !1005, !1008, !1011, !1013, !1015}
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "active_dir_set", scope: !2, file: !3, line: 319, type: !242, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "cwd_file", scope: !2, file: !3, line: 330, type: !250, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "cwd_n_alloc", scope: !2, file: !3, line: 333, type: !149, isLocal: true, isDefinition: true)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "cwd_n_used", scope: !2, file: !3, line: 336, type: !149, isLocal: true, isDefinition: true)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "color_symlink_as_referent", scope: !2, file: !3, line: 355, type: !141, isLocal: true, isDefinition: true)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "hostname", scope: !2, file: !3, line: 357, type: !146, isLocal: true, isDefinition: true)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "pending_dirs", scope: !2, file: !3, line: 378, type: !235, isLocal: true, isDefinition: true)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "current_time", scope: !2, file: !3, line: 383, type: !213, isLocal: true, isDefinition: true)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "print_scontext", scope: !2, file: !3, line: 385, type: !141, isLocal: true, isDefinition: true)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "format", scope: !2, file: !3, line: 428, type: !5, isLocal: true, isDefinition: true)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "sort_type", scope: !2, file: !3, line: 481, type: !26, isLocal: true, isDefinition: true)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "print_block_size", scope: !2, file: !3, line: 510, type: !141, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "dired", scope: !2, file: !3, line: 525, type: !141, isLocal: true, isDefinition: true)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "indicator_style", scope: !2, file: !3, line: 542, type: !20, isLocal: true, isDefinition: true)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "print_with_color", scope: !2, file: !3, line: 559, type: !141, isLocal: true, isDefinition: true)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "print_hyperlink", scope: !2, file: !3, line: 561, type: !141, isLocal: true, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "check_symlink_mode", scope: !2, file: !3, line: 645, type: !141, isLocal: true, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "dereference", scope: !2, file: !3, line: 654, type: !13, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "recursive", scope: !2, file: !3, line: 659, type: !141, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "immediate_dirs", scope: !2, file: !3, line: 664, type: !141, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "directories_first", scope: !2, file: !3, line: 668, type: !141, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "filename_quoting_options", scope: !2, file: !3, line: 715, type: !323, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "print_dir_name", scope: !2, file: !3, line: 724, type: !141, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "localtz", scope: !2, file: !3, line: 733, type: !246, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "format_needs_stat", scope: !2, file: !3, line: 738, type: !141, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "format_needs_type", scope: !2, file: !3, line: 743, type: !141, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "interrupt_signal", scope: !2, file: !3, line: 792, type: !315, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "stop_signal_count", scope: !2, file: !3, line: 796, type: !315, isLocal: true, isDefinition: true)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "dired_pos", scope: !2, file: !3, line: 960, type: !149, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "dired_obstack", scope: !2, file: !3, line: 981, type: !345, isLocal: true, isDefinition: true)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "subdired_obstack", scope: !2, file: !3, line: 988, type: !345, isLocal: true, isDefinition: true)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "dev_ino_obstack", scope: !2, file: !3, line: 1002, type: !345, isLocal: true, isDefinition: true)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "RFC3986", scope: !2, file: !3, line: 1083, type: !338, isLocal: true, isDefinition: true)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "used_color", scope: !2, file: !3, line: 567, type: !141, isLocal: true, isDefinition: true)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "color_indicator", scope: !2, file: !3, line: 608, type: !259, isLocal: true, isDefinition: true)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "sig", scope: !871, file: !3, line: 1358, type: !407, isLocal: true, isDefinition: true)
!871 = distinct !DISubprogram(name: "signal_setup", scope: !3, file: !3, line: 1355, type: !396, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "caught_signals", scope: !2, file: !3, line: 788, type: !398, isLocal: true, isDefinition: true)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "posix_prefix", scope: !876, file: !3, line: 2181, type: !877, isLocal: true, isDefinition: true)
!876 = distinct !DISubprogram(name: "decode_switches", scope: !3, file: !3, line: 1688, type: !233, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 56, elements: !529)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "qmark_funny_chars", scope: !2, file: !3, line: 711, type: !141, isLocal: true, isDefinition: true)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "time_type", scope: !2, file: !3, line: 464, type: !79, isLocal: true, isDefinition: true)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "sort_reverse", scope: !2, file: !3, line: 489, type: !141, isLocal: true, isDefinition: true)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "numeric_ids", scope: !2, file: !3, line: 506, type: !141, isLocal: true, isDefinition: true)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "print_inode", scope: !2, file: !3, line: 649, type: !141, isLocal: true, isDefinition: true)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "ignore_mode", scope: !2, file: !3, line: 683, type: !85, isLocal: true, isDefinition: true)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "ignore_patterns", scope: !2, file: !3, line: 696, type: !499, isLocal: true, isDefinition: true)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "hide_patterns", scope: !2, file: !3, line: 700, type: !499, isLocal: true, isDefinition: true)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "line_length", scope: !2, file: !3, line: 729, type: !149, isLocal: true, isDefinition: true)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "tabsize", scope: !2, file: !3, line: 720, type: !149, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 839, type: !504, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "print_owner", scope: !2, file: !3, line: 493, type: !141, isLocal: true, isDefinition: true)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "human_output_opts", scope: !2, file: !3, line: 513, type: !27, isLocal: true, isDefinition: true)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "file_human_output_opts", scope: !2, file: !3, line: 519, type: !27, isLocal: true, isDefinition: true)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "output_block_size", scope: !2, file: !3, line: 516, type: !168, isLocal: true, isDefinition: true)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "file_output_block_size", scope: !2, file: !3, line: 520, type: !168, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "print_group", scope: !2, file: !3, line: 501, type: !141, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "print_author", scope: !2, file: !3, line: 497, type: !141, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "sort_types", scope: !2, file: !3, line: 905, type: !516, isLocal: true, isDefinition: true)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "sort_args", scope: !2, file: !3, line: 901, type: !520, isLocal: true, isDefinition: true)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "time_types", scope: !2, file: !3, line: 915, type: !525, isLocal: true, isDefinition: true)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "time_args", scope: !2, file: !3, line: 911, type: !520, isLocal: true, isDefinition: true)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "format_types", scope: !2, file: !3, line: 894, type: !527, isLocal: true, isDefinition: true)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "format_args", scope: !2, file: !3, line: 889, type: !531, isLocal: true, isDefinition: true)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "when_types", scope: !2, file: !3, line: 928, type: !534, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "when_args", scope: !2, file: !3, line: 921, type: !538, isLocal: true, isDefinition: true)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "indicator_style_types", scope: !2, file: !3, line: 549, type: !541, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "indicator_style_args", scope: !2, file: !3, line: 545, type: !545, isLocal: true, isDefinition: true)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "max_idx", scope: !2, file: !3, line: 948, type: !149, isLocal: true, isDefinition: true)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "align_variable_outer_quotes", scope: !2, file: !3, line: 343, type: !141, isLocal: true, isDefinition: true)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "dirname_quoting_options", scope: !2, file: !3, line: 716, type: !323, isLocal: true, isDefinition: true)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "long_time_format", scope: !2, file: !3, line: 756, type: !549, isLocal: true, isDefinition: true)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "time_style_args", scope: !2, file: !3, line: 441, type: !545, isLocal: true, isDefinition: true)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "time_style_types", scope: !2, file: !3, line: 445, type: !553, isLocal: true, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "abformat", scope: !2, file: !3, line: 1107, type: !565, isLocal: true, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "use_abformat", scope: !2, file: !3, line: 1111, type: !141, isLocal: true, isDefinition: true)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "G_line", scope: !2, file: !952, line: 1, type: !592, isLocal: true, isDefinition: true)
!952 = !DIFile(filename: "src/dircolors.h", directory: "/home/mohamad/clone/coreutils")
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "color_buf", scope: !2, file: !3, line: 640, type: !143, isLocal: true, isDefinition: true)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "color_ext_list", scope: !2, file: !3, line: 637, type: !581, isLocal: true, isDefinition: true)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "indicator_name", scope: !2, file: !3, line: 594, type: !587, isLocal: true, isDefinition: true)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "first", scope: !961, file: !3, line: 2725, type: !141, isLocal: true, isDefinition: true)
!961 = distinct !DISubprogram(name: "print_dir", scope: !3, file: !3, line: 2720, type: !595, scopeLine: 2721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "cwd_some_quoted", scope: !2, file: !3, line: 339, type: !141, isLocal: true, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "sorted_file", scope: !2, file: !3, line: 347, type: !650, isLocal: true, isDefinition: true)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "UNKNOWN_SECURITY_CONTEXT", scope: !2, file: !3, line: 386, type: !653, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "any_has_acl", scope: !2, file: !3, line: 391, type: !141, isLocal: true, isDefinition: true)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "inode_number_width", scope: !2, file: !3, line: 397, type: !27, isLocal: true, isDefinition: true)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "block_size_width", scope: !2, file: !3, line: 398, type: !27, isLocal: true, isDefinition: true)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "nlink_width", scope: !2, file: !3, line: 399, type: !27, isLocal: true, isDefinition: true)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "owner_width", scope: !2, file: !3, line: 401, type: !27, isLocal: true, isDefinition: true)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "group_width", scope: !2, file: !3, line: 402, type: !27, isLocal: true, isDefinition: true)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "author_width", scope: !2, file: !3, line: 403, type: !27, isLocal: true, isDefinition: true)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "scontext_width", scope: !2, file: !3, line: 400, type: !27, isLocal: true, isDefinition: true)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "major_device_number_width", scope: !2, file: !3, line: 404, type: !27, isLocal: true, isDefinition: true)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "minor_device_number_width", scope: !2, file: !3, line: 405, type: !27, isLocal: true, isDefinition: true)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "file_size_width", scope: !2, file: !3, line: 406, type: !27, isLocal: true, isDefinition: true)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !992, file: !3, line: 3084, type: !258, isLocal: true, isDefinition: true)
!992 = distinct !DISubprogram(name: "has_capability_cache", scope: !3, file: !3, line: 3080, type: !661, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !995, file: !3, line: 3029, type: !258, isLocal: true, isDefinition: true)
!995 = distinct !DISubprogram(name: "getfilecon_cache", scope: !3, file: !3, line: 3025, type: !665, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !998, file: !3, line: 3059, type: !258, isLocal: true, isDefinition: true)
!998 = distinct !DISubprogram(name: "file_has_acl_cache", scope: !3, file: !3, line: 3055, type: !667, scopeLine: 3056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "sorted_file_alloc", scope: !2, file: !3, line: 348, type: !149, isLocal: true, isDefinition: true)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "failed_strcoll", scope: !2, file: !3, line: 3564, type: !687, isLocal: true, isDefinition: true)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "sort_functions", scope: !2, file: !3, line: 3741, type: !698, isLocal: true, isDefinition: true)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "filetype_indicator", scope: !1007, file: !3, line: 4710, type: !726, isLocal: true, isDefinition: true)
!1007 = distinct !DISubprogram(name: "get_color_indicator", scope: !3, file: !3, line: 4682, type: !724, scopeLine: 4683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "column_info_alloc", scope: !1010, file: !3, line: 5015, type: !149, isLocal: true, isDefinition: true)
!1010 = distinct !DISubprogram(name: "init_column_info", scope: !3, file: !3, line: 5009, type: !336, scopeLine: 5010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "column_info", scope: !2, file: !3, line: 945, type: !745, isLocal: true, isDefinition: true)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "filetype_letter", scope: !2, file: !3, line: 180, type: !756, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "width", scope: !1017, file: !3, line: 3895, type: !27, isLocal: true, isDefinition: true)
!1017 = distinct !DISubprogram(name: "long_time_expected_width", scope: !3, file: !3, line: 3893, type: !782, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "ls_mode", scope: !1020, file: !1021, line: 2, type: !27, isLocal: false, isDefinition: true)
!1020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1021, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !783, globals: !1022, nameTableKind: None)
!1021 = !DIFile(filename: "src/ls-ls.c", directory: "/home/mohamad/clone/coreutils")
!1022 = !{!1018}
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "Version", scope: !1025, file: !1026, line: 2, type: !146, isLocal: false, isDefinition: true)
!1025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1026, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1027, globals: !1028, nameTableKind: None)
!1026 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!1027 = !{!146}
!1028 = !{!1023}
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1031, file: !1083, line: 67, type: !523, isLocal: false, isDefinition: true)
!1031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1032, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1033, globals: !1082, nameTableKind: None)
!1032 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1033 = !{!167, !146, !523, !1034, !552, !555, !175, !149, !141, !1036, !1038, !1040, !1078, !1080, !336}
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!552, !146, !555, !175, !149}
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !146, !146, !552}
!1038 = !DISubroutineType(types: !1039)
!1039 = !{null, !555, !175, !149}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !1042)
!1042 = !{!1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1041, file: !268, line: 242, baseType: !27, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1041, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1041, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1041, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1041, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1041, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1041, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1041, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1041, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1041, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1041, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1041, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1041, file: !268, line: 260, baseType: !1056, size: 64, offset: 768)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !1058)
!1058 = !{!1059, !1060, !1061}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1057, file: !268, line: 157, baseType: !1056, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1057, file: !268, line: 158, baseType: !1040, size: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1057, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1041, file: !268, line: 262, baseType: !1040, size: 64, offset: 832)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1041, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1041, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1041, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1041, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1041, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1041, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1041, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1041, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1041, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1041, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1041, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1041, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1041, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1041, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1041, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!552, !146, !146, !555, !175, !149, !523}
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!146, !175, !555, !175, !149}
!1082 = !{!1029}
!1083 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "file_name", scope: !1086, file: !1130, line: 46, type: !146, isLocal: true, isDefinition: true)
!1086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1087, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1088, globals: !1127, nameTableKind: None)
!1087 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!1088 = !{!558, !146, !396, !141, !336, !1089, !27, !325}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1090, file: !268, line: 242, baseType: !27, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1090, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1090, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1090, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1090, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1090, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1090, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1090, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1090, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1090, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1090, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1090, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1090, file: !268, line: 260, baseType: !1105, size: 64, offset: 768)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !1107)
!1107 = !{!1108, !1109, !1110}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1106, file: !268, line: 157, baseType: !1105, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1106, file: !268, line: 158, baseType: !1089, size: 64, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1106, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1090, file: !268, line: 262, baseType: !1089, size: 64, offset: 832)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1090, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1090, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1090, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1090, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1090, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1090, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1090, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1090, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1090, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1090, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1090, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1090, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1090, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1090, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1090, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!1127 = !{!1084, !1128}
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !1086, file: !1130, line: 56, type: !141, isLocal: true, isDefinition: true)
!1130 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "exit_failure", scope: !1133, file: !1137, line: 24, type: !325, isLocal: false, isDefinition: true)
!1133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1134, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1135, globals: !1136, nameTableKind: None)
!1134 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!1135 = !{!325}
!1136 = !{!1131}
!1137 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "default_tuning", scope: !1140, file: !1149, line: 130, type: !1165, isLocal: true, isDefinition: true)
!1140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1141, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1142, globals: !1276, nameTableKind: None)
!1141 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!1142 = !{!151, !167, !149, !1143, !1145, !1146, !1158, !1152, !1184, !141, !1186, !1188, !1229, !175, !1179, !1231, !1233, !650, !1235, !1237, !1241, !146, !579, !147, !1243, !1245, !1165, !1246, !1248, !1164, !1176, !1182, !1147, !1249, !1251, !1253, !27, !181, !1170, !1255, !1257, !328, !332, !1259, !1261, !1263, !1265, !1267, !1269, !1271, !1273, !1274}
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!149, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !244, line: 69, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1149, line: 52, size: 640, elements: !1150)
!1149 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!1150 = !{!1151, !1157, !1160, !1161, !1162, !1163, !1175, !1178, !1181, !1183}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !1148, file: !1149, line: 57, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !1149, line: 46, size: 128, elements: !1154)
!1154 = !{!1155, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1153, file: !1149, line: 48, baseType: !167, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1153, file: !1149, line: 49, baseType: !1152, size: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !1148, file: !1149, line: 58, baseType: !1158, size: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1153)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !1148, file: !1149, line: 59, baseType: !149, size: 64, offset: 128)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !1148, file: !1149, line: 60, baseType: !149, size: 64, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !1148, file: !1149, line: 61, baseType: !149, size: 64, offset: 256)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !1148, file: !1149, line: 64, baseType: !1164, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !244, line: 65, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !244, line: 53, size: 160, elements: !1168)
!1168 = !{!1169, !1171, !1172, !1173, !1174}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !1167, file: !244, line: 58, baseType: !1170, size: 32)
!1170 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !1167, file: !244, line: 59, baseType: !1170, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !1167, file: !244, line: 60, baseType: !1170, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !1167, file: !244, line: 61, baseType: !1170, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !1167, file: !244, line: 62, baseType: !141, size: 8, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !1148, file: !1149, line: 71, baseType: !1176, size: 64, offset: 384)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !244, line: 48, baseType: !1177)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !1148, file: !1149, line: 72, baseType: !1179, size: 64, offset: 448)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !244, line: 49, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !1148, file: !1149, line: 73, baseType: !1182, size: 64, offset: 512)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !244, line: 50, baseType: !381)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !1148, file: !1149, line: 76, baseType: !1152, size: 64, offset: 576)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!141, !1145}
!1186 = !DISubroutineType(types: !1187)
!1187 = !{null, !1145, !1188}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1190, line: 48, baseType: !1191)
!1190 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1191, file: !268, line: 242, baseType: !27, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1191, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1191, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1191, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1191, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1191, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1191, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1191, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1191, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1191, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1191, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1191, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1191, file: !268, line: 260, baseType: !1206, size: 64, offset: 768)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !1208)
!1208 = !{!1209, !1210, !1212}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1207, file: !268, line: 157, baseType: !1206, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1207, file: !268, line: 158, baseType: !1211, size: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1207, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1191, file: !268, line: 262, baseType: !1211, size: 64, offset: 832)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1191, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1191, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1191, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1191, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1191, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1191, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1191, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1191, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1191, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1191, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1191, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1191, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1191, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1191, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1191, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!167, !1145, !175}
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!167, !1145}
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!149, !1145, !650, !149}
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!149, !1145, !1237, !167}
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !244, line: 51, baseType: !1238)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!141, !167, !167}
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!149, !146, !149}
!1243 = !DISubroutineType(types: !1244)
!1244 = !{null, !1245}
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!1248, !149, !1164, !1176, !1179, !1182}
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1248}
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!141, !1248, !149}
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!27, !1248, !175, !181}
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!167, !1248, !175}
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!1152, !1145, !175}
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!141, !1248}
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!149, !149, !1164}
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!149, !149}
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!141, !149}
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!141, !1248, !1248, !141}
!1269 = !DISubroutineType(types: !1270)
!1270 = !{null, !1248, !1152}
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!167, !1248, !175, !1273, !141}
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!1152, !1248}
!1276 = !{!1138}
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "power_letter", scope: !1279, file: !1336, line: 36, type: !1315, isLocal: true, isDefinition: true)
!1279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1280, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1281, retainedTypes: !1282, globals: !1333, nameTableKind: None)
!1280 = !DIFile(filename: "./lib/human.c", directory: "/home/mohamad/clone/coreutils")
!1281 = !{!109}
!1282 = !{!175, !1283, !143, !168, !27, !6, !146, !149, !1285, !1314, !144, !1315, !1316, !512, !1318, !1319, !1320, !1322, !1324, !579, !147, !1327, !1329, !1330, !1331}
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!143, !168, !143, !27, !168, !168}
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !1288, line: 53, size: 768, elements: !1289)
!1288 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !1287, file: !1288, line: 57, baseType: !143, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "thousands_sep", scope: !1287, file: !1288, line: 58, baseType: !143, size: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !1287, file: !1288, line: 64, baseType: !143, size: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "int_curr_symbol", scope: !1287, file: !1288, line: 70, baseType: !143, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "currency_symbol", scope: !1287, file: !1288, line: 71, baseType: !143, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "mon_decimal_point", scope: !1287, file: !1288, line: 72, baseType: !143, size: 64, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "mon_thousands_sep", scope: !1287, file: !1288, line: 73, baseType: !143, size: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "mon_grouping", scope: !1287, file: !1288, line: 74, baseType: !143, size: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "positive_sign", scope: !1287, file: !1288, line: 75, baseType: !143, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sign", scope: !1287, file: !1288, line: 76, baseType: !143, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "int_frac_digits", scope: !1287, file: !1288, line: 77, baseType: !144, size: 8, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "frac_digits", scope: !1287, file: !1288, line: 78, baseType: !144, size: 8, offset: 648)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "p_cs_precedes", scope: !1287, file: !1288, line: 80, baseType: !144, size: 8, offset: 656)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "p_sep_by_space", scope: !1287, file: !1288, line: 82, baseType: !144, size: 8, offset: 664)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "n_cs_precedes", scope: !1287, file: !1288, line: 84, baseType: !144, size: 8, offset: 672)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "n_sep_by_space", scope: !1287, file: !1288, line: 86, baseType: !144, size: 8, offset: 680)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "p_sign_posn", scope: !1287, file: !1288, line: 93, baseType: !144, size: 8, offset: 688)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "n_sign_posn", scope: !1287, file: !1288, line: 94, baseType: !144, size: 8, offset: 696)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_cs_precedes", scope: !1287, file: !1288, line: 97, baseType: !144, size: 8, offset: 704)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sep_by_space", scope: !1287, file: !1288, line: 99, baseType: !144, size: 8, offset: 712)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_cs_precedes", scope: !1287, file: !1288, line: 101, baseType: !144, size: 8, offset: 720)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sep_by_space", scope: !1287, file: !1288, line: 103, baseType: !144, size: 8, offset: 728)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sign_posn", scope: !1287, file: !1288, line: 110, baseType: !144, size: 8, offset: 736)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sign_posn", scope: !1287, file: !1288, line: 111, baseType: !144, size: 8, offset: 744)
!1314 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 72, elements: !536)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!109, !146, !512, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !110, line: 39, baseType: !109)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!1314, !27, !1314}
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!143, !143, !149, !146, !146}
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 328, elements: !1325)
!1325 = !{!1326}
!1326 = !DISubrange(count: 41)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!1319, !146, !1318, !512}
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 192, elements: !222)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !550)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!168}
!1333 = !{!1277, !1334, !1337}
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "block_size_args", scope: !1279, file: !1336, line: 398, type: !1329, isLocal: true, isDefinition: true)
!1336 = !DIFile(filename: "lib/human.c", directory: "/home/mohamad/clone/coreutils")
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "block_size_opts", scope: !1279, file: !1336, line: 399, type: !1330, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "user_alist", scope: !1341, file: !1348, line: 55, type: !1346, isLocal: true, isDefinition: true)
!1341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1342, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1343, globals: !1384, nameTableKind: None)
!1342 = !DIFile(filename: "./lib/idcache.c", directory: "/home/mohamad/clone/coreutils")
!1343 = !{!167, !1344, !143, !675, !1346, !1351, !1357, !146, !356, !1368, !1370, !144, !147, !202, !1371, !680, !1373, !1381, !1383, !204}
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!143, !675}
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "userid", file: !1348, line: 37, size: 128, elements: !1349)
!1348 = !DIFile(filename: "lib/idcache.c", directory: "/home/mohamad/clone/coreutils")
!1349 = !{!1350, !1355, !1356}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1347, file: !1348, line: 43, baseType: !1351, size: 32)
!1351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1347, file: !1348, line: 39, size: 32, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1351, file: !1348, line: 41, baseType: !675, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1351, file: !1348, line: 42, baseType: !680, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1347, file: !1348, line: 44, baseType: !1346, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1347, file: !1348, line: 45, baseType: !356, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !1359, line: 49, size: 384, elements: !1360)
!1359 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1358, file: !1359, line: 51, baseType: !143, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1358, file: !1359, line: 52, baseType: !143, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1358, file: !1359, line: 53, baseType: !202, size: 32, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1358, file: !1359, line: 54, baseType: !204, size: 32, offset: 160)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1358, file: !1359, line: 55, baseType: !143, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1358, file: !1359, line: 56, baseType: !143, size: 64, offset: 256)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1358, file: !1359, line: 57, baseType: !143, size: 64, offset: 320)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!1370, !146}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!143, !680}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1375, line: 42, size: 256, elements: !1376)
!1375 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1376 = !{!1377, !1378, !1379, !1380}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1374, file: !1375, line: 44, baseType: !143, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1374, file: !1375, line: 45, baseType: !143, size: 64, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1374, file: !1375, line: 46, baseType: !204, size: 32, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1374, file: !1375, line: 47, baseType: !142, size: 64, offset: 192)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!1383, !146}
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!1384 = !{!1339, !1385, !1387, !1389}
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "nouser_alist", scope: !1341, file: !1348, line: 58, type: !1346, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "group_alist", scope: !1341, file: !1348, line: 61, type: !1346, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "nogroup_alist", scope: !1341, file: !1348, line: 64, type: !1346, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "program_name", scope: !1393, file: !1435, line: 33, type: !146, isLocal: false, isDefinition: true)
!1393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1394, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1395, globals: !1434, nameTableKind: None)
!1394 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1395 = !{!167, !143, !146, !558, !1396}
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1397, file: !268, line: 242, baseType: !27, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1397, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1397, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1397, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1397, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1397, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1397, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1397, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1397, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1397, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1397, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1397, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1397, file: !268, line: 260, baseType: !1412, size: 64, offset: 768)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !1414)
!1414 = !{!1415, !1416, !1417}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1413, file: !268, line: 157, baseType: !1412, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1413, file: !268, line: 158, baseType: !1396, size: 64, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1413, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1397, file: !268, line: 262, baseType: !1396, size: 64, offset: 832)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1397, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1397, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1397, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1397, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1397, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1397, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1397, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1397, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1397, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1397, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1397, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1397, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1397, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1397, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1397, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!1434 = !{!1391}
!1435 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1438, file: !1448, line: 85, type: !1442, isLocal: false, isDefinition: true)
!1438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1439, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1440, retainedTypes: !1441, globals: !1532, nameTableKind: None)
!1439 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1440 = !{!95}
!1441 = !{!27, !177, !149, !1442, !1443, !1444, !1446, !1456, !1458, !1460, !1462, !144, !579, !1464, !6, !1465, !1467, !146, !1469, !143, !1471, !1473, !148, !336, !1475, !338, !1480, !1482, !560, !1484, !1486, !1488, !1490, !1492, !1494, !1496, !1498, !1500, !1502, !1504, !1506, !1508, !1510, !567, !1512, !1514, !141, !147, !575, !1516, !641, !1526, !1528, !1530}
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 704, elements: !757)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !547, size: 320, elements: !539)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!1446, !1446}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1448, line: 65, size: 448, elements: !1449)
!1448 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1449 = !{!1450, !1451, !1452, !1454, !1455}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1447, file: !1448, line: 68, baseType: !95, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1447, file: !1448, line: 71, baseType: !27, size: 32, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1447, file: !1448, line: 75, baseType: !1453, size: 256, offset: 64)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 256, elements: !532)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1447, file: !1448, line: 78, baseType: !146, size: 64, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1447, file: !1448, line: 81, baseType: !146, size: 64, offset: 384)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!95, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1447)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{null, !1446, !95}
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!27, !1446, !144, !27}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!27, !1446, !27}
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !1446, !146, !146}
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!149, !143, !149, !146, !149, !1458}
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!143, !146, !149, !1458}
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!143, !146, !149, !148, !1458}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1448, line: 834, size: 128, elements: !1477)
!1477 = !{!1478, !1479}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1476, file: !1448, line: 836, baseType: !149, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1476, file: !1448, line: 837, baseType: !143, size: 64, offset: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!143, !27, !146}
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!143, !27, !146, !149}
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!143, !146, !149}
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!143, !27, !95, !146}
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!143, !27, !95, !146, !149}
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!143, !95, !146}
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!143, !95, !146, !149}
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!143, !146, !149, !144}
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!143, !146, !144}
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!143, !27, !146, !146, !146}
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!143, !27, !146, !146, !146, !149}
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!143, !146, !146, !146}
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!143, !146, !146, !146, !149}
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!146, !27, !146, !149}
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!146, !146, !149}
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!146, !27, !146}
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!149, !143, !149, !146, !149, !95, !27, !1514, !146, !146}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !630, line: 106, baseType: !1517)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !630, line: 94, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !630, line: 82, size: 64, elements: !1519)
!1519 = !{!1520, !1521}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1518, file: !630, line: 84, baseType: !27, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1518, file: !630, line: 93, baseType: !1522, size: 32, offset: 32)
!1522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1518, file: !630, line: 85, size: 32, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1522, file: !630, line: 88, baseType: !6, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1522, file: !630, line: 92, baseType: !640, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!146, !146, !95}
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!143, !27, !146, !149, !1458}
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!1447, !95}
!1532 = !{!1436, !1533, !1535, !1537, !1539, !1541, !1543, !1545}
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1438, file: !1448, line: 101, type: !1443, isLocal: false, isDefinition: true)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1438, file: !1448, line: 1052, type: !1447, isLocal: false, isDefinition: true)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1438, file: !1448, line: 116, type: !1447, isLocal: true, isDefinition: true)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "slot0", scope: !1438, file: !1448, line: 842, type: !338, isLocal: true, isDefinition: true)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "slotvec", scope: !1438, file: !1448, line: 845, type: !1475, isLocal: true, isDefinition: true)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "nslots", scope: !1438, file: !1448, line: 843, type: !27, isLocal: true, isDefinition: true)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1438, file: !1448, line: 844, type: !1476, isLocal: true, isDefinition: true)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1549, file: !1556, line: 26, type: !1552, isLocal: false, isDefinition: true)
!1549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1550, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1551, globals: !1555, nameTableKind: None)
!1550 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1551 = !{!1552}
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 376, elements: !1553)
!1553 = !{!1554}
!1554 = !DISubrange(count: 47)
!1555 = !{!1547}
!1556 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !1559, file: !1651, line: 351, type: !419, isLocal: false, isDefinition: true)
!1559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1560, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1561, globals: !1650, nameTableKind: None)
!1560 = !DIFile(filename: "./lib/obstack.c", directory: "/home/mohamad/clone/coreutils")
!1561 = !{!143, !167, !1562, !27, !1564, !149, !370, !381, !1585, !1590, !1598, !374, !383, !1600, !1569, !419, !1602, !1604, !1606, !1608, !1610, !336, !1612, !325}
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!27, !1564, !149, !149, !370, !381}
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !346, line: 174, size: 704, elements: !1566)
!1566 = !{!1567, !1568, !1575, !1576, !1577, !1578, !1583, !1584, !1589, !1594, !1595, !1596, !1597}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1565, file: !346, line: 176, baseType: !149, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1565, file: !346, line: 177, baseType: !1569, size: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !346, line: 167, size: 128, elements: !1571)
!1571 = !{!1572, !1573, !1574}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1570, file: !346, line: 169, baseType: !143, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1570, file: !346, line: 170, baseType: !1569, size: 64, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1570, file: !346, line: 171, baseType: !356, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1565, file: !346, line: 178, baseType: !143, size: 64, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1565, file: !346, line: 179, baseType: !143, size: 64, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1565, file: !346, line: 180, baseType: !143, size: 64, offset: 256)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1565, file: !346, line: 185, baseType: !1579, size: 64, offset: 320)
!1579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1565, file: !346, line: 181, size: 64, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1579, file: !346, line: 183, baseType: !149, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1579, file: !346, line: 184, baseType: !167, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1565, file: !346, line: 186, baseType: !149, size: 64, offset: 384)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1565, file: !346, line: 193, baseType: !1585, size: 64, offset: 448)
!1585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1565, file: !346, line: 189, size: 64, elements: !1586)
!1586 = !{!1587, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1585, file: !346, line: 191, baseType: !370, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1585, file: !346, line: 192, baseType: !374, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1565, file: !346, line: 198, baseType: !1590, size: 64, offset: 512)
!1590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1565, file: !346, line: 194, size: 64, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1590, file: !346, line: 196, baseType: !381, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1590, file: !346, line: 197, baseType: !383, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1565, file: !346, line: 200, baseType: !167, size: 64, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1565, file: !346, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1565, file: !346, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1565, file: !346, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!27, !1564, !149, !149, !374, !383, !167}
!1600 = !DISubroutineType(types: !1601)
!1601 = !{null, !1564, !149}
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!27, !1564, !167}
!1604 = !DISubroutineType(types: !1605)
!1605 = !{null, !1564, !167}
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!149, !1564}
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!27, !1564, !149, !149}
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!167, !1564, !149}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1613, file: !268, line: 242, baseType: !27, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1613, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1613, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1613, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1613, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1613, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1613, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1613, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1613, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1613, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1613, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1613, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1613, file: !268, line: 260, baseType: !1628, size: 64, offset: 768)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !1630)
!1630 = !{!1631, !1632, !1633}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1629, file: !268, line: 157, baseType: !1628, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1629, file: !268, line: 158, baseType: !1612, size: 64, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1629, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1613, file: !268, line: 262, baseType: !1612, size: 64, offset: 832)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1613, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1613, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1613, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1613, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1613, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1613, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1613, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1613, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1613, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1613, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1613, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1613, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1613, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1613, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1613, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!1650 = !{!1557}
!1651 = !DIFile(filename: "lib/obstack.c", directory: "/home/mohamad/clone/coreutils")
!1652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1653, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1654, nameTableKind: None)
!1653 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!1654 = !{!167, !1484, !143, !146, !149, !1655, !572, !27}
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !179, line: 109, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !165, line: 172, baseType: !166)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1659, nameTableKind: None)
!1658 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!1659 = !{!663, !141, !27, !1660}
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!27, !27}
!1662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1663, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1664, nameTableKind: None)
!1663 = !DIFile(filename: "./lib/c-strncasecmp.c", directory: "/home/mohamad/clone/coreutils")
!1664 = !{!1665, !1667, !27, !146, !149, !579, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!27, !146, !146, !149}
!1669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1670, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1671, retainedTypes: !1679, nameTableKind: None)
!1670 = !DIFile(filename: "./lib/canonicalize.c", directory: "/home/mohamad/clone/coreutils")
!1671 = !{!1672}
!1672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "canonicalize_mode_t", file: !1673, line: 28, baseType: !6, size: 32, elements: !1674)
!1673 = !DIFile(filename: "./lib/canonicalize.h", directory: "/home/mohamad/clone/coreutils")
!1674 = !{!1675, !1676, !1677, !1678}
!1675 = !DIEnumerator(name: "CAN_EXISTING", value: 0, isUnsigned: true)
!1676 = !DIEnumerator(name: "CAN_ALL_BUT_LAST", value: 1, isUnsigned: true)
!1677 = !DIEnumerator(name: "CAN_MISSING", value: 2, isUnsigned: true)
!1678 = !DIEnumerator(name: "CAN_NOLINKS", value: 4, isUnsigned: true)
!1679 = !{!167, !1680, !143, !146, !1682, !149, !242, !27, !141, !144, !147, !552, !200, !180, !1683, !1685, !1686}
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!143, !146, !1682}
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "canonicalize_mode_t", file: !1673, line: 42, baseType: !1672)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!141, !1685, !146, !1686}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1706, !1707, !1708}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1688, file: !191, line: 48, baseType: !194, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1688, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1688, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1688, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1688, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1688, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1688, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1688, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1688, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1688, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1688, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1688, file: !191, line: 91, baseType: !1702, size: 128, offset: 576)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1702, file: !163, line: 122, baseType: !164, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1702, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1688, file: !191, line: 92, baseType: !1702, size: 128, offset: 704)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1688, file: !191, line: 93, baseType: !1702, size: 128, offset: 832)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1688, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1711, nameTableKind: None)
!1710 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1711 = !{!1712, !149, !146, !560, !143, !141}
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!149, !146}
!1714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1715, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1716, nameTableKind: None)
!1715 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1716 = !{!143, !560, !146, !141, !147, !1712, !149}
!1717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1718, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1719, nameTableKind: None)
!1718 = !DIFile(filename: "./lib/file-has-acl.c", directory: "/home/mohamad/clone/coreutils")
!1719 = !{!1720, !27, !146, !1722}
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!27, !146, !1722}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1742, !1743, !1744}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1724, file: !191, line: 48, baseType: !194, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1724, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1724, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1724, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1724, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1724, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1724, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1724, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1724, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1724, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1724, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1724, file: !191, line: 91, baseType: !1738, size: 128, offset: 576)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !1739)
!1739 = !{!1740, !1741}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1738, file: !163, line: 122, baseType: !164, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1738, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1724, file: !191, line: 92, baseType: !1738, size: 128, offset: 704)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1724, file: !191, line: 93, baseType: !1738, size: 128, offset: 832)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1724, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!1745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1746, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1747, nameTableKind: None)
!1746 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!1747 = !{!167, !143, !1748, !242, !146, !1750, !1773, !196, !256, !194, !258, !1780, !141, !1782}
!1748 = !DISubroutineType(types: !1749)
!1749 = !{null, !242, !146, !1750}
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !1753)
!1753 = !{!1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1770, !1771, !1772}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1752, file: !191, line: 48, baseType: !194, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1752, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1752, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1752, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1752, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1752, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1752, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1752, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1752, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1752, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1752, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1752, file: !191, line: 91, baseType: !1766, size: 128, offset: 576)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1766, file: !163, line: 122, baseType: !164, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1766, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1752, file: !191, line: 92, baseType: !1766, size: 128, offset: 704)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1752, file: !191, line: 93, baseType: !1766, size: 128, offset: 832)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1752, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1775, line: 9, size: 192, elements: !1776)
!1775 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mohamad/clone/coreutils")
!1776 = !{!1777, !1778, !1779}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1774, file: !1775, line: 11, baseType: !143, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1774, file: !1775, line: 12, baseType: !256, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1774, file: !1775, line: 13, baseType: !258, size: 64, offset: 128)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!141, !1782, !146, !1750}
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !243)
!1784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1785, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1786, nameTableKind: None)
!1785 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!1786 = !{!1787, !226, !143, !1789, !1791, !200, !1814, !144}
!1787 = !DISubroutineType(types: !1788)
!1788 = !{null, !226, !143}
!1789 = !DISubroutineType(types: !1790)
!1790 = !{null, !1791, !143}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1811, !1812, !1813}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1793, file: !191, line: 48, baseType: !194, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1793, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1793, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1793, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1793, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1793, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1793, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1793, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1793, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1793, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1793, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1793, file: !191, line: 91, baseType: !1807, size: 128, offset: 576)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1807, file: !163, line: 122, baseType: !164, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1807, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1793, file: !191, line: 92, baseType: !1807, size: 128, offset: 704)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1793, file: !191, line: 93, baseType: !1807, size: 128, offset: 832)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1793, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!144, !226}
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1817, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1818, nameTableKind: None)
!1817 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!1818 = !{!167, !1819, !143, !146, !142}
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!143, !146, !146, !142}
!1821 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1822, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1823, nameTableKind: None)
!1822 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1823 = !{!167, !1819, !143, !146, !142, !149, !144, !147}
!1824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1825, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1826, nameTableKind: None)
!1825 = !DIFile(filename: "./lib/filevercmp.c", directory: "/home/mohamad/clone/coreutils")
!1826 = !{!27, !714, !146, !149, !147, !1827, !145, !141, !1829, !1831, !579}
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!146, !145}
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!27, !146, !149, !146, !149}
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!27, !579}
!1833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1834, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1835, nameTableKind: None)
!1834 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!1835 = !{!1836, !1838, !1843}
!1836 = !DISubroutineType(types: !1837)
!1837 = !{null, !1838}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !1840)
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1839, file: !163, line: 122, baseType: !164, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1839, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!1839}
!1845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1846, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1847, nameTableKind: None)
!1846 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!1847 = !{!663, !141, !27, !146}
!1848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1849, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1850, nameTableKind: None)
!1849 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!1850 = !{!328, !149, !175, !1851, !143, !256, !332, !141, !258, !334, !167, !1858}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1775, line: 9, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1857}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1853, file: !1775, line: 11, baseType: !143, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1853, file: !1775, line: 12, baseType: !256, size: 64, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1853, file: !1775, line: 13, baseType: !258, size: 64, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1860, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1861, nameTableKind: None)
!1860 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/mohamad/clone/coreutils")
!1861 = !{!1862, !1863, !143, !144}
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !169, line: 134, baseType: !166)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!143, !1862, !143}
!1865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1866, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1867, nameTableKind: None)
!1866 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/mohamad/clone/coreutils")
!1867 = !{!168, !1868, !143, !144}
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!143, !168, !143}
!1870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1871, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1872, retainedTypes: !1873, nameTableKind: None)
!1871 = !DIFile(filename: "./lib/mbsalign.c", directory: "/home/mohamad/clone/coreutils")
!1872 = !{!123}
!1873 = !{!167, !1874, !1875, !149, !146, !143, !148, !574, !27, !1877, !141, !1878, !1880, !641, !1882, !1884, !144}
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !150, line: 116, baseType: !6)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!149, !146, !143, !149, !148, !574, !27}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!143, !146, !148, !574, !27}
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!141, !1877}
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!149, !1877, !149}
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!143, !143, !146, !149}
!1886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1887, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1888, nameTableKind: None)
!1887 = !DIFile(filename: "./lib/mbswidth.c", directory: "/home/mohamad/clone/coreutils")
!1888 = !{!149, !579, !27, !177, !1889, !146, !1891, !147, !1893, !641, !575}
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!27, !146, !27}
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!27, !146, !149, !27}
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !630, line: 106, baseType: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !630, line: 94, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !630, line: 82, size: 64, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1895, file: !630, line: 84, baseType: !27, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1895, file: !630, line: 93, baseType: !1899, size: 32, offset: 32)
!1899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1895, file: !630, line: 85, size: 32, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1899, file: !630, line: 88, baseType: !6, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1899, file: !630, line: 92, baseType: !640, size: 32)
!1903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1904, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1905, nameTableKind: None)
!1904 = !DIFile(filename: "./lib/mpsort.c", directory: "/home/mohamad/clone/coreutils")
!1905 = !{!1906, !181, !149, !1908, !1913, !1915, !175}
!1906 = !DISubroutineType(types: !1907)
!1907 = !{null, !181, !149, !1908}
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1909, line: 28, baseType: !1910)
!1909 = !DIFile(filename: "lib/mpsort.c", directory: "/home/mohamad/clone/coreutils")
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!27, !175, !175}
!1913 = !DISubroutineType(types: !1914)
!1914 = !{null, !1915, !149, !1915, !1908}
!1915 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !181)
!1916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1917, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1918, nameTableKind: None)
!1917 = !DIFile(filename: "./lib/nstrftime.c", directory: "/home/mohamad/clone/coreutils")
!1918 = !{!146, !6, !149, !167, !175, !579, !1919, !143, !1921, !1936, !27, !141, !1944, !628, !147, !144, !1946, !1949, !1950, !162, !166, !1884, !1953}
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!149, !143, !149, !146, !1921, !1936, !27}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !163, line: 133, size: 448, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !1923, file: !163, line: 135, baseType: !27, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !1923, file: !163, line: 136, baseType: !27, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !1923, file: !163, line: 137, baseType: !27, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !1923, file: !163, line: 138, baseType: !27, size: 32, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !1923, file: !163, line: 139, baseType: !27, size: 32, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !1923, file: !163, line: 140, baseType: !27, size: 32, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !1923, file: !163, line: 141, baseType: !27, size: 32, offset: 192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !1923, file: !163, line: 142, baseType: !27, size: 32, offset: 224)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !1923, file: !163, line: 143, baseType: !27, size: 32, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !1923, file: !163, line: 146, baseType: !166, size: 64, offset: 320)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !1923, file: !163, line: 147, baseType: !146, size: 64, offset: 384)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !247, line: 764, baseType: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1939, line: 21, size: 128, elements: !1940)
!1939 = !DIFile(filename: "./lib/time-internal.h", directory: "/home/mohamad/clone/coreutils")
!1940 = !{!1941, !1942, !1943}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1938, file: !1939, line: 25, baseType: !1937, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !1938, file: !1939, line: 36, baseType: !144, size: 8, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !1938, file: !1939, line: 48, baseType: !356, offset: 72)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!149, !143, !149, !146, !1921, !141, !27, !27, !628, !1936, !27}
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 184, elements: !1947)
!1947 = !{!1948}
!1948 = !DISubrange(count: 23)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 40, elements: !518)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8192, elements: !1951)
!1951 = !{!1952}
!1952 = !DISubrange(count: 1024)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!27, !27, !27}
!1955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1956, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1957, nameTableKind: None)
!1956 = !DIFile(filename: "./lib/same.c", directory: "/home/mohamad/clone/coreutils")
!1957 = !{!1958, !141, !146, !1960, !27, !149, !143, !196, !194}
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!141, !146, !146}
!1960 = !DISubroutineType(types: !1961)
!1961 = !{!141, !27, !146, !27, !146}
!1962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1963, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1964, nameTableKind: None)
!1963 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mohamad/clone/coreutils")
!1964 = !{!1965, !27, !1967, !1970, !1968, !1972, !1974, !146, !226, !1976, !1978, !1980, !1982, !1984, !1986, !1987, !714}
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!27, !1967}
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1969, line: 83, baseType: !143)
!1969 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mohamad/clone/coreutils")
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !1968}
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!27, !1968}
!1974 = !DISubroutineType(types: !1975)
!1975 = !{!27, !146, !226, !1967}
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!27, !146, !1967}
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!27, !27, !1967}
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!27, !146, !1968}
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!27, !27, !1968}
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!27, !1968, !1968, !1986, !1967}
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1969, line: 82, baseType: !177)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!1986, !146}
!1989 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1990, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1991, nameTableKind: None)
!1990 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mohamad/clone/coreutils")
!1991 = !{!1992, !166, !1994, !217, !2017, !164, !2019, !27, !2021}
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!166, !1994}
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2014, !2015, !2016}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1996, file: !191, line: 48, baseType: !194, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1996, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1996, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1996, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1996, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1996, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1996, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1996, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1996, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1996, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1996, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1996, file: !191, line: 91, baseType: !2010, size: 128, offset: 576)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2010, file: !163, line: 122, baseType: !164, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2010, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1996, file: !191, line: 92, baseType: !2010, size: 128, offset: 704)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1996, file: !191, line: 93, baseType: !2010, size: 128, offset: 832)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1996, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!2010, !1994}
!2019 = !DISubroutineType(types: !2020)
!2020 = !{!27, !27, !2021}
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!2022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2023, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2024, nameTableKind: None)
!2023 = !DIFile(filename: "./lib/timespec.c", directory: "/home/mohamad/clone/coreutils")
!2024 = !{!2025, !162, !166, !164, !217, !2031, !27, !2033, !2035, !2037}
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!2027, !162, !166}
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !2028)
!2028 = !{!2029, !2030}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2027, file: !163, line: 122, baseType: !164, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2027, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!27, !2027, !2027}
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!27, !2027}
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!2037, !2027}
!2037 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2039, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2040, nameTableKind: None)
!2039 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!2040 = !{!167, !2041, !2043, !146, !555, !149, !2083, !2084, !2086, !2095, !2096, !2098, !336, !2065}
!2041 = !DISubroutineType(types: !2042)
!2042 = !{null, !2043, !146, !146, !146, !555, !149}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1190, line: 48, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2045, file: !268, line: 242, baseType: !27, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2045, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2045, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2045, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2045, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2045, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2045, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2045, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2045, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2045, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2045, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2045, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2045, file: !268, line: 260, baseType: !2060, size: 64, offset: 768)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !2062)
!2062 = !{!2063, !2064, !2066}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2061, file: !268, line: 157, baseType: !2060, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2061, file: !268, line: 158, baseType: !2065, size: 64, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2061, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2045, file: !268, line: 262, baseType: !2065, size: 64, offset: 832)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2045, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2045, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2045, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2045, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2045, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2045, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2045, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2045, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2045, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2045, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2045, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2045, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2045, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2045, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2045, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, elements: !321)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !2043, !146, !146, !146, !555}
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !2043, !146, !146, !146, !2088}
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2039, line: 192, size: 192, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2089, file: !2039, line: 192, baseType: !6, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2089, file: !2039, line: 192, baseType: !6, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2089, file: !2039, line: 192, baseType: !167, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2089, file: !2039, line: 192, baseType: !167, size: 64, offset: 128)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 640, elements: !539)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{null, !2043, !146, !146, !146}
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1190, line: 79, baseType: !2099)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2100, line: 32, baseType: !2101)
!2100 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2039, line: 234, baseType: !2102)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2089, size: 192, elements: !298)
!2103 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2104, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2105, nameTableKind: None)
!2104 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!2105 = !{!149, !143, !167, !2106, !2108, !2110, !148, !2112, !371, !375, !2114, !2116, !175, !560, !146}
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!167, !149, !149}
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!167, !167, !149, !149}
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!167, !167, !148, !149}
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!143, !149}
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!167, !167, !148}
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!167, !175, !149}
!2118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2119, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2120, nameTableKind: None)
!2119 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!2120 = !{!336, !325}
!2121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2122, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1281, retainedTypes: !2123, nameTableKind: None)
!2122 = !DIFile(filename: "./lib/xdectoumax.c", directory: "/home/mohamad/clone/coreutils")
!2123 = !{!2124, !168, !146, !27, !1319, !2126}
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!168, !146, !27, !168, !168, !146, !146, !27}
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!168, !146, !168, !168, !146, !146, !27}
!2128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2129, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2130, nameTableKind: None)
!2129 = !DIFile(filename: "./lib/xgetcwd.c", directory: "/home/mohamad/clone/coreutils")
!2130 = !{!2131, !143, !27}
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!143}
!2133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2134, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2135, nameTableKind: None)
!2134 = !DIFile(filename: "./lib/xgethostname.c", directory: "/home/mohamad/clone/coreutils")
!2135 = !{!167, !2131, !143, !149, !27}
!2136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2137, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1281, retainedTypes: !2138, nameTableKind: None)
!2137 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mohamad/clone/coreutils")
!2138 = !{!27, !177, !2139, !1319, !146, !142, !2141, !143, !151, !579, !147, !575, !144, !2142, !2144}
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!1319, !146, !142, !27, !2141, !146}
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!1319, !2141, !27}
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!1319, !2141, !27, !27}
!2146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2147, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1281, retainedTypes: !2148, nameTableKind: None)
!2147 = !DIFile(filename: "./lib/xstrtol-error.c", directory: "/home/mohamad/clone/coreutils")
!2148 = !{!2149, !27, !144, !2151, !146, !325, !2159, !653}
!2149 = !DISubroutineType(types: !2150)
!2150 = !{null, !109, !27, !144, !2151, !146}
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !507, line: 104, size: 256, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2158}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2153, file: !507, line: 106, baseType: !146, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2153, file: !507, line: 109, baseType: !27, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2153, file: !507, line: 110, baseType: !512, size: 64, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2153, file: !507, line: 111, baseType: !27, size: 32, offset: 192)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{null, !109, !27, !144, !2151, !146, !27}
!2161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2162, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1281, retainedTypes: !2163, nameTableKind: None)
!2162 = !DIFile(filename: "./lib/xstrtoumax.c", directory: "/home/mohamad/clone/coreutils")
!2163 = !{!27, !177, !2164, !1319, !146, !142, !1318, !143, !168, !579, !147, !575, !144, !2166, !2168}
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!1319, !146, !142, !27, !1318, !146}
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!1319, !1318, !27}
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!1319, !1318, !27, !27}
!2170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2171, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2172, nameTableKind: None)
!2171 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!2172 = !{!149, !2173, !1877, !146, !2175, !641, !579, !147}
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!149, !1877, !146, !149, !2175}
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !630, line: 106, baseType: !2177)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !630, line: 94, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !630, line: 82, size: 64, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2178, file: !630, line: 84, baseType: !27, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2178, file: !630, line: 93, baseType: !2182, size: 32, offset: 32)
!2182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2178, file: !630, line: 85, size: 32, elements: !2183)
!2183 = !{!2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2182, file: !630, line: 88, baseType: !6, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2182, file: !630, line: 92, baseType: !640, size: 32)
!2186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2187, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2188, nameTableKind: None)
!2187 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!2188 = !{!2189, !143, !2191}
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!143, !2191}
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !2192, line: 36, baseType: !27)
!2192 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!2193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2194, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2195, globals: !2243, nameTableKind: None)
!2194 = !DIFile(filename: "./lib/time_rz.c", directory: "/home/mohamad/clone/coreutils")
!2195 = !{!143, !149, !2196, !2198, !146, !2199, !144, !356, !2205, !2207, !2209, !2223, !141, !2225, !162, !2227, !2229, !27, !2131, !2231, !2233, !2235, !147, !2237, !2239, !2241}
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!2198, !146}
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !247, line: 764, baseType: !2199)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1939, line: 21, size: 128, elements: !2201)
!2201 = !{!2202, !2203, !2204}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2200, file: !1939, line: 25, baseType: !2199, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !2200, file: !1939, line: 36, baseType: !144, size: 8, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !2200, file: !1939, line: 48, baseType: !356, offset: 72)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{null, !2198}
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!2209, !2198, !2223, !2209}
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !163, line: 133, size: 448, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2210, file: !163, line: 135, baseType: !27, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2210, file: !163, line: 136, baseType: !27, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2210, file: !163, line: 137, baseType: !27, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2210, file: !163, line: 138, baseType: !27, size: 32, offset: 96)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2210, file: !163, line: 139, baseType: !27, size: 32, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2210, file: !163, line: 140, baseType: !27, size: 32, offset: 160)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2210, file: !163, line: 141, baseType: !27, size: 32, offset: 192)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2210, file: !163, line: 142, baseType: !27, size: 32, offset: 224)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2210, file: !163, line: 143, baseType: !27, size: 32, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2210, file: !163, line: 146, baseType: !166, size: 64, offset: 320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2210, file: !163, line: 147, baseType: !146, size: 64, offset: 384)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!162, !2198, !2209}
!2227 = !DISubroutineType(types: !2228)
!2228 = !{null, !143, !146, !149}
!2229 = !DISubroutineType(types: !2230)
!2230 = !{!2198, !2198}
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!141, !2198}
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!27, !146}
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!141, !2198, !2209}
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!27, !2239, !2239}
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2210)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!141, !27, !27}
!2243 = !{!2244}
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "local_tz", scope: !2193, file: !2246, line: 55, type: !2247, isLocal: true, isDefinition: true)
!2246 = !DIFile(filename: "lib/time_rz.c", directory: "/home/mohamad/clone/coreutils")
!2247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2198)
!2248 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2249, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2250, nameTableKind: None)
!2249 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!2250 = !{!6, !2251, !2253, !27, !2254, !2256, !2257, !149, !2259, !2261, !2262, !2264}
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!2253, !2253, !27}
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !169, line: 55, baseType: !151)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!2256, !2256, !27}
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !169, line: 51, baseType: !6)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!149, !149, !27}
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!2261, !2261, !27}
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !169, line: 49, baseType: !177)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!2264, !2264, !27}
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !169, line: 48, baseType: !579)
!2265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2266, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2267, nameTableKind: None)
!2266 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!2267 = !{!1665, !714, !27, !146, !579, !1666}
!2268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2269, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2270, nameTableKind: None)
!2269 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!2270 = !{!2271, !27, !2273, !2313}
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!27, !2273}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1190, line: 48, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2275, file: !268, line: 242, baseType: !27, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2275, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2275, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2275, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2275, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2275, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2275, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2275, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2275, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2275, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2275, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2275, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2275, file: !268, line: 260, baseType: !2290, size: 64, offset: 768)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !2292)
!2292 = !{!2293, !2294, !2296}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2291, file: !268, line: 157, baseType: !2290, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2291, file: !268, line: 158, baseType: !2295, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2291, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2275, file: !268, line: 262, baseType: !2295, size: 64, offset: 832)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2275, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2275, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2275, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2275, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2275, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2275, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2275, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2275, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2275, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2275, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2275, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2275, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2275, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2275, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2275, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!2313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!2314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2315, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2316, nameTableKind: None)
!2315 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!2316 = !{!560, !143, !146}
!2317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2318, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2319, nameTableKind: None)
!2318 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!2319 = !{!328, !149, !175, !146, !147}
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2322, nameTableKind: None)
!2321 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!2322 = !{!167, !2323, !146}
!2323 = !DISubroutineType(types: !1027)
!2324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2325, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2326, nameTableKind: None)
!2325 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!2326 = !{!2327, !27, !2329}
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!27, !2329}
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1190, line: 48, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !2332)
!2332 = !{!2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2331, file: !268, line: 242, baseType: !27, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2331, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2331, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2331, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2331, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2331, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2331, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2331, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2331, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2331, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2331, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2331, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2331, file: !268, line: 260, baseType: !2346, size: 64, offset: 768)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !2348)
!2348 = !{!2349, !2350, !2352}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2347, file: !268, line: 157, baseType: !2346, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2347, file: !268, line: 158, baseType: !2351, size: 64, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2347, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2331, file: !268, line: 262, baseType: !2351, size: 64, offset: 832)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2331, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2331, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2331, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2331, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2331, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2331, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2331, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2331, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2331, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2331, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2331, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2331, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2331, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2331, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2331, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!2369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2370, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2371, nameTableKind: None)
!2370 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!2371 = !{!167, !2372, !27, !2374, !2414, !2375}
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!27, !2374}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1190, line: 48, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2376, file: !268, line: 242, baseType: !27, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2376, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2376, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2376, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2376, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2376, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2376, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2376, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2376, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2376, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2376, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2376, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2376, file: !268, line: 260, baseType: !2391, size: 64, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !2393)
!2393 = !{!2394, !2395, !2397}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2392, file: !268, line: 157, baseType: !2391, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2392, file: !268, line: 158, baseType: !2396, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2392, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2376, file: !268, line: 262, baseType: !2396, size: 64, offset: 832)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2376, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2376, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2376, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2376, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2376, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2376, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2376, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2376, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2376, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2376, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2376, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2376, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2376, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2376, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2376, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{null, !2374}
!2416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2417, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2418, nameTableKind: None)
!2417 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!2418 = !{!167, !2419, !27, !2421, !2461, !2422, !143, !304}
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!27, !2421, !2461, !27}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1190, line: 48, baseType: !2423)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !268, line: 241, size: 1728, elements: !2424)
!2424 = !{!2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2423, file: !268, line: 242, baseType: !27, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2423, file: !268, line: 247, baseType: !143, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2423, file: !268, line: 248, baseType: !143, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2423, file: !268, line: 249, baseType: !143, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2423, file: !268, line: 250, baseType: !143, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2423, file: !268, line: 251, baseType: !143, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2423, file: !268, line: 252, baseType: !143, size: 64, offset: 384)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2423, file: !268, line: 253, baseType: !143, size: 64, offset: 448)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2423, file: !268, line: 254, baseType: !143, size: 64, offset: 512)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2423, file: !268, line: 256, baseType: !143, size: 64, offset: 576)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2423, file: !268, line: 257, baseType: !143, size: 64, offset: 640)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2423, file: !268, line: 258, baseType: !143, size: 64, offset: 704)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2423, file: !268, line: 260, baseType: !2438, size: 64, offset: 768)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !268, line: 156, size: 192, elements: !2440)
!2440 = !{!2441, !2442, !2444}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2439, file: !268, line: 157, baseType: !2438, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2439, file: !268, line: 158, baseType: !2443, size: 64, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2439, file: !268, line: 162, baseType: !27, size: 32, offset: 128)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2423, file: !268, line: 262, baseType: !2443, size: 64, offset: 832)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2423, file: !268, line: 264, baseType: !27, size: 32, offset: 896)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2423, file: !268, line: 268, baseType: !27, size: 32, offset: 928)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2423, file: !268, line: 270, baseType: !180, size: 64, offset: 960)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2423, file: !268, line: 274, baseType: !177, size: 16, offset: 1024)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2423, file: !268, line: 275, baseType: !295, size: 8, offset: 1040)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2423, file: !268, line: 276, baseType: !297, size: 8, offset: 1048)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2423, file: !268, line: 280, baseType: !301, size: 64, offset: 1088)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2423, file: !268, line: 289, baseType: !304, size: 64, offset: 1152)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2423, file: !268, line: 297, baseType: !167, size: 64, offset: 1216)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2423, file: !268, line: 298, baseType: !167, size: 64, offset: 1280)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2423, file: !268, line: 299, baseType: !167, size: 64, offset: 1344)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2423, file: !268, line: 300, baseType: !167, size: 64, offset: 1408)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2423, file: !268, line: 302, baseType: !149, size: 64, offset: 1472)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2423, file: !268, line: 303, baseType: !27, size: 32, offset: 1536)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2423, file: !268, line: 305, baseType: !312, size: 160, offset: 1568)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1190, line: 90, baseType: !180)
!2462 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!2463 = !{i32 2, !"ctir", i32 1}
!2464 = !{i32 2, !"Dwarf Version", i32 4}
!2465 = !{i32 2, !"Debug Info Version", i32 3}
!2466 = !{i32 1, !"wchar_size", i32 4}
!2467 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 1450, type: !233, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2468 = !{!2469, !2469, i64 0}
!2469 = !{!"int", !2470, i64 0}
!2470 = !{!"omnipotent char", !2471, i64 0}
!2471 = !{!"Simple C/C++ TBAA"}
!2472 = !DILocalVariable(name: "argc", arg: 1, scope: !2467, file: !3, line: 1450, type: !27)
!2473 = !DILocation(line: 1450, column: 11, scope: !2467)
!2474 = !{!2475, !2475, i64 0}
!2475 = !{!"any pointer", !2470, i64 0}
!2476 = !DILocalVariable(name: "argv", arg: 2, scope: !2467, file: !3, line: 1450, type: !142)
!2477 = !DILocation(line: 1450, column: 24, scope: !2467)
!2478 = !DILocalVariable(name: "i", scope: !2467, file: !3, line: 1452, type: !27)
!2479 = !DILocation(line: 1452, column: 7, scope: !2467)
!2480 = !DILocalVariable(name: "thispend", scope: !2467, file: !3, line: 1453, type: !235)
!2481 = !DILocation(line: 1453, column: 19, scope: !2467)
!2482 = !DILocalVariable(name: "n_files", scope: !2467, file: !3, line: 1454, type: !27)
!2483 = !DILocation(line: 1454, column: 7, scope: !2467)
!2484 = !DILocation(line: 1457, column: 21, scope: !2467)
!2485 = !DILocation(line: 1457, column: 3, scope: !2467)
!2486 = !DILocation(line: 1458, column: 3, scope: !2467)
!2487 = !DILocation(line: 1459, column: 3, scope: !2467)
!2488 = !DILocation(line: 1460, column: 3, scope: !2467)
!2489 = !DILocation(line: 1462, column: 3, scope: !2467)
!2490 = !DILocation(line: 1463, column: 3, scope: !2467)
!2491 = !DILocation(line: 1468, column: 15, scope: !2467)
!2492 = !DILocation(line: 1469, column: 18, scope: !2467)
!2493 = !{!2494, !2494, i64 0}
!2494 = !{!"_Bool", !2470, i64 0}
!2495 = !DILocation(line: 1470, column: 16, scope: !2467)
!2496 = !DILocation(line: 1472, column: 23, scope: !2467)
!2497 = !{!2498, !2499, i64 0}
!2498 = !{!"timespec", !2499, i64 0, !2499, i64 8}
!2499 = !{!"long", !2470, i64 0}
!2500 = !DILocation(line: 1473, column: 24, scope: !2467)
!2501 = !{!2498, !2499, i64 8}
!2502 = !DILocation(line: 1475, column: 24, scope: !2467)
!2503 = !DILocation(line: 1475, column: 30, scope: !2467)
!2504 = !DILocation(line: 1475, column: 7, scope: !2467)
!2505 = !DILocation(line: 1475, column: 5, scope: !2467)
!2506 = !DILocation(line: 1477, column: 7, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1477, column: 7)
!2508 = !DILocation(line: 1477, column: 7, scope: !2467)
!2509 = !DILocation(line: 1478, column: 5, scope: !2507)
!2510 = !DILocation(line: 1482, column: 7, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1482, column: 7)
!2512 = !DILocation(line: 1482, column: 7, scope: !2467)
!2513 = !DILocation(line: 1483, column: 24, scope: !2511)
!2514 = !DILocation(line: 1483, column: 5, scope: !2511)
!2515 = !DILocation(line: 1484, column: 12, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 1484, column: 12)
!2517 = !DILocation(line: 1484, column: 12, scope: !2511)
!2518 = !DILocation(line: 1487, column: 11, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 1487, column: 11)
!2520 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 1485, column: 5)
!2521 = !DILocation(line: 1488, column: 11, scope: !2519)
!2522 = !DILocation(line: 1488, column: 15, scope: !2519)
!2523 = !DILocation(line: 1488, column: 35, scope: !2519)
!2524 = !DILocation(line: 1488, column: 38, scope: !2519)
!2525 = !DILocation(line: 1489, column: 11, scope: !2519)
!2526 = !DILocation(line: 1489, column: 15, scope: !2519)
!2527 = !DILocation(line: 1489, column: 38, scope: !2519)
!2528 = !DILocation(line: 1489, column: 41, scope: !2519)
!2529 = !{!2470, !2470, i64 0}
!2530 = !DILocation(line: 1489, column: 48, scope: !2519)
!2531 = !DILocation(line: 1487, column: 11, scope: !2520)
!2532 = !DILocation(line: 1490, column: 28, scope: !2519)
!2533 = !DILocation(line: 1490, column: 9, scope: !2519)
!2534 = !DILocation(line: 1491, column: 5, scope: !2520)
!2535 = !DILocation(line: 1493, column: 7, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1493, column: 7)
!2537 = !DILocation(line: 1493, column: 19, scope: !2536)
!2538 = !DILocation(line: 1493, column: 7, scope: !2467)
!2539 = !DILocation(line: 1494, column: 21, scope: !2536)
!2540 = !DILocation(line: 1495, column: 21, scope: !2536)
!2541 = !DILocation(line: 1495, column: 24, scope: !2536)
!2542 = !DILocation(line: 1495, column: 40, scope: !2536)
!2543 = !DILocation(line: 1496, column: 21, scope: !2536)
!2544 = !DILocation(line: 1496, column: 24, scope: !2536)
!2545 = !DILocation(line: 1496, column: 31, scope: !2536)
!2546 = !DILocation(line: 1494, column: 20, scope: !2536)
!2547 = !DILocation(line: 1494, column: 17, scope: !2536)
!2548 = !DILocation(line: 1494, column: 5, scope: !2536)
!2549 = !DILocation(line: 1502, column: 7, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1502, column: 7)
!2551 = !DILocation(line: 1502, column: 7, scope: !2467)
!2552 = !DILocation(line: 1504, column: 24, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 1503, column: 5)
!2554 = !DILocation(line: 1504, column: 22, scope: !2553)
!2555 = !DILocation(line: 1508, column: 11, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2553, file: !3, line: 1508, column: 11)
!2557 = !DILocation(line: 1508, column: 26, scope: !2556)
!2558 = !DILocation(line: 1508, column: 11, scope: !2553)
!2559 = !DILocation(line: 1509, column: 9, scope: !2556)
!2560 = !DILocation(line: 1511, column: 7, scope: !2553)
!2561 = !DILocation(line: 1512, column: 5, scope: !2553)
!2562 = !DILocation(line: 1514, column: 22, scope: !2467)
!2563 = !DILocation(line: 1514, column: 13, scope: !2467)
!2564 = !DILocation(line: 1514, column: 11, scope: !2467)
!2565 = !DILocation(line: 1516, column: 23, scope: !2467)
!2566 = !DILocation(line: 1516, column: 33, scope: !2467)
!2567 = !DILocation(line: 1516, column: 46, scope: !2467)
!2568 = !DILocation(line: 1516, column: 49, scope: !2467)
!2569 = !DILocation(line: 1516, column: 59, scope: !2467)
!2570 = !DILocation(line: 1517, column: 5, scope: !2467)
!2571 = !DILocation(line: 1517, column: 8, scope: !2467)
!2572 = !DILocation(line: 1517, column: 15, scope: !2467)
!2573 = !DILocation(line: 1518, column: 5, scope: !2467)
!2574 = !DILocation(line: 1518, column: 8, scope: !2467)
!2575 = !DILocation(line: 1519, column: 5, scope: !2467)
!2576 = !DILocation(line: 1519, column: 8, scope: !2467)
!2577 = !DILocation(line: 1516, column: 21, scope: !2467)
!2578 = !DILocation(line: 1520, column: 26, scope: !2467)
!2579 = !DILocation(line: 1521, column: 24, scope: !2467)
!2580 = !DILocation(line: 1521, column: 28, scope: !2467)
!2581 = !DILocation(line: 1522, column: 28, scope: !2467)
!2582 = !DILocation(line: 1522, column: 31, scope: !2467)
!2583 = !DILocation(line: 1523, column: 28, scope: !2467)
!2584 = !DILocation(line: 1523, column: 31, scope: !2467)
!2585 = !DILocation(line: 1523, column: 47, scope: !2467)
!2586 = !DILocation(line: 1524, column: 28, scope: !2467)
!2587 = !DILocation(line: 1524, column: 31, scope: !2467)
!2588 = !DILocation(line: 0, scope: !2467)
!2589 = !DILocation(line: 1520, column: 21, scope: !2467)
!2590 = !DILocation(line: 1526, column: 7, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1526, column: 7)
!2592 = !DILocation(line: 1526, column: 7, scope: !2467)
!2593 = !DILocation(line: 1528, column: 7, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 1527, column: 5)
!2595 = !DILocation(line: 1529, column: 7, scope: !2594)
!2596 = !DILocation(line: 1530, column: 5, scope: !2594)
!2597 = !DILocation(line: 1532, column: 7, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1532, column: 7)
!2599 = !DILocation(line: 1532, column: 7, scope: !2467)
!2600 = !DILocation(line: 1534, column: 7, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 1533, column: 5)
!2602 = !DILocation(line: 1536, column: 18, scope: !2601)
!2603 = !DILocation(line: 1536, column: 16, scope: !2601)
!2604 = !DILocation(line: 1539, column: 13, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 1539, column: 11)
!2606 = !DILocation(line: 1539, column: 11, scope: !2601)
!2607 = !DILocation(line: 1540, column: 18, scope: !2605)
!2608 = !DILocation(line: 1540, column: 9, scope: !2605)
!2609 = !DILocation(line: 1541, column: 5, scope: !2601)
!2610 = !DILocation(line: 1543, column: 15, scope: !2467)
!2611 = !{!2499, !2499, i64 0}
!2612 = !DILocation(line: 1544, column: 24, scope: !2467)
!2613 = !DILocation(line: 1544, column: 14, scope: !2467)
!2614 = !DILocation(line: 1544, column: 12, scope: !2467)
!2615 = !DILocation(line: 1545, column: 14, scope: !2467)
!2616 = !DILocation(line: 1547, column: 3, scope: !2467)
!2617 = !DILocation(line: 1549, column: 13, scope: !2467)
!2618 = !DILocation(line: 1549, column: 20, scope: !2467)
!2619 = !DILocation(line: 1549, column: 18, scope: !2467)
!2620 = !DILocation(line: 1549, column: 11, scope: !2467)
!2621 = !DILocation(line: 1551, column: 7, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1551, column: 7)
!2623 = !DILocation(line: 1551, column: 15, scope: !2622)
!2624 = !DILocation(line: 1551, column: 7, scope: !2467)
!2625 = !DILocation(line: 1553, column: 11, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 1553, column: 11)
!2627 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 1552, column: 5)
!2628 = !DILocation(line: 1553, column: 11, scope: !2627)
!2629 = !DILocation(line: 1554, column: 9, scope: !2626)
!2630 = !DILocation(line: 1556, column: 9, scope: !2626)
!2631 = !DILocation(line: 1557, column: 5, scope: !2627)
!2632 = !DILocation(line: 1559, column: 5, scope: !2622)
!2633 = !DILocation(line: 1560, column: 20, scope: !2622)
!2634 = !DILocation(line: 1560, column: 26, scope: !2622)
!2635 = !DILocation(line: 1560, column: 7, scope: !2622)
!2636 = !DILocation(line: 1561, column: 12, scope: !2622)
!2637 = !DILocation(line: 1561, column: 16, scope: !2622)
!2638 = !DILocation(line: 1561, column: 14, scope: !2622)
!2639 = distinct !{!2639, !2632, !2640}
!2640 = !DILocation(line: 1561, column: 20, scope: !2622)
!2641 = !DILocation(line: 1563, column: 7, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1563, column: 7)
!2643 = !DILocation(line: 1563, column: 7, scope: !2467)
!2644 = !DILocation(line: 1565, column: 7, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 1564, column: 5)
!2646 = !DILocation(line: 1566, column: 12, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 1566, column: 11)
!2648 = !DILocation(line: 1566, column: 11, scope: !2645)
!2649 = !DILocation(line: 1567, column: 9, scope: !2647)
!2650 = !DILocation(line: 1569, column: 5, scope: !2645)
!2651 = !DILocation(line: 1575, column: 7, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1575, column: 7)
!2653 = !DILocation(line: 1575, column: 7, scope: !2467)
!2654 = !DILocation(line: 1577, column: 7, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 1576, column: 5)
!2656 = !DILocation(line: 1578, column: 11, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 1578, column: 11)
!2658 = !DILocation(line: 1578, column: 11, scope: !2655)
!2659 = !DILocation(line: 1579, column: 9, scope: !2657)
!2660 = !DILocation(line: 1579, column: 9, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 1579, column: 9)
!2662 = !DILocation(line: 1580, column: 5, scope: !2655)
!2663 = !DILocation(line: 1581, column: 12, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 1581, column: 12)
!2665 = !DILocation(line: 1581, column: 20, scope: !2664)
!2666 = !DILocation(line: 1581, column: 25, scope: !2664)
!2667 = !DILocation(line: 1581, column: 28, scope: !2664)
!2668 = !DILocation(line: 1581, column: 41, scope: !2664)
!2669 = !DILocation(line: 1581, column: 44, scope: !2664)
!2670 = !DILocation(line: 1581, column: 58, scope: !2664)
!2671 = !{!2672, !2475, i64 24}
!2672 = !{!"pending", !2475, i64 0, !2475, i64 8, !2494, i64 16, !2475, i64 24}
!2673 = !DILocation(line: 1581, column: 63, scope: !2664)
!2674 = !DILocation(line: 1581, column: 12, scope: !2652)
!2675 = !DILocation(line: 1582, column: 20, scope: !2664)
!2676 = !DILocation(line: 1582, column: 5, scope: !2664)
!2677 = !DILocation(line: 1584, column: 3, scope: !2467)
!2678 = !DILocation(line: 1584, column: 10, scope: !2467)
!2679 = !DILocation(line: 1586, column: 18, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1585, column: 5)
!2681 = !DILocation(line: 1586, column: 16, scope: !2680)
!2682 = !DILocation(line: 1587, column: 22, scope: !2680)
!2683 = !DILocation(line: 1587, column: 36, scope: !2680)
!2684 = !DILocation(line: 1587, column: 20, scope: !2680)
!2685 = !DILocation(line: 1589, column: 11, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 1589, column: 11)
!2687 = !DILocation(line: 1589, column: 11, scope: !2680)
!2688 = !DILocation(line: 1591, column: 15, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 1591, column: 15)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 1590, column: 9)
!2691 = !DILocation(line: 1591, column: 25, scope: !2689)
!2692 = !{!2672, !2475, i64 0}
!2693 = !DILocation(line: 1591, column: 30, scope: !2689)
!2694 = !DILocation(line: 1591, column: 15, scope: !2690)
!2695 = !DILocalVariable(name: "di", scope: !2696, file: !3, line: 1597, type: !252)
!2696 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 1592, column: 13)
!2697 = !DILocation(line: 1597, column: 30, scope: !2696)
!2698 = !DILocation(line: 1597, column: 35, scope: !2696)
!2699 = !DILocalVariable(name: "found", scope: !2696, file: !3, line: 1598, type: !251)
!2700 = !DILocation(line: 1598, column: 31, scope: !2696)
!2701 = !DILocation(line: 1598, column: 52, scope: !2696)
!2702 = !DILocation(line: 1598, column: 68, scope: !2696)
!2703 = !DILocation(line: 1598, column: 39, scope: !2696)
!2704 = !DILocation(line: 1600, column: 15, scope: !2696)
!2705 = !DILocation(line: 1601, column: 29, scope: !2696)
!2706 = !DILocation(line: 1601, column: 15, scope: !2696)
!2707 = !DILocation(line: 1602, column: 33, scope: !2696)
!2708 = !DILocation(line: 1602, column: 15, scope: !2696)
!2709 = !DILocation(line: 1603, column: 15, scope: !2696)
!2710 = distinct !{!2710, !2677, !2711}
!2711 = !DILocation(line: 1612, column: 5, scope: !2467)
!2712 = !DILocation(line: 1605, column: 9, scope: !2690)
!2713 = !DILocation(line: 1607, column: 18, scope: !2680)
!2714 = !DILocation(line: 1607, column: 28, scope: !2680)
!2715 = !DILocation(line: 1607, column: 34, scope: !2680)
!2716 = !DILocation(line: 1607, column: 44, scope: !2680)
!2717 = !{!2672, !2475, i64 8}
!2718 = !DILocation(line: 1608, column: 18, scope: !2680)
!2719 = !DILocation(line: 1608, column: 28, scope: !2680)
!2720 = !{!2672, !2494, i64 16}
!2721 = !DILocation(line: 1607, column: 7, scope: !2680)
!2722 = !DILocation(line: 1610, column: 25, scope: !2680)
!2723 = !DILocation(line: 1610, column: 7, scope: !2680)
!2724 = !DILocation(line: 1611, column: 22, scope: !2680)
!2725 = !DILocation(line: 1614, column: 7, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1614, column: 7)
!2727 = !DILocation(line: 1614, column: 24, scope: !2726)
!2728 = !DILocation(line: 1614, column: 27, scope: !2726)
!2729 = !DILocation(line: 1614, column: 7, scope: !2467)
!2730 = !DILocalVariable(name: "j", scope: !2731, file: !3, line: 1616, type: !27)
!2731 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 1615, column: 5)
!2732 = !DILocation(line: 1616, column: 11, scope: !2731)
!2733 = !DILocation(line: 1620, column: 37, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1620, column: 11)
!2735 = !{!2736, !2499, i64 0}
!2736 = !{!"bin_str", !2499, i64 0, !2475, i64 8}
!2737 = !DILocation(line: 1620, column: 41, scope: !2734)
!2738 = !DILocation(line: 1621, column: 13, scope: !2734)
!2739 = !DILocation(line: 1621, column: 48, scope: !2734)
!2740 = !{!2736, !2475, i64 8}
!2741 = !DILocation(line: 1621, column: 16, scope: !2734)
!2742 = !DILocation(line: 1621, column: 68, scope: !2734)
!2743 = !DILocation(line: 1622, column: 13, scope: !2734)
!2744 = !DILocation(line: 1622, column: 41, scope: !2734)
!2745 = !DILocation(line: 1622, column: 45, scope: !2734)
!2746 = !DILocation(line: 1623, column: 13, scope: !2734)
!2747 = !DILocation(line: 1623, column: 41, scope: !2734)
!2748 = !DILocation(line: 1623, column: 16, scope: !2734)
!2749 = !DILocation(line: 1623, column: 51, scope: !2734)
!2750 = !DILocation(line: 1620, column: 11, scope: !2731)
!2751 = !DILocation(line: 1624, column: 9, scope: !2734)
!2752 = !DILocation(line: 1626, column: 7, scope: !2731)
!2753 = !DILocation(line: 1628, column: 7, scope: !2731)
!2754 = !DILocation(line: 1634, column: 16, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1634, column: 7)
!2756 = !DILocation(line: 1634, column: 14, scope: !2755)
!2757 = !DILocation(line: 1634, column: 12, scope: !2755)
!2758 = !DILocation(line: 1634, column: 35, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 1634, column: 7)
!2760 = !DILocation(line: 1634, column: 7, scope: !2755)
!2761 = !DILocation(line: 1635, column: 9, scope: !2759)
!2762 = !DILocation(line: 1634, column: 39, scope: !2759)
!2763 = !DILocation(line: 1634, column: 7, scope: !2759)
!2764 = distinct !{!2764, !2760, !2765}
!2765 = !DILocation(line: 1635, column: 23, scope: !2755)
!2766 = !DILocation(line: 1636, column: 11, scope: !2731)
!2767 = !DILocation(line: 1636, column: 9, scope: !2731)
!2768 = !DILocation(line: 1637, column: 11, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1637, column: 11)
!2770 = !DILocation(line: 1637, column: 11, scope: !2731)
!2771 = !DILocation(line: 1638, column: 16, scope: !2769)
!2772 = !DILocation(line: 1638, column: 9, scope: !2769)
!2773 = !DILocation(line: 1639, column: 5, scope: !2731)
!2774 = !DILocation(line: 1641, column: 7, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1641, column: 7)
!2776 = !DILocation(line: 1641, column: 7, scope: !2467)
!2777 = !DILocation(line: 1644, column: 7, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 1642, column: 5)
!2779 = !DILocation(line: 1645, column: 7, scope: !2778)
!2780 = !DILocation(line: 1647, column: 53, scope: !2778)
!2781 = !DILocation(line: 1647, column: 34, scope: !2778)
!2782 = !DILocation(line: 1647, column: 15, scope: !2778)
!2783 = !DILocation(line: 1646, column: 7, scope: !2778)
!2784 = !DILocation(line: 1648, column: 5, scope: !2778)
!2785 = !DILocation(line: 1650, column: 7, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 1650, column: 7)
!2787 = !DILocation(line: 1650, column: 7, scope: !2467)
!2788 = !DILocation(line: 1652, column: 7, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 1651, column: 5)
!2790 = !DILocation(line: 1653, column: 18, scope: !2789)
!2791 = !DILocation(line: 1653, column: 7, scope: !2789)
!2792 = !DILocation(line: 1654, column: 5, scope: !2789)
!2793 = !DILocation(line: 1656, column: 10, scope: !2467)
!2794 = !DILocation(line: 1656, column: 3, scope: !2467)
!2795 = distinct !DISubprogram(name: "initialize_exit_failure", scope: !792, file: !792, line: 99, type: !173, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2796 = !DILocalVariable(name: "status", arg: 1, scope: !2795, file: !792, line: 99, type: !27)
!2797 = !DILocation(line: 99, column: 30, scope: !2795)
!2798 = !DILocation(line: 101, column: 7, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2795, file: !792, line: 101, column: 7)
!2800 = !DILocation(line: 101, column: 14, scope: !2799)
!2801 = !DILocation(line: 101, column: 7, scope: !2795)
!2802 = !DILocation(line: 102, column: 20, scope: !2799)
!2803 = !DILocation(line: 102, column: 18, scope: !2799)
!2804 = !DILocation(line: 102, column: 5, scope: !2799)
!2805 = !DILocation(line: 103, column: 1, scope: !2795)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2807, line: 27, size: 64, elements: !2808)
!2807 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/ioctl-types.h", directory: "")
!2808 = !{!2809, !2810, !2811, !2812}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2806, file: !2807, line: 29, baseType: !177, size: 16)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2806, file: !2807, line: 30, baseType: !177, size: 16, offset: 16)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2806, file: !2807, line: 31, baseType: !177, size: 16, offset: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2806, file: !2807, line: 32, baseType: !177, size: 16, offset: 48)
!2813 = !DILocalVariable(name: "argc", arg: 1, scope: !876, file: !3, line: 1688, type: !27)
!2814 = !DILocation(line: 1688, column: 22, scope: !876)
!2815 = !DILocalVariable(name: "argv", arg: 2, scope: !876, file: !3, line: 1688, type: !142)
!2816 = !DILocation(line: 1688, column: 35, scope: !876)
!2817 = !DILocalVariable(name: "time_style_option", scope: !876, file: !3, line: 1690, type: !143)
!2818 = !DILocation(line: 1690, column: 9, scope: !876)
!2819 = !DILocalVariable(name: "sort_type_specified", scope: !876, file: !3, line: 1692, type: !141)
!2820 = !DILocation(line: 1692, column: 8, scope: !876)
!2821 = !DILocalVariable(name: "kibibytes_specified", scope: !876, file: !3, line: 1693, type: !141)
!2822 = !DILocation(line: 1693, column: 8, scope: !876)
!2823 = !DILocation(line: 1695, column: 21, scope: !876)
!2824 = !DILocation(line: 1699, column: 11, scope: !876)
!2825 = !DILocation(line: 1699, column: 3, scope: !876)
!2826 = !DILocation(line: 1703, column: 14, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !876, file: !3, line: 1700, column: 5)
!2828 = !DILocation(line: 1704, column: 7, scope: !2827)
!2829 = !DILocation(line: 1705, column: 7, scope: !2827)
!2830 = !DILocation(line: 1709, column: 14, scope: !2827)
!2831 = !DILocation(line: 1710, column: 7, scope: !2827)
!2832 = !DILocation(line: 1711, column: 7, scope: !2827)
!2833 = !DILocation(line: 1715, column: 11, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2827, file: !3, line: 1715, column: 11)
!2835 = !DILocation(line: 1715, column: 11, scope: !2827)
!2836 = !DILocation(line: 1717, column: 18, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 1716, column: 9)
!2838 = !DILocation(line: 1718, column: 11, scope: !2837)
!2839 = !DILocation(line: 1720, column: 29, scope: !2837)
!2840 = !DILocation(line: 1721, column: 9, scope: !2837)
!2841 = !DILocation(line: 1724, column: 18, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 1723, column: 9)
!2843 = !DILocation(line: 1725, column: 29, scope: !2842)
!2844 = !DILocation(line: 1727, column: 7, scope: !2827)
!2845 = !DILocation(line: 1730, column: 7, scope: !2827)
!2846 = !DILocation(line: 1733, column: 13, scope: !876)
!2847 = !DILocation(line: 1734, column: 13, scope: !876)
!2848 = !DILocation(line: 1735, column: 16, scope: !876)
!2849 = !DILocation(line: 1736, column: 15, scope: !876)
!2850 = !DILocation(line: 1737, column: 20, scope: !876)
!2851 = !DILocation(line: 1738, column: 19, scope: !876)
!2852 = !DILocation(line: 1739, column: 15, scope: !876)
!2853 = !DILocation(line: 1740, column: 15, scope: !876)
!2854 = !DILocation(line: 1741, column: 13, scope: !876)
!2855 = !DILocation(line: 1742, column: 18, scope: !876)
!2856 = !DILocation(line: 1743, column: 15, scope: !876)
!2857 = !DILocation(line: 1744, column: 19, scope: !876)
!2858 = !DILocation(line: 1745, column: 17, scope: !876)
!2859 = !DILocation(line: 1746, column: 18, scope: !876)
!2860 = !DILocation(line: 1748, column: 3, scope: !876)
!2861 = !DILocation(line: 1750, column: 15, scope: !876)
!2862 = !DILocalVariable(name: "p", scope: !2863, file: !3, line: 1752, type: !146)
!2863 = distinct !DILexicalBlock(scope: !876, file: !3, line: 1751, column: 3)
!2864 = !DILocation(line: 1752, column: 17, scope: !2863)
!2865 = !DILocation(line: 1752, column: 21, scope: !2863)
!2866 = !DILocation(line: 1753, column: 9, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 1753, column: 9)
!2868 = !DILocation(line: 1753, column: 11, scope: !2867)
!2869 = !DILocation(line: 1753, column: 15, scope: !2867)
!2870 = !DILocation(line: 1753, column: 14, scope: !2867)
!2871 = !DILocation(line: 1753, column: 17, scope: !2867)
!2872 = !DILocation(line: 1753, column: 39, scope: !2867)
!2873 = !DILocation(line: 1753, column: 22, scope: !2867)
!2874 = !DILocation(line: 1753, column: 9, scope: !2863)
!2875 = !DILocation(line: 1755, column: 14, scope: !2867)
!2876 = !DILocation(line: 1756, column: 21, scope: !2867)
!2877 = !DILocation(line: 1756, column: 14, scope: !2867)
!2878 = !DILocation(line: 1754, column: 7, scope: !2867)
!2879 = !DILocalVariable(name: "ws", scope: !2880, file: !3, line: 1761, type: !2806)
!2880 = distinct !DILexicalBlock(scope: !876, file: !3, line: 1760, column: 3)
!2881 = !DILocation(line: 1761, column: 20, scope: !2880)
!2882 = !DILocation(line: 1763, column: 9, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 1763, column: 9)
!2884 = !DILocation(line: 1763, column: 48, scope: !2883)
!2885 = !DILocation(line: 1764, column: 9, scope: !2883)
!2886 = !DILocation(line: 1764, column: 19, scope: !2883)
!2887 = !{!2888, !2889, i64 2}
!2888 = !{!"winsize", !2889, i64 0, !2889, i64 2, !2889, i64 4, !2889, i64 6}
!2889 = !{!"short", !2470, i64 0}
!2890 = !DILocation(line: 1764, column: 16, scope: !2883)
!2891 = !DILocation(line: 1764, column: 14, scope: !2883)
!2892 = !DILocation(line: 1764, column: 26, scope: !2883)
!2893 = !DILocation(line: 1764, column: 32, scope: !2883)
!2894 = !DILocation(line: 1764, column: 29, scope: !2883)
!2895 = !DILocation(line: 1764, column: 54, scope: !2883)
!2896 = !DILocation(line: 1764, column: 42, scope: !2883)
!2897 = !DILocation(line: 1764, column: 39, scope: !2883)
!2898 = !DILocation(line: 1763, column: 9, scope: !2880)
!2899 = !DILocation(line: 1765, column: 24, scope: !2883)
!2900 = !DILocation(line: 1765, column: 21, scope: !2883)
!2901 = !DILocation(line: 1765, column: 19, scope: !2883)
!2902 = !DILocation(line: 1765, column: 7, scope: !2883)
!2903 = !DILocalVariable(name: "p", scope: !2904, file: !3, line: 1770, type: !146)
!2904 = distinct !DILexicalBlock(scope: !876, file: !3, line: 1769, column: 3)
!2905 = !DILocation(line: 1770, column: 17, scope: !2904)
!2906 = !DILocation(line: 1770, column: 21, scope: !2904)
!2907 = !DILocation(line: 1771, column: 13, scope: !2904)
!2908 = !DILocation(line: 1772, column: 9, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 1772, column: 9)
!2910 = !DILocation(line: 1772, column: 9, scope: !2904)
!2911 = !DILocalVariable(name: "tmp_ulong", scope: !2912, file: !3, line: 1774, type: !151)
!2912 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 1773, column: 7)
!2913 = !DILocation(line: 1774, column: 27, scope: !2912)
!2914 = !DILocation(line: 1775, column: 23, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 1775, column: 13)
!2916 = !DILocation(line: 1775, column: 13, scope: !2915)
!2917 = !DILocation(line: 1775, column: 53, scope: !2915)
!2918 = !DILocation(line: 1776, column: 13, scope: !2915)
!2919 = !DILocation(line: 1776, column: 16, scope: !2915)
!2920 = !DILocation(line: 1776, column: 26, scope: !2915)
!2921 = !DILocation(line: 1775, column: 13, scope: !2912)
!2922 = !DILocation(line: 1778, column: 23, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 1777, column: 11)
!2924 = !DILocation(line: 1778, column: 21, scope: !2923)
!2925 = !DILocation(line: 1779, column: 11, scope: !2923)
!2926 = !DILocation(line: 1783, column: 14, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 1781, column: 11)
!2928 = !DILocation(line: 1784, column: 27, scope: !2927)
!2929 = !DILocation(line: 1784, column: 20, scope: !2927)
!2930 = !DILocation(line: 1782, column: 13, scope: !2927)
!2931 = !DILocation(line: 1786, column: 7, scope: !2912)
!2932 = !DILocation(line: 1789, column: 3, scope: !876)
!2933 = !DILocalVariable(name: "oi", scope: !2934, file: !3, line: 1791, type: !27)
!2934 = distinct !DILexicalBlock(scope: !876, file: !3, line: 1790, column: 5)
!2935 = !DILocation(line: 1791, column: 11, scope: !2934)
!2936 = !DILocalVariable(name: "c", scope: !2934, file: !3, line: 1792, type: !27)
!2937 = !DILocation(line: 1792, column: 11, scope: !2934)
!2938 = !DILocation(line: 1792, column: 28, scope: !2934)
!2939 = !DILocation(line: 1792, column: 34, scope: !2934)
!2940 = !DILocation(line: 1792, column: 15, scope: !2934)
!2941 = !DILocation(line: 1795, column: 11, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2934, file: !3, line: 1795, column: 11)
!2943 = !DILocation(line: 1795, column: 13, scope: !2942)
!2944 = !DILocation(line: 1795, column: 11, scope: !2934)
!2945 = !DILocation(line: 1796, column: 9, scope: !2942)
!2946 = !DILocation(line: 1798, column: 15, scope: !2934)
!2947 = !DILocation(line: 1798, column: 7, scope: !2934)
!2948 = !DILocation(line: 1801, column: 23, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2934, file: !3, line: 1799, column: 9)
!2950 = !DILocation(line: 1802, column: 11, scope: !2949)
!2951 = !DILocation(line: 1805, column: 11, scope: !2949)
!2952 = !DILocation(line: 1806, column: 11, scope: !2949)
!2953 = !DILocation(line: 1809, column: 21, scope: !2949)
!2954 = !DILocation(line: 1810, column: 11, scope: !2949)
!2955 = !DILocation(line: 1813, column: 26, scope: !2949)
!2956 = !DILocation(line: 1814, column: 11, scope: !2949)
!2957 = !DILocation(line: 1818, column: 23, scope: !2949)
!2958 = !DILocation(line: 1819, column: 21, scope: !2949)
!2959 = !DILocation(line: 1820, column: 31, scope: !2949)
!2960 = !DILocation(line: 1822, column: 15, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1822, column: 15)
!2962 = !DILocation(line: 1822, column: 22, scope: !2961)
!2963 = !DILocation(line: 1822, column: 15, scope: !2949)
!2964 = !DILocation(line: 1823, column: 23, scope: !2961)
!2965 = !DILocation(line: 1823, column: 20, scope: !2961)
!2966 = !DILocation(line: 1823, column: 13, scope: !2961)
!2967 = !DILocation(line: 1824, column: 28, scope: !2949)
!2968 = !DILocation(line: 1825, column: 28, scope: !2949)
!2969 = !DILocation(line: 1826, column: 27, scope: !2949)
!2970 = !DILocation(line: 1827, column: 11, scope: !2949)
!2971 = !DILocation(line: 1830, column: 27, scope: !2949)
!2972 = !DILocation(line: 1831, column: 11, scope: !2949)
!2973 = !DILocation(line: 1834, column: 18, scope: !2949)
!2974 = !DILocation(line: 1835, column: 23, scope: !2949)
!2975 = !DILocation(line: 1836, column: 11, scope: !2949)
!2976 = !DILocation(line: 1839, column: 54, scope: !2949)
!2977 = !DILocation(line: 1839, column: 34, scope: !2949)
!2978 = !DILocation(line: 1841, column: 54, scope: !2949)
!2979 = !DILocation(line: 1841, column: 34, scope: !2949)
!2980 = !DILocation(line: 1842, column: 11, scope: !2949)
!2981 = !DILocation(line: 1845, column: 23, scope: !2949)
!2982 = !DILocation(line: 1846, column: 11, scope: !2949)
!2983 = !DILocation(line: 1849, column: 31, scope: !2949)
!2984 = !DILocation(line: 1850, column: 11, scope: !2949)
!2985 = !DILocation(line: 1853, column: 18, scope: !2949)
!2986 = !DILocation(line: 1854, column: 11, scope: !2949)
!2987 = !DILocation(line: 1857, column: 18, scope: !2949)
!2988 = !DILocation(line: 1858, column: 11, scope: !2949)
!2989 = !DILocation(line: 1861, column: 23, scope: !2949)
!2990 = !DILocation(line: 1862, column: 18, scope: !2949)
!2991 = !DILocation(line: 1863, column: 11, scope: !2949)
!2992 = !DILocation(line: 1866, column: 18, scope: !2949)
!2993 = !DILocation(line: 1867, column: 23, scope: !2949)
!2994 = !DILocation(line: 1868, column: 11, scope: !2949)
!2995 = !DILocation(line: 1871, column: 27, scope: !2949)
!2996 = !DILocation(line: 1872, column: 11, scope: !2949)
!2997 = !DILocation(line: 1875, column: 29, scope: !2949)
!2998 = !DILocation(line: 1876, column: 11, scope: !2949)
!2999 = !DILocation(line: 1879, column: 24, scope: !2949)
!3000 = !DILocation(line: 1880, column: 11, scope: !2949)
!3001 = !DILocation(line: 1883, column: 28, scope: !2949)
!3002 = !DILocation(line: 1884, column: 11, scope: !2949)
!3003 = !DILocation(line: 1887, column: 21, scope: !2949)
!3004 = !DILocation(line: 1888, column: 31, scope: !2949)
!3005 = !DILocation(line: 1889, column: 11, scope: !2949)
!3006 = !DILocation(line: 1892, column: 21, scope: !2949)
!3007 = !DILocation(line: 1893, column: 11, scope: !2949)
!3008 = !DILocation(line: 1896, column: 21, scope: !2949)
!3009 = !DILocation(line: 1897, column: 31, scope: !2949)
!3010 = !DILocation(line: 1898, column: 11, scope: !2949)
!3011 = !DILocation(line: 1901, column: 34, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1901, column: 15)
!3013 = !DILocation(line: 1901, column: 17, scope: !3012)
!3014 = !DILocation(line: 1901, column: 15, scope: !2949)
!3015 = !DILocation(line: 1902, column: 13, scope: !3012)
!3016 = !DILocation(line: 1904, column: 11, scope: !2949)
!3017 = !DILocation(line: 1907, column: 18, scope: !2949)
!3018 = !DILocation(line: 1908, column: 11, scope: !2949)
!3019 = !DILocation(line: 1911, column: 23, scope: !2949)
!3020 = !DILocation(line: 1912, column: 11, scope: !2949)
!3021 = !DILocation(line: 1915, column: 11, scope: !2949)
!3022 = !DILocation(line: 1916, column: 11, scope: !2949)
!3023 = !DILocation(line: 1917, column: 11, scope: !2949)
!3024 = !DILocation(line: 1920, column: 18, scope: !2949)
!3025 = !DILocation(line: 1921, column: 11, scope: !2949)
!3026 = !DILocation(line: 1924, column: 17, scope: !2949)
!3027 = !DILocation(line: 1925, column: 11, scope: !2949)
!3028 = !DILocation(line: 1928, column: 27, scope: !2949)
!3029 = !DILocation(line: 1929, column: 11, scope: !2949)
!3030 = !DILocation(line: 1932, column: 23, scope: !2949)
!3031 = !DILocation(line: 1933, column: 11, scope: !2949)
!3032 = !DILocation(line: 1936, column: 23, scope: !2949)
!3033 = !DILocation(line: 1937, column: 11, scope: !2949)
!3034 = !DILocation(line: 1940, column: 23, scope: !2949)
!3035 = !DILocation(line: 1941, column: 11, scope: !2949)
!3036 = !DILocation(line: 1944, column: 31, scope: !2949)
!3037 = !DILocation(line: 1944, column: 11, scope: !2949)
!3038 = !DILocation(line: 1945, column: 11, scope: !2949)
!3039 = !DILocation(line: 1948, column: 23, scope: !2949)
!3040 = !DILocation(line: 1949, column: 11, scope: !2949)
!3041 = !DILocation(line: 1952, column: 11, scope: !2949)
!3042 = !DILocation(line: 1953, column: 11, scope: !2949)
!3043 = !DILocation(line: 1956, column: 11, scope: !2949)
!3044 = !DILocation(line: 1957, column: 11, scope: !2949)
!3045 = !DILocation(line: 1960, column: 21, scope: !2949)
!3046 = !DILocation(line: 1961, column: 11, scope: !2949)
!3047 = !DILocation(line: 1964, column: 21, scope: !2949)
!3048 = !DILocation(line: 1965, column: 31, scope: !2949)
!3049 = !DILocation(line: 1966, column: 11, scope: !2949)
!3050 = !DILocation(line: 1969, column: 33, scope: !2949)
!3051 = !DILocation(line: 1970, column: 33, scope: !2949)
!3052 = !DILocation(line: 1969, column: 21, scope: !2949)
!3053 = !DILocation(line: 1969, column: 19, scope: !2949)
!3054 = !DILocation(line: 1971, column: 11, scope: !2949)
!3055 = !DILocation(line: 1974, column: 21, scope: !2949)
!3056 = !DILocation(line: 1975, column: 31, scope: !2949)
!3057 = !DILocation(line: 1976, column: 11, scope: !2949)
!3058 = !DILocation(line: 1979, column: 21, scope: !2949)
!3059 = !DILocation(line: 1980, column: 31, scope: !2949)
!3060 = !DILocation(line: 1981, column: 11, scope: !2949)
!3061 = !DILocation(line: 1985, column: 15, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1985, column: 15)
!3063 = !DILocation(line: 1985, column: 22, scope: !3062)
!3064 = !DILocation(line: 1985, column: 15, scope: !2949)
!3065 = !DILocation(line: 1986, column: 20, scope: !3062)
!3066 = !DILocation(line: 1986, column: 13, scope: !3062)
!3067 = !DILocation(line: 1987, column: 11, scope: !2949)
!3068 = !DILocation(line: 1990, column: 24, scope: !2949)
!3069 = !DILocation(line: 1991, column: 11, scope: !2949)
!3070 = !DILocalVariable(name: "hide", scope: !3071, file: !3, line: 1995, type: !499)
!3071 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1994, column: 11)
!3072 = !DILocation(line: 1995, column: 36, scope: !3071)
!3073 = !DILocation(line: 1995, column: 43, scope: !3071)
!3074 = !DILocation(line: 1996, column: 29, scope: !3071)
!3075 = !DILocation(line: 1996, column: 13, scope: !3071)
!3076 = !DILocation(line: 1996, column: 19, scope: !3071)
!3077 = !DILocation(line: 1996, column: 27, scope: !3071)
!3078 = !{!3079, !2475, i64 0}
!3079 = !{!"ignore_pattern", !2475, i64 0, !2475, i64 8}
!3080 = !DILocation(line: 1997, column: 26, scope: !3071)
!3081 = !DILocation(line: 1997, column: 13, scope: !3071)
!3082 = !DILocation(line: 1997, column: 19, scope: !3071)
!3083 = !DILocation(line: 1997, column: 24, scope: !3071)
!3084 = !{!3079, !2475, i64 8}
!3085 = !DILocation(line: 1998, column: 29, scope: !3071)
!3086 = !DILocation(line: 1998, column: 27, scope: !3071)
!3087 = !DILocation(line: 2000, column: 11, scope: !2949)
!3088 = !DILocation(line: 2003, column: 23, scope: !2949)
!3089 = !DILocation(line: 2003, column: 21, scope: !2949)
!3090 = !DILocation(line: 2004, column: 31, scope: !2949)
!3091 = !DILocation(line: 2005, column: 11, scope: !2949)
!3092 = !DILocation(line: 2008, column: 29, scope: !2949)
!3093 = !DILocation(line: 2009, column: 11, scope: !2949)
!3094 = !DILocation(line: 2012, column: 23, scope: !2949)
!3095 = !DILocation(line: 2012, column: 21, scope: !2949)
!3096 = !DILocation(line: 2013, column: 11, scope: !2949)
!3097 = !DILocation(line: 2016, column: 20, scope: !2949)
!3098 = !DILocation(line: 2016, column: 18, scope: !2949)
!3099 = !DILocation(line: 2017, column: 11, scope: !2949)
!3100 = !DILocation(line: 2020, column: 18, scope: !2949)
!3101 = !DILocation(line: 2021, column: 31, scope: !2949)
!3102 = !DILocation(line: 2021, column: 29, scope: !2949)
!3103 = !DILocation(line: 2022, column: 11, scope: !2949)
!3104 = !DILocalVariable(name: "i", scope: !3105, file: !3, line: 2026, type: !27)
!3105 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 2025, column: 11)
!3106 = !DILocation(line: 2026, column: 17, scope: !3105)
!3107 = !DILocation(line: 2027, column: 17, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 2027, column: 17)
!3109 = !DILocation(line: 2027, column: 17, scope: !3105)
!3110 = !DILocation(line: 2028, column: 19, scope: !3108)
!3111 = !DILocation(line: 2028, column: 17, scope: !3108)
!3112 = !DILocation(line: 2028, column: 15, scope: !3108)
!3113 = !DILocation(line: 2032, column: 17, scope: !3108)
!3114 = !DILocation(line: 2034, column: 33, scope: !3105)
!3115 = !DILocation(line: 2034, column: 35, scope: !3105)
!3116 = !DILocation(line: 2035, column: 33, scope: !3105)
!3117 = !DILocation(line: 2035, column: 37, scope: !3105)
!3118 = !DILocation(line: 2035, column: 39, scope: !3105)
!3119 = !DILocation(line: 2036, column: 37, scope: !3105)
!3120 = !DILocation(line: 2036, column: 40, scope: !3105)
!3121 = !DILocation(line: 0, scope: !3105)
!3122 = !DILocation(line: 2034, column: 30, scope: !3105)
!3123 = !DILocation(line: 2038, column: 17, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 2038, column: 17)
!3125 = !DILocation(line: 2038, column: 17, scope: !3105)
!3126 = !DILocation(line: 2043, column: 25, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2039, column: 15)
!3128 = !DILocation(line: 2044, column: 15, scope: !3127)
!3129 = !DILocation(line: 2045, column: 13, scope: !3105)
!3130 = !DILocalVariable(name: "i", scope: !3131, file: !3, line: 2050, type: !27)
!3131 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 2049, column: 11)
!3132 = !DILocation(line: 2050, column: 17, scope: !3131)
!3133 = !DILocation(line: 2051, column: 17, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 2051, column: 17)
!3135 = !DILocation(line: 2051, column: 17, scope: !3131)
!3136 = !DILocation(line: 2052, column: 19, scope: !3134)
!3137 = !DILocation(line: 2052, column: 17, scope: !3134)
!3138 = !DILocation(line: 2052, column: 15, scope: !3134)
!3139 = !DILocation(line: 2056, column: 17, scope: !3134)
!3140 = !DILocation(line: 2058, column: 32, scope: !3131)
!3141 = !DILocation(line: 2058, column: 34, scope: !3131)
!3142 = !DILocation(line: 2059, column: 32, scope: !3131)
!3143 = !DILocation(line: 2059, column: 36, scope: !3131)
!3144 = !DILocation(line: 2059, column: 38, scope: !3131)
!3145 = !DILocation(line: 2060, column: 36, scope: !3131)
!3146 = !DILocation(line: 2060, column: 39, scope: !3131)
!3147 = !DILocation(line: 0, scope: !3131)
!3148 = !DILocation(line: 2058, column: 29, scope: !3131)
!3149 = !DILocation(line: 2061, column: 13, scope: !3131)
!3150 = !DILocation(line: 2065, column: 29, scope: !2949)
!3151 = !DILocation(line: 2065, column: 27, scope: !2949)
!3152 = !DILocation(line: 2068, column: 11, scope: !2949)
!3153 = !DILocation(line: 2072, column: 30, scope: !2949)
!3154 = !DILocation(line: 2071, column: 11, scope: !2949)
!3155 = !DILocation(line: 2075, column: 11, scope: !2949)
!3156 = !DILocation(line: 2078, column: 31, scope: !2949)
!3157 = !DILocation(line: 2078, column: 29, scope: !2949)
!3158 = !DILocation(line: 2079, column: 11, scope: !2949)
!3159 = !DILocation(line: 2082, column: 29, scope: !2949)
!3160 = !DILocation(line: 2083, column: 11, scope: !2949)
!3161 = !DILocalVariable(name: "e", scope: !3162, file: !3, line: 2087, type: !109)
!3162 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 2086, column: 11)
!3163 = !DILocation(line: 2087, column: 31, scope: !3162)
!3164 = !DILocation(line: 2087, column: 50, scope: !3162)
!3165 = !DILocation(line: 2087, column: 35, scope: !3162)
!3166 = !DILocation(line: 2089, column: 17, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 2089, column: 17)
!3168 = !DILocation(line: 2089, column: 19, scope: !3167)
!3169 = !DILocation(line: 2089, column: 17, scope: !3162)
!3170 = !DILocation(line: 2090, column: 30, scope: !3167)
!3171 = !DILocation(line: 2090, column: 33, scope: !3167)
!3172 = !DILocation(line: 2090, column: 54, scope: !3167)
!3173 = !DILocation(line: 2090, column: 15, scope: !3167)
!3174 = !DILocation(line: 2091, column: 38, scope: !3162)
!3175 = !DILocation(line: 2091, column: 36, scope: !3162)
!3176 = !DILocation(line: 2092, column: 38, scope: !3162)
!3177 = !DILocation(line: 2092, column: 36, scope: !3162)
!3178 = !DILocation(line: 2094, column: 11, scope: !2949)
!3179 = !DILocation(line: 2097, column: 54, scope: !2949)
!3180 = !DILocation(line: 2097, column: 34, scope: !2949)
!3181 = !DILocation(line: 2099, column: 54, scope: !2949)
!3182 = !DILocation(line: 2099, column: 34, scope: !2949)
!3183 = !DILocation(line: 2100, column: 11, scope: !2949)
!3184 = !DILocation(line: 2103, column: 26, scope: !2949)
!3185 = !DILocation(line: 2104, column: 11, scope: !2949)
!3186 = !DILocation(line: 2106, column: 9, scope: !2949)
!3187 = !DILocation(line: 2108, column: 9, scope: !2949)
!3188 = !DILocation(line: 2111, column: 11, scope: !2949)
!3189 = distinct !{!3189, !2932, !3190}
!3190 = !DILocation(line: 2113, column: 5, scope: !876)
!3191 = !DILocation(line: 2115, column: 9, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !876, file: !3, line: 2115, column: 7)
!3193 = !DILocation(line: 2115, column: 7, scope: !876)
!3194 = !DILocalVariable(name: "ls_block_size", scope: !3195, file: !3, line: 2117, type: !146)
!3195 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 2116, column: 5)
!3196 = !DILocation(line: 2117, column: 19, scope: !3195)
!3197 = !DILocation(line: 2117, column: 35, scope: !3195)
!3198 = !DILocation(line: 2118, column: 22, scope: !3195)
!3199 = !DILocation(line: 2118, column: 7, scope: !3195)
!3200 = !DILocation(line: 2120, column: 11, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 2120, column: 11)
!3202 = !DILocation(line: 2120, column: 25, scope: !3201)
!3203 = !DILocation(line: 2120, column: 28, scope: !3201)
!3204 = !DILocation(line: 2120, column: 11, scope: !3195)
!3205 = !DILocation(line: 2122, column: 36, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 2121, column: 9)
!3207 = !DILocation(line: 2122, column: 34, scope: !3206)
!3208 = !DILocation(line: 2123, column: 36, scope: !3206)
!3209 = !DILocation(line: 2123, column: 34, scope: !3206)
!3210 = !DILocation(line: 2124, column: 9, scope: !3206)
!3211 = !DILocation(line: 2125, column: 11, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 2125, column: 11)
!3213 = !DILocation(line: 2125, column: 11, scope: !3195)
!3214 = !DILocation(line: 2127, column: 29, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 2126, column: 9)
!3216 = !DILocation(line: 2128, column: 29, scope: !3215)
!3217 = !DILocation(line: 2129, column: 9, scope: !3215)
!3218 = !DILocation(line: 2130, column: 5, scope: !3195)
!3219 = !DILocation(line: 2133, column: 13, scope: !876)
!3220 = !DILocation(line: 2133, column: 25, scope: !876)
!3221 = !DILocation(line: 2133, column: 11, scope: !876)
!3222 = !DILocation(line: 2136, column: 14, scope: !876)
!3223 = !DILocation(line: 2136, column: 26, scope: !876)
!3224 = !DILocation(line: 2136, column: 45, scope: !876)
!3225 = !DILocation(line: 2136, column: 11, scope: !876)
!3226 = !DILocalVariable(name: "qs", scope: !876, file: !3, line: 2138, type: !95)
!3227 = !DILocation(line: 2138, column: 22, scope: !876)
!3228 = !DILocation(line: 2138, column: 27, scope: !876)
!3229 = !DILocation(line: 2139, column: 33, scope: !876)
!3230 = !DILocation(line: 2139, column: 40, scope: !876)
!3231 = !DILocation(line: 2140, column: 33, scope: !876)
!3232 = !DILocation(line: 2140, column: 36, scope: !876)
!3233 = !DILocation(line: 2140, column: 43, scope: !876)
!3234 = !DILocation(line: 2141, column: 33, scope: !876)
!3235 = !DILocation(line: 2141, column: 37, scope: !876)
!3236 = !DILocation(line: 2141, column: 49, scope: !876)
!3237 = !DILocation(line: 2141, column: 52, scope: !876)
!3238 = !DILocation(line: 2141, column: 59, scope: !876)
!3239 = !DILocation(line: 2142, column: 33, scope: !876)
!3240 = !DILocation(line: 2142, column: 37, scope: !876)
!3241 = !DILocation(line: 2142, column: 40, scope: !876)
!3242 = !DILocation(line: 2143, column: 37, scope: !876)
!3243 = !DILocation(line: 2143, column: 40, scope: !876)
!3244 = !DILocation(line: 2143, column: 43, scope: !876)
!3245 = !DILocation(line: 2144, column: 37, scope: !876)
!3246 = !DILocation(line: 2144, column: 40, scope: !876)
!3247 = !DILocation(line: 2144, column: 43, scope: !876)
!3248 = !DILocation(line: 0, scope: !876)
!3249 = !DILocation(line: 2139, column: 31, scope: !876)
!3250 = !DILocation(line: 2145, column: 30, scope: !876)
!3251 = !DILocation(line: 2145, column: 28, scope: !876)
!3252 = !DILocation(line: 2146, column: 7, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !876, file: !3, line: 2146, column: 7)
!3254 = !DILocation(line: 2146, column: 10, scope: !3253)
!3255 = !DILocation(line: 2146, column: 7, scope: !876)
!3256 = !DILocation(line: 2147, column: 23, scope: !3253)
!3257 = !DILocation(line: 2147, column: 5, scope: !3253)
!3258 = !DILocation(line: 2148, column: 20, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !876, file: !3, line: 2148, column: 7)
!3260 = !DILocation(line: 2148, column: 17, scope: !3259)
!3261 = !DILocation(line: 2148, column: 7, scope: !876)
!3262 = !DILocalVariable(name: "p", scope: !3263, file: !3, line: 2150, type: !146)
!3263 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2149, column: 5)
!3264 = !DILocation(line: 2150, column: 19, scope: !3263)
!3265 = !DILocation(line: 2151, column: 25, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 2151, column: 7)
!3267 = !DILocation(line: 2151, column: 41, scope: !3266)
!3268 = !DILocation(line: 2151, column: 17, scope: !3266)
!3269 = !DILocation(line: 2151, column: 14, scope: !3266)
!3270 = !DILocation(line: 2151, column: 12, scope: !3266)
!3271 = !DILocation(line: 2151, column: 56, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 2151, column: 7)
!3273 = !DILocation(line: 2151, column: 55, scope: !3272)
!3274 = !DILocation(line: 2151, column: 7, scope: !3266)
!3275 = !DILocation(line: 2152, column: 27, scope: !3272)
!3276 = !DILocation(line: 2152, column: 54, scope: !3272)
!3277 = !DILocation(line: 2152, column: 53, scope: !3272)
!3278 = !DILocation(line: 2152, column: 9, scope: !3272)
!3279 = !DILocation(line: 2151, column: 60, scope: !3272)
!3280 = !DILocation(line: 2151, column: 7, scope: !3272)
!3281 = distinct !{!3281, !3274, !3282}
!3282 = !DILocation(line: 2152, column: 58, scope: !3266)
!3283 = !DILocation(line: 2153, column: 5, scope: !3263)
!3284 = !DILocation(line: 2155, column: 29, scope: !876)
!3285 = !DILocation(line: 2155, column: 27, scope: !876)
!3286 = !DILocation(line: 2156, column: 21, scope: !876)
!3287 = !DILocation(line: 2156, column: 3, scope: !876)
!3288 = !DILocation(line: 2161, column: 7, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !876, file: !3, line: 2161, column: 7)
!3290 = !DILocation(line: 2161, column: 13, scope: !3289)
!3291 = !DILocation(line: 2161, column: 17, scope: !3289)
!3292 = !DILocation(line: 2161, column: 24, scope: !3289)
!3293 = !DILocation(line: 2161, column: 39, scope: !3289)
!3294 = !DILocation(line: 2161, column: 42, scope: !3289)
!3295 = !DILocation(line: 2161, column: 7, scope: !876)
!3296 = !DILocation(line: 2162, column: 11, scope: !3289)
!3297 = !DILocation(line: 2162, column: 5, scope: !3289)
!3298 = !DILocation(line: 2172, column: 8, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !876, file: !3, line: 2172, column: 7)
!3300 = !DILocation(line: 2172, column: 18, scope: !3299)
!3301 = !DILocation(line: 2172, column: 32, scope: !3299)
!3302 = !DILocation(line: 2172, column: 35, scope: !3299)
!3303 = !DILocation(line: 2172, column: 45, scope: !3299)
!3304 = !DILocation(line: 2173, column: 7, scope: !3299)
!3305 = !DILocation(line: 2173, column: 11, scope: !3299)
!3306 = !DILocation(line: 2173, column: 31, scope: !3299)
!3307 = !DILocation(line: 2173, column: 34, scope: !3299)
!3308 = !DILocation(line: 2173, column: 41, scope: !3299)
!3309 = !DILocation(line: 2172, column: 7, scope: !876)
!3310 = !DILocation(line: 2175, column: 17, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 2174, column: 5)
!3312 = !DILocation(line: 2176, column: 5, scope: !3311)
!3313 = !DILocation(line: 2178, column: 7, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !876, file: !3, line: 2178, column: 7)
!3315 = !DILocation(line: 2178, column: 14, scope: !3314)
!3316 = !DILocation(line: 2178, column: 7, scope: !876)
!3317 = !DILocalVariable(name: "style", scope: !3318, file: !3, line: 2180, type: !143)
!3318 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 2179, column: 5)
!3319 = !DILocation(line: 2180, column: 13, scope: !3318)
!3320 = !DILocation(line: 2180, column: 21, scope: !3318)
!3321 = !DILocation(line: 2183, column: 13, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2183, column: 11)
!3323 = !DILocation(line: 2183, column: 11, scope: !3318)
!3324 = !DILocation(line: 2184, column: 24, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 2184, column: 13)
!3326 = !DILocation(line: 2184, column: 22, scope: !3325)
!3327 = !DILocation(line: 2184, column: 13, scope: !3322)
!3328 = !DILocation(line: 2185, column: 19, scope: !3325)
!3329 = !DILocation(line: 2185, column: 17, scope: !3325)
!3330 = !DILocation(line: 2185, column: 11, scope: !3325)
!3331 = !DILocation(line: 2184, column: 45, scope: !3325)
!3332 = !DILocation(line: 2187, column: 7, scope: !3318)
!3333 = !DILocation(line: 2187, column: 14, scope: !3318)
!3334 = !DILocation(line: 2189, column: 17, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 2189, column: 15)
!3336 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2188, column: 9)
!3337 = !DILocation(line: 2189, column: 15, scope: !3336)
!3338 = !DILocation(line: 2190, column: 20, scope: !3335)
!3339 = !DILocation(line: 2190, column: 13, scope: !3335)
!3340 = !DILocation(line: 2191, column: 17, scope: !3336)
!3341 = distinct !{!3341, !3332, !3342}
!3342 = !DILocation(line: 2192, column: 9, scope: !3318)
!3343 = !DILocation(line: 2194, column: 12, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2194, column: 11)
!3345 = !DILocation(line: 2194, column: 11, scope: !3344)
!3346 = !DILocation(line: 2194, column: 18, scope: !3344)
!3347 = !DILocation(line: 2194, column: 11, scope: !3318)
!3348 = !DILocalVariable(name: "p0", scope: !3349, file: !3, line: 2196, type: !143)
!3349 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 2195, column: 9)
!3350 = !DILocation(line: 2196, column: 17, scope: !3349)
!3351 = !DILocation(line: 2196, column: 22, scope: !3349)
!3352 = !DILocation(line: 2196, column: 28, scope: !3349)
!3353 = !DILocalVariable(name: "p1", scope: !3349, file: !3, line: 2197, type: !143)
!3354 = !DILocation(line: 2197, column: 17, scope: !3349)
!3355 = !DILocation(line: 2197, column: 30, scope: !3349)
!3356 = !DILocation(line: 2197, column: 22, scope: !3349)
!3357 = !DILocation(line: 2198, column: 17, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 2198, column: 15)
!3359 = !DILocation(line: 2198, column: 15, scope: !3349)
!3360 = !DILocation(line: 2199, column: 18, scope: !3358)
!3361 = !DILocation(line: 2199, column: 16, scope: !3358)
!3362 = !DILocation(line: 2199, column: 13, scope: !3358)
!3363 = !DILocation(line: 2202, column: 27, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 2202, column: 19)
!3365 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 2201, column: 13)
!3366 = !DILocation(line: 2202, column: 30, scope: !3364)
!3367 = !DILocation(line: 2202, column: 19, scope: !3364)
!3368 = !DILocation(line: 2202, column: 19, scope: !3365)
!3369 = !DILocation(line: 2203, column: 17, scope: !3364)
!3370 = !DILocation(line: 2205, column: 18, scope: !3365)
!3371 = !DILocation(line: 2205, column: 21, scope: !3365)
!3372 = !DILocation(line: 2207, column: 33, scope: !3349)
!3373 = !DILocation(line: 2207, column: 31, scope: !3349)
!3374 = !DILocation(line: 2208, column: 33, scope: !3349)
!3375 = !DILocation(line: 2208, column: 31, scope: !3349)
!3376 = !DILocation(line: 2209, column: 9, scope: !3349)
!3377 = !DILocalVariable(name: "res", scope: !3378, file: !3, line: 2212, type: !552)
!3378 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 2211, column: 9)
!3379 = !DILocation(line: 2212, column: 21, scope: !3378)
!3380 = !DILocation(line: 2212, column: 37, scope: !3378)
!3381 = !DILocation(line: 2212, column: 27, scope: !3378)
!3382 = !DILocation(line: 2215, column: 15, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 2215, column: 15)
!3384 = !DILocation(line: 2215, column: 19, scope: !3383)
!3385 = !DILocation(line: 2215, column: 15, scope: !3378)
!3386 = !DILocation(line: 2220, column: 47, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 2216, column: 13)
!3388 = !DILocation(line: 2220, column: 54, scope: !3387)
!3389 = !DILocation(line: 2220, column: 15, scope: !3387)
!3390 = !DILocation(line: 2227, column: 15, scope: !3387)
!3391 = !DILocalVariable(name: "p", scope: !3387, file: !3, line: 2228, type: !555)
!3392 = !DILocation(line: 2228, column: 34, scope: !3387)
!3393 = !DILocation(line: 2229, column: 15, scope: !3387)
!3394 = !DILocation(line: 2229, column: 23, scope: !3387)
!3395 = !DILocation(line: 2229, column: 22, scope: !3387)
!3396 = !DILocation(line: 2230, column: 26, scope: !3387)
!3397 = !DILocation(line: 2230, column: 56, scope: !3387)
!3398 = !DILocation(line: 2230, column: 54, scope: !3387)
!3399 = !DILocation(line: 2230, column: 17, scope: !3387)
!3400 = distinct !{!3400, !3393, !3401}
!3401 = !DILocation(line: 2230, column: 58, scope: !3387)
!3402 = !DILocation(line: 2231, column: 15, scope: !3387)
!3403 = !DILocation(line: 2233, column: 15, scope: !3387)
!3404 = !DILocation(line: 2235, column: 19, scope: !3378)
!3405 = !DILocation(line: 2235, column: 11, scope: !3378)
!3406 = !DILocation(line: 2238, column: 57, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 2236, column: 13)
!3408 = !DILocation(line: 2238, column: 35, scope: !3407)
!3409 = !DILocation(line: 2240, column: 15, scope: !3407)
!3410 = !DILocation(line: 2243, column: 57, scope: !3407)
!3411 = !DILocation(line: 2243, column: 35, scope: !3407)
!3412 = !DILocation(line: 2244, column: 15, scope: !3407)
!3413 = !DILocation(line: 2247, column: 35, scope: !3407)
!3414 = !DILocation(line: 2248, column: 35, scope: !3407)
!3415 = !DILocation(line: 2249, column: 15, scope: !3407)
!3416 = !DILocation(line: 2252, column: 19, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 2252, column: 19)
!3418 = !DILocation(line: 2252, column: 19, scope: !3407)
!3419 = !DILocalVariable(name: "i", scope: !3420, file: !3, line: 2254, type: !27)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 2254, column: 19)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 2253, column: 17)
!3422 = !DILocation(line: 2254, column: 28, scope: !3420)
!3423 = !DILocation(line: 2254, column: 24, scope: !3420)
!3424 = !DILocation(line: 2254, column: 35, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 2254, column: 19)
!3426 = !DILocation(line: 2254, column: 37, scope: !3425)
!3427 = !DILocation(line: 2254, column: 19, scope: !3420)
!3428 = !DILocation(line: 2256, column: 57, scope: !3425)
!3429 = !DILocation(line: 2256, column: 40, scope: !3425)
!3430 = !DILocation(line: 2256, column: 23, scope: !3425)
!3431 = !DILocation(line: 2255, column: 38, scope: !3425)
!3432 = !DILocation(line: 2255, column: 21, scope: !3425)
!3433 = !DILocation(line: 2255, column: 41, scope: !3425)
!3434 = !DILocation(line: 2254, column: 43, scope: !3425)
!3435 = !DILocation(line: 2254, column: 19, scope: !3425)
!3436 = distinct !{!3436, !3427, !3437}
!3437 = !DILocation(line: 2256, column: 68, scope: !3420)
!3438 = !DILocation(line: 2257, column: 17, scope: !3421)
!3439 = !DILocation(line: 2258, column: 13, scope: !3407)
!3440 = !DILocation(line: 2261, column: 7, scope: !3318)
!3441 = !DILocation(line: 2262, column: 5, scope: !3318)
!3442 = !DILocation(line: 2264, column: 10, scope: !876)
!3443 = !DILocation(line: 2264, column: 3, scope: !876)
!3444 = !DILocation(line: 2265, column: 1, scope: !876)
!3445 = distinct !DISubprogram(name: "parse_ls_color", scope: !3, file: !3, line: 2510, type: !336, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3446 = !DILocalVariable(name: "p", scope: !3445, file: !3, line: 2512, type: !146)
!3447 = !DILocation(line: 2512, column: 15, scope: !3445)
!3448 = !DILocalVariable(name: "buf", scope: !3445, file: !3, line: 2513, type: !143)
!3449 = !DILocation(line: 2513, column: 9, scope: !3445)
!3450 = !DILocalVariable(name: "ind_no", scope: !3445, file: !3, line: 2514, type: !27)
!3451 = !DILocation(line: 2514, column: 7, scope: !3445)
!3452 = !DILocalVariable(name: "label", scope: !3445, file: !3, line: 2515, type: !580)
!3453 = !DILocation(line: 2515, column: 8, scope: !3445)
!3454 = !DILocalVariable(name: "ext", scope: !3445, file: !3, line: 2516, type: !581)
!3455 = !DILocation(line: 2516, column: 26, scope: !3445)
!3456 = !DILocation(line: 2518, column: 12, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 2518, column: 7)
!3458 = !DILocation(line: 2518, column: 10, scope: !3457)
!3459 = !DILocation(line: 2518, column: 34, scope: !3457)
!3460 = !DILocation(line: 2518, column: 42, scope: !3457)
!3461 = !DILocation(line: 2518, column: 46, scope: !3457)
!3462 = !DILocation(line: 2518, column: 45, scope: !3457)
!3463 = !DILocation(line: 2518, column: 48, scope: !3457)
!3464 = !DILocation(line: 2518, column: 7, scope: !3445)
!3465 = !DILocalVariable(name: "colorterm", scope: !3466, file: !3, line: 2524, type: !146)
!3466 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 2519, column: 5)
!3467 = !DILocation(line: 2524, column: 19, scope: !3466)
!3468 = !DILocation(line: 2524, column: 31, scope: !3466)
!3469 = !DILocation(line: 2525, column: 14, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 2525, column: 11)
!3471 = !DILocation(line: 2525, column: 24, scope: !3470)
!3472 = !DILocation(line: 2525, column: 28, scope: !3470)
!3473 = !DILocation(line: 2525, column: 27, scope: !3470)
!3474 = !DILocation(line: 2525, column: 39, scope: !3470)
!3475 = !DILocation(line: 2525, column: 44, scope: !3470)
!3476 = !DILocation(line: 2525, column: 11, scope: !3466)
!3477 = !DILocation(line: 2526, column: 26, scope: !3470)
!3478 = !DILocation(line: 2526, column: 9, scope: !3470)
!3479 = !DILocation(line: 2527, column: 7, scope: !3466)
!3480 = !DILocation(line: 2530, column: 7, scope: !3445)
!3481 = !DILocation(line: 2531, column: 11, scope: !3445)
!3482 = !DILocation(line: 2531, column: 3, scope: !3445)
!3483 = !DILocation(line: 2537, column: 30, scope: !3445)
!3484 = !DILocation(line: 2537, column: 21, scope: !3445)
!3485 = !DILocation(line: 2537, column: 19, scope: !3445)
!3486 = !DILocation(line: 2537, column: 7, scope: !3445)
!3487 = !DILocalVariable(name: "state", scope: !3445, file: !3, line: 2539, type: !129)
!3488 = !DILocation(line: 2539, column: 20, scope: !3445)
!3489 = !DILocation(line: 2540, column: 3, scope: !3445)
!3490 = !DILocation(line: 2542, column: 15, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 2541, column: 5)
!3492 = !DILocation(line: 2542, column: 7, scope: !3491)
!3493 = !DILocation(line: 2545, column: 20, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 2543, column: 9)
!3495 = !DILocation(line: 2545, column: 19, scope: !3494)
!3496 = !DILocation(line: 2545, column: 11, scope: !3494)
!3497 = !DILocation(line: 2548, column: 15, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2546, column: 13)
!3499 = !DILocation(line: 2549, column: 15, scope: !3498)
!3500 = !DILocation(line: 2557, column: 21, scope: !3498)
!3501 = !DILocation(line: 2557, column: 19, scope: !3498)
!3502 = !DILocation(line: 2558, column: 27, scope: !3498)
!3503 = !DILocation(line: 2558, column: 15, scope: !3498)
!3504 = !DILocation(line: 2558, column: 20, scope: !3498)
!3505 = !DILocation(line: 2558, column: 25, scope: !3498)
!3506 = !{!3507, !2475, i64 32}
!3507 = !{!"color_ext_type", !2736, i64 0, !2736, i64 16, !2475, i64 32}
!3508 = !DILocation(line: 2559, column: 32, scope: !3498)
!3509 = !DILocation(line: 2559, column: 30, scope: !3498)
!3510 = !DILocation(line: 2561, column: 15, scope: !3498)
!3511 = !DILocation(line: 2562, column: 33, scope: !3498)
!3512 = !DILocation(line: 2562, column: 15, scope: !3498)
!3513 = !DILocation(line: 2562, column: 20, scope: !3498)
!3514 = !DILocation(line: 2562, column: 24, scope: !3498)
!3515 = !DILocation(line: 2562, column: 31, scope: !3498)
!3516 = !{!3507, !2475, i64 8}
!3517 = !DILocation(line: 2564, column: 59, scope: !3498)
!3518 = !DILocation(line: 2564, column: 64, scope: !3498)
!3519 = !DILocation(line: 2564, column: 68, scope: !3498)
!3520 = !DILocation(line: 2564, column: 24, scope: !3498)
!3521 = !DILocation(line: 2564, column: 21, scope: !3498)
!3522 = !DILocation(line: 2566, column: 15, scope: !3498)
!3523 = !DILocation(line: 2569, column: 21, scope: !3498)
!3524 = !DILocation(line: 2570, column: 15, scope: !3498)
!3525 = !DILocation(line: 2573, column: 29, scope: !3498)
!3526 = !DILocation(line: 2573, column: 26, scope: !3498)
!3527 = !DILocation(line: 2573, column: 15, scope: !3498)
!3528 = !DILocation(line: 2573, column: 24, scope: !3498)
!3529 = !DILocation(line: 2574, column: 21, scope: !3498)
!3530 = !DILocation(line: 2575, column: 15, scope: !3498)
!3531 = !DILocation(line: 2577, column: 11, scope: !3494)
!3532 = !DILocation(line: 2580, column: 16, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2580, column: 15)
!3534 = !DILocation(line: 2580, column: 15, scope: !3533)
!3535 = !DILocation(line: 2580, column: 15, scope: !3494)
!3536 = !DILocation(line: 2582, column: 29, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 2581, column: 13)
!3538 = !DILocation(line: 2582, column: 26, scope: !3537)
!3539 = !DILocation(line: 2582, column: 15, scope: !3537)
!3540 = !DILocation(line: 2582, column: 24, scope: !3537)
!3541 = !DILocation(line: 2583, column: 21, scope: !3537)
!3542 = !DILocation(line: 2584, column: 13, scope: !3537)
!3543 = !DILocation(line: 2586, column: 19, scope: !3533)
!3544 = !DILocation(line: 2587, column: 11, scope: !3494)
!3545 = !DILocation(line: 2590, column: 17, scope: !3494)
!3546 = !DILocation(line: 2591, column: 18, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2591, column: 15)
!3548 = !DILocation(line: 2591, column: 15, scope: !3547)
!3549 = !DILocation(line: 2591, column: 22, scope: !3547)
!3550 = !DILocation(line: 2591, column: 15, scope: !3494)
!3551 = !DILocation(line: 2593, column: 27, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 2593, column: 15)
!3553 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 2592, column: 13)
!3554 = !DILocation(line: 2593, column: 20, scope: !3552)
!3555 = !DILocation(line: 2593, column: 47, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 2593, column: 15)
!3557 = !DILocation(line: 2593, column: 32, scope: !3556)
!3558 = !DILocation(line: 2593, column: 55, scope: !3556)
!3559 = !DILocation(line: 2593, column: 15, scope: !3552)
!3560 = !DILocation(line: 2595, column: 23, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 2595, column: 23)
!3562 = distinct !DILexicalBlock(scope: !3556, file: !3, line: 2594, column: 17)
!3563 = !DILocation(line: 2595, column: 23, scope: !3562)
!3564 = !DILocation(line: 2597, column: 56, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2596, column: 21)
!3566 = !DILocation(line: 2597, column: 39, scope: !3565)
!3567 = !DILocation(line: 2597, column: 23, scope: !3565)
!3568 = !DILocation(line: 2597, column: 47, scope: !3565)
!3569 = !DILocation(line: 2597, column: 54, scope: !3565)
!3570 = !DILocation(line: 2599, column: 67, scope: !3565)
!3571 = !DILocation(line: 2599, column: 51, scope: !3565)
!3572 = !DILocation(line: 2599, column: 75, scope: !3565)
!3573 = !DILocation(line: 2598, column: 32, scope: !3565)
!3574 = !DILocation(line: 2598, column: 29, scope: !3565)
!3575 = !DILocation(line: 2601, column: 23, scope: !3565)
!3576 = !DILocation(line: 2603, column: 17, scope: !3562)
!3577 = !DILocation(line: 2593, column: 64, scope: !3556)
!3578 = !DILocation(line: 2593, column: 15, scope: !3556)
!3579 = distinct !{!3579, !3559, !3580}
!3580 = !DILocation(line: 2603, column: 17, scope: !3552)
!3581 = !DILocation(line: 2604, column: 19, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3553, file: !3, line: 2604, column: 19)
!3583 = !DILocation(line: 2604, column: 25, scope: !3582)
!3584 = !DILocation(line: 2604, column: 19, scope: !3553)
!3585 = !DILocation(line: 2605, column: 30, scope: !3582)
!3586 = !DILocation(line: 2605, column: 67, scope: !3582)
!3587 = !DILocation(line: 2605, column: 60, scope: !3582)
!3588 = !DILocation(line: 2605, column: 17, scope: !3582)
!3589 = !DILocation(line: 2606, column: 13, scope: !3553)
!3590 = !DILocation(line: 2607, column: 11, scope: !3494)
!3591 = !DILocation(line: 2610, column: 18, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2610, column: 15)
!3593 = !DILocation(line: 2610, column: 15, scope: !3592)
!3594 = !DILocation(line: 2610, column: 22, scope: !3592)
!3595 = !DILocation(line: 2610, column: 15, scope: !3494)
!3596 = !DILocation(line: 2612, column: 33, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2611, column: 13)
!3598 = !DILocation(line: 2612, column: 15, scope: !3597)
!3599 = !DILocation(line: 2612, column: 20, scope: !3597)
!3600 = !DILocation(line: 2612, column: 24, scope: !3597)
!3601 = !DILocation(line: 2612, column: 31, scope: !3597)
!3602 = !{!3507, !2475, i64 24}
!3603 = !DILocation(line: 2613, column: 60, scope: !3597)
!3604 = !DILocation(line: 2613, column: 65, scope: !3597)
!3605 = !DILocation(line: 2613, column: 69, scope: !3597)
!3606 = !DILocation(line: 2613, column: 24, scope: !3597)
!3607 = !DILocation(line: 2613, column: 21, scope: !3597)
!3608 = !DILocation(line: 2615, column: 13, scope: !3597)
!3609 = !DILocation(line: 2617, column: 19, scope: !3592)
!3610 = !DILocation(line: 2618, column: 11, scope: !3494)
!3611 = !DILocation(line: 2621, column: 11, scope: !3494)
!3612 = !DILocation(line: 2624, column: 11, scope: !3494)
!3613 = distinct !{!3613, !3489, !3614}
!3614 = !DILocation(line: 2626, column: 5, scope: !3445)
!3615 = !DILabel(scope: !3445, name: "done", file: !3, line: 2627)
!3616 = !DILocation(line: 2627, column: 2, scope: !3445)
!3617 = !DILocation(line: 2629, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 2629, column: 7)
!3619 = !DILocation(line: 2629, column: 13, scope: !3618)
!3620 = !DILocation(line: 2629, column: 7, scope: !3445)
!3621 = !DILocalVariable(name: "e", scope: !3622, file: !3, line: 2631, type: !581)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 2630, column: 5)
!3623 = !DILocation(line: 2631, column: 30, scope: !3622)
!3624 = !DILocalVariable(name: "e2", scope: !3622, file: !3, line: 2632, type: !581)
!3625 = !DILocation(line: 2632, column: 30, scope: !3622)
!3626 = !DILocation(line: 2635, column: 14, scope: !3622)
!3627 = !DILocation(line: 2634, column: 7, scope: !3622)
!3628 = !DILocation(line: 2636, column: 13, scope: !3622)
!3629 = !DILocation(line: 2636, column: 7, scope: !3622)
!3630 = !DILocation(line: 2637, column: 16, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2637, column: 7)
!3632 = !DILocation(line: 2637, column: 14, scope: !3631)
!3633 = !DILocation(line: 2637, column: 12, scope: !3631)
!3634 = !DILocation(line: 2637, column: 32, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2637, column: 7)
!3636 = !DILocation(line: 2637, column: 34, scope: !3635)
!3637 = !DILocation(line: 2637, column: 7, scope: !3631)
!3638 = !DILocation(line: 2639, column: 16, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 2638, column: 9)
!3640 = !DILocation(line: 2639, column: 14, scope: !3639)
!3641 = !DILocation(line: 2640, column: 15, scope: !3639)
!3642 = !DILocation(line: 2640, column: 18, scope: !3639)
!3643 = !DILocation(line: 2640, column: 13, scope: !3639)
!3644 = !DILocation(line: 2641, column: 17, scope: !3639)
!3645 = !DILocation(line: 2641, column: 11, scope: !3639)
!3646 = !DILocation(line: 2637, column: 7, scope: !3635)
!3647 = distinct !{!3647, !3637, !3648}
!3648 = !DILocation(line: 2642, column: 9, scope: !3631)
!3649 = !DILocation(line: 2643, column: 24, scope: !3622)
!3650 = !DILocation(line: 2644, column: 5, scope: !3622)
!3651 = !DILocation(line: 2646, column: 31, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 2646, column: 7)
!3653 = !DILocation(line: 2646, column: 35, scope: !3652)
!3654 = !DILocation(line: 2647, column: 7, scope: !3652)
!3655 = !DILocation(line: 2647, column: 11, scope: !3652)
!3656 = !DILocation(line: 2646, column: 7, scope: !3445)
!3657 = !DILocation(line: 2648, column: 31, scope: !3652)
!3658 = !DILocation(line: 2648, column: 5, scope: !3652)
!3659 = !DILocation(line: 2649, column: 1, scope: !3445)
!3660 = distinct !DISubprogram(name: "is_colored", scope: !3, file: !3, line: 1256, type: !326, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3661 = !DILocalVariable(name: "type", arg: 1, scope: !3660, file: !3, line: 1256, type: !53)
!3662 = !DILocation(line: 1256, column: 31, scope: !3660)
!3663 = !DILocalVariable(name: "len", scope: !3660, file: !3, line: 1258, type: !149)
!3664 = !DILocation(line: 1258, column: 10, scope: !3660)
!3665 = !DILocation(line: 1258, column: 32, scope: !3660)
!3666 = !DILocation(line: 1258, column: 16, scope: !3660)
!3667 = !DILocation(line: 1258, column: 38, scope: !3660)
!3668 = !DILocalVariable(name: "s", scope: !3660, file: !3, line: 1259, type: !146)
!3669 = !DILocation(line: 1259, column: 15, scope: !3660)
!3670 = !DILocation(line: 1259, column: 35, scope: !3660)
!3671 = !DILocation(line: 1259, column: 19, scope: !3660)
!3672 = !DILocation(line: 1259, column: 41, scope: !3660)
!3673 = !DILocation(line: 1260, column: 13, scope: !3660)
!3674 = !DILocation(line: 1260, column: 17, scope: !3660)
!3675 = !DILocation(line: 1261, column: 13, scope: !3660)
!3676 = !DILocation(line: 1261, column: 17, scope: !3660)
!3677 = !DILocation(line: 1261, column: 21, scope: !3660)
!3678 = !DILocation(line: 1261, column: 26, scope: !3660)
!3679 = !DILocation(line: 1261, column: 29, scope: !3660)
!3680 = !DILocation(line: 1261, column: 50, scope: !3660)
!3681 = !DILocation(line: 1262, column: 13, scope: !3660)
!3682 = !DILocation(line: 1262, column: 17, scope: !3660)
!3683 = !DILocation(line: 1262, column: 21, scope: !3660)
!3684 = !DILocation(line: 1262, column: 26, scope: !3660)
!3685 = !DILocation(line: 1262, column: 29, scope: !3660)
!3686 = !DILocation(line: 1262, column: 51, scope: !3660)
!3687 = !DILocation(line: 0, scope: !3660)
!3688 = !DILocation(line: 1260, column: 10, scope: !3660)
!3689 = !DILocation(line: 1260, column: 3, scope: !3660)
!3690 = distinct !DISubprogram(name: "dev_ino_hash", scope: !3, file: !3, line: 1192, type: !328, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3691 = !DILocalVariable(name: "x", arg: 1, scope: !3690, file: !3, line: 1192, type: !175)
!3692 = !DILocation(line: 1192, column: 27, scope: !3690)
!3693 = !DILocalVariable(name: "table_size", arg: 2, scope: !3690, file: !3, line: 1192, type: !149)
!3694 = !DILocation(line: 1192, column: 37, scope: !3690)
!3695 = !DILocalVariable(name: "p", scope: !3690, file: !3, line: 1194, type: !330)
!3696 = !DILocation(line: 1194, column: 25, scope: !3690)
!3697 = !DILocation(line: 1194, column: 29, scope: !3690)
!3698 = !DILocation(line: 1195, column: 22, scope: !3690)
!3699 = !DILocation(line: 1195, column: 25, scope: !3690)
!3700 = !{!3701, !2499, i64 0}
!3701 = !{!"dev_ino", !2499, i64 0, !2499, i64 8}
!3702 = !DILocation(line: 1195, column: 34, scope: !3690)
!3703 = !DILocation(line: 1195, column: 32, scope: !3690)
!3704 = !DILocation(line: 1195, column: 3, scope: !3690)
!3705 = distinct !DISubprogram(name: "dev_ino_compare", scope: !3, file: !3, line: 1199, type: !332, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3706 = !DILocalVariable(name: "x", arg: 1, scope: !3705, file: !3, line: 1199, type: !175)
!3707 = !DILocation(line: 1199, column: 30, scope: !3705)
!3708 = !DILocalVariable(name: "y", arg: 2, scope: !3705, file: !3, line: 1199, type: !175)
!3709 = !DILocation(line: 1199, column: 45, scope: !3705)
!3710 = !DILocalVariable(name: "a", scope: !3705, file: !3, line: 1201, type: !330)
!3711 = !DILocation(line: 1201, column: 25, scope: !3705)
!3712 = !DILocation(line: 1201, column: 29, scope: !3705)
!3713 = !DILocalVariable(name: "b", scope: !3705, file: !3, line: 1202, type: !330)
!3714 = !DILocation(line: 1202, column: 25, scope: !3705)
!3715 = !DILocation(line: 1202, column: 29, scope: !3705)
!3716 = !DILocation(line: 1203, column: 10, scope: !3705)
!3717 = !{!3701, !2499, i64 8}
!3718 = !DILocation(line: 0, scope: !3705)
!3719 = !DILocation(line: 1203, column: 3, scope: !3705)
!3720 = distinct !DISubprogram(name: "dev_ino_free", scope: !3, file: !3, line: 1207, type: !334, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3721 = !DILocalVariable(name: "x", arg: 1, scope: !3720, file: !3, line: 1207, type: !167)
!3722 = !DILocation(line: 1207, column: 21, scope: !3720)
!3723 = !DILocation(line: 1209, column: 9, scope: !3720)
!3724 = !DILocation(line: 1209, column: 3, scope: !3720)
!3725 = !DILocation(line: 1210, column: 1, scope: !3720)
!3726 = distinct !DISubprogram(name: "file_escape_init", scope: !3, file: !3, line: 1085, type: !336, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3727 = !DILocalVariable(name: "i", scope: !3728, file: !3, line: 1087, type: !27)
!3728 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 1087, column: 3)
!3729 = !DILocation(line: 1087, column: 12, scope: !3728)
!3730 = !DILocation(line: 1087, column: 8, scope: !3728)
!3731 = !DILocation(line: 1087, column: 19, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 1087, column: 3)
!3733 = !DILocation(line: 1087, column: 21, scope: !3732)
!3734 = !DILocation(line: 1087, column: 3, scope: !3728)
!3735 = !DILocation(line: 1088, column: 30, scope: !3732)
!3736 = !DILocation(line: 1088, column: 19, scope: !3732)
!3737 = !DILocation(line: 1088, column: 33, scope: !3732)
!3738 = !DILocation(line: 1088, column: 36, scope: !3732)
!3739 = !DILocation(line: 1088, column: 38, scope: !3732)
!3740 = !DILocation(line: 1088, column: 45, scope: !3732)
!3741 = !DILocation(line: 1088, column: 48, scope: !3732)
!3742 = !DILocation(line: 1088, column: 50, scope: !3732)
!3743 = !DILocation(line: 1088, column: 57, scope: !3732)
!3744 = !DILocation(line: 1088, column: 60, scope: !3732)
!3745 = !DILocation(line: 1088, column: 62, scope: !3732)
!3746 = !DILocation(line: 1088, column: 69, scope: !3732)
!3747 = !DILocation(line: 1088, column: 72, scope: !3732)
!3748 = !DILocation(line: 1088, column: 74, scope: !3732)
!3749 = !DILocation(line: 1088, column: 13, scope: !3732)
!3750 = !DILocation(line: 1088, column: 5, scope: !3732)
!3751 = !DILocation(line: 1088, column: 16, scope: !3732)
!3752 = !DILocation(line: 1087, column: 29, scope: !3732)
!3753 = !DILocation(line: 1087, column: 3, scope: !3732)
!3754 = distinct !{!3754, !3734, !3755}
!3755 = !DILocation(line: 1088, column: 77, scope: !3728)
!3756 = !DILocation(line: 1089, column: 1, scope: !3726)
!3757 = distinct !DISubprogram(name: "clear_files", scope: !3, file: !3, line: 2990, type: !336, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3758 = !DILocalVariable(name: "i", scope: !3759, file: !3, line: 2992, type: !149)
!3759 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 2992, column: 3)
!3760 = !DILocation(line: 2992, column: 15, scope: !3759)
!3761 = !DILocation(line: 2992, column: 8, scope: !3759)
!3762 = !DILocation(line: 2992, column: 22, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 2992, column: 3)
!3764 = !DILocation(line: 2992, column: 26, scope: !3763)
!3765 = !DILocation(line: 2992, column: 24, scope: !3763)
!3766 = !DILocation(line: 2992, column: 3, scope: !3759)
!3767 = !DILocalVariable(name: "f", scope: !3768, file: !3, line: 2994, type: !250)
!3768 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2993, column: 5)
!3769 = !DILocation(line: 2994, column: 24, scope: !3768)
!3770 = !DILocation(line: 2994, column: 28, scope: !3768)
!3771 = !DILocation(line: 2994, column: 40, scope: !3768)
!3772 = !DILocation(line: 2995, column: 17, scope: !3768)
!3773 = !DILocation(line: 2995, column: 7, scope: !3768)
!3774 = !DILocation(line: 2996, column: 5, scope: !3768)
!3775 = !DILocation(line: 2992, column: 39, scope: !3763)
!3776 = !DILocation(line: 2992, column: 3, scope: !3763)
!3777 = distinct !{!3777, !3766, !3778}
!3778 = !DILocation(line: 2996, column: 5, scope: !3759)
!3779 = !DILocation(line: 2998, column: 14, scope: !3757)
!3780 = !DILocation(line: 2999, column: 19, scope: !3757)
!3781 = !DILocation(line: 3000, column: 15, scope: !3757)
!3782 = !DILocation(line: 3001, column: 22, scope: !3757)
!3783 = !DILocation(line: 3002, column: 20, scope: !3757)
!3784 = !DILocation(line: 3003, column: 15, scope: !3757)
!3785 = !DILocation(line: 3004, column: 15, scope: !3757)
!3786 = !DILocation(line: 3005, column: 15, scope: !3757)
!3787 = !DILocation(line: 3006, column: 16, scope: !3757)
!3788 = !DILocation(line: 3007, column: 18, scope: !3757)
!3789 = !DILocation(line: 3008, column: 29, scope: !3757)
!3790 = !DILocation(line: 3009, column: 29, scope: !3757)
!3791 = !DILocation(line: 3010, column: 19, scope: !3757)
!3792 = !DILocation(line: 3011, column: 1, scope: !3757)
!3793 = distinct !DISubprogram(name: "gobble_file", scope: !3, file: !3, line: 3111, type: !654, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3794 = !DILocalVariable(name: "name", arg: 1, scope: !3793, file: !3, line: 3111, type: !146)
!3795 = !DILocation(line: 3111, column: 26, scope: !3793)
!3796 = !DILocalVariable(name: "type", arg: 2, scope: !3793, file: !3, line: 3111, type: !36)
!3797 = !DILocation(line: 3111, column: 46, scope: !3793)
!3798 = !DILocalVariable(name: "inode", arg: 3, scope: !3793, file: !3, line: 3111, type: !256)
!3799 = !DILocation(line: 3111, column: 58, scope: !3793)
!3800 = !DILocalVariable(name: "command_line_arg", arg: 4, scope: !3793, file: !3, line: 3112, type: !141)
!3801 = !DILocation(line: 3112, column: 19, scope: !3793)
!3802 = !DILocalVariable(name: "dirname", arg: 5, scope: !3793, file: !3, line: 3112, type: !146)
!3803 = !DILocation(line: 3112, column: 49, scope: !3793)
!3804 = !DILocalVariable(name: "blocks", scope: !3793, file: !3, line: 3114, type: !168)
!3805 = !DILocation(line: 3114, column: 13, scope: !3793)
!3806 = !DILocalVariable(name: "f", scope: !3793, file: !3, line: 3115, type: !250)
!3807 = !DILocation(line: 3115, column: 20, scope: !3793)
!3808 = !DILocation(line: 3119, column: 3, scope: !3793)
!3809 = !DILocation(line: 3121, column: 7, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 3121, column: 7)
!3811 = !DILocation(line: 3121, column: 21, scope: !3810)
!3812 = !DILocation(line: 3121, column: 18, scope: !3810)
!3813 = !DILocation(line: 3121, column: 7, scope: !3793)
!3814 = !DILocation(line: 3123, column: 29, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 3122, column: 5)
!3816 = !DILocation(line: 3123, column: 39, scope: !3815)
!3817 = !DILocation(line: 3123, column: 18, scope: !3815)
!3818 = !DILocation(line: 3123, column: 16, scope: !3815)
!3819 = !DILocation(line: 3124, column: 19, scope: !3815)
!3820 = !DILocation(line: 3125, column: 5, scope: !3815)
!3821 = !DILocation(line: 3127, column: 8, scope: !3793)
!3822 = !DILocation(line: 3127, column: 17, scope: !3793)
!3823 = !DILocation(line: 3127, column: 5, scope: !3793)
!3824 = !DILocation(line: 3128, column: 11, scope: !3793)
!3825 = !DILocation(line: 3128, column: 3, scope: !3793)
!3826 = !DILocation(line: 3129, column: 20, scope: !3793)
!3827 = !DILocation(line: 3129, column: 3, scope: !3793)
!3828 = !DILocation(line: 3129, column: 6, scope: !3793)
!3829 = !DILocation(line: 3129, column: 11, scope: !3793)
!3830 = !DILocation(line: 3129, column: 18, scope: !3793)
!3831 = !{!3832, !2499, i64 32}
!3832 = !{!"fileinfo", !2475, i64 0, !2475, i64 8, !2475, i64 16, !3833, i64 24, !2470, i64 168, !2469, i64 172, !2475, i64 176, !2494, i64 184, !2494, i64 185, !2470, i64 188, !2494, i64 192, !2469, i64 196}
!3833 = !{!"stat", !2499, i64 0, !2499, i64 8, !2499, i64 16, !2469, i64 24, !2469, i64 28, !2469, i64 32, !2469, i64 36, !2499, i64 40, !2499, i64 48, !2499, i64 56, !2499, i64 64, !2498, i64 72, !2498, i64 88, !2498, i64 104, !2470, i64 120}
!3834 = !DILocation(line: 3130, column: 17, scope: !3793)
!3835 = !DILocation(line: 3130, column: 3, scope: !3793)
!3836 = !DILocation(line: 3130, column: 6, scope: !3793)
!3837 = !DILocation(line: 3130, column: 15, scope: !3793)
!3838 = !{!3832, !2470, i64 168}
!3839 = !DILocation(line: 3132, column: 3, scope: !3793)
!3840 = !DILocation(line: 3132, column: 6, scope: !3793)
!3841 = !DILocation(line: 3132, column: 13, scope: !3793)
!3842 = !{!3832, !2469, i64 196}
!3843 = !DILocation(line: 3133, column: 10, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 3133, column: 7)
!3845 = !DILocation(line: 3133, column: 27, scope: !3844)
!3846 = !DILocation(line: 3133, column: 30, scope: !3844)
!3847 = !DILocation(line: 3133, column: 7, scope: !3793)
!3848 = !DILocation(line: 3136, column: 34, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 3134, column: 5)
!3850 = !DILocation(line: 3136, column: 19, scope: !3849)
!3851 = !DILocation(line: 3136, column: 7, scope: !3849)
!3852 = !DILocation(line: 3136, column: 10, scope: !3849)
!3853 = !DILocation(line: 3136, column: 17, scope: !3849)
!3854 = !DILocation(line: 3137, column: 11, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 3137, column: 11)
!3856 = !DILocation(line: 3137, column: 14, scope: !3855)
!3857 = !DILocation(line: 3137, column: 11, scope: !3849)
!3858 = !DILocation(line: 3138, column: 25, scope: !3855)
!3859 = !DILocation(line: 3138, column: 9, scope: !3855)
!3860 = !DILocation(line: 3139, column: 5, scope: !3849)
!3861 = !DILocation(line: 3141, column: 7, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 3141, column: 7)
!3863 = !DILocation(line: 3142, column: 7, scope: !3862)
!3864 = !DILocation(line: 3142, column: 10, scope: !3862)
!3865 = !DILocation(line: 3143, column: 7, scope: !3862)
!3866 = !DILocation(line: 3143, column: 10, scope: !3862)
!3867 = !DILocation(line: 3147, column: 7, scope: !3862)
!3868 = !DILocation(line: 3147, column: 11, scope: !3862)
!3869 = !DILocation(line: 3147, column: 16, scope: !3862)
!3870 = !DILocation(line: 3147, column: 29, scope: !3862)
!3871 = !DILocation(line: 3147, column: 32, scope: !3862)
!3872 = !DILocation(line: 3148, column: 11, scope: !3862)
!3873 = !DILocation(line: 3148, column: 15, scope: !3862)
!3874 = !DILocation(line: 3149, column: 15, scope: !3862)
!3875 = !DILocation(line: 3149, column: 18, scope: !3862)
!3876 = !DILocation(line: 3150, column: 15, scope: !3862)
!3877 = !DILocation(line: 3150, column: 18, scope: !3862)
!3878 = !DILocation(line: 3153, column: 7, scope: !3862)
!3879 = !DILocation(line: 3153, column: 12, scope: !3862)
!3880 = !DILocation(line: 3153, column: 24, scope: !3862)
!3881 = !DILocation(line: 3153, column: 27, scope: !3862)
!3882 = !DILocation(line: 3154, column: 11, scope: !3862)
!3883 = !DILocation(line: 3154, column: 15, scope: !3862)
!3884 = !DILocation(line: 3154, column: 20, scope: !3862)
!3885 = !DILocation(line: 3154, column: 37, scope: !3862)
!3886 = !DILocation(line: 3154, column: 40, scope: !3862)
!3887 = !DILocation(line: 3154, column: 45, scope: !3862)
!3888 = !DILocation(line: 3155, column: 11, scope: !3862)
!3889 = !DILocation(line: 3155, column: 15, scope: !3862)
!3890 = !DILocation(line: 3155, column: 27, scope: !3862)
!3891 = !DILocation(line: 3156, column: 15, scope: !3862)
!3892 = !DILocation(line: 3156, column: 18, scope: !3862)
!3893 = !DILocation(line: 3156, column: 44, scope: !3862)
!3894 = !DILocation(line: 3156, column: 47, scope: !3862)
!3895 = !DILocation(line: 3159, column: 7, scope: !3862)
!3896 = !DILocation(line: 3159, column: 11, scope: !3862)
!3897 = !DILocation(line: 3159, column: 23, scope: !3862)
!3898 = !DILocation(line: 3159, column: 26, scope: !3862)
!3899 = !DILocation(line: 3159, column: 32, scope: !3862)
!3900 = !DILocation(line: 3160, column: 7, scope: !3862)
!3901 = !DILocation(line: 3160, column: 11, scope: !3862)
!3902 = !DILocation(line: 3161, column: 11, scope: !3862)
!3903 = !DILocation(line: 3161, column: 15, scope: !3862)
!3904 = !DILocation(line: 3161, column: 20, scope: !3862)
!3905 = !DILocation(line: 3161, column: 31, scope: !3862)
!3906 = !DILocation(line: 3161, column: 34, scope: !3862)
!3907 = !DILocation(line: 3165, column: 15, scope: !3862)
!3908 = !DILocation(line: 3165, column: 19, scope: !3862)
!3909 = !DILocation(line: 3165, column: 24, scope: !3862)
!3910 = !DILocation(line: 3165, column: 34, scope: !3862)
!3911 = !DILocation(line: 3165, column: 38, scope: !3862)
!3912 = !DILocation(line: 3165, column: 54, scope: !3862)
!3913 = !DILocation(line: 3172, column: 38, scope: !3862)
!3914 = !DILocation(line: 3172, column: 42, scope: !3862)
!3915 = !DILocation(line: 3173, column: 42, scope: !3862)
!3916 = !DILocation(line: 3173, column: 46, scope: !3862)
!3917 = !DILocation(line: 3174, column: 46, scope: !3862)
!3918 = !DILocation(line: 3174, column: 49, scope: !3862)
!3919 = !DILocation(line: 3175, column: 46, scope: !3862)
!3920 = !DILocation(line: 3175, column: 49, scope: !3862)
!3921 = !DILocation(line: 3176, column: 46, scope: !3862)
!3922 = !DILocation(line: 3176, column: 49, scope: !3862)
!3923 = !DILocation(line: 3141, column: 7, scope: !3793)
!3924 = !DILocalVariable(name: "full_name", scope: !3925, file: !3, line: 3181, type: !143)
!3925 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 3179, column: 5)
!3926 = !DILocation(line: 3181, column: 13, scope: !3925)
!3927 = !DILocalVariable(name: "do_deref", scope: !3925, file: !3, line: 3182, type: !141)
!3928 = !DILocation(line: 3182, column: 12, scope: !3925)
!3929 = !DILocalVariable(name: "err", scope: !3925, file: !3, line: 3183, type: !27)
!3930 = !DILocation(line: 3183, column: 11, scope: !3925)
!3931 = !DILocation(line: 3185, column: 11, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3185, column: 11)
!3933 = !DILocation(line: 3185, column: 19, scope: !3932)
!3934 = !DILocation(line: 3185, column: 26, scope: !3932)
!3935 = !DILocation(line: 3185, column: 29, scope: !3932)
!3936 = !DILocation(line: 3185, column: 40, scope: !3932)
!3937 = !DILocation(line: 3185, column: 11, scope: !3925)
!3938 = !DILocation(line: 3186, column: 30, scope: !3932)
!3939 = !DILocation(line: 3186, column: 19, scope: !3932)
!3940 = !DILocation(line: 3186, column: 9, scope: !3932)
!3941 = !DILocation(line: 3189, column: 39, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3188, column: 9)
!3943 = !DILocation(line: 3189, column: 31, scope: !3942)
!3944 = !DILocation(line: 3189, column: 55, scope: !3942)
!3945 = !DILocation(line: 3189, column: 47, scope: !3942)
!3946 = !DILocation(line: 3189, column: 45, scope: !3942)
!3947 = !DILocation(line: 3189, column: 64, scope: !3942)
!3948 = !DILocation(line: 3189, column: 23, scope: !3942)
!3949 = !DILocation(line: 3189, column: 21, scope: !3942)
!3950 = !DILocation(line: 3190, column: 19, scope: !3942)
!3951 = !DILocation(line: 3190, column: 30, scope: !3942)
!3952 = !DILocation(line: 3190, column: 39, scope: !3942)
!3953 = !DILocation(line: 3190, column: 11, scope: !3942)
!3954 = !DILocation(line: 3193, column: 11, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3193, column: 11)
!3956 = !DILocation(line: 3193, column: 11, scope: !3925)
!3957 = !DILocation(line: 3195, column: 58, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 3194, column: 9)
!3959 = !DILocation(line: 3195, column: 30, scope: !3958)
!3960 = !DILocation(line: 3195, column: 11, scope: !3958)
!3961 = !DILocation(line: 3195, column: 14, scope: !3958)
!3962 = !DILocation(line: 3195, column: 28, scope: !3958)
!3963 = !{!3832, !2475, i64 16}
!3964 = !DILocation(line: 3197, column: 17, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 3197, column: 15)
!3966 = !DILocation(line: 3197, column: 20, scope: !3965)
!3967 = !DILocation(line: 3197, column: 15, scope: !3958)
!3968 = !DILocation(line: 3198, column: 27, scope: !3965)
!3969 = !DILocation(line: 3199, column: 27, scope: !3965)
!3970 = !DILocation(line: 3199, column: 57, scope: !3965)
!3971 = !DILocation(line: 3198, column: 13, scope: !3965)
!3972 = !DILocation(line: 3200, column: 9, scope: !3958)
!3973 = !DILocation(line: 3202, column: 15, scope: !3925)
!3974 = !DILocation(line: 3202, column: 7, scope: !3925)
!3975 = !DILocation(line: 3205, column: 23, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3203, column: 9)
!3977 = !DILocation(line: 3205, column: 35, scope: !3976)
!3978 = !DILocation(line: 3205, column: 38, scope: !3976)
!3979 = !DILocation(line: 3205, column: 17, scope: !3976)
!3980 = !DILocation(line: 3205, column: 15, scope: !3976)
!3981 = !DILocation(line: 3206, column: 20, scope: !3976)
!3982 = !DILocation(line: 3207, column: 11, scope: !3976)
!3983 = !DILocation(line: 3211, column: 15, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 3211, column: 15)
!3985 = !DILocation(line: 3211, column: 15, scope: !3976)
!3986 = !DILocalVariable(name: "need_lstat", scope: !3987, file: !3, line: 3213, type: !141)
!3987 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3212, column: 13)
!3988 = !DILocation(line: 3213, column: 20, scope: !3987)
!3989 = !DILocation(line: 3214, column: 27, scope: !3987)
!3990 = !DILocation(line: 3214, column: 39, scope: !3987)
!3991 = !DILocation(line: 3214, column: 42, scope: !3987)
!3992 = !DILocation(line: 3214, column: 21, scope: !3987)
!3993 = !DILocation(line: 3214, column: 19, scope: !3987)
!3994 = !DILocation(line: 3215, column: 24, scope: !3987)
!3995 = !DILocation(line: 3217, column: 19, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 3217, column: 19)
!3997 = !DILocation(line: 3217, column: 31, scope: !3996)
!3998 = !DILocation(line: 3217, column: 19, scope: !3987)
!3999 = !DILocation(line: 3218, column: 17, scope: !3996)
!4000 = !DILocation(line: 3220, column: 29, scope: !3987)
!4001 = !DILocation(line: 3220, column: 33, scope: !3987)
!4002 = !DILocation(line: 3221, column: 31, scope: !3987)
!4003 = !DILocation(line: 3221, column: 37, scope: !3987)
!4004 = !DILocation(line: 3222, column: 33, scope: !3987)
!4005 = !{!3832, !2469, i64 48}
!4006 = !DILocation(line: 3222, column: 31, scope: !3987)
!4007 = !DILocation(line: 3220, column: 28, scope: !3987)
!4008 = !DILocation(line: 3220, column: 26, scope: !3987)
!4009 = !DILocation(line: 3223, column: 20, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 3223, column: 19)
!4011 = !DILocation(line: 3223, column: 19, scope: !3987)
!4012 = !DILocation(line: 3224, column: 17, scope: !4010)
!4013 = !DILocation(line: 3230, column: 13, scope: !3987)
!4014 = !DILocation(line: 3231, column: 11, scope: !3976)
!4015 = !DILocation(line: 3234, column: 24, scope: !3976)
!4016 = !DILocation(line: 3234, column: 36, scope: !3976)
!4017 = !DILocation(line: 3234, column: 39, scope: !3976)
!4018 = !DILocation(line: 3234, column: 17, scope: !3976)
!4019 = !DILocation(line: 3234, column: 15, scope: !3976)
!4020 = !DILocation(line: 3235, column: 20, scope: !3976)
!4021 = !DILocation(line: 3236, column: 11, scope: !3976)
!4022 = !DILocation(line: 3239, column: 11, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3239, column: 11)
!4024 = !DILocation(line: 3239, column: 15, scope: !4023)
!4025 = !DILocation(line: 3239, column: 11, scope: !3925)
!4026 = !DILocation(line: 3244, column: 25, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 3240, column: 9)
!4028 = !DILocation(line: 3245, column: 25, scope: !4027)
!4029 = !DILocation(line: 3245, column: 48, scope: !4027)
!4030 = !DILocation(line: 3244, column: 11, scope: !4027)
!4031 = !DILocation(line: 3246, column: 15, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 3246, column: 15)
!4033 = !DILocation(line: 3246, column: 15, scope: !4027)
!4034 = !DILocation(line: 3247, column: 13, scope: !4032)
!4035 = !DILocation(line: 3249, column: 30, scope: !4027)
!4036 = !DILocation(line: 3249, column: 21, scope: !4027)
!4037 = !DILocation(line: 3249, column: 11, scope: !4027)
!4038 = !DILocation(line: 3249, column: 14, scope: !4027)
!4039 = !DILocation(line: 3249, column: 19, scope: !4027)
!4040 = !{!3832, !2475, i64 0}
!4041 = !DILocation(line: 3250, column: 21, scope: !4027)
!4042 = !DILocation(line: 3252, column: 11, scope: !4027)
!4043 = !DILocation(line: 3255, column: 7, scope: !3925)
!4044 = !DILocation(line: 3255, column: 10, scope: !3925)
!4045 = !DILocation(line: 3255, column: 18, scope: !3925)
!4046 = !{!3832, !2494, i64 184}
!4047 = !DILocation(line: 3258, column: 12, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3258, column: 11)
!4049 = !DILocation(line: 3258, column: 17, scope: !4048)
!4050 = !DILocation(line: 3258, column: 27, scope: !4048)
!4051 = !DILocation(line: 3258, column: 30, scope: !4048)
!4052 = !DILocation(line: 3259, column: 11, scope: !4048)
!4053 = !DILocation(line: 3259, column: 14, scope: !4048)
!4054 = !DILocation(line: 3259, column: 31, scope: !4048)
!4055 = !DILocation(line: 3259, column: 34, scope: !4048)
!4056 = !DILocation(line: 3258, column: 11, scope: !3925)
!4057 = !DILocation(line: 3260, column: 51, scope: !4048)
!4058 = !DILocation(line: 3260, column: 62, scope: !4048)
!4059 = !DILocation(line: 3260, column: 29, scope: !4048)
!4060 = !DILocation(line: 3260, column: 9, scope: !4048)
!4061 = !DILocation(line: 3260, column: 12, scope: !4048)
!4062 = !DILocation(line: 3260, column: 27, scope: !4048)
!4063 = !{!3832, !2494, i64 192}
!4064 = !DILocation(line: 3262, column: 11, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3262, column: 11)
!4066 = !DILocation(line: 3262, column: 18, scope: !4065)
!4067 = !DILocation(line: 3262, column: 33, scope: !4065)
!4068 = !DILocation(line: 3262, column: 36, scope: !4065)
!4069 = !DILocation(line: 3262, column: 11, scope: !3925)
!4070 = !DILocalVariable(name: "have_scontext", scope: !4071, file: !3, line: 3264, type: !141)
!4071 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 3263, column: 9)
!4072 = !DILocation(line: 3264, column: 16, scope: !4071)
!4073 = !DILocalVariable(name: "have_acl", scope: !4071, file: !3, line: 3265, type: !141)
!4074 = !DILocation(line: 3265, column: 16, scope: !4071)
!4075 = !DILocalVariable(name: "attr_len", scope: !4071, file: !3, line: 3266, type: !27)
!4076 = !DILocation(line: 3266, column: 15, scope: !4071)
!4077 = !DILocation(line: 3266, column: 44, scope: !4071)
!4078 = !DILocation(line: 3266, column: 55, scope: !4071)
!4079 = !DILocation(line: 3266, column: 58, scope: !4071)
!4080 = !DILocation(line: 3266, column: 26, scope: !4071)
!4081 = !DILocation(line: 3267, column: 18, scope: !4071)
!4082 = !DILocation(line: 3267, column: 27, scope: !4071)
!4083 = !DILocation(line: 3267, column: 15, scope: !4071)
!4084 = !DILocation(line: 3269, column: 15, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 3269, column: 15)
!4086 = !DILocation(line: 3269, column: 19, scope: !4085)
!4087 = !DILocation(line: 3269, column: 15, scope: !4071)
!4088 = !DILocation(line: 3271, column: 19, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 3271, column: 19)
!4090 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 3270, column: 13)
!4091 = !DILocation(line: 3271, column: 19, scope: !4090)
!4092 = !DILocation(line: 3272, column: 35, scope: !4089)
!4093 = !{!3832, !2475, i64 176}
!4094 = !DILocation(line: 3272, column: 33, scope: !4089)
!4095 = !DILocation(line: 3272, column: 31, scope: !4089)
!4096 = !DILocation(line: 3272, column: 17, scope: !4089)
!4097 = !DILocation(line: 3274, column: 35, scope: !4089)
!4098 = !DILocation(line: 3274, column: 33, scope: !4089)
!4099 = !DILocation(line: 3274, column: 31, scope: !4089)
!4100 = !DILocation(line: 3275, column: 13, scope: !4090)
!4101 = !DILocation(line: 3278, column: 15, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 3277, column: 13)
!4103 = !DILocation(line: 3278, column: 18, scope: !4102)
!4104 = !DILocation(line: 3278, column: 27, scope: !4102)
!4105 = !DILocation(line: 3284, column: 31, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 3284, column: 19)
!4107 = !DILocation(line: 3284, column: 19, scope: !4106)
!4108 = !DILocation(line: 3284, column: 38, scope: !4106)
!4109 = !DILocation(line: 3284, column: 41, scope: !4106)
!4110 = !DILocation(line: 3284, column: 47, scope: !4106)
!4111 = !DILocation(line: 3284, column: 19, scope: !4102)
!4112 = !DILocation(line: 3285, column: 21, scope: !4106)
!4113 = !DILocation(line: 3285, column: 17, scope: !4106)
!4114 = !DILocation(line: 3288, column: 15, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 3288, column: 15)
!4116 = !DILocation(line: 3288, column: 19, scope: !4115)
!4117 = !DILocation(line: 3288, column: 24, scope: !4115)
!4118 = !DILocation(line: 3288, column: 27, scope: !4115)
!4119 = !DILocation(line: 3288, column: 34, scope: !4115)
!4120 = !DILocation(line: 3288, column: 15, scope: !4071)
!4121 = !DILocalVariable(name: "n", scope: !4122, file: !3, line: 3290, type: !27)
!4122 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 3289, column: 13)
!4123 = !DILocation(line: 3290, column: 19, scope: !4122)
!4124 = !DILocation(line: 3290, column: 43, scope: !4122)
!4125 = !DILocation(line: 3290, column: 54, scope: !4122)
!4126 = !DILocation(line: 3290, column: 23, scope: !4122)
!4127 = !DILocation(line: 3291, column: 22, scope: !4122)
!4128 = !DILocation(line: 3291, column: 24, scope: !4122)
!4129 = !DILocation(line: 3291, column: 19, scope: !4122)
!4130 = !DILocation(line: 3292, column: 31, scope: !4122)
!4131 = !DILocation(line: 3292, column: 29, scope: !4122)
!4132 = !DILocation(line: 3292, column: 24, scope: !4122)
!4133 = !DILocation(line: 3293, column: 13, scope: !4122)
!4134 = !DILocation(line: 3295, column: 27, scope: !4071)
!4135 = !DILocation(line: 3295, column: 41, scope: !4071)
!4136 = !DILocation(line: 3295, column: 45, scope: !4071)
!4137 = !DILocation(line: 3295, column: 26, scope: !4071)
!4138 = !DILocation(line: 3297, column: 29, scope: !4071)
!4139 = !DILocation(line: 3297, column: 43, scope: !4071)
!4140 = !DILocation(line: 3297, column: 47, scope: !4071)
!4141 = !DILocation(line: 3297, column: 46, scope: !4071)
!4142 = !DILocation(line: 0, scope: !4071)
!4143 = !DILocation(line: 3295, column: 11, scope: !4071)
!4144 = !DILocation(line: 3295, column: 14, scope: !4071)
!4145 = !DILocation(line: 3295, column: 23, scope: !4071)
!4146 = !{!3832, !2470, i64 188}
!4147 = !DILocation(line: 3300, column: 26, scope: !4071)
!4148 = !DILocation(line: 3300, column: 29, scope: !4071)
!4149 = !DILocation(line: 3300, column: 38, scope: !4071)
!4150 = !DILocation(line: 3300, column: 23, scope: !4071)
!4151 = !DILocation(line: 3302, column: 15, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 3302, column: 15)
!4153 = !DILocation(line: 3302, column: 15, scope: !4071)
!4154 = !DILocation(line: 3303, column: 23, scope: !4152)
!4155 = !DILocation(line: 3303, column: 36, scope: !4152)
!4156 = !DILocation(line: 3303, column: 13, scope: !4152)
!4157 = !DILocation(line: 3304, column: 9, scope: !4071)
!4158 = !DILocation(line: 3306, column: 11, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3306, column: 11)
!4160 = !DILocation(line: 3307, column: 11, scope: !4159)
!4161 = !DILocation(line: 3307, column: 15, scope: !4159)
!4162 = !DILocation(line: 3307, column: 22, scope: !4159)
!4163 = !DILocation(line: 3307, column: 37, scope: !4159)
!4164 = !DILocation(line: 3307, column: 40, scope: !4159)
!4165 = !DILocation(line: 3306, column: 11, scope: !3925)
!4166 = !DILocalVariable(name: "linkstats", scope: !4167, file: !3, line: 3309, type: !190)
!4167 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 3308, column: 9)
!4168 = !DILocation(line: 3309, column: 23, scope: !4167)
!4169 = !DILocation(line: 3311, column: 26, scope: !4167)
!4170 = !DILocation(line: 3311, column: 37, scope: !4167)
!4171 = !DILocation(line: 3311, column: 40, scope: !4167)
!4172 = !DILocation(line: 3311, column: 11, scope: !4167)
!4173 = !DILocalVariable(name: "linkname", scope: !4167, file: !3, line: 3312, type: !143)
!4174 = !DILocation(line: 3312, column: 17, scope: !4167)
!4175 = !DILocation(line: 3312, column: 44, scope: !4167)
!4176 = !DILocation(line: 3312, column: 55, scope: !4167)
!4177 = !DILocation(line: 3312, column: 58, scope: !4167)
!4178 = !{!3832, !2475, i64 8}
!4179 = !DILocation(line: 3312, column: 28, scope: !4167)
!4180 = !DILocation(line: 3316, column: 15, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 3316, column: 15)
!4182 = !DILocation(line: 3316, column: 24, scope: !4181)
!4183 = !DILocation(line: 3316, column: 27, scope: !4181)
!4184 = !DILocation(line: 3316, column: 30, scope: !4181)
!4185 = !DILocation(line: 3316, column: 37, scope: !4181)
!4186 = !DILocation(line: 3316, column: 42, scope: !4181)
!4187 = !DILocation(line: 3316, column: 60, scope: !4181)
!4188 = !DILocation(line: 3316, column: 63, scope: !4181)
!4189 = !DILocation(line: 3316, column: 45, scope: !4181)
!4190 = !DILocation(line: 3316, column: 15, scope: !4167)
!4191 = !DILocation(line: 3317, column: 13, scope: !4181)
!4192 = !DILocation(line: 3317, column: 16, scope: !4181)
!4193 = !DILocation(line: 3317, column: 23, scope: !4181)
!4194 = !DILocation(line: 3321, column: 15, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 3321, column: 15)
!4196 = !DILocation(line: 3322, column: 15, scope: !4195)
!4197 = !DILocation(line: 3322, column: 32, scope: !4195)
!4198 = !DILocation(line: 3322, column: 29, scope: !4195)
!4199 = !DILocation(line: 3322, column: 48, scope: !4195)
!4200 = !DILocation(line: 3322, column: 51, scope: !4195)
!4201 = !DILocation(line: 3323, column: 15, scope: !4195)
!4202 = !DILocation(line: 3323, column: 24, scope: !4195)
!4203 = !DILocation(line: 3323, column: 18, scope: !4195)
!4204 = !DILocation(line: 3323, column: 46, scope: !4195)
!4205 = !DILocation(line: 3321, column: 15, scope: !4167)
!4206 = !DILocation(line: 3325, column: 15, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 3324, column: 13)
!4208 = !DILocation(line: 3325, column: 18, scope: !4207)
!4209 = !DILocation(line: 3325, column: 25, scope: !4207)
!4210 = !{!3832, !2494, i64 185}
!4211 = !DILocation(line: 3326, column: 39, scope: !4207)
!4212 = !{!3833, !2469, i64 24}
!4213 = !DILocation(line: 3326, column: 15, scope: !4207)
!4214 = !DILocation(line: 3326, column: 18, scope: !4207)
!4215 = !DILocation(line: 3326, column: 27, scope: !4207)
!4216 = !{!3832, !2469, i64 172}
!4217 = !DILocation(line: 3327, column: 13, scope: !4207)
!4218 = !DILocation(line: 3328, column: 17, scope: !4167)
!4219 = !DILocation(line: 3328, column: 11, scope: !4167)
!4220 = !DILocation(line: 3329, column: 9, scope: !4167)
!4221 = !DILocation(line: 3331, column: 11, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3331, column: 11)
!4223 = !DILocation(line: 3331, column: 11, scope: !3925)
!4224 = !DILocation(line: 3332, column: 9, scope: !4222)
!4225 = !DILocation(line: 3332, column: 12, scope: !4222)
!4226 = !DILocation(line: 3332, column: 21, scope: !4222)
!4227 = !DILocation(line: 3333, column: 16, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 3333, column: 16)
!4229 = !DILocation(line: 3333, column: 16, scope: !4222)
!4230 = !DILocation(line: 3335, column: 15, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 3335, column: 15)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 3334, column: 9)
!4233 = !DILocation(line: 3335, column: 32, scope: !4231)
!4234 = !DILocation(line: 3335, column: 36, scope: !4231)
!4235 = !DILocation(line: 3335, column: 15, scope: !4232)
!4236 = !DILocation(line: 3336, column: 13, scope: !4231)
!4237 = !DILocation(line: 3336, column: 16, scope: !4231)
!4238 = !DILocation(line: 3336, column: 25, scope: !4231)
!4239 = !DILocation(line: 3338, column: 13, scope: !4231)
!4240 = !DILocation(line: 3338, column: 16, scope: !4231)
!4241 = !DILocation(line: 3338, column: 25, scope: !4231)
!4242 = !DILocation(line: 3339, column: 9, scope: !4232)
!4243 = !DILocation(line: 3341, column: 9, scope: !4228)
!4244 = !DILocation(line: 3341, column: 12, scope: !4228)
!4245 = !DILocation(line: 3341, column: 21, scope: !4228)
!4246 = !DILocation(line: 3343, column: 16, scope: !3925)
!4247 = !{!3832, !2499, i64 88}
!4248 = !DILocation(line: 3343, column: 14, scope: !3925)
!4249 = !DILocation(line: 3344, column: 11, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3344, column: 11)
!4251 = !DILocation(line: 3344, column: 18, scope: !4250)
!4252 = !DILocation(line: 3344, column: 33, scope: !4250)
!4253 = !DILocation(line: 3344, column: 36, scope: !4250)
!4254 = !DILocation(line: 3344, column: 11, scope: !3925)
!4255 = !DILocalVariable(name: "buf", scope: !4256, file: !3, line: 3346, type: !610)
!4256 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 3345, column: 9)
!4257 = !DILocation(line: 3346, column: 16, scope: !4256)
!4258 = !DILocalVariable(name: "len", scope: !4256, file: !3, line: 3347, type: !27)
!4259 = !DILocation(line: 3347, column: 15, scope: !4256)
!4260 = !DILocation(line: 3347, column: 47, scope: !4256)
!4261 = !DILocation(line: 3347, column: 55, scope: !4256)
!4262 = !DILocation(line: 3347, column: 60, scope: !4256)
!4263 = !DILocation(line: 3348, column: 62, scope: !4256)
!4264 = !DILocation(line: 3347, column: 31, scope: !4256)
!4265 = !DILocation(line: 3347, column: 21, scope: !4256)
!4266 = !DILocation(line: 3350, column: 15, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 3350, column: 15)
!4268 = !DILocation(line: 3350, column: 34, scope: !4267)
!4269 = !DILocation(line: 3350, column: 32, scope: !4267)
!4270 = !DILocation(line: 3350, column: 15, scope: !4256)
!4271 = !DILocation(line: 3351, column: 32, scope: !4267)
!4272 = !DILocation(line: 3351, column: 30, scope: !4267)
!4273 = !DILocation(line: 3351, column: 13, scope: !4267)
!4274 = !DILocation(line: 3352, column: 9, scope: !4256)
!4275 = !DILocation(line: 3354, column: 11, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3354, column: 11)
!4277 = !DILocation(line: 3354, column: 18, scope: !4276)
!4278 = !DILocation(line: 3354, column: 11, scope: !3925)
!4279 = !DILocation(line: 3356, column: 15, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3356, column: 15)
!4281 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 3355, column: 9)
!4282 = !DILocation(line: 3356, column: 15, scope: !4281)
!4283 = !DILocalVariable(name: "len", scope: !4284, file: !3, line: 3358, type: !27)
!4284 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 3357, column: 13)
!4285 = !DILocation(line: 3358, column: 19, scope: !4284)
!4286 = !DILocation(line: 3358, column: 44, scope: !4284)
!4287 = !DILocation(line: 3358, column: 47, scope: !4284)
!4288 = !DILocation(line: 3358, column: 52, scope: !4284)
!4289 = !{!3832, !2469, i64 52}
!4290 = !DILocation(line: 3358, column: 25, scope: !4284)
!4291 = !DILocation(line: 3359, column: 19, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 3359, column: 19)
!4293 = !DILocation(line: 3359, column: 33, scope: !4292)
!4294 = !DILocation(line: 3359, column: 31, scope: !4292)
!4295 = !DILocation(line: 3359, column: 19, scope: !4284)
!4296 = !DILocation(line: 3360, column: 31, scope: !4292)
!4297 = !DILocation(line: 3360, column: 29, scope: !4292)
!4298 = !DILocation(line: 3360, column: 17, scope: !4292)
!4299 = !DILocation(line: 3361, column: 13, scope: !4284)
!4300 = !DILocation(line: 3363, column: 15, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3363, column: 15)
!4302 = !DILocation(line: 3363, column: 15, scope: !4281)
!4303 = !DILocalVariable(name: "len", scope: !4304, file: !3, line: 3365, type: !27)
!4304 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 3364, column: 13)
!4305 = !DILocation(line: 3365, column: 19, scope: !4304)
!4306 = !DILocation(line: 3365, column: 45, scope: !4304)
!4307 = !DILocation(line: 3365, column: 48, scope: !4304)
!4308 = !DILocation(line: 3365, column: 53, scope: !4304)
!4309 = !{!3832, !2469, i64 56}
!4310 = !DILocation(line: 3365, column: 25, scope: !4304)
!4311 = !DILocation(line: 3366, column: 19, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 3366, column: 19)
!4313 = !DILocation(line: 3366, column: 33, scope: !4312)
!4314 = !DILocation(line: 3366, column: 31, scope: !4312)
!4315 = !DILocation(line: 3366, column: 19, scope: !4304)
!4316 = !DILocation(line: 3367, column: 31, scope: !4312)
!4317 = !DILocation(line: 3367, column: 29, scope: !4312)
!4318 = !DILocation(line: 3367, column: 17, scope: !4312)
!4319 = !DILocation(line: 3368, column: 13, scope: !4304)
!4320 = !DILocation(line: 3370, column: 15, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3370, column: 15)
!4322 = !DILocation(line: 3370, column: 15, scope: !4281)
!4323 = !DILocalVariable(name: "len", scope: !4324, file: !3, line: 3372, type: !27)
!4324 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3371, column: 13)
!4325 = !DILocation(line: 3372, column: 19, scope: !4324)
!4326 = !DILocation(line: 3372, column: 44, scope: !4324)
!4327 = !DILocation(line: 3372, column: 47, scope: !4324)
!4328 = !DILocation(line: 3372, column: 52, scope: !4324)
!4329 = !DILocation(line: 3372, column: 25, scope: !4324)
!4330 = !DILocation(line: 3373, column: 19, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 3373, column: 19)
!4332 = !DILocation(line: 3373, column: 34, scope: !4331)
!4333 = !DILocation(line: 3373, column: 32, scope: !4331)
!4334 = !DILocation(line: 3373, column: 19, scope: !4324)
!4335 = !DILocation(line: 3374, column: 32, scope: !4331)
!4336 = !DILocation(line: 3374, column: 30, scope: !4331)
!4337 = !DILocation(line: 3374, column: 17, scope: !4331)
!4338 = !DILocation(line: 3375, column: 13, scope: !4324)
!4339 = !DILocation(line: 3376, column: 9, scope: !4281)
!4340 = !DILocation(line: 3378, column: 11, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3378, column: 11)
!4342 = !DILocation(line: 3378, column: 11, scope: !3925)
!4343 = !DILocalVariable(name: "len", scope: !4344, file: !3, line: 3380, type: !27)
!4344 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 3379, column: 9)
!4345 = !DILocation(line: 3380, column: 15, scope: !4344)
!4346 = !DILocation(line: 3380, column: 29, scope: !4344)
!4347 = !DILocation(line: 3380, column: 32, scope: !4344)
!4348 = !DILocation(line: 3380, column: 21, scope: !4344)
!4349 = !DILocation(line: 3381, column: 15, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 3381, column: 15)
!4351 = !DILocation(line: 3381, column: 32, scope: !4350)
!4352 = !DILocation(line: 3381, column: 30, scope: !4350)
!4353 = !DILocation(line: 3381, column: 15, scope: !4344)
!4354 = !DILocation(line: 3382, column: 30, scope: !4350)
!4355 = !DILocation(line: 3382, column: 28, scope: !4350)
!4356 = !DILocation(line: 3382, column: 13, scope: !4350)
!4357 = !DILocation(line: 3383, column: 9, scope: !4344)
!4358 = !DILocation(line: 3385, column: 11, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 3385, column: 11)
!4360 = !DILocation(line: 3385, column: 18, scope: !4359)
!4361 = !DILocation(line: 3385, column: 11, scope: !3925)
!4362 = !DILocalVariable(name: "b", scope: !4363, file: !3, line: 3387, type: !656)
!4363 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 3386, column: 9)
!4364 = !DILocation(line: 3387, column: 16, scope: !4363)
!4365 = !DILocalVariable(name: "b_len", scope: !4363, file: !3, line: 3388, type: !27)
!4366 = !DILocation(line: 3388, column: 15, scope: !4363)
!4367 = !DILocation(line: 3388, column: 42, scope: !4363)
!4368 = !DILocation(line: 3388, column: 45, scope: !4363)
!4369 = !DILocation(line: 3388, column: 50, scope: !4363)
!4370 = !{!3832, !2499, i64 40}
!4371 = !DILocation(line: 3388, column: 60, scope: !4363)
!4372 = !DILocation(line: 3388, column: 31, scope: !4363)
!4373 = !DILocation(line: 3388, column: 23, scope: !4363)
!4374 = !DILocation(line: 3389, column: 15, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 3389, column: 15)
!4376 = !DILocation(line: 3389, column: 29, scope: !4375)
!4377 = !DILocation(line: 3389, column: 27, scope: !4375)
!4378 = !DILocation(line: 3389, column: 15, scope: !4363)
!4379 = !DILocation(line: 3390, column: 27, scope: !4375)
!4380 = !DILocation(line: 3390, column: 25, scope: !4375)
!4381 = !DILocation(line: 3390, column: 13, scope: !4375)
!4382 = !DILocation(line: 3392, column: 15, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 3392, column: 15)
!4384 = !DILocation(line: 3392, column: 41, scope: !4383)
!4385 = !DILocation(line: 3392, column: 44, scope: !4383)
!4386 = !DILocation(line: 3392, column: 15, scope: !4363)
!4387 = !DILocalVariable(name: "buf", scope: !4388, file: !3, line: 3394, type: !656)
!4388 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 3393, column: 13)
!4389 = !DILocation(line: 3394, column: 20, scope: !4388)
!4390 = !DILocalVariable(name: "len", scope: !4388, file: !3, line: 3395, type: !27)
!4391 = !DILocation(line: 3395, column: 19, scope: !4388)
!4392 = !DILocation(line: 3395, column: 44, scope: !4388)
!4393 = !{!3832, !2499, i64 64}
!4394 = !DILocation(line: 3395, column: 69, scope: !4388)
!4395 = !DILocation(line: 3395, column: 33, scope: !4388)
!4396 = !DILocation(line: 3395, column: 25, scope: !4388)
!4397 = !DILocation(line: 3396, column: 19, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 3396, column: 19)
!4399 = !DILocation(line: 3396, column: 47, scope: !4398)
!4400 = !DILocation(line: 3396, column: 45, scope: !4398)
!4401 = !DILocation(line: 3396, column: 19, scope: !4388)
!4402 = !DILocation(line: 3397, column: 45, scope: !4398)
!4403 = !DILocation(line: 3397, column: 43, scope: !4398)
!4404 = !DILocation(line: 3397, column: 17, scope: !4398)
!4405 = !DILocation(line: 3398, column: 40, scope: !4388)
!4406 = !DILocation(line: 3398, column: 65, scope: !4388)
!4407 = !DILocation(line: 3398, column: 29, scope: !4388)
!4408 = !DILocation(line: 3398, column: 21, scope: !4388)
!4409 = !DILocation(line: 3398, column: 19, scope: !4388)
!4410 = !DILocation(line: 3399, column: 19, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 3399, column: 19)
!4412 = !DILocation(line: 3399, column: 47, scope: !4411)
!4413 = !DILocation(line: 3399, column: 45, scope: !4411)
!4414 = !DILocation(line: 3399, column: 19, scope: !4388)
!4415 = !DILocation(line: 3400, column: 45, scope: !4411)
!4416 = !DILocation(line: 3400, column: 43, scope: !4411)
!4417 = !DILocation(line: 3400, column: 17, scope: !4411)
!4418 = !DILocation(line: 3401, column: 21, scope: !4388)
!4419 = !DILocation(line: 3401, column: 47, scope: !4388)
!4420 = !DILocation(line: 3401, column: 53, scope: !4388)
!4421 = !DILocation(line: 3401, column: 51, scope: !4388)
!4422 = !DILocation(line: 3401, column: 19, scope: !4388)
!4423 = !DILocation(line: 3402, column: 19, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 3402, column: 19)
!4425 = !DILocation(line: 3402, column: 37, scope: !4424)
!4426 = !DILocation(line: 3402, column: 35, scope: !4424)
!4427 = !DILocation(line: 3402, column: 19, scope: !4388)
!4428 = !DILocation(line: 3403, column: 35, scope: !4424)
!4429 = !DILocation(line: 3403, column: 33, scope: !4424)
!4430 = !DILocation(line: 3403, column: 17, scope: !4424)
!4431 = !DILocation(line: 3404, column: 13, scope: !4388)
!4432 = !DILocalVariable(name: "buf", scope: !4433, file: !3, line: 3407, type: !610)
!4433 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 3406, column: 13)
!4434 = !DILocation(line: 3407, column: 20, scope: !4433)
!4435 = !DILocalVariable(name: "size", scope: !4433, file: !3, line: 3408, type: !168)
!4436 = !DILocation(line: 3408, column: 25, scope: !4433)
!4437 = !DILocation(line: 3408, column: 52, scope: !4433)
!4438 = !DILocation(line: 3408, column: 55, scope: !4433)
!4439 = !DILocation(line: 3408, column: 60, scope: !4433)
!4440 = !{!3832, !2499, i64 72}
!4441 = !DILocation(line: 3408, column: 32, scope: !4433)
!4442 = !DILocalVariable(name: "len", scope: !4433, file: !3, line: 3409, type: !27)
!4443 = !DILocation(line: 3409, column: 19, scope: !4433)
!4444 = !DILocation(line: 3409, column: 51, scope: !4433)
!4445 = !DILocation(line: 3409, column: 57, scope: !4433)
!4446 = !DILocation(line: 3410, column: 51, scope: !4433)
!4447 = !DILocation(line: 3411, column: 54, scope: !4433)
!4448 = !DILocation(line: 3409, column: 35, scope: !4433)
!4449 = !DILocation(line: 3409, column: 25, scope: !4433)
!4450 = !DILocation(line: 3413, column: 19, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 3413, column: 19)
!4452 = !DILocation(line: 3413, column: 37, scope: !4451)
!4453 = !DILocation(line: 3413, column: 35, scope: !4451)
!4454 = !DILocation(line: 3413, column: 19, scope: !4433)
!4455 = !DILocation(line: 3414, column: 35, scope: !4451)
!4456 = !DILocation(line: 3414, column: 33, scope: !4451)
!4457 = !DILocation(line: 3414, column: 17, scope: !4451)
!4458 = !DILocation(line: 3416, column: 9, scope: !4363)
!4459 = !DILocation(line: 3417, column: 5, scope: !3925)
!4460 = !DILocation(line: 3419, column: 7, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 3419, column: 7)
!4462 = !DILocation(line: 3419, column: 7, scope: !3793)
!4463 = !DILocalVariable(name: "buf", scope: !4464, file: !3, line: 3421, type: !656)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 3420, column: 5)
!4465 = !DILocation(line: 3421, column: 12, scope: !4464)
!4466 = !DILocalVariable(name: "len", scope: !4464, file: !3, line: 3422, type: !27)
!4467 = !DILocation(line: 3422, column: 11, scope: !4464)
!4468 = !DILocation(line: 3422, column: 36, scope: !4464)
!4469 = !DILocation(line: 3422, column: 39, scope: !4464)
!4470 = !DILocation(line: 3422, column: 44, scope: !4464)
!4471 = !DILocation(line: 3422, column: 52, scope: !4464)
!4472 = !DILocation(line: 3422, column: 25, scope: !4464)
!4473 = !DILocation(line: 3422, column: 17, scope: !4464)
!4474 = !DILocation(line: 3423, column: 11, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 3423, column: 11)
!4476 = !DILocation(line: 3423, column: 32, scope: !4475)
!4477 = !DILocation(line: 3423, column: 30, scope: !4475)
!4478 = !DILocation(line: 3423, column: 11, scope: !4464)
!4479 = !DILocation(line: 3424, column: 30, scope: !4475)
!4480 = !DILocation(line: 3424, column: 28, scope: !4475)
!4481 = !DILocation(line: 3424, column: 9, scope: !4475)
!4482 = !DILocation(line: 3425, column: 5, scope: !4464)
!4483 = !DILocation(line: 3427, column: 22, scope: !3793)
!4484 = !DILocation(line: 3427, column: 13, scope: !3793)
!4485 = !DILocation(line: 3427, column: 3, scope: !3793)
!4486 = !DILocation(line: 3427, column: 6, scope: !3793)
!4487 = !DILocation(line: 3427, column: 11, scope: !3793)
!4488 = !DILocation(line: 3428, column: 13, scope: !3793)
!4489 = !DILocation(line: 3430, column: 10, scope: !3793)
!4490 = !DILocation(line: 3430, column: 3, scope: !3793)
!4491 = !DILocation(line: 3431, column: 1, scope: !3793)
!4492 = distinct !DISubprogram(name: "queue_directory", scope: !3, file: !3, line: 2704, type: !595, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4493 = !DILocalVariable(name: "name", arg: 1, scope: !4492, file: !3, line: 2704, type: !146)
!4494 = !DILocation(line: 2704, column: 30, scope: !4492)
!4495 = !DILocalVariable(name: "realname", arg: 2, scope: !4492, file: !3, line: 2704, type: !146)
!4496 = !DILocation(line: 2704, column: 48, scope: !4492)
!4497 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !4492, file: !3, line: 2704, type: !141)
!4498 = !DILocation(line: 2704, column: 63, scope: !4492)
!4499 = !DILocalVariable(name: "new", scope: !4492, file: !3, line: 2706, type: !235)
!4500 = !DILocation(line: 2706, column: 19, scope: !4492)
!4501 = !DILocation(line: 2706, column: 25, scope: !4492)
!4502 = !DILocation(line: 2707, column: 19, scope: !4492)
!4503 = !DILocation(line: 2707, column: 39, scope: !4492)
!4504 = !DILocation(line: 2707, column: 30, scope: !4492)
!4505 = !DILocation(line: 2707, column: 3, scope: !4492)
!4506 = !DILocation(line: 2707, column: 8, scope: !4492)
!4507 = !DILocation(line: 2707, column: 17, scope: !4492)
!4508 = !DILocation(line: 2708, column: 15, scope: !4492)
!4509 = !DILocation(line: 2708, column: 31, scope: !4492)
!4510 = !DILocation(line: 2708, column: 22, scope: !4492)
!4511 = !DILocation(line: 2708, column: 3, scope: !4492)
!4512 = !DILocation(line: 2708, column: 8, scope: !4492)
!4513 = !DILocation(line: 2708, column: 13, scope: !4492)
!4514 = !DILocation(line: 2709, column: 27, scope: !4492)
!4515 = !DILocation(line: 2709, column: 3, scope: !4492)
!4516 = !DILocation(line: 2709, column: 8, scope: !4492)
!4517 = !DILocation(line: 2709, column: 25, scope: !4492)
!4518 = !DILocation(line: 2710, column: 15, scope: !4492)
!4519 = !DILocation(line: 2710, column: 3, scope: !4492)
!4520 = !DILocation(line: 2710, column: 8, scope: !4492)
!4521 = !DILocation(line: 2710, column: 13, scope: !4492)
!4522 = !DILocation(line: 2711, column: 18, scope: !4492)
!4523 = !DILocation(line: 2711, column: 16, scope: !4492)
!4524 = !DILocation(line: 2712, column: 1, scope: !4492)
!4525 = distinct !DISubprogram(name: "sort_files", scope: !3, file: !3, line: 3792, type: !336, scopeLine: 3793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4526 = !DILocalVariable(name: "use_strcmp", scope: !4525, file: !3, line: 3794, type: !141)
!4527 = !DILocation(line: 3794, column: 8, scope: !4525)
!4528 = !DILocation(line: 3796, column: 7, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3796, column: 7)
!4530 = !DILocation(line: 3796, column: 27, scope: !4529)
!4531 = !DILocation(line: 3796, column: 40, scope: !4529)
!4532 = !DILocation(line: 3796, column: 51, scope: !4529)
!4533 = !DILocation(line: 3796, column: 38, scope: !4529)
!4534 = !DILocation(line: 3796, column: 25, scope: !4529)
!4535 = !DILocation(line: 3796, column: 7, scope: !4525)
!4536 = !DILocation(line: 3798, column: 13, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 3797, column: 5)
!4538 = !DILocation(line: 3798, column: 7, scope: !4537)
!4539 = !DILocation(line: 3799, column: 31, scope: !4537)
!4540 = !DILocation(line: 3799, column: 21, scope: !4537)
!4541 = !DILocation(line: 3799, column: 19, scope: !4537)
!4542 = !DILocation(line: 3800, column: 31, scope: !4537)
!4543 = !DILocation(line: 3800, column: 29, scope: !4537)
!4544 = !DILocation(line: 3800, column: 25, scope: !4537)
!4545 = !DILocation(line: 3801, column: 5, scope: !4537)
!4546 = !DILocation(line: 3803, column: 3, scope: !4525)
!4547 = !DILocation(line: 3805, column: 7, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3805, column: 7)
!4549 = !DILocation(line: 3805, column: 17, scope: !4548)
!4550 = !DILocation(line: 3805, column: 7, scope: !4525)
!4551 = !DILocation(line: 3806, column: 5, scope: !4548)
!4552 = !DILocation(line: 3813, column: 9, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3813, column: 7)
!4554 = !DILocation(line: 3813, column: 7, scope: !4525)
!4555 = !DILocation(line: 3814, column: 16, scope: !4553)
!4556 = !DILocation(line: 3814, column: 5, scope: !4553)
!4557 = !DILocation(line: 3817, column: 18, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 3816, column: 5)
!4559 = !DILocation(line: 3818, column: 7, scope: !4558)
!4560 = !DILocation(line: 3819, column: 7, scope: !4558)
!4561 = !DILocation(line: 3823, column: 27, scope: !4525)
!4562 = !DILocation(line: 3823, column: 40, scope: !4525)
!4563 = !DILocation(line: 3824, column: 26, scope: !4525)
!4564 = !DILocation(line: 3824, column: 39, scope: !4525)
!4565 = !DILocation(line: 3824, column: 49, scope: !4525)
!4566 = !DILocation(line: 3824, column: 64, scope: !4525)
!4567 = !DILocation(line: 3824, column: 36, scope: !4525)
!4568 = !DILocation(line: 3824, column: 11, scope: !4525)
!4569 = !DILocation(line: 3825, column: 26, scope: !4525)
!4570 = !DILocation(line: 3825, column: 38, scope: !4525)
!4571 = !DILocation(line: 3826, column: 26, scope: !4525)
!4572 = !DILocation(line: 3823, column: 3, scope: !4525)
!4573 = !DILocation(line: 3827, column: 1, scope: !4525)
!4574 = distinct !DISubprogram(name: "extract_dirs_from_files", scope: !3, file: !3, line: 3512, type: !683, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4575 = !DILocalVariable(name: "dirname", arg: 1, scope: !4574, file: !3, line: 3512, type: !146)
!4576 = !DILocation(line: 3512, column: 38, scope: !4574)
!4577 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !4574, file: !3, line: 3512, type: !141)
!4578 = !DILocation(line: 3512, column: 52, scope: !4574)
!4579 = !DILocalVariable(name: "i", scope: !4574, file: !3, line: 3514, type: !149)
!4580 = !DILocation(line: 3514, column: 10, scope: !4574)
!4581 = !DILocalVariable(name: "j", scope: !4574, file: !3, line: 3515, type: !149)
!4582 = !DILocation(line: 3515, column: 10, scope: !4574)
!4583 = !DILocalVariable(name: "ignore_dot_and_dot_dot", scope: !4574, file: !3, line: 3516, type: !141)
!4584 = !DILocation(line: 3516, column: 8, scope: !4574)
!4585 = !DILocation(line: 3516, column: 34, scope: !4574)
!4586 = !DILocation(line: 3516, column: 42, scope: !4574)
!4587 = !DILocation(line: 3518, column: 7, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 3518, column: 7)
!4589 = !DILocation(line: 3518, column: 15, scope: !4588)
!4590 = !DILocation(line: 3518, column: 18, scope: !4588)
!4591 = !DILocation(line: 3518, column: 7, scope: !4574)
!4592 = !DILocation(line: 3523, column: 30, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 3519, column: 5)
!4594 = !DILocation(line: 3523, column: 7, scope: !4593)
!4595 = !DILocation(line: 3524, column: 5, scope: !4593)
!4596 = !DILocation(line: 3528, column: 12, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 3528, column: 3)
!4598 = !DILocation(line: 3528, column: 10, scope: !4597)
!4599 = !DILocation(line: 3528, column: 8, scope: !4597)
!4600 = !DILocation(line: 3528, column: 25, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 3528, column: 3)
!4602 = !DILocation(line: 3528, column: 28, scope: !4601)
!4603 = !DILocation(line: 3528, column: 3, scope: !4597)
!4604 = !DILocalVariable(name: "f", scope: !4605, file: !3, line: 3530, type: !250)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 3529, column: 5)
!4606 = !DILocation(line: 3530, column: 24, scope: !4605)
!4607 = !DILocation(line: 3530, column: 28, scope: !4605)
!4608 = !DILocation(line: 3530, column: 40, scope: !4605)
!4609 = !DILocation(line: 3532, column: 25, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 3532, column: 11)
!4611 = !DILocation(line: 3532, column: 11, scope: !4610)
!4612 = !DILocation(line: 3533, column: 11, scope: !4610)
!4613 = !DILocation(line: 3533, column: 17, scope: !4610)
!4614 = !DILocation(line: 3534, column: 15, scope: !4610)
!4615 = !DILocation(line: 3534, column: 47, scope: !4610)
!4616 = !DILocation(line: 3534, column: 50, scope: !4610)
!4617 = !DILocation(line: 3534, column: 20, scope: !4610)
!4618 = !DILocation(line: 3532, column: 11, scope: !4605)
!4619 = !DILocation(line: 3536, column: 16, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 3536, column: 15)
!4621 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 3535, column: 9)
!4622 = !DILocation(line: 3536, column: 24, scope: !4620)
!4623 = !DILocation(line: 3536, column: 27, scope: !4620)
!4624 = !DILocation(line: 3536, column: 30, scope: !4620)
!4625 = !DILocation(line: 3536, column: 38, scope: !4620)
!4626 = !DILocation(line: 3536, column: 15, scope: !4621)
!4627 = !DILocation(line: 3537, column: 30, scope: !4620)
!4628 = !DILocation(line: 3537, column: 33, scope: !4620)
!4629 = !DILocation(line: 3537, column: 39, scope: !4620)
!4630 = !DILocation(line: 3537, column: 42, scope: !4620)
!4631 = !DILocation(line: 3537, column: 52, scope: !4620)
!4632 = !DILocation(line: 3537, column: 13, scope: !4620)
!4633 = !DILocalVariable(name: "name", scope: !4634, file: !3, line: 3540, type: !143)
!4634 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 3539, column: 13)
!4635 = !DILocation(line: 3540, column: 21, scope: !4634)
!4636 = !DILocation(line: 3540, column: 46, scope: !4634)
!4637 = !DILocation(line: 3540, column: 55, scope: !4634)
!4638 = !DILocation(line: 3540, column: 58, scope: !4634)
!4639 = !DILocation(line: 3540, column: 28, scope: !4634)
!4640 = !DILocation(line: 3541, column: 32, scope: !4634)
!4641 = !DILocation(line: 3541, column: 38, scope: !4634)
!4642 = !DILocation(line: 3541, column: 41, scope: !4634)
!4643 = !DILocation(line: 3541, column: 51, scope: !4634)
!4644 = !DILocation(line: 3541, column: 15, scope: !4634)
!4645 = !DILocation(line: 3542, column: 21, scope: !4634)
!4646 = !DILocation(line: 3542, column: 15, scope: !4634)
!4647 = !DILocation(line: 3544, column: 15, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 3544, column: 15)
!4649 = !DILocation(line: 3544, column: 18, scope: !4648)
!4650 = !DILocation(line: 3544, column: 27, scope: !4648)
!4651 = !DILocation(line: 3544, column: 15, scope: !4621)
!4652 = !DILocation(line: 3545, column: 23, scope: !4648)
!4653 = !DILocation(line: 3545, column: 13, scope: !4648)
!4654 = !DILocation(line: 3546, column: 9, scope: !4621)
!4655 = !DILocation(line: 3528, column: 3, scope: !4601)
!4656 = distinct !{!4656, !4603, !4657}
!4657 = !DILocation(line: 3547, column: 5, scope: !4597)
!4658 = !DILocation(line: 3552, column: 10, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 3552, column: 3)
!4660 = !DILocation(line: 3552, column: 17, scope: !4659)
!4661 = !DILocation(line: 3552, column: 8, scope: !4659)
!4662 = !DILocation(line: 3552, column: 22, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 3552, column: 3)
!4664 = !DILocation(line: 3552, column: 26, scope: !4663)
!4665 = !DILocation(line: 3552, column: 24, scope: !4663)
!4666 = !DILocation(line: 3552, column: 3, scope: !4659)
!4667 = !DILocalVariable(name: "f", scope: !4668, file: !3, line: 3554, type: !250)
!4668 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 3553, column: 5)
!4669 = !DILocation(line: 3554, column: 24, scope: !4668)
!4670 = !DILocation(line: 3554, column: 28, scope: !4668)
!4671 = !DILocation(line: 3554, column: 40, scope: !4668)
!4672 = !DILocation(line: 3555, column: 24, scope: !4668)
!4673 = !DILocation(line: 3555, column: 7, scope: !4668)
!4674 = !DILocation(line: 3555, column: 19, scope: !4668)
!4675 = !DILocation(line: 3555, column: 22, scope: !4668)
!4676 = !DILocation(line: 3556, column: 13, scope: !4668)
!4677 = !DILocation(line: 3556, column: 16, scope: !4668)
!4678 = !DILocation(line: 3556, column: 25, scope: !4668)
!4679 = !DILocation(line: 3556, column: 12, scope: !4668)
!4680 = !DILocation(line: 3556, column: 9, scope: !4668)
!4681 = !DILocation(line: 3557, column: 5, scope: !4668)
!4682 = !DILocation(line: 3552, column: 39, scope: !4663)
!4683 = !DILocation(line: 3552, column: 3, scope: !4663)
!4684 = distinct !{!4684, !4666, !4685}
!4685 = !DILocation(line: 3557, column: 5, scope: !4659)
!4686 = !DILocation(line: 3558, column: 16, scope: !4574)
!4687 = !DILocation(line: 3558, column: 14, scope: !4574)
!4688 = !DILocation(line: 3559, column: 1, scope: !4574)
!4689 = distinct !DISubprogram(name: "print_current_files", scope: !3, file: !3, line: 3832, type: !336, scopeLine: 3833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4690 = !DILocalVariable(name: "i", scope: !4689, file: !3, line: 3834, type: !149)
!4691 = !DILocation(line: 3834, column: 10, scope: !4689)
!4692 = !DILocation(line: 3836, column: 11, scope: !4689)
!4693 = !DILocation(line: 3836, column: 3, scope: !4689)
!4694 = !DILocation(line: 3839, column: 14, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3839, column: 7)
!4696 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 3837, column: 5)
!4697 = !DILocation(line: 3839, column: 12, scope: !4695)
!4698 = !DILocation(line: 3839, column: 19, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 3839, column: 7)
!4700 = !DILocation(line: 3839, column: 23, scope: !4699)
!4701 = !DILocation(line: 3839, column: 21, scope: !4699)
!4702 = !DILocation(line: 3839, column: 7, scope: !4695)
!4703 = !DILocation(line: 3841, column: 39, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 3840, column: 9)
!4705 = !DILocation(line: 3841, column: 51, scope: !4704)
!4706 = !DILocation(line: 3841, column: 11, scope: !4704)
!4707 = !DILocation(line: 3842, column: 11, scope: !4704)
!4708 = !DILocation(line: 3843, column: 9, scope: !4704)
!4709 = !DILocation(line: 3839, column: 36, scope: !4699)
!4710 = !DILocation(line: 3839, column: 7, scope: !4699)
!4711 = distinct !{!4711, !4702, !4712}
!4712 = !DILocation(line: 3843, column: 9, scope: !4695)
!4713 = !DILocation(line: 3844, column: 7, scope: !4696)
!4714 = !DILocation(line: 3847, column: 13, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3847, column: 11)
!4716 = !DILocation(line: 3847, column: 11, scope: !4696)
!4717 = !DILocation(line: 3848, column: 9, scope: !4715)
!4718 = !DILocation(line: 3850, column: 9, scope: !4715)
!4719 = !DILocation(line: 3851, column: 7, scope: !4696)
!4720 = !DILocation(line: 3854, column: 13, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3854, column: 11)
!4722 = !DILocation(line: 3854, column: 11, scope: !4696)
!4723 = !DILocation(line: 3855, column: 9, scope: !4721)
!4724 = !DILocation(line: 3857, column: 9, scope: !4721)
!4725 = !DILocation(line: 3858, column: 7, scope: !4696)
!4726 = !DILocation(line: 3861, column: 7, scope: !4696)
!4727 = !DILocation(line: 3862, column: 7, scope: !4696)
!4728 = !DILocation(line: 3865, column: 14, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3865, column: 7)
!4730 = !DILocation(line: 3865, column: 12, scope: !4729)
!4731 = !DILocation(line: 3865, column: 19, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 3865, column: 7)
!4733 = !DILocation(line: 3865, column: 23, scope: !4732)
!4734 = !DILocation(line: 3865, column: 21, scope: !4732)
!4735 = !DILocation(line: 3865, column: 7, scope: !4729)
!4736 = !DILocation(line: 3867, column: 11, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 3866, column: 9)
!4738 = !DILocation(line: 3868, column: 30, scope: !4737)
!4739 = !DILocation(line: 3868, column: 42, scope: !4737)
!4740 = !DILocation(line: 3868, column: 11, scope: !4737)
!4741 = !DILocation(line: 3869, column: 11, scope: !4737)
!4742 = !DILocation(line: 3869, column: 11, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 3869, column: 11)
!4744 = !DILocation(line: 3870, column: 9, scope: !4737)
!4745 = !DILocation(line: 3865, column: 36, scope: !4732)
!4746 = !DILocation(line: 3865, column: 7, scope: !4732)
!4747 = distinct !{!4747, !4735, !4748}
!4748 = !DILocation(line: 3870, column: 9, scope: !4729)
!4749 = !DILocation(line: 3871, column: 7, scope: !4696)
!4750 = !DILocation(line: 3873, column: 1, scope: !4689)
!4751 = distinct !DISubprogram(name: "dev_ino_pop", scope: !3, file: !3, line: 1022, type: !341, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4752 = !DILocalVariable(name: "vdi", scope: !4751, file: !3, line: 1024, type: !167)
!4753 = !DILocation(line: 1024, column: 9, scope: !4751)
!4754 = !DILocalVariable(name: "di", scope: !4751, file: !3, line: 1025, type: !251)
!4755 = !DILocation(line: 1025, column: 19, scope: !4751)
!4756 = !DILocalVariable(name: "dev_ino_size", scope: !4751, file: !3, line: 1026, type: !27)
!4757 = !DILocation(line: 1026, column: 7, scope: !4751)
!4758 = !DILocation(line: 1027, column: 3, scope: !4751)
!4759 = !DILocalVariable(name: "__o", scope: !4760, file: !3, line: 1027, type: !343)
!4760 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 1027, column: 3)
!4761 = !DILocation(line: 1027, column: 3, scope: !4760)
!4762 = !{!4763, !2475, i64 24}
!4763 = !{!"obstack", !2499, i64 0, !2475, i64 8, !2475, i64 16, !2475, i64 24, !2475, i64 32, !2470, i64 40, !2499, i64 48, !2470, i64 56, !2470, i64 64, !2475, i64 72, !2469, i64 80, !2469, i64 80, !2469, i64 80}
!4764 = !{!4763, !2475, i64 16}
!4765 = !DILocation(line: 1028, column: 3, scope: !4751)
!4766 = !DILocation(line: 1029, column: 9, scope: !4751)
!4767 = !DILocation(line: 1029, column: 7, scope: !4751)
!4768 = !DILocation(line: 1030, column: 8, scope: !4751)
!4769 = !DILocation(line: 1030, column: 6, scope: !4751)
!4770 = !DILocation(line: 1031, column: 11, scope: !4751)
!4771 = !DILocation(line: 1031, column: 10, scope: !4751)
!4772 = !{i64 0, i64 8, !2611, i64 8, i64 8, !2611}
!4773 = !DILocation(line: 1031, column: 3, scope: !4751)
!4774 = distinct !DISubprogram(name: "free_pending_ent", scope: !3, file: !3, line: 1248, type: !390, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4775 = !DILocalVariable(name: "p", arg: 1, scope: !4774, file: !3, line: 1248, type: !235)
!4776 = !DILocation(line: 1248, column: 35, scope: !4774)
!4777 = !DILocation(line: 1250, column: 9, scope: !4774)
!4778 = !DILocation(line: 1250, column: 12, scope: !4774)
!4779 = !DILocation(line: 1250, column: 3, scope: !4774)
!4780 = !DILocation(line: 1251, column: 9, scope: !4774)
!4781 = !DILocation(line: 1251, column: 12, scope: !4774)
!4782 = !DILocation(line: 1251, column: 3, scope: !4774)
!4783 = !DILocation(line: 1252, column: 9, scope: !4774)
!4784 = !DILocation(line: 1252, column: 3, scope: !4774)
!4785 = !DILocation(line: 1253, column: 1, scope: !4774)
!4786 = !DILocalVariable(name: "name", arg: 1, scope: !961, file: !3, line: 2720, type: !146)
!4787 = !DILocation(line: 2720, column: 24, scope: !961)
!4788 = !DILocalVariable(name: "realname", arg: 2, scope: !961, file: !3, line: 2720, type: !146)
!4789 = !DILocation(line: 2720, column: 42, scope: !961)
!4790 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !961, file: !3, line: 2720, type: !141)
!4791 = !DILocation(line: 2720, column: 57, scope: !961)
!4792 = !DILocalVariable(name: "dirp", scope: !961, file: !3, line: 2722, type: !597)
!4793 = !DILocation(line: 2722, column: 8, scope: !961)
!4794 = !DILocalVariable(name: "next", scope: !961, file: !3, line: 2723, type: !601)
!4795 = !DILocation(line: 2723, column: 18, scope: !961)
!4796 = !DILocalVariable(name: "total_blocks", scope: !961, file: !3, line: 2724, type: !168)
!4797 = !DILocation(line: 2724, column: 13, scope: !961)
!4798 = !DILocation(line: 2727, column: 3, scope: !961)
!4799 = !DILocation(line: 2727, column: 9, scope: !961)
!4800 = !DILocation(line: 2728, column: 19, scope: !961)
!4801 = !DILocation(line: 2728, column: 10, scope: !961)
!4802 = !DILocation(line: 2728, column: 8, scope: !961)
!4803 = !DILocation(line: 2729, column: 8, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2729, column: 7)
!4805 = !DILocation(line: 2729, column: 7, scope: !961)
!4806 = !DILocation(line: 2731, column: 21, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2730, column: 5)
!4808 = !DILocation(line: 2731, column: 39, scope: !4807)
!4809 = !DILocation(line: 2731, column: 70, scope: !4807)
!4810 = !DILocation(line: 2731, column: 7, scope: !4807)
!4811 = !DILocation(line: 2732, column: 7, scope: !4807)
!4812 = !DILocation(line: 2735, column: 7, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2735, column: 7)
!4814 = !DILocation(line: 2735, column: 7, scope: !961)
!4815 = !DILocalVariable(name: "dir_stat", scope: !4816, file: !3, line: 2737, type: !190)
!4816 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 2736, column: 5)
!4817 = !DILocation(line: 2737, column: 19, scope: !4816)
!4818 = !DILocalVariable(name: "fd", scope: !4816, file: !3, line: 2738, type: !27)
!4819 = !DILocation(line: 2738, column: 11, scope: !4816)
!4820 = !DILocation(line: 2738, column: 23, scope: !4816)
!4821 = !DILocation(line: 2738, column: 16, scope: !4816)
!4822 = !DILocation(line: 2741, column: 17, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 2741, column: 11)
!4824 = !DILocation(line: 2741, column: 14, scope: !4823)
!4825 = !DILocation(line: 2741, column: 12, scope: !4823)
!4826 = !DILocation(line: 2742, column: 21, scope: !4823)
!4827 = !DILocation(line: 2742, column: 14, scope: !4823)
!4828 = !DILocation(line: 2743, column: 20, scope: !4823)
!4829 = !DILocation(line: 2743, column: 14, scope: !4823)
!4830 = !DILocation(line: 2743, column: 38, scope: !4823)
!4831 = !DILocation(line: 2741, column: 11, scope: !4816)
!4832 = !DILocation(line: 2745, column: 25, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 2744, column: 9)
!4834 = !DILocation(line: 2746, column: 25, scope: !4833)
!4835 = !DILocation(line: 2746, column: 71, scope: !4833)
!4836 = !DILocation(line: 2745, column: 11, scope: !4833)
!4837 = !DILocation(line: 2747, column: 21, scope: !4833)
!4838 = !DILocation(line: 2747, column: 11, scope: !4833)
!4839 = !DILocation(line: 2748, column: 11, scope: !4833)
!4840 = !DILocation(line: 2753, column: 31, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 2753, column: 11)
!4842 = !{!3833, !2499, i64 0}
!4843 = !DILocation(line: 2753, column: 48, scope: !4841)
!4844 = !{!3833, !2499, i64 8}
!4845 = !DILocation(line: 2753, column: 11, scope: !4841)
!4846 = !DILocation(line: 2753, column: 11, scope: !4816)
!4847 = !DILocation(line: 2755, column: 24, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 2754, column: 9)
!4849 = !DILocation(line: 2756, column: 18, scope: !4848)
!4850 = !DILocation(line: 2755, column: 11, scope: !4848)
!4851 = !DILocation(line: 2757, column: 21, scope: !4848)
!4852 = !DILocation(line: 2757, column: 11, scope: !4848)
!4853 = !DILocation(line: 2758, column: 11, scope: !4848)
!4854 = !DILocation(line: 2759, column: 11, scope: !4848)
!4855 = !DILocation(line: 2762, column: 30, scope: !4816)
!4856 = !DILocation(line: 2762, column: 47, scope: !4816)
!4857 = !DILocation(line: 2762, column: 7, scope: !4816)
!4858 = !DILocation(line: 2763, column: 5, scope: !4816)
!4859 = !DILocation(line: 2765, column: 3, scope: !961)
!4860 = !DILocation(line: 2767, column: 7, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2767, column: 7)
!4862 = !DILocation(line: 2767, column: 17, scope: !4861)
!4863 = !DILocation(line: 2767, column: 20, scope: !4861)
!4864 = !DILocation(line: 2767, column: 7, scope: !961)
!4865 = !DILocation(line: 2769, column: 12, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 2769, column: 11)
!4867 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 2768, column: 5)
!4868 = !DILocation(line: 2769, column: 11, scope: !4867)
!4869 = !DILocation(line: 2770, column: 9, scope: !4866)
!4870 = !DILocation(line: 2770, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 2770, column: 9)
!4872 = !DILocation(line: 2771, column: 13, scope: !4867)
!4873 = !DILocation(line: 2772, column: 7, scope: !4867)
!4874 = !DILocation(line: 2772, column: 7, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 2772, column: 7)
!4876 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 2772, column: 7)
!4877 = !DILocation(line: 2772, column: 7, scope: !4876)
!4878 = !DILocation(line: 2772, column: 7, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2772, column: 7)
!4880 = !DILocalVariable(name: "absolute_name", scope: !4867, file: !3, line: 2774, type: !143)
!4881 = !DILocation(line: 2774, column: 13, scope: !4867)
!4882 = !DILocation(line: 2775, column: 11, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 2775, column: 11)
!4884 = !DILocation(line: 2775, column: 11, scope: !4867)
!4885 = !DILocation(line: 2777, column: 55, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 2776, column: 9)
!4887 = !DILocation(line: 2777, column: 27, scope: !4886)
!4888 = !DILocation(line: 2777, column: 25, scope: !4886)
!4889 = !DILocation(line: 2778, column: 17, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 2778, column: 15)
!4891 = !DILocation(line: 2778, column: 15, scope: !4886)
!4892 = !DILocation(line: 2779, column: 27, scope: !4890)
!4893 = !DILocation(line: 2780, column: 27, scope: !4890)
!4894 = !DILocation(line: 2780, column: 57, scope: !4890)
!4895 = !DILocation(line: 2779, column: 13, scope: !4890)
!4896 = !DILocation(line: 2781, column: 9, scope: !4886)
!4897 = !DILocation(line: 2782, column: 19, scope: !4867)
!4898 = !DILocation(line: 2782, column: 30, scope: !4867)
!4899 = !DILocation(line: 2782, column: 41, scope: !4867)
!4900 = !DILocation(line: 2782, column: 47, scope: !4867)
!4901 = !DILocation(line: 2783, column: 50, scope: !4867)
!4902 = !DILocation(line: 2782, column: 7, scope: !4867)
!4903 = !DILocation(line: 2785, column: 13, scope: !4867)
!4904 = !DILocation(line: 2785, column: 7, scope: !4867)
!4905 = !DILocation(line: 2787, column: 7, scope: !4867)
!4906 = !DILocation(line: 2787, column: 7, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 2787, column: 7)
!4908 = !DILocation(line: 2788, column: 5, scope: !4867)
!4909 = !DILocation(line: 2793, column: 3, scope: !961)
!4910 = !DILocation(line: 2797, column: 7, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2794, column: 5)
!4912 = !DILocation(line: 2797, column: 13, scope: !4911)
!4913 = !DILocation(line: 2798, column: 23, scope: !4911)
!4914 = !DILocation(line: 2798, column: 14, scope: !4911)
!4915 = !DILocation(line: 2798, column: 12, scope: !4911)
!4916 = !DILocation(line: 2799, column: 11, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2799, column: 11)
!4918 = !DILocation(line: 2799, column: 11, scope: !4911)
!4919 = !DILocation(line: 2801, column: 31, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 2801, column: 15)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2800, column: 9)
!4922 = !DILocation(line: 2801, column: 37, scope: !4920)
!4923 = !DILocation(line: 2801, column: 17, scope: !4920)
!4924 = !DILocation(line: 2801, column: 15, scope: !4921)
!4925 = !DILocalVariable(name: "type", scope: !4926, file: !3, line: 2803, type: !36)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 2802, column: 13)
!4927 = !DILocation(line: 2803, column: 29, scope: !4926)
!4928 = !DILocation(line: 2806, column: 23, scope: !4926)
!4929 = !DILocation(line: 2806, column: 29, scope: !4926)
!4930 = !{!4931, !2470, i64 18}
!4931 = !{!"dirent", !2499, i64 0, !2499, i64 8, !2889, i64 16, !2470, i64 18, !2470, i64 19}
!4932 = !DILocation(line: 2806, column: 15, scope: !4926)
!4933 = !DILocation(line: 2808, column: 36, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 2807, column: 17)
!4935 = !DILocation(line: 2808, column: 49, scope: !4934)
!4936 = !DILocation(line: 2809, column: 36, scope: !4934)
!4937 = !DILocation(line: 2809, column: 48, scope: !4934)
!4938 = !DILocation(line: 2810, column: 36, scope: !4934)
!4939 = !DILocation(line: 2810, column: 50, scope: !4934)
!4940 = !DILocation(line: 2811, column: 36, scope: !4934)
!4941 = !DILocation(line: 2811, column: 45, scope: !4934)
!4942 = !DILocation(line: 2812, column: 36, scope: !4934)
!4943 = !DILocation(line: 2812, column: 53, scope: !4934)
!4944 = !DILocation(line: 2813, column: 36, scope: !4934)
!4945 = !DILocation(line: 2813, column: 47, scope: !4934)
!4946 = !DILocation(line: 2814, column: 36, scope: !4934)
!4947 = !DILocation(line: 2814, column: 45, scope: !4934)
!4948 = !DILocation(line: 2816, column: 36, scope: !4934)
!4949 = !DILocation(line: 2816, column: 49, scope: !4934)
!4950 = !DILocation(line: 2820, column: 44, scope: !4926)
!4951 = !DILocation(line: 2820, column: 50, scope: !4926)
!4952 = !DILocation(line: 2820, column: 58, scope: !4926)
!4953 = !DILocation(line: 2822, column: 51, scope: !4926)
!4954 = !DILocation(line: 2820, column: 31, scope: !4926)
!4955 = !DILocation(line: 2820, column: 28, scope: !4926)
!4956 = !DILocation(line: 2828, column: 19, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 2828, column: 19)
!4958 = !DILocation(line: 2828, column: 26, scope: !4957)
!4959 = !DILocation(line: 2828, column: 42, scope: !4957)
!4960 = !DILocation(line: 2828, column: 45, scope: !4957)
!4961 = !DILocation(line: 2828, column: 55, scope: !4957)
!4962 = !DILocation(line: 2829, column: 23, scope: !4957)
!4963 = !DILocation(line: 2829, column: 27, scope: !4957)
!4964 = !DILocation(line: 2829, column: 44, scope: !4957)
!4965 = !DILocation(line: 2829, column: 48, scope: !4957)
!4966 = !DILocation(line: 2828, column: 19, scope: !4926)
!4967 = !DILocation(line: 2834, column: 19, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 2830, column: 17)
!4969 = !DILocation(line: 2835, column: 19, scope: !4968)
!4970 = !DILocation(line: 2836, column: 19, scope: !4968)
!4971 = !DILocation(line: 2837, column: 17, scope: !4968)
!4972 = !DILocation(line: 2838, column: 13, scope: !4926)
!4973 = !DILocation(line: 2839, column: 9, scope: !4921)
!4974 = !DILocation(line: 2840, column: 16, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2840, column: 16)
!4976 = !DILocation(line: 2840, column: 22, scope: !4975)
!4977 = !DILocation(line: 2840, column: 16, scope: !4917)
!4978 = !DILocation(line: 2842, column: 25, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 2841, column: 9)
!4980 = !DILocation(line: 2842, column: 43, scope: !4979)
!4981 = !DILocation(line: 2842, column: 70, scope: !4979)
!4982 = !DILocation(line: 2842, column: 11, scope: !4979)
!4983 = !DILocation(line: 2843, column: 15, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 2843, column: 15)
!4985 = !DILocation(line: 2843, column: 21, scope: !4984)
!4986 = !DILocation(line: 2843, column: 15, scope: !4979)
!4987 = !DILocation(line: 2844, column: 13, scope: !4984)
!4988 = !DILocation(line: 2845, column: 9, scope: !4979)
!4989 = !DILocation(line: 2847, column: 9, scope: !4975)
!4990 = !DILocation(line: 2852, column: 7, scope: !4911)
!4991 = distinct !{!4991, !4909, !4992}
!4992 = !DILocation(line: 2853, column: 5, scope: !961)
!4993 = !DILocation(line: 2855, column: 17, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2855, column: 7)
!4995 = !DILocation(line: 2855, column: 7, scope: !4994)
!4996 = !DILocation(line: 2855, column: 23, scope: !4994)
!4997 = !DILocation(line: 2855, column: 7, scope: !961)
!4998 = !DILocation(line: 2857, column: 21, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 2856, column: 5)
!5000 = !DILocation(line: 2857, column: 39, scope: !4999)
!5001 = !DILocation(line: 2857, column: 66, scope: !4999)
!5002 = !DILocation(line: 2857, column: 7, scope: !4999)
!5003 = !DILocation(line: 2859, column: 5, scope: !4999)
!5004 = !DILocation(line: 2862, column: 3, scope: !961)
!5005 = !DILocation(line: 2867, column: 7, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2867, column: 7)
!5007 = !DILocation(line: 2867, column: 7, scope: !961)
!5008 = !DILocation(line: 2868, column: 30, scope: !5006)
!5009 = !DILocation(line: 2868, column: 5, scope: !5006)
!5010 = !DILocation(line: 2870, column: 7, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2870, column: 7)
!5012 = !DILocation(line: 2870, column: 14, scope: !5011)
!5013 = !DILocation(line: 2870, column: 29, scope: !5011)
!5014 = !DILocation(line: 2870, column: 32, scope: !5011)
!5015 = !DILocation(line: 2870, column: 7, scope: !961)
!5016 = !DILocalVariable(name: "p", scope: !5017, file: !3, line: 2872, type: !146)
!5017 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 2871, column: 5)
!5018 = !DILocation(line: 2872, column: 19, scope: !5017)
!5019 = !DILocalVariable(name: "buf", scope: !5017, file: !3, line: 2873, type: !610)
!5020 = !DILocation(line: 2873, column: 12, scope: !5017)
!5021 = !DILocation(line: 2875, column: 7, scope: !5017)
!5022 = !DILocation(line: 2875, column: 7, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 2875, column: 7)
!5024 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2875, column: 7)
!5025 = !DILocation(line: 2875, column: 7, scope: !5024)
!5026 = !DILocation(line: 2875, column: 7, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 2875, column: 7)
!5028 = !DILocation(line: 2876, column: 11, scope: !5017)
!5029 = !DILocation(line: 2876, column: 9, scope: !5017)
!5030 = !DILocation(line: 2877, column: 7, scope: !5017)
!5031 = !DILocation(line: 2877, column: 7, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2877, column: 7)
!5033 = !DILocation(line: 2878, column: 7, scope: !5017)
!5034 = !DILocation(line: 2878, column: 7, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2878, column: 7)
!5036 = !DILocation(line: 2879, column: 27, scope: !5017)
!5037 = !DILocation(line: 2879, column: 41, scope: !5017)
!5038 = !DILocation(line: 2879, column: 46, scope: !5017)
!5039 = !DILocation(line: 2880, column: 42, scope: !5017)
!5040 = !DILocation(line: 2879, column: 11, scope: !5017)
!5041 = !DILocation(line: 2879, column: 9, scope: !5017)
!5042 = !DILocation(line: 2881, column: 7, scope: !5017)
!5043 = !DILocation(line: 2881, column: 7, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2881, column: 7)
!5045 = !DILocation(line: 2882, column: 7, scope: !5017)
!5046 = !DILocation(line: 2882, column: 7, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2882, column: 7)
!5048 = !DILocation(line: 2883, column: 5, scope: !5017)
!5049 = !DILocation(line: 2885, column: 7, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !961, file: !3, line: 2885, column: 7)
!5051 = !DILocation(line: 2885, column: 7, scope: !961)
!5052 = !DILocation(line: 2886, column: 5, scope: !5050)
!5053 = !DILocation(line: 2887, column: 1, scope: !961)
!5054 = distinct !DISubprogram(name: "restore_default_color", scope: !3, file: !3, line: 1266, type: !336, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5055 = !DILocation(line: 1268, column: 3, scope: !5054)
!5056 = !DILocation(line: 1269, column: 3, scope: !5054)
!5057 = !DILocation(line: 1270, column: 1, scope: !5054)
!5058 = distinct !DISubprogram(name: "signal_restore", scope: !3, file: !3, line: 1444, type: !336, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5059 = !DILocation(line: 1446, column: 3, scope: !5058)
!5060 = !DILocation(line: 1447, column: 1, scope: !5058)
!5061 = distinct !DISubprogram(name: "dired_dump_obstack", scope: !3, file: !3, line: 1051, type: !496, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5062 = !DILocalVariable(name: "prefix", arg: 1, scope: !5061, file: !3, line: 1051, type: !146)
!5063 = !DILocation(line: 1051, column: 33, scope: !5061)
!5064 = !DILocalVariable(name: "os", arg: 2, scope: !5061, file: !3, line: 1051, type: !498)
!5065 = !DILocation(line: 1051, column: 57, scope: !5061)
!5066 = !DILocalVariable(name: "n_pos", scope: !5061, file: !3, line: 1053, type: !149)
!5067 = !DILocation(line: 1053, column: 10, scope: !5061)
!5068 = !DILocalVariable(name: "__o", scope: !5069, file: !3, line: 1055, type: !343)
!5069 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1055, column: 11)
!5070 = !DILocation(line: 1055, column: 11, scope: !5069)
!5071 = !DILocation(line: 1055, column: 36, scope: !5061)
!5072 = !DILocation(line: 1055, column: 9, scope: !5061)
!5073 = !DILocation(line: 1056, column: 7, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1056, column: 7)
!5075 = !DILocation(line: 1056, column: 13, scope: !5074)
!5076 = !DILocation(line: 1056, column: 7, scope: !5061)
!5077 = !DILocalVariable(name: "pos", scope: !5078, file: !3, line: 1058, type: !148)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1057, column: 5)
!5079 = !DILocation(line: 1058, column: 15, scope: !5078)
!5080 = !DILocalVariable(name: "__o1", scope: !5081, file: !3, line: 1058, type: !498)
!5081 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1058, column: 32)
!5082 = !DILocation(line: 1058, column: 32, scope: !5081)
!5083 = !DILocalVariable(name: "__value", scope: !5081, file: !3, line: 1058, type: !167)
!5084 = !DILocation(line: 1058, column: 32, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1058, column: 32)
!5086 = !{!4763, !2499, i64 48}
!5087 = !DILocation(line: 1058, column: 32, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1058, column: 32)
!5089 = !{!4763, !2475, i64 8}
!5090 = !{!4763, !2475, i64 32}
!5091 = !DILocation(line: 1058, column: 21, scope: !5078)
!5092 = !DILocation(line: 1059, column: 7, scope: !5078)
!5093 = !DILocalVariable(name: "i", scope: !5094, file: !3, line: 1060, type: !149)
!5094 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1060, column: 7)
!5095 = !DILocation(line: 1060, column: 19, scope: !5094)
!5096 = !DILocation(line: 1060, column: 12, scope: !5094)
!5097 = !DILocation(line: 1060, column: 26, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 1060, column: 7)
!5099 = !DILocation(line: 1060, column: 30, scope: !5098)
!5100 = !DILocation(line: 1060, column: 28, scope: !5098)
!5101 = !DILocation(line: 1060, column: 7, scope: !5094)
!5102 = !DILocation(line: 1061, column: 45, scope: !5098)
!5103 = !DILocation(line: 1061, column: 49, scope: !5098)
!5104 = !DILocation(line: 1061, column: 9, scope: !5098)
!5105 = !DILocation(line: 1060, column: 38, scope: !5098)
!5106 = !DILocation(line: 1060, column: 7, scope: !5098)
!5107 = distinct !{!5107, !5101, !5108}
!5108 = !DILocation(line: 1061, column: 51, scope: !5094)
!5109 = !DILocation(line: 1062, column: 7, scope: !5078)
!5110 = !DILocation(line: 1063, column: 5, scope: !5078)
!5111 = !DILocation(line: 1064, column: 1, scope: !5061)
!5112 = !DILocalVariable(name: "init", arg: 1, scope: !871, file: !3, line: 1355, type: !141)
!5113 = !DILocation(line: 1355, column: 20, scope: !871)
!5114 = !DILocalVariable(name: "j", scope: !871, file: !3, line: 1387, type: !27)
!5115 = !DILocation(line: 1387, column: 7, scope: !871)
!5116 = !DILocation(line: 1389, column: 7, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !871, file: !3, line: 1389, column: 7)
!5118 = !DILocation(line: 1389, column: 7, scope: !871)
!5119 = !DILocalVariable(name: "act", scope: !5120, file: !3, line: 1392, type: !413)
!5120 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 1390, column: 5)
!5121 = !DILocation(line: 1392, column: 24, scope: !5120)
!5122 = !DILocation(line: 1394, column: 7, scope: !5120)
!5123 = !DILocation(line: 1395, column: 14, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 1395, column: 7)
!5125 = !DILocation(line: 1395, column: 12, scope: !5124)
!5126 = !DILocation(line: 1395, column: 19, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 1395, column: 7)
!5128 = !DILocation(line: 1395, column: 21, scope: !5127)
!5129 = !DILocation(line: 1395, column: 7, scope: !5124)
!5130 = !DILocation(line: 1397, column: 26, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 1396, column: 9)
!5132 = !DILocation(line: 1397, column: 22, scope: !5131)
!5133 = !DILocation(line: 1397, column: 11, scope: !5131)
!5134 = !DILocation(line: 1398, column: 19, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1398, column: 15)
!5136 = !DILocation(line: 1398, column: 30, scope: !5135)
!5137 = !DILocation(line: 1398, column: 15, scope: !5131)
!5138 = !DILocation(line: 1399, column: 45, scope: !5135)
!5139 = !DILocation(line: 1399, column: 41, scope: !5135)
!5140 = !DILocation(line: 1399, column: 13, scope: !5135)
!5141 = !DILocation(line: 1400, column: 9, scope: !5131)
!5142 = !DILocation(line: 1395, column: 31, scope: !5127)
!5143 = !DILocation(line: 1395, column: 7, scope: !5127)
!5144 = distinct !{!5144, !5129, !5145}
!5145 = !DILocation(line: 1400, column: 9, scope: !5124)
!5146 = !DILocation(line: 1402, column: 11, scope: !5120)
!5147 = !DILocation(line: 1402, column: 21, scope: !5120)
!5148 = !{i64 0, i64 128, !2529}
!5149 = !DILocation(line: 1403, column: 11, scope: !5120)
!5150 = !DILocation(line: 1403, column: 20, scope: !5120)
!5151 = !{!5152, !2469, i64 136}
!5152 = !{!"sigaction", !2470, i64 0, !5153, i64 8, !2469, i64 136, !2475, i64 144}
!5153 = !{!"", !2470, i64 0}
!5154 = !DILocation(line: 1405, column: 14, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 1405, column: 7)
!5156 = !DILocation(line: 1405, column: 12, scope: !5155)
!5157 = !DILocation(line: 1405, column: 19, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 1405, column: 7)
!5159 = !DILocation(line: 1405, column: 21, scope: !5158)
!5160 = !DILocation(line: 1405, column: 7, scope: !5155)
!5161 = !DILocation(line: 1406, column: 47, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 1406, column: 13)
!5163 = !DILocation(line: 1406, column: 43, scope: !5162)
!5164 = !DILocation(line: 1406, column: 13, scope: !5162)
!5165 = !DILocation(line: 1406, column: 13, scope: !5158)
!5166 = !DILocation(line: 1408, column: 34, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1407, column: 11)
!5168 = !DILocation(line: 1408, column: 30, scope: !5167)
!5169 = !DILocation(line: 1408, column: 37, scope: !5167)
!5170 = !DILocation(line: 1408, column: 17, scope: !5167)
!5171 = !DILocation(line: 1408, column: 28, scope: !5167)
!5172 = !DILocation(line: 1409, column: 28, scope: !5167)
!5173 = !DILocation(line: 1409, column: 24, scope: !5167)
!5174 = !DILocation(line: 1409, column: 13, scope: !5167)
!5175 = !DILocation(line: 1410, column: 11, scope: !5167)
!5176 = !DILocation(line: 1406, column: 49, scope: !5162)
!5177 = !DILocation(line: 1405, column: 31, scope: !5158)
!5178 = !DILocation(line: 1405, column: 7, scope: !5158)
!5179 = distinct !{!5179, !5160, !5180}
!5180 = !DILocation(line: 1410, column: 11, scope: !5155)
!5181 = !DILocation(line: 1422, column: 5, scope: !5120)
!5182 = !DILocation(line: 1426, column: 14, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1426, column: 7)
!5184 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 1424, column: 5)
!5185 = !DILocation(line: 1426, column: 12, scope: !5183)
!5186 = !DILocation(line: 1426, column: 19, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 1426, column: 7)
!5188 = !DILocation(line: 1426, column: 21, scope: !5187)
!5189 = !DILocation(line: 1426, column: 7, scope: !5183)
!5190 = !DILocation(line: 1427, column: 47, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1427, column: 13)
!5192 = !DILocation(line: 1427, column: 43, scope: !5191)
!5193 = !DILocation(line: 1427, column: 13, scope: !5191)
!5194 = !DILocation(line: 1427, column: 13, scope: !5187)
!5195 = !DILocation(line: 1428, column: 23, scope: !5191)
!5196 = !DILocation(line: 1428, column: 19, scope: !5191)
!5197 = !DILocation(line: 1428, column: 11, scope: !5191)
!5198 = !DILocation(line: 1427, column: 49, scope: !5191)
!5199 = !DILocation(line: 1426, column: 31, scope: !5187)
!5200 = !DILocation(line: 1426, column: 7, scope: !5187)
!5201 = distinct !{!5201, !5189, !5202}
!5202 = !DILocation(line: 1428, column: 34, scope: !5183)
!5203 = !DILocation(line: 1435, column: 1, scope: !871)
!5204 = distinct !DISubprogram(name: "stophandler", scope: !3, file: !3, line: 1297, type: !173, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5205 = !DILocalVariable(name: "sig", arg: 1, scope: !5204, file: !3, line: 1297, type: !27)
!5206 = !DILocation(line: 1297, column: 18, scope: !5204)
!5207 = !DILocation(line: 1301, column: 9, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1301, column: 7)
!5209 = !DILocation(line: 1301, column: 7, scope: !5204)
!5210 = !DILocation(line: 1302, column: 22, scope: !5208)
!5211 = !DILocation(line: 1302, column: 5, scope: !5208)
!5212 = !DILocation(line: 1303, column: 1, scope: !5204)
!5213 = distinct !DISubprogram(name: "sighandler", scope: !3, file: !3, line: 1286, type: !173, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5214 = !DILocalVariable(name: "sig", arg: 1, scope: !5213, file: !3, line: 1286, type: !27)
!5215 = !DILocation(line: 1286, column: 17, scope: !5213)
!5216 = !DILocation(line: 1290, column: 9, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 1290, column: 7)
!5218 = !DILocation(line: 1290, column: 7, scope: !5213)
!5219 = !DILocation(line: 1291, column: 24, scope: !5217)
!5220 = !DILocation(line: 1291, column: 22, scope: !5217)
!5221 = !DILocation(line: 1291, column: 5, scope: !5217)
!5222 = !DILocation(line: 1292, column: 1, scope: !5213)
!5223 = distinct !DISubprogram(name: "put_indicator", scope: !3, file: !3, line: 4793, type: !392, scopeLine: 4794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5224 = !DILocalVariable(name: "ind", arg: 1, scope: !5223, file: !3, line: 4793, type: !394)
!5225 = !DILocation(line: 4793, column: 38, scope: !5223)
!5226 = !DILocation(line: 4795, column: 9, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 4795, column: 7)
!5228 = !DILocation(line: 4795, column: 7, scope: !5223)
!5229 = !DILocation(line: 4797, column: 18, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 4796, column: 5)
!5231 = !DILocation(line: 4803, column: 16, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 4803, column: 11)
!5233 = !DILocation(line: 4803, column: 13, scope: !5232)
!5234 = !DILocation(line: 4803, column: 11, scope: !5230)
!5235 = !DILocation(line: 4804, column: 9, scope: !5232)
!5236 = !DILocation(line: 4806, column: 7, scope: !5230)
!5237 = !DILocation(line: 4807, column: 5, scope: !5230)
!5238 = !DILocation(line: 4809, column: 3, scope: !5223)
!5239 = !DILocation(line: 4810, column: 1, scope: !5223)
!5240 = distinct !DISubprogram(name: "signal_init", scope: !3, file: !3, line: 1438, type: !336, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5241 = !DILocation(line: 1440, column: 3, scope: !5240)
!5242 = !DILocation(line: 1441, column: 1, scope: !5240)
!5243 = distinct !DISubprogram(name: "prep_non_filename_text", scope: !3, file: !3, line: 4576, type: !336, scopeLine: 4577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5244 = !DILocation(line: 4578, column: 30, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 4578, column: 7)
!5246 = !DILocation(line: 4578, column: 37, scope: !5245)
!5247 = !DILocation(line: 4578, column: 7, scope: !5243)
!5248 = !DILocation(line: 4579, column: 5, scope: !5245)
!5249 = !DILocation(line: 4582, column: 7, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 4581, column: 5)
!5251 = !DILocation(line: 4583, column: 7, scope: !5250)
!5252 = !DILocation(line: 4584, column: 7, scope: !5250)
!5253 = !DILocation(line: 4586, column: 1, scope: !5243)
!5254 = distinct !DISubprogram(name: "file_failure", scope: !3, file: !3, line: 2687, type: !613, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5255 = !DILocalVariable(name: "serious", arg: 1, scope: !5254, file: !3, line: 2687, type: !141)
!5256 = !DILocation(line: 2687, column: 20, scope: !5254)
!5257 = !DILocalVariable(name: "message", arg: 2, scope: !5254, file: !3, line: 2687, type: !146)
!5258 = !DILocation(line: 2687, column: 41, scope: !5254)
!5259 = !DILocalVariable(name: "file", arg: 3, scope: !5254, file: !3, line: 2687, type: !146)
!5260 = !DILocation(line: 2687, column: 62, scope: !5254)
!5261 = !DILocation(line: 2689, column: 13, scope: !5254)
!5262 = !DILocation(line: 2689, column: 20, scope: !5254)
!5263 = !DILocation(line: 2689, column: 29, scope: !5254)
!5264 = !DILocation(line: 2689, column: 3, scope: !5254)
!5265 = !DILocation(line: 2690, column: 20, scope: !5254)
!5266 = !DILocation(line: 2690, column: 3, scope: !5254)
!5267 = !DILocation(line: 2691, column: 1, scope: !5254)
!5268 = distinct !DISubprogram(name: "visit_dir", scope: !3, file: !3, line: 1217, type: !615, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5269 = !DILocalVariable(name: "dev", arg: 1, scope: !5268, file: !3, line: 1217, type: !258)
!5270 = !DILocation(line: 1217, column: 18, scope: !5268)
!5271 = !DILocalVariable(name: "ino", arg: 2, scope: !5268, file: !3, line: 1217, type: !256)
!5272 = !DILocation(line: 1217, column: 29, scope: !5268)
!5273 = !DILocalVariable(name: "ent", scope: !5268, file: !3, line: 1219, type: !251)
!5274 = !DILocation(line: 1219, column: 19, scope: !5268)
!5275 = !DILocalVariable(name: "ent_from_table", scope: !5268, file: !3, line: 1220, type: !251)
!5276 = !DILocation(line: 1220, column: 19, scope: !5268)
!5277 = !DILocalVariable(name: "found_match", scope: !5268, file: !3, line: 1221, type: !141)
!5278 = !DILocation(line: 1221, column: 8, scope: !5268)
!5279 = !DILocation(line: 1223, column: 9, scope: !5268)
!5280 = !DILocation(line: 1223, column: 7, scope: !5268)
!5281 = !DILocation(line: 1224, column: 17, scope: !5268)
!5282 = !DILocation(line: 1224, column: 3, scope: !5268)
!5283 = !DILocation(line: 1224, column: 8, scope: !5268)
!5284 = !DILocation(line: 1224, column: 15, scope: !5268)
!5285 = !DILocation(line: 1225, column: 17, scope: !5268)
!5286 = !DILocation(line: 1225, column: 3, scope: !5268)
!5287 = !DILocation(line: 1225, column: 8, scope: !5268)
!5288 = !DILocation(line: 1225, column: 15, scope: !5268)
!5289 = !DILocation(line: 1228, column: 33, scope: !5268)
!5290 = !DILocation(line: 1228, column: 49, scope: !5268)
!5291 = !DILocation(line: 1228, column: 20, scope: !5268)
!5292 = !DILocation(line: 1228, column: 18, scope: !5268)
!5293 = !DILocation(line: 1230, column: 7, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 1230, column: 7)
!5295 = !DILocation(line: 1230, column: 22, scope: !5294)
!5296 = !DILocation(line: 1230, column: 7, scope: !5268)
!5297 = !DILocation(line: 1233, column: 7, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 1231, column: 5)
!5299 = !DILocation(line: 1236, column: 18, scope: !5268)
!5300 = !DILocation(line: 1236, column: 36, scope: !5268)
!5301 = !DILocation(line: 1236, column: 33, scope: !5268)
!5302 = !DILocation(line: 1236, column: 15, scope: !5268)
!5303 = !DILocation(line: 1238, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 1238, column: 7)
!5305 = !DILocation(line: 1238, column: 7, scope: !5268)
!5306 = !DILocation(line: 1241, column: 13, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 1239, column: 5)
!5308 = !DILocation(line: 1241, column: 7, scope: !5307)
!5309 = !DILocation(line: 1242, column: 5, scope: !5307)
!5310 = !DILocation(line: 1244, column: 10, scope: !5268)
!5311 = !DILocation(line: 1244, column: 3, scope: !5268)
!5312 = distinct !DISubprogram(name: "set_exit_status", scope: !3, file: !3, line: 2674, type: !396, scopeLine: 2675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5313 = !DILocalVariable(name: "serious", arg: 1, scope: !5312, file: !3, line: 2674, type: !141)
!5314 = !DILocation(line: 2674, column: 23, scope: !5312)
!5315 = !DILocation(line: 2676, column: 7, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 2676, column: 7)
!5317 = !DILocation(line: 2676, column: 7, scope: !5312)
!5318 = !DILocation(line: 2677, column: 17, scope: !5316)
!5319 = !DILocation(line: 2677, column: 5, scope: !5316)
!5320 = !DILocation(line: 2678, column: 12, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 2678, column: 12)
!5322 = !DILocation(line: 2678, column: 24, scope: !5321)
!5323 = !DILocation(line: 2678, column: 12, scope: !5316)
!5324 = !DILocation(line: 2679, column: 17, scope: !5321)
!5325 = !DILocation(line: 2679, column: 5, scope: !5321)
!5326 = !DILocation(line: 2680, column: 1, scope: !5312)
!5327 = distinct !DISubprogram(name: "dev_ino_push", scope: !3, file: !3, line: 1006, type: !617, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5328 = !DILocalVariable(name: "dev", arg: 1, scope: !5327, file: !3, line: 1006, type: !258)
!5329 = !DILocation(line: 1006, column: 21, scope: !5327)
!5330 = !DILocalVariable(name: "ino", arg: 2, scope: !5327, file: !3, line: 1006, type: !256)
!5331 = !DILocation(line: 1006, column: 32, scope: !5327)
!5332 = !DILocalVariable(name: "vdi", scope: !5327, file: !3, line: 1008, type: !167)
!5333 = !DILocation(line: 1008, column: 9, scope: !5327)
!5334 = !DILocalVariable(name: "di", scope: !5327, file: !3, line: 1009, type: !251)
!5335 = !DILocation(line: 1009, column: 19, scope: !5327)
!5336 = !DILocalVariable(name: "dev_ino_size", scope: !5327, file: !3, line: 1010, type: !27)
!5337 = !DILocation(line: 1010, column: 7, scope: !5327)
!5338 = !DILocalVariable(name: "__o", scope: !5339, file: !3, line: 1011, type: !498)
!5339 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 1011, column: 3)
!5340 = !DILocation(line: 1011, column: 3, scope: !5339)
!5341 = !DILocalVariable(name: "__len", scope: !5339, file: !3, line: 1011, type: !149)
!5342 = !DILocalVariable(name: "__o1", scope: !5343, file: !3, line: 1011, type: !343)
!5343 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 1011, column: 3)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1011, column: 3)
!5345 = !DILocation(line: 1011, column: 3, scope: !5343)
!5346 = !DILocation(line: 1011, column: 3, scope: !5344)
!5347 = !DILocation(line: 1012, column: 9, scope: !5327)
!5348 = !DILocation(line: 1012, column: 7, scope: !5327)
!5349 = !DILocation(line: 1013, column: 8, scope: !5327)
!5350 = !DILocation(line: 1013, column: 6, scope: !5327)
!5351 = !DILocation(line: 1014, column: 5, scope: !5327)
!5352 = !DILocation(line: 1015, column: 16, scope: !5327)
!5353 = !DILocation(line: 1015, column: 3, scope: !5327)
!5354 = !DILocation(line: 1015, column: 7, scope: !5327)
!5355 = !DILocation(line: 1015, column: 14, scope: !5327)
!5356 = !DILocation(line: 1016, column: 16, scope: !5327)
!5357 = !DILocation(line: 1016, column: 3, scope: !5327)
!5358 = !DILocation(line: 1016, column: 7, scope: !5327)
!5359 = !DILocation(line: 1016, column: 14, scope: !5327)
!5360 = !DILocation(line: 1017, column: 1, scope: !5327)
!5361 = distinct !DISubprogram(name: "quote_name", scope: !3, file: !3, line: 4475, type: !619, scopeLine: 4478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5362 = !DILocalVariable(name: "name", arg: 1, scope: !5361, file: !3, line: 4475, type: !146)
!5363 = !DILocation(line: 4475, column: 25, scope: !5361)
!5364 = !DILocalVariable(name: "options", arg: 2, scope: !5361, file: !3, line: 4475, type: !621)
!5365 = !DILocation(line: 4475, column: 61, scope: !5361)
!5366 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !5361, file: !3, line: 4476, type: !27)
!5367 = !DILocation(line: 4476, column: 17, scope: !5361)
!5368 = !DILocalVariable(name: "color", arg: 4, scope: !5361, file: !3, line: 4476, type: !394)
!5369 = !DILocation(line: 4476, column: 62, scope: !5361)
!5370 = !DILocalVariable(name: "allow_pad", arg: 5, scope: !5361, file: !3, line: 4477, type: !141)
!5371 = !DILocation(line: 4477, column: 18, scope: !5361)
!5372 = !DILocalVariable(name: "stack", arg: 6, scope: !5361, file: !3, line: 4477, type: !498)
!5373 = !DILocation(line: 4477, column: 45, scope: !5361)
!5374 = !DILocalVariable(name: "absolute_name", arg: 7, scope: !5361, file: !3, line: 4477, type: !146)
!5375 = !DILocation(line: 4477, column: 64, scope: !5361)
!5376 = !DILocalVariable(name: "smallbuf", scope: !5361, file: !3, line: 4479, type: !623)
!5377 = !DILocation(line: 4479, column: 8, scope: !5361)
!5378 = !DILocalVariable(name: "buf", scope: !5361, file: !3, line: 4480, type: !143)
!5379 = !DILocation(line: 4480, column: 9, scope: !5361)
!5380 = !DILocation(line: 4480, column: 15, scope: !5361)
!5381 = !DILocalVariable(name: "len", scope: !5361, file: !3, line: 4481, type: !149)
!5382 = !DILocation(line: 4481, column: 10, scope: !5361)
!5383 = !DILocalVariable(name: "pad", scope: !5361, file: !3, line: 4482, type: !141)
!5384 = !DILocation(line: 4482, column: 8, scope: !5361)
!5385 = !DILocation(line: 4484, column: 57, scope: !5361)
!5386 = !DILocation(line: 4484, column: 63, scope: !5361)
!5387 = !DILocation(line: 4485, column: 25, scope: !5361)
!5388 = !DILocation(line: 4484, column: 9, scope: !5361)
!5389 = !DILocation(line: 4484, column: 7, scope: !5361)
!5390 = !DILocation(line: 4487, column: 7, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4487, column: 7)
!5392 = !DILocation(line: 4487, column: 11, scope: !5391)
!5393 = !DILocation(line: 4487, column: 14, scope: !5391)
!5394 = !DILocation(line: 4487, column: 7, scope: !5361)
!5395 = !DILocation(line: 4488, column: 7, scope: !5391)
!5396 = !DILocation(line: 4488, column: 7, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 4488, column: 7)
!5398 = !DILocation(line: 4490, column: 7, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4490, column: 7)
!5400 = !DILocation(line: 4490, column: 7, scope: !5361)
!5401 = !DILocation(line: 4491, column: 28, scope: !5399)
!5402 = !DILocation(line: 4491, column: 5, scope: !5399)
!5403 = !DILocalVariable(name: "skip_quotes", scope: !5361, file: !3, line: 4495, type: !141)
!5404 = !DILocation(line: 4495, column: 8, scope: !5361)
!5405 = !DILocation(line: 4497, column: 7, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4497, column: 7)
!5407 = !DILocation(line: 4497, column: 7, scope: !5361)
!5408 = !DILocation(line: 4499, column: 11, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 4499, column: 11)
!5410 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 4498, column: 5)
!5411 = !DILocation(line: 4499, column: 39, scope: !5409)
!5412 = !DILocation(line: 4499, column: 42, scope: !5409)
!5413 = !DILocation(line: 4499, column: 58, scope: !5409)
!5414 = !DILocation(line: 4499, column: 63, scope: !5409)
!5415 = !DILocation(line: 4499, column: 11, scope: !5410)
!5416 = !DILocation(line: 4501, column: 23, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 4500, column: 9)
!5418 = !DILocation(line: 4502, column: 11, scope: !5417)
!5419 = !DILocation(line: 4503, column: 9, scope: !5417)
!5420 = !DILocalVariable(name: "h", scope: !5410, file: !3, line: 4504, type: !143)
!5421 = !DILocation(line: 4504, column: 13, scope: !5410)
!5422 = !DILocation(line: 4504, column: 30, scope: !5410)
!5423 = !DILocation(line: 4504, column: 17, scope: !5410)
!5424 = !DILocalVariable(name: "n", scope: !5410, file: !3, line: 4505, type: !143)
!5425 = !DILocation(line: 4505, column: 13, scope: !5410)
!5426 = !DILocation(line: 4505, column: 30, scope: !5410)
!5427 = !DILocation(line: 4505, column: 17, scope: !5410)
!5428 = !DILocation(line: 4511, column: 42, scope: !5410)
!5429 = !DILocation(line: 4511, column: 46, scope: !5410)
!5430 = !DILocation(line: 4511, column: 45, scope: !5410)
!5431 = !DILocation(line: 4511, column: 48, scope: !5410)
!5432 = !DILocation(line: 4511, column: 67, scope: !5410)
!5433 = !DILocation(line: 4511, column: 7, scope: !5410)
!5434 = !DILocation(line: 4512, column: 13, scope: !5410)
!5435 = !DILocation(line: 4512, column: 7, scope: !5410)
!5436 = !DILocation(line: 4513, column: 13, scope: !5410)
!5437 = !DILocation(line: 4513, column: 7, scope: !5410)
!5438 = !DILocation(line: 4514, column: 5, scope: !5410)
!5439 = !DILocation(line: 4516, column: 7, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4516, column: 7)
!5441 = !DILocation(line: 4516, column: 7, scope: !5361)
!5442 = !DILocation(line: 4517, column: 5, scope: !5440)
!5443 = !DILocation(line: 4517, column: 5, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 4517, column: 5)
!5445 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 4517, column: 5)
!5446 = !DILocation(line: 4517, column: 5, scope: !5445)
!5447 = !DILocalVariable(name: "__o", scope: !5448, file: !3, line: 4517, type: !498)
!5448 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 4517, column: 5)
!5449 = !DILocation(line: 4517, column: 5, scope: !5448)
!5450 = !DILocalVariable(name: "__len", scope: !5448, file: !3, line: 4517, type: !149)
!5451 = !DILocalVariable(name: "__o1", scope: !5452, file: !3, line: 4517, type: !343)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 4517, column: 5)
!5453 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 4517, column: 5)
!5454 = !DILocation(line: 4517, column: 5, scope: !5452)
!5455 = !DILocation(line: 4517, column: 5, scope: !5453)
!5456 = !DILocation(line: 4519, column: 3, scope: !5361)
!5457 = !DILocation(line: 4521, column: 16, scope: !5361)
!5458 = !DILocation(line: 4521, column: 13, scope: !5361)
!5459 = !DILocation(line: 4523, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4523, column: 7)
!5461 = !DILocation(line: 4523, column: 7, scope: !5361)
!5462 = !DILocation(line: 4524, column: 5, scope: !5460)
!5463 = !DILocation(line: 4524, column: 5, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 4524, column: 5)
!5465 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 4524, column: 5)
!5466 = !DILocation(line: 4524, column: 5, scope: !5465)
!5467 = !DILocalVariable(name: "__o", scope: !5468, file: !3, line: 4524, type: !498)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 4524, column: 5)
!5469 = !DILocation(line: 4524, column: 5, scope: !5468)
!5470 = !DILocalVariable(name: "__len", scope: !5468, file: !3, line: 4524, type: !149)
!5471 = !DILocalVariable(name: "__o1", scope: !5472, file: !3, line: 4524, type: !343)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 4524, column: 5)
!5473 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 4524, column: 5)
!5474 = !DILocation(line: 4524, column: 5, scope: !5472)
!5475 = !DILocation(line: 4524, column: 5, scope: !5473)
!5476 = !DILocation(line: 4526, column: 7, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4526, column: 7)
!5478 = !DILocation(line: 4526, column: 7, scope: !5361)
!5479 = !DILocation(line: 4528, column: 7, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 4527, column: 5)
!5481 = !DILocation(line: 4529, column: 11, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 4529, column: 11)
!5483 = !DILocation(line: 4529, column: 11, scope: !5480)
!5484 = !DILocation(line: 4530, column: 9, scope: !5482)
!5485 = !DILocation(line: 4531, column: 5, scope: !5480)
!5486 = !DILocation(line: 4533, column: 7, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 4533, column: 7)
!5488 = !DILocation(line: 4533, column: 14, scope: !5487)
!5489 = !DILocation(line: 4533, column: 11, scope: !5487)
!5490 = !DILocation(line: 4533, column: 23, scope: !5487)
!5491 = !DILocation(line: 4533, column: 26, scope: !5487)
!5492 = !DILocation(line: 4533, column: 33, scope: !5487)
!5493 = !DILocation(line: 4533, column: 30, scope: !5487)
!5494 = !DILocation(line: 4533, column: 7, scope: !5361)
!5495 = !DILocation(line: 4534, column: 11, scope: !5487)
!5496 = !DILocation(line: 4534, column: 5, scope: !5487)
!5497 = !DILocation(line: 4536, column: 10, scope: !5361)
!5498 = !DILocation(line: 4536, column: 16, scope: !5361)
!5499 = !DILocation(line: 4536, column: 14, scope: !5361)
!5500 = !DILocation(line: 4536, column: 3, scope: !5361)
!5501 = distinct !DISubprogram(name: "file_ignored", scope: !3, file: !3, line: 2919, type: !556, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5502 = !DILocalVariable(name: "name", arg: 1, scope: !5501, file: !3, line: 2919, type: !146)
!5503 = !DILocation(line: 2919, column: 27, scope: !5501)
!5504 = !DILocation(line: 2921, column: 12, scope: !5501)
!5505 = !DILocation(line: 2921, column: 24, scope: !5501)
!5506 = !DILocation(line: 2922, column: 12, scope: !5501)
!5507 = !DILocation(line: 2922, column: 15, scope: !5501)
!5508 = !DILocation(line: 2922, column: 23, scope: !5501)
!5509 = !DILocation(line: 2923, column: 12, scope: !5501)
!5510 = !DILocation(line: 2923, column: 16, scope: !5501)
!5511 = !DILocation(line: 2923, column: 28, scope: !5501)
!5512 = !DILocation(line: 2923, column: 46, scope: !5501)
!5513 = !DILocation(line: 2923, column: 51, scope: !5501)
!5514 = !DILocation(line: 2923, column: 61, scope: !5501)
!5515 = !DILocation(line: 2923, column: 69, scope: !5501)
!5516 = !DILocation(line: 2923, column: 58, scope: !5501)
!5517 = !DILocation(line: 2924, column: 11, scope: !5501)
!5518 = !DILocation(line: 2924, column: 15, scope: !5501)
!5519 = !DILocation(line: 2924, column: 27, scope: !5501)
!5520 = !DILocation(line: 2925, column: 15, scope: !5501)
!5521 = !DILocation(line: 2925, column: 34, scope: !5501)
!5522 = !DILocation(line: 2925, column: 49, scope: !5501)
!5523 = !DILocation(line: 2925, column: 18, scope: !5501)
!5524 = !DILocation(line: 2926, column: 11, scope: !5501)
!5525 = !DILocation(line: 2926, column: 30, scope: !5501)
!5526 = !DILocation(line: 2926, column: 47, scope: !5501)
!5527 = !DILocation(line: 2926, column: 14, scope: !5501)
!5528 = !DILocation(line: 2921, column: 3, scope: !5501)
!5529 = distinct !DISubprogram(name: "process_signals", scope: !3, file: !3, line: 1312, type: !336, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5530 = !DILocation(line: 1314, column: 3, scope: !5529)
!5531 = !DILocation(line: 1314, column: 10, scope: !5529)
!5532 = !DILocation(line: 1314, column: 27, scope: !5529)
!5533 = !DILocation(line: 1314, column: 30, scope: !5529)
!5534 = !DILocalVariable(name: "sig", scope: !5535, file: !3, line: 1316, type: !27)
!5535 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 1315, column: 5)
!5536 = !DILocation(line: 1316, column: 11, scope: !5535)
!5537 = !DILocalVariable(name: "stops", scope: !5535, file: !3, line: 1317, type: !27)
!5538 = !DILocation(line: 1317, column: 11, scope: !5535)
!5539 = !DILocalVariable(name: "oldset", scope: !5535, file: !3, line: 1318, type: !398)
!5540 = !DILocation(line: 1318, column: 16, scope: !5535)
!5541 = !DILocation(line: 1320, column: 11, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1320, column: 11)
!5543 = !DILocation(line: 1320, column: 11, scope: !5535)
!5544 = !DILocation(line: 1321, column: 9, scope: !5542)
!5545 = !DILocation(line: 1322, column: 7, scope: !5535)
!5546 = !DILocation(line: 1324, column: 7, scope: !5535)
!5547 = !DILocation(line: 1328, column: 13, scope: !5535)
!5548 = !DILocation(line: 1328, column: 11, scope: !5535)
!5549 = !DILocation(line: 1329, column: 15, scope: !5535)
!5550 = !DILocation(line: 1329, column: 13, scope: !5535)
!5551 = !DILocation(line: 1334, column: 11, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1334, column: 11)
!5553 = !DILocation(line: 1334, column: 11, scope: !5535)
!5554 = !DILocation(line: 1336, column: 31, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 1335, column: 9)
!5556 = !DILocation(line: 1336, column: 37, scope: !5555)
!5557 = !DILocation(line: 1336, column: 29, scope: !5555)
!5558 = !DILocation(line: 1337, column: 15, scope: !5555)
!5559 = !DILocation(line: 1338, column: 9, scope: !5555)
!5560 = !DILocation(line: 1340, column: 17, scope: !5552)
!5561 = !DILocation(line: 1340, column: 9, scope: !5552)
!5562 = !DILocation(line: 1343, column: 14, scope: !5535)
!5563 = !DILocation(line: 1343, column: 7, scope: !5535)
!5564 = !DILocation(line: 1344, column: 7, scope: !5535)
!5565 = distinct !{!5565, !5530, !5566}
!5566 = !DILocation(line: 1348, column: 5, scope: !5529)
!5567 = !DILocation(line: 1349, column: 1, scope: !5529)
!5568 = distinct !DISubprogram(name: "patterns_match", scope: !3, file: !3, line: 2907, type: !646, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5569 = !DILocalVariable(name: "patterns", arg: 1, scope: !5568, file: !3, line: 2907, type: !648)
!5570 = !DILocation(line: 2907, column: 46, scope: !5568)
!5571 = !DILocalVariable(name: "file", arg: 2, scope: !5568, file: !3, line: 2907, type: !146)
!5572 = !DILocation(line: 2907, column: 68, scope: !5568)
!5573 = !DILocalVariable(name: "p", scope: !5568, file: !3, line: 2909, type: !648)
!5574 = !DILocation(line: 2909, column: 32, scope: !5568)
!5575 = !DILocation(line: 2910, column: 12, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 2910, column: 3)
!5577 = !DILocation(line: 2910, column: 10, scope: !5576)
!5578 = !DILocation(line: 2910, column: 8, scope: !5576)
!5579 = !DILocation(line: 2910, column: 22, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 2910, column: 3)
!5581 = !DILocation(line: 2910, column: 3, scope: !5576)
!5582 = !DILocation(line: 2911, column: 18, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 2911, column: 9)
!5584 = !DILocation(line: 2911, column: 21, scope: !5583)
!5585 = !DILocation(line: 2911, column: 30, scope: !5583)
!5586 = !DILocation(line: 2911, column: 9, scope: !5583)
!5587 = !DILocation(line: 2911, column: 48, scope: !5583)
!5588 = !DILocation(line: 2911, column: 9, scope: !5580)
!5589 = !DILocation(line: 2912, column: 7, scope: !5583)
!5590 = !DILocation(line: 2911, column: 51, scope: !5583)
!5591 = !DILocation(line: 2910, column: 29, scope: !5580)
!5592 = !DILocation(line: 2910, column: 32, scope: !5580)
!5593 = !DILocation(line: 2910, column: 27, scope: !5580)
!5594 = !DILocation(line: 2910, column: 3, scope: !5580)
!5595 = distinct !{!5595, !5581, !5596}
!5596 = !DILocation(line: 2912, column: 14, scope: !5576)
!5597 = !DILocation(line: 2913, column: 3, scope: !5568)
!5598 = !DILocation(line: 2914, column: 1, scope: !5568)
!5599 = distinct !DISubprogram(name: "quote_name_buf", scope: !3, file: !3, line: 4240, type: !626, scopeLine: 4243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5600 = !DILocalVariable(name: "inbuf", arg: 1, scope: !5599, file: !3, line: 4240, type: !142)
!5601 = !DILocation(line: 4240, column: 24, scope: !5599)
!5602 = !DILocalVariable(name: "bufsize", arg: 2, scope: !5599, file: !3, line: 4240, type: !149)
!5603 = !DILocation(line: 4240, column: 38, scope: !5599)
!5604 = !DILocalVariable(name: "name", arg: 3, scope: !5599, file: !3, line: 4240, type: !143)
!5605 = !DILocation(line: 4240, column: 53, scope: !5599)
!5606 = !DILocalVariable(name: "options", arg: 4, scope: !5599, file: !3, line: 4241, type: !621)
!5607 = !DILocation(line: 4241, column: 47, scope: !5599)
!5608 = !DILocalVariable(name: "needs_general_quoting", arg: 5, scope: !5599, file: !3, line: 4242, type: !27)
!5609 = !DILocation(line: 4242, column: 21, scope: !5599)
!5610 = !DILocalVariable(name: "width", arg: 6, scope: !5599, file: !3, line: 4242, type: !148)
!5611 = !DILocation(line: 4242, column: 52, scope: !5599)
!5612 = !DILocalVariable(name: "pad", arg: 7, scope: !5599, file: !3, line: 4242, type: !628)
!5613 = !DILocation(line: 4242, column: 65, scope: !5599)
!5614 = !DILocalVariable(name: "buf", scope: !5599, file: !3, line: 4244, type: !143)
!5615 = !DILocation(line: 4244, column: 9, scope: !5599)
!5616 = !DILocation(line: 4244, column: 16, scope: !5599)
!5617 = !DILocation(line: 4244, column: 15, scope: !5599)
!5618 = !DILocalVariable(name: "displayed_width", scope: !5599, file: !3, line: 4245, type: !149)
!5619 = !DILocation(line: 4245, column: 10, scope: !5599)
!5620 = !DILocalVariable(name: "len", scope: !5599, file: !3, line: 4246, type: !149)
!5621 = !DILocation(line: 4246, column: 10, scope: !5599)
!5622 = !DILocalVariable(name: "quoted", scope: !5599, file: !3, line: 4247, type: !141)
!5623 = !DILocation(line: 4247, column: 8, scope: !5599)
!5624 = !DILocalVariable(name: "qs", scope: !5599, file: !3, line: 4249, type: !95)
!5625 = !DILocation(line: 4249, column: 22, scope: !5599)
!5626 = !DILocation(line: 4249, column: 46, scope: !5599)
!5627 = !DILocation(line: 4249, column: 27, scope: !5599)
!5628 = !DILocalVariable(name: "needs_further_quoting", scope: !5599, file: !3, line: 4250, type: !141)
!5629 = !DILocation(line: 4250, column: 8, scope: !5599)
!5630 = !DILocation(line: 4250, column: 32, scope: !5599)
!5631 = !DILocation(line: 4251, column: 32, scope: !5599)
!5632 = !DILocation(line: 4251, column: 36, scope: !5599)
!5633 = !DILocation(line: 4251, column: 39, scope: !5599)
!5634 = !DILocation(line: 4252, column: 36, scope: !5599)
!5635 = !DILocation(line: 4252, column: 39, scope: !5599)
!5636 = !DILocation(line: 4252, column: 42, scope: !5599)
!5637 = !DILocation(line: 4253, column: 36, scope: !5599)
!5638 = !DILocation(line: 4253, column: 39, scope: !5599)
!5639 = !DILocation(line: 4253, column: 42, scope: !5599)
!5640 = !DILocation(line: 0, scope: !5599)
!5641 = !DILocation(line: 4255, column: 7, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 4255, column: 7)
!5643 = !DILocation(line: 4255, column: 29, scope: !5642)
!5644 = !DILocation(line: 4255, column: 7, scope: !5599)
!5645 = !DILocation(line: 4257, column: 30, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 4256, column: 5)
!5647 = !DILocation(line: 4257, column: 35, scope: !5646)
!5648 = !DILocation(line: 4257, column: 44, scope: !5646)
!5649 = !DILocation(line: 4257, column: 54, scope: !5646)
!5650 = !DILocation(line: 4257, column: 13, scope: !5646)
!5651 = !DILocation(line: 4257, column: 11, scope: !5646)
!5652 = !DILocation(line: 4258, column: 11, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 4258, column: 11)
!5654 = !DILocation(line: 4258, column: 22, scope: !5653)
!5655 = !DILocation(line: 4258, column: 19, scope: !5653)
!5656 = !DILocation(line: 4258, column: 11, scope: !5646)
!5657 = !DILocation(line: 4260, column: 26, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 4259, column: 9)
!5659 = !DILocation(line: 4260, column: 30, scope: !5658)
!5660 = !DILocation(line: 4260, column: 17, scope: !5658)
!5661 = !DILocation(line: 4260, column: 15, scope: !5658)
!5662 = !DILocation(line: 4261, column: 28, scope: !5658)
!5663 = !DILocation(line: 4261, column: 33, scope: !5658)
!5664 = !DILocation(line: 4261, column: 37, scope: !5658)
!5665 = !DILocation(line: 4261, column: 42, scope: !5658)
!5666 = !DILocation(line: 4261, column: 52, scope: !5658)
!5667 = !DILocation(line: 4261, column: 11, scope: !5658)
!5668 = !DILocation(line: 4262, column: 9, scope: !5658)
!5669 = !DILocation(line: 4264, column: 18, scope: !5646)
!5670 = !DILocation(line: 4264, column: 17, scope: !5646)
!5671 = !DILocation(line: 4264, column: 27, scope: !5646)
!5672 = !DILocation(line: 4264, column: 26, scope: !5646)
!5673 = !DILocation(line: 4264, column: 23, scope: !5646)
!5674 = !DILocation(line: 4264, column: 32, scope: !5646)
!5675 = !DILocation(line: 4264, column: 43, scope: !5646)
!5676 = !DILocation(line: 4264, column: 35, scope: !5646)
!5677 = !DILocation(line: 4264, column: 52, scope: !5646)
!5678 = !DILocation(line: 4264, column: 49, scope: !5646)
!5679 = !DILocation(line: 4264, column: 14, scope: !5646)
!5680 = !DILocation(line: 4265, column: 5, scope: !5646)
!5681 = !DILocation(line: 4266, column: 12, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 4266, column: 12)
!5683 = !DILocation(line: 4266, column: 12, scope: !5642)
!5684 = !DILocation(line: 4268, column: 21, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 4267, column: 5)
!5686 = !DILocation(line: 4268, column: 13, scope: !5685)
!5687 = !DILocation(line: 4268, column: 11, scope: !5685)
!5688 = !DILocation(line: 4269, column: 11, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 4269, column: 11)
!5690 = !DILocation(line: 4269, column: 22, scope: !5689)
!5691 = !DILocation(line: 4269, column: 19, scope: !5689)
!5692 = !DILocation(line: 4269, column: 11, scope: !5685)
!5693 = !DILocation(line: 4270, column: 24, scope: !5689)
!5694 = !DILocation(line: 4270, column: 28, scope: !5689)
!5695 = !DILocation(line: 4270, column: 15, scope: !5689)
!5696 = !DILocation(line: 4270, column: 13, scope: !5689)
!5697 = !DILocation(line: 4270, column: 9, scope: !5689)
!5698 = !DILocation(line: 4271, column: 15, scope: !5685)
!5699 = !DILocation(line: 4271, column: 20, scope: !5685)
!5700 = !DILocation(line: 4271, column: 26, scope: !5685)
!5701 = !DILocation(line: 4271, column: 30, scope: !5685)
!5702 = !DILocation(line: 4271, column: 7, scope: !5685)
!5703 = !DILocation(line: 4273, column: 14, scope: !5685)
!5704 = !DILocation(line: 4274, column: 5, scope: !5685)
!5705 = !DILocation(line: 4277, column: 21, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 4276, column: 5)
!5707 = !DILocation(line: 4277, column: 13, scope: !5706)
!5708 = !DILocation(line: 4277, column: 11, scope: !5706)
!5709 = !DILocation(line: 4278, column: 13, scope: !5706)
!5710 = !DILocation(line: 4278, column: 11, scope: !5706)
!5711 = !DILocation(line: 4279, column: 14, scope: !5706)
!5712 = !DILocation(line: 4282, column: 7, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 4282, column: 7)
!5714 = !DILocation(line: 4282, column: 7, scope: !5599)
!5715 = !DILocation(line: 4284, column: 11, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 4284, column: 11)
!5717 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 4283, column: 5)
!5718 = !DILocation(line: 4284, column: 22, scope: !5716)
!5719 = !DILocation(line: 4284, column: 11, scope: !5717)
!5720 = !DILocalVariable(name: "p", scope: !5721, file: !3, line: 4286, type: !146)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 4285, column: 9)
!5722 = !DILocation(line: 4286, column: 23, scope: !5721)
!5723 = !DILocation(line: 4286, column: 27, scope: !5721)
!5724 = !DILocalVariable(name: "plimit", scope: !5721, file: !3, line: 4287, type: !146)
!5725 = !DILocation(line: 4287, column: 23, scope: !5721)
!5726 = !DILocation(line: 4287, column: 32, scope: !5721)
!5727 = !DILocation(line: 4287, column: 38, scope: !5721)
!5728 = !DILocation(line: 4287, column: 36, scope: !5721)
!5729 = !DILocalVariable(name: "q", scope: !5721, file: !3, line: 4288, type: !143)
!5730 = !DILocation(line: 4288, column: 17, scope: !5721)
!5731 = !DILocation(line: 4288, column: 21, scope: !5721)
!5732 = !DILocation(line: 4289, column: 27, scope: !5721)
!5733 = !DILocation(line: 4291, column: 11, scope: !5721)
!5734 = !DILocation(line: 4291, column: 18, scope: !5721)
!5735 = !DILocation(line: 4291, column: 22, scope: !5721)
!5736 = !DILocation(line: 4291, column: 20, scope: !5721)
!5737 = !DILocation(line: 4292, column: 22, scope: !5721)
!5738 = !DILocation(line: 4292, column: 21, scope: !5721)
!5739 = !DILocation(line: 4292, column: 13, scope: !5721)
!5740 = !DILocation(line: 4315, column: 28, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 4293, column: 15)
!5742 = !DILocation(line: 4315, column: 26, scope: !5741)
!5743 = !DILocation(line: 4315, column: 21, scope: !5741)
!5744 = !DILocation(line: 4315, column: 24, scope: !5741)
!5745 = !DILocation(line: 4316, column: 35, scope: !5741)
!5746 = !DILocation(line: 4317, column: 19, scope: !5741)
!5747 = !DILocalVariable(name: "mbstate", scope: !5748, file: !3, line: 4323, type: !629)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 4322, column: 19)
!5749 = !DILocation(line: 4323, column: 31, scope: !5748)
!5750 = !DILocation(line: 4324, column: 21, scope: !5748)
!5751 = !DILocalVariable(name: "wc", scope: !5752, file: !3, line: 4326, type: !641)
!5752 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 4325, column: 23)
!5753 = !DILocation(line: 4326, column: 33, scope: !5752)
!5754 = !DILocalVariable(name: "bytes", scope: !5752, file: !3, line: 4327, type: !149)
!5755 = !DILocation(line: 4327, column: 32, scope: !5752)
!5756 = !DILocalVariable(name: "w", scope: !5752, file: !3, line: 4328, type: !27)
!5757 = !DILocation(line: 4328, column: 29, scope: !5752)
!5758 = !DILocation(line: 4330, column: 47, scope: !5752)
!5759 = !DILocation(line: 4330, column: 50, scope: !5752)
!5760 = !DILocation(line: 4330, column: 59, scope: !5752)
!5761 = !DILocation(line: 4330, column: 57, scope: !5752)
!5762 = !DILocation(line: 4330, column: 33, scope: !5752)
!5763 = !DILocation(line: 4330, column: 31, scope: !5752)
!5764 = !DILocation(line: 4332, column: 29, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 4332, column: 29)
!5766 = !DILocation(line: 4332, column: 35, scope: !5765)
!5767 = !DILocation(line: 4332, column: 29, scope: !5752)
!5768 = !DILocation(line: 4337, column: 30, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 4333, column: 27)
!5770 = !DILocation(line: 4338, column: 31, scope: !5769)
!5771 = !DILocation(line: 4338, column: 34, scope: !5769)
!5772 = !DILocation(line: 4339, column: 45, scope: !5769)
!5773 = !DILocation(line: 4340, column: 29, scope: !5769)
!5774 = !DILocation(line: 4343, column: 29, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 4343, column: 29)
!5776 = !DILocation(line: 4343, column: 35, scope: !5775)
!5777 = !DILocation(line: 4343, column: 29, scope: !5752)
!5778 = !DILocation(line: 4348, column: 33, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 4344, column: 27)
!5780 = !DILocation(line: 4348, column: 31, scope: !5779)
!5781 = !DILocation(line: 4349, column: 31, scope: !5779)
!5782 = !DILocation(line: 4349, column: 34, scope: !5779)
!5783 = !DILocation(line: 4350, column: 45, scope: !5779)
!5784 = !DILocation(line: 4351, column: 29, scope: !5779)
!5785 = !DILocation(line: 4354, column: 29, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 4354, column: 29)
!5787 = !DILocation(line: 4354, column: 35, scope: !5786)
!5788 = !DILocation(line: 4354, column: 29, scope: !5752)
!5789 = !DILocation(line: 4356, column: 33, scope: !5786)
!5790 = !DILocation(line: 4356, column: 27, scope: !5786)
!5791 = !DILocation(line: 4358, column: 38, scope: !5752)
!5792 = !DILocation(line: 4358, column: 29, scope: !5752)
!5793 = !DILocation(line: 4358, column: 27, scope: !5752)
!5794 = !DILocation(line: 4359, column: 29, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 4359, column: 29)
!5796 = !DILocation(line: 4359, column: 31, scope: !5795)
!5797 = !DILocation(line: 4359, column: 29, scope: !5752)
!5798 = !DILocation(line: 4363, column: 29, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 4360, column: 27)
!5800 = !DILocation(line: 4363, column: 36, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 4363, column: 29)
!5802 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 4363, column: 29)
!5803 = !DILocation(line: 4363, column: 42, scope: !5801)
!5804 = !DILocation(line: 4363, column: 29, scope: !5802)
!5805 = !DILocation(line: 4364, column: 40, scope: !5801)
!5806 = !DILocation(line: 4364, column: 38, scope: !5801)
!5807 = !DILocation(line: 4364, column: 33, scope: !5801)
!5808 = !DILocation(line: 4364, column: 36, scope: !5801)
!5809 = !DILocation(line: 4364, column: 31, scope: !5801)
!5810 = !DILocation(line: 4363, column: 47, scope: !5801)
!5811 = !DILocation(line: 4363, column: 29, scope: !5801)
!5812 = distinct !{!5812, !5804, !5813}
!5813 = !DILocation(line: 4364, column: 40, scope: !5802)
!5814 = !DILocation(line: 4365, column: 48, scope: !5799)
!5815 = !DILocation(line: 4365, column: 45, scope: !5799)
!5816 = !DILocation(line: 4366, column: 27, scope: !5799)
!5817 = !DILocation(line: 4372, column: 34, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 4368, column: 27)
!5819 = !DILocation(line: 4372, column: 31, scope: !5818)
!5820 = !DILocation(line: 4373, column: 31, scope: !5818)
!5821 = !DILocation(line: 4373, column: 34, scope: !5818)
!5822 = !DILocation(line: 4374, column: 45, scope: !5818)
!5823 = !DILocation(line: 4376, column: 23, scope: !5752)
!5824 = !DILocation(line: 4377, column: 30, scope: !5748)
!5825 = !DILocation(line: 4377, column: 28, scope: !5748)
!5826 = distinct !{!5826, !5750, !5827}
!5827 = !DILocation(line: 4377, column: 48, scope: !5748)
!5828 = !DILocation(line: 4379, column: 19, scope: !5741)
!5829 = distinct !{!5829, !5733, !5830}
!5830 = !DILocation(line: 4380, column: 15, scope: !5721)
!5831 = !DILocation(line: 4383, column: 17, scope: !5721)
!5832 = !DILocation(line: 4383, column: 21, scope: !5721)
!5833 = !DILocation(line: 4383, column: 19, scope: !5721)
!5834 = !DILocation(line: 4383, column: 15, scope: !5721)
!5835 = !DILocation(line: 4384, column: 9, scope: !5721)
!5836 = !DILocalVariable(name: "p", scope: !5837, file: !3, line: 4387, type: !143)
!5837 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 4386, column: 9)
!5838 = !DILocation(line: 4387, column: 17, scope: !5837)
!5839 = !DILocation(line: 4387, column: 21, scope: !5837)
!5840 = !DILocalVariable(name: "plimit", scope: !5837, file: !3, line: 4388, type: !146)
!5841 = !DILocation(line: 4388, column: 23, scope: !5837)
!5842 = !DILocation(line: 4388, column: 32, scope: !5837)
!5843 = !DILocation(line: 4388, column: 38, scope: !5837)
!5844 = !DILocation(line: 4388, column: 36, scope: !5837)
!5845 = !DILocation(line: 4390, column: 11, scope: !5837)
!5846 = !DILocation(line: 4390, column: 18, scope: !5837)
!5847 = !DILocation(line: 4390, column: 22, scope: !5837)
!5848 = !DILocation(line: 4390, column: 20, scope: !5837)
!5849 = !DILocation(line: 4392, column: 21, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 4392, column: 19)
!5851 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 4391, column: 13)
!5852 = !{!2889, !2889, i64 0}
!5853 = !DILocation(line: 4392, column: 19, scope: !5851)
!5854 = !DILocation(line: 4393, column: 18, scope: !5850)
!5855 = !DILocation(line: 4393, column: 20, scope: !5850)
!5856 = !DILocation(line: 4393, column: 17, scope: !5850)
!5857 = !DILocation(line: 4394, column: 16, scope: !5851)
!5858 = distinct !{!5858, !5845, !5859}
!5859 = !DILocation(line: 4395, column: 13, scope: !5837)
!5860 = !DILocation(line: 4396, column: 29, scope: !5837)
!5861 = !DILocation(line: 4396, column: 27, scope: !5837)
!5862 = !DILocation(line: 4398, column: 5, scope: !5717)
!5863 = !DILocation(line: 4399, column: 12, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 4399, column: 12)
!5865 = !DILocation(line: 4399, column: 18, scope: !5864)
!5866 = !DILocation(line: 4399, column: 12, scope: !5713)
!5867 = !DILocation(line: 4401, column: 11, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 4401, column: 11)
!5869 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 4400, column: 5)
!5870 = !DILocation(line: 4401, column: 22, scope: !5868)
!5871 = !DILocation(line: 4401, column: 11, scope: !5869)
!5872 = !DILocation(line: 4402, column: 38, scope: !5868)
!5873 = !DILocation(line: 4402, column: 43, scope: !5868)
!5874 = !DILocation(line: 4402, column: 27, scope: !5868)
!5875 = !DILocation(line: 4402, column: 25, scope: !5868)
!5876 = !DILocation(line: 4402, column: 9, scope: !5868)
!5877 = !DILocalVariable(name: "p", scope: !5878, file: !3, line: 4405, type: !146)
!5878 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4404, column: 9)
!5879 = !DILocation(line: 4405, column: 23, scope: !5878)
!5880 = !DILocation(line: 4405, column: 27, scope: !5878)
!5881 = !DILocalVariable(name: "plimit", scope: !5878, file: !3, line: 4406, type: !146)
!5882 = !DILocation(line: 4406, column: 23, scope: !5878)
!5883 = !DILocation(line: 4406, column: 32, scope: !5878)
!5884 = !DILocation(line: 4406, column: 38, scope: !5878)
!5885 = !DILocation(line: 4406, column: 36, scope: !5878)
!5886 = !DILocation(line: 4408, column: 27, scope: !5878)
!5887 = !DILocation(line: 4409, column: 11, scope: !5878)
!5888 = !DILocation(line: 4409, column: 18, scope: !5878)
!5889 = !DILocation(line: 4409, column: 22, scope: !5878)
!5890 = !DILocation(line: 4409, column: 20, scope: !5878)
!5891 = !DILocation(line: 4411, column: 19, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4411, column: 19)
!5893 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 4410, column: 13)
!5894 = !DILocation(line: 4411, column: 19, scope: !5893)
!5895 = !DILocation(line: 4412, column: 32, scope: !5892)
!5896 = !DILocation(line: 4412, column: 17, scope: !5892)
!5897 = !DILocation(line: 4413, column: 16, scope: !5893)
!5898 = distinct !{!5898, !5887, !5899}
!5899 = !DILocation(line: 4414, column: 13, scope: !5878)
!5900 = !DILocation(line: 4416, column: 5, scope: !5869)
!5901 = !DILocation(line: 4421, column: 11, scope: !5599)
!5902 = !DILocation(line: 4421, column: 39, scope: !5599)
!5903 = !DILocation(line: 4421, column: 42, scope: !5599)
!5904 = !DILocation(line: 4421, column: 58, scope: !5599)
!5905 = !DILocation(line: 4421, column: 63, scope: !5599)
!5906 = !DILocation(line: 4421, column: 61, scope: !5599)
!5907 = !DILocation(line: 4421, column: 4, scope: !5599)
!5908 = !DILocation(line: 4421, column: 8, scope: !5599)
!5909 = !DILocation(line: 4423, column: 7, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 4423, column: 7)
!5911 = !DILocation(line: 4423, column: 13, scope: !5910)
!5912 = !DILocation(line: 4423, column: 7, scope: !5599)
!5913 = !DILocation(line: 4424, column: 14, scope: !5910)
!5914 = !DILocation(line: 4424, column: 6, scope: !5910)
!5915 = !DILocation(line: 4424, column: 12, scope: !5910)
!5916 = !DILocation(line: 4424, column: 5, scope: !5910)
!5917 = !DILocation(line: 4426, column: 12, scope: !5599)
!5918 = !DILocation(line: 4426, column: 4, scope: !5599)
!5919 = !DILocation(line: 4426, column: 10, scope: !5599)
!5920 = !DILocation(line: 4428, column: 10, scope: !5599)
!5921 = !DILocation(line: 4428, column: 3, scope: !5599)
!5922 = distinct !DISubprogram(name: "print_color_indicator", scope: !3, file: !3, line: 4665, type: !642, scopeLine: 4666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5923 = !DILocalVariable(name: "ind", arg: 1, scope: !5922, file: !3, line: 4665, type: !394)
!5924 = !DILocation(line: 4665, column: 46, scope: !5922)
!5925 = !DILocation(line: 4667, column: 7, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 4667, column: 7)
!5927 = !DILocation(line: 4667, column: 7, scope: !5922)
!5928 = !DILocation(line: 4670, column: 11, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 4670, column: 11)
!5930 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 4668, column: 5)
!5931 = !DILocation(line: 4670, column: 11, scope: !5930)
!5932 = !DILocation(line: 4671, column: 9, scope: !5929)
!5933 = !DILocation(line: 4672, column: 7, scope: !5930)
!5934 = !DILocation(line: 4673, column: 22, scope: !5930)
!5935 = !DILocation(line: 4673, column: 7, scope: !5930)
!5936 = !DILocation(line: 4674, column: 7, scope: !5930)
!5937 = !DILocation(line: 4675, column: 5, scope: !5930)
!5938 = !DILocation(line: 4677, column: 10, scope: !5922)
!5939 = !DILocation(line: 4677, column: 14, scope: !5922)
!5940 = !DILocation(line: 4677, column: 3, scope: !5922)
!5941 = distinct !DISubprogram(name: "file_escape", scope: !3, file: !3, line: 4454, type: !644, scopeLine: 4455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5942 = !DILocalVariable(name: "str", arg: 1, scope: !5941, file: !3, line: 4454, type: !146)
!5943 = !DILocation(line: 4454, column: 26, scope: !5941)
!5944 = !DILocalVariable(name: "path", arg: 2, scope: !5941, file: !3, line: 4454, type: !141)
!5945 = !DILocation(line: 4454, column: 36, scope: !5941)
!5946 = !DILocalVariable(name: "esc", scope: !5941, file: !3, line: 4456, type: !143)
!5947 = !DILocation(line: 4456, column: 9, scope: !5941)
!5948 = !DILocation(line: 4456, column: 36, scope: !5941)
!5949 = !DILocation(line: 4456, column: 28, scope: !5941)
!5950 = !DILocation(line: 4456, column: 41, scope: !5941)
!5951 = !DILocation(line: 4456, column: 15, scope: !5941)
!5952 = !DILocalVariable(name: "p", scope: !5941, file: !3, line: 4457, type: !143)
!5953 = !DILocation(line: 4457, column: 9, scope: !5941)
!5954 = !DILocation(line: 4457, column: 13, scope: !5941)
!5955 = !DILocation(line: 4458, column: 3, scope: !5941)
!5956 = !DILocation(line: 4458, column: 11, scope: !5941)
!5957 = !DILocation(line: 4458, column: 10, scope: !5941)
!5958 = !DILocation(line: 4460, column: 11, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 4460, column: 11)
!5960 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 4459, column: 5)
!5961 = !DILocation(line: 4460, column: 16, scope: !5959)
!5962 = !DILocation(line: 4460, column: 19, scope: !5959)
!5963 = !DILocation(line: 4460, column: 11, scope: !5960)
!5964 = !DILocation(line: 4462, column: 13, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 4461, column: 9)
!5966 = !DILocation(line: 4462, column: 16, scope: !5965)
!5967 = !DILocation(line: 4463, column: 14, scope: !5965)
!5968 = !DILocation(line: 4464, column: 9, scope: !5965)
!5969 = !DILocation(line: 4465, column: 35, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 4465, column: 16)
!5971 = !DILocation(line: 4465, column: 34, scope: !5970)
!5972 = !DILocation(line: 4465, column: 24, scope: !5970)
!5973 = !DILocation(line: 4465, column: 16, scope: !5970)
!5974 = !DILocation(line: 4465, column: 16, scope: !5959)
!5975 = !DILocation(line: 4466, column: 20, scope: !5970)
!5976 = !DILocation(line: 4466, column: 16, scope: !5970)
!5977 = !DILocation(line: 4466, column: 11, scope: !5970)
!5978 = !DILocation(line: 4466, column: 14, scope: !5970)
!5979 = !DILocation(line: 4466, column: 9, scope: !5970)
!5980 = !DILocation(line: 4468, column: 23, scope: !5970)
!5981 = !DILocation(line: 4468, column: 50, scope: !5970)
!5982 = !DILocation(line: 4468, column: 46, scope: !5970)
!5983 = !DILocation(line: 4468, column: 36, scope: !5970)
!5984 = !DILocation(line: 4468, column: 14, scope: !5970)
!5985 = !DILocation(line: 4468, column: 11, scope: !5970)
!5986 = distinct !{!5986, !5955, !5987}
!5987 = !DILocation(line: 4469, column: 5, scope: !5941)
!5988 = !DILocation(line: 4470, column: 4, scope: !5941)
!5989 = !DILocation(line: 4470, column: 6, scope: !5941)
!5990 = !DILocation(line: 4471, column: 10, scope: !5941)
!5991 = !DILocation(line: 4471, column: 3, scope: !5941)
!5992 = distinct !DISubprogram(name: "to_uchar", scope: !792, file: !792, line: 156, type: !577, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5993 = !DILocalVariable(name: "ch", arg: 1, scope: !5992, file: !792, line: 156, type: !144)
!5994 = !DILocation(line: 156, column: 44, scope: !5992)
!5995 = !DILocation(line: 156, column: 57, scope: !5992)
!5996 = !DILocation(line: 156, column: 50, scope: !5992)
!5997 = distinct !DISubprogram(name: "print_file_name_and_frills", scope: !3, file: !3, line: 4593, type: !718, scopeLine: 4594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5998 = !DILocalVariable(name: "f", arg: 1, scope: !5997, file: !3, line: 4593, type: !182)
!5999 = !DILocation(line: 4593, column: 52, scope: !5997)
!6000 = !DILocalVariable(name: "start_col", arg: 2, scope: !5997, file: !3, line: 4593, type: !149)
!6001 = !DILocation(line: 4593, column: 62, scope: !5997)
!6002 = !DILocalVariable(name: "buf", scope: !5997, file: !3, line: 4595, type: !610)
!6003 = !DILocation(line: 4595, column: 8, scope: !5997)
!6004 = !DILocation(line: 4597, column: 3, scope: !5997)
!6005 = !DILocation(line: 4599, column: 7, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4599, column: 7)
!6007 = !DILocation(line: 4599, column: 7, scope: !5997)
!6008 = !DILocation(line: 4600, column: 21, scope: !6006)
!6009 = !DILocation(line: 4600, column: 28, scope: !6006)
!6010 = !DILocation(line: 4600, column: 49, scope: !6006)
!6011 = !DILocation(line: 4601, column: 27, scope: !6006)
!6012 = !DILocation(line: 4601, column: 44, scope: !6006)
!6013 = !DILocation(line: 4601, column: 13, scope: !6006)
!6014 = !DILocation(line: 4600, column: 5, scope: !6006)
!6015 = !DILocation(line: 4603, column: 7, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4603, column: 7)
!6017 = !DILocation(line: 4603, column: 7, scope: !5997)
!6018 = !DILocation(line: 4604, column: 21, scope: !6016)
!6019 = !DILocation(line: 4604, column: 28, scope: !6016)
!6020 = !DILocation(line: 4604, column: 49, scope: !6016)
!6021 = !DILocation(line: 4605, column: 15, scope: !6016)
!6022 = !DILocation(line: 4605, column: 18, scope: !6016)
!6023 = !DILocation(line: 4605, column: 13, scope: !6016)
!6024 = !DILocation(line: 4606, column: 31, scope: !6016)
!6025 = !DILocation(line: 4606, column: 53, scope: !6016)
!6026 = !DILocation(line: 4606, column: 58, scope: !6016)
!6027 = !DILocation(line: 4607, column: 46, scope: !6016)
!6028 = !DILocation(line: 4606, column: 15, scope: !6016)
!6029 = !DILocation(line: 4604, column: 5, scope: !6016)
!6030 = !DILocation(line: 4609, column: 7, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4609, column: 7)
!6032 = !DILocation(line: 4609, column: 7, scope: !5997)
!6033 = !DILocation(line: 4610, column: 21, scope: !6031)
!6034 = !DILocation(line: 4610, column: 28, scope: !6031)
!6035 = !DILocation(line: 4610, column: 49, scope: !6031)
!6036 = !DILocation(line: 4610, column: 65, scope: !6031)
!6037 = !DILocation(line: 4610, column: 68, scope: !6031)
!6038 = !DILocation(line: 4610, column: 5, scope: !6031)
!6039 = !DILocalVariable(name: "width", scope: !5997, file: !3, line: 4612, type: !149)
!6040 = !DILocation(line: 4612, column: 10, scope: !5997)
!6041 = !DILocation(line: 4612, column: 43, scope: !5997)
!6042 = !DILocation(line: 4612, column: 59, scope: !5997)
!6043 = !DILocation(line: 4612, column: 18, scope: !5997)
!6044 = !DILocation(line: 4614, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4614, column: 7)
!6046 = !DILocation(line: 4614, column: 23, scope: !6045)
!6047 = !DILocation(line: 4614, column: 7, scope: !5997)
!6048 = !DILocation(line: 4615, column: 36, scope: !6045)
!6049 = !DILocation(line: 4615, column: 39, scope: !6045)
!6050 = !DILocation(line: 4615, column: 48, scope: !6045)
!6051 = !DILocation(line: 4615, column: 51, scope: !6045)
!6052 = !DILocation(line: 4615, column: 56, scope: !6045)
!6053 = !DILocation(line: 4615, column: 65, scope: !6045)
!6054 = !DILocation(line: 4615, column: 68, scope: !6045)
!6055 = !DILocation(line: 4615, column: 14, scope: !6045)
!6056 = !DILocation(line: 4615, column: 11, scope: !6045)
!6057 = !DILocation(line: 4615, column: 5, scope: !6045)
!6058 = !DILocation(line: 4617, column: 10, scope: !5997)
!6059 = !DILocation(line: 4617, column: 3, scope: !5997)
!6060 = distinct !DISubprogram(name: "print_with_separator", scope: !3, file: !3, line: 4923, type: !732, scopeLine: 4924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6061 = !DILocalVariable(name: "sep", arg: 1, scope: !6060, file: !3, line: 4923, type: !144)
!6062 = !DILocation(line: 4923, column: 28, scope: !6060)
!6063 = !DILocalVariable(name: "filesno", scope: !6060, file: !3, line: 4925, type: !149)
!6064 = !DILocation(line: 4925, column: 10, scope: !6060)
!6065 = !DILocalVariable(name: "pos", scope: !6060, file: !3, line: 4926, type: !149)
!6066 = !DILocation(line: 4926, column: 10, scope: !6060)
!6067 = !DILocation(line: 4928, column: 16, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 4928, column: 3)
!6069 = !DILocation(line: 4928, column: 8, scope: !6068)
!6070 = !DILocation(line: 4928, column: 21, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 4928, column: 3)
!6072 = !DILocation(line: 4928, column: 31, scope: !6071)
!6073 = !DILocation(line: 4928, column: 29, scope: !6071)
!6074 = !DILocation(line: 4928, column: 3, scope: !6068)
!6075 = !DILocalVariable(name: "f", scope: !6076, file: !3, line: 4930, type: !182)
!6076 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 4929, column: 5)
!6077 = !DILocation(line: 4930, column: 30, scope: !6076)
!6078 = !DILocation(line: 4930, column: 34, scope: !6076)
!6079 = !DILocation(line: 4930, column: 46, scope: !6076)
!6080 = !DILocalVariable(name: "len", scope: !6076, file: !3, line: 4931, type: !149)
!6081 = !DILocation(line: 4931, column: 14, scope: !6076)
!6082 = !DILocation(line: 4931, column: 20, scope: !6076)
!6083 = !DILocation(line: 4931, column: 66, scope: !6076)
!6084 = !DILocation(line: 4931, column: 34, scope: !6076)
!6085 = !DILocation(line: 4933, column: 11, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 4933, column: 11)
!6087 = !DILocation(line: 4933, column: 19, scope: !6086)
!6088 = !DILocation(line: 4933, column: 11, scope: !6076)
!6089 = !DILocalVariable(name: "separator", scope: !6090, file: !3, line: 4935, type: !144)
!6090 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 4934, column: 9)
!6091 = !DILocation(line: 4935, column: 16, scope: !6090)
!6092 = !DILocation(line: 4937, column: 17, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 4937, column: 15)
!6094 = !DILocation(line: 4938, column: 15, scope: !6093)
!6095 = !DILocation(line: 4938, column: 20, scope: !6093)
!6096 = !DILocation(line: 4938, column: 26, scope: !6093)
!6097 = !DILocation(line: 4938, column: 24, scope: !6093)
!6098 = !DILocation(line: 4938, column: 30, scope: !6093)
!6099 = !DILocation(line: 4938, column: 36, scope: !6093)
!6100 = !DILocation(line: 4938, column: 34, scope: !6093)
!6101 = !DILocation(line: 4939, column: 19, scope: !6093)
!6102 = !DILocation(line: 4939, column: 23, scope: !6093)
!6103 = !DILocation(line: 4939, column: 41, scope: !6093)
!6104 = !DILocation(line: 4939, column: 39, scope: !6093)
!6105 = !DILocation(line: 4939, column: 45, scope: !6093)
!6106 = !DILocation(line: 4939, column: 27, scope: !6093)
!6107 = !DILocation(line: 4937, column: 15, scope: !6090)
!6108 = !DILocation(line: 4941, column: 19, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4940, column: 13)
!6110 = !DILocation(line: 4942, column: 25, scope: !6109)
!6111 = !DILocation(line: 4943, column: 13, scope: !6109)
!6112 = !DILocation(line: 4946, column: 19, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4945, column: 13)
!6114 = !DILocation(line: 4947, column: 25, scope: !6113)
!6115 = !DILocation(line: 4950, column: 11, scope: !6090)
!6116 = !DILocation(line: 4951, column: 11, scope: !6090)
!6117 = !DILocation(line: 4952, column: 9, scope: !6090)
!6118 = !DILocation(line: 4954, column: 35, scope: !6076)
!6119 = !DILocation(line: 4954, column: 38, scope: !6076)
!6120 = !DILocation(line: 4954, column: 7, scope: !6076)
!6121 = !DILocation(line: 4955, column: 14, scope: !6076)
!6122 = !DILocation(line: 4955, column: 11, scope: !6076)
!6123 = !DILocation(line: 4956, column: 5, scope: !6076)
!6124 = !DILocation(line: 4928, column: 50, scope: !6071)
!6125 = !DILocation(line: 4928, column: 3, scope: !6071)
!6126 = distinct !{!6126, !6074, !6127}
!6127 = !DILocation(line: 4956, column: 5, scope: !6068)
!6128 = !DILocation(line: 4957, column: 3, scope: !6060)
!6129 = !DILocation(line: 4958, column: 1, scope: !6060)
!6130 = distinct !DISubprogram(name: "print_many_per_line", scope: !3, file: !3, line: 4846, type: !336, scopeLine: 4847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6131 = !DILocalVariable(name: "row", scope: !6130, file: !3, line: 4848, type: !149)
!6132 = !DILocation(line: 4848, column: 10, scope: !6130)
!6133 = !DILocalVariable(name: "cols", scope: !6130, file: !3, line: 4849, type: !149)
!6134 = !DILocation(line: 4849, column: 10, scope: !6130)
!6135 = !DILocation(line: 4849, column: 17, scope: !6130)
!6136 = !DILocalVariable(name: "line_fmt", scope: !6130, file: !3, line: 4850, type: !738)
!6137 = !DILocation(line: 4850, column: 29, scope: !6130)
!6138 = !DILocation(line: 4850, column: 41, scope: !6130)
!6139 = !DILocation(line: 4850, column: 53, scope: !6130)
!6140 = !DILocation(line: 4850, column: 58, scope: !6130)
!6141 = !DILocalVariable(name: "rows", scope: !6130, file: !3, line: 4854, type: !149)
!6142 = !DILocation(line: 4854, column: 10, scope: !6130)
!6143 = !DILocation(line: 4854, column: 17, scope: !6130)
!6144 = !DILocation(line: 4854, column: 30, scope: !6130)
!6145 = !DILocation(line: 4854, column: 28, scope: !6130)
!6146 = !DILocation(line: 4854, column: 38, scope: !6130)
!6147 = !DILocation(line: 4854, column: 51, scope: !6130)
!6148 = !DILocation(line: 4854, column: 49, scope: !6130)
!6149 = !DILocation(line: 4854, column: 56, scope: !6130)
!6150 = !DILocation(line: 4854, column: 37, scope: !6130)
!6151 = !DILocation(line: 4854, column: 35, scope: !6130)
!6152 = !DILocation(line: 4856, column: 12, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 4856, column: 3)
!6154 = !DILocation(line: 4856, column: 8, scope: !6153)
!6155 = !DILocation(line: 4856, column: 17, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 4856, column: 3)
!6157 = !DILocation(line: 4856, column: 23, scope: !6156)
!6158 = !DILocation(line: 4856, column: 21, scope: !6156)
!6159 = !DILocation(line: 4856, column: 3, scope: !6153)
!6160 = !DILocalVariable(name: "col", scope: !6161, file: !3, line: 4858, type: !149)
!6161 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 4857, column: 5)
!6162 = !DILocation(line: 4858, column: 14, scope: !6161)
!6163 = !DILocalVariable(name: "filesno", scope: !6161, file: !3, line: 4859, type: !149)
!6164 = !DILocation(line: 4859, column: 14, scope: !6161)
!6165 = !DILocation(line: 4859, column: 24, scope: !6161)
!6166 = !DILocalVariable(name: "pos", scope: !6161, file: !3, line: 4860, type: !149)
!6167 = !DILocation(line: 4860, column: 14, scope: !6161)
!6168 = !DILocation(line: 4863, column: 7, scope: !6161)
!6169 = !DILocalVariable(name: "f", scope: !6170, file: !3, line: 4865, type: !182)
!6170 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 4864, column: 9)
!6171 = !DILocation(line: 4865, column: 34, scope: !6170)
!6172 = !DILocation(line: 4865, column: 38, scope: !6170)
!6173 = !DILocation(line: 4865, column: 50, scope: !6170)
!6174 = !DILocalVariable(name: "name_length", scope: !6170, file: !3, line: 4866, type: !149)
!6175 = !DILocation(line: 4866, column: 18, scope: !6170)
!6176 = !DILocation(line: 4866, column: 64, scope: !6170)
!6177 = !DILocation(line: 4866, column: 32, scope: !6170)
!6178 = !DILocalVariable(name: "max_name_length", scope: !6170, file: !3, line: 4867, type: !149)
!6179 = !DILocation(line: 4867, column: 18, scope: !6170)
!6180 = !DILocation(line: 4867, column: 36, scope: !6170)
!6181 = !DILocation(line: 4867, column: 46, scope: !6170)
!6182 = !{!6183, !2475, i64 16}
!6183 = !{!"column_info", !2494, i64 0, !2499, i64 8, !2475, i64 16}
!6184 = !DILocation(line: 4867, column: 57, scope: !6170)
!6185 = !DILocation(line: 4868, column: 39, scope: !6170)
!6186 = !DILocation(line: 4868, column: 42, scope: !6170)
!6187 = !DILocation(line: 4868, column: 11, scope: !6170)
!6188 = !DILocation(line: 4870, column: 22, scope: !6170)
!6189 = !DILocation(line: 4870, column: 19, scope: !6170)
!6190 = !DILocation(line: 4871, column: 15, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 4871, column: 15)
!6192 = !DILocation(line: 4871, column: 26, scope: !6191)
!6193 = !DILocation(line: 4871, column: 23, scope: !6191)
!6194 = !DILocation(line: 4871, column: 15, scope: !6170)
!6195 = !DILocation(line: 4872, column: 13, scope: !6191)
!6196 = !DILocation(line: 4874, column: 19, scope: !6170)
!6197 = !DILocation(line: 4874, column: 25, scope: !6170)
!6198 = !DILocation(line: 4874, column: 23, scope: !6170)
!6199 = !DILocation(line: 4874, column: 38, scope: !6170)
!6200 = !DILocation(line: 4874, column: 44, scope: !6170)
!6201 = !DILocation(line: 4874, column: 42, scope: !6170)
!6202 = !DILocation(line: 4874, column: 11, scope: !6170)
!6203 = !DILocation(line: 4875, column: 18, scope: !6170)
!6204 = !DILocation(line: 4875, column: 15, scope: !6170)
!6205 = distinct !{!6205, !6168, !6206}
!6206 = !DILocation(line: 4876, column: 9, scope: !6161)
!6207 = !DILocation(line: 4877, column: 7, scope: !6161)
!6208 = !DILocation(line: 4878, column: 5, scope: !6161)
!6209 = !DILocation(line: 4856, column: 32, scope: !6156)
!6210 = !DILocation(line: 4856, column: 3, scope: !6156)
!6211 = distinct !{!6211, !6159, !6212}
!6212 = !DILocation(line: 4878, column: 5, scope: !6153)
!6213 = !DILocation(line: 4879, column: 1, scope: !6130)
!6214 = distinct !DISubprogram(name: "print_horizontal", scope: !3, file: !3, line: 4882, type: !336, scopeLine: 4883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6215 = !DILocalVariable(name: "filesno", scope: !6214, file: !3, line: 4884, type: !149)
!6216 = !DILocation(line: 4884, column: 10, scope: !6214)
!6217 = !DILocalVariable(name: "pos", scope: !6214, file: !3, line: 4885, type: !149)
!6218 = !DILocation(line: 4885, column: 10, scope: !6214)
!6219 = !DILocalVariable(name: "cols", scope: !6214, file: !3, line: 4886, type: !149)
!6220 = !DILocation(line: 4886, column: 10, scope: !6214)
!6221 = !DILocation(line: 4886, column: 17, scope: !6214)
!6222 = !DILocalVariable(name: "line_fmt", scope: !6214, file: !3, line: 4887, type: !738)
!6223 = !DILocation(line: 4887, column: 29, scope: !6214)
!6224 = !DILocation(line: 4887, column: 41, scope: !6214)
!6225 = !DILocation(line: 4887, column: 53, scope: !6214)
!6226 = !DILocation(line: 4887, column: 58, scope: !6214)
!6227 = !DILocalVariable(name: "f", scope: !6214, file: !3, line: 4888, type: !182)
!6228 = !DILocation(line: 4888, column: 26, scope: !6214)
!6229 = !DILocation(line: 4888, column: 30, scope: !6214)
!6230 = !DILocalVariable(name: "name_length", scope: !6214, file: !3, line: 4889, type: !149)
!6231 = !DILocation(line: 4889, column: 10, scope: !6214)
!6232 = !DILocation(line: 4889, column: 56, scope: !6214)
!6233 = !DILocation(line: 4889, column: 24, scope: !6214)
!6234 = !DILocalVariable(name: "max_name_length", scope: !6214, file: !3, line: 4890, type: !149)
!6235 = !DILocation(line: 4890, column: 10, scope: !6214)
!6236 = !DILocation(line: 4890, column: 28, scope: !6214)
!6237 = !DILocation(line: 4890, column: 38, scope: !6214)
!6238 = !DILocation(line: 4893, column: 31, scope: !6214)
!6239 = !DILocation(line: 4893, column: 3, scope: !6214)
!6240 = !DILocation(line: 4896, column: 16, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 4896, column: 3)
!6242 = !DILocation(line: 4896, column: 8, scope: !6241)
!6243 = !DILocation(line: 4896, column: 21, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 4896, column: 3)
!6245 = !DILocation(line: 4896, column: 31, scope: !6244)
!6246 = !DILocation(line: 4896, column: 29, scope: !6244)
!6247 = !DILocation(line: 4896, column: 3, scope: !6241)
!6248 = !DILocalVariable(name: "col", scope: !6249, file: !3, line: 4898, type: !149)
!6249 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 4897, column: 5)
!6250 = !DILocation(line: 4898, column: 14, scope: !6249)
!6251 = !DILocation(line: 4898, column: 20, scope: !6249)
!6252 = !DILocation(line: 4898, column: 30, scope: !6249)
!6253 = !DILocation(line: 4898, column: 28, scope: !6249)
!6254 = !DILocation(line: 4900, column: 11, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 4900, column: 11)
!6256 = !DILocation(line: 4900, column: 15, scope: !6255)
!6257 = !DILocation(line: 4900, column: 11, scope: !6249)
!6258 = !DILocation(line: 4902, column: 11, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 4901, column: 9)
!6260 = !DILocation(line: 4903, column: 15, scope: !6259)
!6261 = !DILocation(line: 4904, column: 9, scope: !6259)
!6262 = !DILocation(line: 4907, column: 19, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 4906, column: 9)
!6264 = !DILocation(line: 4907, column: 25, scope: !6263)
!6265 = !DILocation(line: 4907, column: 23, scope: !6263)
!6266 = !DILocation(line: 4907, column: 38, scope: !6263)
!6267 = !DILocation(line: 4907, column: 44, scope: !6263)
!6268 = !DILocation(line: 4907, column: 42, scope: !6263)
!6269 = !DILocation(line: 4907, column: 11, scope: !6263)
!6270 = !DILocation(line: 4908, column: 18, scope: !6263)
!6271 = !DILocation(line: 4908, column: 15, scope: !6263)
!6272 = !DILocation(line: 4911, column: 11, scope: !6249)
!6273 = !DILocation(line: 4911, column: 23, scope: !6249)
!6274 = !DILocation(line: 4911, column: 9, scope: !6249)
!6275 = !DILocation(line: 4912, column: 35, scope: !6249)
!6276 = !DILocation(line: 4912, column: 38, scope: !6249)
!6277 = !DILocation(line: 4912, column: 7, scope: !6249)
!6278 = !DILocation(line: 4914, column: 53, scope: !6249)
!6279 = !DILocation(line: 4914, column: 21, scope: !6249)
!6280 = !DILocation(line: 4914, column: 19, scope: !6249)
!6281 = !DILocation(line: 4915, column: 25, scope: !6249)
!6282 = !DILocation(line: 4915, column: 35, scope: !6249)
!6283 = !DILocation(line: 4915, column: 43, scope: !6249)
!6284 = !DILocation(line: 4915, column: 23, scope: !6249)
!6285 = !DILocation(line: 4916, column: 5, scope: !6249)
!6286 = !DILocation(line: 4896, column: 43, scope: !6244)
!6287 = !DILocation(line: 4896, column: 3, scope: !6244)
!6288 = distinct !{!6288, !6247, !6289}
!6289 = !DILocation(line: 4916, column: 5, scope: !6241)
!6290 = !DILocation(line: 4917, column: 3, scope: !6214)
!6291 = !DILocation(line: 4918, column: 1, scope: !6214)
!6292 = distinct !DISubprogram(name: "set_normal_color", scope: !3, file: !3, line: 1273, type: !336, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6293 = !DILocation(line: 1275, column: 7, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1275, column: 7)
!6295 = !DILocation(line: 1275, column: 24, scope: !6294)
!6296 = !DILocation(line: 1275, column: 27, scope: !6294)
!6297 = !DILocation(line: 1275, column: 7, scope: !6292)
!6298 = !DILocation(line: 1277, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 1276, column: 5)
!6300 = !DILocation(line: 1278, column: 7, scope: !6299)
!6301 = !DILocation(line: 1279, column: 7, scope: !6299)
!6302 = !DILocation(line: 1280, column: 5, scope: !6299)
!6303 = !DILocation(line: 1281, column: 1, scope: !6292)
!6304 = distinct !DISubprogram(name: "print_long_format", scope: !3, file: !3, line: 4020, type: !750, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6305 = !DILocalVariable(name: "f", arg: 1, scope: !6304, file: !3, line: 4020, type: !182)
!6306 = !DILocation(line: 4020, column: 43, scope: !6304)
!6307 = !DILocalVariable(name: "modebuf", scope: !6304, file: !3, line: 4022, type: !752)
!6308 = !DILocation(line: 4022, column: 8, scope: !6304)
!6309 = !DILocalVariable(name: "buf", scope: !6304, file: !3, line: 4023, type: !753)
!6310 = !DILocation(line: 4023, column: 8, scope: !6304)
!6311 = !DILocalVariable(name: "s", scope: !6304, file: !3, line: 4032, type: !149)
!6312 = !DILocation(line: 4032, column: 10, scope: !6304)
!6313 = !DILocalVariable(name: "p", scope: !6304, file: !3, line: 4033, type: !143)
!6314 = !DILocation(line: 4033, column: 9, scope: !6304)
!6315 = !DILocalVariable(name: "when_timespec", scope: !6304, file: !3, line: 4034, type: !213)
!6316 = !DILocation(line: 4034, column: 19, scope: !6304)
!6317 = !DILocalVariable(name: "when_local", scope: !6304, file: !3, line: 4035, type: !769)
!6318 = !DILocation(line: 4035, column: 13, scope: !6304)
!6319 = !DILocation(line: 4039, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4039, column: 7)
!6321 = !DILocation(line: 4039, column: 10, scope: !6320)
!6322 = !DILocation(line: 4039, column: 7, scope: !6304)
!6323 = !DILocation(line: 4040, column: 22, scope: !6320)
!6324 = !DILocation(line: 4040, column: 25, scope: !6320)
!6325 = !DILocation(line: 4040, column: 31, scope: !6320)
!6326 = !DILocation(line: 4040, column: 5, scope: !6320)
!6327 = !DILocation(line: 4043, column: 36, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 4042, column: 5)
!6329 = !DILocation(line: 4043, column: 39, scope: !6328)
!6330 = !DILocation(line: 4043, column: 20, scope: !6328)
!6331 = !DILocation(line: 4043, column: 7, scope: !6328)
!6332 = !DILocation(line: 4043, column: 18, scope: !6328)
!6333 = !DILocation(line: 4044, column: 15, scope: !6328)
!6334 = !DILocation(line: 4044, column: 23, scope: !6328)
!6335 = !DILocation(line: 4044, column: 7, scope: !6328)
!6336 = !DILocation(line: 4045, column: 7, scope: !6328)
!6337 = !DILocation(line: 4045, column: 19, scope: !6328)
!6338 = !DILocation(line: 4047, column: 9, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4047, column: 7)
!6340 = !DILocation(line: 4047, column: 7, scope: !6304)
!6341 = !DILocation(line: 4048, column: 5, scope: !6339)
!6342 = !DILocation(line: 4048, column: 17, scope: !6339)
!6343 = !DILocation(line: 4049, column: 12, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 4049, column: 12)
!6345 = !DILocation(line: 4049, column: 15, scope: !6344)
!6346 = !DILocation(line: 4049, column: 24, scope: !6344)
!6347 = !DILocation(line: 4049, column: 12, scope: !6339)
!6348 = !DILocation(line: 4050, column: 5, scope: !6344)
!6349 = !DILocation(line: 4050, column: 17, scope: !6344)
!6350 = !DILocation(line: 4051, column: 12, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 4051, column: 12)
!6352 = !DILocation(line: 4051, column: 15, scope: !6351)
!6353 = !DILocation(line: 4051, column: 24, scope: !6351)
!6354 = !DILocation(line: 4051, column: 12, scope: !6344)
!6355 = !DILocation(line: 4052, column: 5, scope: !6351)
!6356 = !DILocation(line: 4052, column: 17, scope: !6351)
!6357 = !DILocation(line: 4054, column: 11, scope: !6304)
!6358 = !DILocation(line: 4054, column: 3, scope: !6304)
!6359 = !DILocation(line: 4057, column: 40, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4055, column: 5)
!6361 = !DILocation(line: 4057, column: 43, scope: !6360)
!6362 = !DILocation(line: 4057, column: 23, scope: !6360)
!6363 = !DILocation(line: 4058, column: 7, scope: !6360)
!6364 = !DILocation(line: 4060, column: 40, scope: !6360)
!6365 = !DILocation(line: 4060, column: 43, scope: !6360)
!6366 = !DILocation(line: 4060, column: 23, scope: !6360)
!6367 = !DILocation(line: 4061, column: 7, scope: !6360)
!6368 = !DILocation(line: 4063, column: 40, scope: !6360)
!6369 = !DILocation(line: 4063, column: 43, scope: !6360)
!6370 = !DILocation(line: 4063, column: 23, scope: !6360)
!6371 = !DILocation(line: 4064, column: 7, scope: !6360)
!6372 = !DILocation(line: 4066, column: 7, scope: !6360)
!6373 = !DILocation(line: 4069, column: 7, scope: !6304)
!6374 = !DILocation(line: 4069, column: 5, scope: !6304)
!6375 = !DILocation(line: 4071, column: 7, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4071, column: 7)
!6377 = !DILocation(line: 4071, column: 7, scope: !6304)
!6378 = !DILocalVariable(name: "hbuf", scope: !6379, file: !3, line: 4073, type: !656)
!6379 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 4072, column: 5)
!6380 = !DILocation(line: 4073, column: 12, scope: !6379)
!6381 = !DILocation(line: 4074, column: 16, scope: !6379)
!6382 = !DILocation(line: 4074, column: 27, scope: !6379)
!6383 = !DILocation(line: 4075, column: 30, scope: !6379)
!6384 = !DILocation(line: 4075, column: 49, scope: !6379)
!6385 = !DILocation(line: 4075, column: 16, scope: !6379)
!6386 = !DILocation(line: 4074, column: 7, scope: !6379)
!6387 = !DILocation(line: 4078, column: 20, scope: !6379)
!6388 = !DILocation(line: 4078, column: 12, scope: !6379)
!6389 = !DILocation(line: 4078, column: 9, scope: !6379)
!6390 = !DILocation(line: 4079, column: 5, scope: !6379)
!6391 = !DILocation(line: 4081, column: 7, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4081, column: 7)
!6393 = !DILocation(line: 4081, column: 7, scope: !6304)
!6394 = !DILocalVariable(name: "hbuf", scope: !6395, file: !3, line: 4083, type: !610)
!6395 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 4082, column: 5)
!6396 = !DILocation(line: 4083, column: 12, scope: !6395)
!6397 = !DILocalVariable(name: "blocks", scope: !6395, file: !3, line: 4084, type: !146)
!6398 = !DILocation(line: 4084, column: 19, scope: !6395)
!6399 = !DILocation(line: 4085, column: 12, scope: !6395)
!6400 = !DILocation(line: 4085, column: 15, scope: !6395)
!6401 = !DILocation(line: 4085, column: 10, scope: !6395)
!6402 = !DILocation(line: 4087, column: 28, scope: !6395)
!6403 = !DILocation(line: 4087, column: 50, scope: !6395)
!6404 = !DILocation(line: 4087, column: 56, scope: !6395)
!6405 = !DILocation(line: 4088, column: 43, scope: !6395)
!6406 = !DILocation(line: 4087, column: 12, scope: !6395)
!6407 = !DILocalVariable(name: "pad", scope: !6395, file: !3, line: 4089, type: !27)
!6408 = !DILocation(line: 4089, column: 11, scope: !6395)
!6409 = !DILocation(line: 4090, column: 18, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 4090, column: 7)
!6411 = !DILocation(line: 4090, column: 47, scope: !6410)
!6412 = !DILocation(line: 4090, column: 37, scope: !6410)
!6413 = !DILocation(line: 4090, column: 35, scope: !6410)
!6414 = !DILocation(line: 4090, column: 16, scope: !6410)
!6415 = !DILocation(line: 4090, column: 12, scope: !6410)
!6416 = !DILocation(line: 4090, column: 63, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 4090, column: 7)
!6418 = !DILocation(line: 4090, column: 61, scope: !6417)
!6419 = !DILocation(line: 4090, column: 7, scope: !6410)
!6420 = !DILocation(line: 4091, column: 11, scope: !6417)
!6421 = !DILocation(line: 4091, column: 14, scope: !6417)
!6422 = !DILocation(line: 4091, column: 9, scope: !6417)
!6423 = !DILocation(line: 4090, column: 71, scope: !6417)
!6424 = !DILocation(line: 4090, column: 7, scope: !6417)
!6425 = distinct !{!6425, !6419, !6426}
!6426 = !DILocation(line: 4091, column: 16, scope: !6410)
!6427 = !DILocation(line: 4092, column: 7, scope: !6395)
!6428 = !DILocation(line: 4092, column: 29, scope: !6395)
!6429 = !DILocation(line: 4092, column: 22, scope: !6395)
!6430 = !DILocation(line: 4092, column: 17, scope: !6395)
!6431 = !DILocation(line: 4092, column: 20, scope: !6395)
!6432 = !DILocation(line: 4093, column: 9, scope: !6395)
!6433 = distinct !{!6433, !6427, !6432}
!6434 = !DILocation(line: 4094, column: 7, scope: !6395)
!6435 = !DILocation(line: 4094, column: 13, scope: !6395)
!6436 = !DILocation(line: 4095, column: 5, scope: !6395)
!6437 = !DILocalVariable(name: "hbuf", scope: !6438, file: !3, line: 4100, type: !656)
!6438 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4099, column: 3)
!6439 = !DILocation(line: 4100, column: 10, scope: !6438)
!6440 = !DILocation(line: 4101, column: 14, scope: !6438)
!6441 = !DILocation(line: 4101, column: 28, scope: !6438)
!6442 = !DILocation(line: 4101, column: 37, scope: !6438)
!6443 = !DILocation(line: 4102, column: 16, scope: !6438)
!6444 = !DILocation(line: 4102, column: 19, scope: !6438)
!6445 = !DILocation(line: 4102, column: 14, scope: !6438)
!6446 = !DILocation(line: 4102, column: 46, scope: !6438)
!6447 = !DILocation(line: 4102, column: 49, scope: !6438)
!6448 = !DILocation(line: 4102, column: 54, scope: !6438)
!6449 = !DILocation(line: 4102, column: 64, scope: !6438)
!6450 = !DILocation(line: 4102, column: 35, scope: !6438)
!6451 = !DILocation(line: 4101, column: 5, scope: !6438)
!6452 = !DILocation(line: 4107, column: 16, scope: !6304)
!6453 = !DILocation(line: 4107, column: 8, scope: !6304)
!6454 = !DILocation(line: 4107, column: 5, scope: !6304)
!6455 = !DILocation(line: 4109, column: 3, scope: !6304)
!6456 = !DILocation(line: 4109, column: 3, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 4109, column: 3)
!6458 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4109, column: 3)
!6459 = !DILocation(line: 4109, column: 3, scope: !6458)
!6460 = !DILocation(line: 4109, column: 3, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 4109, column: 3)
!6462 = !DILocation(line: 4111, column: 7, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4111, column: 7)
!6464 = !DILocation(line: 4111, column: 19, scope: !6463)
!6465 = !DILocation(line: 4111, column: 22, scope: !6463)
!6466 = !DILocation(line: 4111, column: 34, scope: !6463)
!6467 = !DILocation(line: 4111, column: 37, scope: !6463)
!6468 = !DILocation(line: 4111, column: 50, scope: !6463)
!6469 = !DILocation(line: 4111, column: 53, scope: !6463)
!6470 = !DILocation(line: 4111, column: 7, scope: !6304)
!6471 = !DILocation(line: 4113, column: 7, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 4112, column: 5)
!6473 = !DILocation(line: 4113, column: 7, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4113, column: 7)
!6475 = !DILocation(line: 4115, column: 11, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4115, column: 11)
!6477 = !DILocation(line: 4115, column: 11, scope: !6472)
!6478 = !DILocation(line: 4116, column: 22, scope: !6476)
!6479 = !DILocation(line: 4116, column: 25, scope: !6476)
!6480 = !DILocation(line: 4116, column: 30, scope: !6476)
!6481 = !DILocation(line: 4116, column: 38, scope: !6476)
!6482 = !DILocation(line: 4116, column: 51, scope: !6476)
!6483 = !DILocation(line: 4116, column: 54, scope: !6476)
!6484 = !DILocation(line: 4116, column: 9, scope: !6476)
!6485 = !DILocation(line: 4118, column: 11, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4118, column: 11)
!6487 = !DILocation(line: 4118, column: 11, scope: !6472)
!6488 = !DILocation(line: 4119, column: 23, scope: !6486)
!6489 = !DILocation(line: 4119, column: 26, scope: !6486)
!6490 = !DILocation(line: 4119, column: 31, scope: !6486)
!6491 = !DILocation(line: 4119, column: 39, scope: !6486)
!6492 = !DILocation(line: 4119, column: 52, scope: !6486)
!6493 = !DILocation(line: 4119, column: 55, scope: !6486)
!6494 = !DILocation(line: 4119, column: 9, scope: !6486)
!6495 = !DILocation(line: 4121, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4121, column: 11)
!6497 = !DILocation(line: 4121, column: 11, scope: !6472)
!6498 = !DILocation(line: 4122, column: 22, scope: !6496)
!6499 = !DILocation(line: 4122, column: 25, scope: !6496)
!6500 = !DILocation(line: 4122, column: 30, scope: !6496)
!6501 = !DILocation(line: 4122, column: 41, scope: !6496)
!6502 = !DILocation(line: 4122, column: 55, scope: !6496)
!6503 = !DILocation(line: 4122, column: 58, scope: !6496)
!6504 = !DILocation(line: 4122, column: 9, scope: !6496)
!6505 = !DILocation(line: 4124, column: 11, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4124, column: 11)
!6507 = !DILocation(line: 4124, column: 11, scope: !6472)
!6508 = !DILocation(line: 4125, column: 31, scope: !6506)
!6509 = !DILocation(line: 4125, column: 34, scope: !6506)
!6510 = !DILocation(line: 4125, column: 47, scope: !6506)
!6511 = !DILocation(line: 4125, column: 9, scope: !6506)
!6512 = !DILocation(line: 4127, column: 11, scope: !6472)
!6513 = !DILocation(line: 4127, column: 9, scope: !6472)
!6514 = !DILocation(line: 4128, column: 5, scope: !6472)
!6515 = !DILocation(line: 4130, column: 7, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4130, column: 7)
!6517 = !DILocation(line: 4130, column: 10, scope: !6516)
!6518 = !DILocation(line: 4131, column: 7, scope: !6516)
!6519 = !DILocation(line: 4131, column: 11, scope: !6516)
!6520 = !DILocation(line: 4131, column: 37, scope: !6516)
!6521 = !DILocation(line: 4131, column: 40, scope: !6516)
!6522 = !DILocation(line: 4130, column: 7, scope: !6304)
!6523 = !DILocalVariable(name: "majorbuf", scope: !6524, file: !3, line: 4133, type: !656)
!6524 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 4132, column: 5)
!6525 = !DILocation(line: 4133, column: 12, scope: !6524)
!6526 = !DILocalVariable(name: "minorbuf", scope: !6524, file: !3, line: 4134, type: !656)
!6527 = !DILocation(line: 4134, column: 12, scope: !6524)
!6528 = !DILocalVariable(name: "blanks_width", scope: !6524, file: !3, line: 4135, type: !27)
!6529 = !DILocation(line: 4135, column: 11, scope: !6524)
!6530 = !DILocation(line: 4135, column: 27, scope: !6524)
!6531 = !DILocation(line: 4136, column: 30, scope: !6524)
!6532 = !DILocation(line: 4136, column: 56, scope: !6524)
!6533 = !DILocation(line: 4137, column: 32, scope: !6524)
!6534 = !DILocation(line: 4137, column: 30, scope: !6524)
!6535 = !DILocation(line: 4136, column: 27, scope: !6524)
!6536 = !DILocation(line: 4138, column: 16, scope: !6524)
!6537 = !DILocation(line: 4139, column: 16, scope: !6524)
!6538 = !DILocation(line: 4139, column: 44, scope: !6524)
!6539 = !DILocation(line: 4139, column: 42, scope: !6524)
!6540 = !DILocation(line: 4140, column: 27, scope: !6524)
!6541 = !DILocation(line: 4140, column: 52, scope: !6524)
!6542 = !DILocation(line: 4140, column: 16, scope: !6524)
!6543 = !DILocation(line: 4141, column: 16, scope: !6524)
!6544 = !DILocation(line: 4142, column: 27, scope: !6524)
!6545 = !DILocation(line: 4142, column: 52, scope: !6524)
!6546 = !DILocation(line: 4142, column: 16, scope: !6524)
!6547 = !DILocation(line: 4138, column: 7, scope: !6524)
!6548 = !DILocation(line: 4143, column: 12, scope: !6524)
!6549 = !DILocation(line: 4143, column: 28, scope: !6524)
!6550 = !DILocation(line: 4143, column: 9, scope: !6524)
!6551 = !DILocation(line: 4144, column: 5, scope: !6524)
!6552 = !DILocalVariable(name: "hbuf", scope: !6553, file: !3, line: 4147, type: !610)
!6553 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 4146, column: 5)
!6554 = !DILocation(line: 4147, column: 12, scope: !6553)
!6555 = !DILocalVariable(name: "size", scope: !6553, file: !3, line: 4148, type: !146)
!6556 = !DILocation(line: 4148, column: 19, scope: !6553)
!6557 = !DILocation(line: 4149, column: 12, scope: !6553)
!6558 = !DILocation(line: 4149, column: 15, scope: !6553)
!6559 = !DILocation(line: 4149, column: 10, scope: !6553)
!6560 = !DILocation(line: 4151, column: 48, scope: !6553)
!6561 = !DILocation(line: 4151, column: 51, scope: !6553)
!6562 = !DILocation(line: 4151, column: 56, scope: !6553)
!6563 = !DILocation(line: 4151, column: 28, scope: !6553)
!6564 = !DILocation(line: 4152, column: 28, scope: !6553)
!6565 = !DILocation(line: 4152, column: 34, scope: !6553)
!6566 = !DILocation(line: 4153, column: 28, scope: !6553)
!6567 = !DILocation(line: 4151, column: 12, scope: !6553)
!6568 = !DILocalVariable(name: "pad", scope: !6553, file: !3, line: 4154, type: !27)
!6569 = !DILocation(line: 4154, column: 11, scope: !6553)
!6570 = !DILocation(line: 4155, column: 18, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4155, column: 7)
!6572 = !DILocation(line: 4155, column: 46, scope: !6571)
!6573 = !DILocation(line: 4155, column: 36, scope: !6571)
!6574 = !DILocation(line: 4155, column: 34, scope: !6571)
!6575 = !DILocation(line: 4155, column: 16, scope: !6571)
!6576 = !DILocation(line: 4155, column: 12, scope: !6571)
!6577 = !DILocation(line: 4155, column: 60, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 4155, column: 7)
!6579 = !DILocation(line: 4155, column: 58, scope: !6578)
!6580 = !DILocation(line: 4155, column: 7, scope: !6571)
!6581 = !DILocation(line: 4156, column: 11, scope: !6578)
!6582 = !DILocation(line: 4156, column: 14, scope: !6578)
!6583 = !DILocation(line: 4156, column: 9, scope: !6578)
!6584 = !DILocation(line: 4155, column: 68, scope: !6578)
!6585 = !DILocation(line: 4155, column: 7, scope: !6578)
!6586 = distinct !{!6586, !6580, !6587}
!6587 = !DILocation(line: 4156, column: 16, scope: !6571)
!6588 = !DILocation(line: 4157, column: 7, scope: !6553)
!6589 = !DILocation(line: 4157, column: 27, scope: !6553)
!6590 = !DILocation(line: 4157, column: 22, scope: !6553)
!6591 = !DILocation(line: 4157, column: 17, scope: !6553)
!6592 = !DILocation(line: 4157, column: 20, scope: !6553)
!6593 = !DILocation(line: 4158, column: 9, scope: !6553)
!6594 = distinct !{!6594, !6588, !6593}
!6595 = !DILocation(line: 4159, column: 7, scope: !6553)
!6596 = !DILocation(line: 4159, column: 13, scope: !6553)
!6597 = !DILocation(line: 4162, column: 5, scope: !6304)
!6598 = !DILocation(line: 4163, column: 4, scope: !6304)
!6599 = !DILocation(line: 4163, column: 6, scope: !6304)
!6600 = !DILocation(line: 4165, column: 7, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4165, column: 7)
!6602 = !DILocation(line: 4165, column: 10, scope: !6601)
!6603 = !DILocation(line: 4165, column: 18, scope: !6601)
!6604 = !DILocation(line: 4165, column: 35, scope: !6601)
!6605 = !DILocation(line: 4165, column: 59, scope: !6601)
!6606 = !DILocation(line: 4165, column: 21, scope: !6601)
!6607 = !DILocation(line: 4165, column: 7, scope: !6304)
!6608 = !DILocalVariable(name: "six_months_ago", scope: !6609, file: !3, line: 4167, type: !213)
!6609 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 4166, column: 5)
!6610 = !DILocation(line: 4167, column: 23, scope: !6609)
!6611 = !DILocalVariable(name: "recent", scope: !6609, file: !3, line: 4168, type: !141)
!6612 = !DILocation(line: 4168, column: 12, scope: !6609)
!6613 = !DILocation(line: 4173, column: 11, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 4173, column: 11)
!6615 = !DILocation(line: 4173, column: 54, scope: !6614)
!6616 = !DILocation(line: 4173, column: 11, scope: !6609)
!6617 = !DILocation(line: 4174, column: 9, scope: !6614)
!6618 = !DILocation(line: 4180, column: 44, scope: !6609)
!6619 = !DILocation(line: 4180, column: 51, scope: !6609)
!6620 = !DILocation(line: 4180, column: 22, scope: !6609)
!6621 = !DILocation(line: 4180, column: 29, scope: !6609)
!6622 = !DILocation(line: 4181, column: 45, scope: !6609)
!6623 = !DILocation(line: 4181, column: 22, scope: !6609)
!6624 = !DILocation(line: 4181, column: 30, scope: !6609)
!6625 = !DILocation(line: 4183, column: 17, scope: !6609)
!6626 = !DILocation(line: 4183, column: 62, scope: !6609)
!6627 = !DILocation(line: 4184, column: 17, scope: !6609)
!6628 = !DILocation(line: 4184, column: 21, scope: !6609)
!6629 = !DILocation(line: 4184, column: 64, scope: !6609)
!6630 = !DILocation(line: 0, scope: !6609)
!6631 = !DILocation(line: 4183, column: 14, scope: !6609)
!6632 = !DILocation(line: 4188, column: 28, scope: !6609)
!6633 = !DILocation(line: 4188, column: 59, scope: !6609)
!6634 = !DILocation(line: 4189, column: 41, scope: !6609)
!6635 = !DILocation(line: 4189, column: 64, scope: !6609)
!6636 = !DILocation(line: 4189, column: 50, scope: !6609)
!6637 = !DILocation(line: 4188, column: 11, scope: !6609)
!6638 = !DILocation(line: 4188, column: 9, scope: !6609)
!6639 = !DILocation(line: 4190, column: 5, scope: !6609)
!6640 = !DILocation(line: 4192, column: 7, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4192, column: 7)
!6642 = !DILocation(line: 4192, column: 9, scope: !6641)
!6643 = !DILocation(line: 4192, column: 14, scope: !6641)
!6644 = !DILocation(line: 4192, column: 13, scope: !6641)
!6645 = !DILocation(line: 4192, column: 7, scope: !6304)
!6646 = !DILocation(line: 4194, column: 12, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 4193, column: 5)
!6648 = !DILocation(line: 4194, column: 9, scope: !6647)
!6649 = !DILocation(line: 4195, column: 9, scope: !6647)
!6650 = !DILocation(line: 4195, column: 12, scope: !6647)
!6651 = !DILocation(line: 4198, column: 8, scope: !6647)
!6652 = !DILocation(line: 4198, column: 10, scope: !6647)
!6653 = !DILocation(line: 4199, column: 5, scope: !6647)
!6654 = !DILocalVariable(name: "hbuf", scope: !6655, file: !3, line: 4204, type: !656)
!6655 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 4201, column: 5)
!6656 = !DILocation(line: 4204, column: 12, scope: !6655)
!6657 = !DILocation(line: 4205, column: 16, scope: !6655)
!6658 = !DILocation(line: 4205, column: 27, scope: !6655)
!6659 = !DILocation(line: 4206, column: 19, scope: !6655)
!6660 = !DILocation(line: 4206, column: 22, scope: !6655)
!6661 = !DILocation(line: 4206, column: 17, scope: !6655)
!6662 = !DILocation(line: 4208, column: 44, scope: !6655)
!6663 = !DILocation(line: 4208, column: 52, scope: !6655)
!6664 = !DILocation(line: 4208, column: 19, scope: !6655)
!6665 = !DILocation(line: 4205, column: 7, scope: !6655)
!6666 = !DILocation(line: 4210, column: 20, scope: !6655)
!6667 = !DILocation(line: 4210, column: 12, scope: !6655)
!6668 = !DILocation(line: 4210, column: 9, scope: !6655)
!6669 = !DILocation(line: 4213, column: 3, scope: !6304)
!6670 = !DILocation(line: 4213, column: 3, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4213, column: 3)
!6672 = !DILocalVariable(name: "w", scope: !6304, file: !3, line: 4214, type: !149)
!6673 = !DILocation(line: 4214, column: 10, scope: !6304)
!6674 = !DILocation(line: 4214, column: 39, scope: !6304)
!6675 = !DILocation(line: 4214, column: 65, scope: !6304)
!6676 = !DILocation(line: 4214, column: 69, scope: !6304)
!6677 = !DILocation(line: 4214, column: 67, scope: !6304)
!6678 = !DILocation(line: 4214, column: 14, scope: !6304)
!6679 = !DILocation(line: 4216, column: 7, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 4216, column: 7)
!6681 = !DILocation(line: 4216, column: 10, scope: !6680)
!6682 = !DILocation(line: 4216, column: 19, scope: !6680)
!6683 = !DILocation(line: 4216, column: 7, scope: !6304)
!6684 = !DILocation(line: 4218, column: 11, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 4218, column: 11)
!6686 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 4217, column: 5)
!6687 = !DILocation(line: 4218, column: 14, scope: !6685)
!6688 = !DILocation(line: 4218, column: 11, scope: !6686)
!6689 = !DILocation(line: 4220, column: 11, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 4219, column: 9)
!6691 = !DILocation(line: 4220, column: 11, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 4220, column: 11)
!6693 = !DILocation(line: 4221, column: 36, scope: !6690)
!6694 = !DILocation(line: 4221, column: 52, scope: !6690)
!6695 = !DILocation(line: 4221, column: 56, scope: !6690)
!6696 = !DILocation(line: 4221, column: 54, scope: !6690)
!6697 = !DILocation(line: 4221, column: 63, scope: !6690)
!6698 = !DILocation(line: 4221, column: 61, scope: !6690)
!6699 = !DILocation(line: 4221, column: 65, scope: !6690)
!6700 = !DILocation(line: 4221, column: 11, scope: !6690)
!6701 = !DILocation(line: 4222, column: 15, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 4222, column: 15)
!6703 = !DILocation(line: 4222, column: 31, scope: !6702)
!6704 = !DILocation(line: 4222, column: 15, scope: !6690)
!6705 = !DILocation(line: 4223, column: 41, scope: !6702)
!6706 = !DILocation(line: 4223, column: 44, scope: !6702)
!6707 = !DILocation(line: 4223, column: 13, scope: !6702)
!6708 = !DILocation(line: 4224, column: 9, scope: !6690)
!6709 = !DILocation(line: 4225, column: 5, scope: !6686)
!6710 = !DILocation(line: 4226, column: 12, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 4226, column: 12)
!6712 = !DILocation(line: 4226, column: 28, scope: !6711)
!6713 = !DILocation(line: 4226, column: 12, scope: !6680)
!6714 = !DILocation(line: 4227, column: 27, scope: !6711)
!6715 = !DILocation(line: 4227, column: 30, scope: !6711)
!6716 = !DILocation(line: 4227, column: 39, scope: !6711)
!6717 = !DILocation(line: 4227, column: 42, scope: !6711)
!6718 = !DILocation(line: 4227, column: 47, scope: !6711)
!6719 = !DILocation(line: 4227, column: 56, scope: !6711)
!6720 = !DILocation(line: 4227, column: 59, scope: !6711)
!6721 = !DILocation(line: 4227, column: 5, scope: !6711)
!6722 = !DILocation(line: 4228, column: 1, scope: !6304)
!6723 = distinct !DISubprogram(name: "format_inode", scope: !3, file: !3, line: 4010, type: !720, scopeLine: 4011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6724 = !DILocalVariable(name: "buf", arg: 1, scope: !6723, file: !3, line: 4010, type: !143)
!6725 = !DILocation(line: 4010, column: 21, scope: !6723)
!6726 = !DILocalVariable(name: "buflen", arg: 2, scope: !6723, file: !3, line: 4010, type: !149)
!6727 = !DILocation(line: 4010, column: 33, scope: !6723)
!6728 = !DILocalVariable(name: "f", arg: 3, scope: !6723, file: !3, line: 4010, type: !182)
!6729 = !DILocation(line: 4010, column: 64, scope: !6723)
!6730 = !DILocation(line: 4012, column: 3, scope: !6723)
!6731 = !DILocation(line: 4013, column: 11, scope: !6723)
!6732 = !DILocation(line: 4013, column: 14, scope: !6723)
!6733 = !DILocation(line: 4013, column: 22, scope: !6723)
!6734 = !DILocation(line: 4013, column: 25, scope: !6723)
!6735 = !DILocation(line: 4013, column: 28, scope: !6723)
!6736 = !DILocation(line: 4013, column: 33, scope: !6723)
!6737 = !DILocation(line: 4013, column: 40, scope: !6723)
!6738 = !DILocation(line: 4014, column: 24, scope: !6723)
!6739 = !DILocation(line: 4014, column: 27, scope: !6723)
!6740 = !DILocation(line: 4014, column: 32, scope: !6723)
!6741 = !DILocation(line: 4014, column: 40, scope: !6723)
!6742 = !DILocation(line: 4014, column: 13, scope: !6723)
!6743 = !DILocation(line: 4013, column: 3, scope: !6723)
!6744 = distinct !DISubprogram(name: "format_user", scope: !3, file: !3, line: 3957, type: !759, scopeLine: 3958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6745 = !DILocalVariable(name: "u", arg: 1, scope: !6744, file: !3, line: 3957, type: !675)
!6746 = !DILocation(line: 3957, column: 20, scope: !6744)
!6747 = !DILocalVariable(name: "width", arg: 2, scope: !6744, file: !3, line: 3957, type: !27)
!6748 = !DILocation(line: 3957, column: 27, scope: !6744)
!6749 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6744, file: !3, line: 3957, type: !141)
!6750 = !DILocation(line: 3957, column: 39, scope: !6744)
!6751 = !DILocation(line: 3959, column: 27, scope: !6744)
!6752 = !DILocation(line: 3959, column: 25, scope: !6744)
!6753 = !DILocation(line: 3960, column: 26, scope: !6744)
!6754 = !DILocation(line: 3960, column: 56, scope: !6744)
!6755 = !DILocation(line: 3960, column: 47, scope: !6744)
!6756 = !DILocation(line: 3960, column: 61, scope: !6744)
!6757 = !DILocation(line: 3960, column: 64, scope: !6744)
!6758 = !DILocation(line: 3959, column: 3, scope: !6744)
!6759 = !DILocation(line: 3961, column: 1, scope: !6744)
!6760 = distinct !DISubprogram(name: "format_group", scope: !3, file: !3, line: 3966, type: !761, scopeLine: 3967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6761 = !DILocalVariable(name: "g", arg: 1, scope: !6760, file: !3, line: 3966, type: !680)
!6762 = !DILocation(line: 3966, column: 21, scope: !6760)
!6763 = !DILocalVariable(name: "width", arg: 2, scope: !6760, file: !3, line: 3966, type: !27)
!6764 = !DILocation(line: 3966, column: 28, scope: !6760)
!6765 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6760, file: !3, line: 3966, type: !141)
!6766 = !DILocation(line: 3966, column: 40, scope: !6760)
!6767 = !DILocation(line: 3968, column: 27, scope: !6760)
!6768 = !DILocation(line: 3968, column: 25, scope: !6760)
!6769 = !DILocation(line: 3969, column: 26, scope: !6760)
!6770 = !DILocation(line: 3969, column: 57, scope: !6760)
!6771 = !DILocation(line: 3969, column: 47, scope: !6760)
!6772 = !DILocation(line: 3969, column: 62, scope: !6760)
!6773 = !DILocation(line: 3969, column: 65, scope: !6760)
!6774 = !DILocation(line: 3968, column: 3, scope: !6760)
!6775 = !DILocation(line: 3970, column: 1, scope: !6760)
!6776 = distinct !DISubprogram(name: "format_user_or_group", scope: !3, file: !3, line: 3929, type: !763, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6777 = !DILocalVariable(name: "name", arg: 1, scope: !6776, file: !3, line: 3929, type: !146)
!6778 = !DILocation(line: 3929, column: 35, scope: !6776)
!6779 = !DILocalVariable(name: "id", arg: 2, scope: !6776, file: !3, line: 3929, type: !151)
!6780 = !DILocation(line: 3929, column: 59, scope: !6776)
!6781 = !DILocalVariable(name: "width", arg: 3, scope: !6776, file: !3, line: 3929, type: !27)
!6782 = !DILocation(line: 3929, column: 67, scope: !6776)
!6783 = !DILocalVariable(name: "len", scope: !6776, file: !3, line: 3931, type: !149)
!6784 = !DILocation(line: 3931, column: 10, scope: !6776)
!6785 = !DILocation(line: 3933, column: 7, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 3933, column: 7)
!6787 = !DILocation(line: 3933, column: 7, scope: !6776)
!6788 = !DILocalVariable(name: "width_gap", scope: !6789, file: !3, line: 3935, type: !27)
!6789 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3934, column: 5)
!6790 = !DILocation(line: 3935, column: 11, scope: !6789)
!6791 = !DILocation(line: 3935, column: 23, scope: !6789)
!6792 = !DILocation(line: 3935, column: 41, scope: !6789)
!6793 = !DILocation(line: 3935, column: 31, scope: !6789)
!6794 = !DILocation(line: 3935, column: 29, scope: !6789)
!6795 = !DILocalVariable(name: "pad", scope: !6789, file: !3, line: 3936, type: !27)
!6796 = !DILocation(line: 3936, column: 11, scope: !6789)
!6797 = !DILocation(line: 3936, column: 17, scope: !6789)
!6798 = !DILocation(line: 3937, column: 7, scope: !6789)
!6799 = !DILocation(line: 3938, column: 21, scope: !6789)
!6800 = !DILocation(line: 3938, column: 13, scope: !6789)
!6801 = !DILocation(line: 3938, column: 29, scope: !6789)
!6802 = !DILocation(line: 3938, column: 27, scope: !6789)
!6803 = !DILocation(line: 3938, column: 11, scope: !6789)
!6804 = !DILocation(line: 3940, column: 7, scope: !6789)
!6805 = !DILocation(line: 3941, column: 9, scope: !6789)
!6806 = !DILocation(line: 3942, column: 17, scope: !6789)
!6807 = distinct !{!6807, !6804, !6808}
!6808 = !DILocation(line: 3942, column: 19, scope: !6789)
!6809 = !DILocation(line: 3943, column: 5, scope: !6789)
!6810 = !DILocation(line: 3946, column: 24, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3945, column: 5)
!6812 = !DILocation(line: 3946, column: 31, scope: !6811)
!6813 = !DILocation(line: 3946, column: 7, scope: !6811)
!6814 = !DILocation(line: 3947, column: 13, scope: !6811)
!6815 = !DILocation(line: 3947, column: 11, scope: !6811)
!6816 = !DILocation(line: 3950, column: 16, scope: !6776)
!6817 = !DILocation(line: 3950, column: 20, scope: !6776)
!6818 = !DILocation(line: 3950, column: 13, scope: !6776)
!6819 = !DILocation(line: 3951, column: 1, scope: !6776)
!6820 = distinct !DISubprogram(name: "unsigned_file_size", scope: !3, file: !3, line: 2934, type: !681, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6821 = !DILocalVariable(name: "size", arg: 1, scope: !6820, file: !3, line: 2934, type: !178)
!6822 = !DILocation(line: 2934, column: 27, scope: !6820)
!6823 = !DILocation(line: 2936, column: 10, scope: !6820)
!6824 = !DILocation(line: 2936, column: 18, scope: !6820)
!6825 = !DILocation(line: 2936, column: 23, scope: !6820)
!6826 = !DILocation(line: 2936, column: 17, scope: !6820)
!6827 = !DILocation(line: 2936, column: 28, scope: !6820)
!6828 = !DILocation(line: 2936, column: 15, scope: !6820)
!6829 = !DILocation(line: 2936, column: 3, scope: !6820)
!6830 = distinct !DISubprogram(name: "align_nstrftime", scope: !3, file: !3, line: 3880, type: !765, scopeLine: 3882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6831 = !DILocalVariable(name: "buf", arg: 1, scope: !6830, file: !3, line: 3880, type: !143)
!6832 = !DILocation(line: 3880, column: 24, scope: !6830)
!6833 = !DILocalVariable(name: "size", arg: 2, scope: !6830, file: !3, line: 3880, type: !149)
!6834 = !DILocation(line: 3880, column: 36, scope: !6830)
!6835 = !DILocalVariable(name: "recent", arg: 3, scope: !6830, file: !3, line: 3880, type: !141)
!6836 = !DILocation(line: 3880, column: 47, scope: !6830)
!6837 = !DILocalVariable(name: "tm", arg: 4, scope: !6830, file: !3, line: 3880, type: !767)
!6838 = !DILocation(line: 3880, column: 72, scope: !6830)
!6839 = !DILocalVariable(name: "tz", arg: 5, scope: !6830, file: !3, line: 3881, type: !246)
!6840 = !DILocation(line: 3881, column: 29, scope: !6830)
!6841 = !DILocalVariable(name: "ns", arg: 6, scope: !6830, file: !3, line: 3881, type: !27)
!6842 = !DILocation(line: 3881, column: 37, scope: !6830)
!6843 = !DILocalVariable(name: "nfmt", scope: !6830, file: !3, line: 3883, type: !146)
!6844 = !DILocation(line: 3883, column: 15, scope: !6830)
!6845 = !DILocation(line: 3883, column: 23, scope: !6830)
!6846 = !DILocation(line: 3884, column: 34, scope: !6830)
!6847 = !DILocation(line: 3884, column: 25, scope: !6830)
!6848 = !DILocation(line: 3884, column: 42, scope: !6830)
!6849 = !DILocation(line: 3884, column: 46, scope: !6830)
!6850 = !{!6851, !2469, i64 16}
!6851 = !{!"tm", !2469, i64 0, !2469, i64 4, !2469, i64 8, !2469, i64 12, !2469, i64 16, !2469, i64 20, !2469, i64 24, !2469, i64 28, !2469, i64 32, !2499, i64 40, !2475, i64 48}
!6852 = !DILocation(line: 3885, column: 42, scope: !6830)
!6853 = !DILocation(line: 3885, column: 25, scope: !6830)
!6854 = !DILocation(line: 3886, column: 21, scope: !6830)
!6855 = !DILocation(line: 3886, column: 26, scope: !6830)
!6856 = !DILocation(line: 3886, column: 32, scope: !6830)
!6857 = !DILocation(line: 3886, column: 38, scope: !6830)
!6858 = !DILocation(line: 3886, column: 42, scope: !6830)
!6859 = !DILocation(line: 3886, column: 46, scope: !6830)
!6860 = !DILocation(line: 3886, column: 10, scope: !6830)
!6861 = !DILocation(line: 3886, column: 3, scope: !6830)
!6862 = !DILocation(line: 3897, column: 7, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !1017, file: !3, line: 3897, column: 7)
!6864 = !DILocation(line: 3897, column: 13, scope: !6863)
!6865 = !DILocation(line: 3897, column: 7, scope: !1017)
!6866 = !DILocalVariable(name: "epoch", scope: !6867, file: !3, line: 3899, type: !162)
!6867 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 3898, column: 5)
!6868 = !DILocation(line: 3899, column: 14, scope: !6867)
!6869 = !DILocalVariable(name: "tm", scope: !6867, file: !3, line: 3900, type: !769)
!6870 = !DILocation(line: 3900, column: 17, scope: !6867)
!6871 = !DILocalVariable(name: "buf", scope: !6867, file: !3, line: 3901, type: !784)
!6872 = !DILocation(line: 3901, column: 12, scope: !6867)
!6873 = !DILocation(line: 3910, column: 25, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 3910, column: 11)
!6875 = !DILocation(line: 3910, column: 11, scope: !6874)
!6876 = !DILocation(line: 3910, column: 11, scope: !6867)
!6877 = !DILocalVariable(name: "len", scope: !6878, file: !3, line: 3912, type: !149)
!6878 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 3911, column: 9)
!6879 = !DILocation(line: 3912, column: 18, scope: !6878)
!6880 = !DILocation(line: 3912, column: 41, scope: !6878)
!6881 = !DILocation(line: 3913, column: 46, scope: !6878)
!6882 = !DILocation(line: 3912, column: 24, scope: !6878)
!6883 = !DILocation(line: 3914, column: 15, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3914, column: 15)
!6885 = !DILocation(line: 3914, column: 19, scope: !6884)
!6886 = !DILocation(line: 3914, column: 15, scope: !6878)
!6887 = !DILocation(line: 3915, column: 32, scope: !6884)
!6888 = !DILocation(line: 3915, column: 37, scope: !6884)
!6889 = !DILocation(line: 3915, column: 21, scope: !6884)
!6890 = !DILocation(line: 3915, column: 19, scope: !6884)
!6891 = !DILocation(line: 3915, column: 13, scope: !6884)
!6892 = !DILocation(line: 3916, column: 9, scope: !6878)
!6893 = !DILocation(line: 3918, column: 11, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 3918, column: 11)
!6895 = !DILocation(line: 3918, column: 17, scope: !6894)
!6896 = !DILocation(line: 3918, column: 11, scope: !6867)
!6897 = !DILocation(line: 3919, column: 15, scope: !6894)
!6898 = !DILocation(line: 3919, column: 9, scope: !6894)
!6899 = !DILocation(line: 3920, column: 5, scope: !6867)
!6900 = !DILocation(line: 3922, column: 10, scope: !1017)
!6901 = !DILocation(line: 3922, column: 3, scope: !1017)
!6902 = distinct !DISubprogram(name: "timetostr", scope: !792, file: !792, line: 687, type: !787, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6903 = !DILocalVariable(name: "t", arg: 1, scope: !6902, file: !792, line: 687, type: !162)
!6904 = !DILocation(line: 687, column: 19, scope: !6902)
!6905 = !DILocalVariable(name: "buf", arg: 2, scope: !6902, file: !792, line: 687, type: !143)
!6906 = !DILocation(line: 687, column: 28, scope: !6902)
!6907 = !DILocation(line: 690, column: 24, scope: !6902)
!6908 = !DILocation(line: 690, column: 27, scope: !6902)
!6909 = !DILocation(line: 690, column: 13, scope: !6902)
!6910 = !DILocation(line: 689, column: 3, scope: !6902)
!6911 = distinct !DISubprogram(name: "print_name_with_quoting", scope: !3, file: !3, line: 4540, type: !722, scopeLine: 4544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6912 = !DILocalVariable(name: "f", arg: 1, scope: !6911, file: !3, line: 4540, type: !182)
!6913 = !DILocation(line: 4540, column: 49, scope: !6911)
!6914 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !6911, file: !3, line: 4541, type: !141)
!6915 = !DILocation(line: 4541, column: 31, scope: !6911)
!6916 = !DILocalVariable(name: "stack", arg: 3, scope: !6911, file: !3, line: 4542, type: !498)
!6917 = !DILocation(line: 4542, column: 42, scope: !6911)
!6918 = !DILocalVariable(name: "start_col", arg: 4, scope: !6911, file: !3, line: 4543, type: !149)
!6919 = !DILocation(line: 4543, column: 33, scope: !6911)
!6920 = !DILocalVariable(name: "name", scope: !6911, file: !3, line: 4545, type: !146)
!6921 = !DILocation(line: 4545, column: 15, scope: !6911)
!6922 = !DILocation(line: 4545, column: 22, scope: !6911)
!6923 = !DILocation(line: 4545, column: 39, scope: !6911)
!6924 = !DILocation(line: 4545, column: 42, scope: !6911)
!6925 = !DILocation(line: 4545, column: 53, scope: !6911)
!6926 = !DILocation(line: 4545, column: 56, scope: !6911)
!6927 = !DILocalVariable(name: "color", scope: !6911, file: !3, line: 4547, type: !394)
!6928 = !DILocation(line: 4547, column: 25, scope: !6911)
!6929 = !DILocation(line: 4547, column: 33, scope: !6911)
!6930 = !DILocation(line: 4548, column: 54, scope: !6911)
!6931 = !DILocation(line: 4548, column: 57, scope: !6911)
!6932 = !DILocation(line: 4548, column: 33, scope: !6911)
!6933 = !DILocalVariable(name: "used_color_this_time", scope: !6911, file: !3, line: 4550, type: !141)
!6934 = !DILocation(line: 4550, column: 8, scope: !6911)
!6935 = !DILocation(line: 4550, column: 32, scope: !6911)
!6936 = !DILocation(line: 4551, column: 32, scope: !6911)
!6937 = !DILocation(line: 4551, column: 36, scope: !6911)
!6938 = !DILocation(line: 4551, column: 42, scope: !6911)
!6939 = !DILocation(line: 4551, column: 45, scope: !6911)
!6940 = !DILocation(line: 0, scope: !6911)
!6941 = !DILocalVariable(name: "len", scope: !6911, file: !3, line: 4553, type: !149)
!6942 = !DILocation(line: 4553, column: 10, scope: !6911)
!6943 = !DILocation(line: 4553, column: 28, scope: !6911)
!6944 = !DILocation(line: 4553, column: 34, scope: !6911)
!6945 = !DILocation(line: 4553, column: 60, scope: !6911)
!6946 = !DILocation(line: 4553, column: 63, scope: !6911)
!6947 = !DILocation(line: 4554, column: 28, scope: !6911)
!6948 = !DILocation(line: 4554, column: 36, scope: !6911)
!6949 = !DILocation(line: 4554, column: 35, scope: !6911)
!6950 = !DILocation(line: 4554, column: 52, scope: !6911)
!6951 = !DILocation(line: 4554, column: 59, scope: !6911)
!6952 = !DILocation(line: 4554, column: 62, scope: !6911)
!6953 = !DILocation(line: 4553, column: 16, scope: !6911)
!6954 = !DILocation(line: 4556, column: 3, scope: !6911)
!6955 = !DILocation(line: 4557, column: 7, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 4557, column: 7)
!6957 = !DILocation(line: 4557, column: 7, scope: !6911)
!6958 = !DILocation(line: 4559, column: 7, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 4558, column: 5)
!6960 = !DILocation(line: 4567, column: 11, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4567, column: 11)
!6962 = !DILocation(line: 4568, column: 11, scope: !6961)
!6963 = !DILocation(line: 4568, column: 15, scope: !6961)
!6964 = !DILocation(line: 4568, column: 27, scope: !6961)
!6965 = !DILocation(line: 4568, column: 25, scope: !6961)
!6966 = !DILocation(line: 4568, column: 43, scope: !6961)
!6967 = !DILocation(line: 4568, column: 55, scope: !6961)
!6968 = !DILocation(line: 4568, column: 53, scope: !6961)
!6969 = !DILocation(line: 4568, column: 59, scope: !6961)
!6970 = !DILocation(line: 4568, column: 66, scope: !6961)
!6971 = !DILocation(line: 4568, column: 64, scope: !6961)
!6972 = !DILocation(line: 4568, column: 39, scope: !6961)
!6973 = !DILocation(line: 4567, column: 11, scope: !6959)
!6974 = !DILocation(line: 4569, column: 9, scope: !6961)
!6975 = !DILocation(line: 4570, column: 5, scope: !6959)
!6976 = !DILocation(line: 4572, column: 10, scope: !6911)
!6977 = !DILocation(line: 4572, column: 3, scope: !6911)
!6978 = distinct !DISubprogram(name: "print_type_indicator", scope: !3, file: !3, line: 4655, type: !728, scopeLine: 4656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6979 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6978, file: !3, line: 4655, type: !141)
!6980 = !DILocation(line: 4655, column: 28, scope: !6978)
!6981 = !DILocalVariable(name: "mode", arg: 2, scope: !6978, file: !3, line: 4655, type: !226)
!6982 = !DILocation(line: 4655, column: 44, scope: !6978)
!6983 = !DILocalVariable(name: "type", arg: 3, scope: !6978, file: !3, line: 4655, type: !36)
!6984 = !DILocation(line: 4655, column: 64, scope: !6978)
!6985 = !DILocalVariable(name: "c", scope: !6978, file: !3, line: 4657, type: !144)
!6986 = !DILocation(line: 4657, column: 8, scope: !6978)
!6987 = !DILocation(line: 4657, column: 32, scope: !6978)
!6988 = !DILocation(line: 4657, column: 41, scope: !6978)
!6989 = !DILocation(line: 4657, column: 47, scope: !6978)
!6990 = !DILocation(line: 4657, column: 12, scope: !6978)
!6991 = !DILocation(line: 4658, column: 7, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 4658, column: 7)
!6993 = !DILocation(line: 4658, column: 7, scope: !6978)
!6994 = !DILocation(line: 4659, column: 5, scope: !6992)
!6995 = !DILocation(line: 4659, column: 5, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 4659, column: 5)
!6997 = !DILocation(line: 4660, column: 12, scope: !6978)
!6998 = !DILocation(line: 4660, column: 11, scope: !6978)
!6999 = !DILocation(line: 4660, column: 10, scope: !6978)
!7000 = !DILocation(line: 4660, column: 3, scope: !6978)
!7001 = distinct !DISubprogram(name: "get_type_indicator", scope: !3, file: !3, line: 4623, type: !730, scopeLine: 4624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7002 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !7001, file: !3, line: 4623, type: !141)
!7003 = !DILocation(line: 4623, column: 26, scope: !7001)
!7004 = !DILocalVariable(name: "mode", arg: 2, scope: !7001, file: !3, line: 4623, type: !226)
!7005 = !DILocation(line: 4623, column: 42, scope: !7001)
!7006 = !DILocalVariable(name: "type", arg: 3, scope: !7001, file: !3, line: 4623, type: !36)
!7007 = !DILocation(line: 4623, column: 62, scope: !7001)
!7008 = !DILocalVariable(name: "c", scope: !7001, file: !3, line: 4625, type: !144)
!7009 = !DILocation(line: 4625, column: 8, scope: !7001)
!7010 = !DILocation(line: 4627, column: 7, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 4627, column: 7)
!7012 = !DILocation(line: 4627, column: 7, scope: !7001)
!7013 = !DILocation(line: 4627, column: 17, scope: !7011)
!7014 = !DILocation(line: 4627, column: 34, scope: !7011)
!7015 = !DILocation(line: 4627, column: 39, scope: !7011)
!7016 = !DILocation(line: 4629, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 4629, column: 11)
!7018 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 4628, column: 5)
!7019 = !DILocation(line: 4629, column: 19, scope: !7017)
!7020 = !DILocation(line: 4629, column: 22, scope: !7017)
!7021 = !DILocation(line: 4629, column: 38, scope: !7017)
!7022 = !DILocation(line: 4629, column: 50, scope: !7017)
!7023 = !DILocation(line: 4629, column: 54, scope: !7017)
!7024 = !DILocation(line: 4629, column: 59, scope: !7017)
!7025 = !DILocation(line: 4629, column: 11, scope: !7018)
!7026 = !DILocation(line: 4630, column: 11, scope: !7017)
!7027 = !DILocation(line: 4630, column: 9, scope: !7017)
!7028 = !DILocation(line: 4632, column: 11, scope: !7017)
!7029 = !DILocation(line: 4633, column: 5, scope: !7018)
!7030 = !DILocation(line: 4636, column: 11, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 4636, column: 11)
!7032 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 4635, column: 5)
!7033 = !DILocation(line: 4636, column: 11, scope: !7032)
!7034 = !DILocation(line: 4636, column: 21, scope: !7031)
!7035 = !DILocation(line: 4636, column: 38, scope: !7031)
!7036 = !DILocation(line: 4636, column: 43, scope: !7031)
!7037 = !DILocation(line: 4636, column: 56, scope: !7031)
!7038 = !DILocation(line: 4636, column: 59, scope: !7031)
!7039 = !DILocation(line: 4636, column: 64, scope: !7031)
!7040 = !DILocation(line: 4637, column: 11, scope: !7031)
!7041 = !DILocation(line: 4637, column: 9, scope: !7031)
!7042 = !DILocation(line: 4638, column: 16, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 4638, column: 16)
!7044 = !DILocation(line: 4638, column: 32, scope: !7043)
!7045 = !DILocation(line: 4638, column: 16, scope: !7031)
!7046 = !DILocation(line: 4639, column: 11, scope: !7043)
!7047 = !DILocation(line: 4639, column: 9, scope: !7043)
!7048 = !DILocation(line: 4640, column: 16, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 4640, column: 16)
!7050 = !DILocation(line: 4640, column: 16, scope: !7043)
!7051 = !DILocation(line: 4640, column: 26, scope: !7049)
!7052 = !DILocation(line: 4640, column: 43, scope: !7049)
!7053 = !DILocation(line: 4640, column: 48, scope: !7049)
!7054 = !DILocation(line: 4641, column: 11, scope: !7049)
!7055 = !DILocation(line: 4641, column: 9, scope: !7049)
!7056 = !DILocation(line: 4642, column: 16, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 4642, column: 16)
!7058 = !DILocation(line: 4642, column: 16, scope: !7049)
!7059 = !DILocation(line: 4642, column: 26, scope: !7057)
!7060 = !DILocation(line: 4642, column: 44, scope: !7057)
!7061 = !DILocation(line: 4642, column: 49, scope: !7057)
!7062 = !DILocation(line: 4643, column: 11, scope: !7057)
!7063 = !DILocation(line: 4643, column: 9, scope: !7057)
!7064 = !DILocation(line: 4644, column: 16, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 4644, column: 16)
!7066 = !DILocation(line: 4644, column: 16, scope: !7057)
!7067 = !DILocation(line: 4644, column: 26, scope: !7065)
!7068 = !DILocation(line: 4644, column: 44, scope: !7065)
!7069 = !DILocation(line: 4644, column: 49, scope: !7065)
!7070 = !DILocation(line: 4645, column: 11, scope: !7065)
!7071 = !DILocation(line: 4645, column: 9, scope: !7065)
!7072 = !DILocation(line: 4646, column: 16, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 4646, column: 16)
!7074 = !DILocation(line: 4646, column: 24, scope: !7073)
!7075 = !DILocation(line: 4646, column: 16, scope: !7065)
!7076 = !DILocation(line: 4647, column: 11, scope: !7073)
!7077 = !DILocation(line: 4647, column: 9, scope: !7073)
!7078 = !DILocation(line: 4649, column: 11, scope: !7073)
!7079 = !DILocation(line: 4651, column: 10, scope: !7001)
!7080 = !DILocation(line: 4651, column: 3, scope: !7001)
!7081 = !DILocalVariable(name: "f", arg: 1, scope: !1007, file: !3, line: 4682, type: !182)
!7082 = !DILocation(line: 4682, column: 45, scope: !1007)
!7083 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !1007, file: !3, line: 4682, type: !141)
!7084 = !DILocation(line: 4682, column: 53, scope: !1007)
!7085 = !DILocalVariable(name: "type", scope: !1007, file: !3, line: 4684, type: !53)
!7086 = !DILocation(line: 4684, column: 21, scope: !1007)
!7087 = !DILocalVariable(name: "ext", scope: !1007, file: !3, line: 4685, type: !581)
!7088 = !DILocation(line: 4685, column: 26, scope: !1007)
!7089 = !DILocalVariable(name: "len", scope: !1007, file: !3, line: 4686, type: !149)
!7090 = !DILocation(line: 4686, column: 10, scope: !1007)
!7091 = !DILocalVariable(name: "name", scope: !1007, file: !3, line: 4688, type: !146)
!7092 = !DILocation(line: 4688, column: 15, scope: !1007)
!7093 = !DILocalVariable(name: "mode", scope: !1007, file: !3, line: 4689, type: !226)
!7094 = !DILocation(line: 4689, column: 10, scope: !1007)
!7095 = !DILocalVariable(name: "linkok", scope: !1007, file: !3, line: 4690, type: !27)
!7096 = !DILocation(line: 4690, column: 7, scope: !1007)
!7097 = !DILocation(line: 4691, column: 7, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 4691, column: 7)
!7099 = !DILocation(line: 4691, column: 7, scope: !1007)
!7100 = !DILocation(line: 4693, column: 14, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 4692, column: 5)
!7102 = !DILocation(line: 4693, column: 17, scope: !7101)
!7103 = !DILocation(line: 4693, column: 12, scope: !7101)
!7104 = !DILocation(line: 4694, column: 14, scope: !7101)
!7105 = !DILocation(line: 4694, column: 17, scope: !7101)
!7106 = !DILocation(line: 4694, column: 12, scope: !7101)
!7107 = !DILocation(line: 4695, column: 16, scope: !7101)
!7108 = !DILocation(line: 4695, column: 19, scope: !7101)
!7109 = !DILocation(line: 4695, column: 14, scope: !7101)
!7110 = !DILocation(line: 4696, column: 5, scope: !7101)
!7111 = !DILocation(line: 4699, column: 14, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 4698, column: 5)
!7113 = !DILocation(line: 4699, column: 17, scope: !7112)
!7114 = !DILocation(line: 4699, column: 12, scope: !7112)
!7115 = !DILocation(line: 4700, column: 14, scope: !7112)
!7116 = !DILocation(line: 4700, column: 12, scope: !7112)
!7117 = !DILocation(line: 4701, column: 16, scope: !7112)
!7118 = !DILocation(line: 4701, column: 19, scope: !7112)
!7119 = !DILocation(line: 4701, column: 14, scope: !7112)
!7120 = !DILocation(line: 4706, column: 7, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 4706, column: 7)
!7122 = !DILocation(line: 4706, column: 14, scope: !7121)
!7123 = !DILocation(line: 4706, column: 20, scope: !7121)
!7124 = !DILocation(line: 4706, column: 23, scope: !7121)
!7125 = !DILocation(line: 4706, column: 7, scope: !1007)
!7126 = !DILocation(line: 4707, column: 10, scope: !7121)
!7127 = !DILocation(line: 4707, column: 5, scope: !7121)
!7128 = !DILocation(line: 4708, column: 13, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 4708, column: 12)
!7130 = !DILocation(line: 4708, column: 16, scope: !7129)
!7131 = !DILocation(line: 4708, column: 12, scope: !7121)
!7132 = !DILocation(line: 4711, column: 33, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 4709, column: 5)
!7134 = !DILocation(line: 4711, column: 36, scope: !7133)
!7135 = !DILocation(line: 4711, column: 14, scope: !7133)
!7136 = !DILocation(line: 4711, column: 12, scope: !7133)
!7137 = !DILocation(line: 4712, column: 5, scope: !7133)
!7138 = !DILocation(line: 4715, column: 11, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 4715, column: 11)
!7140 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 4714, column: 5)
!7141 = !DILocation(line: 4715, column: 11, scope: !7140)
!7142 = !DILocation(line: 4717, column: 16, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 4716, column: 9)
!7144 = !DILocation(line: 4719, column: 16, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 4719, column: 15)
!7146 = !DILocation(line: 4719, column: 21, scope: !7145)
!7147 = !DILocation(line: 4719, column: 32, scope: !7145)
!7148 = !DILocation(line: 4719, column: 37, scope: !7145)
!7149 = !DILocation(line: 4719, column: 40, scope: !7145)
!7150 = !DILocation(line: 4719, column: 15, scope: !7143)
!7151 = !DILocation(line: 4720, column: 18, scope: !7145)
!7152 = !DILocation(line: 4720, column: 13, scope: !7145)
!7153 = !DILocation(line: 4721, column: 21, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 4721, column: 20)
!7155 = !DILocation(line: 4721, column: 26, scope: !7154)
!7156 = !DILocation(line: 4721, column: 37, scope: !7154)
!7157 = !DILocation(line: 4721, column: 42, scope: !7154)
!7158 = !DILocation(line: 4721, column: 45, scope: !7154)
!7159 = !DILocation(line: 4721, column: 20, scope: !7145)
!7160 = !DILocation(line: 4722, column: 18, scope: !7154)
!7161 = !DILocation(line: 4722, column: 13, scope: !7154)
!7162 = !DILocation(line: 4723, column: 20, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 4723, column: 20)
!7164 = !DILocation(line: 4723, column: 39, scope: !7163)
!7165 = !DILocation(line: 4723, column: 42, scope: !7163)
!7166 = !DILocation(line: 4723, column: 45, scope: !7163)
!7167 = !DILocation(line: 4723, column: 20, scope: !7154)
!7168 = !DILocation(line: 4724, column: 18, scope: !7163)
!7169 = !DILocation(line: 4724, column: 13, scope: !7163)
!7170 = !DILocation(line: 4725, column: 21, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4725, column: 20)
!7172 = !DILocation(line: 4725, column: 26, scope: !7171)
!7173 = !DILocation(line: 4725, column: 37, scope: !7171)
!7174 = !DILocation(line: 4725, column: 42, scope: !7171)
!7175 = !DILocation(line: 4725, column: 45, scope: !7171)
!7176 = !DILocation(line: 4725, column: 20, scope: !7163)
!7177 = !DILocation(line: 4726, column: 18, scope: !7171)
!7178 = !DILocation(line: 4726, column: 13, scope: !7171)
!7179 = !DILocation(line: 4727, column: 25, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 4727, column: 20)
!7181 = !DILocation(line: 4727, column: 28, scope: !7180)
!7182 = !DILocation(line: 4727, column: 33, scope: !7180)
!7183 = !DILocation(line: 4727, column: 23, scope: !7180)
!7184 = !DILocation(line: 4727, column: 43, scope: !7180)
!7185 = !DILocation(line: 4727, column: 46, scope: !7180)
!7186 = !DILocation(line: 4727, column: 20, scope: !7171)
!7187 = !DILocation(line: 4728, column: 18, scope: !7180)
!7188 = !DILocation(line: 4728, column: 13, scope: !7180)
!7189 = !DILocation(line: 4729, column: 9, scope: !7143)
!7190 = !DILocation(line: 4730, column: 16, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 4730, column: 16)
!7192 = !DILocation(line: 4730, column: 16, scope: !7139)
!7193 = !DILocation(line: 4732, column: 16, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 4731, column: 9)
!7195 = !DILocation(line: 4734, column: 16, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 4734, column: 15)
!7197 = !DILocation(line: 4734, column: 21, scope: !7196)
!7198 = !DILocation(line: 4734, column: 32, scope: !7196)
!7199 = !DILocation(line: 4734, column: 36, scope: !7196)
!7200 = !DILocation(line: 4734, column: 41, scope: !7196)
!7201 = !DILocation(line: 4735, column: 15, scope: !7196)
!7202 = !DILocation(line: 4735, column: 18, scope: !7196)
!7203 = !DILocation(line: 4734, column: 15, scope: !7194)
!7204 = !DILocation(line: 4736, column: 18, scope: !7196)
!7205 = !DILocation(line: 4736, column: 13, scope: !7196)
!7206 = !DILocation(line: 4737, column: 21, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 4737, column: 20)
!7208 = !DILocation(line: 4737, column: 26, scope: !7207)
!7209 = !DILocation(line: 4737, column: 37, scope: !7207)
!7210 = !DILocation(line: 4737, column: 42, scope: !7207)
!7211 = !DILocation(line: 4737, column: 45, scope: !7207)
!7212 = !DILocation(line: 4737, column: 20, scope: !7196)
!7213 = !DILocation(line: 4738, column: 18, scope: !7207)
!7214 = !DILocation(line: 4738, column: 13, scope: !7207)
!7215 = !DILocation(line: 4739, column: 21, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 4739, column: 20)
!7217 = !DILocation(line: 4739, column: 26, scope: !7216)
!7218 = !DILocation(line: 4739, column: 37, scope: !7216)
!7219 = !DILocation(line: 4739, column: 42, scope: !7216)
!7220 = !DILocation(line: 4739, column: 45, scope: !7216)
!7221 = !DILocation(line: 4739, column: 20, scope: !7207)
!7222 = !DILocation(line: 4740, column: 18, scope: !7216)
!7223 = !DILocation(line: 4740, column: 13, scope: !7216)
!7224 = !DILocation(line: 4741, column: 9, scope: !7194)
!7225 = !DILocation(line: 4742, column: 16, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 4742, column: 16)
!7227 = !DILocation(line: 4742, column: 16, scope: !7191)
!7228 = !DILocation(line: 4743, column: 14, scope: !7226)
!7229 = !DILocation(line: 4743, column: 9, scope: !7226)
!7230 = !DILocation(line: 4744, column: 16, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 4744, column: 16)
!7232 = !DILocation(line: 4744, column: 16, scope: !7226)
!7233 = !DILocation(line: 4745, column: 14, scope: !7231)
!7234 = !DILocation(line: 4745, column: 9, scope: !7231)
!7235 = !DILocation(line: 4746, column: 16, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 4746, column: 16)
!7237 = !DILocation(line: 4746, column: 16, scope: !7231)
!7238 = !DILocation(line: 4747, column: 14, scope: !7236)
!7239 = !DILocation(line: 4747, column: 9, scope: !7236)
!7240 = !DILocation(line: 4748, column: 16, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 4748, column: 16)
!7242 = !DILocation(line: 4748, column: 16, scope: !7236)
!7243 = !DILocation(line: 4749, column: 14, scope: !7241)
!7244 = !DILocation(line: 4749, column: 9, scope: !7241)
!7245 = !DILocation(line: 4750, column: 16, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4750, column: 16)
!7247 = !DILocation(line: 4750, column: 16, scope: !7241)
!7248 = !DILocation(line: 4751, column: 14, scope: !7246)
!7249 = !DILocation(line: 4751, column: 9, scope: !7246)
!7250 = !DILocation(line: 4757, column: 16, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 4755, column: 9)
!7252 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 4752, column: 16)
!7253 = !DILocation(line: 4762, column: 7, scope: !1007)
!7254 = !DILocation(line: 4763, column: 7, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 4763, column: 7)
!7256 = !DILocation(line: 4763, column: 12, scope: !7255)
!7257 = !DILocation(line: 4763, column: 7, scope: !1007)
!7258 = !DILocation(line: 4767, column: 21, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 4764, column: 5)
!7260 = !DILocation(line: 4767, column: 13, scope: !7259)
!7261 = !DILocation(line: 4767, column: 11, scope: !7259)
!7262 = !DILocation(line: 4768, column: 15, scope: !7259)
!7263 = !DILocation(line: 4768, column: 12, scope: !7259)
!7264 = !DILocation(line: 4769, column: 18, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 4769, column: 7)
!7266 = !DILocation(line: 4769, column: 16, scope: !7265)
!7267 = !DILocation(line: 4769, column: 12, scope: !7265)
!7268 = !DILocation(line: 4769, column: 34, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4769, column: 7)
!7270 = !DILocation(line: 4769, column: 38, scope: !7269)
!7271 = !DILocation(line: 4769, column: 7, scope: !7265)
!7272 = !DILocation(line: 4771, column: 15, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 4771, column: 15)
!7274 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 4770, column: 9)
!7275 = !DILocation(line: 4771, column: 20, scope: !7273)
!7276 = !DILocation(line: 4771, column: 24, scope: !7273)
!7277 = !{!3507, !2499, i64 0}
!7278 = !DILocation(line: 4771, column: 31, scope: !7273)
!7279 = !DILocation(line: 4771, column: 28, scope: !7273)
!7280 = !DILocation(line: 4772, column: 15, scope: !7273)
!7281 = !DILocation(line: 4772, column: 33, scope: !7273)
!7282 = !DILocation(line: 4772, column: 40, scope: !7273)
!7283 = !DILocation(line: 4772, column: 45, scope: !7273)
!7284 = !DILocation(line: 4772, column: 49, scope: !7273)
!7285 = !DILocation(line: 4772, column: 38, scope: !7273)
!7286 = !DILocation(line: 4772, column: 54, scope: !7273)
!7287 = !DILocation(line: 4772, column: 59, scope: !7273)
!7288 = !DILocation(line: 4772, column: 63, scope: !7273)
!7289 = !DILocation(line: 4773, column: 33, scope: !7273)
!7290 = !DILocation(line: 4773, column: 38, scope: !7273)
!7291 = !DILocation(line: 4773, column: 42, scope: !7273)
!7292 = !DILocation(line: 4772, column: 18, scope: !7273)
!7293 = !DILocation(line: 4773, column: 47, scope: !7273)
!7294 = !DILocation(line: 4771, column: 15, scope: !7274)
!7295 = !DILocation(line: 4774, column: 13, scope: !7273)
!7296 = !DILocation(line: 4775, column: 9, scope: !7274)
!7297 = !DILocation(line: 4769, column: 53, scope: !7269)
!7298 = !DILocation(line: 4769, column: 58, scope: !7269)
!7299 = !DILocation(line: 4769, column: 51, scope: !7269)
!7300 = !DILocation(line: 4769, column: 7, scope: !7269)
!7301 = distinct !{!7301, !7271, !7302}
!7302 = !DILocation(line: 4775, column: 9, scope: !7265)
!7303 = !DILocation(line: 4776, column: 5, scope: !7259)
!7304 = !DILocation(line: 4779, column: 7, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 4779, column: 7)
!7306 = !DILocation(line: 4779, column: 12, scope: !7305)
!7307 = !DILocation(line: 4779, column: 22, scope: !7305)
!7308 = !DILocation(line: 4779, column: 26, scope: !7305)
!7309 = !DILocation(line: 4779, column: 7, scope: !1007)
!7310 = !DILocation(line: 4781, column: 11, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 4781, column: 11)
!7312 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 4780, column: 5)
!7313 = !DILocation(line: 4781, column: 37, scope: !7311)
!7314 = !DILocation(line: 4781, column: 40, scope: !7311)
!7315 = !DILocation(line: 4781, column: 11, scope: !7312)
!7316 = !DILocation(line: 4782, column: 14, scope: !7311)
!7317 = !DILocation(line: 4782, column: 9, scope: !7311)
!7318 = !DILocation(line: 4783, column: 5, scope: !7312)
!7319 = !DILocalVariable(name: "s", scope: !1007, file: !3, line: 4785, type: !727)
!7320 = !DILocation(line: 4785, column: 31, scope: !1007)
!7321 = !DILocation(line: 4786, column: 7, scope: !1007)
!7322 = !DILocation(line: 4786, column: 15, scope: !1007)
!7323 = !DILocation(line: 4786, column: 20, scope: !1007)
!7324 = !DILocation(line: 4786, column: 44, scope: !1007)
!7325 = !DILocation(line: 4786, column: 28, scope: !1007)
!7326 = !DILocation(line: 4788, column: 10, scope: !1007)
!7327 = !DILocation(line: 4788, column: 13, scope: !1007)
!7328 = !DILocation(line: 4788, column: 22, scope: !1007)
!7329 = !DILocation(line: 4788, column: 3, scope: !1007)
!7330 = distinct !DISubprogram(name: "calculate_columns", scope: !3, file: !3, line: 5077, type: !746, scopeLine: 5078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7331 = !DILocalVariable(name: "by_columns", arg: 1, scope: !7330, file: !3, line: 5077, type: !141)
!7332 = !DILocation(line: 5077, column: 25, scope: !7330)
!7333 = !DILocalVariable(name: "filesno", scope: !7330, file: !3, line: 5079, type: !149)
!7334 = !DILocation(line: 5079, column: 10, scope: !7330)
!7335 = !DILocalVariable(name: "cols", scope: !7330, file: !3, line: 5080, type: !149)
!7336 = !DILocation(line: 5080, column: 10, scope: !7330)
!7337 = !DILocalVariable(name: "max_cols", scope: !7330, file: !3, line: 5085, type: !149)
!7338 = !DILocation(line: 5085, column: 10, scope: !7330)
!7339 = !DILocation(line: 5085, column: 21, scope: !7330)
!7340 = !DILocation(line: 5087, column: 3, scope: !7330)
!7341 = !DILocation(line: 5090, column: 16, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 5090, column: 3)
!7343 = !DILocation(line: 5090, column: 8, scope: !7342)
!7344 = !DILocation(line: 5090, column: 21, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 5090, column: 3)
!7346 = !DILocation(line: 5090, column: 31, scope: !7345)
!7347 = !DILocation(line: 5090, column: 29, scope: !7345)
!7348 = !DILocation(line: 5090, column: 3, scope: !7342)
!7349 = !DILocalVariable(name: "f", scope: !7350, file: !3, line: 5092, type: !182)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 5091, column: 5)
!7351 = !DILocation(line: 5092, column: 30, scope: !7350)
!7352 = !DILocation(line: 5092, column: 34, scope: !7350)
!7353 = !DILocation(line: 5092, column: 46, scope: !7350)
!7354 = !DILocalVariable(name: "name_length", scope: !7350, file: !3, line: 5093, type: !149)
!7355 = !DILocation(line: 5093, column: 14, scope: !7350)
!7356 = !DILocation(line: 5093, column: 60, scope: !7350)
!7357 = !DILocation(line: 5093, column: 28, scope: !7350)
!7358 = !DILocalVariable(name: "i", scope: !7359, file: !3, line: 5095, type: !149)
!7359 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 5095, column: 7)
!7360 = !DILocation(line: 5095, column: 19, scope: !7359)
!7361 = !DILocation(line: 5095, column: 12, scope: !7359)
!7362 = !DILocation(line: 5095, column: 26, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 5095, column: 7)
!7364 = !DILocation(line: 5095, column: 30, scope: !7363)
!7365 = !DILocation(line: 5095, column: 28, scope: !7363)
!7366 = !DILocation(line: 5095, column: 7, scope: !7359)
!7367 = !DILocation(line: 5097, column: 15, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 5097, column: 15)
!7369 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 5096, column: 9)
!7370 = !DILocation(line: 5097, column: 27, scope: !7368)
!7371 = !DILocation(line: 5097, column: 30, scope: !7368)
!7372 = !{!6183, !2494, i64 0}
!7373 = !DILocation(line: 5097, column: 15, scope: !7369)
!7374 = !DILocalVariable(name: "idx", scope: !7375, file: !3, line: 5099, type: !149)
!7375 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 5098, column: 13)
!7376 = !DILocation(line: 5099, column: 22, scope: !7375)
!7377 = !DILocation(line: 5099, column: 29, scope: !7375)
!7378 = !DILocation(line: 5100, column: 31, scope: !7375)
!7379 = !DILocation(line: 5100, column: 43, scope: !7375)
!7380 = !DILocation(line: 5100, column: 56, scope: !7375)
!7381 = !DILocation(line: 5100, column: 54, scope: !7375)
!7382 = !DILocation(line: 5100, column: 62, scope: !7375)
!7383 = !DILocation(line: 5100, column: 64, scope: !7375)
!7384 = !DILocation(line: 5100, column: 59, scope: !7375)
!7385 = !DILocation(line: 5100, column: 39, scope: !7375)
!7386 = !DILocation(line: 5101, column: 31, scope: !7375)
!7387 = !DILocation(line: 5101, column: 42, scope: !7375)
!7388 = !DILocation(line: 5101, column: 44, scope: !7375)
!7389 = !DILocation(line: 5101, column: 39, scope: !7375)
!7390 = !DILocalVariable(name: "real_length", scope: !7375, file: !3, line: 5102, type: !149)
!7391 = !DILocation(line: 5102, column: 22, scope: !7375)
!7392 = !DILocation(line: 5102, column: 36, scope: !7375)
!7393 = !DILocation(line: 5102, column: 51, scope: !7375)
!7394 = !DILocation(line: 5102, column: 58, scope: !7375)
!7395 = !DILocation(line: 5102, column: 55, scope: !7375)
!7396 = !DILocation(line: 5102, column: 50, scope: !7375)
!7397 = !DILocation(line: 5102, column: 48, scope: !7375)
!7398 = !DILocation(line: 5104, column: 19, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 5104, column: 19)
!7400 = !DILocation(line: 5104, column: 31, scope: !7399)
!7401 = !DILocation(line: 5104, column: 34, scope: !7399)
!7402 = !DILocation(line: 5104, column: 42, scope: !7399)
!7403 = !DILocation(line: 5104, column: 49, scope: !7399)
!7404 = !DILocation(line: 5104, column: 47, scope: !7399)
!7405 = !DILocation(line: 5104, column: 19, scope: !7375)
!7406 = !DILocation(line: 5106, column: 47, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 5105, column: 17)
!7408 = !DILocation(line: 5107, column: 49, scope: !7407)
!7409 = !DILocation(line: 5107, column: 61, scope: !7407)
!7410 = !DILocation(line: 5107, column: 64, scope: !7407)
!7411 = !DILocation(line: 5107, column: 72, scope: !7407)
!7412 = !DILocation(line: 5107, column: 47, scope: !7407)
!7413 = !DILocation(line: 5106, column: 19, scope: !7407)
!7414 = !DILocation(line: 5106, column: 31, scope: !7407)
!7415 = !DILocation(line: 5106, column: 34, scope: !7407)
!7416 = !DILocation(line: 5106, column: 43, scope: !7407)
!7417 = !{!6183, !2499, i64 8}
!7418 = !DILocation(line: 5108, column: 49, scope: !7407)
!7419 = !DILocation(line: 5108, column: 19, scope: !7407)
!7420 = !DILocation(line: 5108, column: 31, scope: !7407)
!7421 = !DILocation(line: 5108, column: 34, scope: !7407)
!7422 = !DILocation(line: 5108, column: 42, scope: !7407)
!7423 = !DILocation(line: 5108, column: 47, scope: !7407)
!7424 = !DILocation(line: 5109, column: 47, scope: !7407)
!7425 = !DILocation(line: 5109, column: 59, scope: !7407)
!7426 = !DILocation(line: 5109, column: 62, scope: !7407)
!7427 = !DILocation(line: 5110, column: 49, scope: !7407)
!7428 = !DILocation(line: 5110, column: 47, scope: !7407)
!7429 = !DILocation(line: 5109, column: 19, scope: !7407)
!7430 = !DILocation(line: 5109, column: 31, scope: !7407)
!7431 = !DILocation(line: 5109, column: 34, scope: !7407)
!7432 = !DILocation(line: 5109, column: 44, scope: !7407)
!7433 = !DILocation(line: 5111, column: 17, scope: !7407)
!7434 = !DILocation(line: 5112, column: 13, scope: !7375)
!7435 = !DILocation(line: 5113, column: 9, scope: !7369)
!7436 = !DILocation(line: 5095, column: 40, scope: !7363)
!7437 = !DILocation(line: 5095, column: 7, scope: !7363)
!7438 = distinct !{!7438, !7366, !7439}
!7439 = !DILocation(line: 5113, column: 9, scope: !7359)
!7440 = !DILocation(line: 5114, column: 5, scope: !7350)
!7441 = !DILocation(line: 5090, column: 43, scope: !7345)
!7442 = !DILocation(line: 5090, column: 3, scope: !7345)
!7443 = distinct !{!7443, !7348, !7444}
!7444 = !DILocation(line: 5114, column: 5, scope: !7342)
!7445 = !DILocation(line: 5117, column: 15, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 5117, column: 3)
!7447 = !DILocation(line: 5117, column: 13, scope: !7446)
!7448 = !DILocation(line: 5117, column: 8, scope: !7446)
!7449 = !DILocation(line: 5117, column: 29, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 5117, column: 3)
!7451 = !DILocation(line: 5117, column: 27, scope: !7450)
!7452 = !DILocation(line: 5117, column: 3, scope: !7446)
!7453 = !DILocation(line: 5119, column: 11, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 5119, column: 11)
!7455 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 5118, column: 5)
!7456 = !DILocation(line: 5119, column: 23, scope: !7454)
!7457 = !DILocation(line: 5119, column: 28, scope: !7454)
!7458 = !DILocation(line: 5119, column: 33, scope: !7454)
!7459 = !DILocation(line: 5119, column: 11, scope: !7455)
!7460 = !DILocation(line: 5120, column: 9, scope: !7454)
!7461 = !DILocation(line: 5121, column: 5, scope: !7455)
!7462 = !DILocation(line: 5117, column: 35, scope: !7450)
!7463 = !DILocation(line: 5117, column: 3, scope: !7450)
!7464 = distinct !{!7464, !7452, !7465}
!7465 = !DILocation(line: 5121, column: 5, scope: !7446)
!7466 = !DILocation(line: 5123, column: 10, scope: !7330)
!7467 = !DILocation(line: 5123, column: 3, scope: !7330)
!7468 = distinct !DISubprogram(name: "length_of_file_name_and_frills", scope: !3, file: !3, line: 4813, type: !734, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7469 = !DILocalVariable(name: "f", arg: 1, scope: !7468, file: !3, line: 4813, type: !182)
!7470 = !DILocation(line: 4813, column: 56, scope: !7468)
!7471 = !DILocalVariable(name: "len", scope: !7468, file: !3, line: 4815, type: !149)
!7472 = !DILocation(line: 4815, column: 10, scope: !7468)
!7473 = !DILocalVariable(name: "buf", scope: !7468, file: !3, line: 4816, type: !610)
!7474 = !DILocation(line: 4816, column: 8, scope: !7468)
!7475 = !DILocation(line: 4818, column: 7, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 4818, column: 7)
!7477 = !DILocation(line: 4818, column: 7, scope: !7468)
!7478 = !DILocation(line: 4819, column: 17, scope: !7476)
!7479 = !DILocation(line: 4819, column: 24, scope: !7476)
!7480 = !DILocation(line: 4820, column: 38, scope: !7476)
!7481 = !DILocation(line: 4820, column: 41, scope: !7476)
!7482 = !DILocation(line: 4820, column: 46, scope: !7476)
!7483 = !DILocation(line: 4820, column: 54, scope: !7476)
!7484 = !DILocation(line: 4820, column: 27, scope: !7476)
!7485 = !DILocation(line: 4820, column: 19, scope: !7476)
!7486 = !DILocation(line: 4821, column: 19, scope: !7476)
!7487 = !DILocation(line: 4819, column: 14, scope: !7476)
!7488 = !DILocation(line: 4819, column: 9, scope: !7476)
!7489 = !DILocation(line: 4819, column: 5, scope: !7476)
!7490 = !DILocation(line: 4823, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 4823, column: 7)
!7492 = !DILocation(line: 4823, column: 7, scope: !7468)
!7493 = !DILocation(line: 4824, column: 17, scope: !7491)
!7494 = !DILocation(line: 4824, column: 24, scope: !7491)
!7495 = !DILocation(line: 4825, column: 29, scope: !7491)
!7496 = !DILocation(line: 4825, column: 32, scope: !7491)
!7497 = !DILocation(line: 4825, column: 27, scope: !7491)
!7498 = !DILocation(line: 4826, column: 45, scope: !7491)
!7499 = !DILocation(line: 4826, column: 67, scope: !7491)
!7500 = !DILocation(line: 4827, column: 45, scope: !7491)
!7501 = !DILocation(line: 4828, column: 45, scope: !7491)
!7502 = !DILocation(line: 4826, column: 29, scope: !7491)
!7503 = !DILocation(line: 4825, column: 19, scope: !7491)
!7504 = !DILocation(line: 4829, column: 19, scope: !7491)
!7505 = !DILocation(line: 4824, column: 14, scope: !7491)
!7506 = !DILocation(line: 4824, column: 9, scope: !7491)
!7507 = !DILocation(line: 4824, column: 5, scope: !7491)
!7508 = !DILocation(line: 4831, column: 7, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 4831, column: 7)
!7510 = !DILocation(line: 4831, column: 7, scope: !7468)
!7511 = !DILocation(line: 4832, column: 17, scope: !7509)
!7512 = !DILocation(line: 4832, column: 24, scope: !7509)
!7513 = !DILocation(line: 4832, column: 49, scope: !7509)
!7514 = !DILocation(line: 4832, column: 52, scope: !7509)
!7515 = !DILocation(line: 4832, column: 41, scope: !7509)
!7516 = !DILocation(line: 4832, column: 64, scope: !7509)
!7517 = !DILocation(line: 4832, column: 14, scope: !7509)
!7518 = !DILocation(line: 4832, column: 9, scope: !7509)
!7519 = !DILocation(line: 4832, column: 5, scope: !7509)
!7520 = !DILocation(line: 4834, column: 28, scope: !7468)
!7521 = !DILocation(line: 4834, column: 31, scope: !7468)
!7522 = !DILocation(line: 4834, column: 37, scope: !7468)
!7523 = !DILocation(line: 4834, column: 63, scope: !7468)
!7524 = !DILocation(line: 4834, column: 66, scope: !7468)
!7525 = !DILocation(line: 4834, column: 10, scope: !7468)
!7526 = !DILocation(line: 4834, column: 7, scope: !7468)
!7527 = !DILocation(line: 4836, column: 7, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 4836, column: 7)
!7529 = !DILocation(line: 4836, column: 23, scope: !7528)
!7530 = !DILocation(line: 4836, column: 7, scope: !7468)
!7531 = !DILocalVariable(name: "c", scope: !7532, file: !3, line: 4838, type: !144)
!7532 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 4837, column: 5)
!7533 = !DILocation(line: 4838, column: 12, scope: !7532)
!7534 = !DILocation(line: 4838, column: 36, scope: !7532)
!7535 = !DILocation(line: 4838, column: 39, scope: !7532)
!7536 = !DILocation(line: 4838, column: 48, scope: !7532)
!7537 = !DILocation(line: 4838, column: 51, scope: !7532)
!7538 = !DILocation(line: 4838, column: 56, scope: !7532)
!7539 = !DILocation(line: 4838, column: 65, scope: !7532)
!7540 = !DILocation(line: 4838, column: 68, scope: !7532)
!7541 = !DILocation(line: 4838, column: 16, scope: !7532)
!7542 = !DILocation(line: 4839, column: 15, scope: !7532)
!7543 = !DILocation(line: 4839, column: 17, scope: !7532)
!7544 = !DILocation(line: 4839, column: 14, scope: !7532)
!7545 = !DILocation(line: 4839, column: 11, scope: !7532)
!7546 = !DILocation(line: 4840, column: 5, scope: !7532)
!7547 = !DILocation(line: 4842, column: 10, scope: !7468)
!7548 = !DILocation(line: 4842, column: 3, scope: !7468)
!7549 = distinct !DISubprogram(name: "indent", scope: !3, file: !3, line: 4964, type: !748, scopeLine: 4965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7550 = !DILocalVariable(name: "from", arg: 1, scope: !7549, file: !3, line: 4964, type: !149)
!7551 = !DILocation(line: 4964, column: 16, scope: !7549)
!7552 = !DILocalVariable(name: "to", arg: 2, scope: !7549, file: !3, line: 4964, type: !149)
!7553 = !DILocation(line: 4964, column: 29, scope: !7549)
!7554 = !DILocation(line: 4966, column: 3, scope: !7549)
!7555 = !DILocation(line: 4966, column: 10, scope: !7549)
!7556 = !DILocation(line: 4966, column: 17, scope: !7549)
!7557 = !DILocation(line: 4966, column: 15, scope: !7549)
!7558 = !DILocation(line: 4968, column: 11, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 4968, column: 11)
!7560 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 4967, column: 5)
!7561 = !DILocation(line: 4968, column: 19, scope: !7559)
!7562 = !DILocation(line: 4968, column: 24, scope: !7559)
!7563 = !DILocation(line: 4968, column: 27, scope: !7559)
!7564 = !DILocation(line: 4968, column: 32, scope: !7559)
!7565 = !DILocation(line: 4968, column: 30, scope: !7559)
!7566 = !DILocation(line: 4968, column: 43, scope: !7559)
!7567 = !DILocation(line: 4968, column: 48, scope: !7559)
!7568 = !DILocation(line: 4968, column: 55, scope: !7559)
!7569 = !DILocation(line: 4968, column: 53, scope: !7559)
!7570 = !DILocation(line: 4968, column: 40, scope: !7559)
!7571 = !DILocation(line: 4968, column: 11, scope: !7560)
!7572 = !DILocation(line: 4970, column: 11, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 4969, column: 9)
!7574 = !DILocation(line: 4971, column: 19, scope: !7573)
!7575 = !DILocation(line: 4971, column: 29, scope: !7573)
!7576 = !DILocation(line: 4971, column: 36, scope: !7573)
!7577 = !DILocation(line: 4971, column: 34, scope: !7573)
!7578 = !DILocation(line: 4971, column: 27, scope: !7573)
!7579 = !DILocation(line: 4971, column: 16, scope: !7573)
!7580 = !DILocation(line: 4972, column: 9, scope: !7573)
!7581 = !DILocation(line: 4975, column: 11, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 4974, column: 9)
!7583 = !DILocation(line: 4976, column: 15, scope: !7582)
!7584 = distinct !{!7584, !7554, !7585}
!7585 = !DILocation(line: 4978, column: 5, scope: !7549)
!7586 = !DILocation(line: 4979, column: 1, scope: !7549)
!7587 = distinct !DISubprogram(name: "quote_name_width", scope: !3, file: !3, line: 4432, type: !736, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7588 = !DILocalVariable(name: "name", arg: 1, scope: !7587, file: !3, line: 4432, type: !146)
!7589 = !DILocation(line: 4432, column: 31, scope: !7587)
!7590 = !DILocalVariable(name: "options", arg: 2, scope: !7587, file: !3, line: 4432, type: !621)
!7591 = !DILocation(line: 4432, column: 67, scope: !7587)
!7592 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !7587, file: !3, line: 4433, type: !27)
!7593 = !DILocation(line: 4433, column: 23, scope: !7587)
!7594 = !DILocalVariable(name: "smallbuf", scope: !7587, file: !3, line: 4435, type: !623)
!7595 = !DILocation(line: 4435, column: 8, scope: !7587)
!7596 = !DILocalVariable(name: "buf", scope: !7587, file: !3, line: 4436, type: !143)
!7597 = !DILocation(line: 4436, column: 9, scope: !7587)
!7598 = !DILocation(line: 4436, column: 15, scope: !7587)
!7599 = !DILocalVariable(name: "width", scope: !7587, file: !3, line: 4437, type: !149)
!7600 = !DILocation(line: 4437, column: 10, scope: !7587)
!7601 = !DILocalVariable(name: "pad", scope: !7587, file: !3, line: 4438, type: !141)
!7602 = !DILocation(line: 4438, column: 8, scope: !7587)
!7603 = !DILocation(line: 4440, column: 51, scope: !7587)
!7604 = !DILocation(line: 4440, column: 57, scope: !7587)
!7605 = !DILocation(line: 4441, column: 19, scope: !7587)
!7606 = !DILocation(line: 4440, column: 3, scope: !7587)
!7607 = !DILocation(line: 4443, column: 7, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 4443, column: 7)
!7609 = !DILocation(line: 4443, column: 14, scope: !7608)
!7610 = !DILocation(line: 4443, column: 11, scope: !7608)
!7611 = !DILocation(line: 4443, column: 23, scope: !7608)
!7612 = !DILocation(line: 4443, column: 26, scope: !7608)
!7613 = !DILocation(line: 4443, column: 33, scope: !7608)
!7614 = !DILocation(line: 4443, column: 30, scope: !7608)
!7615 = !DILocation(line: 4443, column: 7, scope: !7587)
!7616 = !DILocation(line: 4444, column: 11, scope: !7608)
!7617 = !DILocation(line: 4444, column: 5, scope: !7608)
!7618 = !DILocation(line: 4446, column: 12, scope: !7587)
!7619 = !DILocation(line: 4446, column: 9, scope: !7587)
!7620 = !DILocation(line: 4448, column: 10, scope: !7587)
!7621 = !DILocation(line: 4448, column: 3, scope: !7587)
!7622 = !DILocalVariable(name: "i", scope: !1010, file: !3, line: 5011, type: !149)
!7623 = !DILocation(line: 5011, column: 10, scope: !1010)
!7624 = !DILocalVariable(name: "max_cols", scope: !1010, file: !3, line: 5012, type: !149)
!7625 = !DILocation(line: 5012, column: 10, scope: !1010)
!7626 = !DILocation(line: 5012, column: 21, scope: !1010)
!7627 = !DILocation(line: 5017, column: 7, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 5017, column: 7)
!7629 = !DILocation(line: 5017, column: 27, scope: !7628)
!7630 = !DILocation(line: 5017, column: 25, scope: !7628)
!7631 = !DILocation(line: 5017, column: 7, scope: !1010)
!7632 = !DILocalVariable(name: "new_column_info_alloc", scope: !7633, file: !3, line: 5019, type: !149)
!7633 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 5018, column: 5)
!7634 = !DILocation(line: 5019, column: 14, scope: !7633)
!7635 = !DILocalVariable(name: "p", scope: !7633, file: !3, line: 5020, type: !148)
!7636 = !DILocation(line: 5020, column: 15, scope: !7633)
!7637 = !DILocation(line: 5022, column: 11, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 5022, column: 11)
!7639 = !DILocation(line: 5022, column: 22, scope: !7638)
!7640 = !DILocation(line: 5022, column: 30, scope: !7638)
!7641 = !DILocation(line: 5022, column: 20, scope: !7638)
!7642 = !DILocation(line: 5022, column: 11, scope: !7633)
!7643 = !DILocation(line: 5029, column: 36, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 5023, column: 9)
!7645 = !DILocation(line: 5029, column: 49, scope: !7644)
!7646 = !DILocation(line: 5029, column: 25, scope: !7644)
!7647 = !DILocation(line: 5029, column: 23, scope: !7644)
!7648 = !DILocation(line: 5031, column: 39, scope: !7644)
!7649 = !DILocation(line: 5031, column: 37, scope: !7644)
!7650 = !DILocation(line: 5031, column: 33, scope: !7644)
!7651 = !DILocation(line: 5032, column: 9, scope: !7644)
!7652 = !DILocation(line: 5035, column: 36, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 5034, column: 9)
!7654 = !DILocation(line: 5035, column: 49, scope: !7653)
!7655 = !DILocation(line: 5035, column: 25, scope: !7653)
!7656 = !DILocation(line: 5035, column: 23, scope: !7653)
!7657 = !DILocation(line: 5036, column: 35, scope: !7653)
!7658 = !DILocation(line: 5036, column: 33, scope: !7653)
!7659 = !DILocalVariable(name: "column_info_growth", scope: !7660, file: !3, line: 5044, type: !149)
!7660 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 5043, column: 7)
!7661 = !DILocation(line: 5044, column: 16, scope: !7660)
!7662 = !DILocation(line: 5044, column: 37, scope: !7660)
!7663 = !DILocation(line: 5044, column: 61, scope: !7660)
!7664 = !DILocation(line: 5044, column: 59, scope: !7660)
!7665 = !DILocalVariable(name: "s", scope: !7660, file: !3, line: 5045, type: !149)
!7666 = !DILocation(line: 5045, column: 16, scope: !7660)
!7667 = !DILocation(line: 5045, column: 20, scope: !7660)
!7668 = !DILocation(line: 5045, column: 38, scope: !7660)
!7669 = !DILocation(line: 5045, column: 44, scope: !7660)
!7670 = !DILocation(line: 5045, column: 42, scope: !7660)
!7671 = !DILocalVariable(name: "t", scope: !7660, file: !3, line: 5046, type: !149)
!7672 = !DILocation(line: 5046, column: 16, scope: !7660)
!7673 = !DILocation(line: 5046, column: 20, scope: !7660)
!7674 = !DILocation(line: 5046, column: 24, scope: !7660)
!7675 = !DILocation(line: 5046, column: 22, scope: !7660)
!7676 = !DILocation(line: 5047, column: 13, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 5047, column: 13)
!7678 = !DILocation(line: 5047, column: 17, scope: !7677)
!7679 = !DILocation(line: 5047, column: 15, scope: !7677)
!7680 = !DILocation(line: 5047, column: 39, scope: !7677)
!7681 = !DILocation(line: 5047, column: 42, scope: !7677)
!7682 = !DILocation(line: 5047, column: 46, scope: !7677)
!7683 = !DILocation(line: 5047, column: 44, scope: !7677)
!7684 = !DILocation(line: 5047, column: 68, scope: !7677)
!7685 = !DILocation(line: 5047, column: 65, scope: !7677)
!7686 = !DILocation(line: 5047, column: 13, scope: !7660)
!7687 = !DILocation(line: 5048, column: 11, scope: !7677)
!7688 = !DILocation(line: 5049, column: 23, scope: !7660)
!7689 = !DILocation(line: 5049, column: 25, scope: !7660)
!7690 = !DILocation(line: 5049, column: 13, scope: !7660)
!7691 = !DILocation(line: 5049, column: 11, scope: !7660)
!7692 = !DILocation(line: 5053, column: 16, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 5053, column: 7)
!7694 = !DILocation(line: 5053, column: 14, scope: !7693)
!7695 = !DILocation(line: 5053, column: 12, scope: !7693)
!7696 = !DILocation(line: 5053, column: 35, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 5053, column: 7)
!7698 = !DILocation(line: 5053, column: 39, scope: !7697)
!7699 = !DILocation(line: 5053, column: 37, scope: !7697)
!7700 = !DILocation(line: 5053, column: 7, scope: !7693)
!7701 = !DILocation(line: 5055, column: 36, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 5054, column: 9)
!7703 = !DILocation(line: 5055, column: 11, scope: !7702)
!7704 = !DILocation(line: 5055, column: 23, scope: !7702)
!7705 = !DILocation(line: 5055, column: 26, scope: !7702)
!7706 = !DILocation(line: 5055, column: 34, scope: !7702)
!7707 = !DILocation(line: 5056, column: 16, scope: !7702)
!7708 = !DILocation(line: 5056, column: 18, scope: !7702)
!7709 = !DILocation(line: 5056, column: 13, scope: !7702)
!7710 = !DILocation(line: 5057, column: 9, scope: !7702)
!7711 = !DILocation(line: 5053, column: 63, scope: !7697)
!7712 = !DILocation(line: 5053, column: 7, scope: !7697)
!7713 = distinct !{!7713, !7700, !7714}
!7714 = !DILocation(line: 5057, column: 9, scope: !7693)
!7715 = !DILocation(line: 5059, column: 27, scope: !7633)
!7716 = !DILocation(line: 5059, column: 25, scope: !7633)
!7717 = !DILocation(line: 5060, column: 5, scope: !7633)
!7718 = !DILocation(line: 5062, column: 10, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 5062, column: 3)
!7720 = !DILocation(line: 5062, column: 8, scope: !7719)
!7721 = !DILocation(line: 5062, column: 15, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 5062, column: 3)
!7723 = !DILocation(line: 5062, column: 19, scope: !7722)
!7724 = !DILocation(line: 5062, column: 17, scope: !7722)
!7725 = !DILocation(line: 5062, column: 3, scope: !7719)
!7726 = !DILocalVariable(name: "j", scope: !7727, file: !3, line: 5064, type: !149)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 5063, column: 5)
!7728 = !DILocation(line: 5064, column: 14, scope: !7727)
!7729 = !DILocation(line: 5066, column: 7, scope: !7727)
!7730 = !DILocation(line: 5066, column: 19, scope: !7727)
!7731 = !DILocation(line: 5066, column: 22, scope: !7727)
!7732 = !DILocation(line: 5066, column: 32, scope: !7727)
!7733 = !DILocation(line: 5067, column: 34, scope: !7727)
!7734 = !DILocation(line: 5067, column: 36, scope: !7727)
!7735 = !DILocation(line: 5067, column: 41, scope: !7727)
!7736 = !DILocation(line: 5067, column: 7, scope: !7727)
!7737 = !DILocation(line: 5067, column: 19, scope: !7727)
!7738 = !DILocation(line: 5067, column: 22, scope: !7727)
!7739 = !DILocation(line: 5067, column: 31, scope: !7727)
!7740 = !DILocation(line: 5068, column: 14, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 5068, column: 7)
!7742 = !DILocation(line: 5068, column: 12, scope: !7741)
!7743 = !DILocation(line: 5068, column: 19, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 5068, column: 7)
!7745 = !DILocation(line: 5068, column: 24, scope: !7744)
!7746 = !DILocation(line: 5068, column: 21, scope: !7744)
!7747 = !DILocation(line: 5068, column: 7, scope: !7741)
!7748 = !DILocation(line: 5069, column: 9, scope: !7744)
!7749 = !DILocation(line: 5069, column: 21, scope: !7744)
!7750 = !DILocation(line: 5069, column: 24, scope: !7744)
!7751 = !DILocation(line: 5069, column: 32, scope: !7744)
!7752 = !DILocation(line: 5069, column: 35, scope: !7744)
!7753 = !DILocation(line: 5068, column: 27, scope: !7744)
!7754 = !DILocation(line: 5068, column: 7, scope: !7744)
!7755 = distinct !{!7755, !7747, !7756}
!7756 = !DILocation(line: 5069, column: 37, scope: !7741)
!7757 = !DILocation(line: 5070, column: 5, scope: !7727)
!7758 = !DILocation(line: 5062, column: 29, scope: !7722)
!7759 = !DILocation(line: 5062, column: 3, scope: !7722)
!7760 = distinct !{!7760, !7725, !7761}
!7761 = !DILocation(line: 5070, column: 5, scope: !7719)
!7762 = !DILocation(line: 5071, column: 1, scope: !1010)
!7763 = distinct !DISubprogram(name: "is_directory", scope: !3, file: !3, line: 3435, type: !685, scopeLine: 3436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7764 = !DILocalVariable(name: "f", arg: 1, scope: !7763, file: !3, line: 3435, type: !182)
!7765 = !DILocation(line: 3435, column: 38, scope: !7763)
!7766 = !DILocation(line: 3437, column: 10, scope: !7763)
!7767 = !DILocation(line: 3437, column: 13, scope: !7763)
!7768 = !DILocation(line: 3437, column: 22, scope: !7763)
!7769 = !DILocation(line: 3437, column: 35, scope: !7763)
!7770 = !DILocation(line: 3437, column: 38, scope: !7763)
!7771 = !DILocation(line: 3437, column: 41, scope: !7763)
!7772 = !DILocation(line: 3437, column: 50, scope: !7763)
!7773 = !DILocation(line: 3437, column: 3, scope: !7763)
!7774 = distinct !DISubprogram(name: "basename_is_dot_or_dotdot", scope: !3, file: !3, line: 3497, type: !556, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7775 = !DILocalVariable(name: "name", arg: 1, scope: !7774, file: !3, line: 3497, type: !146)
!7776 = !DILocation(line: 3497, column: 40, scope: !7774)
!7777 = !DILocalVariable(name: "base", scope: !7774, file: !3, line: 3499, type: !146)
!7778 = !DILocation(line: 3499, column: 15, scope: !7774)
!7779 = !DILocation(line: 3499, column: 38, scope: !7774)
!7780 = !DILocation(line: 3499, column: 22, scope: !7774)
!7781 = !DILocation(line: 3500, column: 25, scope: !7774)
!7782 = !DILocation(line: 3500, column: 10, scope: !7774)
!7783 = !DILocation(line: 3500, column: 3, scope: !7774)
!7784 = distinct !DISubprogram(name: "free_ent", scope: !3, file: !3, line: 2974, type: !651, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7785 = !DILocalVariable(name: "f", arg: 1, scope: !7784, file: !3, line: 2974, type: !250)
!7786 = !DILocation(line: 2974, column: 28, scope: !7784)
!7787 = !DILocation(line: 2976, column: 9, scope: !7784)
!7788 = !DILocation(line: 2976, column: 12, scope: !7784)
!7789 = !DILocation(line: 2976, column: 3, scope: !7784)
!7790 = !DILocation(line: 2977, column: 9, scope: !7784)
!7791 = !DILocation(line: 2977, column: 12, scope: !7784)
!7792 = !DILocation(line: 2977, column: 3, scope: !7784)
!7793 = !DILocation(line: 2978, column: 9, scope: !7784)
!7794 = !DILocation(line: 2978, column: 12, scope: !7784)
!7795 = !DILocation(line: 2978, column: 3, scope: !7784)
!7796 = !DILocation(line: 2979, column: 7, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2979, column: 7)
!7798 = !DILocation(line: 2979, column: 10, scope: !7797)
!7799 = !DILocation(line: 2979, column: 19, scope: !7797)
!7800 = !DILocation(line: 2979, column: 7, scope: !7784)
!7801 = !DILocation(line: 2981, column: 11, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2981, column: 11)
!7803 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2980, column: 5)
!7804 = !DILocation(line: 2981, column: 11, scope: !7803)
!7805 = !DILocation(line: 2982, column: 15, scope: !7802)
!7806 = !DILocation(line: 2982, column: 18, scope: !7802)
!7807 = !DILocation(line: 2982, column: 9, scope: !7802)
!7808 = !DILocation(line: 2984, column: 18, scope: !7802)
!7809 = !DILocation(line: 2984, column: 21, scope: !7802)
!7810 = !DILocation(line: 2984, column: 9, scope: !7802)
!7811 = !DILocation(line: 2985, column: 5, scope: !7803)
!7812 = !DILocation(line: 2986, column: 1, scope: !7784)
!7813 = distinct !DISubprogram(name: "is_smack_enabled", scope: !7814, file: !7814, line: 39, type: !590, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7814 = !DIFile(filename: "./lib/smack.h", directory: "/home/mohamad/clone/coreutils")
!7815 = !DILocation(line: 44, column: 3, scope: !7813)
!7816 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !792, file: !792, line: 265, type: !556, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7817 = !DILocalVariable(name: "file_name", arg: 1, scope: !7816, file: !792, line: 265, type: !146)
!7818 = !DILocation(line: 265, column: 28, scope: !7816)
!7819 = !DILocation(line: 267, column: 7, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !792, line: 267, column: 7)
!7821 = !DILocation(line: 267, column: 20, scope: !7820)
!7822 = !DILocation(line: 267, column: 7, scope: !7816)
!7823 = !DILocalVariable(name: "sep", scope: !7824, file: !792, line: 269, type: !144)
!7824 = distinct !DILexicalBlock(scope: !7820, file: !792, line: 268, column: 5)
!7825 = !DILocation(line: 269, column: 12, scope: !7824)
!7826 = !DILocation(line: 269, column: 18, scope: !7824)
!7827 = !DILocation(line: 269, column: 29, scope: !7824)
!7828 = !DILocation(line: 269, column: 42, scope: !7824)
!7829 = !DILocation(line: 269, column: 50, scope: !7824)
!7830 = !DILocation(line: 270, column: 17, scope: !7824)
!7831 = !DILocation(line: 270, column: 21, scope: !7824)
!7832 = !DILocation(line: 270, column: 24, scope: !7824)
!7833 = !DILocation(line: 270, column: 7, scope: !7824)
!7834 = !DILocation(line: 273, column: 5, scope: !7820)
!7835 = !DILocation(line: 274, column: 1, scope: !7816)
!7836 = distinct !DISubprogram(name: "initialize_ordering_vector", scope: !3, file: !3, line: 3783, type: !336, scopeLine: 3784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7837 = !DILocalVariable(name: "i", scope: !7838, file: !3, line: 3785, type: !149)
!7838 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 3785, column: 3)
!7839 = !DILocation(line: 3785, column: 15, scope: !7838)
!7840 = !DILocation(line: 3785, column: 8, scope: !7838)
!7841 = !DILocation(line: 3785, column: 22, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 3785, column: 3)
!7843 = !DILocation(line: 3785, column: 26, scope: !7842)
!7844 = !DILocation(line: 3785, column: 24, scope: !7842)
!7845 = !DILocation(line: 3785, column: 3, scope: !7838)
!7846 = !DILocation(line: 3786, column: 23, scope: !7842)
!7847 = !DILocation(line: 3786, column: 32, scope: !7842)
!7848 = !DILocation(line: 3786, column: 22, scope: !7842)
!7849 = !DILocation(line: 3786, column: 5, scope: !7842)
!7850 = !DILocation(line: 3786, column: 17, scope: !7842)
!7851 = !DILocation(line: 3786, column: 20, scope: !7842)
!7852 = !DILocation(line: 3785, column: 39, scope: !7842)
!7853 = !DILocation(line: 3785, column: 3, scope: !7842)
!7854 = distinct !{!7854, !7845, !7855}
!7855 = !DILocation(line: 3786, column: 33, scope: !7838)
!7856 = !DILocation(line: 3787, column: 1, scope: !7836)
!7857 = distinct !DISubprogram(name: "xstrcoll_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7858 = !DILocalVariable(name: "a", arg: 1, scope: !7857, file: !3, line: 3691, type: !704)
!7859 = !DILocation(line: 3691, column: 1, scope: !7857)
!7860 = !DILocalVariable(name: "b", arg: 2, scope: !7857, file: !3, line: 3691, type: !704)
!7861 = distinct !DISubprogram(name: "xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7862 = !DILocalVariable(name: "a", arg: 1, scope: !7861, file: !3, line: 3691, type: !704)
!7863 = !DILocation(line: 3691, column: 1, scope: !7861)
!7864 = !DILocalVariable(name: "b", arg: 2, scope: !7861, file: !3, line: 3691, type: !704)
!7865 = !DILocalVariable(name: "a_is_dir", scope: !7866, file: !3, line: 3691, type: !141)
!7866 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 3691, column: 1)
!7867 = !DILocation(line: 3691, column: 1, scope: !7866)
!7868 = !DILocalVariable(name: "b_is_dir", scope: !7866, file: !3, line: 3691, type: !141)
!7869 = !DILocation(line: 3691, column: 1, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 3691, column: 1)
!7871 = !DILocation(line: 3691, column: 1, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 3691, column: 1)
!7873 = distinct !DISubprogram(name: "rev_xstrcoll_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7874 = !DILocalVariable(name: "a", arg: 1, scope: !7873, file: !3, line: 3691, type: !704)
!7875 = !DILocation(line: 3691, column: 1, scope: !7873)
!7876 = !DILocalVariable(name: "b", arg: 2, scope: !7873, file: !3, line: 3691, type: !704)
!7877 = distinct !DISubprogram(name: "rev_xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7878 = !DILocalVariable(name: "a", arg: 1, scope: !7877, file: !3, line: 3691, type: !704)
!7879 = !DILocation(line: 3691, column: 1, scope: !7877)
!7880 = !DILocalVariable(name: "b", arg: 2, scope: !7877, file: !3, line: 3691, type: !704)
!7881 = !DILocalVariable(name: "a_is_dir", scope: !7882, file: !3, line: 3691, type: !141)
!7882 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 3691, column: 1)
!7883 = !DILocation(line: 3691, column: 1, scope: !7882)
!7884 = !DILocalVariable(name: "b_is_dir", scope: !7882, file: !3, line: 3691, type: !141)
!7885 = !DILocation(line: 3691, column: 1, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 3691, column: 1)
!7887 = !DILocation(line: 3691, column: 1, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 3691, column: 1)
!7889 = distinct !DISubprogram(name: "strcmp_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7890 = !DILocalVariable(name: "a", arg: 1, scope: !7889, file: !3, line: 3691, type: !704)
!7891 = !DILocation(line: 3691, column: 1, scope: !7889)
!7892 = !DILocalVariable(name: "b", arg: 2, scope: !7889, file: !3, line: 3691, type: !704)
!7893 = distinct !DISubprogram(name: "strcmp_df_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7894 = !DILocalVariable(name: "a", arg: 1, scope: !7893, file: !3, line: 3691, type: !704)
!7895 = !DILocation(line: 3691, column: 1, scope: !7893)
!7896 = !DILocalVariable(name: "b", arg: 2, scope: !7893, file: !3, line: 3691, type: !704)
!7897 = !DILocalVariable(name: "a_is_dir", scope: !7898, file: !3, line: 3691, type: !141)
!7898 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 3691, column: 1)
!7899 = !DILocation(line: 3691, column: 1, scope: !7898)
!7900 = !DILocalVariable(name: "b_is_dir", scope: !7898, file: !3, line: 3691, type: !141)
!7901 = !DILocation(line: 3691, column: 1, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 3691, column: 1)
!7903 = !DILocation(line: 3691, column: 1, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 3691, column: 1)
!7905 = distinct !DISubprogram(name: "rev_strcmp_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7906 = !DILocalVariable(name: "a", arg: 1, scope: !7905, file: !3, line: 3691, type: !704)
!7907 = !DILocation(line: 3691, column: 1, scope: !7905)
!7908 = !DILocalVariable(name: "b", arg: 2, scope: !7905, file: !3, line: 3691, type: !704)
!7909 = distinct !DISubprogram(name: "rev_strcmp_df_name", scope: !3, file: !3, line: 3691, type: !702, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7910 = !DILocalVariable(name: "a", arg: 1, scope: !7909, file: !3, line: 3691, type: !704)
!7911 = !DILocation(line: 3691, column: 1, scope: !7909)
!7912 = !DILocalVariable(name: "b", arg: 2, scope: !7909, file: !3, line: 3691, type: !704)
!7913 = !DILocalVariable(name: "a_is_dir", scope: !7914, file: !3, line: 3691, type: !141)
!7914 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 3691, column: 1)
!7915 = !DILocation(line: 3691, column: 1, scope: !7914)
!7916 = !DILocalVariable(name: "b_is_dir", scope: !7914, file: !3, line: 3691, type: !141)
!7917 = !DILocation(line: 3691, column: 1, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3691, column: 1)
!7919 = !DILocation(line: 3691, column: 1, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3691, column: 1)
!7921 = distinct !DISubprogram(name: "xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7922 = !DILocalVariable(name: "a", arg: 1, scope: !7921, file: !3, line: 3692, type: !704)
!7923 = !DILocation(line: 3692, column: 1, scope: !7921)
!7924 = !DILocalVariable(name: "b", arg: 2, scope: !7921, file: !3, line: 3692, type: !704)
!7925 = distinct !DISubprogram(name: "xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7926 = !DILocalVariable(name: "a", arg: 1, scope: !7925, file: !3, line: 3692, type: !704)
!7927 = !DILocation(line: 3692, column: 1, scope: !7925)
!7928 = !DILocalVariable(name: "b", arg: 2, scope: !7925, file: !3, line: 3692, type: !704)
!7929 = !DILocalVariable(name: "a_is_dir", scope: !7930, file: !3, line: 3692, type: !141)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 3692, column: 1)
!7931 = !DILocation(line: 3692, column: 1, scope: !7930)
!7932 = !DILocalVariable(name: "b_is_dir", scope: !7930, file: !3, line: 3692, type: !141)
!7933 = !DILocation(line: 3692, column: 1, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 3692, column: 1)
!7935 = !DILocation(line: 3692, column: 1, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 3692, column: 1)
!7937 = distinct !DISubprogram(name: "rev_xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7938 = !DILocalVariable(name: "a", arg: 1, scope: !7937, file: !3, line: 3692, type: !704)
!7939 = !DILocation(line: 3692, column: 1, scope: !7937)
!7940 = !DILocalVariable(name: "b", arg: 2, scope: !7937, file: !3, line: 3692, type: !704)
!7941 = distinct !DISubprogram(name: "rev_xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7942 = !DILocalVariable(name: "a", arg: 1, scope: !7941, file: !3, line: 3692, type: !704)
!7943 = !DILocation(line: 3692, column: 1, scope: !7941)
!7944 = !DILocalVariable(name: "b", arg: 2, scope: !7941, file: !3, line: 3692, type: !704)
!7945 = !DILocalVariable(name: "a_is_dir", scope: !7946, file: !3, line: 3692, type: !141)
!7946 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 3692, column: 1)
!7947 = !DILocation(line: 3692, column: 1, scope: !7946)
!7948 = !DILocalVariable(name: "b_is_dir", scope: !7946, file: !3, line: 3692, type: !141)
!7949 = !DILocation(line: 3692, column: 1, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 3692, column: 1)
!7951 = !DILocation(line: 3692, column: 1, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 3692, column: 1)
!7953 = distinct !DISubprogram(name: "strcmp_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7954 = !DILocalVariable(name: "a", arg: 1, scope: !7953, file: !3, line: 3692, type: !704)
!7955 = !DILocation(line: 3692, column: 1, scope: !7953)
!7956 = !DILocalVariable(name: "b", arg: 2, scope: !7953, file: !3, line: 3692, type: !704)
!7957 = distinct !DISubprogram(name: "strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7958 = !DILocalVariable(name: "a", arg: 1, scope: !7957, file: !3, line: 3692, type: !704)
!7959 = !DILocation(line: 3692, column: 1, scope: !7957)
!7960 = !DILocalVariable(name: "b", arg: 2, scope: !7957, file: !3, line: 3692, type: !704)
!7961 = !DILocalVariable(name: "a_is_dir", scope: !7962, file: !3, line: 3692, type: !141)
!7962 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3692, column: 1)
!7963 = !DILocation(line: 3692, column: 1, scope: !7962)
!7964 = !DILocalVariable(name: "b_is_dir", scope: !7962, file: !3, line: 3692, type: !141)
!7965 = !DILocation(line: 3692, column: 1, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 3692, column: 1)
!7967 = !DILocation(line: 3692, column: 1, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 3692, column: 1)
!7969 = distinct !DISubprogram(name: "rev_strcmp_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7970 = !DILocalVariable(name: "a", arg: 1, scope: !7969, file: !3, line: 3692, type: !704)
!7971 = !DILocation(line: 3692, column: 1, scope: !7969)
!7972 = !DILocalVariable(name: "b", arg: 2, scope: !7969, file: !3, line: 3692, type: !704)
!7973 = distinct !DISubprogram(name: "rev_strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !702, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7974 = !DILocalVariable(name: "a", arg: 1, scope: !7973, file: !3, line: 3692, type: !704)
!7975 = !DILocation(line: 3692, column: 1, scope: !7973)
!7976 = !DILocalVariable(name: "b", arg: 2, scope: !7973, file: !3, line: 3692, type: !704)
!7977 = !DILocalVariable(name: "a_is_dir", scope: !7978, file: !3, line: 3692, type: !141)
!7978 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 3692, column: 1)
!7979 = !DILocation(line: 3692, column: 1, scope: !7978)
!7980 = !DILocalVariable(name: "b_is_dir", scope: !7978, file: !3, line: 3692, type: !141)
!7981 = !DILocation(line: 3692, column: 1, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 3692, column: 1)
!7983 = !DILocation(line: 3692, column: 1, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 3692, column: 1)
!7985 = distinct !DISubprogram(name: "xstrcoll_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7986 = !DILocalVariable(name: "a", arg: 1, scope: !7985, file: !3, line: 3690, type: !704)
!7987 = !DILocation(line: 3690, column: 1, scope: !7985)
!7988 = !DILocalVariable(name: "b", arg: 2, scope: !7985, file: !3, line: 3690, type: !704)
!7989 = distinct !DISubprogram(name: "xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7990 = !DILocalVariable(name: "a", arg: 1, scope: !7989, file: !3, line: 3690, type: !704)
!7991 = !DILocation(line: 3690, column: 1, scope: !7989)
!7992 = !DILocalVariable(name: "b", arg: 2, scope: !7989, file: !3, line: 3690, type: !704)
!7993 = !DILocalVariable(name: "a_is_dir", scope: !7994, file: !3, line: 3690, type: !141)
!7994 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 3690, column: 1)
!7995 = !DILocation(line: 3690, column: 1, scope: !7994)
!7996 = !DILocalVariable(name: "b_is_dir", scope: !7994, file: !3, line: 3690, type: !141)
!7997 = !DILocation(line: 3690, column: 1, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 3690, column: 1)
!7999 = !DILocation(line: 3690, column: 1, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 3690, column: 1)
!8001 = distinct !DISubprogram(name: "rev_xstrcoll_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8002 = !DILocalVariable(name: "a", arg: 1, scope: !8001, file: !3, line: 3690, type: !704)
!8003 = !DILocation(line: 3690, column: 1, scope: !8001)
!8004 = !DILocalVariable(name: "b", arg: 2, scope: !8001, file: !3, line: 3690, type: !704)
!8005 = distinct !DISubprogram(name: "rev_xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8006 = !DILocalVariable(name: "a", arg: 1, scope: !8005, file: !3, line: 3690, type: !704)
!8007 = !DILocation(line: 3690, column: 1, scope: !8005)
!8008 = !DILocalVariable(name: "b", arg: 2, scope: !8005, file: !3, line: 3690, type: !704)
!8009 = !DILocalVariable(name: "a_is_dir", scope: !8010, file: !3, line: 3690, type: !141)
!8010 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 3690, column: 1)
!8011 = !DILocation(line: 3690, column: 1, scope: !8010)
!8012 = !DILocalVariable(name: "b_is_dir", scope: !8010, file: !3, line: 3690, type: !141)
!8013 = !DILocation(line: 3690, column: 1, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3690, column: 1)
!8015 = !DILocation(line: 3690, column: 1, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3690, column: 1)
!8017 = distinct !DISubprogram(name: "strcmp_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8018 = !DILocalVariable(name: "a", arg: 1, scope: !8017, file: !3, line: 3690, type: !704)
!8019 = !DILocation(line: 3690, column: 1, scope: !8017)
!8020 = !DILocalVariable(name: "b", arg: 2, scope: !8017, file: !3, line: 3690, type: !704)
!8021 = distinct !DISubprogram(name: "strcmp_df_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8022 = !DILocalVariable(name: "a", arg: 1, scope: !8021, file: !3, line: 3690, type: !704)
!8023 = !DILocation(line: 3690, column: 1, scope: !8021)
!8024 = !DILocalVariable(name: "b", arg: 2, scope: !8021, file: !3, line: 3690, type: !704)
!8025 = !DILocalVariable(name: "a_is_dir", scope: !8026, file: !3, line: 3690, type: !141)
!8026 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 3690, column: 1)
!8027 = !DILocation(line: 3690, column: 1, scope: !8026)
!8028 = !DILocalVariable(name: "b_is_dir", scope: !8026, file: !3, line: 3690, type: !141)
!8029 = !DILocation(line: 3690, column: 1, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 3690, column: 1)
!8031 = !DILocation(line: 3690, column: 1, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 3690, column: 1)
!8033 = distinct !DISubprogram(name: "rev_strcmp_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8034 = !DILocalVariable(name: "a", arg: 1, scope: !8033, file: !3, line: 3690, type: !704)
!8035 = !DILocation(line: 3690, column: 1, scope: !8033)
!8036 = !DILocalVariable(name: "b", arg: 2, scope: !8033, file: !3, line: 3690, type: !704)
!8037 = distinct !DISubprogram(name: "rev_strcmp_df_size", scope: !3, file: !3, line: 3690, type: !702, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8038 = !DILocalVariable(name: "a", arg: 1, scope: !8037, file: !3, line: 3690, type: !704)
!8039 = !DILocation(line: 3690, column: 1, scope: !8037)
!8040 = !DILocalVariable(name: "b", arg: 2, scope: !8037, file: !3, line: 3690, type: !704)
!8041 = !DILocalVariable(name: "a_is_dir", scope: !8042, file: !3, line: 3690, type: !141)
!8042 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 3690, column: 1)
!8043 = !DILocation(line: 3690, column: 1, scope: !8042)
!8044 = !DILocalVariable(name: "b_is_dir", scope: !8042, file: !3, line: 3690, type: !141)
!8045 = !DILocation(line: 3690, column: 1, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 3690, column: 1)
!8047 = !DILocation(line: 3690, column: 1, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 3690, column: 1)
!8049 = distinct !DISubprogram(name: "xstrcoll_version", scope: !3, file: !3, line: 3709, type: !702, scopeLine: 3710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8050 = !DILocalVariable(name: "a", arg: 1, scope: !8049, file: !3, line: 3709, type: !704)
!8051 = !DILocation(line: 3709, column: 32, scope: !8049)
!8052 = !DILocalVariable(name: "b", arg: 2, scope: !8049, file: !3, line: 3709, type: !704)
!8053 = !DILocation(line: 3709, column: 37, scope: !8049)
!8054 = !DILocation(line: 3710, column: 23, scope: !8049)
!8055 = !DILocation(line: 3710, column: 26, scope: !8049)
!8056 = !DILocation(line: 3710, column: 10, scope: !8049)
!8057 = !DILocation(line: 3710, column: 3, scope: !8049)
!8058 = distinct !DISubprogram(name: "xstrcoll_df_version", scope: !3, file: !3, line: 3713, type: !702, scopeLine: 3714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8059 = !DILocalVariable(name: "a", arg: 1, scope: !8058, file: !3, line: 3713, type: !704)
!8060 = !DILocation(line: 3713, column: 35, scope: !8058)
!8061 = !DILocalVariable(name: "b", arg: 2, scope: !8058, file: !3, line: 3713, type: !704)
!8062 = !DILocation(line: 3713, column: 40, scope: !8058)
!8063 = !DILocation(line: 3714, column: 3, scope: !8058)
!8064 = !DILocalVariable(name: "a_is_dir", scope: !8065, file: !3, line: 3714, type: !141)
!8065 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 3714, column: 3)
!8066 = !DILocation(line: 3714, column: 3, scope: !8065)
!8067 = !DILocalVariable(name: "b_is_dir", scope: !8065, file: !3, line: 3714, type: !141)
!8068 = !DILocation(line: 3714, column: 3, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 3714, column: 3)
!8070 = !DILocation(line: 3714, column: 3, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 3714, column: 3)
!8072 = !DILocation(line: 3714, column: 46, scope: !8058)
!8073 = !DILocation(line: 3714, column: 49, scope: !8058)
!8074 = !DILocation(line: 3714, column: 33, scope: !8058)
!8075 = !DILocation(line: 3714, column: 26, scope: !8058)
!8076 = !DILocation(line: 3714, column: 53, scope: !8058)
!8077 = distinct !DISubprogram(name: "rev_xstrcoll_version", scope: !3, file: !3, line: 3711, type: !702, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8078 = !DILocalVariable(name: "a", arg: 1, scope: !8077, file: !3, line: 3711, type: !704)
!8079 = !DILocation(line: 3711, column: 36, scope: !8077)
!8080 = !DILocalVariable(name: "b", arg: 2, scope: !8077, file: !3, line: 3711, type: !704)
!8081 = !DILocation(line: 3711, column: 41, scope: !8077)
!8082 = !DILocation(line: 3712, column: 23, scope: !8077)
!8083 = !DILocation(line: 3712, column: 26, scope: !8077)
!8084 = !DILocation(line: 3712, column: 10, scope: !8077)
!8085 = !DILocation(line: 3712, column: 3, scope: !8077)
!8086 = distinct !DISubprogram(name: "rev_xstrcoll_df_version", scope: !3, file: !3, line: 3715, type: !702, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8087 = !DILocalVariable(name: "a", arg: 1, scope: !8086, file: !3, line: 3715, type: !704)
!8088 = !DILocation(line: 3715, column: 39, scope: !8086)
!8089 = !DILocalVariable(name: "b", arg: 2, scope: !8086, file: !3, line: 3715, type: !704)
!8090 = !DILocation(line: 3715, column: 44, scope: !8086)
!8091 = !DILocation(line: 3716, column: 3, scope: !8086)
!8092 = !DILocalVariable(name: "a_is_dir", scope: !8093, file: !3, line: 3716, type: !141)
!8093 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 3716, column: 3)
!8094 = !DILocation(line: 3716, column: 3, scope: !8093)
!8095 = !DILocalVariable(name: "b_is_dir", scope: !8093, file: !3, line: 3716, type: !141)
!8096 = !DILocation(line: 3716, column: 3, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 3716, column: 3)
!8098 = !DILocation(line: 3716, column: 3, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 3716, column: 3)
!8100 = !DILocation(line: 3716, column: 46, scope: !8086)
!8101 = !DILocation(line: 3716, column: 49, scope: !8086)
!8102 = !DILocation(line: 3716, column: 33, scope: !8086)
!8103 = !DILocation(line: 3716, column: 26, scope: !8086)
!8104 = !DILocation(line: 3716, column: 53, scope: !8086)
!8105 = distinct !DISubprogram(name: "xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8106 = !DILocalVariable(name: "a", arg: 1, scope: !8105, file: !3, line: 3688, type: !704)
!8107 = !DILocation(line: 3688, column: 1, scope: !8105)
!8108 = !DILocalVariable(name: "b", arg: 2, scope: !8105, file: !3, line: 3688, type: !704)
!8109 = distinct !DISubprogram(name: "xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8110 = !DILocalVariable(name: "a", arg: 1, scope: !8109, file: !3, line: 3688, type: !704)
!8111 = !DILocation(line: 3688, column: 1, scope: !8109)
!8112 = !DILocalVariable(name: "b", arg: 2, scope: !8109, file: !3, line: 3688, type: !704)
!8113 = !DILocalVariable(name: "a_is_dir", scope: !8114, file: !3, line: 3688, type: !141)
!8114 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 3688, column: 1)
!8115 = !DILocation(line: 3688, column: 1, scope: !8114)
!8116 = !DILocalVariable(name: "b_is_dir", scope: !8114, file: !3, line: 3688, type: !141)
!8117 = !DILocation(line: 3688, column: 1, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 3688, column: 1)
!8119 = !DILocation(line: 3688, column: 1, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 3688, column: 1)
!8121 = distinct !DISubprogram(name: "rev_xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8122 = !DILocalVariable(name: "a", arg: 1, scope: !8121, file: !3, line: 3688, type: !704)
!8123 = !DILocation(line: 3688, column: 1, scope: !8121)
!8124 = !DILocalVariable(name: "b", arg: 2, scope: !8121, file: !3, line: 3688, type: !704)
!8125 = distinct !DISubprogram(name: "rev_xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8126 = !DILocalVariable(name: "a", arg: 1, scope: !8125, file: !3, line: 3688, type: !704)
!8127 = !DILocation(line: 3688, column: 1, scope: !8125)
!8128 = !DILocalVariable(name: "b", arg: 2, scope: !8125, file: !3, line: 3688, type: !704)
!8129 = !DILocalVariable(name: "a_is_dir", scope: !8130, file: !3, line: 3688, type: !141)
!8130 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 3688, column: 1)
!8131 = !DILocation(line: 3688, column: 1, scope: !8130)
!8132 = !DILocalVariable(name: "b_is_dir", scope: !8130, file: !3, line: 3688, type: !141)
!8133 = !DILocation(line: 3688, column: 1, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3688, column: 1)
!8135 = !DILocation(line: 3688, column: 1, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3688, column: 1)
!8137 = distinct !DISubprogram(name: "strcmp_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8138 = !DILocalVariable(name: "a", arg: 1, scope: !8137, file: !3, line: 3688, type: !704)
!8139 = !DILocation(line: 3688, column: 1, scope: !8137)
!8140 = !DILocalVariable(name: "b", arg: 2, scope: !8137, file: !3, line: 3688, type: !704)
!8141 = distinct !DISubprogram(name: "strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8142 = !DILocalVariable(name: "a", arg: 1, scope: !8141, file: !3, line: 3688, type: !704)
!8143 = !DILocation(line: 3688, column: 1, scope: !8141)
!8144 = !DILocalVariable(name: "b", arg: 2, scope: !8141, file: !3, line: 3688, type: !704)
!8145 = !DILocalVariable(name: "a_is_dir", scope: !8146, file: !3, line: 3688, type: !141)
!8146 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 3688, column: 1)
!8147 = !DILocation(line: 3688, column: 1, scope: !8146)
!8148 = !DILocalVariable(name: "b_is_dir", scope: !8146, file: !3, line: 3688, type: !141)
!8149 = !DILocation(line: 3688, column: 1, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 3688, column: 1)
!8151 = !DILocation(line: 3688, column: 1, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 3688, column: 1)
!8153 = distinct !DISubprogram(name: "rev_strcmp_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8154 = !DILocalVariable(name: "a", arg: 1, scope: !8153, file: !3, line: 3688, type: !704)
!8155 = !DILocation(line: 3688, column: 1, scope: !8153)
!8156 = !DILocalVariable(name: "b", arg: 2, scope: !8153, file: !3, line: 3688, type: !704)
!8157 = distinct !DISubprogram(name: "rev_strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !702, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8158 = !DILocalVariable(name: "a", arg: 1, scope: !8157, file: !3, line: 3688, type: !704)
!8159 = !DILocation(line: 3688, column: 1, scope: !8157)
!8160 = !DILocalVariable(name: "b", arg: 2, scope: !8157, file: !3, line: 3688, type: !704)
!8161 = !DILocalVariable(name: "a_is_dir", scope: !8162, file: !3, line: 3688, type: !141)
!8162 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 3688, column: 1)
!8163 = !DILocation(line: 3688, column: 1, scope: !8162)
!8164 = !DILocalVariable(name: "b_is_dir", scope: !8162, file: !3, line: 3688, type: !141)
!8165 = !DILocation(line: 3688, column: 1, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 3688, column: 1)
!8167 = !DILocation(line: 3688, column: 1, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 3688, column: 1)
!8169 = distinct !DISubprogram(name: "xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8170 = !DILocalVariable(name: "a", arg: 1, scope: !8169, file: !3, line: 3687, type: !704)
!8171 = !DILocation(line: 3687, column: 1, scope: !8169)
!8172 = !DILocalVariable(name: "b", arg: 2, scope: !8169, file: !3, line: 3687, type: !704)
!8173 = distinct !DISubprogram(name: "xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8174 = !DILocalVariable(name: "a", arg: 1, scope: !8173, file: !3, line: 3687, type: !704)
!8175 = !DILocation(line: 3687, column: 1, scope: !8173)
!8176 = !DILocalVariable(name: "b", arg: 2, scope: !8173, file: !3, line: 3687, type: !704)
!8177 = !DILocalVariable(name: "a_is_dir", scope: !8178, file: !3, line: 3687, type: !141)
!8178 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 3687, column: 1)
!8179 = !DILocation(line: 3687, column: 1, scope: !8178)
!8180 = !DILocalVariable(name: "b_is_dir", scope: !8178, file: !3, line: 3687, type: !141)
!8181 = !DILocation(line: 3687, column: 1, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 3687, column: 1)
!8183 = !DILocation(line: 3687, column: 1, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 3687, column: 1)
!8185 = distinct !DISubprogram(name: "rev_xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8186 = !DILocalVariable(name: "a", arg: 1, scope: !8185, file: !3, line: 3687, type: !704)
!8187 = !DILocation(line: 3687, column: 1, scope: !8185)
!8188 = !DILocalVariable(name: "b", arg: 2, scope: !8185, file: !3, line: 3687, type: !704)
!8189 = distinct !DISubprogram(name: "rev_xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8190 = !DILocalVariable(name: "a", arg: 1, scope: !8189, file: !3, line: 3687, type: !704)
!8191 = !DILocation(line: 3687, column: 1, scope: !8189)
!8192 = !DILocalVariable(name: "b", arg: 2, scope: !8189, file: !3, line: 3687, type: !704)
!8193 = !DILocalVariable(name: "a_is_dir", scope: !8194, file: !3, line: 3687, type: !141)
!8194 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 3687, column: 1)
!8195 = !DILocation(line: 3687, column: 1, scope: !8194)
!8196 = !DILocalVariable(name: "b_is_dir", scope: !8194, file: !3, line: 3687, type: !141)
!8197 = !DILocation(line: 3687, column: 1, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3687, column: 1)
!8199 = !DILocation(line: 3687, column: 1, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3687, column: 1)
!8201 = distinct !DISubprogram(name: "strcmp_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8202 = !DILocalVariable(name: "a", arg: 1, scope: !8201, file: !3, line: 3687, type: !704)
!8203 = !DILocation(line: 3687, column: 1, scope: !8201)
!8204 = !DILocalVariable(name: "b", arg: 2, scope: !8201, file: !3, line: 3687, type: !704)
!8205 = distinct !DISubprogram(name: "strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8206 = !DILocalVariable(name: "a", arg: 1, scope: !8205, file: !3, line: 3687, type: !704)
!8207 = !DILocation(line: 3687, column: 1, scope: !8205)
!8208 = !DILocalVariable(name: "b", arg: 2, scope: !8205, file: !3, line: 3687, type: !704)
!8209 = !DILocalVariable(name: "a_is_dir", scope: !8210, file: !3, line: 3687, type: !141)
!8210 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 3687, column: 1)
!8211 = !DILocation(line: 3687, column: 1, scope: !8210)
!8212 = !DILocalVariable(name: "b_is_dir", scope: !8210, file: !3, line: 3687, type: !141)
!8213 = !DILocation(line: 3687, column: 1, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3687, column: 1)
!8215 = !DILocation(line: 3687, column: 1, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3687, column: 1)
!8217 = distinct !DISubprogram(name: "rev_strcmp_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8218 = !DILocalVariable(name: "a", arg: 1, scope: !8217, file: !3, line: 3687, type: !704)
!8219 = !DILocation(line: 3687, column: 1, scope: !8217)
!8220 = !DILocalVariable(name: "b", arg: 2, scope: !8217, file: !3, line: 3687, type: !704)
!8221 = distinct !DISubprogram(name: "rev_strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !702, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8222 = !DILocalVariable(name: "a", arg: 1, scope: !8221, file: !3, line: 3687, type: !704)
!8223 = !DILocation(line: 3687, column: 1, scope: !8221)
!8224 = !DILocalVariable(name: "b", arg: 2, scope: !8221, file: !3, line: 3687, type: !704)
!8225 = !DILocalVariable(name: "a_is_dir", scope: !8226, file: !3, line: 3687, type: !141)
!8226 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 3687, column: 1)
!8227 = !DILocation(line: 3687, column: 1, scope: !8226)
!8228 = !DILocalVariable(name: "b_is_dir", scope: !8226, file: !3, line: 3687, type: !141)
!8229 = !DILocation(line: 3687, column: 1, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 3687, column: 1)
!8231 = !DILocation(line: 3687, column: 1, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 3687, column: 1)
!8233 = distinct !DISubprogram(name: "xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8234 = !DILocalVariable(name: "a", arg: 1, scope: !8233, file: !3, line: 3689, type: !704)
!8235 = !DILocation(line: 3689, column: 1, scope: !8233)
!8236 = !DILocalVariable(name: "b", arg: 2, scope: !8233, file: !3, line: 3689, type: !704)
!8237 = distinct !DISubprogram(name: "xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8238 = !DILocalVariable(name: "a", arg: 1, scope: !8237, file: !3, line: 3689, type: !704)
!8239 = !DILocation(line: 3689, column: 1, scope: !8237)
!8240 = !DILocalVariable(name: "b", arg: 2, scope: !8237, file: !3, line: 3689, type: !704)
!8241 = !DILocalVariable(name: "a_is_dir", scope: !8242, file: !3, line: 3689, type: !141)
!8242 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3689, column: 1)
!8243 = !DILocation(line: 3689, column: 1, scope: !8242)
!8244 = !DILocalVariable(name: "b_is_dir", scope: !8242, file: !3, line: 3689, type: !141)
!8245 = !DILocation(line: 3689, column: 1, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 3689, column: 1)
!8247 = !DILocation(line: 3689, column: 1, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 3689, column: 1)
!8249 = distinct !DISubprogram(name: "rev_xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8250 = !DILocalVariable(name: "a", arg: 1, scope: !8249, file: !3, line: 3689, type: !704)
!8251 = !DILocation(line: 3689, column: 1, scope: !8249)
!8252 = !DILocalVariable(name: "b", arg: 2, scope: !8249, file: !3, line: 3689, type: !704)
!8253 = distinct !DISubprogram(name: "rev_xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8254 = !DILocalVariable(name: "a", arg: 1, scope: !8253, file: !3, line: 3689, type: !704)
!8255 = !DILocation(line: 3689, column: 1, scope: !8253)
!8256 = !DILocalVariable(name: "b", arg: 2, scope: !8253, file: !3, line: 3689, type: !704)
!8257 = !DILocalVariable(name: "a_is_dir", scope: !8258, file: !3, line: 3689, type: !141)
!8258 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 3689, column: 1)
!8259 = !DILocation(line: 3689, column: 1, scope: !8258)
!8260 = !DILocalVariable(name: "b_is_dir", scope: !8258, file: !3, line: 3689, type: !141)
!8261 = !DILocation(line: 3689, column: 1, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 3689, column: 1)
!8263 = !DILocation(line: 3689, column: 1, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 3689, column: 1)
!8265 = distinct !DISubprogram(name: "strcmp_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8266 = !DILocalVariable(name: "a", arg: 1, scope: !8265, file: !3, line: 3689, type: !704)
!8267 = !DILocation(line: 3689, column: 1, scope: !8265)
!8268 = !DILocalVariable(name: "b", arg: 2, scope: !8265, file: !3, line: 3689, type: !704)
!8269 = distinct !DISubprogram(name: "strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8270 = !DILocalVariable(name: "a", arg: 1, scope: !8269, file: !3, line: 3689, type: !704)
!8271 = !DILocation(line: 3689, column: 1, scope: !8269)
!8272 = !DILocalVariable(name: "b", arg: 2, scope: !8269, file: !3, line: 3689, type: !704)
!8273 = !DILocalVariable(name: "a_is_dir", scope: !8274, file: !3, line: 3689, type: !141)
!8274 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 3689, column: 1)
!8275 = !DILocation(line: 3689, column: 1, scope: !8274)
!8276 = !DILocalVariable(name: "b_is_dir", scope: !8274, file: !3, line: 3689, type: !141)
!8277 = !DILocation(line: 3689, column: 1, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 3689, column: 1)
!8279 = !DILocation(line: 3689, column: 1, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 3689, column: 1)
!8281 = distinct !DISubprogram(name: "rev_strcmp_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8282 = !DILocalVariable(name: "a", arg: 1, scope: !8281, file: !3, line: 3689, type: !704)
!8283 = !DILocation(line: 3689, column: 1, scope: !8281)
!8284 = !DILocalVariable(name: "b", arg: 2, scope: !8281, file: !3, line: 3689, type: !704)
!8285 = distinct !DISubprogram(name: "rev_strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !702, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8286 = !DILocalVariable(name: "a", arg: 1, scope: !8285, file: !3, line: 3689, type: !704)
!8287 = !DILocation(line: 3689, column: 1, scope: !8285)
!8288 = !DILocalVariable(name: "b", arg: 2, scope: !8285, file: !3, line: 3689, type: !704)
!8289 = !DILocalVariable(name: "a_is_dir", scope: !8290, file: !3, line: 3689, type: !141)
!8290 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 3689, column: 1)
!8291 = !DILocation(line: 3689, column: 1, scope: !8290)
!8292 = !DILocalVariable(name: "b_is_dir", scope: !8290, file: !3, line: 3689, type: !141)
!8293 = !DILocation(line: 3689, column: 1, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 3689, column: 1)
!8295 = !DILocation(line: 3689, column: 1, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 3689, column: 1)
!8297 = distinct !DISubprogram(name: "is_linked_directory", scope: !3, file: !3, line: 3442, type: !685, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8298 = !DILocalVariable(name: "f", arg: 1, scope: !8297, file: !3, line: 3442, type: !182)
!8299 = !DILocation(line: 3442, column: 45, scope: !8297)
!8300 = !DILocation(line: 3444, column: 10, scope: !8297)
!8301 = !DILocation(line: 3444, column: 13, scope: !8297)
!8302 = !DILocation(line: 3444, column: 22, scope: !8297)
!8303 = !DILocation(line: 3444, column: 35, scope: !8297)
!8304 = !DILocation(line: 3444, column: 38, scope: !8297)
!8305 = !DILocation(line: 3444, column: 41, scope: !8297)
!8306 = !DILocation(line: 3444, column: 50, scope: !8297)
!8307 = !DILocation(line: 3445, column: 10, scope: !8297)
!8308 = !DILocation(line: 3445, column: 13, scope: !8297)
!8309 = !DILocation(line: 3444, column: 3, scope: !8297)
!8310 = distinct !DISubprogram(name: "cmp_atime", scope: !3, file: !3, line: 3651, type: !711, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8311 = !DILocalVariable(name: "a", arg: 1, scope: !8310, file: !3, line: 3651, type: !182)
!8312 = !DILocation(line: 3651, column: 35, scope: !8310)
!8313 = !DILocalVariable(name: "b", arg: 2, scope: !8310, file: !3, line: 3651, type: !182)
!8314 = !DILocation(line: 3651, column: 61, scope: !8310)
!8315 = !DILocalVariable(name: "cmp", arg: 3, scope: !8310, file: !3, line: 3652, type: !713)
!8316 = !DILocation(line: 3652, column: 18, scope: !8310)
!8317 = !DILocalVariable(name: "diff", scope: !8310, file: !3, line: 3654, type: !27)
!8318 = !DILocation(line: 3654, column: 7, scope: !8310)
!8319 = !DILocation(line: 3654, column: 45, scope: !8310)
!8320 = !DILocation(line: 3654, column: 48, scope: !8310)
!8321 = !DILocation(line: 3654, column: 28, scope: !8310)
!8322 = !DILocation(line: 3655, column: 45, scope: !8310)
!8323 = !DILocation(line: 3655, column: 48, scope: !8310)
!8324 = !DILocation(line: 3655, column: 28, scope: !8310)
!8325 = !DILocation(line: 3654, column: 14, scope: !8310)
!8326 = !DILocation(line: 3656, column: 10, scope: !8310)
!8327 = !DILocation(line: 3656, column: 17, scope: !8310)
!8328 = !DILocation(line: 3656, column: 24, scope: !8310)
!8329 = !DILocation(line: 3656, column: 29, scope: !8310)
!8330 = !DILocation(line: 3656, column: 32, scope: !8310)
!8331 = !DILocation(line: 3656, column: 38, scope: !8310)
!8332 = !DILocation(line: 3656, column: 41, scope: !8310)
!8333 = !DILocation(line: 3656, column: 3, scope: !8310)
!8334 = distinct !DISubprogram(name: "xstrcoll", scope: !3, file: !3, line: 3567, type: !714, scopeLine: 3568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8335 = !DILocalVariable(name: "a", arg: 1, scope: !8334, file: !3, line: 3567, type: !146)
!8336 = !DILocation(line: 3567, column: 23, scope: !8334)
!8337 = !DILocalVariable(name: "b", arg: 2, scope: !8334, file: !3, line: 3567, type: !146)
!8338 = !DILocation(line: 3567, column: 38, scope: !8334)
!8339 = !DILocalVariable(name: "diff", scope: !8334, file: !3, line: 3569, type: !27)
!8340 = !DILocation(line: 3569, column: 7, scope: !8334)
!8341 = !DILocation(line: 3570, column: 3, scope: !8334)
!8342 = !DILocation(line: 3570, column: 9, scope: !8334)
!8343 = !DILocation(line: 3571, column: 19, scope: !8334)
!8344 = !DILocation(line: 3571, column: 22, scope: !8334)
!8345 = !DILocation(line: 3571, column: 10, scope: !8334)
!8346 = !DILocation(line: 3571, column: 8, scope: !8334)
!8347 = !DILocation(line: 3572, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 3572, column: 7)
!8349 = !DILocation(line: 3572, column: 7, scope: !8334)
!8350 = !DILocation(line: 3574, column: 17, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 3573, column: 5)
!8352 = !DILocation(line: 3574, column: 24, scope: !8351)
!8353 = !DILocation(line: 3575, column: 26, scope: !8351)
!8354 = !DILocation(line: 3575, column: 14, scope: !8351)
!8355 = !DILocation(line: 3575, column: 42, scope: !8351)
!8356 = !DILocation(line: 3575, column: 30, scope: !8351)
!8357 = !DILocation(line: 3574, column: 7, scope: !8351)
!8358 = !DILocation(line: 3576, column: 7, scope: !8351)
!8359 = !DILocation(line: 3577, column: 7, scope: !8351)
!8360 = !DILocation(line: 3579, column: 10, scope: !8334)
!8361 = !DILocation(line: 3579, column: 3, scope: !8334)
!8362 = distinct !DISubprogram(name: "cmp_ctime", scope: !3, file: !3, line: 3633, type: !711, scopeLine: 3635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8363 = !DILocalVariable(name: "a", arg: 1, scope: !8362, file: !3, line: 3633, type: !182)
!8364 = !DILocation(line: 3633, column: 35, scope: !8362)
!8365 = !DILocalVariable(name: "b", arg: 2, scope: !8362, file: !3, line: 3633, type: !182)
!8366 = !DILocation(line: 3633, column: 61, scope: !8362)
!8367 = !DILocalVariable(name: "cmp", arg: 3, scope: !8362, file: !3, line: 3634, type: !713)
!8368 = !DILocation(line: 3634, column: 18, scope: !8362)
!8369 = !DILocalVariable(name: "diff", scope: !8362, file: !3, line: 3636, type: !27)
!8370 = !DILocation(line: 3636, column: 7, scope: !8362)
!8371 = !DILocation(line: 3636, column: 45, scope: !8362)
!8372 = !DILocation(line: 3636, column: 48, scope: !8362)
!8373 = !DILocation(line: 3636, column: 28, scope: !8362)
!8374 = !DILocation(line: 3637, column: 45, scope: !8362)
!8375 = !DILocation(line: 3637, column: 48, scope: !8362)
!8376 = !DILocation(line: 3637, column: 28, scope: !8362)
!8377 = !DILocation(line: 3636, column: 14, scope: !8362)
!8378 = !DILocation(line: 3638, column: 10, scope: !8362)
!8379 = !DILocation(line: 3638, column: 17, scope: !8362)
!8380 = !DILocation(line: 3638, column: 24, scope: !8362)
!8381 = !DILocation(line: 3638, column: 29, scope: !8362)
!8382 = !DILocation(line: 3638, column: 32, scope: !8362)
!8383 = !DILocation(line: 3638, column: 38, scope: !8362)
!8384 = !DILocation(line: 3638, column: 41, scope: !8362)
!8385 = !DILocation(line: 3638, column: 3, scope: !8362)
!8386 = distinct !DISubprogram(name: "cmp_mtime", scope: !3, file: !3, line: 3642, type: !711, scopeLine: 3644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8387 = !DILocalVariable(name: "a", arg: 1, scope: !8386, file: !3, line: 3642, type: !182)
!8388 = !DILocation(line: 3642, column: 35, scope: !8386)
!8389 = !DILocalVariable(name: "b", arg: 2, scope: !8386, file: !3, line: 3642, type: !182)
!8390 = !DILocation(line: 3642, column: 61, scope: !8386)
!8391 = !DILocalVariable(name: "cmp", arg: 3, scope: !8386, file: !3, line: 3643, type: !713)
!8392 = !DILocation(line: 3643, column: 18, scope: !8386)
!8393 = !DILocalVariable(name: "diff", scope: !8386, file: !3, line: 3645, type: !27)
!8394 = !DILocation(line: 3645, column: 7, scope: !8386)
!8395 = !DILocation(line: 3645, column: 45, scope: !8386)
!8396 = !DILocation(line: 3645, column: 48, scope: !8386)
!8397 = !DILocation(line: 3645, column: 28, scope: !8386)
!8398 = !DILocation(line: 3646, column: 45, scope: !8386)
!8399 = !DILocation(line: 3646, column: 48, scope: !8386)
!8400 = !DILocation(line: 3646, column: 28, scope: !8386)
!8401 = !DILocation(line: 3645, column: 14, scope: !8386)
!8402 = !DILocation(line: 3647, column: 10, scope: !8386)
!8403 = !DILocation(line: 3647, column: 17, scope: !8386)
!8404 = !DILocation(line: 3647, column: 24, scope: !8386)
!8405 = !DILocation(line: 3647, column: 29, scope: !8386)
!8406 = !DILocation(line: 3647, column: 32, scope: !8386)
!8407 = !DILocation(line: 3647, column: 38, scope: !8386)
!8408 = !DILocation(line: 3647, column: 41, scope: !8386)
!8409 = !DILocation(line: 3647, column: 3, scope: !8386)
!8410 = distinct !DISubprogram(name: "cmp_version", scope: !3, file: !3, line: 3704, type: !716, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8411 = !DILocalVariable(name: "a", arg: 1, scope: !8410, file: !3, line: 3704, type: !182)
!8412 = !DILocation(line: 3704, column: 37, scope: !8410)
!8413 = !DILocalVariable(name: "b", arg: 2, scope: !8410, file: !3, line: 3704, type: !182)
!8414 = !DILocation(line: 3704, column: 63, scope: !8410)
!8415 = !DILocation(line: 3706, column: 22, scope: !8410)
!8416 = !DILocation(line: 3706, column: 25, scope: !8410)
!8417 = !DILocation(line: 3706, column: 31, scope: !8410)
!8418 = !DILocation(line: 3706, column: 34, scope: !8410)
!8419 = !DILocation(line: 3706, column: 10, scope: !8410)
!8420 = !DILocation(line: 3706, column: 3, scope: !8410)
!8421 = distinct !DISubprogram(name: "cmp_size", scope: !3, file: !3, line: 3660, type: !711, scopeLine: 3662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8422 = !DILocalVariable(name: "a", arg: 1, scope: !8421, file: !3, line: 3660, type: !182)
!8423 = !DILocation(line: 3660, column: 34, scope: !8421)
!8424 = !DILocalVariable(name: "b", arg: 2, scope: !8421, file: !3, line: 3660, type: !182)
!8425 = !DILocation(line: 3660, column: 60, scope: !8421)
!8426 = !DILocalVariable(name: "cmp", arg: 3, scope: !8421, file: !3, line: 3661, type: !713)
!8427 = !DILocation(line: 3661, column: 17, scope: !8421)
!8428 = !DILocalVariable(name: "diff", scope: !8421, file: !3, line: 3663, type: !27)
!8429 = !DILocation(line: 3663, column: 7, scope: !8421)
!8430 = !DILocation(line: 3663, column: 14, scope: !8421)
!8431 = !DILocation(line: 3664, column: 10, scope: !8421)
!8432 = !DILocation(line: 3664, column: 17, scope: !8421)
!8433 = !DILocation(line: 3664, column: 24, scope: !8421)
!8434 = !DILocation(line: 3664, column: 29, scope: !8421)
!8435 = !DILocation(line: 3664, column: 32, scope: !8421)
!8436 = !DILocation(line: 3664, column: 38, scope: !8421)
!8437 = !DILocation(line: 3664, column: 41, scope: !8421)
!8438 = !DILocation(line: 3664, column: 3, scope: !8421)
!8439 = distinct !DISubprogram(name: "cmp_extension", scope: !3, file: !3, line: 3678, type: !711, scopeLine: 3680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8440 = !DILocalVariable(name: "a", arg: 1, scope: !8439, file: !3, line: 3678, type: !182)
!8441 = !DILocation(line: 3678, column: 39, scope: !8439)
!8442 = !DILocalVariable(name: "b", arg: 2, scope: !8439, file: !3, line: 3678, type: !182)
!8443 = !DILocation(line: 3678, column: 65, scope: !8439)
!8444 = !DILocalVariable(name: "cmp", arg: 3, scope: !8439, file: !3, line: 3679, type: !713)
!8445 = !DILocation(line: 3679, column: 22, scope: !8439)
!8446 = !DILocalVariable(name: "base1", scope: !8439, file: !3, line: 3681, type: !146)
!8447 = !DILocation(line: 3681, column: 15, scope: !8439)
!8448 = !DILocation(line: 3681, column: 32, scope: !8439)
!8449 = !DILocation(line: 3681, column: 35, scope: !8439)
!8450 = !DILocation(line: 3681, column: 23, scope: !8439)
!8451 = !DILocalVariable(name: "base2", scope: !8439, file: !3, line: 3682, type: !146)
!8452 = !DILocation(line: 3682, column: 15, scope: !8439)
!8453 = !DILocation(line: 3682, column: 32, scope: !8439)
!8454 = !DILocation(line: 3682, column: 35, scope: !8439)
!8455 = !DILocation(line: 3682, column: 23, scope: !8439)
!8456 = !DILocalVariable(name: "diff", scope: !8439, file: !3, line: 3683, type: !27)
!8457 = !DILocation(line: 3683, column: 7, scope: !8439)
!8458 = !DILocation(line: 3683, column: 14, scope: !8439)
!8459 = !DILocation(line: 3683, column: 19, scope: !8439)
!8460 = !DILocation(line: 3683, column: 27, scope: !8439)
!8461 = !DILocation(line: 3683, column: 39, scope: !8439)
!8462 = !DILocation(line: 3683, column: 47, scope: !8439)
!8463 = !DILocation(line: 3684, column: 10, scope: !8439)
!8464 = !DILocation(line: 3684, column: 17, scope: !8439)
!8465 = !DILocation(line: 3684, column: 24, scope: !8439)
!8466 = !DILocation(line: 3684, column: 29, scope: !8439)
!8467 = !DILocation(line: 3684, column: 32, scope: !8439)
!8468 = !DILocation(line: 3684, column: 38, scope: !8439)
!8469 = !DILocation(line: 3684, column: 41, scope: !8439)
!8470 = !DILocation(line: 3684, column: 3, scope: !8439)
!8471 = distinct !DISubprogram(name: "cmp_name", scope: !3, file: !3, line: 3668, type: !711, scopeLine: 3670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8472 = !DILocalVariable(name: "a", arg: 1, scope: !8471, file: !3, line: 3668, type: !182)
!8473 = !DILocation(line: 3668, column: 34, scope: !8471)
!8474 = !DILocalVariable(name: "b", arg: 2, scope: !8471, file: !3, line: 3668, type: !182)
!8475 = !DILocation(line: 3668, column: 60, scope: !8471)
!8476 = !DILocalVariable(name: "cmp", arg: 3, scope: !8471, file: !3, line: 3669, type: !713)
!8477 = !DILocation(line: 3669, column: 17, scope: !8471)
!8478 = !DILocation(line: 3671, column: 10, scope: !8471)
!8479 = !DILocation(line: 3671, column: 15, scope: !8471)
!8480 = !DILocation(line: 3671, column: 18, scope: !8471)
!8481 = !DILocation(line: 3671, column: 24, scope: !8471)
!8482 = !DILocation(line: 3671, column: 27, scope: !8471)
!8483 = !DILocation(line: 3671, column: 3, scope: !8471)
!8484 = distinct !DISubprogram(name: "needs_quoting", scope: !3, file: !3, line: 3099, type: !556, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8485 = !DILocalVariable(name: "name", arg: 1, scope: !8484, file: !3, line: 3099, type: !146)
!8486 = !DILocation(line: 3099, column: 28, scope: !8484)
!8487 = !DILocalVariable(name: "test", scope: !8484, file: !3, line: 3101, type: !653)
!8488 = !DILocation(line: 3101, column: 8, scope: !8484)
!8489 = !DILocalVariable(name: "len", scope: !8484, file: !3, line: 3102, type: !149)
!8490 = !DILocation(line: 3102, column: 10, scope: !8484)
!8491 = !DILocation(line: 3102, column: 33, scope: !8484)
!8492 = !DILocation(line: 3102, column: 53, scope: !8484)
!8493 = !DILocation(line: 3103, column: 33, scope: !8484)
!8494 = !DILocation(line: 3102, column: 16, scope: !8484)
!8495 = !DILocation(line: 3104, column: 11, scope: !8484)
!8496 = !DILocation(line: 3104, column: 10, scope: !8484)
!8497 = !DILocation(line: 3104, column: 19, scope: !8484)
!8498 = !DILocation(line: 3104, column: 16, scope: !8484)
!8499 = !DILocation(line: 3104, column: 25, scope: !8484)
!8500 = !DILocation(line: 3104, column: 36, scope: !8484)
!8501 = !DILocation(line: 3104, column: 28, scope: !8484)
!8502 = !DILocation(line: 3104, column: 45, scope: !8484)
!8503 = !DILocation(line: 3104, column: 42, scope: !8484)
!8504 = !DILocation(line: 3104, column: 3, scope: !8484)
!8505 = distinct !DISubprogram(name: "attach", scope: !3, file: !3, line: 4986, type: !659, scopeLine: 4987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8506 = !DILocalVariable(name: "dest", arg: 1, scope: !8505, file: !3, line: 4986, type: !143)
!8507 = !DILocation(line: 4986, column: 15, scope: !8505)
!8508 = !DILocalVariable(name: "dirname", arg: 2, scope: !8505, file: !3, line: 4986, type: !146)
!8509 = !DILocation(line: 4986, column: 33, scope: !8505)
!8510 = !DILocalVariable(name: "name", arg: 3, scope: !8505, file: !3, line: 4986, type: !146)
!8511 = !DILocation(line: 4986, column: 54, scope: !8505)
!8512 = !DILocalVariable(name: "dirnamep", scope: !8505, file: !3, line: 4988, type: !146)
!8513 = !DILocation(line: 4988, column: 15, scope: !8505)
!8514 = !DILocation(line: 4988, column: 26, scope: !8505)
!8515 = !DILocation(line: 4991, column: 7, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 4991, column: 7)
!8517 = !DILocation(line: 4991, column: 18, scope: !8516)
!8518 = !DILocation(line: 4991, column: 25, scope: !8516)
!8519 = !DILocation(line: 4991, column: 28, scope: !8516)
!8520 = !DILocation(line: 4991, column: 39, scope: !8516)
!8521 = !DILocation(line: 4991, column: 7, scope: !8505)
!8522 = !DILocation(line: 4993, column: 7, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 4992, column: 5)
!8524 = !DILocation(line: 4993, column: 15, scope: !8523)
!8525 = !DILocation(line: 4993, column: 14, scope: !8523)
!8526 = !DILocation(line: 4994, column: 28, scope: !8523)
!8527 = !DILocation(line: 4994, column: 19, scope: !8523)
!8528 = !DILocation(line: 4994, column: 14, scope: !8523)
!8529 = !DILocation(line: 4994, column: 17, scope: !8523)
!8530 = distinct !{!8530, !8522, !8526}
!8531 = !DILocation(line: 4996, column: 11, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 4996, column: 11)
!8533 = !DILocation(line: 4996, column: 22, scope: !8532)
!8534 = !DILocation(line: 4996, column: 20, scope: !8532)
!8535 = !DILocation(line: 4996, column: 30, scope: !8532)
!8536 = !DILocation(line: 4996, column: 33, scope: !8532)
!8537 = !DILocation(line: 4996, column: 46, scope: !8532)
!8538 = !DILocation(line: 4996, column: 11, scope: !8523)
!8539 = !DILocation(line: 4997, column: 14, scope: !8532)
!8540 = !DILocation(line: 4997, column: 17, scope: !8532)
!8541 = !DILocation(line: 4997, column: 9, scope: !8532)
!8542 = !DILocation(line: 4998, column: 5, scope: !8523)
!8543 = !DILocation(line: 4999, column: 3, scope: !8505)
!8544 = !DILocation(line: 4999, column: 11, scope: !8505)
!8545 = !DILocation(line: 4999, column: 10, scope: !8505)
!8546 = !DILocation(line: 5000, column: 20, scope: !8505)
!8547 = !DILocation(line: 5000, column: 15, scope: !8505)
!8548 = !DILocation(line: 5000, column: 10, scope: !8505)
!8549 = !DILocation(line: 5000, column: 13, scope: !8505)
!8550 = distinct !{!8550, !8543, !8546}
!8551 = !DILocation(line: 5001, column: 4, scope: !8505)
!8552 = !DILocation(line: 5001, column: 9, scope: !8505)
!8553 = !DILocation(line: 5002, column: 1, scope: !8505)
!8554 = !DILocalVariable(name: "file", arg: 1, scope: !992, file: !3, line: 3080, type: !146)
!8555 = !DILocation(line: 3080, column: 35, scope: !992)
!8556 = !DILocalVariable(name: "f", arg: 2, scope: !992, file: !3, line: 3080, type: !250)
!8557 = !DILocation(line: 3080, column: 58, scope: !992)
!8558 = !DILocation(line: 3086, column: 7, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !992, file: !3, line: 3086, column: 7)
!8560 = !DILocation(line: 3086, column: 10, scope: !8559)
!8561 = !DILocation(line: 3086, column: 15, scope: !8559)
!8562 = !{!3832, !2499, i64 24}
!8563 = !DILocation(line: 3086, column: 25, scope: !8559)
!8564 = !DILocation(line: 3086, column: 22, scope: !8559)
!8565 = !DILocation(line: 3086, column: 7, scope: !992)
!8566 = !DILocation(line: 3088, column: 7, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 3087, column: 5)
!8568 = !DILocation(line: 3088, column: 13, scope: !8567)
!8569 = !DILocation(line: 3089, column: 7, scope: !8567)
!8570 = !DILocalVariable(name: "b", scope: !992, file: !3, line: 3092, type: !141)
!8571 = !DILocation(line: 3092, column: 8, scope: !992)
!8572 = !DILocation(line: 3092, column: 28, scope: !992)
!8573 = !DILocation(line: 3092, column: 12, scope: !992)
!8574 = !DILocation(line: 3093, column: 9, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !992, file: !3, line: 3093, column: 8)
!8576 = !DILocation(line: 3093, column: 11, scope: !8575)
!8577 = !DILocation(line: 3093, column: 33, scope: !8575)
!8578 = !DILocation(line: 3093, column: 14, scope: !8575)
!8579 = !DILocation(line: 3093, column: 8, scope: !992)
!8580 = !DILocation(line: 3094, column: 26, scope: !8575)
!8581 = !DILocation(line: 3094, column: 29, scope: !8575)
!8582 = !DILocation(line: 3094, column: 34, scope: !8575)
!8583 = !DILocation(line: 3094, column: 24, scope: !8575)
!8584 = !DILocation(line: 3094, column: 5, scope: !8575)
!8585 = !DILocation(line: 3095, column: 10, scope: !992)
!8586 = !DILocation(line: 3095, column: 3, scope: !992)
!8587 = !DILocation(line: 3096, column: 1, scope: !992)
!8588 = !DILocalVariable(name: "file", arg: 1, scope: !995, file: !3, line: 3025, type: !146)
!8589 = !DILocation(line: 3025, column: 31, scope: !995)
!8590 = !DILocalVariable(name: "f", arg: 2, scope: !995, file: !3, line: 3025, type: !250)
!8591 = !DILocation(line: 3025, column: 54, scope: !995)
!8592 = !DILocalVariable(name: "deref", arg: 3, scope: !995, file: !3, line: 3025, type: !141)
!8593 = !DILocation(line: 3025, column: 62, scope: !995)
!8594 = !DILocation(line: 3031, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !995, file: !3, line: 3031, column: 7)
!8596 = !DILocation(line: 3031, column: 10, scope: !8595)
!8597 = !DILocation(line: 3031, column: 15, scope: !8595)
!8598 = !DILocation(line: 3031, column: 25, scope: !8595)
!8599 = !DILocation(line: 3031, column: 22, scope: !8595)
!8600 = !DILocation(line: 3031, column: 7, scope: !995)
!8601 = !DILocation(line: 3033, column: 7, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 3032, column: 5)
!8603 = !DILocation(line: 3033, column: 13, scope: !8602)
!8604 = !DILocation(line: 3034, column: 7, scope: !8602)
!8605 = !DILocalVariable(name: "r", scope: !995, file: !3, line: 3036, type: !27)
!8606 = !DILocation(line: 3036, column: 7, scope: !995)
!8607 = !DILocation(line: 3043, column: 10, scope: !995)
!8608 = !DILocation(line: 3044, column: 24, scope: !995)
!8609 = !DILocation(line: 3044, column: 31, scope: !995)
!8610 = !DILocation(line: 3044, column: 34, scope: !995)
!8611 = !DILocation(line: 3044, column: 12, scope: !995)
!8612 = !DILocation(line: 3045, column: 25, scope: !995)
!8613 = !DILocation(line: 3045, column: 32, scope: !995)
!8614 = !DILocation(line: 3045, column: 35, scope: !995)
!8615 = !DILocation(line: 3045, column: 12, scope: !995)
!8616 = !DILocation(line: 3043, column: 7, scope: !995)
!8617 = !DILocation(line: 3046, column: 7, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !995, file: !3, line: 3046, column: 7)
!8619 = !DILocation(line: 3046, column: 9, scope: !8618)
!8620 = !DILocation(line: 3046, column: 13, scope: !8618)
!8621 = !DILocation(line: 3046, column: 35, scope: !8618)
!8622 = !DILocation(line: 3046, column: 16, scope: !8618)
!8623 = !DILocation(line: 3046, column: 7, scope: !995)
!8624 = !DILocation(line: 3047, column: 26, scope: !8618)
!8625 = !DILocation(line: 3047, column: 29, scope: !8618)
!8626 = !DILocation(line: 3047, column: 34, scope: !8618)
!8627 = !DILocation(line: 3047, column: 24, scope: !8618)
!8628 = !DILocation(line: 3047, column: 5, scope: !8618)
!8629 = !DILocation(line: 3048, column: 10, scope: !995)
!8630 = !DILocation(line: 3048, column: 3, scope: !995)
!8631 = !DILocation(line: 3049, column: 1, scope: !995)
!8632 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !792, file: !792, line: 762, type: !663, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8633 = !DILocalVariable(name: "err", arg: 1, scope: !8632, file: !792, line: 762, type: !27)
!8634 = !DILocation(line: 762, column: 17, scope: !8632)
!8635 = !DILocation(line: 764, column: 10, scope: !8632)
!8636 = !DILocation(line: 764, column: 14, scope: !8632)
!8637 = !DILocation(line: 764, column: 28, scope: !8632)
!8638 = !DILocation(line: 764, column: 3, scope: !8632)
!8639 = !DILocalVariable(name: "file", arg: 1, scope: !998, file: !3, line: 3055, type: !146)
!8640 = !DILocation(line: 3055, column: 33, scope: !998)
!8641 = !DILocalVariable(name: "f", arg: 2, scope: !998, file: !3, line: 3055, type: !250)
!8642 = !DILocation(line: 3055, column: 56, scope: !998)
!8643 = !DILocation(line: 3061, column: 7, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !998, file: !3, line: 3061, column: 7)
!8645 = !DILocation(line: 3061, column: 10, scope: !8644)
!8646 = !DILocation(line: 3061, column: 15, scope: !8644)
!8647 = !DILocation(line: 3061, column: 25, scope: !8644)
!8648 = !DILocation(line: 3061, column: 22, scope: !8644)
!8649 = !DILocation(line: 3061, column: 7, scope: !998)
!8650 = !DILocation(line: 3063, column: 7, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 3062, column: 5)
!8652 = !DILocation(line: 3063, column: 13, scope: !8651)
!8653 = !DILocation(line: 3064, column: 7, scope: !8651)
!8654 = !DILocation(line: 3069, column: 3, scope: !998)
!8655 = !DILocation(line: 3069, column: 9, scope: !998)
!8656 = !DILocalVariable(name: "n", scope: !998, file: !3, line: 3070, type: !27)
!8657 = !DILocation(line: 3070, column: 7, scope: !998)
!8658 = !DILocation(line: 3070, column: 25, scope: !998)
!8659 = !DILocation(line: 3070, column: 32, scope: !998)
!8660 = !DILocation(line: 3070, column: 35, scope: !998)
!8661 = !DILocation(line: 3070, column: 11, scope: !998)
!8662 = !DILocation(line: 3071, column: 7, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !998, file: !3, line: 3071, column: 7)
!8664 = !DILocation(line: 3071, column: 9, scope: !8663)
!8665 = !DILocation(line: 3071, column: 14, scope: !8663)
!8666 = !DILocation(line: 3071, column: 36, scope: !8663)
!8667 = !DILocation(line: 3071, column: 17, scope: !8663)
!8668 = !DILocation(line: 3071, column: 7, scope: !998)
!8669 = !DILocation(line: 3072, column: 26, scope: !8663)
!8670 = !DILocation(line: 3072, column: 29, scope: !8663)
!8671 = !DILocation(line: 3072, column: 34, scope: !8663)
!8672 = !DILocation(line: 3072, column: 24, scope: !8663)
!8673 = !DILocation(line: 3072, column: 5, scope: !8663)
!8674 = !DILocation(line: 3073, column: 10, scope: !998)
!8675 = !DILocation(line: 3073, column: 3, scope: !998)
!8676 = !DILocation(line: 3074, column: 1, scope: !998)
!8677 = distinct !DISubprogram(name: "get_link_name", scope: !3, file: !3, line: 3453, type: !669, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8678 = !DILocalVariable(name: "filename", arg: 1, scope: !8677, file: !3, line: 3453, type: !146)
!8679 = !DILocation(line: 3453, column: 28, scope: !8677)
!8680 = !DILocalVariable(name: "f", arg: 2, scope: !8677, file: !3, line: 3453, type: !250)
!8681 = !DILocation(line: 3453, column: 55, scope: !8677)
!8682 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !8677, file: !3, line: 3453, type: !141)
!8683 = !DILocation(line: 3453, column: 63, scope: !8677)
!8684 = !DILocation(line: 3455, column: 38, scope: !8677)
!8685 = !DILocation(line: 3455, column: 48, scope: !8677)
!8686 = !DILocation(line: 3455, column: 51, scope: !8677)
!8687 = !DILocation(line: 3455, column: 56, scope: !8677)
!8688 = !DILocation(line: 3455, column: 17, scope: !8677)
!8689 = !DILocation(line: 3455, column: 3, scope: !8677)
!8690 = !DILocation(line: 3455, column: 6, scope: !8677)
!8691 = !DILocation(line: 3455, column: 15, scope: !8677)
!8692 = !DILocation(line: 3456, column: 7, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3456, column: 7)
!8694 = !DILocation(line: 3456, column: 10, scope: !8693)
!8695 = !DILocation(line: 3456, column: 19, scope: !8693)
!8696 = !DILocation(line: 3456, column: 7, scope: !8677)
!8697 = !DILocation(line: 3457, column: 19, scope: !8693)
!8698 = !DILocation(line: 3457, column: 37, scope: !8693)
!8699 = !DILocation(line: 3458, column: 19, scope: !8693)
!8700 = !DILocation(line: 3457, column: 5, scope: !8693)
!8701 = !DILocation(line: 3459, column: 1, scope: !8677)
!8702 = distinct !DISubprogram(name: "make_link_name", scope: !3, file: !3, line: 3467, type: !671, scopeLine: 3468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8703 = !DILocalVariable(name: "name", arg: 1, scope: !8702, file: !3, line: 3467, type: !146)
!8704 = !DILocation(line: 3467, column: 29, scope: !8702)
!8705 = !DILocalVariable(name: "linkname", arg: 2, scope: !8702, file: !3, line: 3467, type: !146)
!8706 = !DILocation(line: 3467, column: 47, scope: !8702)
!8707 = !DILocation(line: 3469, column: 8, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 3469, column: 7)
!8709 = !DILocation(line: 3469, column: 7, scope: !8702)
!8710 = !DILocation(line: 3470, column: 5, scope: !8708)
!8711 = !DILocation(line: 3472, column: 7, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 3472, column: 7)
!8713 = !DILocation(line: 3472, column: 7, scope: !8702)
!8714 = !DILocation(line: 3473, column: 21, scope: !8712)
!8715 = !DILocation(line: 3473, column: 12, scope: !8712)
!8716 = !DILocation(line: 3473, column: 5, scope: !8712)
!8717 = !DILocalVariable(name: "prefix_len", scope: !8702, file: !3, line: 3477, type: !149)
!8718 = !DILocation(line: 3477, column: 10, scope: !8702)
!8719 = !DILocation(line: 3477, column: 32, scope: !8702)
!8720 = !DILocation(line: 3477, column: 23, scope: !8702)
!8721 = !DILocation(line: 3478, column: 7, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 3478, column: 7)
!8723 = !DILocation(line: 3478, column: 18, scope: !8722)
!8724 = !DILocation(line: 3478, column: 7, scope: !8702)
!8725 = !DILocation(line: 3479, column: 21, scope: !8722)
!8726 = !DILocation(line: 3479, column: 12, scope: !8722)
!8727 = !DILocation(line: 3479, column: 5, scope: !8722)
!8728 = !DILocalVariable(name: "p", scope: !8702, file: !3, line: 3481, type: !143)
!8729 = !DILocation(line: 3481, column: 9, scope: !8702)
!8730 = !DILocation(line: 3481, column: 22, scope: !8702)
!8731 = !DILocation(line: 3481, column: 33, scope: !8702)
!8732 = !DILocation(line: 3481, column: 47, scope: !8702)
!8733 = !DILocation(line: 3481, column: 39, scope: !8702)
!8734 = !DILocation(line: 3481, column: 37, scope: !8702)
!8735 = !DILocation(line: 3481, column: 57, scope: !8702)
!8736 = !DILocation(line: 3481, column: 13, scope: !8702)
!8737 = !DILocation(line: 3486, column: 10, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 3486, column: 8)
!8739 = !DILocation(line: 3486, column: 8, scope: !8702)
!8740 = !DILocation(line: 3487, column: 5, scope: !8738)
!8741 = !DILocation(line: 3489, column: 20, scope: !8702)
!8742 = !DILocation(line: 3489, column: 23, scope: !8702)
!8743 = !DILocation(line: 3489, column: 29, scope: !8702)
!8744 = !DILocation(line: 3489, column: 11, scope: !8702)
!8745 = !DILocation(line: 3489, column: 42, scope: !8702)
!8746 = !DILocation(line: 3489, column: 3, scope: !8702)
!8747 = !DILocation(line: 3490, column: 10, scope: !8702)
!8748 = !DILocation(line: 3490, column: 3, scope: !8702)
!8749 = !DILocation(line: 3491, column: 1, scope: !8702)
!8750 = distinct !DISubprogram(name: "format_user_width", scope: !3, file: !3, line: 3993, type: !673, scopeLine: 3994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8751 = !DILocalVariable(name: "u", arg: 1, scope: !8750, file: !3, line: 3993, type: !675)
!8752 = !DILocation(line: 3993, column: 26, scope: !8750)
!8753 = !DILocation(line: 3995, column: 38, scope: !8750)
!8754 = !DILocation(line: 3995, column: 68, scope: !8750)
!8755 = !DILocation(line: 3995, column: 59, scope: !8750)
!8756 = !DILocation(line: 3995, column: 72, scope: !8750)
!8757 = !DILocation(line: 3995, column: 10, scope: !8750)
!8758 = !DILocation(line: 3995, column: 3, scope: !8750)
!8759 = distinct !DISubprogram(name: "format_group_width", scope: !3, file: !3, line: 4001, type: !678, scopeLine: 4002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8760 = !DILocalVariable(name: "g", arg: 1, scope: !8759, file: !3, line: 4001, type: !680)
!8761 = !DILocation(line: 4001, column: 27, scope: !8759)
!8762 = !DILocation(line: 4003, column: 38, scope: !8759)
!8763 = !DILocation(line: 4003, column: 69, scope: !8759)
!8764 = !DILocation(line: 4003, column: 59, scope: !8759)
!8765 = !DILocation(line: 4003, column: 73, scope: !8759)
!8766 = !DILocation(line: 4003, column: 10, scope: !8759)
!8767 = !DILocation(line: 4003, column: 3, scope: !8759)
!8768 = distinct !DISubprogram(name: "format_user_or_group_width", scope: !3, file: !3, line: 3975, type: !676, scopeLine: 3976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8769 = !DILocalVariable(name: "name", arg: 1, scope: !8768, file: !3, line: 3975, type: !146)
!8770 = !DILocation(line: 3975, column: 41, scope: !8768)
!8771 = !DILocalVariable(name: "id", arg: 2, scope: !8768, file: !3, line: 3975, type: !151)
!8772 = !DILocation(line: 3975, column: 65, scope: !8768)
!8773 = !DILocation(line: 3977, column: 7, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3977, column: 7)
!8775 = !DILocation(line: 3977, column: 7, scope: !8768)
!8776 = !DILocalVariable(name: "len", scope: !8777, file: !3, line: 3979, type: !27)
!8777 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 3978, column: 5)
!8778 = !DILocation(line: 3979, column: 11, scope: !8777)
!8779 = !DILocation(line: 3979, column: 27, scope: !8777)
!8780 = !DILocation(line: 3979, column: 17, scope: !8777)
!8781 = !DILocation(line: 3980, column: 14, scope: !8777)
!8782 = !DILocation(line: 3980, column: 7, scope: !8777)
!8783 = !DILocalVariable(name: "buf", scope: !8784, file: !3, line: 3984, type: !656)
!8784 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 3983, column: 5)
!8785 = !DILocation(line: 3984, column: 12, scope: !8784)
!8786 = !DILocation(line: 3985, column: 16, scope: !8784)
!8787 = !DILocation(line: 3985, column: 28, scope: !8784)
!8788 = !DILocation(line: 3985, column: 7, scope: !8784)
!8789 = !DILocation(line: 3986, column: 22, scope: !8784)
!8790 = !DILocation(line: 3986, column: 14, scope: !8784)
!8791 = !DILocation(line: 3986, column: 7, scope: !8784)
!8792 = !DILocation(line: 3988, column: 1, scope: !8768)
!8793 = distinct !DISubprogram(name: "errno_unsupported", scope: !3, file: !3, line: 3016, type: !663, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8794 = !DILocalVariable(name: "err", arg: 1, scope: !8793, file: !3, line: 3016, type: !27)
!8795 = !DILocation(line: 3016, column: 24, scope: !8793)
!8796 = !DILocation(line: 3018, column: 11, scope: !8793)
!8797 = !DILocation(line: 3018, column: 15, scope: !8793)
!8798 = !DILocation(line: 3018, column: 25, scope: !8793)
!8799 = !DILocation(line: 3018, column: 28, scope: !8793)
!8800 = !DILocation(line: 3018, column: 32, scope: !8793)
!8801 = !DILocation(line: 3018, column: 42, scope: !8793)
!8802 = !DILocation(line: 3018, column: 57, scope: !8793)
!8803 = !DILocation(line: 3018, column: 45, scope: !8793)
!8804 = !DILocation(line: 3018, column: 3, scope: !8793)
!8805 = distinct !DISubprogram(name: "has_capability", scope: !3, file: !3, line: 2964, type: !556, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8806 = !DILocalVariable(name: "name", arg: 1, scope: !8805, file: !3, line: 2964, type: !146)
!8807 = !DILocation(line: 2964, column: 29, scope: !8805)
!8808 = !DILocation(line: 2966, column: 3, scope: !8805)
!8809 = !DILocation(line: 2966, column: 9, scope: !8805)
!8810 = !DILocation(line: 2967, column: 3, scope: !8805)
!8811 = distinct !DISubprogram(name: "known_term_type", scope: !3, file: !3, line: 2489, type: !590, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8812 = !DILocalVariable(name: "term", scope: !8811, file: !3, line: 2491, type: !146)
!8813 = !DILocation(line: 2491, column: 15, scope: !8811)
!8814 = !DILocation(line: 2491, column: 22, scope: !8811)
!8815 = !DILocation(line: 2492, column: 9, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 2492, column: 7)
!8817 = !DILocation(line: 2492, column: 14, scope: !8816)
!8818 = !DILocation(line: 2492, column: 20, scope: !8816)
!8819 = !DILocation(line: 2492, column: 19, scope: !8816)
!8820 = !DILocation(line: 2492, column: 7, scope: !8811)
!8821 = !DILocation(line: 2493, column: 5, scope: !8816)
!8822 = !DILocalVariable(name: "line", scope: !8811, file: !3, line: 2495, type: !146)
!8823 = !DILocation(line: 2495, column: 15, scope: !8811)
!8824 = !DILocation(line: 2496, column: 3, scope: !8811)
!8825 = !DILocation(line: 2496, column: 10, scope: !8811)
!8826 = !DILocation(line: 2496, column: 15, scope: !8811)
!8827 = !DILocation(line: 2496, column: 24, scope: !8811)
!8828 = !DILocation(line: 2498, column: 11, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2498, column: 11)
!8830 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 2497, column: 5)
!8831 = !DILocation(line: 2498, column: 39, scope: !8829)
!8832 = !DILocation(line: 2498, column: 11, scope: !8830)
!8833 = !DILocation(line: 2500, column: 24, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 2500, column: 15)
!8835 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2499, column: 9)
!8836 = !DILocation(line: 2500, column: 29, scope: !8834)
!8837 = !DILocation(line: 2500, column: 34, scope: !8834)
!8838 = !DILocation(line: 2500, column: 15, scope: !8834)
!8839 = !DILocation(line: 2500, column: 43, scope: !8834)
!8840 = !DILocation(line: 2500, column: 15, scope: !8835)
!8841 = !DILocation(line: 2501, column: 13, scope: !8834)
!8842 = !DILocation(line: 2502, column: 9, scope: !8835)
!8843 = !DILocation(line: 2503, column: 23, scope: !8830)
!8844 = !DILocation(line: 2503, column: 15, scope: !8830)
!8845 = !DILocation(line: 2503, column: 29, scope: !8830)
!8846 = !DILocation(line: 2503, column: 12, scope: !8830)
!8847 = distinct !{!8847, !8824, !8848}
!8848 = !DILocation(line: 2504, column: 5, scope: !8811)
!8849 = !DILocation(line: 2506, column: 3, scope: !8811)
!8850 = !DILocation(line: 2507, column: 1, scope: !8811)
!8851 = !DILocalVariable(name: "dest", arg: 1, scope: !138, file: !3, line: 2281, type: !142)
!8852 = !DILocation(line: 2281, column: 26, scope: !138)
!8853 = !DILocalVariable(name: "src", arg: 2, scope: !138, file: !3, line: 2281, type: !145)
!8854 = !DILocation(line: 2281, column: 45, scope: !138)
!8855 = !DILocalVariable(name: "equals_end", arg: 3, scope: !138, file: !3, line: 2281, type: !141)
!8856 = !DILocation(line: 2281, column: 55, scope: !138)
!8857 = !DILocalVariable(name: "output_count", arg: 4, scope: !138, file: !3, line: 2282, type: !148)
!8858 = !DILocation(line: 2282, column: 27, scope: !138)
!8859 = !DILocalVariable(name: "num", scope: !138, file: !3, line: 2284, type: !144)
!8860 = !DILocation(line: 2284, column: 8, scope: !138)
!8861 = !DILocalVariable(name: "count", scope: !138, file: !3, line: 2285, type: !149)
!8862 = !DILocation(line: 2285, column: 10, scope: !138)
!8863 = !DILocalVariable(name: "state", scope: !138, file: !3, line: 2288, type: !137)
!8864 = !DILocation(line: 2288, column: 5, scope: !138)
!8865 = !DILocalVariable(name: "p", scope: !138, file: !3, line: 2289, type: !146)
!8866 = !DILocation(line: 2289, column: 15, scope: !138)
!8867 = !DILocalVariable(name: "q", scope: !138, file: !3, line: 2290, type: !143)
!8868 = !DILocation(line: 2290, column: 9, scope: !138)
!8869 = !DILocation(line: 2292, column: 8, scope: !138)
!8870 = !DILocation(line: 2292, column: 7, scope: !138)
!8871 = !DILocation(line: 2292, column: 5, scope: !138)
!8872 = !DILocation(line: 2293, column: 8, scope: !138)
!8873 = !DILocation(line: 2293, column: 7, scope: !138)
!8874 = !DILocation(line: 2293, column: 5, scope: !138)
!8875 = !DILocation(line: 2295, column: 9, scope: !138)
!8876 = !DILocation(line: 2296, column: 7, scope: !138)
!8877 = !DILocation(line: 2298, column: 9, scope: !138)
!8878 = !DILocation(line: 2299, column: 3, scope: !138)
!8879 = !DILocation(line: 2299, column: 10, scope: !138)
!8880 = !DILocation(line: 2299, column: 16, scope: !138)
!8881 = !DILocation(line: 2301, column: 15, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !138, file: !3, line: 2300, column: 5)
!8883 = !DILocation(line: 2301, column: 7, scope: !8882)
!8884 = !DILocation(line: 2304, column: 20, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2302, column: 9)
!8886 = !DILocation(line: 2304, column: 19, scope: !8885)
!8887 = !DILocation(line: 2304, column: 11, scope: !8885)
!8888 = !DILocation(line: 2308, column: 21, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2305, column: 13)
!8890 = !DILocation(line: 2309, column: 15, scope: !8889)
!8891 = !DILocation(line: 2311, column: 21, scope: !8889)
!8892 = !DILocation(line: 2312, column: 15, scope: !8889)
!8893 = !DILocation(line: 2313, column: 15, scope: !8889)
!8894 = !DILocation(line: 2315, column: 21, scope: !8889)
!8895 = !DILocation(line: 2316, column: 15, scope: !8889)
!8896 = !DILocation(line: 2317, column: 15, scope: !8889)
!8897 = !DILocation(line: 2319, column: 19, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2319, column: 19)
!8899 = !DILocation(line: 2319, column: 19, scope: !8889)
!8900 = !DILocation(line: 2321, column: 25, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 2320, column: 17)
!8902 = !DILocation(line: 2322, column: 19, scope: !8901)
!8903 = !DILocation(line: 2324, column: 15, scope: !8889)
!8904 = !DILocation(line: 2326, column: 27, scope: !8889)
!8905 = !DILocation(line: 2326, column: 24, scope: !8889)
!8906 = !DILocation(line: 2326, column: 18, scope: !8889)
!8907 = !DILocation(line: 2326, column: 22, scope: !8889)
!8908 = !DILocation(line: 2327, column: 15, scope: !8889)
!8909 = !DILocation(line: 2328, column: 15, scope: !8889)
!8910 = !DILocation(line: 2330, column: 11, scope: !8885)
!8911 = !DILocation(line: 2333, column: 20, scope: !8885)
!8912 = !DILocation(line: 2333, column: 19, scope: !8885)
!8913 = !DILocation(line: 2333, column: 11, scope: !8885)
!8914 = !DILocation(line: 2343, column: 21, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2334, column: 13)
!8916 = !DILocation(line: 2344, column: 22, scope: !8915)
!8917 = !DILocation(line: 2344, column: 21, scope: !8915)
!8918 = !DILocation(line: 2344, column: 24, scope: !8915)
!8919 = !DILocation(line: 2344, column: 19, scope: !8915)
!8920 = !DILocation(line: 2345, column: 15, scope: !8915)
!8921 = !DILocation(line: 2348, column: 21, scope: !8915)
!8922 = !DILocation(line: 2349, column: 19, scope: !8915)
!8923 = !DILocation(line: 2350, column: 15, scope: !8915)
!8924 = !DILocation(line: 2352, column: 19, scope: !8915)
!8925 = !DILocation(line: 2353, column: 15, scope: !8915)
!8926 = !DILocation(line: 2355, column: 19, scope: !8915)
!8927 = !DILocation(line: 2356, column: 15, scope: !8915)
!8928 = !DILocation(line: 2358, column: 19, scope: !8915)
!8929 = !DILocation(line: 2359, column: 15, scope: !8915)
!8930 = !DILocation(line: 2361, column: 19, scope: !8915)
!8931 = !DILocation(line: 2362, column: 15, scope: !8915)
!8932 = !DILocation(line: 2364, column: 19, scope: !8915)
!8933 = !DILocation(line: 2365, column: 15, scope: !8915)
!8934 = !DILocation(line: 2367, column: 19, scope: !8915)
!8935 = !DILocation(line: 2368, column: 15, scope: !8915)
!8936 = !DILocation(line: 2370, column: 19, scope: !8915)
!8937 = !DILocation(line: 2371, column: 15, scope: !8915)
!8938 = !DILocation(line: 2373, column: 19, scope: !8915)
!8939 = !DILocation(line: 2374, column: 15, scope: !8915)
!8940 = !DILocation(line: 2376, column: 19, scope: !8915)
!8941 = !DILocation(line: 2377, column: 15, scope: !8915)
!8942 = !DILocation(line: 2379, column: 19, scope: !8915)
!8943 = !DILocation(line: 2380, column: 15, scope: !8915)
!8944 = !DILocation(line: 2382, column: 21, scope: !8915)
!8945 = !DILocation(line: 2383, column: 15, scope: !8915)
!8946 = !DILocation(line: 2385, column: 22, scope: !8915)
!8947 = !DILocation(line: 2385, column: 21, scope: !8915)
!8948 = !DILocation(line: 2385, column: 19, scope: !8915)
!8949 = !DILocation(line: 2386, column: 15, scope: !8915)
!8950 = !DILocation(line: 2388, column: 15, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2388, column: 15)
!8952 = !DILocation(line: 2388, column: 21, scope: !8951)
!8953 = !DILocation(line: 2388, column: 15, scope: !8885)
!8954 = !DILocation(line: 2390, column: 24, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 2389, column: 13)
!8956 = !DILocation(line: 2390, column: 18, scope: !8955)
!8957 = !DILocation(line: 2390, column: 22, scope: !8955)
!8958 = !DILocation(line: 2391, column: 15, scope: !8955)
!8959 = !DILocation(line: 2392, column: 21, scope: !8955)
!8960 = !DILocation(line: 2393, column: 13, scope: !8955)
!8961 = !DILocation(line: 2394, column: 11, scope: !8885)
!8962 = !DILocation(line: 2395, column: 11, scope: !8885)
!8963 = !DILocation(line: 2398, column: 16, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2398, column: 15)
!8965 = !DILocation(line: 2398, column: 15, scope: !8964)
!8966 = !DILocation(line: 2398, column: 18, scope: !8964)
!8967 = !DILocation(line: 2398, column: 24, scope: !8964)
!8968 = !DILocation(line: 2398, column: 28, scope: !8964)
!8969 = !DILocation(line: 2398, column: 27, scope: !8964)
!8970 = !DILocation(line: 2398, column: 30, scope: !8964)
!8971 = !DILocation(line: 2398, column: 15, scope: !8885)
!8972 = !DILocation(line: 2400, column: 24, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2399, column: 13)
!8974 = !DILocation(line: 2400, column: 18, scope: !8973)
!8975 = !DILocation(line: 2400, column: 22, scope: !8973)
!8976 = !DILocation(line: 2401, column: 15, scope: !8973)
!8977 = !DILocation(line: 2402, column: 21, scope: !8973)
!8978 = !DILocation(line: 2403, column: 13, scope: !8973)
!8979 = !DILocation(line: 2405, column: 20, scope: !8964)
!8980 = !DILocation(line: 2405, column: 24, scope: !8964)
!8981 = !DILocation(line: 2405, column: 36, scope: !8964)
!8982 = !DILocation(line: 2405, column: 33, scope: !8964)
!8983 = !DILocation(line: 2405, column: 40, scope: !8964)
!8984 = !DILocation(line: 2405, column: 30, scope: !8964)
!8985 = !DILocation(line: 2405, column: 19, scope: !8964)
!8986 = !DILocation(line: 2405, column: 17, scope: !8964)
!8987 = !DILocation(line: 2406, column: 11, scope: !8885)
!8988 = !DILocation(line: 2409, column: 20, scope: !8885)
!8989 = !DILocation(line: 2409, column: 19, scope: !8885)
!8990 = !DILocation(line: 2409, column: 11, scope: !8885)
!8991 = !DILocation(line: 2421, column: 22, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2410, column: 13)
!8993 = !DILocation(line: 2421, column: 26, scope: !8992)
!8994 = !DILocation(line: 2421, column: 38, scope: !8992)
!8995 = !DILocation(line: 2421, column: 35, scope: !8992)
!8996 = !DILocation(line: 2421, column: 42, scope: !8992)
!8997 = !DILocation(line: 2421, column: 32, scope: !8992)
!8998 = !DILocation(line: 2421, column: 21, scope: !8992)
!8999 = !DILocation(line: 2421, column: 19, scope: !8992)
!9000 = !DILocation(line: 2422, column: 15, scope: !8992)
!9001 = !DILocation(line: 2429, column: 22, scope: !8992)
!9002 = !DILocation(line: 2429, column: 26, scope: !8992)
!9003 = !DILocation(line: 2429, column: 38, scope: !8992)
!9004 = !DILocation(line: 2429, column: 35, scope: !8992)
!9005 = !DILocation(line: 2429, column: 42, scope: !8992)
!9006 = !DILocation(line: 2429, column: 32, scope: !8992)
!9007 = !DILocation(line: 2429, column: 49, scope: !8992)
!9008 = !DILocation(line: 2429, column: 21, scope: !8992)
!9009 = !DILocation(line: 2429, column: 19, scope: !8992)
!9010 = !DILocation(line: 2430, column: 15, scope: !8992)
!9011 = !DILocation(line: 2437, column: 22, scope: !8992)
!9012 = !DILocation(line: 2437, column: 26, scope: !8992)
!9013 = !DILocation(line: 2437, column: 38, scope: !8992)
!9014 = !DILocation(line: 2437, column: 35, scope: !8992)
!9015 = !DILocation(line: 2437, column: 42, scope: !8992)
!9016 = !DILocation(line: 2437, column: 32, scope: !8992)
!9017 = !DILocation(line: 2437, column: 49, scope: !8992)
!9018 = !DILocation(line: 2437, column: 21, scope: !8992)
!9019 = !DILocation(line: 2437, column: 19, scope: !8992)
!9020 = !DILocation(line: 2438, column: 15, scope: !8992)
!9021 = !DILocation(line: 2440, column: 24, scope: !8992)
!9022 = !DILocation(line: 2440, column: 18, scope: !8992)
!9023 = !DILocation(line: 2440, column: 22, scope: !8992)
!9024 = !DILocation(line: 2441, column: 15, scope: !8992)
!9025 = !DILocation(line: 2442, column: 21, scope: !8992)
!9026 = !DILocation(line: 2443, column: 15, scope: !8992)
!9027 = !DILocation(line: 2445, column: 11, scope: !8885)
!9028 = !DILocation(line: 2448, column: 17, scope: !8885)
!9029 = !DILocation(line: 2449, column: 16, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2449, column: 15)
!9031 = !DILocation(line: 2449, column: 15, scope: !9030)
!9032 = !DILocation(line: 2449, column: 18, scope: !9030)
!9033 = !DILocation(line: 2449, column: 25, scope: !9030)
!9034 = !DILocation(line: 2449, column: 29, scope: !9030)
!9035 = !DILocation(line: 2449, column: 28, scope: !9030)
!9036 = !DILocation(line: 2449, column: 31, scope: !9030)
!9037 = !DILocation(line: 2449, column: 15, scope: !8885)
!9038 = !DILocation(line: 2451, column: 27, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 2450, column: 13)
!9040 = !DILocation(line: 2451, column: 24, scope: !9039)
!9041 = !DILocation(line: 2451, column: 31, scope: !9039)
!9042 = !DILocation(line: 2451, column: 18, scope: !9039)
!9043 = !DILocation(line: 2451, column: 22, scope: !9039)
!9044 = !DILocation(line: 2452, column: 15, scope: !9039)
!9045 = !DILocation(line: 2453, column: 13, scope: !9039)
!9046 = !DILocation(line: 2454, column: 21, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 2454, column: 20)
!9048 = !DILocation(line: 2454, column: 20, scope: !9047)
!9049 = !DILocation(line: 2454, column: 23, scope: !9047)
!9050 = !DILocation(line: 2454, column: 20, scope: !9030)
!9051 = !DILocation(line: 2456, column: 18, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 2455, column: 13)
!9053 = !DILocation(line: 2456, column: 22, scope: !9052)
!9054 = !DILocation(line: 2457, column: 15, scope: !9052)
!9055 = !DILocation(line: 2458, column: 13, scope: !9052)
!9056 = !DILocation(line: 2460, column: 19, scope: !9047)
!9057 = !DILocation(line: 2461, column: 11, scope: !8885)
!9058 = !DILocation(line: 2464, column: 11, scope: !8885)
!9059 = distinct !{!9059, !8878, !9060}
!9060 = !DILocation(line: 2466, column: 5, scope: !138)
!9061 = !DILocation(line: 2468, column: 11, scope: !138)
!9062 = !DILocation(line: 2468, column: 4, scope: !138)
!9063 = !DILocation(line: 2468, column: 9, scope: !138)
!9064 = !DILocation(line: 2469, column: 10, scope: !138)
!9065 = !DILocation(line: 2469, column: 4, scope: !138)
!9066 = !DILocation(line: 2469, column: 8, scope: !138)
!9067 = !DILocation(line: 2470, column: 19, scope: !138)
!9068 = !DILocation(line: 2470, column: 4, scope: !138)
!9069 = !DILocation(line: 2470, column: 17, scope: !138)
!9070 = !DILocation(line: 2472, column: 10, scope: !138)
!9071 = !DILocation(line: 2472, column: 16, scope: !138)
!9072 = !DILocation(line: 2472, column: 3, scope: !138)
!9073 = distinct !DISubprogram(name: "getenv_quoting_style", scope: !3, file: !3, line: 2655, type: !336, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9074 = !DILocalVariable(name: "q_style", scope: !9073, file: !3, line: 2657, type: !146)
!9075 = !DILocation(line: 2657, column: 15, scope: !9073)
!9076 = !DILocation(line: 2657, column: 25, scope: !9073)
!9077 = !DILocation(line: 2658, column: 7, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2658, column: 7)
!9079 = !DILocation(line: 2658, column: 7, scope: !9073)
!9080 = !DILocalVariable(name: "i", scope: !9081, file: !3, line: 2660, type: !27)
!9081 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 2659, column: 5)
!9082 = !DILocation(line: 2660, column: 11, scope: !9081)
!9083 = !DILocation(line: 2660, column: 15, scope: !9081)
!9084 = !DILocation(line: 2661, column: 16, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 2661, column: 11)
!9086 = !DILocation(line: 2661, column: 13, scope: !9085)
!9087 = !DILocation(line: 2661, column: 11, scope: !9081)
!9088 = !DILocation(line: 2662, column: 53, scope: !9085)
!9089 = !DILocation(line: 2662, column: 34, scope: !9085)
!9090 = !DILocation(line: 2662, column: 9, scope: !9085)
!9091 = !DILocation(line: 2665, column: 8, scope: !9085)
!9092 = !DILocation(line: 2666, column: 23, scope: !9085)
!9093 = !DILocation(line: 2666, column: 16, scope: !9085)
!9094 = !DILocation(line: 2664, column: 9, scope: !9085)
!9095 = !DILocation(line: 2667, column: 5, scope: !9081)
!9096 = !DILocation(line: 2668, column: 1, scope: !9073)
!9097 = distinct !DISubprogram(name: "set_line_length", scope: !3, file: !3, line: 1663, type: !556, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9098 = !DILocalVariable(name: "spec", arg: 1, scope: !9097, file: !3, line: 1663, type: !146)
!9099 = !DILocation(line: 1663, column: 30, scope: !9097)
!9100 = !DILocalVariable(name: "val", scope: !9097, file: !3, line: 1665, type: !168)
!9101 = !DILocation(line: 1665, column: 13, scope: !9097)
!9102 = !DILocation(line: 1669, column: 23, scope: !9097)
!9103 = !DILocation(line: 1669, column: 11, scope: !9097)
!9104 = !DILocation(line: 1669, column: 3, scope: !9097)
!9105 = !DILocation(line: 1672, column: 21, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1670, column: 5)
!9107 = !DILocation(line: 1672, column: 19, scope: !9106)
!9108 = !DILocation(line: 1673, column: 7, scope: !9106)
!9109 = !DILocation(line: 1676, column: 19, scope: !9106)
!9110 = !DILocation(line: 1677, column: 7, scope: !9106)
!9111 = !DILocation(line: 1680, column: 7, scope: !9106)
!9112 = !DILocation(line: 1682, column: 1, scope: !9097)
!9113 = distinct !DISubprogram(name: "add_ignore_pattern", scope: !3, file: !3, line: 2893, type: !558, scopeLine: 2894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9114 = !DILocalVariable(name: "pattern", arg: 1, scope: !9113, file: !3, line: 2893, type: !146)
!9115 = !DILocation(line: 2893, column: 33, scope: !9113)
!9116 = !DILocalVariable(name: "ignore", scope: !9113, file: !3, line: 2895, type: !499)
!9117 = !DILocation(line: 2895, column: 26, scope: !9113)
!9118 = !DILocation(line: 2897, column: 12, scope: !9113)
!9119 = !DILocation(line: 2897, column: 10, scope: !9113)
!9120 = !DILocation(line: 2898, column: 21, scope: !9113)
!9121 = !DILocation(line: 2898, column: 3, scope: !9113)
!9122 = !DILocation(line: 2898, column: 11, scope: !9113)
!9123 = !DILocation(line: 2898, column: 19, scope: !9113)
!9124 = !DILocation(line: 2900, column: 18, scope: !9113)
!9125 = !DILocation(line: 2900, column: 3, scope: !9113)
!9126 = !DILocation(line: 2900, column: 11, scope: !9113)
!9127 = !DILocation(line: 2900, column: 16, scope: !9113)
!9128 = !DILocation(line: 2901, column: 21, scope: !9113)
!9129 = !DILocation(line: 2901, column: 19, scope: !9113)
!9130 = !DILocation(line: 2902, column: 1, scope: !9113)
!9131 = distinct !DISubprogram(name: "bad_cast", scope: !792, file: !792, line: 695, type: !560, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9132 = !DILocalVariable(name: "s", arg: 1, scope: !9131, file: !792, line: 695, type: !146)
!9133 = !DILocation(line: 695, column: 23, scope: !9131)
!9134 = !DILocation(line: 697, column: 19, scope: !9131)
!9135 = !DILocation(line: 697, column: 3, scope: !9131)
!9136 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 5127, type: !173, scopeLine: 5128, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9137 = !DILocalVariable(name: "status", arg: 1, scope: !9136, file: !3, line: 5127, type: !27)
!9138 = !DILocation(line: 5127, column: 12, scope: !9136)
!9139 = !DILocation(line: 5129, column: 7, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 5129, column: 7)
!9141 = !DILocation(line: 5129, column: 14, scope: !9140)
!9142 = !DILocation(line: 5129, column: 7, scope: !9136)
!9143 = !DILocation(line: 5130, column: 5, scope: !9140)
!9144 = !DILocation(line: 5130, column: 5, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 5130, column: 5)
!9146 = !DILocation(line: 5133, column: 15, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 5132, column: 5)
!9148 = !DILocation(line: 5133, column: 55, scope: !9147)
!9149 = !DILocation(line: 5133, column: 7, scope: !9147)
!9150 = !DILocation(line: 5134, column: 7, scope: !9147)
!9151 = !DILocation(line: 5139, column: 7, scope: !9147)
!9152 = !DILocation(line: 5141, column: 7, scope: !9147)
!9153 = !DILocation(line: 5147, column: 7, scope: !9147)
!9154 = !DILocation(line: 5151, column: 7, scope: !9147)
!9155 = !DILocation(line: 5158, column: 7, scope: !9147)
!9156 = !DILocation(line: 5167, column: 7, scope: !9147)
!9157 = !DILocation(line: 5175, column: 7, scope: !9147)
!9158 = !DILocation(line: 5178, column: 7, scope: !9147)
!9159 = !DILocation(line: 5184, column: 7, scope: !9147)
!9160 = !DILocation(line: 5187, column: 7, scope: !9147)
!9161 = !DILocation(line: 5191, column: 7, scope: !9147)
!9162 = !DILocation(line: 5201, column: 7, scope: !9147)
!9163 = !DILocation(line: 5205, column: 7, scope: !9147)
!9164 = !DILocation(line: 5214, column: 7, scope: !9147)
!9165 = !DILocation(line: 5218, column: 7, scope: !9147)
!9166 = !DILocation(line: 5226, column: 7, scope: !9147)
!9167 = !DILocation(line: 5233, column: 7, scope: !9147)
!9168 = !DILocation(line: 5244, column: 7, scope: !9147)
!9169 = !DILocation(line: 5249, column: 7, scope: !9147)
!9170 = !DILocation(line: 5260, column: 7, scope: !9147)
!9171 = !DILocation(line: 5263, column: 7, scope: !9147)
!9172 = !DILocation(line: 5267, column: 7, scope: !9147)
!9173 = !DILocation(line: 5274, column: 7, scope: !9147)
!9174 = !DILocation(line: 5282, column: 7, scope: !9147)
!9175 = !DILocation(line: 5283, column: 7, scope: !9147)
!9176 = !DILocation(line: 5284, column: 7, scope: !9147)
!9177 = !DILocation(line: 5285, column: 7, scope: !9147)
!9178 = !DILocation(line: 5293, column: 7, scope: !9147)
!9179 = !DILocation(line: 5300, column: 7, scope: !9147)
!9180 = !DILocation(line: 5307, column: 28, scope: !9147)
!9181 = !DILocation(line: 5307, column: 7, scope: !9147)
!9182 = !DILocation(line: 5309, column: 9, scope: !9136)
!9183 = !DILocation(line: 5309, column: 3, scope: !9136)
!9184 = distinct !DISubprogram(name: "abformat_init", scope: !3, file: !3, line: 1152, type: !336, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9185 = !DILocalVariable(name: "pb", scope: !9184, file: !3, line: 1154, type: !549)
!9186 = !DILocation(line: 1154, column: 15, scope: !9184)
!9187 = !DILocalVariable(name: "recent", scope: !9188, file: !3, line: 1155, type: !27)
!9188 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1155, column: 3)
!9189 = !DILocation(line: 1155, column: 12, scope: !9188)
!9190 = !DILocation(line: 1155, column: 8, scope: !9188)
!9191 = !DILocation(line: 1155, column: 24, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 1155, column: 3)
!9193 = !DILocation(line: 1155, column: 31, scope: !9192)
!9194 = !DILocation(line: 1155, column: 3, scope: !9188)
!9195 = !DILocation(line: 1156, column: 52, scope: !9192)
!9196 = !DILocation(line: 1156, column: 35, scope: !9192)
!9197 = !DILocation(line: 1156, column: 18, scope: !9192)
!9198 = !DILocation(line: 1156, column: 8, scope: !9192)
!9199 = !DILocation(line: 1156, column: 5, scope: !9192)
!9200 = !DILocation(line: 1156, column: 16, scope: !9192)
!9201 = !DILocation(line: 1155, column: 42, scope: !9192)
!9202 = !DILocation(line: 1155, column: 3, scope: !9192)
!9203 = distinct !{!9203, !9194, !9204}
!9204 = !DILocation(line: 1156, column: 59, scope: !9188)
!9205 = !DILocation(line: 1157, column: 10, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1157, column: 7)
!9207 = !DILocation(line: 1157, column: 16, scope: !9206)
!9208 = !DILocation(line: 1157, column: 19, scope: !9206)
!9209 = !DILocation(line: 1157, column: 7, scope: !9184)
!9210 = !DILocation(line: 1158, column: 5, scope: !9206)
!9211 = !DILocalVariable(name: "abmon", scope: !9184, file: !3, line: 1160, type: !562)
!9212 = !DILocation(line: 1160, column: 8, scope: !9184)
!9213 = !DILocation(line: 1161, column: 21, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1161, column: 7)
!9215 = !DILocation(line: 1161, column: 9, scope: !9214)
!9216 = !DILocation(line: 1161, column: 7, scope: !9184)
!9217 = !DILocation(line: 1162, column: 5, scope: !9214)
!9218 = !DILocalVariable(name: "recent", scope: !9219, file: !3, line: 1164, type: !27)
!9219 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1164, column: 3)
!9220 = !DILocation(line: 1164, column: 12, scope: !9219)
!9221 = !DILocation(line: 1164, column: 8, scope: !9219)
!9222 = !DILocation(line: 1164, column: 24, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 1164, column: 3)
!9224 = !DILocation(line: 1164, column: 31, scope: !9223)
!9225 = !DILocation(line: 1164, column: 3, scope: !9219)
!9226 = !DILocalVariable(name: "fmt", scope: !9227, file: !3, line: 1166, type: !146)
!9227 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 1165, column: 5)
!9228 = !DILocation(line: 1166, column: 19, scope: !9227)
!9229 = !DILocation(line: 1166, column: 42, scope: !9227)
!9230 = !DILocation(line: 1166, column: 25, scope: !9227)
!9231 = !DILocalVariable(name: "i", scope: !9232, file: !3, line: 1167, type: !27)
!9232 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 1167, column: 7)
!9233 = !DILocation(line: 1167, column: 16, scope: !9232)
!9234 = !DILocation(line: 1167, column: 12, scope: !9232)
!9235 = !DILocation(line: 1167, column: 23, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1167, column: 7)
!9237 = !DILocation(line: 1167, column: 25, scope: !9236)
!9238 = !DILocation(line: 1167, column: 7, scope: !9232)
!9239 = !DILocalVariable(name: "nfmt", scope: !9240, file: !3, line: 1169, type: !143)
!9240 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 1168, column: 9)
!9241 = !DILocation(line: 1169, column: 17, scope: !9240)
!9242 = !DILocation(line: 1169, column: 33, scope: !9240)
!9243 = !DILocation(line: 1169, column: 24, scope: !9240)
!9244 = !DILocation(line: 1169, column: 41, scope: !9240)
!9245 = !DILocalVariable(name: "nbytes", scope: !9240, file: !3, line: 1170, type: !27)
!9246 = !DILocation(line: 1170, column: 15, scope: !9240)
!9247 = !DILocation(line: 1172, column: 20, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 1172, column: 15)
!9249 = !DILocation(line: 1172, column: 17, scope: !9248)
!9250 = !DILocation(line: 1172, column: 15, scope: !9240)
!9251 = !DILocation(line: 1173, column: 32, scope: !9248)
!9252 = !DILocation(line: 1173, column: 59, scope: !9248)
!9253 = !DILocation(line: 1173, column: 22, scope: !9248)
!9254 = !DILocation(line: 1173, column: 20, scope: !9248)
!9255 = !DILocation(line: 1173, column: 13, scope: !9248)
!9256 = !DILocation(line: 1176, column: 25, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1176, column: 19)
!9258 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 1175, column: 13)
!9259 = !DILocation(line: 1176, column: 22, scope: !9257)
!9260 = !DILocation(line: 1176, column: 35, scope: !9257)
!9261 = !DILocation(line: 1176, column: 33, scope: !9257)
!9262 = !DILocation(line: 1176, column: 39, scope: !9257)
!9263 = !DILocation(line: 1176, column: 19, scope: !9258)
!9264 = !DILocation(line: 1177, column: 17, scope: !9257)
!9265 = !DILocalVariable(name: "prefix_len", scope: !9258, file: !3, line: 1178, type: !27)
!9266 = !DILocation(line: 1178, column: 19, scope: !9258)
!9267 = !DILocation(line: 1178, column: 35, scope: !9258)
!9268 = !DILocation(line: 1178, column: 32, scope: !9258)
!9269 = !DILocation(line: 1178, column: 45, scope: !9258)
!9270 = !DILocation(line: 1178, column: 43, scope: !9258)
!9271 = !DILocation(line: 1179, column: 34, scope: !9258)
!9272 = !DILocation(line: 1180, column: 34, scope: !9258)
!9273 = !DILocation(line: 1180, column: 46, scope: !9258)
!9274 = !DILocation(line: 1180, column: 57, scope: !9258)
!9275 = !DILocation(line: 1180, column: 51, scope: !9258)
!9276 = !DILocation(line: 1180, column: 64, scope: !9258)
!9277 = !DILocation(line: 1180, column: 61, scope: !9258)
!9278 = !DILocation(line: 1180, column: 72, scope: !9258)
!9279 = !DILocation(line: 1179, column: 24, scope: !9258)
!9280 = !DILocation(line: 1179, column: 22, scope: !9258)
!9281 = !DILocation(line: 1183, column: 23, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 1183, column: 15)
!9283 = !DILocation(line: 1183, column: 20, scope: !9282)
!9284 = !DILocation(line: 1183, column: 30, scope: !9282)
!9285 = !DILocation(line: 1183, column: 33, scope: !9282)
!9286 = !DILocation(line: 1183, column: 40, scope: !9282)
!9287 = !DILocation(line: 1183, column: 15, scope: !9240)
!9288 = !DILocation(line: 1184, column: 13, scope: !9282)
!9289 = !DILocation(line: 1185, column: 9, scope: !9240)
!9290 = !DILocation(line: 1167, column: 32, scope: !9236)
!9291 = !DILocation(line: 1167, column: 7, scope: !9236)
!9292 = distinct !{!9292, !9238, !9293}
!9293 = !DILocation(line: 1185, column: 9, scope: !9232)
!9294 = !DILocation(line: 1186, column: 5, scope: !9227)
!9295 = !DILocation(line: 1164, column: 42, scope: !9223)
!9296 = !DILocation(line: 1164, column: 3, scope: !9223)
!9297 = distinct !{!9297, !9225, !9298}
!9298 = !DILocation(line: 1186, column: 5, scope: !9219)
!9299 = !DILocation(line: 1188, column: 16, scope: !9184)
!9300 = !DILocation(line: 1189, column: 1, scope: !9184)
!9301 = distinct !DISubprogram(name: "first_percent_b", scope: !3, file: !3, line: 1071, type: !567, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9302 = !DILocalVariable(name: "fmt", arg: 1, scope: !9301, file: !3, line: 1071, type: !146)
!9303 = !DILocation(line: 1071, column: 30, scope: !9301)
!9304 = !DILocation(line: 1073, column: 3, scope: !9301)
!9305 = !DILocation(line: 1073, column: 11, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 1073, column: 3)
!9307 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 1073, column: 3)
!9308 = !DILocation(line: 1073, column: 10, scope: !9306)
!9309 = !DILocation(line: 1073, column: 3, scope: !9307)
!9310 = !DILocation(line: 1074, column: 9, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 1074, column: 9)
!9312 = !DILocation(line: 1074, column: 16, scope: !9311)
!9313 = !DILocation(line: 1074, column: 9, scope: !9306)
!9314 = !DILocation(line: 1075, column: 15, scope: !9311)
!9315 = !DILocation(line: 1075, column: 7, scope: !9311)
!9316 = !DILocation(line: 1077, column: 26, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 1076, column: 9)
!9318 = !DILocation(line: 1077, column: 19, scope: !9317)
!9319 = !DILocation(line: 1078, column: 22, scope: !9317)
!9320 = !DILocation(line: 1078, column: 26, scope: !9317)
!9321 = !DILocation(line: 1079, column: 9, scope: !9317)
!9322 = !DILocation(line: 1074, column: 19, scope: !9311)
!9323 = !DILocation(line: 1073, column: 19, scope: !9306)
!9324 = !DILocation(line: 1073, column: 3, scope: !9306)
!9325 = distinct !{!9325, !9309, !9326}
!9326 = !DILocation(line: 1079, column: 9, scope: !9307)
!9327 = !DILocation(line: 1080, column: 3, scope: !9301)
!9328 = !DILocation(line: 1081, column: 1, scope: !9301)
!9329 = distinct !DISubprogram(name: "abmon_init", scope: !3, file: !3, line: 1117, type: !569, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9330 = !DILocalVariable(name: "abmon", arg: 1, scope: !9329, file: !3, line: 1117, type: !571)
!9331 = !DILocation(line: 1117, column: 18, scope: !9329)
!9332 = !DILocalVariable(name: "required_mon_width", scope: !9329, file: !3, line: 1122, type: !149)
!9333 = !DILocation(line: 1122, column: 10, scope: !9329)
!9334 = !DILocalVariable(name: "curr_max_width", scope: !9329, file: !3, line: 1123, type: !149)
!9335 = !DILocation(line: 1123, column: 10, scope: !9329)
!9336 = !DILocation(line: 1124, column: 3, scope: !9329)
!9337 = !DILocation(line: 1126, column: 24, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 1125, column: 5)
!9339 = !DILocation(line: 1126, column: 22, scope: !9338)
!9340 = !DILocation(line: 1127, column: 26, scope: !9338)
!9341 = !DILocalVariable(name: "i", scope: !9342, file: !3, line: 1128, type: !27)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 1128, column: 7)
!9343 = !DILocation(line: 1128, column: 16, scope: !9342)
!9344 = !DILocation(line: 1128, column: 12, scope: !9342)
!9345 = !DILocation(line: 1128, column: 23, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 1128, column: 7)
!9347 = !DILocation(line: 1128, column: 25, scope: !9346)
!9348 = !DILocation(line: 1128, column: 7, scope: !9342)
!9349 = !DILocalVariable(name: "width", scope: !9350, file: !3, line: 1130, type: !149)
!9350 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 1129, column: 9)
!9351 = !DILocation(line: 1130, column: 18, scope: !9350)
!9352 = !DILocation(line: 1130, column: 26, scope: !9350)
!9353 = !DILocalVariable(name: "abbr", scope: !9350, file: !3, line: 1131, type: !146)
!9354 = !DILocation(line: 1131, column: 23, scope: !9350)
!9355 = !DILocation(line: 1131, column: 53, scope: !9350)
!9356 = !DILocation(line: 1131, column: 51, scope: !9350)
!9357 = !DILocation(line: 1131, column: 30, scope: !9350)
!9358 = !DILocation(line: 1132, column: 23, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1132, column: 15)
!9360 = !DILocation(line: 1132, column: 15, scope: !9359)
!9361 = !DILocation(line: 1132, column: 15, scope: !9350)
!9362 = !DILocation(line: 1133, column: 13, scope: !9359)
!9363 = !DILocalVariable(name: "alignment", scope: !9350, file: !3, line: 1134, type: !574)
!9364 = !DILocation(line: 1134, column: 23, scope: !9350)
!9365 = !DILocation(line: 1134, column: 35, scope: !9350)
!9366 = !DILocalVariable(name: "req", scope: !9350, file: !3, line: 1136, type: !149)
!9367 = !DILocation(line: 1136, column: 18, scope: !9350)
!9368 = !DILocation(line: 1136, column: 34, scope: !9350)
!9369 = !DILocation(line: 1136, column: 40, scope: !9350)
!9370 = !DILocation(line: 1136, column: 46, scope: !9350)
!9371 = !DILocation(line: 1137, column: 42, scope: !9350)
!9372 = !DILocation(line: 1136, column: 24, scope: !9350)
!9373 = !DILocation(line: 1138, column: 18, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1138, column: 15)
!9375 = !DILocation(line: 1138, column: 22, scope: !9374)
!9376 = !DILocation(line: 1138, column: 15, scope: !9350)
!9377 = !DILocation(line: 1139, column: 13, scope: !9374)
!9378 = !DILocation(line: 1140, column: 32, scope: !9350)
!9379 = !DILocation(line: 1140, column: 30, scope: !9350)
!9380 = !DILocation(line: 1141, column: 9, scope: !9350)
!9381 = !DILocation(line: 1128, column: 32, scope: !9346)
!9382 = !DILocation(line: 1128, column: 7, scope: !9346)
!9383 = distinct !{!9383, !9348, !9384}
!9384 = !DILocation(line: 1141, column: 9, scope: !9342)
!9385 = !DILocation(line: 1142, column: 5, scope: !9338)
!9386 = !DILocation(line: 1143, column: 10, scope: !9329)
!9387 = !DILocation(line: 1143, column: 27, scope: !9329)
!9388 = !DILocation(line: 1143, column: 25, scope: !9329)
!9389 = distinct !{!9389, !9336, !9390}
!9390 = !DILocation(line: 1143, column: 45, scope: !9329)
!9391 = !DILocation(line: 1145, column: 3, scope: !9329)
!9392 = !DILocation(line: 1147, column: 1, scope: !9329)
!9393 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !792, file: !792, line: 585, type: !336, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9394 = !DILocation(line: 587, column: 3, scope: !9393)
!9395 = !DILocation(line: 590, column: 1, scope: !9393)
!9396 = distinct !DISubprogram(name: "emit_size_note", scope: !792, file: !792, line: 593, type: !336, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9397 = !DILocation(line: 595, column: 3, scope: !9396)
!9398 = !DILocation(line: 600, column: 1, scope: !9396)
!9399 = !DILocalVariable(name: "program", arg: 1, scope: !793, file: !792, line: 631, type: !146)
!9400 = !DILocation(line: 631, column: 34, scope: !793)
!9401 = !DILocalVariable(name: "infomap", scope: !793, file: !792, line: 633, type: !789)
!9402 = !DILocation(line: 633, column: 67, scope: !793)
!9403 = !DILocalVariable(name: "node", scope: !793, file: !792, line: 643, type: !146)
!9404 = !DILocation(line: 643, column: 15, scope: !793)
!9405 = !DILocation(line: 643, column: 22, scope: !793)
!9406 = !DILocalVariable(name: "map_prog", scope: !793, file: !792, line: 644, type: !797)
!9407 = !DILocation(line: 644, column: 25, scope: !793)
!9408 = !DILocation(line: 644, column: 36, scope: !793)
!9409 = !DILocation(line: 646, column: 3, scope: !793)
!9410 = !DILocation(line: 646, column: 10, scope: !793)
!9411 = !DILocation(line: 646, column: 20, scope: !793)
!9412 = !{!9413, !2475, i64 0}
!9413 = !{!"infomap", !2475, i64 0, !2475, i64 8}
!9414 = !DILocation(line: 646, column: 28, scope: !793)
!9415 = !DILocation(line: 646, column: 33, scope: !793)
!9416 = !DILocation(line: 646, column: 31, scope: !793)
!9417 = !DILocation(line: 0, scope: !793)
!9418 = !DILocation(line: 647, column: 13, scope: !793)
!9419 = distinct !{!9419, !9409, !9418}
!9420 = !DILocation(line: 649, column: 7, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !793, file: !792, line: 649, column: 7)
!9422 = !DILocation(line: 649, column: 17, scope: !9421)
!9423 = !{!9413, !2475, i64 8}
!9424 = !DILocation(line: 649, column: 7, scope: !793)
!9425 = !DILocation(line: 650, column: 12, scope: !9421)
!9426 = !DILocation(line: 650, column: 22, scope: !9421)
!9427 = !DILocation(line: 650, column: 10, scope: !9421)
!9428 = !DILocation(line: 650, column: 5, scope: !9421)
!9429 = !DILocation(line: 652, column: 11, scope: !793)
!9430 = !DILocation(line: 652, column: 3, scope: !793)
!9431 = !DILocalVariable(name: "lc_messages", scope: !793, file: !792, line: 656, type: !146)
!9432 = !DILocation(line: 656, column: 15, scope: !793)
!9433 = !DILocation(line: 656, column: 29, scope: !793)
!9434 = !DILocation(line: 657, column: 7, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !793, file: !792, line: 657, column: 7)
!9436 = !DILocation(line: 657, column: 19, scope: !9435)
!9437 = !DILocation(line: 657, column: 22, scope: !9435)
!9438 = !DILocation(line: 657, column: 7, scope: !793)
!9439 = !DILocation(line: 663, column: 7, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9435, file: !792, line: 658, column: 5)
!9441 = !DILocation(line: 665, column: 5, scope: !9440)
!9442 = !DILocation(line: 666, column: 11, scope: !793)
!9443 = !DILocation(line: 667, column: 24, scope: !793)
!9444 = !DILocation(line: 666, column: 3, scope: !793)
!9445 = !DILocation(line: 668, column: 11, scope: !793)
!9446 = !DILocation(line: 669, column: 11, scope: !793)
!9447 = !DILocation(line: 669, column: 17, scope: !793)
!9448 = !DILocation(line: 669, column: 25, scope: !793)
!9449 = !DILocation(line: 669, column: 22, scope: !793)
!9450 = !DILocation(line: 668, column: 3, scope: !793)
!9451 = !DILocation(line: 670, column: 1, scope: !793)
!9452 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9453, file: !9453, line: 53, type: !1484, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9453 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!9454 = !DILocalVariable(name: "file", arg: 1, scope: !9452, file: !9453, line: 53, type: !146)
!9455 = !DILocation(line: 53, column: 34, scope: !9452)
!9456 = !DILocalVariable(name: "size", arg: 2, scope: !9452, file: !9453, line: 53, type: !149)
!9457 = !DILocation(line: 53, column: 47, scope: !9452)
!9458 = !DILocalVariable(name: "symlink_max", scope: !9452, file: !9453, line: 58, type: !149)
!9459 = !DILocation(line: 58, column: 10, scope: !9452)
!9460 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9452, file: !9453, line: 59, type: !149)
!9461 = !DILocation(line: 59, column: 10, scope: !9452)
!9462 = !DILocalVariable(name: "initial_limit", scope: !9452, file: !9453, line: 60, type: !149)
!9463 = !DILocation(line: 60, column: 10, scope: !9452)
!9464 = !DILocation(line: 60, column: 27, scope: !9452)
!9465 = !DILocation(line: 60, column: 41, scope: !9452)
!9466 = !DILocation(line: 60, column: 39, scope: !9452)
!9467 = !DILocation(line: 61, column: 29, scope: !9452)
!9468 = !DILocation(line: 61, column: 41, scope: !9452)
!9469 = !DILocation(line: 62, column: 29, scope: !9452)
!9470 = !DILocalVariable(name: "buf_size", scope: !9452, file: !9453, line: 67, type: !149)
!9471 = !DILocation(line: 67, column: 10, scope: !9452)
!9472 = !DILocation(line: 67, column: 22, scope: !9452)
!9473 = !DILocation(line: 67, column: 27, scope: !9452)
!9474 = !DILocation(line: 68, column: 24, scope: !9452)
!9475 = !DILocation(line: 68, column: 31, scope: !9452)
!9476 = !DILocation(line: 68, column: 29, scope: !9452)
!9477 = !DILocation(line: 68, column: 47, scope: !9452)
!9478 = !DILocation(line: 68, column: 52, scope: !9452)
!9479 = !DILocation(line: 68, column: 58, scope: !9452)
!9480 = !DILocation(line: 70, column: 3, scope: !9452)
!9481 = !DILocalVariable(name: "r", scope: !9482, file: !9453, line: 72, type: !1655)
!9482 = distinct !DILexicalBlock(scope: !9452, file: !9453, line: 71, column: 5)
!9483 = !DILocation(line: 72, column: 15, scope: !9482)
!9484 = !DILocalVariable(name: "link_length", scope: !9482, file: !9453, line: 73, type: !149)
!9485 = !DILocation(line: 73, column: 14, scope: !9482)
!9486 = !DILocalVariable(name: "stackbuf", scope: !9482, file: !9453, line: 74, type: !572)
!9487 = !DILocation(line: 74, column: 12, scope: !9482)
!9488 = !DILocalVariable(name: "buf", scope: !9482, file: !9453, line: 75, type: !143)
!9489 = !DILocation(line: 75, column: 13, scope: !9482)
!9490 = !DILocation(line: 75, column: 19, scope: !9482)
!9491 = !DILocalVariable(name: "buffer", scope: !9482, file: !9453, line: 76, type: !143)
!9492 = !DILocation(line: 76, column: 13, scope: !9482)
!9493 = !DILocation(line: 78, column: 14, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9482, file: !9453, line: 78, column: 11)
!9495 = !DILocation(line: 78, column: 19, scope: !9494)
!9496 = !DILocation(line: 78, column: 24, scope: !9494)
!9497 = !DILocation(line: 78, column: 27, scope: !9494)
!9498 = !DILocation(line: 78, column: 36, scope: !9494)
!9499 = !DILocation(line: 78, column: 11, scope: !9482)
!9500 = !DILocation(line: 80, column: 34, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9494, file: !9453, line: 79, column: 9)
!9502 = !DILocation(line: 80, column: 26, scope: !9501)
!9503 = !DILocation(line: 80, column: 24, scope: !9501)
!9504 = !DILocation(line: 80, column: 15, scope: !9501)
!9505 = !DILocation(line: 81, column: 16, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9501, file: !9453, line: 81, column: 15)
!9507 = !DILocation(line: 81, column: 15, scope: !9501)
!9508 = !DILocation(line: 82, column: 13, scope: !9506)
!9509 = !DILocation(line: 83, column: 9, scope: !9501)
!9510 = !DILocation(line: 85, column: 21, scope: !9482)
!9511 = !DILocation(line: 85, column: 27, scope: !9482)
!9512 = !DILocation(line: 85, column: 32, scope: !9482)
!9513 = !DILocation(line: 85, column: 11, scope: !9482)
!9514 = !DILocation(line: 85, column: 9, scope: !9482)
!9515 = !DILocation(line: 86, column: 21, scope: !9482)
!9516 = !DILocation(line: 86, column: 19, scope: !9482)
!9517 = !DILocation(line: 90, column: 11, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9482, file: !9453, line: 90, column: 11)
!9519 = !DILocation(line: 90, column: 13, scope: !9518)
!9520 = !DILocation(line: 90, column: 17, scope: !9518)
!9521 = !DILocation(line: 90, column: 20, scope: !9518)
!9522 = !DILocation(line: 90, column: 26, scope: !9518)
!9523 = !DILocation(line: 90, column: 11, scope: !9482)
!9524 = !DILocalVariable(name: "saved_errno", scope: !9525, file: !9453, line: 92, type: !27)
!9525 = distinct !DILexicalBlock(scope: !9518, file: !9453, line: 91, column: 9)
!9526 = !DILocation(line: 92, column: 15, scope: !9525)
!9527 = !DILocation(line: 92, column: 29, scope: !9525)
!9528 = !DILocation(line: 93, column: 17, scope: !9525)
!9529 = !DILocation(line: 93, column: 11, scope: !9525)
!9530 = !DILocation(line: 94, column: 19, scope: !9525)
!9531 = !DILocation(line: 94, column: 11, scope: !9525)
!9532 = !DILocation(line: 94, column: 17, scope: !9525)
!9533 = !DILocation(line: 95, column: 11, scope: !9525)
!9534 = !DILocation(line: 98, column: 11, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9482, file: !9453, line: 98, column: 11)
!9536 = !DILocation(line: 98, column: 25, scope: !9535)
!9537 = !DILocation(line: 98, column: 23, scope: !9535)
!9538 = !DILocation(line: 98, column: 11, scope: !9482)
!9539 = !DILocation(line: 100, column: 11, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9535, file: !9453, line: 99, column: 9)
!9541 = !DILocation(line: 100, column: 15, scope: !9540)
!9542 = !DILocation(line: 100, column: 28, scope: !9540)
!9543 = !DILocation(line: 101, column: 16, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9540, file: !9453, line: 101, column: 15)
!9545 = !DILocation(line: 101, column: 15, scope: !9540)
!9546 = !DILocation(line: 103, column: 32, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9544, file: !9453, line: 102, column: 13)
!9548 = !DILocation(line: 103, column: 44, scope: !9547)
!9549 = !DILocation(line: 103, column: 24, scope: !9547)
!9550 = !DILocation(line: 103, column: 22, scope: !9547)
!9551 = !DILocation(line: 104, column: 19, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9547, file: !9453, line: 104, column: 19)
!9553 = !DILocation(line: 104, column: 19, scope: !9547)
!9554 = !DILocation(line: 105, column: 32, scope: !9552)
!9555 = !DILocation(line: 105, column: 40, scope: !9552)
!9556 = !DILocation(line: 105, column: 45, scope: !9552)
!9557 = !DILocation(line: 105, column: 57, scope: !9552)
!9558 = !DILocation(line: 105, column: 24, scope: !9552)
!9559 = !DILocation(line: 105, column: 17, scope: !9552)
!9560 = !DILocation(line: 106, column: 13, scope: !9547)
!9561 = !DILocation(line: 107, column: 20, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9544, file: !9453, line: 107, column: 20)
!9563 = !DILocation(line: 107, column: 32, scope: !9562)
!9564 = !DILocation(line: 107, column: 38, scope: !9562)
!9565 = !DILocation(line: 107, column: 36, scope: !9562)
!9566 = !DILocation(line: 107, column: 20, scope: !9544)
!9567 = !DILocalVariable(name: "shrinked_buffer", scope: !9568, file: !9453, line: 110, type: !143)
!9568 = distinct !DILexicalBlock(scope: !9562, file: !9453, line: 108, column: 13)
!9569 = !DILocation(line: 110, column: 21, scope: !9568)
!9570 = !DILocation(line: 110, column: 48, scope: !9568)
!9571 = !DILocation(line: 110, column: 56, scope: !9568)
!9572 = !DILocation(line: 110, column: 68, scope: !9568)
!9573 = !DILocation(line: 110, column: 39, scope: !9568)
!9574 = !DILocation(line: 111, column: 19, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9568, file: !9453, line: 111, column: 19)
!9576 = !DILocation(line: 111, column: 35, scope: !9575)
!9577 = !DILocation(line: 111, column: 19, scope: !9568)
!9578 = !DILocation(line: 112, column: 26, scope: !9575)
!9579 = !DILocation(line: 112, column: 24, scope: !9575)
!9580 = !DILocation(line: 112, column: 17, scope: !9575)
!9581 = !DILocation(line: 113, column: 13, scope: !9568)
!9582 = !DILocation(line: 114, column: 18, scope: !9540)
!9583 = !DILocation(line: 114, column: 11, scope: !9540)
!9584 = !DILocation(line: 117, column: 13, scope: !9482)
!9585 = !DILocation(line: 117, column: 7, scope: !9482)
!9586 = !DILocation(line: 118, column: 11, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9482, file: !9453, line: 118, column: 11)
!9588 = !DILocation(line: 118, column: 20, scope: !9587)
!9589 = !DILocation(line: 118, column: 11, scope: !9482)
!9590 = !DILocation(line: 119, column: 18, scope: !9587)
!9591 = !DILocation(line: 119, column: 9, scope: !9587)
!9592 = !DILocation(line: 120, column: 16, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9587, file: !9453, line: 120, column: 16)
!9594 = !DILocation(line: 120, column: 25, scope: !9593)
!9595 = !DILocation(line: 120, column: 16, scope: !9587)
!9596 = !DILocation(line: 121, column: 18, scope: !9593)
!9597 = !DILocation(line: 121, column: 9, scope: !9593)
!9598 = !DILocation(line: 124, column: 11, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9593, file: !9453, line: 123, column: 9)
!9600 = !DILocation(line: 124, column: 17, scope: !9599)
!9601 = !DILocation(line: 125, column: 11, scope: !9599)
!9602 = distinct !{!9602, !9480, !9603}
!9603 = !DILocation(line: 127, column: 5, scope: !9452)
!9604 = !DILocation(line: 128, column: 1, scope: !9452)
!9605 = distinct !DISubprogram(name: "__argmatch_die", scope: !1083, file: !1083, line: 60, type: !336, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1031, retainedNodes: !152)
!9606 = !DILocation(line: 62, column: 3, scope: !9605)
!9607 = !DILocation(line: 63, column: 1, scope: !9605)
!9608 = distinct !DISubprogram(name: "argmatch", scope: !1083, file: !1083, line: 82, type: !1034, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1031, retainedNodes: !152)
!9609 = !DILocalVariable(name: "arg", arg: 1, scope: !9608, file: !1083, line: 82, type: !146)
!9610 = !DILocation(line: 82, column: 23, scope: !9608)
!9611 = !DILocalVariable(name: "arglist", arg: 2, scope: !9608, file: !1083, line: 82, type: !555)
!9612 = !DILocation(line: 82, column: 47, scope: !9608)
!9613 = !DILocalVariable(name: "vallist", arg: 3, scope: !9608, file: !1083, line: 83, type: !175)
!9614 = !DILocation(line: 83, column: 23, scope: !9608)
!9615 = !DILocalVariable(name: "valsize", arg: 4, scope: !9608, file: !1083, line: 83, type: !149)
!9616 = !DILocation(line: 83, column: 39, scope: !9608)
!9617 = !DILocalVariable(name: "i", scope: !9608, file: !1083, line: 85, type: !149)
!9618 = !DILocation(line: 85, column: 10, scope: !9608)
!9619 = !DILocalVariable(name: "arglen", scope: !9608, file: !1083, line: 86, type: !149)
!9620 = !DILocation(line: 86, column: 10, scope: !9608)
!9621 = !DILocalVariable(name: "matchind", scope: !9608, file: !1083, line: 87, type: !552)
!9622 = !DILocation(line: 87, column: 13, scope: !9608)
!9623 = !DILocalVariable(name: "ambiguous", scope: !9608, file: !1083, line: 88, type: !141)
!9624 = !DILocation(line: 88, column: 8, scope: !9608)
!9625 = !DILocation(line: 90, column: 20, scope: !9608)
!9626 = !DILocation(line: 90, column: 12, scope: !9608)
!9627 = !DILocation(line: 90, column: 10, scope: !9608)
!9628 = !DILocation(line: 93, column: 10, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9608, file: !1083, line: 93, column: 3)
!9630 = !DILocation(line: 93, column: 8, scope: !9629)
!9631 = !DILocation(line: 93, column: 15, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9629, file: !1083, line: 93, column: 3)
!9633 = !DILocation(line: 93, column: 23, scope: !9632)
!9634 = !DILocation(line: 93, column: 3, scope: !9629)
!9635 = !DILocation(line: 95, column: 21, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !1083, line: 95, column: 11)
!9637 = distinct !DILexicalBlock(scope: !9632, file: !1083, line: 94, column: 5)
!9638 = !DILocation(line: 95, column: 29, scope: !9636)
!9639 = !DILocation(line: 95, column: 33, scope: !9636)
!9640 = !DILocation(line: 95, column: 38, scope: !9636)
!9641 = !DILocation(line: 95, column: 12, scope: !9636)
!9642 = !DILocation(line: 95, column: 11, scope: !9637)
!9643 = !DILocation(line: 97, column: 23, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !1083, line: 97, column: 15)
!9645 = distinct !DILexicalBlock(scope: !9636, file: !1083, line: 96, column: 9)
!9646 = !DILocation(line: 97, column: 31, scope: !9644)
!9647 = !DILocation(line: 97, column: 15, scope: !9644)
!9648 = !DILocation(line: 97, column: 38, scope: !9644)
!9649 = !DILocation(line: 97, column: 35, scope: !9644)
!9650 = !DILocation(line: 97, column: 15, scope: !9645)
!9651 = !DILocation(line: 99, column: 20, scope: !9644)
!9652 = !DILocation(line: 99, column: 13, scope: !9644)
!9653 = !DILocation(line: 100, column: 20, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9644, file: !1083, line: 100, column: 20)
!9655 = !DILocation(line: 100, column: 29, scope: !9654)
!9656 = !DILocation(line: 100, column: 20, scope: !9644)
!9657 = !DILocation(line: 102, column: 24, scope: !9654)
!9658 = !DILocation(line: 102, column: 22, scope: !9654)
!9659 = !DILocation(line: 102, column: 13, scope: !9654)
!9660 = !DILocation(line: 106, column: 19, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9662, file: !1083, line: 106, column: 19)
!9662 = distinct !DILexicalBlock(scope: !9654, file: !1083, line: 104, column: 13)
!9663 = !DILocation(line: 106, column: 27, scope: !9661)
!9664 = !DILocation(line: 107, column: 19, scope: !9661)
!9665 = !DILocation(line: 107, column: 45, scope: !9661)
!9666 = !DILocation(line: 107, column: 55, scope: !9661)
!9667 = !DILocation(line: 107, column: 65, scope: !9661)
!9668 = !DILocation(line: 107, column: 63, scope: !9661)
!9669 = !DILocation(line: 107, column: 53, scope: !9661)
!9670 = !DILocation(line: 108, column: 45, scope: !9661)
!9671 = !DILocation(line: 108, column: 55, scope: !9661)
!9672 = !DILocation(line: 108, column: 65, scope: !9661)
!9673 = !DILocation(line: 108, column: 63, scope: !9661)
!9674 = !DILocation(line: 108, column: 53, scope: !9661)
!9675 = !DILocation(line: 108, column: 68, scope: !9661)
!9676 = !DILocation(line: 107, column: 22, scope: !9661)
!9677 = !DILocation(line: 106, column: 19, scope: !9662)
!9678 = !DILocation(line: 112, column: 29, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9661, file: !1083, line: 109, column: 17)
!9680 = !DILocation(line: 113, column: 17, scope: !9679)
!9681 = !DILocation(line: 115, column: 9, scope: !9645)
!9682 = !DILocation(line: 116, column: 5, scope: !9637)
!9683 = !DILocation(line: 93, column: 28, scope: !9632)
!9684 = !DILocation(line: 93, column: 3, scope: !9632)
!9685 = distinct !{!9685, !9634, !9686}
!9686 = !DILocation(line: 116, column: 5, scope: !9629)
!9687 = !DILocation(line: 117, column: 7, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9608, file: !1083, line: 117, column: 7)
!9689 = !DILocation(line: 117, column: 7, scope: !9608)
!9690 = !DILocation(line: 118, column: 5, scope: !9688)
!9691 = !DILocation(line: 120, column: 12, scope: !9688)
!9692 = !DILocation(line: 120, column: 5, scope: !9688)
!9693 = !DILocation(line: 121, column: 1, scope: !9608)
!9694 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1083, file: !1083, line: 129, type: !1036, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1031, retainedNodes: !152)
!9695 = !DILocalVariable(name: "context", arg: 1, scope: !9694, file: !1083, line: 129, type: !146)
!9696 = !DILocation(line: 129, column: 31, scope: !9694)
!9697 = !DILocalVariable(name: "value", arg: 2, scope: !9694, file: !1083, line: 129, type: !146)
!9698 = !DILocation(line: 129, column: 52, scope: !9694)
!9699 = !DILocalVariable(name: "problem", arg: 3, scope: !9694, file: !1083, line: 129, type: !552)
!9700 = !DILocation(line: 129, column: 69, scope: !9694)
!9701 = !DILocalVariable(name: "format", scope: !9694, file: !1083, line: 131, type: !146)
!9702 = !DILocation(line: 131, column: 15, scope: !9694)
!9703 = !DILocation(line: 131, column: 25, scope: !9694)
!9704 = !DILocation(line: 131, column: 33, scope: !9694)
!9705 = !DILocation(line: 132, column: 27, scope: !9694)
!9706 = !DILocation(line: 133, column: 27, scope: !9694)
!9707 = !DILocation(line: 135, column: 16, scope: !9694)
!9708 = !DILocation(line: 135, column: 69, scope: !9694)
!9709 = !DILocation(line: 135, column: 24, scope: !9694)
!9710 = !DILocation(line: 136, column: 22, scope: !9694)
!9711 = !DILocation(line: 136, column: 10, scope: !9694)
!9712 = !DILocation(line: 135, column: 3, scope: !9694)
!9713 = !DILocation(line: 137, column: 1, scope: !9694)
!9714 = distinct !DISubprogram(name: "argmatch_valid", scope: !1083, file: !1083, line: 144, type: !1038, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1031, retainedNodes: !152)
!9715 = !DILocalVariable(name: "arglist", arg: 1, scope: !9714, file: !1083, line: 144, type: !555)
!9716 = !DILocation(line: 144, column: 36, scope: !9714)
!9717 = !DILocalVariable(name: "vallist", arg: 2, scope: !9714, file: !1083, line: 145, type: !175)
!9718 = !DILocation(line: 145, column: 29, scope: !9714)
!9719 = !DILocalVariable(name: "valsize", arg: 3, scope: !9714, file: !1083, line: 145, type: !149)
!9720 = !DILocation(line: 145, column: 45, scope: !9714)
!9721 = !DILocalVariable(name: "i", scope: !9714, file: !1083, line: 147, type: !149)
!9722 = !DILocation(line: 147, column: 10, scope: !9714)
!9723 = !DILocalVariable(name: "last_val", scope: !9714, file: !1083, line: 148, type: !146)
!9724 = !DILocation(line: 148, column: 15, scope: !9714)
!9725 = !DILocation(line: 152, column: 3, scope: !9714)
!9726 = !DILocation(line: 153, column: 10, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9714, file: !1083, line: 153, column: 3)
!9728 = !DILocation(line: 153, column: 8, scope: !9727)
!9729 = !DILocation(line: 153, column: 15, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9727, file: !1083, line: 153, column: 3)
!9731 = !DILocation(line: 153, column: 23, scope: !9730)
!9732 = !DILocation(line: 153, column: 3, scope: !9727)
!9733 = !DILocation(line: 154, column: 10, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9730, file: !1083, line: 154, column: 9)
!9735 = !DILocation(line: 154, column: 12, scope: !9734)
!9736 = !DILocation(line: 155, column: 9, scope: !9734)
!9737 = !DILocation(line: 155, column: 20, scope: !9734)
!9738 = !DILocation(line: 155, column: 45, scope: !9734)
!9739 = !DILocation(line: 155, column: 55, scope: !9734)
!9740 = !DILocation(line: 155, column: 65, scope: !9734)
!9741 = !DILocation(line: 155, column: 63, scope: !9734)
!9742 = !DILocation(line: 155, column: 53, scope: !9734)
!9743 = !DILocation(line: 155, column: 68, scope: !9734)
!9744 = !DILocation(line: 155, column: 12, scope: !9734)
!9745 = !DILocation(line: 154, column: 9, scope: !9730)
!9746 = !DILocation(line: 157, column: 18, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9734, file: !1083, line: 156, column: 7)
!9748 = !DILocation(line: 157, column: 45, scope: !9747)
!9749 = !DILocation(line: 157, column: 53, scope: !9747)
!9750 = !DILocation(line: 157, column: 38, scope: !9747)
!9751 = !DILocation(line: 157, column: 9, scope: !9747)
!9752 = !DILocation(line: 158, column: 35, scope: !9747)
!9753 = !DILocation(line: 158, column: 45, scope: !9747)
!9754 = !DILocation(line: 158, column: 55, scope: !9747)
!9755 = !DILocation(line: 158, column: 53, scope: !9747)
!9756 = !DILocation(line: 158, column: 43, scope: !9747)
!9757 = !DILocation(line: 158, column: 18, scope: !9747)
!9758 = !DILocation(line: 159, column: 7, scope: !9747)
!9759 = !DILocation(line: 162, column: 18, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9734, file: !1083, line: 161, column: 7)
!9761 = !DILocation(line: 162, column: 41, scope: !9760)
!9762 = !DILocation(line: 162, column: 49, scope: !9760)
!9763 = !DILocation(line: 162, column: 34, scope: !9760)
!9764 = !DILocation(line: 162, column: 9, scope: !9760)
!9765 = !DILocation(line: 155, column: 75, scope: !9734)
!9766 = !DILocation(line: 153, column: 28, scope: !9730)
!9767 = !DILocation(line: 153, column: 3, scope: !9730)
!9768 = distinct !{!9768, !9732, !9769}
!9769 = !DILocation(line: 163, column: 7, scope: !9727)
!9770 = !DILocation(line: 164, column: 3, scope: !9714)
!9771 = !DILocation(line: 165, column: 1, scope: !9714)
!9772 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1083, file: !1083, line: 174, type: !1078, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1031, retainedNodes: !152)
!9773 = !DILocalVariable(name: "context", arg: 1, scope: !9772, file: !1083, line: 174, type: !146)
!9774 = !DILocation(line: 174, column: 35, scope: !9772)
!9775 = !DILocalVariable(name: "arg", arg: 2, scope: !9772, file: !1083, line: 175, type: !146)
!9776 = !DILocation(line: 175, column: 35, scope: !9772)
!9777 = !DILocalVariable(name: "arglist", arg: 3, scope: !9772, file: !1083, line: 175, type: !555)
!9778 = !DILocation(line: 175, column: 59, scope: !9772)
!9779 = !DILocalVariable(name: "vallist", arg: 4, scope: !9772, file: !1083, line: 176, type: !175)
!9780 = !DILocation(line: 176, column: 35, scope: !9772)
!9781 = !DILocalVariable(name: "valsize", arg: 5, scope: !9772, file: !1083, line: 176, type: !149)
!9782 = !DILocation(line: 176, column: 51, scope: !9772)
!9783 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !9772, file: !1083, line: 177, type: !523)
!9784 = !DILocation(line: 177, column: 40, scope: !9772)
!9785 = !DILocalVariable(name: "res", scope: !9772, file: !1083, line: 179, type: !552)
!9786 = !DILocation(line: 179, column: 13, scope: !9772)
!9787 = !DILocation(line: 179, column: 29, scope: !9772)
!9788 = !DILocation(line: 179, column: 34, scope: !9772)
!9789 = !DILocation(line: 179, column: 43, scope: !9772)
!9790 = !DILocation(line: 179, column: 52, scope: !9772)
!9791 = !DILocation(line: 179, column: 19, scope: !9772)
!9792 = !DILocation(line: 180, column: 7, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9772, file: !1083, line: 180, column: 7)
!9794 = !DILocation(line: 180, column: 11, scope: !9793)
!9795 = !DILocation(line: 180, column: 7, scope: !9772)
!9796 = !DILocation(line: 182, column: 12, scope: !9793)
!9797 = !DILocation(line: 182, column: 5, scope: !9793)
!9798 = !DILocation(line: 185, column: 21, scope: !9772)
!9799 = !DILocation(line: 185, column: 30, scope: !9772)
!9800 = !DILocation(line: 185, column: 35, scope: !9772)
!9801 = !DILocation(line: 185, column: 3, scope: !9772)
!9802 = !DILocation(line: 186, column: 19, scope: !9772)
!9803 = !DILocation(line: 186, column: 28, scope: !9772)
!9804 = !DILocation(line: 186, column: 37, scope: !9772)
!9805 = !DILocation(line: 186, column: 3, scope: !9772)
!9806 = !DILocation(line: 187, column: 5, scope: !9772)
!9807 = !DILocation(line: 187, column: 3, scope: !9772)
!9808 = !DILocation(line: 189, column: 3, scope: !9772)
!9809 = !DILocation(line: 190, column: 1, scope: !9772)
!9810 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1083, file: !1083, line: 195, type: !1080, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1031, retainedNodes: !152)
!9811 = !DILocalVariable(name: "value", arg: 1, scope: !9810, file: !1083, line: 195, type: !175)
!9812 = !DILocation(line: 195, column: 35, scope: !9810)
!9813 = !DILocalVariable(name: "arglist", arg: 2, scope: !9810, file: !1083, line: 196, type: !555)
!9814 = !DILocation(line: 196, column: 42, scope: !9810)
!9815 = !DILocalVariable(name: "vallist", arg: 3, scope: !9810, file: !1083, line: 197, type: !175)
!9816 = !DILocation(line: 197, column: 35, scope: !9810)
!9817 = !DILocalVariable(name: "valsize", arg: 4, scope: !9810, file: !1083, line: 197, type: !149)
!9818 = !DILocation(line: 197, column: 51, scope: !9810)
!9819 = !DILocalVariable(name: "i", scope: !9810, file: !1083, line: 199, type: !149)
!9820 = !DILocation(line: 199, column: 10, scope: !9810)
!9821 = !DILocation(line: 201, column: 10, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9810, file: !1083, line: 201, column: 3)
!9823 = !DILocation(line: 201, column: 8, scope: !9822)
!9824 = !DILocation(line: 201, column: 15, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9822, file: !1083, line: 201, column: 3)
!9826 = !DILocation(line: 201, column: 23, scope: !9825)
!9827 = !DILocation(line: 201, column: 3, scope: !9822)
!9828 = !DILocation(line: 202, column: 18, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9825, file: !1083, line: 202, column: 9)
!9830 = !DILocation(line: 202, column: 40, scope: !9829)
!9831 = !DILocation(line: 202, column: 50, scope: !9829)
!9832 = !DILocation(line: 202, column: 60, scope: !9829)
!9833 = !DILocation(line: 202, column: 58, scope: !9829)
!9834 = !DILocation(line: 202, column: 48, scope: !9829)
!9835 = !DILocation(line: 202, column: 63, scope: !9829)
!9836 = !DILocation(line: 202, column: 10, scope: !9829)
!9837 = !DILocation(line: 202, column: 9, scope: !9825)
!9838 = !DILocation(line: 203, column: 14, scope: !9829)
!9839 = !DILocation(line: 203, column: 22, scope: !9829)
!9840 = !DILocation(line: 203, column: 7, scope: !9829)
!9841 = !DILocation(line: 202, column: 70, scope: !9829)
!9842 = !DILocation(line: 201, column: 28, scope: !9825)
!9843 = !DILocation(line: 201, column: 3, scope: !9825)
!9844 = distinct !{!9844, !9827, !9845}
!9845 = !DILocation(line: 203, column: 23, scope: !9822)
!9846 = !DILocation(line: 204, column: 3, scope: !9810)
!9847 = !DILocation(line: 205, column: 1, scope: !9810)
!9848 = distinct !DISubprogram(name: "c_isalnum", scope: !9849, file: !9849, line: 169, type: !663, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9849 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!9850 = !DILocalVariable(name: "c", arg: 1, scope: !9848, file: !9849, line: 169, type: !27)
!9851 = !DILocation(line: 169, column: 16, scope: !9848)
!9852 = !DILocation(line: 171, column: 11, scope: !9848)
!9853 = !DILocation(line: 171, column: 3, scope: !9848)
!9854 = !DILocation(line: 176, column: 7, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9848, file: !9849, line: 172, column: 5)
!9856 = !DILocation(line: 178, column: 7, scope: !9855)
!9857 = !DILocation(line: 180, column: 1, scope: !9848)
!9858 = distinct !DISubprogram(name: "c_isalpha", scope: !9849, file: !9849, line: 183, type: !663, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9859 = !DILocalVariable(name: "c", arg: 1, scope: !9858, file: !9849, line: 183, type: !27)
!9860 = !DILocation(line: 183, column: 16, scope: !9858)
!9861 = !DILocation(line: 185, column: 11, scope: !9858)
!9862 = !DILocation(line: 185, column: 3, scope: !9858)
!9863 = !DILocation(line: 189, column: 7, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9858, file: !9849, line: 186, column: 5)
!9865 = !DILocation(line: 191, column: 7, scope: !9864)
!9866 = !DILocation(line: 193, column: 1, scope: !9858)
!9867 = distinct !DISubprogram(name: "c_isascii", scope: !9849, file: !9849, line: 198, type: !663, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9868 = !DILocalVariable(name: "c", arg: 1, scope: !9867, file: !9849, line: 198, type: !27)
!9869 = !DILocation(line: 198, column: 16, scope: !9867)
!9870 = !DILocation(line: 200, column: 11, scope: !9867)
!9871 = !DILocation(line: 200, column: 3, scope: !9867)
!9872 = !DILocation(line: 208, column: 7, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9867, file: !9849, line: 201, column: 5)
!9874 = !DILocation(line: 210, column: 7, scope: !9873)
!9875 = !DILocation(line: 212, column: 1, scope: !9867)
!9876 = distinct !DISubprogram(name: "c_isblank", scope: !9849, file: !9849, line: 215, type: !663, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9877 = !DILocalVariable(name: "c", arg: 1, scope: !9876, file: !9849, line: 215, type: !27)
!9878 = !DILocation(line: 215, column: 16, scope: !9876)
!9879 = !DILocation(line: 217, column: 10, scope: !9876)
!9880 = !DILocation(line: 217, column: 12, scope: !9876)
!9881 = !DILocation(line: 217, column: 19, scope: !9876)
!9882 = !DILocation(line: 217, column: 22, scope: !9876)
!9883 = !DILocation(line: 217, column: 24, scope: !9876)
!9884 = !DILocation(line: 217, column: 3, scope: !9876)
!9885 = distinct !DISubprogram(name: "c_iscntrl", scope: !9849, file: !9849, line: 221, type: !663, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9886 = !DILocalVariable(name: "c", arg: 1, scope: !9885, file: !9849, line: 221, type: !27)
!9887 = !DILocation(line: 221, column: 16, scope: !9885)
!9888 = !DILocation(line: 223, column: 11, scope: !9885)
!9889 = !DILocation(line: 223, column: 3, scope: !9885)
!9890 = !DILocation(line: 226, column: 7, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9885, file: !9849, line: 224, column: 5)
!9892 = !DILocation(line: 228, column: 7, scope: !9891)
!9893 = !DILocation(line: 230, column: 1, scope: !9885)
!9894 = distinct !DISubprogram(name: "c_isdigit", scope: !9849, file: !9849, line: 233, type: !663, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9895 = !DILocalVariable(name: "c", arg: 1, scope: !9894, file: !9849, line: 233, type: !27)
!9896 = !DILocation(line: 233, column: 16, scope: !9894)
!9897 = !DILocation(line: 235, column: 11, scope: !9894)
!9898 = !DILocation(line: 235, column: 3, scope: !9894)
!9899 = !DILocation(line: 238, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9894, file: !9849, line: 236, column: 5)
!9901 = !DILocation(line: 240, column: 7, scope: !9900)
!9902 = !DILocation(line: 242, column: 1, scope: !9894)
!9903 = distinct !DISubprogram(name: "c_isgraph", scope: !9849, file: !9849, line: 245, type: !663, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9904 = !DILocalVariable(name: "c", arg: 1, scope: !9903, file: !9849, line: 245, type: !27)
!9905 = !DILocation(line: 245, column: 16, scope: !9903)
!9906 = !DILocation(line: 247, column: 11, scope: !9903)
!9907 = !DILocation(line: 247, column: 3, scope: !9903)
!9908 = !DILocation(line: 253, column: 7, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9903, file: !9849, line: 248, column: 5)
!9910 = !DILocation(line: 255, column: 7, scope: !9909)
!9911 = !DILocation(line: 257, column: 1, scope: !9903)
!9912 = distinct !DISubprogram(name: "c_islower", scope: !9849, file: !9849, line: 260, type: !663, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9913 = !DILocalVariable(name: "c", arg: 1, scope: !9912, file: !9849, line: 260, type: !27)
!9914 = !DILocation(line: 260, column: 16, scope: !9912)
!9915 = !DILocation(line: 262, column: 11, scope: !9912)
!9916 = !DILocation(line: 262, column: 3, scope: !9912)
!9917 = !DILocation(line: 265, column: 7, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9912, file: !9849, line: 263, column: 5)
!9919 = !DILocation(line: 267, column: 7, scope: !9918)
!9920 = !DILocation(line: 269, column: 1, scope: !9912)
!9921 = distinct !DISubprogram(name: "c_isprint", scope: !9849, file: !9849, line: 272, type: !663, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9922 = !DILocalVariable(name: "c", arg: 1, scope: !9921, file: !9849, line: 272, type: !27)
!9923 = !DILocation(line: 272, column: 16, scope: !9921)
!9924 = !DILocation(line: 274, column: 11, scope: !9921)
!9925 = !DILocation(line: 274, column: 3, scope: !9921)
!9926 = !DILocation(line: 281, column: 7, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9921, file: !9849, line: 275, column: 5)
!9928 = !DILocation(line: 283, column: 7, scope: !9927)
!9929 = !DILocation(line: 285, column: 1, scope: !9921)
!9930 = distinct !DISubprogram(name: "c_ispunct", scope: !9849, file: !9849, line: 288, type: !663, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9931 = !DILocalVariable(name: "c", arg: 1, scope: !9930, file: !9849, line: 288, type: !27)
!9932 = !DILocation(line: 288, column: 16, scope: !9930)
!9933 = !DILocation(line: 290, column: 11, scope: !9930)
!9934 = !DILocation(line: 290, column: 3, scope: !9930)
!9935 = !DILocation(line: 293, column: 7, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9930, file: !9849, line: 291, column: 5)
!9937 = !DILocation(line: 295, column: 7, scope: !9936)
!9938 = !DILocation(line: 297, column: 1, scope: !9930)
!9939 = distinct !DISubprogram(name: "c_isspace", scope: !9849, file: !9849, line: 300, type: !663, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9940 = !DILocalVariable(name: "c", arg: 1, scope: !9939, file: !9849, line: 300, type: !27)
!9941 = !DILocation(line: 300, column: 16, scope: !9939)
!9942 = !DILocation(line: 302, column: 11, scope: !9939)
!9943 = !DILocation(line: 302, column: 3, scope: !9939)
!9944 = !DILocation(line: 305, column: 7, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9939, file: !9849, line: 303, column: 5)
!9946 = !DILocation(line: 307, column: 7, scope: !9945)
!9947 = !DILocation(line: 309, column: 1, scope: !9939)
!9948 = distinct !DISubprogram(name: "c_isupper", scope: !9849, file: !9849, line: 312, type: !663, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9949 = !DILocalVariable(name: "c", arg: 1, scope: !9948, file: !9849, line: 312, type: !27)
!9950 = !DILocation(line: 312, column: 16, scope: !9948)
!9951 = !DILocation(line: 314, column: 11, scope: !9948)
!9952 = !DILocation(line: 314, column: 3, scope: !9948)
!9953 = !DILocation(line: 317, column: 7, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9948, file: !9849, line: 315, column: 5)
!9955 = !DILocation(line: 319, column: 7, scope: !9954)
!9956 = !DILocation(line: 321, column: 1, scope: !9948)
!9957 = distinct !DISubprogram(name: "c_isxdigit", scope: !9849, file: !9849, line: 324, type: !663, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9958 = !DILocalVariable(name: "c", arg: 1, scope: !9957, file: !9849, line: 324, type: !27)
!9959 = !DILocation(line: 324, column: 17, scope: !9957)
!9960 = !DILocation(line: 326, column: 11, scope: !9957)
!9961 = !DILocation(line: 326, column: 3, scope: !9957)
!9962 = !DILocation(line: 330, column: 7, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9957, file: !9849, line: 327, column: 5)
!9964 = !DILocation(line: 332, column: 7, scope: !9963)
!9965 = !DILocation(line: 334, column: 1, scope: !9957)
!9966 = distinct !DISubprogram(name: "c_tolower", scope: !9849, file: !9849, line: 337, type: !1660, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9967 = !DILocalVariable(name: "c", arg: 1, scope: !9966, file: !9849, line: 337, type: !27)
!9968 = !DILocation(line: 337, column: 16, scope: !9966)
!9969 = !DILocation(line: 339, column: 11, scope: !9966)
!9970 = !DILocation(line: 339, column: 3, scope: !9966)
!9971 = !DILocation(line: 342, column: 14, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9966, file: !9849, line: 340, column: 5)
!9973 = !DILocation(line: 342, column: 16, scope: !9972)
!9974 = !DILocation(line: 342, column: 22, scope: !9972)
!9975 = !DILocation(line: 342, column: 7, scope: !9972)
!9976 = !DILocation(line: 344, column: 14, scope: !9972)
!9977 = !DILocation(line: 344, column: 7, scope: !9972)
!9978 = !DILocation(line: 346, column: 1, scope: !9966)
!9979 = distinct !DISubprogram(name: "c_toupper", scope: !9849, file: !9849, line: 349, type: !1660, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9980 = !DILocalVariable(name: "c", arg: 1, scope: !9979, file: !9849, line: 349, type: !27)
!9981 = !DILocation(line: 349, column: 16, scope: !9979)
!9982 = !DILocation(line: 351, column: 11, scope: !9979)
!9983 = !DILocation(line: 351, column: 3, scope: !9979)
!9984 = !DILocation(line: 354, column: 14, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9979, file: !9849, line: 352, column: 5)
!9986 = !DILocation(line: 354, column: 16, scope: !9985)
!9987 = !DILocation(line: 354, column: 22, scope: !9985)
!9988 = !DILocation(line: 354, column: 7, scope: !9985)
!9989 = !DILocation(line: 356, column: 14, scope: !9985)
!9990 = !DILocation(line: 356, column: 7, scope: !9985)
!9991 = !DILocation(line: 358, column: 1, scope: !9979)
!9992 = distinct !DISubprogram(name: "c_strncasecmp", scope: !9993, file: !9993, line: 27, type: !1667, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1662, retainedNodes: !152)
!9993 = !DIFile(filename: "lib/c-strncasecmp.c", directory: "/home/mohamad/clone/coreutils")
!9994 = !DILocalVariable(name: "s1", arg: 1, scope: !9992, file: !9993, line: 27, type: !146)
!9995 = !DILocation(line: 27, column: 28, scope: !9992)
!9996 = !DILocalVariable(name: "s2", arg: 2, scope: !9992, file: !9993, line: 27, type: !146)
!9997 = !DILocation(line: 27, column: 44, scope: !9992)
!9998 = !DILocalVariable(name: "n", arg: 3, scope: !9992, file: !9993, line: 27, type: !149)
!9999 = !DILocation(line: 27, column: 55, scope: !9992)
!10000 = !DILocalVariable(name: "p1", scope: !9992, file: !9993, line: 29, type: !1665)
!10001 = !DILocation(line: 29, column: 33, scope: !9992)
!10002 = !DILocation(line: 29, column: 62, scope: !9992)
!10003 = !DILocalVariable(name: "p2", scope: !9992, file: !9993, line: 30, type: !1665)
!10004 = !DILocation(line: 30, column: 33, scope: !9992)
!10005 = !DILocation(line: 30, column: 62, scope: !9992)
!10006 = !DILocalVariable(name: "c1", scope: !9992, file: !9993, line: 31, type: !579)
!10007 = !DILocation(line: 31, column: 17, scope: !9992)
!10008 = !DILocalVariable(name: "c2", scope: !9992, file: !9993, line: 31, type: !579)
!10009 = !DILocation(line: 31, column: 21, scope: !9992)
!10010 = !DILocation(line: 33, column: 7, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9992, file: !9993, line: 33, column: 7)
!10012 = !DILocation(line: 33, column: 13, scope: !10011)
!10013 = !DILocation(line: 33, column: 10, scope: !10011)
!10014 = !DILocation(line: 33, column: 16, scope: !10011)
!10015 = !DILocation(line: 33, column: 19, scope: !10011)
!10016 = !DILocation(line: 33, column: 21, scope: !10011)
!10017 = !DILocation(line: 33, column: 7, scope: !9992)
!10018 = !DILocation(line: 34, column: 5, scope: !10011)
!10019 = !DILocation(line: 36, column: 3, scope: !9992)
!10020 = !DILocation(line: 38, column: 24, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9992, file: !9993, line: 37, column: 5)
!10022 = !DILocation(line: 38, column: 23, scope: !10021)
!10023 = !DILocation(line: 38, column: 12, scope: !10021)
!10024 = !DILocation(line: 38, column: 10, scope: !10021)
!10025 = !DILocation(line: 39, column: 24, scope: !10021)
!10026 = !DILocation(line: 39, column: 23, scope: !10021)
!10027 = !DILocation(line: 39, column: 12, scope: !10021)
!10028 = !DILocation(line: 39, column: 10, scope: !10021)
!10029 = !DILocation(line: 41, column: 11, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10021, file: !9993, line: 41, column: 11)
!10031 = !DILocation(line: 41, column: 15, scope: !10030)
!10032 = !DILocation(line: 41, column: 20, scope: !10030)
!10033 = !DILocation(line: 41, column: 23, scope: !10030)
!10034 = !DILocation(line: 41, column: 26, scope: !10030)
!10035 = !DILocation(line: 41, column: 11, scope: !10021)
!10036 = !DILocation(line: 42, column: 9, scope: !10030)
!10037 = !DILocation(line: 44, column: 7, scope: !10021)
!10038 = !DILocation(line: 45, column: 7, scope: !10021)
!10039 = !DILocation(line: 46, column: 5, scope: !10021)
!10040 = !DILocation(line: 47, column: 10, scope: !9992)
!10041 = !DILocation(line: 47, column: 16, scope: !9992)
!10042 = !DILocation(line: 47, column: 13, scope: !9992)
!10043 = distinct !{!10043, !10019, !10044}
!10044 = !DILocation(line: 47, column: 18, scope: !9992)
!10045 = !DILocation(line: 50, column: 12, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !9992, file: !9993, line: 49, column: 7)
!10047 = !DILocation(line: 50, column: 17, scope: !10046)
!10048 = !DILocation(line: 50, column: 15, scope: !10046)
!10049 = !DILocation(line: 50, column: 5, scope: !10046)
!10050 = !DILocation(line: 56, column: 1, scope: !9992)
!10051 = distinct !DISubprogram(name: "canonicalize_filename_mode", scope: !10052, file: !10052, line: 99, type: !1680, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1669, retainedNodes: !152)
!10052 = !DIFile(filename: "lib/canonicalize.c", directory: "/home/mohamad/clone/coreutils")
!10053 = !DILocalVariable(name: "name", arg: 1, scope: !10051, file: !10052, line: 99, type: !146)
!10054 = !DILocation(line: 99, column: 41, scope: !10051)
!10055 = !DILocalVariable(name: "can_mode", arg: 2, scope: !10051, file: !10052, line: 99, type: !1682)
!10056 = !DILocation(line: 99, column: 67, scope: !10051)
!10057 = !DILocalVariable(name: "rname", scope: !10051, file: !10052, line: 101, type: !143)
!10058 = !DILocation(line: 101, column: 9, scope: !10051)
!10059 = !DILocalVariable(name: "dest", scope: !10051, file: !10052, line: 101, type: !143)
!10060 = !DILocation(line: 101, column: 17, scope: !10051)
!10061 = !DILocalVariable(name: "extra_buf", scope: !10051, file: !10052, line: 101, type: !143)
!10062 = !DILocation(line: 101, column: 24, scope: !10051)
!10063 = !DILocalVariable(name: "start", scope: !10051, file: !10052, line: 102, type: !146)
!10064 = !DILocation(line: 102, column: 15, scope: !10051)
!10065 = !DILocalVariable(name: "end", scope: !10051, file: !10052, line: 103, type: !146)
!10066 = !DILocation(line: 103, column: 15, scope: !10051)
!10067 = !DILocalVariable(name: "rname_limit", scope: !10051, file: !10052, line: 104, type: !146)
!10068 = !DILocation(line: 104, column: 15, scope: !10051)
!10069 = !DILocalVariable(name: "extra_len", scope: !10051, file: !10052, line: 105, type: !149)
!10070 = !DILocation(line: 105, column: 10, scope: !10051)
!10071 = !DILocalVariable(name: "ht", scope: !10051, file: !10052, line: 106, type: !242)
!10072 = !DILocation(line: 106, column: 15, scope: !10051)
!10073 = !DILocalVariable(name: "saved_errno", scope: !10051, file: !10052, line: 107, type: !27)
!10074 = !DILocation(line: 107, column: 7, scope: !10051)
!10075 = !DILocalVariable(name: "can_flags", scope: !10051, file: !10052, line: 108, type: !27)
!10076 = !DILocation(line: 108, column: 7, scope: !10051)
!10077 = !DILocation(line: 108, column: 19, scope: !10051)
!10078 = !DILocation(line: 108, column: 28, scope: !10051)
!10079 = !DILocalVariable(name: "logical", scope: !10051, file: !10052, line: 109, type: !141)
!10080 = !DILocation(line: 109, column: 8, scope: !10051)
!10081 = !DILocation(line: 109, column: 18, scope: !10051)
!10082 = !DILocation(line: 109, column: 28, scope: !10051)
!10083 = !DILocalVariable(name: "prefix_len", scope: !10051, file: !10052, line: 110, type: !149)
!10084 = !DILocation(line: 110, column: 10, scope: !10051)
!10085 = !DILocation(line: 112, column: 12, scope: !10051)
!10086 = !DILocation(line: 114, column: 7, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 114, column: 7)
!10088 = !DILocation(line: 114, column: 7, scope: !10051)
!10089 = !DILocation(line: 116, column: 7, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10087, file: !10052, line: 115, column: 5)
!10091 = !DILocation(line: 116, column: 13, scope: !10090)
!10092 = !DILocation(line: 117, column: 7, scope: !10090)
!10093 = !DILocation(line: 120, column: 7, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 120, column: 7)
!10095 = !DILocation(line: 120, column: 12, scope: !10094)
!10096 = !DILocation(line: 120, column: 7, scope: !10051)
!10097 = !DILocation(line: 122, column: 7, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10094, file: !10052, line: 121, column: 5)
!10099 = !DILocation(line: 122, column: 13, scope: !10098)
!10100 = !DILocation(line: 123, column: 7, scope: !10098)
!10101 = !DILocation(line: 126, column: 7, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 126, column: 7)
!10103 = !DILocation(line: 126, column: 15, scope: !10102)
!10104 = !DILocation(line: 126, column: 7, scope: !10051)
!10105 = !DILocation(line: 128, column: 7, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10102, file: !10052, line: 127, column: 5)
!10107 = !DILocation(line: 128, column: 13, scope: !10106)
!10108 = !DILocation(line: 129, column: 7, scope: !10106)
!10109 = !DILocation(line: 134, column: 14, scope: !10051)
!10110 = !DILocation(line: 136, column: 8, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 136, column: 7)
!10112 = !DILocation(line: 136, column: 7, scope: !10051)
!10113 = !DILocation(line: 138, column: 15, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10111, file: !10052, line: 137, column: 5)
!10115 = !DILocation(line: 138, column: 13, scope: !10114)
!10116 = !DILocation(line: 139, column: 12, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10114, file: !10052, line: 139, column: 11)
!10118 = !DILocation(line: 139, column: 11, scope: !10114)
!10119 = !DILocation(line: 140, column: 9, scope: !10117)
!10120 = !DILocation(line: 141, column: 22, scope: !10114)
!10121 = !DILocation(line: 141, column: 14, scope: !10114)
!10122 = !DILocation(line: 141, column: 12, scope: !10114)
!10123 = !DILocation(line: 142, column: 11, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10114, file: !10052, line: 142, column: 11)
!10125 = !DILocation(line: 142, column: 18, scope: !10124)
!10126 = !DILocation(line: 142, column: 16, scope: !10124)
!10127 = !DILocation(line: 142, column: 24, scope: !10124)
!10128 = !DILocation(line: 142, column: 11, scope: !10114)
!10129 = !DILocalVariable(name: "p", scope: !10130, file: !10052, line: 144, type: !143)
!10130 = distinct !DILexicalBlock(scope: !10124, file: !10052, line: 143, column: 9)
!10131 = !DILocation(line: 144, column: 17, scope: !10130)
!10132 = !DILocation(line: 144, column: 31, scope: !10130)
!10133 = !DILocation(line: 144, column: 21, scope: !10130)
!10134 = !DILocation(line: 145, column: 18, scope: !10130)
!10135 = !DILocation(line: 145, column: 23, scope: !10130)
!10136 = !DILocation(line: 145, column: 30, scope: !10130)
!10137 = !DILocation(line: 145, column: 28, scope: !10130)
!10138 = !DILocation(line: 145, column: 20, scope: !10130)
!10139 = !DILocation(line: 145, column: 16, scope: !10130)
!10140 = !DILocation(line: 146, column: 19, scope: !10130)
!10141 = !DILocation(line: 146, column: 17, scope: !10130)
!10142 = !DILocation(line: 147, column: 25, scope: !10130)
!10143 = !DILocation(line: 147, column: 31, scope: !10130)
!10144 = !DILocation(line: 147, column: 23, scope: !10130)
!10145 = !DILocation(line: 148, column: 9, scope: !10130)
!10146 = !DILocation(line: 151, column: 25, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10124, file: !10052, line: 150, column: 9)
!10148 = !DILocation(line: 151, column: 23, scope: !10147)
!10149 = !DILocation(line: 153, column: 15, scope: !10114)
!10150 = !DILocation(line: 153, column: 13, scope: !10114)
!10151 = !DILocation(line: 154, column: 18, scope: !10114)
!10152 = !DILocation(line: 155, column: 5, scope: !10114)
!10153 = !DILocation(line: 158, column: 15, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10111, file: !10052, line: 157, column: 5)
!10155 = !DILocation(line: 158, column: 13, scope: !10154)
!10156 = !DILocation(line: 159, column: 21, scope: !10154)
!10157 = !DILocation(line: 159, column: 27, scope: !10154)
!10158 = !DILocation(line: 159, column: 19, scope: !10154)
!10159 = !DILocation(line: 160, column: 14, scope: !10154)
!10160 = !DILocation(line: 160, column: 12, scope: !10154)
!10161 = !DILocation(line: 161, column: 11, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10154, file: !10052, line: 161, column: 11)
!10163 = !DILocation(line: 161, column: 11, scope: !10154)
!10164 = !DILocation(line: 163, column: 19, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10162, file: !10052, line: 162, column: 9)
!10166 = !DILocation(line: 163, column: 26, scope: !10165)
!10167 = !DILocation(line: 163, column: 32, scope: !10165)
!10168 = !DILocation(line: 163, column: 11, scope: !10165)
!10169 = !DILocation(line: 164, column: 19, scope: !10165)
!10170 = !DILocation(line: 164, column: 16, scope: !10165)
!10171 = !DILocation(line: 165, column: 9, scope: !10165)
!10172 = !DILocation(line: 166, column: 12, scope: !10154)
!10173 = !DILocation(line: 166, column: 15, scope: !10154)
!10174 = !DILocation(line: 173, column: 15, scope: !10154)
!10175 = !DILocation(line: 173, column: 22, scope: !10154)
!10176 = !DILocation(line: 173, column: 20, scope: !10154)
!10177 = !DILocation(line: 173, column: 13, scope: !10154)
!10178 = !DILocation(line: 176, column: 3, scope: !10051)
!10179 = !DILocation(line: 176, column: 12, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !10052, line: 176, column: 3)
!10181 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 176, column: 3)
!10182 = !DILocation(line: 176, column: 11, scope: !10180)
!10183 = !DILocation(line: 176, column: 3, scope: !10181)
!10184 = !DILocation(line: 179, column: 7, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !10052, line: 177, column: 5)
!10186 = !DILocation(line: 179, column: 14, scope: !10185)
!10187 = !DILocation(line: 180, column: 9, scope: !10185)
!10188 = distinct !{!10188, !10184, !10189}
!10189 = !DILocation(line: 180, column: 11, scope: !10185)
!10190 = !DILocation(line: 183, column: 18, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10185, file: !10052, line: 183, column: 7)
!10192 = !DILocation(line: 183, column: 16, scope: !10191)
!10193 = !DILocation(line: 183, column: 12, scope: !10191)
!10194 = !DILocation(line: 183, column: 26, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10191, file: !10052, line: 183, column: 7)
!10196 = !DILocation(line: 183, column: 25, scope: !10195)
!10197 = !DILocation(line: 183, column: 30, scope: !10195)
!10198 = !DILocation(line: 183, column: 34, scope: !10195)
!10199 = !DILocation(line: 183, column: 33, scope: !10195)
!10200 = !DILocation(line: 0, scope: !10195)
!10201 = !DILocation(line: 183, column: 7, scope: !10191)
!10202 = !DILocation(line: 183, column: 50, scope: !10195)
!10203 = !DILocation(line: 183, column: 7, scope: !10195)
!10204 = distinct !{!10204, !10201, !10205}
!10205 = !DILocation(line: 184, column: 24, scope: !10191)
!10206 = !DILocation(line: 186, column: 11, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10185, file: !10052, line: 186, column: 11)
!10208 = !DILocation(line: 186, column: 17, scope: !10207)
!10209 = !DILocation(line: 186, column: 15, scope: !10207)
!10210 = !DILocation(line: 186, column: 23, scope: !10207)
!10211 = !DILocation(line: 186, column: 11, scope: !10185)
!10212 = !DILocation(line: 187, column: 9, scope: !10207)
!10213 = !DILocation(line: 188, column: 16, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10207, file: !10052, line: 188, column: 16)
!10215 = !DILocation(line: 188, column: 22, scope: !10214)
!10216 = !DILocation(line: 188, column: 20, scope: !10214)
!10217 = !DILocation(line: 188, column: 28, scope: !10214)
!10218 = !DILocation(line: 188, column: 33, scope: !10214)
!10219 = !DILocation(line: 188, column: 36, scope: !10214)
!10220 = !DILocation(line: 188, column: 45, scope: !10214)
!10221 = !DILocation(line: 188, column: 16, scope: !10207)
!10222 = !DILocation(line: 190, column: 16, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10214, file: !10052, line: 190, column: 16)
!10224 = !DILocation(line: 190, column: 22, scope: !10223)
!10225 = !DILocation(line: 190, column: 20, scope: !10223)
!10226 = !DILocation(line: 190, column: 28, scope: !10223)
!10227 = !DILocation(line: 190, column: 33, scope: !10223)
!10228 = !DILocation(line: 190, column: 36, scope: !10223)
!10229 = !DILocation(line: 190, column: 45, scope: !10223)
!10230 = !DILocation(line: 190, column: 52, scope: !10223)
!10231 = !DILocation(line: 190, column: 55, scope: !10223)
!10232 = !DILocation(line: 190, column: 64, scope: !10223)
!10233 = !DILocation(line: 190, column: 16, scope: !10214)
!10234 = !DILocation(line: 193, column: 15, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !10052, line: 193, column: 15)
!10236 = distinct !DILexicalBlock(scope: !10223, file: !10052, line: 191, column: 9)
!10237 = !DILocation(line: 193, column: 22, scope: !10235)
!10238 = !DILocation(line: 193, column: 30, scope: !10235)
!10239 = !DILocation(line: 193, column: 28, scope: !10235)
!10240 = !DILocation(line: 193, column: 41, scope: !10235)
!10241 = !DILocation(line: 193, column: 20, scope: !10235)
!10242 = !DILocation(line: 193, column: 15, scope: !10236)
!10243 = !DILocation(line: 194, column: 18, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10235, file: !10052, line: 194, column: 13)
!10245 = !DILocation(line: 194, column: 26, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10244, file: !10052, line: 194, column: 13)
!10247 = !DILocation(line: 194, column: 33, scope: !10246)
!10248 = !DILocation(line: 194, column: 31, scope: !10246)
!10249 = !DILocation(line: 194, column: 39, scope: !10246)
!10250 = !DILocation(line: 194, column: 43, scope: !10246)
!10251 = !DILocation(line: 194, column: 42, scope: !10246)
!10252 = !DILocation(line: 0, scope: !10246)
!10253 = !DILocation(line: 194, column: 13, scope: !10244)
!10254 = !DILocation(line: 195, column: 15, scope: !10246)
!10255 = !DILocation(line: 194, column: 63, scope: !10246)
!10256 = !DILocation(line: 194, column: 13, scope: !10246)
!10257 = distinct !{!10257, !10253, !10258}
!10258 = !DILocation(line: 195, column: 15, scope: !10244)
!10259 = !DILocation(line: 199, column: 9, scope: !10236)
!10260 = !DILocalVariable(name: "st", scope: !10261, file: !10052, line: 202, type: !1688)
!10261 = distinct !DILexicalBlock(scope: !10223, file: !10052, line: 201, column: 9)
!10262 = !DILocation(line: 202, column: 23, scope: !10261)
!10263 = !DILocation(line: 204, column: 16, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10261, file: !10052, line: 204, column: 15)
!10265 = !DILocation(line: 204, column: 15, scope: !10261)
!10266 = !DILocation(line: 205, column: 18, scope: !10264)
!10267 = !DILocation(line: 205, column: 21, scope: !10264)
!10268 = !DILocation(line: 205, column: 13, scope: !10264)
!10269 = !DILocation(line: 207, column: 15, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10261, file: !10052, line: 207, column: 15)
!10271 = !DILocation(line: 207, column: 23, scope: !10270)
!10272 = !DILocation(line: 207, column: 29, scope: !10270)
!10273 = !DILocation(line: 207, column: 27, scope: !10270)
!10274 = !DILocation(line: 207, column: 20, scope: !10270)
!10275 = !DILocation(line: 207, column: 39, scope: !10270)
!10276 = !DILocation(line: 207, column: 36, scope: !10270)
!10277 = !DILocation(line: 207, column: 15, scope: !10261)
!10278 = !DILocalVariable(name: "dest_offset", scope: !10279, file: !10052, line: 209, type: !552)
!10279 = distinct !DILexicalBlock(scope: !10270, file: !10052, line: 208, column: 13)
!10280 = !DILocation(line: 209, column: 25, scope: !10279)
!10281 = !DILocation(line: 209, column: 39, scope: !10279)
!10282 = !DILocation(line: 209, column: 46, scope: !10279)
!10283 = !DILocation(line: 209, column: 44, scope: !10279)
!10284 = !DILocalVariable(name: "new_size", scope: !10279, file: !10052, line: 210, type: !149)
!10285 = !DILocation(line: 210, column: 22, scope: !10279)
!10286 = !DILocation(line: 210, column: 33, scope: !10279)
!10287 = !DILocation(line: 210, column: 47, scope: !10279)
!10288 = !DILocation(line: 210, column: 45, scope: !10279)
!10289 = !DILocation(line: 212, column: 19, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10279, file: !10052, line: 212, column: 19)
!10291 = !DILocation(line: 212, column: 25, scope: !10290)
!10292 = !DILocation(line: 212, column: 23, scope: !10290)
!10293 = !DILocation(line: 212, column: 31, scope: !10290)
!10294 = !DILocation(line: 212, column: 35, scope: !10290)
!10295 = !DILocation(line: 212, column: 19, scope: !10279)
!10296 = !DILocation(line: 213, column: 29, scope: !10290)
!10297 = !DILocation(line: 213, column: 35, scope: !10290)
!10298 = !DILocation(line: 213, column: 33, scope: !10290)
!10299 = !DILocation(line: 213, column: 41, scope: !10290)
!10300 = !DILocation(line: 213, column: 26, scope: !10290)
!10301 = !DILocation(line: 213, column: 17, scope: !10290)
!10302 = !DILocation(line: 215, column: 26, scope: !10290)
!10303 = !DILocation(line: 216, column: 33, scope: !10279)
!10304 = !DILocation(line: 216, column: 40, scope: !10279)
!10305 = !DILocation(line: 216, column: 23, scope: !10279)
!10306 = !DILocation(line: 216, column: 21, scope: !10279)
!10307 = !DILocation(line: 217, column: 29, scope: !10279)
!10308 = !DILocation(line: 217, column: 37, scope: !10279)
!10309 = !DILocation(line: 217, column: 35, scope: !10279)
!10310 = !DILocation(line: 217, column: 27, scope: !10279)
!10311 = !DILocation(line: 219, column: 22, scope: !10279)
!10312 = !DILocation(line: 219, column: 30, scope: !10279)
!10313 = !DILocation(line: 219, column: 28, scope: !10279)
!10314 = !DILocation(line: 219, column: 20, scope: !10279)
!10315 = !DILocation(line: 220, column: 13, scope: !10279)
!10316 = !DILocation(line: 222, column: 26, scope: !10261)
!10317 = !DILocation(line: 222, column: 32, scope: !10261)
!10318 = !DILocation(line: 222, column: 39, scope: !10261)
!10319 = !DILocation(line: 222, column: 45, scope: !10261)
!10320 = !DILocation(line: 222, column: 43, scope: !10261)
!10321 = !DILocation(line: 222, column: 18, scope: !10261)
!10322 = !DILocation(line: 222, column: 16, scope: !10261)
!10323 = !DILocation(line: 223, column: 19, scope: !10261)
!10324 = !DILocation(line: 223, column: 25, scope: !10261)
!10325 = !DILocation(line: 223, column: 23, scope: !10261)
!10326 = !DILocation(line: 223, column: 16, scope: !10261)
!10327 = !DILocation(line: 224, column: 12, scope: !10261)
!10328 = !DILocation(line: 224, column: 17, scope: !10261)
!10329 = !DILocation(line: 226, column: 15, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10261, file: !10052, line: 226, column: 15)
!10331 = !DILocation(line: 226, column: 23, scope: !10330)
!10332 = !DILocation(line: 226, column: 27, scope: !10330)
!10333 = !DILocation(line: 226, column: 36, scope: !10330)
!10334 = !DILocation(line: 226, column: 15, scope: !10261)
!10335 = !DILocation(line: 231, column: 18, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10330, file: !10052, line: 227, column: 13)
!10337 = !DILocation(line: 231, column: 26, scope: !10336)
!10338 = !DILocation(line: 232, column: 13, scope: !10336)
!10339 = !DILocation(line: 233, column: 21, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10330, file: !10052, line: 233, column: 20)
!10341 = !DILocation(line: 233, column: 37, scope: !10340)
!10342 = !DILocation(line: 233, column: 31, scope: !10340)
!10343 = !DILocation(line: 233, column: 58, scope: !10340)
!10344 = !DILocation(line: 233, column: 51, scope: !10340)
!10345 = !DILocation(line: 233, column: 71, scope: !10340)
!10346 = !DILocation(line: 233, column: 20, scope: !10330)
!10347 = !DILocation(line: 236, column: 29, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10340, file: !10052, line: 234, column: 13)
!10349 = !DILocation(line: 236, column: 27, scope: !10348)
!10350 = !DILocation(line: 237, column: 19, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10348, file: !10052, line: 237, column: 19)
!10352 = !DILocation(line: 237, column: 28, scope: !10351)
!10353 = !DILocation(line: 237, column: 19, scope: !10348)
!10354 = !DILocation(line: 238, column: 17, scope: !10351)
!10355 = !DILocation(line: 239, column: 19, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10348, file: !10052, line: 239, column: 19)
!10357 = !DILocation(line: 239, column: 28, scope: !10356)
!10358 = !DILocation(line: 239, column: 19, scope: !10348)
!10359 = !DILocation(line: 241, column: 23, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !10052, line: 241, column: 23)
!10361 = distinct !DILexicalBlock(scope: !10356, file: !10052, line: 240, column: 17)
!10362 = !DILocation(line: 241, column: 35, scope: !10360)
!10363 = !DILocation(line: 241, column: 27, scope: !10360)
!10364 = !DILocation(line: 241, column: 50, scope: !10360)
!10365 = !DILocation(line: 241, column: 53, scope: !10360)
!10366 = !DILocation(line: 241, column: 65, scope: !10360)
!10367 = !DILocation(line: 241, column: 23, scope: !10361)
!10368 = !DILocation(line: 242, column: 21, scope: !10360)
!10369 = !DILocation(line: 243, column: 19, scope: !10361)
!10370 = !DILocation(line: 245, column: 18, scope: !10348)
!10371 = !DILocation(line: 245, column: 26, scope: !10348)
!10372 = !DILocation(line: 246, column: 13, scope: !10348)
!10373 = !DILocation(line: 248, column: 15, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10261, file: !10052, line: 248, column: 15)
!10375 = !DILocation(line: 248, column: 15, scope: !10261)
!10376 = !DILocalVariable(name: "buf", scope: !10377, file: !10052, line: 250, type: !143)
!10377 = distinct !DILexicalBlock(scope: !10374, file: !10052, line: 249, column: 13)
!10378 = !DILocation(line: 250, column: 21, scope: !10377)
!10379 = !DILocalVariable(name: "n", scope: !10377, file: !10052, line: 251, type: !149)
!10380 = !DILocation(line: 251, column: 22, scope: !10377)
!10381 = !DILocalVariable(name: "len", scope: !10377, file: !10052, line: 251, type: !149)
!10382 = !DILocation(line: 251, column: 25, scope: !10377)
!10383 = !DILocation(line: 257, column: 37, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10377, file: !10052, line: 257, column: 19)
!10385 = !DILocation(line: 257, column: 19, scope: !10384)
!10386 = !DILocation(line: 257, column: 19, scope: !10377)
!10387 = !DILocation(line: 259, column: 23, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !10052, line: 259, column: 23)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !10052, line: 258, column: 17)
!10390 = !DILocation(line: 259, column: 32, scope: !10388)
!10391 = !DILocation(line: 259, column: 23, scope: !10389)
!10392 = !DILocation(line: 260, column: 21, scope: !10388)
!10393 = !DILocation(line: 261, column: 31, scope: !10389)
!10394 = !DILocation(line: 262, column: 19, scope: !10389)
!10395 = !DILocation(line: 265, column: 42, scope: !10377)
!10396 = !DILocation(line: 265, column: 52, scope: !10377)
!10397 = !{!3833, !2499, i64 48}
!10398 = !DILocation(line: 265, column: 21, scope: !10377)
!10399 = !DILocation(line: 265, column: 19, scope: !10377)
!10400 = !DILocation(line: 266, column: 20, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10377, file: !10052, line: 266, column: 19)
!10402 = !DILocation(line: 266, column: 19, scope: !10377)
!10403 = !DILocation(line: 268, column: 23, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !10052, line: 268, column: 23)
!10405 = distinct !DILexicalBlock(scope: !10401, file: !10052, line: 267, column: 17)
!10406 = !DILocation(line: 268, column: 32, scope: !10404)
!10407 = !DILocation(line: 268, column: 47, scope: !10404)
!10408 = !DILocation(line: 268, column: 50, scope: !10404)
!10409 = !DILocation(line: 268, column: 56, scope: !10404)
!10410 = !DILocation(line: 268, column: 23, scope: !10405)
!10411 = !DILocation(line: 269, column: 21, scope: !10404)
!10412 = !DILocation(line: 270, column: 33, scope: !10405)
!10413 = !DILocation(line: 270, column: 31, scope: !10405)
!10414 = !DILocation(line: 271, column: 19, scope: !10405)
!10415 = !DILocation(line: 274, column: 27, scope: !10377)
!10416 = !DILocation(line: 274, column: 19, scope: !10377)
!10417 = !DILocation(line: 274, column: 17, scope: !10377)
!10418 = !DILocation(line: 275, column: 29, scope: !10377)
!10419 = !DILocation(line: 275, column: 21, scope: !10377)
!10420 = !DILocation(line: 275, column: 19, scope: !10377)
!10421 = !DILocation(line: 277, column: 20, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10377, file: !10052, line: 277, column: 19)
!10423 = !DILocation(line: 277, column: 19, scope: !10377)
!10424 = !DILocation(line: 280, column: 23, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10422, file: !10052, line: 278, column: 17)
!10426 = !DILocation(line: 280, column: 27, scope: !10425)
!10427 = !DILocation(line: 280, column: 25, scope: !10425)
!10428 = !DILocation(line: 280, column: 31, scope: !10425)
!10429 = !DILocation(line: 280, column: 36, scope: !10425)
!10430 = !DILocation(line: 280, column: 21, scope: !10425)
!10431 = !DILocation(line: 280, column: 51, scope: !10425)
!10432 = !DILocation(line: 280, column: 55, scope: !10425)
!10433 = !DILocation(line: 280, column: 53, scope: !10425)
!10434 = !DILocation(line: 280, column: 59, scope: !10425)
!10435 = !DILocation(line: 279, column: 29, scope: !10425)
!10436 = !DILocation(line: 281, column: 40, scope: !10425)
!10437 = !DILocation(line: 281, column: 31, scope: !10425)
!10438 = !DILocation(line: 281, column: 29, scope: !10425)
!10439 = !DILocation(line: 282, column: 17, scope: !10425)
!10440 = !DILocation(line: 283, column: 25, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10422, file: !10052, line: 283, column: 24)
!10442 = !DILocation(line: 283, column: 29, scope: !10441)
!10443 = !DILocation(line: 283, column: 27, scope: !10441)
!10444 = !DILocation(line: 283, column: 33, scope: !10441)
!10445 = !DILocation(line: 283, column: 40, scope: !10441)
!10446 = !DILocation(line: 283, column: 38, scope: !10441)
!10447 = !DILocation(line: 283, column: 24, scope: !10422)
!10448 = !DILocation(line: 285, column: 31, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10441, file: !10052, line: 284, column: 17)
!10450 = !DILocation(line: 285, column: 35, scope: !10449)
!10451 = !DILocation(line: 285, column: 33, scope: !10449)
!10452 = !DILocation(line: 285, column: 39, scope: !10449)
!10453 = !DILocation(line: 285, column: 29, scope: !10449)
!10454 = !DILocation(line: 286, column: 41, scope: !10449)
!10455 = !DILocation(line: 286, column: 52, scope: !10449)
!10456 = !DILocation(line: 286, column: 31, scope: !10449)
!10457 = !DILocation(line: 286, column: 29, scope: !10449)
!10458 = !DILocation(line: 287, column: 17, scope: !10449)
!10459 = !DILocation(line: 290, column: 25, scope: !10377)
!10460 = !DILocation(line: 290, column: 35, scope: !10377)
!10461 = !DILocation(line: 290, column: 39, scope: !10377)
!10462 = !DILocation(line: 290, column: 44, scope: !10377)
!10463 = !DILocation(line: 290, column: 48, scope: !10377)
!10464 = !DILocation(line: 290, column: 15, scope: !10377)
!10465 = !DILocation(line: 291, column: 36, scope: !10377)
!10466 = !DILocation(line: 291, column: 47, scope: !10377)
!10467 = !DILocation(line: 291, column: 52, scope: !10377)
!10468 = !DILocation(line: 291, column: 28, scope: !10377)
!10469 = !DILocation(line: 291, column: 26, scope: !10377)
!10470 = !DILocation(line: 291, column: 20, scope: !10377)
!10471 = !DILocation(line: 293, column: 19, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10377, file: !10052, line: 293, column: 19)
!10473 = !DILocation(line: 293, column: 19, scope: !10377)
!10474 = !DILocalVariable(name: "pfxlen", scope: !10475, file: !10052, line: 295, type: !149)
!10475 = distinct !DILexicalBlock(scope: !10472, file: !10052, line: 294, column: 17)
!10476 = !DILocation(line: 295, column: 26, scope: !10475)
!10477 = !DILocation(line: 297, column: 23, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10475, file: !10052, line: 297, column: 23)
!10479 = !DILocation(line: 297, column: 23, scope: !10475)
!10480 = !DILocation(line: 298, column: 29, scope: !10478)
!10481 = !DILocation(line: 298, column: 36, scope: !10478)
!10482 = !DILocation(line: 298, column: 41, scope: !10478)
!10483 = !DILocation(line: 298, column: 21, scope: !10478)
!10484 = !DILocation(line: 299, column: 26, scope: !10475)
!10485 = !DILocation(line: 299, column: 34, scope: !10475)
!10486 = !DILocation(line: 299, column: 32, scope: !10475)
!10487 = !DILocation(line: 299, column: 24, scope: !10475)
!10488 = !DILocation(line: 300, column: 24, scope: !10475)
!10489 = !DILocation(line: 300, column: 27, scope: !10475)
!10490 = !DILocation(line: 308, column: 32, scope: !10475)
!10491 = !DILocation(line: 308, column: 30, scope: !10475)
!10492 = !DILocation(line: 309, column: 17, scope: !10475)
!10493 = !DILocation(line: 314, column: 23, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !10052, line: 314, column: 23)
!10495 = distinct !DILexicalBlock(scope: !10472, file: !10052, line: 311, column: 17)
!10496 = !DILocation(line: 314, column: 30, scope: !10494)
!10497 = !DILocation(line: 314, column: 38, scope: !10494)
!10498 = !DILocation(line: 314, column: 36, scope: !10494)
!10499 = !DILocation(line: 314, column: 49, scope: !10494)
!10500 = !DILocation(line: 314, column: 28, scope: !10494)
!10501 = !DILocation(line: 314, column: 23, scope: !10495)
!10502 = !DILocation(line: 315, column: 26, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10494, file: !10052, line: 315, column: 21)
!10504 = !DILocation(line: 315, column: 34, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10503, file: !10052, line: 315, column: 21)
!10506 = !DILocation(line: 315, column: 41, scope: !10505)
!10507 = !DILocation(line: 315, column: 39, scope: !10505)
!10508 = !DILocation(line: 315, column: 47, scope: !10505)
!10509 = !DILocation(line: 315, column: 51, scope: !10505)
!10510 = !DILocation(line: 315, column: 50, scope: !10505)
!10511 = !DILocation(line: 0, scope: !10505)
!10512 = !DILocation(line: 315, column: 21, scope: !10503)
!10513 = !DILocation(line: 316, column: 23, scope: !10505)
!10514 = !DILocation(line: 315, column: 71, scope: !10505)
!10515 = !DILocation(line: 315, column: 21, scope: !10505)
!10516 = distinct !{!10516, !10512, !10517}
!10517 = !DILocation(line: 316, column: 23, scope: !10503)
!10518 = !DILocation(line: 322, column: 21, scope: !10377)
!10519 = !DILocation(line: 322, column: 15, scope: !10377)
!10520 = !DILocation(line: 323, column: 13, scope: !10377)
!10521 = !DILocation(line: 326, column: 20, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !10052, line: 326, column: 19)
!10523 = distinct !DILexicalBlock(scope: !10374, file: !10052, line: 325, column: 13)
!10524 = !DILocation(line: 326, column: 41, scope: !10522)
!10525 = !DILocation(line: 326, column: 45, scope: !10522)
!10526 = !DILocation(line: 326, column: 44, scope: !10522)
!10527 = !DILocation(line: 326, column: 49, scope: !10522)
!10528 = !DILocation(line: 326, column: 53, scope: !10522)
!10529 = !DILocation(line: 326, column: 62, scope: !10522)
!10530 = !DILocation(line: 326, column: 19, scope: !10523)
!10531 = !DILocation(line: 328, column: 31, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10522, file: !10052, line: 327, column: 17)
!10533 = !DILocation(line: 329, column: 19, scope: !10532)
!10534 = !DILocation(line: 333, column: 5, scope: !10185)
!10535 = !DILocation(line: 176, column: 27, scope: !10180)
!10536 = !DILocation(line: 176, column: 25, scope: !10180)
!10537 = !DILocation(line: 176, column: 3, scope: !10180)
!10538 = distinct !{!10538, !10183, !10539}
!10539 = !DILocation(line: 333, column: 5, scope: !10181)
!10540 = !DILocation(line: 334, column: 7, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 334, column: 7)
!10542 = !DILocation(line: 334, column: 14, scope: !10541)
!10543 = !DILocation(line: 334, column: 22, scope: !10541)
!10544 = !DILocation(line: 334, column: 20, scope: !10541)
!10545 = !DILocation(line: 334, column: 33, scope: !10541)
!10546 = !DILocation(line: 334, column: 12, scope: !10541)
!10547 = !DILocation(line: 334, column: 37, scope: !10541)
!10548 = !DILocation(line: 334, column: 40, scope: !10541)
!10549 = !DILocation(line: 334, column: 7, scope: !10051)
!10550 = !DILocation(line: 335, column: 5, scope: !10541)
!10551 = !DILocation(line: 339, column: 4, scope: !10051)
!10552 = !DILocation(line: 339, column: 9, scope: !10051)
!10553 = !DILocation(line: 340, column: 7, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 340, column: 7)
!10555 = !DILocation(line: 340, column: 22, scope: !10554)
!10556 = !DILocation(line: 340, column: 27, scope: !10554)
!10557 = !DILocation(line: 340, column: 19, scope: !10554)
!10558 = !DILocation(line: 340, column: 7, scope: !10051)
!10559 = !DILocation(line: 341, column: 23, scope: !10554)
!10560 = !DILocation(line: 341, column: 30, scope: !10554)
!10561 = !DILocation(line: 341, column: 37, scope: !10554)
!10562 = !DILocation(line: 341, column: 35, scope: !10554)
!10563 = !DILocation(line: 341, column: 43, scope: !10554)
!10564 = !DILocation(line: 341, column: 13, scope: !10554)
!10565 = !DILocation(line: 341, column: 11, scope: !10554)
!10566 = !DILocation(line: 341, column: 5, scope: !10554)
!10567 = !DILocation(line: 343, column: 9, scope: !10051)
!10568 = !DILocation(line: 343, column: 3, scope: !10051)
!10569 = !DILocation(line: 344, column: 7, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 344, column: 7)
!10571 = !DILocation(line: 344, column: 7, scope: !10051)
!10572 = !DILocation(line: 345, column: 16, scope: !10570)
!10573 = !DILocation(line: 345, column: 5, scope: !10570)
!10574 = !DILocation(line: 346, column: 10, scope: !10051)
!10575 = !DILocation(line: 346, column: 3, scope: !10051)
!10576 = !DILabel(scope: !10051, name: "error", file: !10052, line: 348)
!10577 = !DILocation(line: 348, column: 1, scope: !10051)
!10578 = !DILocation(line: 349, column: 9, scope: !10051)
!10579 = !DILocation(line: 349, column: 3, scope: !10051)
!10580 = !DILocation(line: 350, column: 9, scope: !10051)
!10581 = !DILocation(line: 350, column: 3, scope: !10051)
!10582 = !DILocation(line: 351, column: 7, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10051, file: !10052, line: 351, column: 7)
!10584 = !DILocation(line: 351, column: 7, scope: !10051)
!10585 = !DILocation(line: 352, column: 16, scope: !10583)
!10586 = !DILocation(line: 352, column: 5, scope: !10583)
!10587 = !DILocation(line: 353, column: 11, scope: !10051)
!10588 = !DILocation(line: 353, column: 3, scope: !10051)
!10589 = !DILocation(line: 353, column: 9, scope: !10051)
!10590 = !DILocation(line: 354, column: 3, scope: !10051)
!10591 = !DILocation(line: 355, column: 1, scope: !10051)
!10592 = distinct !DISubprogram(name: "seen_triple", scope: !10052, file: !10052, line: 70, type: !1683, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1669, retainedNodes: !152)
!10593 = !DILocalVariable(name: "ht", arg: 1, scope: !10592, file: !10052, line: 70, type: !1685)
!10594 = !DILocation(line: 70, column: 27, scope: !10592)
!10595 = !DILocalVariable(name: "filename", arg: 2, scope: !10592, file: !10052, line: 70, type: !146)
!10596 = !DILocation(line: 70, column: 43, scope: !10592)
!10597 = !DILocalVariable(name: "st", arg: 3, scope: !10592, file: !10052, line: 70, type: !1686)
!10598 = !DILocation(line: 70, column: 72, scope: !10592)
!10599 = !DILocation(line: 72, column: 8, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10592, file: !10052, line: 72, column: 7)
!10601 = !DILocation(line: 72, column: 7, scope: !10600)
!10602 = !DILocation(line: 72, column: 11, scope: !10600)
!10603 = !DILocation(line: 72, column: 7, scope: !10592)
!10604 = !DILocalVariable(name: "initial_capacity", scope: !10605, file: !10052, line: 74, type: !149)
!10605 = distinct !DILexicalBlock(scope: !10600, file: !10052, line: 73, column: 5)
!10606 = !DILocation(line: 74, column: 14, scope: !10605)
!10607 = !DILocation(line: 75, column: 30, scope: !10605)
!10608 = !DILocation(line: 75, column: 13, scope: !10605)
!10609 = !DILocation(line: 75, column: 8, scope: !10605)
!10610 = !DILocation(line: 75, column: 11, scope: !10605)
!10611 = !DILocation(line: 80, column: 12, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10605, file: !10052, line: 80, column: 11)
!10613 = !DILocation(line: 80, column: 11, scope: !10612)
!10614 = !DILocation(line: 80, column: 15, scope: !10612)
!10615 = !DILocation(line: 80, column: 11, scope: !10605)
!10616 = !DILocation(line: 81, column: 9, scope: !10612)
!10617 = !DILocation(line: 82, column: 5, scope: !10605)
!10618 = !DILocation(line: 84, column: 19, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10592, file: !10052, line: 84, column: 7)
!10620 = !DILocation(line: 84, column: 18, scope: !10619)
!10621 = !DILocation(line: 84, column: 23, scope: !10619)
!10622 = !DILocation(line: 84, column: 33, scope: !10619)
!10623 = !DILocation(line: 84, column: 7, scope: !10619)
!10624 = !DILocation(line: 84, column: 7, scope: !10592)
!10625 = !DILocation(line: 85, column: 5, scope: !10619)
!10626 = !DILocation(line: 87, column: 17, scope: !10592)
!10627 = !DILocation(line: 87, column: 16, scope: !10592)
!10628 = !DILocation(line: 87, column: 21, scope: !10592)
!10629 = !DILocation(line: 87, column: 31, scope: !10592)
!10630 = !DILocation(line: 87, column: 3, scope: !10592)
!10631 = !DILocation(line: 88, column: 3, scope: !10592)
!10632 = !DILocation(line: 89, column: 1, scope: !10592)
!10633 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !1130, file: !1130, line: 51, type: !558, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1086, retainedNodes: !152)
!10634 = !DILocalVariable(name: "file", arg: 1, scope: !10633, file: !1130, line: 51, type: !146)
!10635 = !DILocation(line: 51, column: 41, scope: !10633)
!10636 = !DILocation(line: 53, column: 15, scope: !10633)
!10637 = !DILocation(line: 53, column: 13, scope: !10633)
!10638 = !DILocation(line: 54, column: 1, scope: !10633)
!10639 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !1130, file: !1130, line: 88, type: !396, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1086, retainedNodes: !152)
!10640 = !DILocalVariable(name: "ignore", arg: 1, scope: !10639, file: !1130, line: 88, type: !141)
!10641 = !DILocation(line: 88, column: 37, scope: !10639)
!10642 = !DILocation(line: 90, column: 18, scope: !10639)
!10643 = !DILocation(line: 90, column: 16, scope: !10639)
!10644 = !DILocation(line: 91, column: 1, scope: !10639)
!10645 = distinct !DISubprogram(name: "close_stdout", scope: !1130, file: !1130, line: 117, type: !336, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1086, retainedNodes: !152)
!10646 = !DILocation(line: 119, column: 21, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10645, file: !1130, line: 119, column: 7)
!10648 = !DILocation(line: 119, column: 7, scope: !10647)
!10649 = !DILocation(line: 119, column: 29, scope: !10647)
!10650 = !DILocation(line: 120, column: 7, scope: !10647)
!10651 = !DILocation(line: 120, column: 12, scope: !10647)
!10652 = !DILocation(line: 120, column: 25, scope: !10647)
!10653 = !DILocation(line: 120, column: 28, scope: !10647)
!10654 = !DILocation(line: 120, column: 34, scope: !10647)
!10655 = !DILocation(line: 119, column: 7, scope: !10645)
!10656 = !DILocalVariable(name: "write_error", scope: !10657, file: !1130, line: 122, type: !146)
!10657 = distinct !DILexicalBlock(scope: !10647, file: !1130, line: 121, column: 5)
!10658 = !DILocation(line: 122, column: 19, scope: !10657)
!10659 = !DILocation(line: 122, column: 33, scope: !10657)
!10660 = !DILocation(line: 123, column: 11, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10657, file: !1130, line: 123, column: 11)
!10662 = !DILocation(line: 123, column: 11, scope: !10657)
!10663 = !DILocation(line: 124, column: 19, scope: !10661)
!10664 = !DILocation(line: 124, column: 52, scope: !10661)
!10665 = !DILocation(line: 124, column: 36, scope: !10661)
!10666 = !DILocation(line: 125, column: 16, scope: !10661)
!10667 = !DILocation(line: 124, column: 9, scope: !10661)
!10668 = !DILocation(line: 127, column: 19, scope: !10661)
!10669 = !DILocation(line: 127, column: 32, scope: !10661)
!10670 = !DILocation(line: 127, column: 9, scope: !10661)
!10671 = !DILocation(line: 129, column: 14, scope: !10657)
!10672 = !DILocation(line: 129, column: 7, scope: !10657)
!10673 = !DILocation(line: 134, column: 42, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10645, file: !1130, line: 134, column: 7)
!10675 = !DILocation(line: 134, column: 28, scope: !10674)
!10676 = !DILocation(line: 134, column: 50, scope: !10674)
!10677 = !DILocation(line: 134, column: 7, scope: !10645)
!10678 = !DILocation(line: 135, column: 12, scope: !10674)
!10679 = !DILocation(line: 135, column: 5, scope: !10674)
!10680 = !DILocation(line: 136, column: 1, scope: !10645)
!10681 = distinct !DISubprogram(name: "dir_len", scope: !10682, file: !10682, line: 32, type: !1712, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!10682 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10683 = !DILocalVariable(name: "file", arg: 1, scope: !10681, file: !10682, line: 32, type: !146)
!10684 = !DILocation(line: 32, column: 22, scope: !10681)
!10685 = !DILocalVariable(name: "prefix_length", scope: !10681, file: !10682, line: 34, type: !149)
!10686 = !DILocation(line: 34, column: 10, scope: !10681)
!10687 = !DILocalVariable(name: "length", scope: !10681, file: !10682, line: 35, type: !149)
!10688 = !DILocation(line: 35, column: 10, scope: !10681)
!10689 = !DILocation(line: 38, column: 21, scope: !10681)
!10690 = !DILocation(line: 38, column: 35, scope: !10681)
!10691 = !DILocation(line: 41, column: 24, scope: !10681)
!10692 = !DILocation(line: 38, column: 20, scope: !10681)
!10693 = !DILocation(line: 38, column: 17, scope: !10681)
!10694 = !DILocation(line: 48, column: 33, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10681, file: !10682, line: 48, column: 3)
!10696 = !DILocation(line: 48, column: 17, scope: !10695)
!10697 = !DILocation(line: 48, column: 41, scope: !10695)
!10698 = !DILocation(line: 48, column: 39, scope: !10695)
!10699 = !DILocation(line: 48, column: 15, scope: !10695)
!10700 = !DILocation(line: 48, column: 8, scope: !10695)
!10701 = !DILocation(line: 49, column: 8, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10695, file: !10682, line: 48, column: 3)
!10703 = !DILocation(line: 49, column: 24, scope: !10702)
!10704 = !DILocation(line: 49, column: 22, scope: !10702)
!10705 = !DILocation(line: 48, column: 3, scope: !10695)
!10706 = !DILocation(line: 50, column: 11, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !10682, line: 50, column: 9)
!10708 = !DILocation(line: 50, column: 9, scope: !10702)
!10709 = !DILocation(line: 51, column: 7, scope: !10707)
!10710 = !DILocation(line: 49, column: 38, scope: !10702)
!10711 = !DILocation(line: 48, column: 3, scope: !10702)
!10712 = distinct !{!10712, !10705, !10713}
!10713 = !DILocation(line: 51, column: 7, scope: !10695)
!10714 = !DILocation(line: 52, column: 10, scope: !10681)
!10715 = !DILocation(line: 52, column: 3, scope: !10681)
!10716 = distinct !DISubprogram(name: "mdir_name", scope: !10682, file: !10682, line: 71, type: !560, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!10717 = !DILocalVariable(name: "file", arg: 1, scope: !10716, file: !10682, line: 71, type: !146)
!10718 = !DILocation(line: 71, column: 24, scope: !10716)
!10719 = !DILocalVariable(name: "length", scope: !10716, file: !10682, line: 73, type: !149)
!10720 = !DILocation(line: 73, column: 10, scope: !10716)
!10721 = !DILocation(line: 73, column: 28, scope: !10716)
!10722 = !DILocation(line: 73, column: 19, scope: !10716)
!10723 = !DILocalVariable(name: "append_dot", scope: !10716, file: !10682, line: 74, type: !141)
!10724 = !DILocation(line: 74, column: 8, scope: !10716)
!10725 = !DILocation(line: 74, column: 22, scope: !10716)
!10726 = !DILocation(line: 74, column: 29, scope: !10716)
!10727 = !DILocation(line: 75, column: 22, scope: !10716)
!10728 = !DILocalVariable(name: "dir", scope: !10716, file: !10682, line: 78, type: !143)
!10729 = !DILocation(line: 78, column: 9, scope: !10716)
!10730 = !DILocation(line: 78, column: 23, scope: !10716)
!10731 = !DILocation(line: 78, column: 32, scope: !10716)
!10732 = !DILocation(line: 78, column: 30, scope: !10716)
!10733 = !DILocation(line: 78, column: 43, scope: !10716)
!10734 = !DILocation(line: 78, column: 15, scope: !10716)
!10735 = !DILocation(line: 79, column: 8, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10716, file: !10682, line: 79, column: 7)
!10737 = !DILocation(line: 79, column: 7, scope: !10716)
!10738 = !DILocation(line: 80, column: 5, scope: !10736)
!10739 = !DILocation(line: 81, column: 11, scope: !10716)
!10740 = !DILocation(line: 81, column: 16, scope: !10716)
!10741 = !DILocation(line: 81, column: 22, scope: !10716)
!10742 = !DILocation(line: 81, column: 3, scope: !10716)
!10743 = !DILocation(line: 82, column: 7, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10716, file: !10682, line: 82, column: 7)
!10745 = !DILocation(line: 82, column: 7, scope: !10716)
!10746 = !DILocation(line: 83, column: 5, scope: !10744)
!10747 = !DILocation(line: 83, column: 15, scope: !10744)
!10748 = !DILocation(line: 83, column: 19, scope: !10744)
!10749 = !DILocation(line: 84, column: 3, scope: !10716)
!10750 = !DILocation(line: 84, column: 7, scope: !10716)
!10751 = !DILocation(line: 84, column: 15, scope: !10716)
!10752 = !DILocation(line: 85, column: 10, scope: !10716)
!10753 = !DILocation(line: 85, column: 3, scope: !10716)
!10754 = !DILocation(line: 86, column: 1, scope: !10716)
!10755 = distinct !DISubprogram(name: "last_component", scope: !10756, file: !10756, line: 30, type: !560, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1714, retainedNodes: !152)
!10756 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10757 = !DILocalVariable(name: "name", arg: 1, scope: !10755, file: !10756, line: 30, type: !146)
!10758 = !DILocation(line: 30, column: 29, scope: !10755)
!10759 = !DILocalVariable(name: "base", scope: !10755, file: !10756, line: 32, type: !146)
!10760 = !DILocation(line: 32, column: 15, scope: !10755)
!10761 = !DILocation(line: 32, column: 22, scope: !10755)
!10762 = !DILocation(line: 32, column: 27, scope: !10755)
!10763 = !DILocalVariable(name: "p", scope: !10755, file: !10756, line: 33, type: !146)
!10764 = !DILocation(line: 33, column: 15, scope: !10755)
!10765 = !DILocalVariable(name: "saw_slash", scope: !10755, file: !10756, line: 34, type: !141)
!10766 = !DILocation(line: 34, column: 8, scope: !10755)
!10767 = !DILocation(line: 36, column: 3, scope: !10755)
!10768 = !DILocation(line: 36, column: 10, scope: !10755)
!10769 = !DILocation(line: 37, column: 9, scope: !10755)
!10770 = distinct !{!10770, !10767, !10769}
!10771 = !DILocation(line: 39, column: 12, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10755, file: !10756, line: 39, column: 3)
!10773 = !DILocation(line: 39, column: 10, scope: !10772)
!10774 = !DILocation(line: 39, column: 8, scope: !10772)
!10775 = !DILocation(line: 39, column: 19, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !10756, line: 39, column: 3)
!10777 = !DILocation(line: 39, column: 18, scope: !10776)
!10778 = !DILocation(line: 39, column: 3, scope: !10772)
!10779 = !DILocation(line: 41, column: 11, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !10756, line: 41, column: 11)
!10781 = distinct !DILexicalBlock(scope: !10776, file: !10756, line: 40, column: 5)
!10782 = !DILocation(line: 41, column: 11, scope: !10781)
!10783 = !DILocation(line: 42, column: 19, scope: !10780)
!10784 = !DILocation(line: 42, column: 9, scope: !10780)
!10785 = !DILocation(line: 43, column: 16, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10780, file: !10756, line: 43, column: 16)
!10787 = !DILocation(line: 43, column: 16, scope: !10780)
!10788 = !DILocation(line: 45, column: 18, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10786, file: !10756, line: 44, column: 9)
!10790 = !DILocation(line: 45, column: 16, scope: !10789)
!10791 = !DILocation(line: 46, column: 21, scope: !10789)
!10792 = !DILocation(line: 47, column: 9, scope: !10789)
!10793 = !DILocation(line: 48, column: 5, scope: !10781)
!10794 = !DILocation(line: 39, column: 23, scope: !10776)
!10795 = !DILocation(line: 39, column: 3, scope: !10776)
!10796 = distinct !{!10796, !10778, !10797}
!10797 = !DILocation(line: 48, column: 5, scope: !10772)
!10798 = !DILocation(line: 50, column: 19, scope: !10755)
!10799 = !DILocation(line: 50, column: 3, scope: !10755)
!10800 = distinct !DISubprogram(name: "base_len", scope: !10756, file: !10756, line: 58, type: !1712, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1714, retainedNodes: !152)
!10801 = !DILocalVariable(name: "name", arg: 1, scope: !10800, file: !10756, line: 58, type: !146)
!10802 = !DILocation(line: 58, column: 23, scope: !10800)
!10803 = !DILocalVariable(name: "len", scope: !10800, file: !10756, line: 60, type: !149)
!10804 = !DILocation(line: 60, column: 10, scope: !10800)
!10805 = !DILocalVariable(name: "prefix_len", scope: !10800, file: !10756, line: 61, type: !149)
!10806 = !DILocation(line: 61, column: 10, scope: !10800)
!10807 = !DILocation(line: 63, column: 22, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10800, file: !10756, line: 63, column: 3)
!10809 = !DILocation(line: 63, column: 14, scope: !10808)
!10810 = !DILocation(line: 63, column: 12, scope: !10808)
!10811 = !DILocation(line: 63, column: 8, scope: !10808)
!10812 = !DILocation(line: 63, column: 34, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10808, file: !10756, line: 63, column: 3)
!10814 = !DILocation(line: 63, column: 32, scope: !10813)
!10815 = !DILocation(line: 63, column: 38, scope: !10813)
!10816 = !DILocation(line: 63, column: 41, scope: !10813)
!10817 = !DILocation(line: 0, scope: !10813)
!10818 = !DILocation(line: 63, column: 3, scope: !10808)
!10819 = !DILocation(line: 64, column: 5, scope: !10813)
!10820 = !DILocation(line: 63, column: 70, scope: !10813)
!10821 = !DILocation(line: 63, column: 3, scope: !10813)
!10822 = distinct !{!10822, !10818, !10823}
!10823 = !DILocation(line: 64, column: 5, scope: !10808)
!10824 = !DILocation(line: 74, column: 10, scope: !10800)
!10825 = !DILocation(line: 74, column: 3, scope: !10800)
!10826 = distinct !DISubprogram(name: "file_has_acl", scope: !10827, file: !10827, line: 45, type: !1720, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1717, retainedNodes: !152)
!10827 = !DIFile(filename: "lib/file-has-acl.c", directory: "/home/mohamad/clone/coreutils")
!10828 = !DILocalVariable(name: "name", arg: 1, scope: !10826, file: !10827, line: 45, type: !146)
!10829 = !DILocation(line: 45, column: 27, scope: !10826)
!10830 = !DILocalVariable(name: "sb", arg: 2, scope: !10826, file: !10827, line: 45, type: !1722)
!10831 = !DILocation(line: 45, column: 52, scope: !10826)
!10832 = !DILocation(line: 509, column: 3, scope: !10826)
!10833 = distinct !DISubprogram(name: "record_file", scope: !10834, file: !10834, line: 29, type: !1748, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1745, retainedNodes: !152)
!10834 = !DIFile(filename: "lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!10835 = !DILocalVariable(name: "ht", arg: 1, scope: !10833, file: !10834, line: 29, type: !242)
!10836 = !DILocation(line: 29, column: 26, scope: !10833)
!10837 = !DILocalVariable(name: "file", arg: 2, scope: !10833, file: !10834, line: 29, type: !146)
!10838 = !DILocation(line: 29, column: 42, scope: !10833)
!10839 = !DILocalVariable(name: "stats", arg: 3, scope: !10833, file: !10834, line: 29, type: !1750)
!10840 = !DILocation(line: 29, column: 67, scope: !10833)
!10841 = !DILocalVariable(name: "ent", scope: !10833, file: !10834, line: 31, type: !1773)
!10842 = !DILocation(line: 31, column: 20, scope: !10833)
!10843 = !DILocation(line: 33, column: 7, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10833, file: !10834, line: 33, column: 7)
!10845 = !DILocation(line: 33, column: 10, scope: !10844)
!10846 = !DILocation(line: 33, column: 7, scope: !10833)
!10847 = !DILocation(line: 34, column: 5, scope: !10844)
!10848 = !DILocation(line: 36, column: 9, scope: !10833)
!10849 = !DILocation(line: 36, column: 7, scope: !10833)
!10850 = !DILocation(line: 37, column: 24, scope: !10833)
!10851 = !DILocation(line: 37, column: 15, scope: !10833)
!10852 = !DILocation(line: 37, column: 3, scope: !10833)
!10853 = !DILocation(line: 37, column: 8, scope: !10833)
!10854 = !DILocation(line: 37, column: 13, scope: !10833)
!10855 = !{!10856, !2475, i64 0}
!10856 = !{!"F_triple", !2475, i64 0, !2499, i64 8, !2499, i64 16}
!10857 = !DILocation(line: 38, column: 17, scope: !10833)
!10858 = !DILocation(line: 38, column: 24, scope: !10833)
!10859 = !DILocation(line: 38, column: 3, scope: !10833)
!10860 = !DILocation(line: 38, column: 8, scope: !10833)
!10861 = !DILocation(line: 38, column: 15, scope: !10833)
!10862 = !{!10856, !2499, i64 8}
!10863 = !DILocation(line: 39, column: 17, scope: !10833)
!10864 = !DILocation(line: 39, column: 24, scope: !10833)
!10865 = !DILocation(line: 39, column: 3, scope: !10833)
!10866 = !DILocation(line: 39, column: 8, scope: !10833)
!10867 = !DILocation(line: 39, column: 15, scope: !10833)
!10868 = !{!10856, !2499, i64 16}
!10869 = !DILocalVariable(name: "ent_from_table", scope: !10870, file: !10834, line: 42, type: !1773)
!10870 = distinct !DILexicalBlock(scope: !10833, file: !10834, line: 41, column: 3)
!10871 = !DILocation(line: 42, column: 22, scope: !10870)
!10872 = !DILocation(line: 42, column: 52, scope: !10870)
!10873 = !DILocation(line: 42, column: 56, scope: !10870)
!10874 = !DILocation(line: 42, column: 39, scope: !10870)
!10875 = !DILocation(line: 43, column: 9, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10870, file: !10834, line: 43, column: 9)
!10877 = !DILocation(line: 43, column: 24, scope: !10876)
!10878 = !DILocation(line: 43, column: 9, scope: !10870)
!10879 = !DILocation(line: 46, column: 9, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10876, file: !10834, line: 44, column: 7)
!10881 = !DILocation(line: 49, column: 9, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10870, file: !10834, line: 49, column: 9)
!10883 = !DILocation(line: 49, column: 27, scope: !10882)
!10884 = !DILocation(line: 49, column: 24, scope: !10882)
!10885 = !DILocation(line: 49, column: 9, scope: !10870)
!10886 = !DILocation(line: 53, column: 22, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10882, file: !10834, line: 50, column: 7)
!10888 = !DILocation(line: 53, column: 9, scope: !10887)
!10889 = !DILocation(line: 54, column: 7, scope: !10887)
!10890 = !DILocation(line: 56, column: 1, scope: !10833)
!10891 = distinct !DISubprogram(name: "seen_file", scope: !10834, file: !10834, line: 61, type: !1780, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1745, retainedNodes: !152)
!10892 = !DILocalVariable(name: "ht", arg: 1, scope: !10891, file: !10834, line: 61, type: !1782)
!10893 = !DILocation(line: 61, column: 30, scope: !10891)
!10894 = !DILocalVariable(name: "file", arg: 2, scope: !10891, file: !10834, line: 61, type: !146)
!10895 = !DILocation(line: 61, column: 46, scope: !10891)
!10896 = !DILocalVariable(name: "stats", arg: 3, scope: !10891, file: !10834, line: 62, type: !1750)
!10897 = !DILocation(line: 62, column: 31, scope: !10891)
!10898 = !DILocalVariable(name: "new_ent", scope: !10891, file: !10834, line: 64, type: !1774)
!10899 = !DILocation(line: 64, column: 19, scope: !10891)
!10900 = !DILocation(line: 66, column: 7, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10891, file: !10834, line: 66, column: 7)
!10902 = !DILocation(line: 66, column: 10, scope: !10901)
!10903 = !DILocation(line: 66, column: 7, scope: !10891)
!10904 = !DILocation(line: 67, column: 5, scope: !10901)
!10905 = !DILocation(line: 69, column: 27, scope: !10891)
!10906 = !DILocation(line: 69, column: 11, scope: !10891)
!10907 = !DILocation(line: 69, column: 16, scope: !10891)
!10908 = !DILocation(line: 70, column: 20, scope: !10891)
!10909 = !DILocation(line: 70, column: 27, scope: !10891)
!10910 = !DILocation(line: 70, column: 11, scope: !10891)
!10911 = !DILocation(line: 70, column: 18, scope: !10891)
!10912 = !DILocation(line: 71, column: 20, scope: !10891)
!10913 = !DILocation(line: 71, column: 27, scope: !10891)
!10914 = !DILocation(line: 71, column: 11, scope: !10891)
!10915 = !DILocation(line: 71, column: 18, scope: !10891)
!10916 = !DILocation(line: 73, column: 25, scope: !10891)
!10917 = !DILocation(line: 73, column: 29, scope: !10891)
!10918 = !DILocation(line: 73, column: 12, scope: !10891)
!10919 = !DILocation(line: 73, column: 11, scope: !10891)
!10920 = !DILocation(line: 73, column: 10, scope: !10891)
!10921 = !DILocation(line: 73, column: 3, scope: !10891)
!10922 = !DILocation(line: 74, column: 1, scope: !10891)
!10923 = distinct !DISubprogram(name: "strmode", scope: !10924, file: !10924, line: 96, type: !1787, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1784, retainedNodes: !152)
!10924 = !DIFile(filename: "lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!10925 = !DILocalVariable(name: "mode", arg: 1, scope: !10923, file: !10924, line: 96, type: !226)
!10926 = !DILocation(line: 96, column: 17, scope: !10923)
!10927 = !DILocalVariable(name: "str", arg: 2, scope: !10923, file: !10924, line: 96, type: !143)
!10928 = !DILocation(line: 96, column: 29, scope: !10923)
!10929 = !DILocation(line: 98, column: 22, scope: !10923)
!10930 = !DILocation(line: 98, column: 12, scope: !10923)
!10931 = !DILocation(line: 98, column: 3, scope: !10923)
!10932 = !DILocation(line: 98, column: 10, scope: !10923)
!10933 = !DILocation(line: 99, column: 12, scope: !10923)
!10934 = !DILocation(line: 99, column: 17, scope: !10923)
!10935 = !DILocation(line: 99, column: 3, scope: !10923)
!10936 = !DILocation(line: 99, column: 10, scope: !10923)
!10937 = !DILocation(line: 100, column: 12, scope: !10923)
!10938 = !DILocation(line: 100, column: 17, scope: !10923)
!10939 = !DILocation(line: 100, column: 3, scope: !10923)
!10940 = !DILocation(line: 100, column: 10, scope: !10923)
!10941 = !DILocation(line: 101, column: 13, scope: !10923)
!10942 = !DILocation(line: 101, column: 18, scope: !10923)
!10943 = !DILocation(line: 102, column: 16, scope: !10923)
!10944 = !DILocation(line: 102, column: 21, scope: !10923)
!10945 = !DILocation(line: 103, column: 16, scope: !10923)
!10946 = !DILocation(line: 103, column: 21, scope: !10923)
!10947 = !DILocation(line: 101, column: 12, scope: !10923)
!10948 = !DILocation(line: 101, column: 3, scope: !10923)
!10949 = !DILocation(line: 101, column: 10, scope: !10923)
!10950 = !DILocation(line: 104, column: 12, scope: !10923)
!10951 = !DILocation(line: 104, column: 17, scope: !10923)
!10952 = !DILocation(line: 104, column: 3, scope: !10923)
!10953 = !DILocation(line: 104, column: 10, scope: !10923)
!10954 = !DILocation(line: 105, column: 12, scope: !10923)
!10955 = !DILocation(line: 105, column: 17, scope: !10923)
!10956 = !DILocation(line: 105, column: 3, scope: !10923)
!10957 = !DILocation(line: 105, column: 10, scope: !10923)
!10958 = !DILocation(line: 106, column: 13, scope: !10923)
!10959 = !DILocation(line: 106, column: 18, scope: !10923)
!10960 = !DILocation(line: 107, column: 16, scope: !10923)
!10961 = !DILocation(line: 107, column: 21, scope: !10923)
!10962 = !DILocation(line: 108, column: 16, scope: !10923)
!10963 = !DILocation(line: 108, column: 21, scope: !10923)
!10964 = !DILocation(line: 106, column: 12, scope: !10923)
!10965 = !DILocation(line: 106, column: 3, scope: !10923)
!10966 = !DILocation(line: 106, column: 10, scope: !10923)
!10967 = !DILocation(line: 109, column: 12, scope: !10923)
!10968 = !DILocation(line: 109, column: 17, scope: !10923)
!10969 = !DILocation(line: 109, column: 3, scope: !10923)
!10970 = !DILocation(line: 109, column: 10, scope: !10923)
!10971 = !DILocation(line: 110, column: 12, scope: !10923)
!10972 = !DILocation(line: 110, column: 17, scope: !10923)
!10973 = !DILocation(line: 110, column: 3, scope: !10923)
!10974 = !DILocation(line: 110, column: 10, scope: !10923)
!10975 = !DILocation(line: 111, column: 13, scope: !10923)
!10976 = !DILocation(line: 111, column: 18, scope: !10923)
!10977 = !DILocation(line: 112, column: 16, scope: !10923)
!10978 = !DILocation(line: 112, column: 21, scope: !10923)
!10979 = !DILocation(line: 113, column: 16, scope: !10923)
!10980 = !DILocation(line: 113, column: 21, scope: !10923)
!10981 = !DILocation(line: 111, column: 12, scope: !10923)
!10982 = !DILocation(line: 111, column: 3, scope: !10923)
!10983 = !DILocation(line: 111, column: 10, scope: !10923)
!10984 = !DILocation(line: 114, column: 3, scope: !10923)
!10985 = !DILocation(line: 114, column: 11, scope: !10923)
!10986 = !DILocation(line: 115, column: 3, scope: !10923)
!10987 = !DILocation(line: 115, column: 11, scope: !10923)
!10988 = !DILocation(line: 116, column: 1, scope: !10923)
!10989 = distinct !DISubprogram(name: "ftypelet", scope: !10924, file: !10924, line: 54, type: !1814, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1784, retainedNodes: !152)
!10990 = !DILocalVariable(name: "bits", arg: 1, scope: !10989, file: !10924, line: 54, type: !226)
!10991 = !DILocation(line: 54, column: 18, scope: !10989)
!10992 = !DILocation(line: 57, column: 7, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 57, column: 7)
!10994 = !DILocation(line: 57, column: 7, scope: !10989)
!10995 = !DILocation(line: 58, column: 5, scope: !10993)
!10996 = !DILocation(line: 59, column: 7, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 59, column: 7)
!10998 = !DILocation(line: 59, column: 7, scope: !10989)
!10999 = !DILocation(line: 60, column: 5, scope: !10997)
!11000 = !DILocation(line: 63, column: 7, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 63, column: 7)
!11002 = !DILocation(line: 63, column: 7, scope: !10989)
!11003 = !DILocation(line: 64, column: 5, scope: !11001)
!11004 = !DILocation(line: 65, column: 7, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 65, column: 7)
!11006 = !DILocation(line: 65, column: 7, scope: !10989)
!11007 = !DILocation(line: 66, column: 5, scope: !11005)
!11008 = !DILocation(line: 67, column: 7, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 67, column: 7)
!11010 = !DILocation(line: 67, column: 7, scope: !10989)
!11011 = !DILocation(line: 68, column: 5, scope: !11009)
!11012 = !DILocation(line: 69, column: 7, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 69, column: 7)
!11014 = !DILocation(line: 69, column: 7, scope: !10989)
!11015 = !DILocation(line: 70, column: 5, scope: !11013)
!11016 = !DILocation(line: 73, column: 7, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10989, file: !10924, line: 73, column: 7)
!11018 = !DILocation(line: 73, column: 7, scope: !10989)
!11019 = !DILocation(line: 74, column: 5, scope: !11017)
!11020 = !DILocation(line: 90, column: 3, scope: !10989)
!11021 = !DILocation(line: 91, column: 1, scope: !10989)
!11022 = distinct !DISubprogram(name: "filemodestring", scope: !10924, file: !10924, line: 166, type: !1789, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1784, retainedNodes: !152)
!11023 = !DILocalVariable(name: "statp", arg: 1, scope: !11022, file: !10924, line: 166, type: !1791)
!11024 = !DILocation(line: 166, column: 36, scope: !11022)
!11025 = !DILocalVariable(name: "str", arg: 2, scope: !11022, file: !10924, line: 166, type: !143)
!11026 = !DILocation(line: 166, column: 49, scope: !11022)
!11027 = !DILocation(line: 168, column: 12, scope: !11022)
!11028 = !DILocation(line: 168, column: 19, scope: !11022)
!11029 = !DILocation(line: 168, column: 28, scope: !11022)
!11030 = !DILocation(line: 168, column: 3, scope: !11022)
!11031 = !DILocation(line: 170, column: 7, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11022, file: !10924, line: 170, column: 7)
!11033 = !DILocation(line: 170, column: 7, scope: !11022)
!11034 = !DILocation(line: 171, column: 5, scope: !11032)
!11035 = !DILocation(line: 171, column: 12, scope: !11032)
!11036 = !DILocation(line: 174, column: 12, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !10924, line: 174, column: 12)
!11038 = distinct !DILexicalBlock(scope: !11032, file: !10924, line: 172, column: 12)
!11039 = !DILocation(line: 174, column: 12, scope: !11038)
!11040 = !DILocation(line: 175, column: 5, scope: !11037)
!11041 = !DILocation(line: 175, column: 12, scope: !11037)
!11042 = !DILocation(line: 176, column: 12, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11037, file: !10924, line: 176, column: 12)
!11044 = !DILocation(line: 176, column: 12, scope: !11037)
!11045 = !DILocation(line: 177, column: 5, scope: !11043)
!11046 = !DILocation(line: 177, column: 12, scope: !11043)
!11047 = !DILocation(line: 180, column: 1, scope: !11022)
!11048 = distinct !DISubprogram(name: "file_name_concat", scope: !11049, file: !11049, line: 35, type: !1819, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1816, retainedNodes: !152)
!11049 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!11050 = !DILocalVariable(name: "dir", arg: 1, scope: !11048, file: !11049, line: 35, type: !146)
!11051 = !DILocation(line: 35, column: 31, scope: !11048)
!11052 = !DILocalVariable(name: "base", arg: 2, scope: !11048, file: !11049, line: 35, type: !146)
!11053 = !DILocation(line: 35, column: 48, scope: !11048)
!11054 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11048, file: !11049, line: 35, type: !142)
!11055 = !DILocation(line: 35, column: 61, scope: !11048)
!11056 = !DILocalVariable(name: "p", scope: !11048, file: !11049, line: 37, type: !143)
!11057 = !DILocation(line: 37, column: 9, scope: !11048)
!11058 = !DILocation(line: 37, column: 32, scope: !11048)
!11059 = !DILocation(line: 37, column: 37, scope: !11048)
!11060 = !DILocation(line: 37, column: 43, scope: !11048)
!11061 = !DILocation(line: 37, column: 13, scope: !11048)
!11062 = !DILocation(line: 38, column: 7, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11048, file: !11049, line: 38, column: 7)
!11064 = !DILocation(line: 38, column: 9, scope: !11063)
!11065 = !DILocation(line: 38, column: 7, scope: !11048)
!11066 = !DILocation(line: 39, column: 5, scope: !11063)
!11067 = !DILocation(line: 40, column: 10, scope: !11048)
!11068 = !DILocation(line: 40, column: 3, scope: !11048)
!11069 = distinct !DISubprogram(name: "mfile_name_concat", scope: !11070, file: !11070, line: 47, type: !1819, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1821, retainedNodes: !152)
!11070 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!11071 = !DILocalVariable(name: "dir", arg: 1, scope: !11069, file: !11070, line: 47, type: !146)
!11072 = !DILocation(line: 47, column: 32, scope: !11069)
!11073 = !DILocalVariable(name: "base", arg: 2, scope: !11069, file: !11070, line: 47, type: !146)
!11074 = !DILocation(line: 47, column: 49, scope: !11069)
!11075 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11069, file: !11070, line: 47, type: !142)
!11076 = !DILocation(line: 47, column: 62, scope: !11069)
!11077 = !DILocalVariable(name: "dirbase", scope: !11069, file: !11070, line: 49, type: !146)
!11078 = !DILocation(line: 49, column: 15, scope: !11069)
!11079 = !DILocation(line: 49, column: 41, scope: !11069)
!11080 = !DILocation(line: 49, column: 25, scope: !11069)
!11081 = !DILocalVariable(name: "dirbaselen", scope: !11069, file: !11070, line: 50, type: !149)
!11082 = !DILocation(line: 50, column: 10, scope: !11069)
!11083 = !DILocation(line: 50, column: 33, scope: !11069)
!11084 = !DILocation(line: 50, column: 23, scope: !11069)
!11085 = !DILocalVariable(name: "dirlen", scope: !11069, file: !11070, line: 51, type: !149)
!11086 = !DILocation(line: 51, column: 10, scope: !11069)
!11087 = !DILocation(line: 51, column: 19, scope: !11069)
!11088 = !DILocation(line: 51, column: 29, scope: !11069)
!11089 = !DILocation(line: 51, column: 27, scope: !11069)
!11090 = !DILocation(line: 51, column: 35, scope: !11069)
!11091 = !DILocation(line: 51, column: 33, scope: !11069)
!11092 = !DILocalVariable(name: "baselen", scope: !11069, file: !11070, line: 52, type: !149)
!11093 = !DILocation(line: 52, column: 10, scope: !11069)
!11094 = !DILocation(line: 52, column: 28, scope: !11069)
!11095 = !DILocation(line: 52, column: 20, scope: !11069)
!11096 = !DILocalVariable(name: "sep", scope: !11069, file: !11070, line: 53, type: !144)
!11097 = !DILocation(line: 53, column: 8, scope: !11069)
!11098 = !DILocation(line: 54, column: 7, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11069, file: !11070, line: 54, column: 7)
!11100 = !DILocation(line: 54, column: 7, scope: !11069)
!11101 = !DILocation(line: 57, column: 13, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !11070, line: 57, column: 11)
!11103 = distinct !DILexicalBlock(scope: !11099, file: !11070, line: 55, column: 5)
!11104 = !DILocation(line: 57, column: 39, scope: !11102)
!11105 = !DILocation(line: 57, column: 44, scope: !11102)
!11106 = !DILocation(line: 57, column: 11, scope: !11103)
!11107 = !DILocation(line: 58, column: 13, scope: !11102)
!11108 = !DILocation(line: 58, column: 9, scope: !11102)
!11109 = !DILocation(line: 59, column: 5, scope: !11103)
!11110 = !DILocation(line: 60, column: 12, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11099, file: !11070, line: 60, column: 12)
!11112 = !DILocation(line: 60, column: 12, scope: !11099)
!11113 = !DILocation(line: 67, column: 11, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11111, file: !11070, line: 61, column: 5)
!11115 = !DILocation(line: 68, column: 5, scope: !11114)
!11116 = !DILocalVariable(name: "p_concat", scope: !11069, file: !11070, line: 70, type: !143)
!11117 = !DILocation(line: 70, column: 9, scope: !11069)
!11118 = !DILocation(line: 70, column: 28, scope: !11069)
!11119 = !DILocation(line: 70, column: 38, scope: !11069)
!11120 = !DILocation(line: 70, column: 42, scope: !11069)
!11121 = !DILocation(line: 70, column: 37, scope: !11069)
!11122 = !DILocation(line: 70, column: 35, scope: !11069)
!11123 = !DILocation(line: 70, column: 54, scope: !11069)
!11124 = !DILocation(line: 70, column: 52, scope: !11069)
!11125 = !DILocation(line: 70, column: 62, scope: !11069)
!11126 = !DILocation(line: 70, column: 20, scope: !11069)
!11127 = !DILocalVariable(name: "p", scope: !11069, file: !11070, line: 71, type: !143)
!11128 = !DILocation(line: 71, column: 9, scope: !11069)
!11129 = !DILocation(line: 73, column: 7, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11069, file: !11070, line: 73, column: 7)
!11131 = !DILocation(line: 73, column: 16, scope: !11130)
!11132 = !DILocation(line: 73, column: 7, scope: !11069)
!11133 = !DILocation(line: 74, column: 5, scope: !11130)
!11134 = !DILocation(line: 76, column: 16, scope: !11069)
!11135 = !DILocation(line: 76, column: 26, scope: !11069)
!11136 = !DILocation(line: 76, column: 31, scope: !11069)
!11137 = !DILocation(line: 76, column: 7, scope: !11069)
!11138 = !DILocation(line: 76, column: 5, scope: !11069)
!11139 = !DILocation(line: 77, column: 8, scope: !11069)
!11140 = !DILocation(line: 77, column: 4, scope: !11069)
!11141 = !DILocation(line: 77, column: 6, scope: !11069)
!11142 = !DILocation(line: 78, column: 8, scope: !11069)
!11143 = !DILocation(line: 78, column: 12, scope: !11069)
!11144 = !DILocation(line: 78, column: 5, scope: !11069)
!11145 = !DILocation(line: 80, column: 7, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11069, file: !11070, line: 80, column: 7)
!11147 = !DILocation(line: 80, column: 7, scope: !11069)
!11148 = !DILocation(line: 81, column: 23, scope: !11146)
!11149 = !DILocation(line: 81, column: 6, scope: !11146)
!11150 = !DILocation(line: 81, column: 21, scope: !11146)
!11151 = !DILocation(line: 81, column: 5, scope: !11146)
!11152 = !DILocation(line: 83, column: 16, scope: !11069)
!11153 = !DILocation(line: 83, column: 19, scope: !11069)
!11154 = !DILocation(line: 83, column: 25, scope: !11069)
!11155 = !DILocation(line: 83, column: 7, scope: !11069)
!11156 = !DILocation(line: 83, column: 5, scope: !11069)
!11157 = !DILocation(line: 84, column: 4, scope: !11069)
!11158 = !DILocation(line: 84, column: 6, scope: !11069)
!11159 = !DILocation(line: 86, column: 10, scope: !11069)
!11160 = !DILocation(line: 86, column: 3, scope: !11069)
!11161 = !DILocation(line: 87, column: 1, scope: !11069)
!11162 = distinct !DISubprogram(name: "filevercmp", scope: !11163, file: !11163, line: 125, type: !714, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1824, retainedNodes: !152)
!11163 = !DIFile(filename: "lib/filevercmp.c", directory: "/home/mohamad/clone/coreutils")
!11164 = !DILocalVariable(name: "s1", arg: 1, scope: !11162, file: !11163, line: 125, type: !146)
!11165 = !DILocation(line: 125, column: 25, scope: !11162)
!11166 = !DILocalVariable(name: "s2", arg: 2, scope: !11162, file: !11163, line: 125, type: !146)
!11167 = !DILocation(line: 125, column: 41, scope: !11162)
!11168 = !DILocalVariable(name: "s1_pos", scope: !11162, file: !11163, line: 127, type: !146)
!11169 = !DILocation(line: 127, column: 15, scope: !11162)
!11170 = !DILocalVariable(name: "s2_pos", scope: !11162, file: !11163, line: 128, type: !146)
!11171 = !DILocation(line: 128, column: 15, scope: !11162)
!11172 = !DILocalVariable(name: "s1_suffix", scope: !11162, file: !11163, line: 129, type: !146)
!11173 = !DILocation(line: 129, column: 15, scope: !11162)
!11174 = !DILocalVariable(name: "s2_suffix", scope: !11162, file: !11163, line: 129, type: !146)
!11175 = !DILocation(line: 129, column: 27, scope: !11162)
!11176 = !DILocalVariable(name: "s1_len", scope: !11162, file: !11163, line: 130, type: !149)
!11177 = !DILocation(line: 130, column: 10, scope: !11162)
!11178 = !DILocalVariable(name: "s2_len", scope: !11162, file: !11163, line: 130, type: !149)
!11179 = !DILocation(line: 130, column: 18, scope: !11162)
!11180 = !DILocalVariable(name: "result", scope: !11162, file: !11163, line: 131, type: !27)
!11181 = !DILocation(line: 131, column: 7, scope: !11162)
!11182 = !DILocalVariable(name: "simple_cmp", scope: !11162, file: !11163, line: 134, type: !27)
!11183 = !DILocation(line: 134, column: 7, scope: !11162)
!11184 = !DILocation(line: 134, column: 28, scope: !11162)
!11185 = !DILocation(line: 134, column: 32, scope: !11162)
!11186 = !DILocation(line: 134, column: 20, scope: !11162)
!11187 = !DILocation(line: 135, column: 7, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 135, column: 7)
!11189 = !DILocation(line: 135, column: 18, scope: !11188)
!11190 = !DILocation(line: 135, column: 7, scope: !11162)
!11191 = !DILocation(line: 136, column: 5, scope: !11188)
!11192 = !DILocation(line: 139, column: 9, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 139, column: 7)
!11194 = !DILocation(line: 139, column: 8, scope: !11193)
!11195 = !DILocation(line: 139, column: 7, scope: !11162)
!11196 = !DILocation(line: 140, column: 5, scope: !11193)
!11197 = !DILocation(line: 141, column: 9, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 141, column: 7)
!11199 = !DILocation(line: 141, column: 8, scope: !11198)
!11200 = !DILocation(line: 141, column: 7, scope: !11162)
!11201 = !DILocation(line: 142, column: 5, scope: !11198)
!11202 = !DILocation(line: 143, column: 25, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 143, column: 7)
!11204 = !DILocation(line: 143, column: 12, scope: !11203)
!11205 = !DILocation(line: 143, column: 9, scope: !11203)
!11206 = !DILocation(line: 143, column: 7, scope: !11162)
!11207 = !DILocation(line: 144, column: 5, scope: !11203)
!11208 = !DILocation(line: 145, column: 25, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 145, column: 7)
!11210 = !DILocation(line: 145, column: 12, scope: !11209)
!11211 = !DILocation(line: 145, column: 9, scope: !11209)
!11212 = !DILocation(line: 145, column: 7, scope: !11162)
!11213 = !DILocation(line: 146, column: 5, scope: !11209)
!11214 = !DILocation(line: 147, column: 26, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 147, column: 7)
!11216 = !DILocation(line: 147, column: 12, scope: !11215)
!11217 = !DILocation(line: 147, column: 9, scope: !11215)
!11218 = !DILocation(line: 147, column: 7, scope: !11162)
!11219 = !DILocation(line: 148, column: 5, scope: !11215)
!11220 = !DILocation(line: 149, column: 26, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 149, column: 7)
!11222 = !DILocation(line: 149, column: 12, scope: !11221)
!11223 = !DILocation(line: 149, column: 9, scope: !11221)
!11224 = !DILocation(line: 149, column: 7, scope: !11162)
!11225 = !DILocation(line: 150, column: 5, scope: !11221)
!11226 = !DILocation(line: 153, column: 8, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 153, column: 7)
!11228 = !DILocation(line: 153, column: 7, scope: !11227)
!11229 = !DILocation(line: 153, column: 11, scope: !11227)
!11230 = !DILocation(line: 153, column: 18, scope: !11227)
!11231 = !DILocation(line: 153, column: 22, scope: !11227)
!11232 = !DILocation(line: 153, column: 21, scope: !11227)
!11233 = !DILocation(line: 153, column: 25, scope: !11227)
!11234 = !DILocation(line: 153, column: 7, scope: !11162)
!11235 = !DILocation(line: 154, column: 5, scope: !11227)
!11236 = !DILocation(line: 155, column: 8, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 155, column: 7)
!11238 = !DILocation(line: 155, column: 7, scope: !11237)
!11239 = !DILocation(line: 155, column: 11, scope: !11237)
!11240 = !DILocation(line: 155, column: 18, scope: !11237)
!11241 = !DILocation(line: 155, column: 22, scope: !11237)
!11242 = !DILocation(line: 155, column: 21, scope: !11237)
!11243 = !DILocation(line: 155, column: 25, scope: !11237)
!11244 = !DILocation(line: 155, column: 7, scope: !11162)
!11245 = !DILocation(line: 156, column: 5, scope: !11237)
!11246 = !DILocation(line: 157, column: 8, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 157, column: 7)
!11248 = !DILocation(line: 157, column: 7, scope: !11247)
!11249 = !DILocation(line: 157, column: 11, scope: !11247)
!11250 = !DILocation(line: 157, column: 18, scope: !11247)
!11251 = !DILocation(line: 157, column: 22, scope: !11247)
!11252 = !DILocation(line: 157, column: 21, scope: !11247)
!11253 = !DILocation(line: 157, column: 25, scope: !11247)
!11254 = !DILocation(line: 157, column: 7, scope: !11162)
!11255 = !DILocation(line: 159, column: 9, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11247, file: !11163, line: 158, column: 5)
!11257 = !DILocation(line: 160, column: 9, scope: !11256)
!11258 = !DILocation(line: 161, column: 5, scope: !11256)
!11259 = !DILocation(line: 164, column: 12, scope: !11162)
!11260 = !DILocation(line: 164, column: 10, scope: !11162)
!11261 = !DILocation(line: 165, column: 12, scope: !11162)
!11262 = !DILocation(line: 165, column: 10, scope: !11162)
!11263 = !DILocation(line: 166, column: 15, scope: !11162)
!11264 = !DILocation(line: 166, column: 13, scope: !11162)
!11265 = !DILocation(line: 167, column: 15, scope: !11162)
!11266 = !DILocation(line: 167, column: 13, scope: !11162)
!11267 = !DILocation(line: 168, column: 13, scope: !11162)
!11268 = !DILocation(line: 168, column: 25, scope: !11162)
!11269 = !DILocation(line: 168, column: 37, scope: !11162)
!11270 = !DILocation(line: 168, column: 47, scope: !11162)
!11271 = !DILocation(line: 168, column: 45, scope: !11162)
!11272 = !DILocation(line: 168, column: 10, scope: !11162)
!11273 = !DILocation(line: 169, column: 13, scope: !11162)
!11274 = !DILocation(line: 169, column: 25, scope: !11162)
!11275 = !DILocation(line: 169, column: 37, scope: !11162)
!11276 = !DILocation(line: 169, column: 47, scope: !11162)
!11277 = !DILocation(line: 169, column: 45, scope: !11162)
!11278 = !DILocation(line: 169, column: 10, scope: !11162)
!11279 = !DILocation(line: 172, column: 8, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11162, file: !11163, line: 172, column: 7)
!11281 = !DILocation(line: 172, column: 18, scope: !11280)
!11282 = !DILocation(line: 172, column: 21, scope: !11280)
!11283 = !DILocation(line: 172, column: 32, scope: !11280)
!11284 = !DILocation(line: 172, column: 36, scope: !11280)
!11285 = !DILocation(line: 172, column: 46, scope: !11280)
!11286 = !DILocation(line: 172, column: 43, scope: !11280)
!11287 = !DILocation(line: 173, column: 7, scope: !11280)
!11288 = !DILocation(line: 173, column: 24, scope: !11280)
!11289 = !DILocation(line: 173, column: 28, scope: !11280)
!11290 = !DILocation(line: 173, column: 32, scope: !11280)
!11291 = !DILocation(line: 173, column: 15, scope: !11280)
!11292 = !DILocation(line: 173, column: 12, scope: !11280)
!11293 = !DILocation(line: 172, column: 7, scope: !11162)
!11294 = !DILocation(line: 175, column: 16, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11280, file: !11163, line: 174, column: 5)
!11296 = !DILocation(line: 175, column: 25, scope: !11295)
!11297 = !DILocation(line: 175, column: 23, scope: !11295)
!11298 = !DILocation(line: 175, column: 14, scope: !11295)
!11299 = !DILocation(line: 176, column: 16, scope: !11295)
!11300 = !DILocation(line: 176, column: 25, scope: !11295)
!11301 = !DILocation(line: 176, column: 23, scope: !11295)
!11302 = !DILocation(line: 176, column: 14, scope: !11295)
!11303 = !DILocation(line: 177, column: 5, scope: !11295)
!11304 = !DILocation(line: 179, column: 23, scope: !11162)
!11305 = !DILocation(line: 179, column: 27, scope: !11162)
!11306 = !DILocation(line: 179, column: 35, scope: !11162)
!11307 = !DILocation(line: 179, column: 39, scope: !11162)
!11308 = !DILocation(line: 179, column: 12, scope: !11162)
!11309 = !DILocation(line: 179, column: 10, scope: !11162)
!11310 = !DILocation(line: 180, column: 10, scope: !11162)
!11311 = !DILocation(line: 180, column: 17, scope: !11162)
!11312 = !DILocation(line: 180, column: 24, scope: !11162)
!11313 = !DILocation(line: 180, column: 37, scope: !11162)
!11314 = !DILocation(line: 180, column: 3, scope: !11162)
!11315 = !DILocation(line: 181, column: 1, scope: !11162)
!11316 = distinct !DISubprogram(name: "match_suffix", scope: !11163, file: !11163, line: 34, type: !1827, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1824, retainedNodes: !152)
!11317 = !DILocalVariable(name: "str", arg: 1, scope: !11316, file: !11163, line: 34, type: !145)
!11318 = !DILocation(line: 34, column: 28, scope: !11316)
!11319 = !DILocalVariable(name: "match", scope: !11316, file: !11163, line: 36, type: !146)
!11320 = !DILocation(line: 36, column: 15, scope: !11316)
!11321 = !DILocalVariable(name: "read_alpha", scope: !11316, file: !11163, line: 37, type: !141)
!11322 = !DILocation(line: 37, column: 8, scope: !11316)
!11323 = !DILocation(line: 38, column: 3, scope: !11316)
!11324 = !DILocation(line: 38, column: 12, scope: !11316)
!11325 = !DILocation(line: 38, column: 11, scope: !11316)
!11326 = !DILocation(line: 38, column: 10, scope: !11316)
!11327 = !DILocation(line: 40, column: 11, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !11163, line: 40, column: 11)
!11329 = distinct !DILexicalBlock(scope: !11316, file: !11163, line: 39, column: 5)
!11330 = !DILocation(line: 40, column: 11, scope: !11329)
!11331 = !DILocation(line: 42, column: 22, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11328, file: !11163, line: 41, column: 9)
!11333 = !DILocation(line: 43, column: 29, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11332, file: !11163, line: 43, column: 15)
!11335 = !DILocation(line: 43, column: 28, scope: !11334)
!11336 = !DILocation(line: 43, column: 27, scope: !11334)
!11337 = !DILocation(line: 43, column: 16, scope: !11334)
!11338 = !DILocation(line: 43, column: 34, scope: !11334)
!11339 = !DILocation(line: 43, column: 46, scope: !11334)
!11340 = !DILocation(line: 43, column: 45, scope: !11334)
!11341 = !DILocation(line: 43, column: 44, scope: !11334)
!11342 = !DILocation(line: 43, column: 41, scope: !11334)
!11343 = !DILocation(line: 43, column: 15, scope: !11332)
!11344 = !DILocation(line: 44, column: 19, scope: !11334)
!11345 = !DILocation(line: 44, column: 13, scope: !11334)
!11346 = !DILocation(line: 45, column: 9, scope: !11332)
!11347 = !DILocation(line: 46, column: 25, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11328, file: !11163, line: 46, column: 16)
!11349 = !DILocation(line: 46, column: 24, scope: !11348)
!11350 = !DILocation(line: 46, column: 23, scope: !11348)
!11351 = !DILocation(line: 46, column: 20, scope: !11348)
!11352 = !DILocation(line: 46, column: 16, scope: !11328)
!11353 = !DILocation(line: 48, column: 22, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11348, file: !11163, line: 47, column: 9)
!11355 = !DILocation(line: 49, column: 16, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11354, file: !11163, line: 49, column: 15)
!11357 = !DILocation(line: 49, column: 15, scope: !11354)
!11358 = !DILocation(line: 50, column: 22, scope: !11356)
!11359 = !DILocation(line: 50, column: 21, scope: !11356)
!11360 = !DILocation(line: 50, column: 19, scope: !11356)
!11361 = !DILocation(line: 50, column: 13, scope: !11356)
!11362 = !DILocation(line: 51, column: 9, scope: !11354)
!11363 = !DILocation(line: 52, column: 30, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11348, file: !11163, line: 52, column: 16)
!11365 = !DILocation(line: 52, column: 29, scope: !11364)
!11366 = !DILocation(line: 52, column: 28, scope: !11364)
!11367 = !DILocation(line: 52, column: 17, scope: !11364)
!11368 = !DILocation(line: 52, column: 35, scope: !11364)
!11369 = !DILocation(line: 52, column: 47, scope: !11364)
!11370 = !DILocation(line: 52, column: 46, scope: !11364)
!11371 = !DILocation(line: 52, column: 45, scope: !11364)
!11372 = !DILocation(line: 52, column: 42, scope: !11364)
!11373 = !DILocation(line: 52, column: 16, scope: !11348)
!11374 = !DILocation(line: 53, column: 15, scope: !11364)
!11375 = !DILocation(line: 53, column: 9, scope: !11364)
!11376 = !DILocation(line: 54, column: 9, scope: !11329)
!11377 = !DILocation(line: 54, column: 13, scope: !11329)
!11378 = distinct !{!11378, !11323, !11379}
!11379 = !DILocation(line: 55, column: 5, scope: !11316)
!11380 = !DILocation(line: 56, column: 10, scope: !11316)
!11381 = !DILocation(line: 56, column: 3, scope: !11316)
!11382 = distinct !DISubprogram(name: "verrevcmp", scope: !11163, file: !11163, line: 84, type: !1829, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1824, retainedNodes: !152)
!11383 = !DILocalVariable(name: "s1", arg: 1, scope: !11382, file: !11163, line: 84, type: !146)
!11384 = !DILocation(line: 84, column: 24, scope: !11382)
!11385 = !DILocalVariable(name: "s1_len", arg: 2, scope: !11382, file: !11163, line: 84, type: !149)
!11386 = !DILocation(line: 84, column: 35, scope: !11382)
!11387 = !DILocalVariable(name: "s2", arg: 3, scope: !11382, file: !11163, line: 84, type: !146)
!11388 = !DILocation(line: 84, column: 55, scope: !11382)
!11389 = !DILocalVariable(name: "s2_len", arg: 4, scope: !11382, file: !11163, line: 84, type: !149)
!11390 = !DILocation(line: 84, column: 66, scope: !11382)
!11391 = !DILocalVariable(name: "s1_pos", scope: !11382, file: !11163, line: 86, type: !149)
!11392 = !DILocation(line: 86, column: 10, scope: !11382)
!11393 = !DILocalVariable(name: "s2_pos", scope: !11382, file: !11163, line: 87, type: !149)
!11394 = !DILocation(line: 87, column: 10, scope: !11382)
!11395 = !DILocation(line: 88, column: 3, scope: !11382)
!11396 = !DILocation(line: 88, column: 10, scope: !11382)
!11397 = !DILocation(line: 88, column: 19, scope: !11382)
!11398 = !DILocation(line: 88, column: 17, scope: !11382)
!11399 = !DILocation(line: 88, column: 26, scope: !11382)
!11400 = !DILocation(line: 88, column: 29, scope: !11382)
!11401 = !DILocation(line: 88, column: 38, scope: !11382)
!11402 = !DILocation(line: 88, column: 36, scope: !11382)
!11403 = !DILocalVariable(name: "first_diff", scope: !11404, file: !11163, line: 90, type: !27)
!11404 = distinct !DILexicalBlock(scope: !11382, file: !11163, line: 89, column: 5)
!11405 = !DILocation(line: 90, column: 11, scope: !11404)
!11406 = !DILocation(line: 91, column: 7, scope: !11404)
!11407 = !DILocation(line: 91, column: 15, scope: !11404)
!11408 = !DILocation(line: 91, column: 24, scope: !11404)
!11409 = !DILocation(line: 91, column: 22, scope: !11404)
!11410 = !DILocation(line: 91, column: 31, scope: !11404)
!11411 = !DILocation(line: 91, column: 46, scope: !11404)
!11412 = !DILocation(line: 91, column: 49, scope: !11404)
!11413 = !DILocation(line: 91, column: 35, scope: !11404)
!11414 = !DILocation(line: 92, column: 14, scope: !11404)
!11415 = !DILocation(line: 92, column: 18, scope: !11404)
!11416 = !DILocation(line: 92, column: 27, scope: !11404)
!11417 = !DILocation(line: 92, column: 25, scope: !11404)
!11418 = !DILocation(line: 92, column: 34, scope: !11404)
!11419 = !DILocation(line: 92, column: 49, scope: !11404)
!11420 = !DILocation(line: 92, column: 52, scope: !11404)
!11421 = !DILocation(line: 92, column: 38, scope: !11404)
!11422 = !DILocation(line: 92, column: 37, scope: !11404)
!11423 = !DILocation(line: 0, scope: !11404)
!11424 = !DILocalVariable(name: "s1_c", scope: !11425, file: !11163, line: 94, type: !27)
!11425 = distinct !DILexicalBlock(scope: !11404, file: !11163, line: 93, column: 9)
!11426 = !DILocation(line: 94, column: 15, scope: !11425)
!11427 = !DILocation(line: 94, column: 23, scope: !11425)
!11428 = !DILocation(line: 94, column: 33, scope: !11425)
!11429 = !DILocation(line: 94, column: 30, scope: !11425)
!11430 = !DILocation(line: 94, column: 22, scope: !11425)
!11431 = !DILocation(line: 94, column: 54, scope: !11425)
!11432 = !DILocation(line: 94, column: 57, scope: !11425)
!11433 = !DILocation(line: 94, column: 47, scope: !11425)
!11434 = !DILocalVariable(name: "s2_c", scope: !11425, file: !11163, line: 95, type: !27)
!11435 = !DILocation(line: 95, column: 15, scope: !11425)
!11436 = !DILocation(line: 95, column: 23, scope: !11425)
!11437 = !DILocation(line: 95, column: 33, scope: !11425)
!11438 = !DILocation(line: 95, column: 30, scope: !11425)
!11439 = !DILocation(line: 95, column: 22, scope: !11425)
!11440 = !DILocation(line: 95, column: 54, scope: !11425)
!11441 = !DILocation(line: 95, column: 57, scope: !11425)
!11442 = !DILocation(line: 95, column: 47, scope: !11425)
!11443 = !DILocation(line: 96, column: 15, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11425, file: !11163, line: 96, column: 15)
!11445 = !DILocation(line: 96, column: 23, scope: !11444)
!11446 = !DILocation(line: 96, column: 20, scope: !11444)
!11447 = !DILocation(line: 96, column: 15, scope: !11425)
!11448 = !DILocation(line: 97, column: 20, scope: !11444)
!11449 = !DILocation(line: 97, column: 27, scope: !11444)
!11450 = !DILocation(line: 97, column: 25, scope: !11444)
!11451 = !DILocation(line: 97, column: 13, scope: !11444)
!11452 = !DILocation(line: 98, column: 17, scope: !11425)
!11453 = !DILocation(line: 99, column: 17, scope: !11425)
!11454 = distinct !{!11454, !11406, !11455}
!11455 = !DILocation(line: 100, column: 9, scope: !11404)
!11456 = !DILocation(line: 101, column: 7, scope: !11404)
!11457 = !DILocation(line: 101, column: 14, scope: !11404)
!11458 = !DILocation(line: 101, column: 17, scope: !11404)
!11459 = !DILocation(line: 101, column: 25, scope: !11404)
!11460 = !DILocation(line: 102, column: 15, scope: !11404)
!11461 = distinct !{!11461, !11456, !11460}
!11462 = !DILocation(line: 103, column: 7, scope: !11404)
!11463 = !DILocation(line: 103, column: 14, scope: !11404)
!11464 = !DILocation(line: 103, column: 17, scope: !11404)
!11465 = !DILocation(line: 103, column: 25, scope: !11404)
!11466 = !DILocation(line: 104, column: 15, scope: !11404)
!11467 = distinct !{!11467, !11462, !11466}
!11468 = !DILocation(line: 105, column: 7, scope: !11404)
!11469 = !DILocation(line: 105, column: 25, scope: !11404)
!11470 = !DILocation(line: 105, column: 28, scope: !11404)
!11471 = !DILocation(line: 105, column: 14, scope: !11404)
!11472 = !DILocation(line: 105, column: 37, scope: !11404)
!11473 = !DILocation(line: 105, column: 51, scope: !11404)
!11474 = !DILocation(line: 105, column: 54, scope: !11404)
!11475 = !DILocation(line: 105, column: 40, scope: !11404)
!11476 = !DILocation(line: 107, column: 16, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11478, file: !11163, line: 107, column: 15)
!11478 = distinct !DILexicalBlock(scope: !11404, file: !11163, line: 106, column: 9)
!11479 = !DILocation(line: 107, column: 15, scope: !11478)
!11480 = !DILocation(line: 108, column: 26, scope: !11477)
!11481 = !DILocation(line: 108, column: 29, scope: !11477)
!11482 = !DILocation(line: 108, column: 39, scope: !11477)
!11483 = !DILocation(line: 108, column: 42, scope: !11477)
!11484 = !DILocation(line: 108, column: 37, scope: !11477)
!11485 = !DILocation(line: 108, column: 24, scope: !11477)
!11486 = !DILocation(line: 108, column: 13, scope: !11477)
!11487 = !DILocation(line: 109, column: 17, scope: !11478)
!11488 = !DILocation(line: 110, column: 17, scope: !11478)
!11489 = distinct !{!11489, !11468, !11490}
!11490 = !DILocation(line: 111, column: 9, scope: !11404)
!11491 = !DILocation(line: 112, column: 22, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11404, file: !11163, line: 112, column: 11)
!11493 = !DILocation(line: 112, column: 25, scope: !11492)
!11494 = !DILocation(line: 112, column: 11, scope: !11492)
!11495 = !DILocation(line: 112, column: 11, scope: !11404)
!11496 = !DILocation(line: 113, column: 9, scope: !11492)
!11497 = !DILocation(line: 114, column: 22, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11404, file: !11163, line: 114, column: 11)
!11499 = !DILocation(line: 114, column: 25, scope: !11498)
!11500 = !DILocation(line: 114, column: 11, scope: !11498)
!11501 = !DILocation(line: 114, column: 11, scope: !11404)
!11502 = !DILocation(line: 115, column: 9, scope: !11498)
!11503 = !DILocation(line: 116, column: 11, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11404, file: !11163, line: 116, column: 11)
!11505 = !DILocation(line: 116, column: 11, scope: !11404)
!11506 = !DILocation(line: 117, column: 16, scope: !11504)
!11507 = !DILocation(line: 117, column: 9, scope: !11504)
!11508 = distinct !{!11508, !11395, !11509}
!11509 = !DILocation(line: 118, column: 5, scope: !11382)
!11510 = !DILocation(line: 119, column: 3, scope: !11382)
!11511 = !DILocation(line: 120, column: 1, scope: !11382)
!11512 = distinct !DISubprogram(name: "order", scope: !11163, file: !11163, line: 61, type: !1831, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1824, retainedNodes: !152)
!11513 = !DILocalVariable(name: "c", arg: 1, scope: !11512, file: !11163, line: 61, type: !579)
!11514 = !DILocation(line: 61, column: 22, scope: !11512)
!11515 = !DILocation(line: 63, column: 18, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11512, file: !11163, line: 63, column: 7)
!11517 = !DILocation(line: 63, column: 7, scope: !11516)
!11518 = !DILocation(line: 63, column: 7, scope: !11512)
!11519 = !DILocation(line: 64, column: 5, scope: !11516)
!11520 = !DILocation(line: 65, column: 23, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11516, file: !11163, line: 65, column: 12)
!11522 = !DILocation(line: 65, column: 12, scope: !11521)
!11523 = !DILocation(line: 65, column: 12, scope: !11516)
!11524 = !DILocation(line: 66, column: 12, scope: !11521)
!11525 = !DILocation(line: 66, column: 5, scope: !11521)
!11526 = !DILocation(line: 67, column: 12, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11521, file: !11163, line: 67, column: 12)
!11528 = !DILocation(line: 67, column: 14, scope: !11527)
!11529 = !DILocation(line: 67, column: 12, scope: !11521)
!11530 = !DILocation(line: 68, column: 5, scope: !11527)
!11531 = !DILocation(line: 70, column: 18, scope: !11527)
!11532 = !DILocation(line: 70, column: 12, scope: !11527)
!11533 = !DILocation(line: 70, column: 20, scope: !11527)
!11534 = !DILocation(line: 70, column: 32, scope: !11527)
!11535 = !DILocation(line: 70, column: 5, scope: !11527)
!11536 = !DILocation(line: 71, column: 1, scope: !11512)
!11537 = distinct !DISubprogram(name: "gettime", scope: !11538, file: !11538, line: 29, type: !1836, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !152)
!11538 = !DIFile(filename: "lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!11539 = !DILocalVariable(name: "ts", arg: 1, scope: !11537, file: !11538, line: 29, type: !1838)
!11540 = !DILocation(line: 29, column: 27, scope: !11537)
!11541 = !DILocation(line: 32, column: 34, scope: !11537)
!11542 = !DILocation(line: 32, column: 3, scope: !11537)
!11543 = !DILocation(line: 39, column: 1, scope: !11537)
!11544 = distinct !DISubprogram(name: "current_timespec", scope: !11538, file: !11538, line: 44, type: !1843, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !152)
!11545 = !DILocalVariable(name: "ts", scope: !11544, file: !11538, line: 46, type: !1839)
!11546 = !DILocation(line: 46, column: 19, scope: !11544)
!11547 = !DILocation(line: 47, column: 3, scope: !11544)
!11548 = !DILocation(line: 48, column: 3, scope: !11544)
!11549 = distinct !DISubprogram(name: "hard_locale", scope: !11550, file: !11550, line: 38, type: !663, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1845, retainedNodes: !152)
!11550 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!11551 = !DILocalVariable(name: "category", arg: 1, scope: !11549, file: !11550, line: 38, type: !27)
!11552 = !DILocation(line: 38, column: 18, scope: !11549)
!11553 = !DILocalVariable(name: "hard", scope: !11549, file: !11550, line: 40, type: !141)
!11554 = !DILocation(line: 40, column: 8, scope: !11549)
!11555 = !DILocalVariable(name: "p", scope: !11549, file: !11550, line: 41, type: !146)
!11556 = !DILocation(line: 41, column: 15, scope: !11549)
!11557 = !DILocation(line: 41, column: 30, scope: !11549)
!11558 = !DILocation(line: 41, column: 19, scope: !11549)
!11559 = !DILocation(line: 43, column: 7, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11549, file: !11550, line: 43, column: 7)
!11561 = !DILocation(line: 43, column: 7, scope: !11549)
!11562 = !DILocation(line: 47, column: 23, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !11550, line: 47, column: 15)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !11550, line: 46, column: 9)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !11550, line: 45, column: 11)
!11566 = distinct !DILexicalBlock(scope: !11560, file: !11550, line: 44, column: 5)
!11567 = !DILocation(line: 47, column: 15, scope: !11563)
!11568 = !DILocation(line: 47, column: 31, scope: !11563)
!11569 = !DILocation(line: 47, column: 36, scope: !11563)
!11570 = !DILocation(line: 47, column: 47, scope: !11563)
!11571 = !DILocation(line: 47, column: 39, scope: !11563)
!11572 = !DILocation(line: 47, column: 59, scope: !11563)
!11573 = !DILocation(line: 47, column: 15, scope: !11564)
!11574 = !DILocation(line: 48, column: 18, scope: !11563)
!11575 = !DILocation(line: 48, column: 13, scope: !11563)
!11576 = !DILocation(line: 69, column: 5, scope: !11566)
!11577 = !DILocation(line: 71, column: 10, scope: !11549)
!11578 = !DILocation(line: 71, column: 3, scope: !11549)
!11579 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !1149, file: !1149, line: 150, type: !1143, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11580 = !DILocalVariable(name: "table", arg: 1, scope: !11579, file: !1149, line: 150, type: !1145)
!11581 = !DILocation(line: 150, column: 39, scope: !11579)
!11582 = !DILocation(line: 152, column: 10, scope: !11579)
!11583 = !DILocation(line: 152, column: 17, scope: !11579)
!11584 = !{!11585, !2499, i64 16}
!11585 = !{!"hash_table", !2475, i64 0, !2475, i64 8, !2499, i64 16, !2499, i64 24, !2499, i64 32, !2475, i64 40, !2475, i64 48, !2475, i64 56, !2475, i64 64, !2475, i64 72}
!11586 = !DILocation(line: 152, column: 3, scope: !11579)
!11587 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !1149, file: !1149, line: 158, type: !1143, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11588 = !DILocalVariable(name: "table", arg: 1, scope: !11587, file: !1149, line: 158, type: !1145)
!11589 = !DILocation(line: 158, column: 44, scope: !11587)
!11590 = !DILocation(line: 160, column: 10, scope: !11587)
!11591 = !DILocation(line: 160, column: 17, scope: !11587)
!11592 = !{!11585, !2499, i64 24}
!11593 = !DILocation(line: 160, column: 3, scope: !11587)
!11594 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !1149, file: !1149, line: 166, type: !1143, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11595 = !DILocalVariable(name: "table", arg: 1, scope: !11594, file: !1149, line: 166, type: !1145)
!11596 = !DILocation(line: 166, column: 39, scope: !11594)
!11597 = !DILocation(line: 168, column: 10, scope: !11594)
!11598 = !DILocation(line: 168, column: 17, scope: !11594)
!11599 = !{!11585, !2499, i64 32}
!11600 = !DILocation(line: 168, column: 3, scope: !11594)
!11601 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !1149, file: !1149, line: 174, type: !1143, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11602 = !DILocalVariable(name: "table", arg: 1, scope: !11601, file: !1149, line: 174, type: !1145)
!11603 = !DILocation(line: 174, column: 47, scope: !11601)
!11604 = !DILocalVariable(name: "bucket", scope: !11601, file: !1149, line: 176, type: !1158)
!11605 = !DILocation(line: 176, column: 28, scope: !11601)
!11606 = !DILocalVariable(name: "max_bucket_length", scope: !11601, file: !1149, line: 177, type: !149)
!11607 = !DILocation(line: 177, column: 10, scope: !11601)
!11608 = !DILocation(line: 179, column: 17, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11601, file: !1149, line: 179, column: 3)
!11610 = !DILocation(line: 179, column: 24, scope: !11609)
!11611 = !{!11585, !2475, i64 0}
!11612 = !DILocation(line: 179, column: 15, scope: !11609)
!11613 = !DILocation(line: 179, column: 8, scope: !11609)
!11614 = !DILocation(line: 179, column: 32, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11609, file: !1149, line: 179, column: 3)
!11616 = !DILocation(line: 179, column: 41, scope: !11615)
!11617 = !DILocation(line: 179, column: 48, scope: !11615)
!11618 = !{!11585, !2475, i64 8}
!11619 = !DILocation(line: 179, column: 39, scope: !11615)
!11620 = !DILocation(line: 179, column: 3, scope: !11609)
!11621 = !DILocation(line: 181, column: 11, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11623, file: !1149, line: 181, column: 11)
!11623 = distinct !DILexicalBlock(scope: !11615, file: !1149, line: 180, column: 5)
!11624 = !DILocation(line: 181, column: 19, scope: !11622)
!11625 = !{!11626, !2475, i64 0}
!11626 = !{!"hash_entry", !2475, i64 0, !2475, i64 8}
!11627 = !DILocation(line: 181, column: 11, scope: !11623)
!11628 = !DILocalVariable(name: "cursor", scope: !11629, file: !1149, line: 183, type: !1158)
!11629 = distinct !DILexicalBlock(scope: !11622, file: !1149, line: 182, column: 9)
!11630 = !DILocation(line: 183, column: 36, scope: !11629)
!11631 = !DILocation(line: 183, column: 45, scope: !11629)
!11632 = !DILocalVariable(name: "bucket_length", scope: !11629, file: !1149, line: 184, type: !149)
!11633 = !DILocation(line: 184, column: 18, scope: !11629)
!11634 = !DILocation(line: 186, column: 11, scope: !11629)
!11635 = !DILocation(line: 186, column: 27, scope: !11629)
!11636 = !DILocation(line: 186, column: 35, scope: !11629)
!11637 = !{!11626, !2475, i64 8}
!11638 = !DILocation(line: 186, column: 25, scope: !11629)
!11639 = !DILocation(line: 186, column: 41, scope: !11629)
!11640 = !DILocation(line: 187, column: 26, scope: !11629)
!11641 = distinct !{!11641, !11634, !11640}
!11642 = !DILocation(line: 189, column: 15, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11629, file: !1149, line: 189, column: 15)
!11644 = !DILocation(line: 189, column: 31, scope: !11643)
!11645 = !DILocation(line: 189, column: 29, scope: !11643)
!11646 = !DILocation(line: 189, column: 15, scope: !11629)
!11647 = !DILocation(line: 190, column: 33, scope: !11643)
!11648 = !DILocation(line: 190, column: 31, scope: !11643)
!11649 = !DILocation(line: 190, column: 13, scope: !11643)
!11650 = !DILocation(line: 191, column: 9, scope: !11629)
!11651 = !DILocation(line: 192, column: 5, scope: !11623)
!11652 = !DILocation(line: 179, column: 68, scope: !11615)
!11653 = !DILocation(line: 179, column: 3, scope: !11615)
!11654 = distinct !{!11654, !11620, !11655}
!11655 = !DILocation(line: 192, column: 5, scope: !11609)
!11656 = !DILocation(line: 194, column: 10, scope: !11601)
!11657 = !DILocation(line: 194, column: 3, scope: !11601)
!11658 = distinct !DISubprogram(name: "hash_table_ok", scope: !1149, file: !1149, line: 201, type: !1184, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11659 = !DILocalVariable(name: "table", arg: 1, scope: !11658, file: !1149, line: 201, type: !1145)
!11660 = !DILocation(line: 201, column: 34, scope: !11658)
!11661 = !DILocalVariable(name: "bucket", scope: !11658, file: !1149, line: 203, type: !1158)
!11662 = !DILocation(line: 203, column: 28, scope: !11658)
!11663 = !DILocalVariable(name: "n_buckets_used", scope: !11658, file: !1149, line: 204, type: !149)
!11664 = !DILocation(line: 204, column: 10, scope: !11658)
!11665 = !DILocalVariable(name: "n_entries", scope: !11658, file: !1149, line: 205, type: !149)
!11666 = !DILocation(line: 205, column: 10, scope: !11658)
!11667 = !DILocation(line: 207, column: 17, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11658, file: !1149, line: 207, column: 3)
!11669 = !DILocation(line: 207, column: 24, scope: !11668)
!11670 = !DILocation(line: 207, column: 15, scope: !11668)
!11671 = !DILocation(line: 207, column: 8, scope: !11668)
!11672 = !DILocation(line: 207, column: 32, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11668, file: !1149, line: 207, column: 3)
!11674 = !DILocation(line: 207, column: 41, scope: !11673)
!11675 = !DILocation(line: 207, column: 48, scope: !11673)
!11676 = !DILocation(line: 207, column: 39, scope: !11673)
!11677 = !DILocation(line: 207, column: 3, scope: !11668)
!11678 = !DILocation(line: 209, column: 11, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11680, file: !1149, line: 209, column: 11)
!11680 = distinct !DILexicalBlock(scope: !11673, file: !1149, line: 208, column: 5)
!11681 = !DILocation(line: 209, column: 19, scope: !11679)
!11682 = !DILocation(line: 209, column: 11, scope: !11680)
!11683 = !DILocalVariable(name: "cursor", scope: !11684, file: !1149, line: 211, type: !1158)
!11684 = distinct !DILexicalBlock(scope: !11679, file: !1149, line: 210, column: 9)
!11685 = !DILocation(line: 211, column: 36, scope: !11684)
!11686 = !DILocation(line: 211, column: 45, scope: !11684)
!11687 = !DILocation(line: 214, column: 25, scope: !11684)
!11688 = !DILocation(line: 215, column: 20, scope: !11684)
!11689 = !DILocation(line: 218, column: 11, scope: !11684)
!11690 = !DILocation(line: 218, column: 27, scope: !11684)
!11691 = !DILocation(line: 218, column: 35, scope: !11684)
!11692 = !DILocation(line: 218, column: 25, scope: !11684)
!11693 = !DILocation(line: 218, column: 41, scope: !11684)
!11694 = !DILocation(line: 219, column: 22, scope: !11684)
!11695 = distinct !{!11695, !11689, !11694}
!11696 = !DILocation(line: 220, column: 9, scope: !11684)
!11697 = !DILocation(line: 221, column: 5, scope: !11680)
!11698 = !DILocation(line: 207, column: 68, scope: !11673)
!11699 = !DILocation(line: 207, column: 3, scope: !11673)
!11700 = distinct !{!11700, !11677, !11701}
!11701 = !DILocation(line: 221, column: 5, scope: !11668)
!11702 = !DILocation(line: 223, column: 7, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11658, file: !1149, line: 223, column: 7)
!11704 = !DILocation(line: 223, column: 25, scope: !11703)
!11705 = !DILocation(line: 223, column: 32, scope: !11703)
!11706 = !DILocation(line: 223, column: 22, scope: !11703)
!11707 = !DILocation(line: 223, column: 47, scope: !11703)
!11708 = !DILocation(line: 223, column: 50, scope: !11703)
!11709 = !DILocation(line: 223, column: 63, scope: !11703)
!11710 = !DILocation(line: 223, column: 70, scope: !11703)
!11711 = !DILocation(line: 223, column: 60, scope: !11703)
!11712 = !DILocation(line: 223, column: 7, scope: !11658)
!11713 = !DILocation(line: 224, column: 5, scope: !11703)
!11714 = !DILocation(line: 226, column: 3, scope: !11658)
!11715 = !DILocation(line: 227, column: 1, scope: !11658)
!11716 = distinct !DISubprogram(name: "hash_print_statistics", scope: !1149, file: !1149, line: 230, type: !1186, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11717 = !DILocalVariable(name: "table", arg: 1, scope: !11716, file: !1149, line: 230, type: !1145)
!11718 = !DILocation(line: 230, column: 42, scope: !11716)
!11719 = !DILocalVariable(name: "stream", arg: 2, scope: !11716, file: !1149, line: 230, type: !1188)
!11720 = !DILocation(line: 230, column: 55, scope: !11716)
!11721 = !DILocalVariable(name: "n_entries", scope: !11716, file: !1149, line: 232, type: !149)
!11722 = !DILocation(line: 232, column: 10, scope: !11716)
!11723 = !DILocation(line: 232, column: 42, scope: !11716)
!11724 = !DILocation(line: 232, column: 22, scope: !11716)
!11725 = !DILocalVariable(name: "n_buckets", scope: !11716, file: !1149, line: 233, type: !149)
!11726 = !DILocation(line: 233, column: 10, scope: !11716)
!11727 = !DILocation(line: 233, column: 42, scope: !11716)
!11728 = !DILocation(line: 233, column: 22, scope: !11716)
!11729 = !DILocalVariable(name: "n_buckets_used", scope: !11716, file: !1149, line: 234, type: !149)
!11730 = !DILocation(line: 234, column: 10, scope: !11716)
!11731 = !DILocation(line: 234, column: 52, scope: !11716)
!11732 = !DILocation(line: 234, column: 27, scope: !11716)
!11733 = !DILocalVariable(name: "max_bucket_length", scope: !11716, file: !1149, line: 235, type: !149)
!11734 = !DILocation(line: 235, column: 10, scope: !11716)
!11735 = !DILocation(line: 235, column: 58, scope: !11716)
!11736 = !DILocation(line: 235, column: 30, scope: !11716)
!11737 = !DILocation(line: 237, column: 12, scope: !11716)
!11738 = !DILocation(line: 237, column: 68, scope: !11716)
!11739 = !DILocation(line: 237, column: 3, scope: !11716)
!11740 = !DILocation(line: 238, column: 12, scope: !11716)
!11741 = !DILocation(line: 238, column: 68, scope: !11716)
!11742 = !DILocation(line: 238, column: 3, scope: !11716)
!11743 = !DILocation(line: 239, column: 12, scope: !11716)
!11744 = !DILocation(line: 240, column: 32, scope: !11716)
!11745 = !DILocation(line: 241, column: 21, scope: !11716)
!11746 = !DILocation(line: 241, column: 19, scope: !11716)
!11747 = !DILocation(line: 241, column: 39, scope: !11716)
!11748 = !DILocation(line: 241, column: 37, scope: !11716)
!11749 = !DILocation(line: 239, column: 3, scope: !11716)
!11750 = !DILocation(line: 242, column: 12, scope: !11716)
!11751 = !DILocation(line: 243, column: 32, scope: !11716)
!11752 = !DILocation(line: 242, column: 3, scope: !11716)
!11753 = !DILocation(line: 244, column: 1, scope: !11716)
!11754 = distinct !DISubprogram(name: "hash_lookup", scope: !1149, file: !1149, line: 261, type: !1229, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11755 = !DILocalVariable(name: "table", arg: 1, scope: !11754, file: !1149, line: 261, type: !1145)
!11756 = !DILocation(line: 261, column: 32, scope: !11754)
!11757 = !DILocalVariable(name: "entry", arg: 2, scope: !11754, file: !1149, line: 261, type: !175)
!11758 = !DILocation(line: 261, column: 51, scope: !11754)
!11759 = !DILocalVariable(name: "bucket", scope: !11754, file: !1149, line: 263, type: !1158)
!11760 = !DILocation(line: 263, column: 28, scope: !11754)
!11761 = !DILocation(line: 263, column: 50, scope: !11754)
!11762 = !DILocation(line: 263, column: 57, scope: !11754)
!11763 = !DILocation(line: 263, column: 37, scope: !11754)
!11764 = !DILocalVariable(name: "cursor", scope: !11754, file: !1149, line: 264, type: !1158)
!11765 = !DILocation(line: 264, column: 28, scope: !11754)
!11766 = !DILocation(line: 266, column: 7, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11754, file: !1149, line: 266, column: 7)
!11768 = !DILocation(line: 266, column: 15, scope: !11767)
!11769 = !DILocation(line: 266, column: 20, scope: !11767)
!11770 = !DILocation(line: 266, column: 7, scope: !11754)
!11771 = !DILocation(line: 267, column: 5, scope: !11767)
!11772 = !DILocation(line: 269, column: 17, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11754, file: !1149, line: 269, column: 3)
!11774 = !DILocation(line: 269, column: 15, scope: !11773)
!11775 = !DILocation(line: 269, column: 8, scope: !11773)
!11776 = !DILocation(line: 269, column: 25, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11773, file: !1149, line: 269, column: 3)
!11778 = !DILocation(line: 269, column: 3, scope: !11773)
!11779 = !DILocation(line: 270, column: 9, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11777, file: !1149, line: 270, column: 9)
!11781 = !DILocation(line: 270, column: 18, scope: !11780)
!11782 = !DILocation(line: 270, column: 26, scope: !11780)
!11783 = !DILocation(line: 270, column: 15, scope: !11780)
!11784 = !DILocation(line: 270, column: 31, scope: !11780)
!11785 = !DILocation(line: 270, column: 34, scope: !11780)
!11786 = !DILocation(line: 270, column: 41, scope: !11780)
!11787 = !{!11585, !2475, i64 56}
!11788 = !DILocation(line: 270, column: 53, scope: !11780)
!11789 = !DILocation(line: 270, column: 60, scope: !11780)
!11790 = !DILocation(line: 270, column: 68, scope: !11780)
!11791 = !DILocation(line: 270, column: 9, scope: !11777)
!11792 = !DILocation(line: 271, column: 14, scope: !11780)
!11793 = !DILocation(line: 271, column: 22, scope: !11780)
!11794 = !DILocation(line: 271, column: 7, scope: !11780)
!11795 = !DILocation(line: 270, column: 72, scope: !11780)
!11796 = !DILocation(line: 269, column: 42, scope: !11777)
!11797 = !DILocation(line: 269, column: 50, scope: !11777)
!11798 = !DILocation(line: 269, column: 40, scope: !11777)
!11799 = !DILocation(line: 269, column: 3, scope: !11777)
!11800 = distinct !{!11800, !11778, !11801}
!11801 = !DILocation(line: 271, column: 22, scope: !11773)
!11802 = !DILocation(line: 273, column: 3, scope: !11754)
!11803 = !DILocation(line: 274, column: 1, scope: !11754)
!11804 = distinct !DISubprogram(name: "safe_hasher", scope: !1149, file: !1149, line: 249, type: !1257, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11805 = !DILocalVariable(name: "table", arg: 1, scope: !11804, file: !1149, line: 249, type: !1145)
!11806 = !DILocation(line: 249, column: 32, scope: !11804)
!11807 = !DILocalVariable(name: "key", arg: 2, scope: !11804, file: !1149, line: 249, type: !175)
!11808 = !DILocation(line: 249, column: 51, scope: !11804)
!11809 = !DILocalVariable(name: "n", scope: !11804, file: !1149, line: 251, type: !149)
!11810 = !DILocation(line: 251, column: 10, scope: !11804)
!11811 = !DILocation(line: 251, column: 14, scope: !11804)
!11812 = !DILocation(line: 251, column: 21, scope: !11804)
!11813 = !{!11585, !2475, i64 48}
!11814 = !DILocation(line: 251, column: 29, scope: !11804)
!11815 = !DILocation(line: 251, column: 34, scope: !11804)
!11816 = !DILocation(line: 251, column: 41, scope: !11804)
!11817 = !DILocation(line: 252, column: 10, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11804, file: !1149, line: 252, column: 7)
!11819 = !DILocation(line: 252, column: 14, scope: !11818)
!11820 = !DILocation(line: 252, column: 21, scope: !11818)
!11821 = !DILocation(line: 252, column: 12, scope: !11818)
!11822 = !DILocation(line: 252, column: 7, scope: !11804)
!11823 = !DILocation(line: 253, column: 5, scope: !11818)
!11824 = !DILocation(line: 254, column: 10, scope: !11804)
!11825 = !DILocation(line: 254, column: 17, scope: !11804)
!11826 = !DILocation(line: 254, column: 26, scope: !11804)
!11827 = !DILocation(line: 254, column: 24, scope: !11804)
!11828 = !DILocation(line: 254, column: 3, scope: !11804)
!11829 = distinct !DISubprogram(name: "hash_get_first", scope: !1149, file: !1149, line: 288, type: !1231, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11830 = !DILocalVariable(name: "table", arg: 1, scope: !11829, file: !1149, line: 288, type: !1145)
!11831 = !DILocation(line: 288, column: 35, scope: !11829)
!11832 = !DILocalVariable(name: "bucket", scope: !11829, file: !1149, line: 290, type: !1158)
!11833 = !DILocation(line: 290, column: 28, scope: !11829)
!11834 = !DILocation(line: 292, column: 7, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11829, file: !1149, line: 292, column: 7)
!11836 = !DILocation(line: 292, column: 14, scope: !11835)
!11837 = !DILocation(line: 292, column: 24, scope: !11835)
!11838 = !DILocation(line: 292, column: 7, scope: !11829)
!11839 = !DILocation(line: 293, column: 5, scope: !11835)
!11840 = !DILocation(line: 295, column: 17, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11829, file: !1149, line: 295, column: 3)
!11842 = !DILocation(line: 295, column: 24, scope: !11841)
!11843 = !DILocation(line: 295, column: 15, scope: !11841)
!11844 = !DILocation(line: 295, column: 8, scope: !11841)
!11845 = !DILocation(line: 296, column: 12, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !1149, line: 296, column: 9)
!11847 = distinct !DILexicalBlock(scope: !11841, file: !1149, line: 295, column: 3)
!11848 = !DILocation(line: 296, column: 21, scope: !11846)
!11849 = !DILocation(line: 296, column: 28, scope: !11846)
!11850 = !DILocation(line: 296, column: 19, scope: !11846)
!11851 = !DILocation(line: 296, column: 9, scope: !11847)
!11852 = !DILocation(line: 297, column: 7, scope: !11846)
!11853 = !DILocation(line: 298, column: 14, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11846, file: !1149, line: 298, column: 14)
!11855 = !DILocation(line: 298, column: 22, scope: !11854)
!11856 = !DILocation(line: 298, column: 14, scope: !11846)
!11857 = !DILocation(line: 299, column: 14, scope: !11854)
!11858 = !DILocation(line: 299, column: 22, scope: !11854)
!11859 = !DILocation(line: 299, column: 7, scope: !11854)
!11860 = !DILocation(line: 296, column: 40, scope: !11846)
!11861 = !DILocation(line: 295, column: 40, scope: !11847)
!11862 = !DILocation(line: 295, column: 3, scope: !11847)
!11863 = distinct !{!11863, !11864, !11865}
!11864 = !DILocation(line: 295, column: 3, scope: !11841)
!11865 = !DILocation(line: 299, column: 22, scope: !11841)
!11866 = !DILocation(line: 300, column: 1, scope: !11829)
!11867 = distinct !DISubprogram(name: "hash_get_next", scope: !1149, file: !1149, line: 307, type: !1229, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11868 = !DILocalVariable(name: "table", arg: 1, scope: !11867, file: !1149, line: 307, type: !1145)
!11869 = !DILocation(line: 307, column: 34, scope: !11867)
!11870 = !DILocalVariable(name: "entry", arg: 2, scope: !11867, file: !1149, line: 307, type: !175)
!11871 = !DILocation(line: 307, column: 53, scope: !11867)
!11872 = !DILocalVariable(name: "bucket", scope: !11867, file: !1149, line: 309, type: !1158)
!11873 = !DILocation(line: 309, column: 28, scope: !11867)
!11874 = !DILocation(line: 309, column: 50, scope: !11867)
!11875 = !DILocation(line: 309, column: 57, scope: !11867)
!11876 = !DILocation(line: 309, column: 37, scope: !11867)
!11877 = !DILocalVariable(name: "cursor", scope: !11867, file: !1149, line: 310, type: !1158)
!11878 = !DILocation(line: 310, column: 28, scope: !11867)
!11879 = !DILocation(line: 313, column: 12, scope: !11867)
!11880 = !DILocation(line: 313, column: 10, scope: !11867)
!11881 = !DILocation(line: 314, column: 3, scope: !11867)
!11882 = !DILocation(line: 316, column: 11, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !1149, line: 316, column: 11)
!11884 = distinct !DILexicalBlock(scope: !11867, file: !1149, line: 315, column: 5)
!11885 = !DILocation(line: 316, column: 19, scope: !11883)
!11886 = !DILocation(line: 316, column: 27, scope: !11883)
!11887 = !DILocation(line: 316, column: 24, scope: !11883)
!11888 = !DILocation(line: 316, column: 33, scope: !11883)
!11889 = !DILocation(line: 316, column: 36, scope: !11883)
!11890 = !DILocation(line: 316, column: 44, scope: !11883)
!11891 = !DILocation(line: 316, column: 11, scope: !11884)
!11892 = !DILocation(line: 317, column: 16, scope: !11883)
!11893 = !DILocation(line: 317, column: 24, scope: !11883)
!11894 = !DILocation(line: 317, column: 30, scope: !11883)
!11895 = !DILocation(line: 317, column: 9, scope: !11883)
!11896 = !DILocation(line: 318, column: 16, scope: !11884)
!11897 = !DILocation(line: 318, column: 24, scope: !11884)
!11898 = !DILocation(line: 318, column: 14, scope: !11884)
!11899 = !DILocation(line: 319, column: 5, scope: !11884)
!11900 = !DILocation(line: 320, column: 10, scope: !11867)
!11901 = !DILocation(line: 320, column: 17, scope: !11867)
!11902 = distinct !{!11902, !11881, !11903}
!11903 = !DILocation(line: 320, column: 24, scope: !11867)
!11904 = !DILocation(line: 323, column: 3, scope: !11867)
!11905 = !DILocation(line: 323, column: 10, scope: !11867)
!11906 = !DILocation(line: 323, column: 21, scope: !11867)
!11907 = !DILocation(line: 323, column: 28, scope: !11867)
!11908 = !DILocation(line: 323, column: 19, scope: !11867)
!11909 = !DILocation(line: 324, column: 9, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11867, file: !1149, line: 324, column: 9)
!11911 = !DILocation(line: 324, column: 17, scope: !11910)
!11912 = !DILocation(line: 324, column: 9, scope: !11867)
!11913 = !DILocation(line: 325, column: 14, scope: !11910)
!11914 = !DILocation(line: 325, column: 22, scope: !11910)
!11915 = !DILocation(line: 325, column: 7, scope: !11910)
!11916 = distinct !{!11916, !11904, !11917}
!11917 = !DILocation(line: 325, column: 22, scope: !11867)
!11918 = !DILocation(line: 328, column: 3, scope: !11867)
!11919 = !DILocation(line: 329, column: 1, scope: !11867)
!11920 = distinct !DISubprogram(name: "hash_get_entries", scope: !1149, file: !1149, line: 336, type: !1233, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11921 = !DILocalVariable(name: "table", arg: 1, scope: !11920, file: !1149, line: 336, type: !1145)
!11922 = !DILocation(line: 336, column: 37, scope: !11920)
!11923 = !DILocalVariable(name: "buffer", arg: 2, scope: !11920, file: !1149, line: 336, type: !650)
!11924 = !DILocation(line: 336, column: 51, scope: !11920)
!11925 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11920, file: !1149, line: 337, type: !149)
!11926 = !DILocation(line: 337, column: 26, scope: !11920)
!11927 = !DILocalVariable(name: "counter", scope: !11920, file: !1149, line: 339, type: !149)
!11928 = !DILocation(line: 339, column: 10, scope: !11920)
!11929 = !DILocalVariable(name: "bucket", scope: !11920, file: !1149, line: 340, type: !1158)
!11930 = !DILocation(line: 340, column: 28, scope: !11920)
!11931 = !DILocalVariable(name: "cursor", scope: !11920, file: !1149, line: 341, type: !1158)
!11932 = !DILocation(line: 341, column: 28, scope: !11920)
!11933 = !DILocation(line: 343, column: 17, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11920, file: !1149, line: 343, column: 3)
!11935 = !DILocation(line: 343, column: 24, scope: !11934)
!11936 = !DILocation(line: 343, column: 15, scope: !11934)
!11937 = !DILocation(line: 343, column: 8, scope: !11934)
!11938 = !DILocation(line: 343, column: 32, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11934, file: !1149, line: 343, column: 3)
!11940 = !DILocation(line: 343, column: 41, scope: !11939)
!11941 = !DILocation(line: 343, column: 48, scope: !11939)
!11942 = !DILocation(line: 343, column: 39, scope: !11939)
!11943 = !DILocation(line: 343, column: 3, scope: !11934)
!11944 = !DILocation(line: 345, column: 11, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !1149, line: 345, column: 11)
!11946 = distinct !DILexicalBlock(scope: !11939, file: !1149, line: 344, column: 5)
!11947 = !DILocation(line: 345, column: 19, scope: !11945)
!11948 = !DILocation(line: 345, column: 11, scope: !11946)
!11949 = !DILocation(line: 347, column: 25, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !1149, line: 347, column: 11)
!11951 = distinct !DILexicalBlock(scope: !11945, file: !1149, line: 346, column: 9)
!11952 = !DILocation(line: 347, column: 23, scope: !11950)
!11953 = !DILocation(line: 347, column: 16, scope: !11950)
!11954 = !DILocation(line: 347, column: 33, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11950, file: !1149, line: 347, column: 11)
!11956 = !DILocation(line: 347, column: 11, scope: !11950)
!11957 = !DILocation(line: 349, column: 19, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11959, file: !1149, line: 349, column: 19)
!11959 = distinct !DILexicalBlock(scope: !11955, file: !1149, line: 348, column: 13)
!11960 = !DILocation(line: 349, column: 30, scope: !11958)
!11961 = !DILocation(line: 349, column: 27, scope: !11958)
!11962 = !DILocation(line: 349, column: 19, scope: !11959)
!11963 = !DILocation(line: 350, column: 24, scope: !11958)
!11964 = !DILocation(line: 350, column: 17, scope: !11958)
!11965 = !DILocation(line: 351, column: 35, scope: !11959)
!11966 = !DILocation(line: 351, column: 43, scope: !11959)
!11967 = !DILocation(line: 351, column: 15, scope: !11959)
!11968 = !DILocation(line: 351, column: 29, scope: !11959)
!11969 = !DILocation(line: 351, column: 33, scope: !11959)
!11970 = !DILocation(line: 352, column: 13, scope: !11959)
!11971 = !DILocation(line: 347, column: 50, scope: !11955)
!11972 = !DILocation(line: 347, column: 58, scope: !11955)
!11973 = !DILocation(line: 347, column: 48, scope: !11955)
!11974 = !DILocation(line: 347, column: 11, scope: !11955)
!11975 = distinct !{!11975, !11956, !11976}
!11976 = !DILocation(line: 352, column: 13, scope: !11950)
!11977 = !DILocation(line: 353, column: 9, scope: !11951)
!11978 = !DILocation(line: 354, column: 5, scope: !11946)
!11979 = !DILocation(line: 343, column: 68, scope: !11939)
!11980 = !DILocation(line: 343, column: 3, scope: !11939)
!11981 = distinct !{!11981, !11943, !11982}
!11982 = !DILocation(line: 354, column: 5, scope: !11934)
!11983 = !DILocation(line: 356, column: 10, scope: !11920)
!11984 = !DILocation(line: 356, column: 3, scope: !11920)
!11985 = !DILocation(line: 357, column: 1, scope: !11920)
!11986 = distinct !DISubprogram(name: "hash_do_for_each", scope: !1149, file: !1149, line: 368, type: !1235, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!11987 = !DILocalVariable(name: "table", arg: 1, scope: !11986, file: !1149, line: 368, type: !1145)
!11988 = !DILocation(line: 368, column: 37, scope: !11986)
!11989 = !DILocalVariable(name: "processor", arg: 2, scope: !11986, file: !1149, line: 368, type: !1237)
!11990 = !DILocation(line: 368, column: 59, scope: !11986)
!11991 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11986, file: !1149, line: 369, type: !167)
!11992 = !DILocation(line: 369, column: 25, scope: !11986)
!11993 = !DILocalVariable(name: "counter", scope: !11986, file: !1149, line: 371, type: !149)
!11994 = !DILocation(line: 371, column: 10, scope: !11986)
!11995 = !DILocalVariable(name: "bucket", scope: !11986, file: !1149, line: 372, type: !1158)
!11996 = !DILocation(line: 372, column: 28, scope: !11986)
!11997 = !DILocalVariable(name: "cursor", scope: !11986, file: !1149, line: 373, type: !1158)
!11998 = !DILocation(line: 373, column: 28, scope: !11986)
!11999 = !DILocation(line: 375, column: 17, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11986, file: !1149, line: 375, column: 3)
!12001 = !DILocation(line: 375, column: 24, scope: !12000)
!12002 = !DILocation(line: 375, column: 15, scope: !12000)
!12003 = !DILocation(line: 375, column: 8, scope: !12000)
!12004 = !DILocation(line: 375, column: 32, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12000, file: !1149, line: 375, column: 3)
!12006 = !DILocation(line: 375, column: 41, scope: !12005)
!12007 = !DILocation(line: 375, column: 48, scope: !12005)
!12008 = !DILocation(line: 375, column: 39, scope: !12005)
!12009 = !DILocation(line: 375, column: 3, scope: !12000)
!12010 = !DILocation(line: 377, column: 11, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !1149, line: 377, column: 11)
!12012 = distinct !DILexicalBlock(scope: !12005, file: !1149, line: 376, column: 5)
!12013 = !DILocation(line: 377, column: 19, scope: !12011)
!12014 = !DILocation(line: 377, column: 11, scope: !12012)
!12015 = !DILocation(line: 379, column: 25, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !1149, line: 379, column: 11)
!12017 = distinct !DILexicalBlock(scope: !12011, file: !1149, line: 378, column: 9)
!12018 = !DILocation(line: 379, column: 23, scope: !12016)
!12019 = !DILocation(line: 379, column: 16, scope: !12016)
!12020 = !DILocation(line: 379, column: 33, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12016, file: !1149, line: 379, column: 11)
!12022 = !DILocation(line: 379, column: 11, scope: !12016)
!12023 = !DILocation(line: 381, column: 21, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !1149, line: 381, column: 19)
!12025 = distinct !DILexicalBlock(scope: !12021, file: !1149, line: 380, column: 13)
!12026 = !DILocation(line: 381, column: 32, scope: !12024)
!12027 = !DILocation(line: 381, column: 40, scope: !12024)
!12028 = !DILocation(line: 381, column: 46, scope: !12024)
!12029 = !DILocation(line: 381, column: 19, scope: !12025)
!12030 = !DILocation(line: 382, column: 24, scope: !12024)
!12031 = !DILocation(line: 382, column: 17, scope: !12024)
!12032 = !DILocation(line: 383, column: 22, scope: !12025)
!12033 = !DILocation(line: 384, column: 13, scope: !12025)
!12034 = !DILocation(line: 379, column: 50, scope: !12021)
!12035 = !DILocation(line: 379, column: 58, scope: !12021)
!12036 = !DILocation(line: 379, column: 48, scope: !12021)
!12037 = !DILocation(line: 379, column: 11, scope: !12021)
!12038 = distinct !{!12038, !12022, !12039}
!12039 = !DILocation(line: 384, column: 13, scope: !12016)
!12040 = !DILocation(line: 385, column: 9, scope: !12017)
!12041 = !DILocation(line: 386, column: 5, scope: !12012)
!12042 = !DILocation(line: 375, column: 68, scope: !12005)
!12043 = !DILocation(line: 375, column: 3, scope: !12005)
!12044 = distinct !{!12044, !12009, !12045}
!12045 = !DILocation(line: 386, column: 5, scope: !12000)
!12046 = !DILocation(line: 388, column: 10, scope: !11986)
!12047 = !DILocation(line: 388, column: 3, scope: !11986)
!12048 = !DILocation(line: 389, column: 1, scope: !11986)
!12049 = distinct !DISubprogram(name: "hash_string", scope: !1149, file: !1149, line: 428, type: !1241, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12050 = !DILocalVariable(name: "string", arg: 1, scope: !12049, file: !1149, line: 428, type: !146)
!12051 = !DILocation(line: 428, column: 26, scope: !12049)
!12052 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12049, file: !1149, line: 428, type: !149)
!12053 = !DILocation(line: 428, column: 41, scope: !12049)
!12054 = !DILocalVariable(name: "value", scope: !12049, file: !1149, line: 430, type: !149)
!12055 = !DILocation(line: 430, column: 10, scope: !12049)
!12056 = !DILocalVariable(name: "ch", scope: !12049, file: !1149, line: 431, type: !579)
!12057 = !DILocation(line: 431, column: 17, scope: !12049)
!12058 = !DILocation(line: 433, column: 3, scope: !12049)
!12059 = !DILocation(line: 433, column: 17, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !1149, line: 433, column: 3)
!12061 = distinct !DILexicalBlock(scope: !12049, file: !1149, line: 433, column: 3)
!12062 = !DILocation(line: 433, column: 16, scope: !12060)
!12063 = !DILocation(line: 433, column: 14, scope: !12060)
!12064 = !DILocation(line: 433, column: 3, scope: !12061)
!12065 = !DILocation(line: 434, column: 14, scope: !12060)
!12066 = !DILocation(line: 434, column: 20, scope: !12060)
!12067 = !DILocation(line: 434, column: 27, scope: !12060)
!12068 = !DILocation(line: 434, column: 25, scope: !12060)
!12069 = !DILocation(line: 434, column: 33, scope: !12060)
!12070 = !DILocation(line: 434, column: 31, scope: !12060)
!12071 = !DILocation(line: 434, column: 11, scope: !12060)
!12072 = !DILocation(line: 434, column: 5, scope: !12060)
!12073 = !DILocation(line: 433, column: 32, scope: !12060)
!12074 = !DILocation(line: 433, column: 3, scope: !12060)
!12075 = distinct !{!12075, !12064, !12076}
!12076 = !DILocation(line: 434, column: 33, scope: !12061)
!12077 = !DILocation(line: 435, column: 10, scope: !12049)
!12078 = !DILocation(line: 435, column: 3, scope: !12049)
!12079 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !1149, file: !1149, line: 479, type: !1243, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12080 = !DILocalVariable(name: "tuning", arg: 1, scope: !12079, file: !1149, line: 479, type: !1245)
!12081 = !DILocation(line: 479, column: 33, scope: !12079)
!12082 = !DILocation(line: 481, column: 4, scope: !12079)
!12083 = !DILocation(line: 481, column: 13, scope: !12079)
!12084 = !{i64 0, i64 4, !12085, i64 4, i64 4, !12085, i64 8, i64 4, !12085, i64 12, i64 4, !12085, i64 16, i64 1, !2493}
!12085 = !{!12086, !12086, i64 0}
!12086 = !{!"float", !2470, i64 0}
!12087 = !DILocation(line: 482, column: 1, scope: !12079)
!12088 = distinct !DISubprogram(name: "hash_initialize", scope: !1149, file: !1149, line: 594, type: !1246, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12089 = !DILocalVariable(name: "candidate", arg: 1, scope: !12088, file: !1149, line: 594, type: !149)
!12090 = !DILocation(line: 594, column: 25, scope: !12088)
!12091 = !DILocalVariable(name: "tuning", arg: 2, scope: !12088, file: !1149, line: 594, type: !1164)
!12092 = !DILocation(line: 594, column: 55, scope: !12088)
!12093 = !DILocalVariable(name: "hasher", arg: 3, scope: !12088, file: !1149, line: 595, type: !1176)
!12094 = !DILocation(line: 595, column: 30, scope: !12088)
!12095 = !DILocalVariable(name: "comparator", arg: 4, scope: !12088, file: !1149, line: 595, type: !1179)
!12096 = !DILocation(line: 595, column: 54, scope: !12088)
!12097 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12088, file: !1149, line: 596, type: !1182)
!12098 = !DILocation(line: 596, column: 34, scope: !12088)
!12099 = !DILocalVariable(name: "table", scope: !12088, file: !1149, line: 598, type: !1248)
!12100 = !DILocation(line: 598, column: 15, scope: !12088)
!12101 = !DILocation(line: 600, column: 7, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 600, column: 7)
!12103 = !DILocation(line: 600, column: 14, scope: !12102)
!12104 = !DILocation(line: 600, column: 7, scope: !12088)
!12105 = !DILocation(line: 601, column: 12, scope: !12102)
!12106 = !DILocation(line: 601, column: 5, scope: !12102)
!12107 = !DILocation(line: 602, column: 7, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 602, column: 7)
!12109 = !DILocation(line: 602, column: 18, scope: !12108)
!12110 = !DILocation(line: 602, column: 7, scope: !12088)
!12111 = !DILocation(line: 603, column: 16, scope: !12108)
!12112 = !DILocation(line: 603, column: 5, scope: !12108)
!12113 = !DILocation(line: 605, column: 11, scope: !12088)
!12114 = !DILocation(line: 605, column: 9, scope: !12088)
!12115 = !DILocation(line: 606, column: 7, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 606, column: 7)
!12117 = !DILocation(line: 606, column: 13, scope: !12116)
!12118 = !DILocation(line: 606, column: 7, scope: !12088)
!12119 = !DILocation(line: 607, column: 5, scope: !12116)
!12120 = !DILocation(line: 609, column: 8, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 609, column: 7)
!12122 = !DILocation(line: 609, column: 7, scope: !12088)
!12123 = !DILocation(line: 610, column: 12, scope: !12121)
!12124 = !DILocation(line: 610, column: 5, scope: !12121)
!12125 = !DILocation(line: 611, column: 19, scope: !12088)
!12126 = !DILocation(line: 611, column: 3, scope: !12088)
!12127 = !DILocation(line: 611, column: 10, scope: !12088)
!12128 = !DILocation(line: 611, column: 17, scope: !12088)
!12129 = !{!11585, !2475, i64 40}
!12130 = !DILocation(line: 612, column: 22, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 612, column: 7)
!12132 = !DILocation(line: 612, column: 8, scope: !12131)
!12133 = !DILocation(line: 612, column: 7, scope: !12088)
!12134 = !DILocation(line: 619, column: 7, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12131, file: !1149, line: 613, column: 5)
!12136 = !DILocation(line: 622, column: 43, scope: !12088)
!12137 = !DILocation(line: 622, column: 54, scope: !12088)
!12138 = !DILocation(line: 622, column: 22, scope: !12088)
!12139 = !DILocation(line: 622, column: 3, scope: !12088)
!12140 = !DILocation(line: 622, column: 10, scope: !12088)
!12141 = !DILocation(line: 622, column: 20, scope: !12088)
!12142 = !DILocation(line: 623, column: 8, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 623, column: 7)
!12144 = !DILocation(line: 623, column: 15, scope: !12143)
!12145 = !DILocation(line: 623, column: 7, scope: !12088)
!12146 = !DILocation(line: 624, column: 5, scope: !12143)
!12147 = !DILocation(line: 626, column: 27, scope: !12088)
!12148 = !DILocation(line: 626, column: 34, scope: !12088)
!12149 = !DILocation(line: 626, column: 19, scope: !12088)
!12150 = !DILocation(line: 626, column: 3, scope: !12088)
!12151 = !DILocation(line: 626, column: 10, scope: !12088)
!12152 = !DILocation(line: 626, column: 17, scope: !12088)
!12153 = !DILocation(line: 627, column: 7, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12088, file: !1149, line: 627, column: 7)
!12155 = !DILocation(line: 627, column: 14, scope: !12154)
!12156 = !DILocation(line: 627, column: 21, scope: !12154)
!12157 = !DILocation(line: 627, column: 7, scope: !12088)
!12158 = !DILocation(line: 628, column: 5, scope: !12154)
!12159 = !DILocation(line: 629, column: 25, scope: !12088)
!12160 = !DILocation(line: 629, column: 32, scope: !12088)
!12161 = !DILocation(line: 629, column: 41, scope: !12088)
!12162 = !DILocation(line: 629, column: 48, scope: !12088)
!12163 = !DILocation(line: 629, column: 39, scope: !12088)
!12164 = !DILocation(line: 629, column: 3, scope: !12088)
!12165 = !DILocation(line: 629, column: 10, scope: !12088)
!12166 = !DILocation(line: 629, column: 23, scope: !12088)
!12167 = !DILocation(line: 630, column: 3, scope: !12088)
!12168 = !DILocation(line: 630, column: 10, scope: !12088)
!12169 = !DILocation(line: 630, column: 25, scope: !12088)
!12170 = !DILocation(line: 631, column: 3, scope: !12088)
!12171 = !DILocation(line: 631, column: 10, scope: !12088)
!12172 = !DILocation(line: 631, column: 20, scope: !12088)
!12173 = !DILocation(line: 633, column: 19, scope: !12088)
!12174 = !DILocation(line: 633, column: 3, scope: !12088)
!12175 = !DILocation(line: 633, column: 10, scope: !12088)
!12176 = !DILocation(line: 633, column: 17, scope: !12088)
!12177 = !DILocation(line: 634, column: 23, scope: !12088)
!12178 = !DILocation(line: 634, column: 3, scope: !12088)
!12179 = !DILocation(line: 634, column: 10, scope: !12088)
!12180 = !DILocation(line: 634, column: 21, scope: !12088)
!12181 = !DILocation(line: 635, column: 23, scope: !12088)
!12182 = !DILocation(line: 635, column: 3, scope: !12088)
!12183 = !DILocation(line: 635, column: 10, scope: !12088)
!12184 = !DILocation(line: 635, column: 21, scope: !12088)
!12185 = !{!11585, !2475, i64 64}
!12186 = !DILocation(line: 637, column: 3, scope: !12088)
!12187 = !DILocation(line: 637, column: 10, scope: !12088)
!12188 = !DILocation(line: 637, column: 26, scope: !12088)
!12189 = !{!11585, !2475, i64 72}
!12190 = !DILocation(line: 641, column: 10, scope: !12088)
!12191 = !DILocation(line: 641, column: 3, scope: !12088)
!12192 = !DILabel(scope: !12088, name: "fail", file: !1149, line: 643)
!12193 = !DILocation(line: 643, column: 2, scope: !12088)
!12194 = !DILocation(line: 644, column: 9, scope: !12088)
!12195 = !DILocation(line: 644, column: 3, scope: !12088)
!12196 = !DILocation(line: 645, column: 3, scope: !12088)
!12197 = !DILocation(line: 646, column: 1, scope: !12088)
!12198 = distinct !DISubprogram(name: "raw_hasher", scope: !1149, file: !1149, line: 486, type: !328, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12199 = !DILocalVariable(name: "data", arg: 1, scope: !12198, file: !1149, line: 486, type: !175)
!12200 = !DILocation(line: 486, column: 25, scope: !12198)
!12201 = !DILocalVariable(name: "n", arg: 2, scope: !12198, file: !1149, line: 486, type: !149)
!12202 = !DILocation(line: 486, column: 38, scope: !12198)
!12203 = !DILocalVariable(name: "val", scope: !12198, file: !1149, line: 493, type: !149)
!12204 = !DILocation(line: 493, column: 10, scope: !12198)
!12205 = !DILocation(line: 493, column: 34, scope: !12198)
!12206 = !DILocation(line: 493, column: 25, scope: !12198)
!12207 = !DILocation(line: 493, column: 16, scope: !12198)
!12208 = !DILocation(line: 494, column: 10, scope: !12198)
!12209 = !DILocation(line: 494, column: 16, scope: !12198)
!12210 = !DILocation(line: 494, column: 14, scope: !12198)
!12211 = !DILocation(line: 494, column: 3, scope: !12198)
!12212 = distinct !DISubprogram(name: "raw_comparator", scope: !1149, file: !1149, line: 499, type: !332, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12213 = !DILocalVariable(name: "a", arg: 1, scope: !12212, file: !1149, line: 499, type: !175)
!12214 = !DILocation(line: 499, column: 29, scope: !12212)
!12215 = !DILocalVariable(name: "b", arg: 2, scope: !12212, file: !1149, line: 499, type: !175)
!12216 = !DILocation(line: 499, column: 44, scope: !12212)
!12217 = !DILocation(line: 501, column: 10, scope: !12212)
!12218 = !DILocation(line: 501, column: 15, scope: !12212)
!12219 = !DILocation(line: 501, column: 12, scope: !12212)
!12220 = !DILocation(line: 501, column: 3, scope: !12212)
!12221 = distinct !DISubprogram(name: "check_tuning", scope: !1149, file: !1149, line: 512, type: !1259, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12222 = !DILocalVariable(name: "table", arg: 1, scope: !12221, file: !1149, line: 512, type: !1248)
!12223 = !DILocation(line: 512, column: 27, scope: !12221)
!12224 = !DILocalVariable(name: "tuning", scope: !12221, file: !1149, line: 514, type: !1164)
!12225 = !DILocation(line: 514, column: 22, scope: !12221)
!12226 = !DILocation(line: 514, column: 31, scope: !12221)
!12227 = !DILocation(line: 514, column: 38, scope: !12221)
!12228 = !DILocalVariable(name: "epsilon", scope: !12221, file: !1149, line: 515, type: !1170)
!12229 = !DILocation(line: 515, column: 9, scope: !12221)
!12230 = !DILocation(line: 516, column: 7, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12221, file: !1149, line: 516, column: 7)
!12232 = !DILocation(line: 516, column: 14, scope: !12231)
!12233 = !DILocation(line: 516, column: 7, scope: !12221)
!12234 = !DILocation(line: 517, column: 5, scope: !12231)
!12235 = !DILocation(line: 524, column: 11, scope: !12221)
!12236 = !DILocation(line: 526, column: 7, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12221, file: !1149, line: 526, column: 7)
!12238 = !DILocation(line: 526, column: 17, scope: !12237)
!12239 = !DILocation(line: 526, column: 25, scope: !12237)
!12240 = !{!12241, !12086, i64 8}
!12241 = !{!"hash_tuning", !12086, i64 0, !12086, i64 4, !12086, i64 8, !12086, i64 12, !2494, i64 16}
!12242 = !DILocation(line: 526, column: 15, scope: !12237)
!12243 = !DILocation(line: 527, column: 7, scope: !12237)
!12244 = !DILocation(line: 527, column: 10, scope: !12237)
!12245 = !DILocation(line: 527, column: 18, scope: !12237)
!12246 = !DILocation(line: 527, column: 41, scope: !12237)
!12247 = !DILocation(line: 527, column: 39, scope: !12237)
!12248 = !DILocation(line: 527, column: 35, scope: !12237)
!12249 = !DILocation(line: 528, column: 7, scope: !12237)
!12250 = !DILocation(line: 528, column: 14, scope: !12237)
!12251 = !DILocation(line: 528, column: 12, scope: !12237)
!12252 = !DILocation(line: 528, column: 24, scope: !12237)
!12253 = !DILocation(line: 528, column: 32, scope: !12237)
!12254 = !{!12241, !12086, i64 12}
!12255 = !DILocation(line: 528, column: 22, scope: !12237)
!12256 = !DILocation(line: 529, column: 7, scope: !12237)
!12257 = !DILocation(line: 529, column: 15, scope: !12237)
!12258 = !DILocation(line: 529, column: 23, scope: !12237)
!12259 = !{!12241, !12086, i64 0}
!12260 = !DILocation(line: 529, column: 12, scope: !12237)
!12261 = !DILocation(line: 530, column: 7, scope: !12237)
!12262 = !DILocation(line: 530, column: 10, scope: !12237)
!12263 = !DILocation(line: 530, column: 18, scope: !12237)
!12264 = !DILocation(line: 530, column: 37, scope: !12237)
!12265 = !DILocation(line: 530, column: 35, scope: !12237)
!12266 = !DILocation(line: 530, column: 47, scope: !12237)
!12267 = !DILocation(line: 530, column: 55, scope: !12237)
!12268 = !{!12241, !12086, i64 4}
!12269 = !DILocation(line: 530, column: 45, scope: !12237)
!12270 = !DILocation(line: 531, column: 7, scope: !12237)
!12271 = !DILocation(line: 531, column: 10, scope: !12237)
!12272 = !DILocation(line: 531, column: 18, scope: !12237)
!12273 = !DILocation(line: 531, column: 32, scope: !12237)
!12274 = !DILocation(line: 532, column: 7, scope: !12237)
!12275 = !DILocation(line: 532, column: 10, scope: !12237)
!12276 = !DILocation(line: 532, column: 18, scope: !12237)
!12277 = !DILocation(line: 532, column: 37, scope: !12237)
!12278 = !DILocation(line: 532, column: 35, scope: !12237)
!12279 = !DILocation(line: 532, column: 47, scope: !12237)
!12280 = !DILocation(line: 532, column: 55, scope: !12237)
!12281 = !DILocation(line: 532, column: 45, scope: !12237)
!12282 = !DILocation(line: 526, column: 7, scope: !12221)
!12283 = !DILocation(line: 533, column: 5, scope: !12237)
!12284 = !DILocation(line: 535, column: 3, scope: !12221)
!12285 = !DILocation(line: 535, column: 10, scope: !12221)
!12286 = !DILocation(line: 535, column: 17, scope: !12221)
!12287 = !DILocation(line: 536, column: 3, scope: !12221)
!12288 = !DILocation(line: 537, column: 1, scope: !12221)
!12289 = distinct !DISubprogram(name: "compute_bucket_size", scope: !1149, file: !1149, line: 544, type: !1261, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12290 = !DILocalVariable(name: "candidate", arg: 1, scope: !12289, file: !1149, line: 544, type: !149)
!12291 = !DILocation(line: 544, column: 29, scope: !12289)
!12292 = !DILocalVariable(name: "tuning", arg: 2, scope: !12289, file: !1149, line: 544, type: !1164)
!12293 = !DILocation(line: 544, column: 59, scope: !12289)
!12294 = !DILocation(line: 546, column: 8, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12289, file: !1149, line: 546, column: 7)
!12296 = !DILocation(line: 546, column: 16, scope: !12295)
!12297 = !{!12241, !2494, i64 16}
!12298 = !DILocation(line: 546, column: 7, scope: !12289)
!12299 = !DILocalVariable(name: "new_candidate", scope: !12300, file: !1149, line: 548, type: !1170)
!12300 = distinct !DILexicalBlock(scope: !12295, file: !1149, line: 547, column: 5)
!12301 = !DILocation(line: 548, column: 13, scope: !12300)
!12302 = !DILocation(line: 548, column: 29, scope: !12300)
!12303 = !DILocation(line: 548, column: 41, scope: !12300)
!12304 = !DILocation(line: 548, column: 49, scope: !12300)
!12305 = !DILocation(line: 548, column: 39, scope: !12300)
!12306 = !DILocation(line: 549, column: 23, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12300, file: !1149, line: 549, column: 11)
!12308 = !DILocation(line: 549, column: 20, scope: !12307)
!12309 = !DILocation(line: 549, column: 11, scope: !12300)
!12310 = !DILocation(line: 550, column: 9, scope: !12307)
!12311 = !DILocation(line: 551, column: 19, scope: !12300)
!12312 = !DILocation(line: 551, column: 17, scope: !12300)
!12313 = !DILocation(line: 552, column: 5, scope: !12300)
!12314 = !DILocation(line: 553, column: 27, scope: !12289)
!12315 = !DILocation(line: 553, column: 15, scope: !12289)
!12316 = !DILocation(line: 553, column: 13, scope: !12289)
!12317 = !DILocation(line: 554, column: 7, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12289, file: !1149, line: 554, column: 7)
!12319 = !DILocation(line: 554, column: 7, scope: !12289)
!12320 = !DILocation(line: 555, column: 5, scope: !12318)
!12321 = !DILocation(line: 556, column: 10, scope: !12289)
!12322 = !DILocation(line: 556, column: 3, scope: !12289)
!12323 = !DILocation(line: 557, column: 1, scope: !12289)
!12324 = distinct !DISubprogram(name: "next_prime", scope: !1149, file: !1149, line: 463, type: !1263, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12325 = !DILocalVariable(name: "candidate", arg: 1, scope: !12324, file: !1149, line: 463, type: !149)
!12326 = !DILocation(line: 463, column: 20, scope: !12324)
!12327 = !DILocation(line: 466, column: 7, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12324, file: !1149, line: 466, column: 7)
!12329 = !DILocation(line: 466, column: 17, scope: !12328)
!12330 = !DILocation(line: 466, column: 7, scope: !12324)
!12331 = !DILocation(line: 467, column: 15, scope: !12328)
!12332 = !DILocation(line: 467, column: 5, scope: !12328)
!12333 = !DILocation(line: 470, column: 13, scope: !12324)
!12334 = !DILocation(line: 472, column: 3, scope: !12324)
!12335 = !DILocation(line: 472, column: 22, scope: !12324)
!12336 = !DILocation(line: 472, column: 19, scope: !12324)
!12337 = !DILocation(line: 472, column: 32, scope: !12324)
!12338 = !DILocation(line: 472, column: 46, scope: !12324)
!12339 = !DILocation(line: 472, column: 36, scope: !12324)
!12340 = !DILocation(line: 472, column: 35, scope: !12324)
!12341 = !DILocation(line: 0, scope: !12324)
!12342 = !DILocation(line: 473, column: 15, scope: !12324)
!12343 = distinct !{!12343, !12334, !12344}
!12344 = !DILocation(line: 473, column: 18, scope: !12324)
!12345 = !DILocation(line: 475, column: 10, scope: !12324)
!12346 = !DILocation(line: 475, column: 3, scope: !12324)
!12347 = distinct !DISubprogram(name: "is_prime", scope: !1149, file: !1149, line: 444, type: !1265, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12348 = !DILocalVariable(name: "candidate", arg: 1, scope: !12347, file: !1149, line: 444, type: !149)
!12349 = !DILocation(line: 444, column: 18, scope: !12347)
!12350 = !DILocalVariable(name: "divisor", scope: !12347, file: !1149, line: 446, type: !149)
!12351 = !DILocation(line: 446, column: 10, scope: !12347)
!12352 = !DILocalVariable(name: "square", scope: !12347, file: !1149, line: 447, type: !149)
!12353 = !DILocation(line: 447, column: 10, scope: !12347)
!12354 = !DILocation(line: 447, column: 19, scope: !12347)
!12355 = !DILocation(line: 447, column: 29, scope: !12347)
!12356 = !DILocation(line: 447, column: 27, scope: !12347)
!12357 = !DILocation(line: 449, column: 3, scope: !12347)
!12358 = !DILocation(line: 449, column: 10, scope: !12347)
!12359 = !DILocation(line: 449, column: 19, scope: !12347)
!12360 = !DILocation(line: 449, column: 17, scope: !12347)
!12361 = !DILocation(line: 449, column: 29, scope: !12347)
!12362 = !DILocation(line: 449, column: 33, scope: !12347)
!12363 = !DILocation(line: 449, column: 45, scope: !12347)
!12364 = !DILocation(line: 449, column: 43, scope: !12347)
!12365 = !DILocation(line: 0, scope: !12347)
!12366 = !DILocation(line: 451, column: 14, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12347, file: !1149, line: 450, column: 5)
!12368 = !DILocation(line: 452, column: 21, scope: !12367)
!12369 = !DILocation(line: 452, column: 19, scope: !12367)
!12370 = !DILocation(line: 452, column: 14, scope: !12367)
!12371 = !DILocation(line: 453, column: 14, scope: !12367)
!12372 = distinct !{!12372, !12357, !12373}
!12373 = !DILocation(line: 454, column: 5, scope: !12347)
!12374 = !DILocation(line: 456, column: 11, scope: !12347)
!12375 = !DILocation(line: 456, column: 23, scope: !12347)
!12376 = !DILocation(line: 456, column: 21, scope: !12347)
!12377 = !DILocation(line: 456, column: 10, scope: !12347)
!12378 = !DILocation(line: 456, column: 3, scope: !12347)
!12379 = distinct !DISubprogram(name: "hash_clear", scope: !1149, file: !1149, line: 653, type: !1249, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12380 = !DILocalVariable(name: "table", arg: 1, scope: !12379, file: !1149, line: 653, type: !1248)
!12381 = !DILocation(line: 653, column: 25, scope: !12379)
!12382 = !DILocalVariable(name: "bucket", scope: !12379, file: !1149, line: 655, type: !1152)
!12383 = !DILocation(line: 655, column: 22, scope: !12379)
!12384 = !DILocation(line: 657, column: 17, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12379, file: !1149, line: 657, column: 3)
!12386 = !DILocation(line: 657, column: 24, scope: !12385)
!12387 = !DILocation(line: 657, column: 15, scope: !12385)
!12388 = !DILocation(line: 657, column: 8, scope: !12385)
!12389 = !DILocation(line: 657, column: 32, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12385, file: !1149, line: 657, column: 3)
!12391 = !DILocation(line: 657, column: 41, scope: !12390)
!12392 = !DILocation(line: 657, column: 48, scope: !12390)
!12393 = !DILocation(line: 657, column: 39, scope: !12390)
!12394 = !DILocation(line: 657, column: 3, scope: !12385)
!12395 = !DILocation(line: 659, column: 11, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !1149, line: 659, column: 11)
!12397 = distinct !DILexicalBlock(scope: !12390, file: !1149, line: 658, column: 5)
!12398 = !DILocation(line: 659, column: 19, scope: !12396)
!12399 = !DILocation(line: 659, column: 11, scope: !12397)
!12400 = !DILocalVariable(name: "cursor", scope: !12401, file: !1149, line: 661, type: !1152)
!12401 = distinct !DILexicalBlock(scope: !12396, file: !1149, line: 660, column: 9)
!12402 = !DILocation(line: 661, column: 30, scope: !12401)
!12403 = !DILocalVariable(name: "next", scope: !12401, file: !1149, line: 662, type: !1152)
!12404 = !DILocation(line: 662, column: 30, scope: !12401)
!12405 = !DILocation(line: 665, column: 25, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12401, file: !1149, line: 665, column: 11)
!12407 = !DILocation(line: 665, column: 33, scope: !12406)
!12408 = !DILocation(line: 665, column: 23, scope: !12406)
!12409 = !DILocation(line: 665, column: 16, scope: !12406)
!12410 = !DILocation(line: 665, column: 39, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12406, file: !1149, line: 665, column: 11)
!12412 = !DILocation(line: 665, column: 11, scope: !12406)
!12413 = !DILocation(line: 667, column: 19, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !1149, line: 667, column: 19)
!12415 = distinct !DILexicalBlock(scope: !12411, file: !1149, line: 666, column: 13)
!12416 = !DILocation(line: 667, column: 26, scope: !12414)
!12417 = !DILocation(line: 667, column: 19, scope: !12415)
!12418 = !DILocation(line: 668, column: 17, scope: !12414)
!12419 = !DILocation(line: 668, column: 24, scope: !12414)
!12420 = !DILocation(line: 668, column: 36, scope: !12414)
!12421 = !DILocation(line: 668, column: 44, scope: !12414)
!12422 = !DILocation(line: 669, column: 15, scope: !12415)
!12423 = !DILocation(line: 669, column: 23, scope: !12415)
!12424 = !DILocation(line: 669, column: 28, scope: !12415)
!12425 = !DILocation(line: 671, column: 22, scope: !12415)
!12426 = !DILocation(line: 671, column: 30, scope: !12415)
!12427 = !DILocation(line: 671, column: 20, scope: !12415)
!12428 = !DILocation(line: 674, column: 30, scope: !12415)
!12429 = !DILocation(line: 674, column: 37, scope: !12415)
!12430 = !DILocation(line: 674, column: 15, scope: !12415)
!12431 = !DILocation(line: 674, column: 23, scope: !12415)
!12432 = !DILocation(line: 674, column: 28, scope: !12415)
!12433 = !DILocation(line: 675, column: 40, scope: !12415)
!12434 = !DILocation(line: 675, column: 15, scope: !12415)
!12435 = !DILocation(line: 675, column: 22, scope: !12415)
!12436 = !DILocation(line: 675, column: 38, scope: !12415)
!12437 = !DILocation(line: 676, column: 13, scope: !12415)
!12438 = !DILocation(line: 665, column: 56, scope: !12411)
!12439 = !DILocation(line: 665, column: 54, scope: !12411)
!12440 = !DILocation(line: 665, column: 11, scope: !12411)
!12441 = distinct !{!12441, !12412, !12442}
!12442 = !DILocation(line: 676, column: 13, scope: !12406)
!12443 = !DILocation(line: 679, column: 15, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12401, file: !1149, line: 679, column: 15)
!12445 = !DILocation(line: 679, column: 22, scope: !12444)
!12446 = !DILocation(line: 679, column: 15, scope: !12401)
!12447 = !DILocation(line: 680, column: 13, scope: !12444)
!12448 = !DILocation(line: 680, column: 20, scope: !12444)
!12449 = !DILocation(line: 680, column: 32, scope: !12444)
!12450 = !DILocation(line: 680, column: 40, scope: !12444)
!12451 = !DILocation(line: 681, column: 11, scope: !12401)
!12452 = !DILocation(line: 681, column: 19, scope: !12401)
!12453 = !DILocation(line: 681, column: 24, scope: !12401)
!12454 = !DILocation(line: 682, column: 11, scope: !12401)
!12455 = !DILocation(line: 682, column: 19, scope: !12401)
!12456 = !DILocation(line: 682, column: 24, scope: !12401)
!12457 = !DILocation(line: 683, column: 9, scope: !12401)
!12458 = !DILocation(line: 684, column: 5, scope: !12397)
!12459 = !DILocation(line: 657, column: 68, scope: !12390)
!12460 = !DILocation(line: 657, column: 3, scope: !12390)
!12461 = distinct !{!12461, !12394, !12462}
!12462 = !DILocation(line: 684, column: 5, scope: !12385)
!12463 = !DILocation(line: 686, column: 3, scope: !12379)
!12464 = !DILocation(line: 686, column: 10, scope: !12379)
!12465 = !DILocation(line: 686, column: 25, scope: !12379)
!12466 = !DILocation(line: 687, column: 3, scope: !12379)
!12467 = !DILocation(line: 687, column: 10, scope: !12379)
!12468 = !DILocation(line: 687, column: 20, scope: !12379)
!12469 = !DILocation(line: 688, column: 1, scope: !12379)
!12470 = distinct !DISubprogram(name: "hash_free", scope: !1149, file: !1149, line: 696, type: !1249, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12471 = !DILocalVariable(name: "table", arg: 1, scope: !12470, file: !1149, line: 696, type: !1248)
!12472 = !DILocation(line: 696, column: 24, scope: !12470)
!12473 = !DILocalVariable(name: "bucket", scope: !12470, file: !1149, line: 698, type: !1152)
!12474 = !DILocation(line: 698, column: 22, scope: !12470)
!12475 = !DILocalVariable(name: "cursor", scope: !12470, file: !1149, line: 699, type: !1152)
!12476 = !DILocation(line: 699, column: 22, scope: !12470)
!12477 = !DILocalVariable(name: "next", scope: !12470, file: !1149, line: 700, type: !1152)
!12478 = !DILocation(line: 700, column: 22, scope: !12470)
!12479 = !DILocation(line: 703, column: 7, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12470, file: !1149, line: 703, column: 7)
!12481 = !DILocation(line: 703, column: 14, scope: !12480)
!12482 = !DILocation(line: 703, column: 25, scope: !12480)
!12483 = !DILocation(line: 703, column: 28, scope: !12480)
!12484 = !DILocation(line: 703, column: 35, scope: !12480)
!12485 = !DILocation(line: 703, column: 7, scope: !12470)
!12486 = !DILocation(line: 705, column: 21, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !1149, line: 705, column: 7)
!12488 = distinct !DILexicalBlock(scope: !12480, file: !1149, line: 704, column: 5)
!12489 = !DILocation(line: 705, column: 28, scope: !12487)
!12490 = !DILocation(line: 705, column: 19, scope: !12487)
!12491 = !DILocation(line: 705, column: 12, scope: !12487)
!12492 = !DILocation(line: 705, column: 36, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12487, file: !1149, line: 705, column: 7)
!12494 = !DILocation(line: 705, column: 45, scope: !12493)
!12495 = !DILocation(line: 705, column: 52, scope: !12493)
!12496 = !DILocation(line: 705, column: 43, scope: !12493)
!12497 = !DILocation(line: 705, column: 7, scope: !12487)
!12498 = !DILocation(line: 707, column: 15, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12500, file: !1149, line: 707, column: 15)
!12500 = distinct !DILexicalBlock(scope: !12493, file: !1149, line: 706, column: 9)
!12501 = !DILocation(line: 707, column: 23, scope: !12499)
!12502 = !DILocation(line: 707, column: 15, scope: !12500)
!12503 = !DILocation(line: 709, column: 29, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !1149, line: 709, column: 15)
!12505 = distinct !DILexicalBlock(scope: !12499, file: !1149, line: 708, column: 13)
!12506 = !DILocation(line: 709, column: 27, scope: !12504)
!12507 = !DILocation(line: 709, column: 20, scope: !12504)
!12508 = !DILocation(line: 709, column: 37, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12504, file: !1149, line: 709, column: 15)
!12510 = !DILocation(line: 709, column: 15, scope: !12504)
!12511 = !DILocation(line: 710, column: 17, scope: !12509)
!12512 = !DILocation(line: 710, column: 24, scope: !12509)
!12513 = !DILocation(line: 710, column: 36, scope: !12509)
!12514 = !DILocation(line: 710, column: 44, scope: !12509)
!12515 = !DILocation(line: 709, column: 54, scope: !12509)
!12516 = !DILocation(line: 709, column: 62, scope: !12509)
!12517 = !DILocation(line: 709, column: 52, scope: !12509)
!12518 = !DILocation(line: 709, column: 15, scope: !12509)
!12519 = distinct !{!12519, !12510, !12520}
!12520 = !DILocation(line: 710, column: 48, scope: !12504)
!12521 = !DILocation(line: 711, column: 13, scope: !12505)
!12522 = !DILocation(line: 712, column: 9, scope: !12500)
!12523 = !DILocation(line: 705, column: 72, scope: !12493)
!12524 = !DILocation(line: 705, column: 7, scope: !12493)
!12525 = distinct !{!12525, !12497, !12526}
!12526 = !DILocation(line: 712, column: 9, scope: !12487)
!12527 = !DILocation(line: 713, column: 5, scope: !12488)
!12528 = !DILocation(line: 722, column: 17, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12470, file: !1149, line: 722, column: 3)
!12530 = !DILocation(line: 722, column: 24, scope: !12529)
!12531 = !DILocation(line: 722, column: 15, scope: !12529)
!12532 = !DILocation(line: 722, column: 8, scope: !12529)
!12533 = !DILocation(line: 722, column: 32, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12529, file: !1149, line: 722, column: 3)
!12535 = !DILocation(line: 722, column: 41, scope: !12534)
!12536 = !DILocation(line: 722, column: 48, scope: !12534)
!12537 = !DILocation(line: 722, column: 39, scope: !12534)
!12538 = !DILocation(line: 722, column: 3, scope: !12529)
!12539 = !DILocation(line: 724, column: 21, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !1149, line: 724, column: 7)
!12541 = distinct !DILexicalBlock(scope: !12534, file: !1149, line: 723, column: 5)
!12542 = !DILocation(line: 724, column: 29, scope: !12540)
!12543 = !DILocation(line: 724, column: 19, scope: !12540)
!12544 = !DILocation(line: 724, column: 12, scope: !12540)
!12545 = !DILocation(line: 724, column: 35, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12540, file: !1149, line: 724, column: 7)
!12547 = !DILocation(line: 724, column: 7, scope: !12540)
!12548 = !DILocation(line: 726, column: 18, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12546, file: !1149, line: 725, column: 9)
!12550 = !DILocation(line: 726, column: 26, scope: !12549)
!12551 = !DILocation(line: 726, column: 16, scope: !12549)
!12552 = !DILocation(line: 727, column: 17, scope: !12549)
!12553 = !DILocation(line: 727, column: 11, scope: !12549)
!12554 = !DILocation(line: 728, column: 9, scope: !12549)
!12555 = !DILocation(line: 724, column: 52, scope: !12546)
!12556 = !DILocation(line: 724, column: 50, scope: !12546)
!12557 = !DILocation(line: 724, column: 7, scope: !12546)
!12558 = distinct !{!12558, !12547, !12559}
!12559 = !DILocation(line: 728, column: 9, scope: !12540)
!12560 = !DILocation(line: 729, column: 5, scope: !12541)
!12561 = !DILocation(line: 722, column: 68, scope: !12534)
!12562 = !DILocation(line: 722, column: 3, scope: !12534)
!12563 = distinct !{!12563, !12538, !12564}
!12564 = !DILocation(line: 729, column: 5, scope: !12529)
!12565 = !DILocation(line: 732, column: 17, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12470, file: !1149, line: 732, column: 3)
!12567 = !DILocation(line: 732, column: 24, scope: !12566)
!12568 = !DILocation(line: 732, column: 15, scope: !12566)
!12569 = !DILocation(line: 732, column: 8, scope: !12566)
!12570 = !DILocation(line: 732, column: 41, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12566, file: !1149, line: 732, column: 3)
!12572 = !DILocation(line: 732, column: 3, scope: !12566)
!12573 = !DILocation(line: 734, column: 14, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12571, file: !1149, line: 733, column: 5)
!12575 = !DILocation(line: 734, column: 22, scope: !12574)
!12576 = !DILocation(line: 734, column: 12, scope: !12574)
!12577 = !DILocation(line: 735, column: 13, scope: !12574)
!12578 = !DILocation(line: 735, column: 7, scope: !12574)
!12579 = !DILocation(line: 736, column: 5, scope: !12574)
!12580 = !DILocation(line: 732, column: 58, scope: !12571)
!12581 = !DILocation(line: 732, column: 56, scope: !12571)
!12582 = !DILocation(line: 732, column: 3, scope: !12571)
!12583 = distinct !{!12583, !12572, !12584}
!12584 = !DILocation(line: 736, column: 5, scope: !12566)
!12585 = !DILocation(line: 741, column: 9, scope: !12470)
!12586 = !DILocation(line: 741, column: 16, scope: !12470)
!12587 = !DILocation(line: 741, column: 3, scope: !12470)
!12588 = !DILocation(line: 742, column: 9, scope: !12470)
!12589 = !DILocation(line: 742, column: 3, scope: !12470)
!12590 = !DILocation(line: 743, column: 1, scope: !12470)
!12591 = distinct !DISubprogram(name: "hash_rehash", scope: !1149, file: !1149, line: 943, type: !1251, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12592 = !DILocalVariable(name: "table", arg: 1, scope: !12591, file: !1149, line: 943, type: !1248)
!12593 = !DILocation(line: 943, column: 26, scope: !12591)
!12594 = !DILocalVariable(name: "candidate", arg: 2, scope: !12591, file: !1149, line: 943, type: !149)
!12595 = !DILocation(line: 943, column: 40, scope: !12591)
!12596 = !DILocalVariable(name: "storage", scope: !12591, file: !1149, line: 945, type: !1147)
!12597 = !DILocation(line: 945, column: 14, scope: !12591)
!12598 = !DILocalVariable(name: "new_table", scope: !12591, file: !1149, line: 946, type: !1248)
!12599 = !DILocation(line: 946, column: 15, scope: !12591)
!12600 = !DILocalVariable(name: "new_size", scope: !12591, file: !1149, line: 947, type: !149)
!12601 = !DILocation(line: 947, column: 10, scope: !12591)
!12602 = !DILocation(line: 947, column: 42, scope: !12591)
!12603 = !DILocation(line: 947, column: 53, scope: !12591)
!12604 = !DILocation(line: 947, column: 60, scope: !12591)
!12605 = !DILocation(line: 947, column: 21, scope: !12591)
!12606 = !DILocation(line: 949, column: 8, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12591, file: !1149, line: 949, column: 7)
!12608 = !DILocation(line: 949, column: 7, scope: !12591)
!12609 = !DILocation(line: 950, column: 5, scope: !12607)
!12610 = !DILocation(line: 951, column: 7, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12591, file: !1149, line: 951, column: 7)
!12612 = !DILocation(line: 951, column: 19, scope: !12611)
!12613 = !DILocation(line: 951, column: 26, scope: !12611)
!12614 = !DILocation(line: 951, column: 16, scope: !12611)
!12615 = !DILocation(line: 951, column: 7, scope: !12591)
!12616 = !DILocation(line: 952, column: 5, scope: !12611)
!12617 = !DILocation(line: 953, column: 13, scope: !12591)
!12618 = !DILocation(line: 954, column: 31, scope: !12591)
!12619 = !DILocation(line: 954, column: 23, scope: !12591)
!12620 = !DILocation(line: 954, column: 3, scope: !12591)
!12621 = !DILocation(line: 954, column: 14, scope: !12591)
!12622 = !DILocation(line: 954, column: 21, scope: !12591)
!12623 = !DILocation(line: 955, column: 7, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12591, file: !1149, line: 955, column: 7)
!12625 = !DILocation(line: 955, column: 18, scope: !12624)
!12626 = !DILocation(line: 955, column: 25, scope: !12624)
!12627 = !DILocation(line: 955, column: 7, scope: !12591)
!12628 = !DILocation(line: 956, column: 5, scope: !12624)
!12629 = !DILocation(line: 957, column: 26, scope: !12591)
!12630 = !DILocation(line: 957, column: 3, scope: !12591)
!12631 = !DILocation(line: 957, column: 14, scope: !12591)
!12632 = !DILocation(line: 957, column: 24, scope: !12591)
!12633 = !DILocation(line: 958, column: 29, scope: !12591)
!12634 = !DILocation(line: 958, column: 40, scope: !12591)
!12635 = !DILocation(line: 958, column: 49, scope: !12591)
!12636 = !DILocation(line: 958, column: 47, scope: !12591)
!12637 = !DILocation(line: 958, column: 3, scope: !12591)
!12638 = !DILocation(line: 958, column: 14, scope: !12591)
!12639 = !DILocation(line: 958, column: 27, scope: !12591)
!12640 = !DILocation(line: 959, column: 3, scope: !12591)
!12641 = !DILocation(line: 959, column: 14, scope: !12591)
!12642 = !DILocation(line: 959, column: 29, scope: !12591)
!12643 = !DILocation(line: 960, column: 3, scope: !12591)
!12644 = !DILocation(line: 960, column: 14, scope: !12591)
!12645 = !DILocation(line: 960, column: 24, scope: !12591)
!12646 = !DILocation(line: 961, column: 23, scope: !12591)
!12647 = !DILocation(line: 961, column: 30, scope: !12591)
!12648 = !DILocation(line: 961, column: 3, scope: !12591)
!12649 = !DILocation(line: 961, column: 14, scope: !12591)
!12650 = !DILocation(line: 961, column: 21, scope: !12591)
!12651 = !DILocation(line: 962, column: 23, scope: !12591)
!12652 = !DILocation(line: 962, column: 30, scope: !12591)
!12653 = !DILocation(line: 962, column: 3, scope: !12591)
!12654 = !DILocation(line: 962, column: 14, scope: !12591)
!12655 = !DILocation(line: 962, column: 21, scope: !12591)
!12656 = !DILocation(line: 963, column: 27, scope: !12591)
!12657 = !DILocation(line: 963, column: 34, scope: !12591)
!12658 = !DILocation(line: 963, column: 3, scope: !12591)
!12659 = !DILocation(line: 963, column: 14, scope: !12591)
!12660 = !DILocation(line: 963, column: 25, scope: !12591)
!12661 = !DILocation(line: 964, column: 27, scope: !12591)
!12662 = !DILocation(line: 964, column: 34, scope: !12591)
!12663 = !DILocation(line: 964, column: 3, scope: !12591)
!12664 = !DILocation(line: 964, column: 14, scope: !12591)
!12665 = !DILocation(line: 964, column: 25, scope: !12591)
!12666 = !DILocation(line: 984, column: 32, scope: !12591)
!12667 = !DILocation(line: 984, column: 39, scope: !12591)
!12668 = !DILocation(line: 984, column: 3, scope: !12591)
!12669 = !DILocation(line: 984, column: 14, scope: !12591)
!12670 = !DILocation(line: 984, column: 30, scope: !12591)
!12671 = !DILocation(line: 986, column: 25, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12591, file: !1149, line: 986, column: 7)
!12673 = !DILocation(line: 986, column: 36, scope: !12672)
!12674 = !DILocation(line: 986, column: 7, scope: !12672)
!12675 = !DILocation(line: 986, column: 7, scope: !12591)
!12676 = !DILocation(line: 989, column: 13, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12672, file: !1149, line: 987, column: 5)
!12678 = !DILocation(line: 989, column: 20, scope: !12677)
!12679 = !DILocation(line: 989, column: 7, scope: !12677)
!12680 = !DILocation(line: 990, column: 23, scope: !12677)
!12681 = !DILocation(line: 990, column: 34, scope: !12677)
!12682 = !DILocation(line: 990, column: 7, scope: !12677)
!12683 = !DILocation(line: 990, column: 14, scope: !12677)
!12684 = !DILocation(line: 990, column: 21, scope: !12677)
!12685 = !DILocation(line: 991, column: 29, scope: !12677)
!12686 = !DILocation(line: 991, column: 40, scope: !12677)
!12687 = !DILocation(line: 991, column: 7, scope: !12677)
!12688 = !DILocation(line: 991, column: 14, scope: !12677)
!12689 = !DILocation(line: 991, column: 27, scope: !12677)
!12690 = !DILocation(line: 992, column: 26, scope: !12677)
!12691 = !DILocation(line: 992, column: 37, scope: !12677)
!12692 = !DILocation(line: 992, column: 7, scope: !12677)
!12693 = !DILocation(line: 992, column: 14, scope: !12677)
!12694 = !DILocation(line: 992, column: 24, scope: !12677)
!12695 = !DILocation(line: 993, column: 31, scope: !12677)
!12696 = !DILocation(line: 993, column: 42, scope: !12677)
!12697 = !DILocation(line: 993, column: 7, scope: !12677)
!12698 = !DILocation(line: 993, column: 14, scope: !12677)
!12699 = !DILocation(line: 993, column: 29, scope: !12677)
!12700 = !DILocation(line: 994, column: 32, scope: !12677)
!12701 = !DILocation(line: 994, column: 43, scope: !12677)
!12702 = !DILocation(line: 994, column: 7, scope: !12677)
!12703 = !DILocation(line: 994, column: 14, scope: !12677)
!12704 = !DILocation(line: 994, column: 30, scope: !12677)
!12705 = !DILocation(line: 996, column: 7, scope: !12677)
!12706 = !DILocation(line: 1012, column: 28, scope: !12591)
!12707 = !DILocation(line: 1012, column: 39, scope: !12591)
!12708 = !DILocation(line: 1012, column: 3, scope: !12591)
!12709 = !DILocation(line: 1012, column: 10, scope: !12591)
!12710 = !DILocation(line: 1012, column: 26, scope: !12591)
!12711 = !DILocation(line: 1013, column: 28, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12591, file: !1149, line: 1013, column: 7)
!12713 = !DILocation(line: 1013, column: 35, scope: !12712)
!12714 = !DILocation(line: 1013, column: 10, scope: !12712)
!12715 = !DILocation(line: 1014, column: 10, scope: !12712)
!12716 = !DILocation(line: 1014, column: 31, scope: !12712)
!12717 = !DILocation(line: 1014, column: 38, scope: !12712)
!12718 = !DILocation(line: 1014, column: 13, scope: !12712)
!12719 = !DILocation(line: 1013, column: 7, scope: !12591)
!12720 = !DILocation(line: 1015, column: 5, scope: !12712)
!12721 = !DILocation(line: 1017, column: 9, scope: !12591)
!12722 = !DILocation(line: 1017, column: 20, scope: !12591)
!12723 = !DILocation(line: 1017, column: 3, scope: !12591)
!12724 = !DILocation(line: 1018, column: 3, scope: !12591)
!12725 = !DILocation(line: 1019, column: 1, scope: !12591)
!12726 = distinct !DISubprogram(name: "transfer_entries", scope: !1149, file: !1149, line: 860, type: !1267, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12727 = !DILocalVariable(name: "dst", arg: 1, scope: !12726, file: !1149, line: 860, type: !1248)
!12728 = !DILocation(line: 860, column: 31, scope: !12726)
!12729 = !DILocalVariable(name: "src", arg: 2, scope: !12726, file: !1149, line: 860, type: !1248)
!12730 = !DILocation(line: 860, column: 48, scope: !12726)
!12731 = !DILocalVariable(name: "safe", arg: 3, scope: !12726, file: !1149, line: 860, type: !141)
!12732 = !DILocation(line: 860, column: 58, scope: !12726)
!12733 = !DILocalVariable(name: "bucket", scope: !12726, file: !1149, line: 862, type: !1152)
!12734 = !DILocation(line: 862, column: 22, scope: !12726)
!12735 = !DILocalVariable(name: "cursor", scope: !12726, file: !1149, line: 863, type: !1152)
!12736 = !DILocation(line: 863, column: 22, scope: !12726)
!12737 = !DILocalVariable(name: "next", scope: !12726, file: !1149, line: 864, type: !1152)
!12738 = !DILocation(line: 864, column: 22, scope: !12726)
!12739 = !DILocation(line: 865, column: 17, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12726, file: !1149, line: 865, column: 3)
!12741 = !DILocation(line: 865, column: 22, scope: !12740)
!12742 = !DILocation(line: 865, column: 15, scope: !12740)
!12743 = !DILocation(line: 865, column: 8, scope: !12740)
!12744 = !DILocation(line: 865, column: 30, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12740, file: !1149, line: 865, column: 3)
!12746 = !DILocation(line: 865, column: 39, scope: !12745)
!12747 = !DILocation(line: 865, column: 44, scope: !12745)
!12748 = !DILocation(line: 865, column: 37, scope: !12745)
!12749 = !DILocation(line: 865, column: 3, scope: !12740)
!12750 = !DILocation(line: 866, column: 9, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12745, file: !1149, line: 866, column: 9)
!12752 = !DILocation(line: 866, column: 17, scope: !12751)
!12753 = !DILocation(line: 866, column: 9, scope: !12745)
!12754 = !DILocalVariable(name: "data", scope: !12755, file: !1149, line: 868, type: !167)
!12755 = distinct !DILexicalBlock(scope: !12751, file: !1149, line: 867, column: 7)
!12756 = !DILocation(line: 868, column: 15, scope: !12755)
!12757 = !DILocalVariable(name: "new_bucket", scope: !12755, file: !1149, line: 869, type: !1152)
!12758 = !DILocation(line: 869, column: 28, scope: !12755)
!12759 = !DILocation(line: 877, column: 23, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12755, file: !1149, line: 877, column: 9)
!12761 = !DILocation(line: 877, column: 31, scope: !12760)
!12762 = !DILocation(line: 877, column: 21, scope: !12760)
!12763 = !DILocation(line: 877, column: 14, scope: !12760)
!12764 = !DILocation(line: 877, column: 37, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12760, file: !1149, line: 877, column: 9)
!12766 = !DILocation(line: 877, column: 9, scope: !12760)
!12767 = !DILocation(line: 879, column: 20, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12765, file: !1149, line: 878, column: 11)
!12769 = !DILocation(line: 879, column: 28, scope: !12768)
!12770 = !DILocation(line: 879, column: 18, scope: !12768)
!12771 = !DILocation(line: 880, column: 39, scope: !12768)
!12772 = !DILocation(line: 880, column: 44, scope: !12768)
!12773 = !DILocation(line: 880, column: 26, scope: !12768)
!12774 = !DILocation(line: 880, column: 24, scope: !12768)
!12775 = !DILocation(line: 882, column: 20, scope: !12768)
!12776 = !DILocation(line: 882, column: 28, scope: !12768)
!12777 = !DILocation(line: 882, column: 18, scope: !12768)
!12778 = !DILocation(line: 884, column: 17, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12768, file: !1149, line: 884, column: 17)
!12780 = !DILocation(line: 884, column: 29, scope: !12779)
!12781 = !DILocation(line: 884, column: 17, scope: !12768)
!12782 = !DILocation(line: 888, column: 32, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12779, file: !1149, line: 885, column: 15)
!12784 = !DILocation(line: 888, column: 44, scope: !12783)
!12785 = !DILocation(line: 888, column: 17, scope: !12783)
!12786 = !DILocation(line: 888, column: 25, scope: !12783)
!12787 = !DILocation(line: 888, column: 30, scope: !12783)
!12788 = !DILocation(line: 889, column: 36, scope: !12783)
!12789 = !DILocation(line: 889, column: 17, scope: !12783)
!12790 = !DILocation(line: 889, column: 29, scope: !12783)
!12791 = !DILocation(line: 889, column: 34, scope: !12783)
!12792 = !DILocation(line: 890, column: 15, scope: !12783)
!12793 = !DILocation(line: 895, column: 36, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12779, file: !1149, line: 892, column: 15)
!12795 = !DILocation(line: 895, column: 17, scope: !12794)
!12796 = !DILocation(line: 895, column: 29, scope: !12794)
!12797 = !DILocation(line: 895, column: 34, scope: !12794)
!12798 = !DILocation(line: 896, column: 17, scope: !12794)
!12799 = !DILocation(line: 896, column: 22, scope: !12794)
!12800 = !DILocation(line: 896, column: 36, scope: !12794)
!12801 = !DILocation(line: 897, column: 29, scope: !12794)
!12802 = !DILocation(line: 897, column: 34, scope: !12794)
!12803 = !DILocation(line: 897, column: 17, scope: !12794)
!12804 = !DILocation(line: 899, column: 11, scope: !12768)
!12805 = !DILocation(line: 877, column: 54, scope: !12765)
!12806 = !DILocation(line: 877, column: 52, scope: !12765)
!12807 = !DILocation(line: 877, column: 9, scope: !12765)
!12808 = distinct !{!12808, !12766, !12809}
!12809 = !DILocation(line: 899, column: 11, scope: !12760)
!12810 = !DILocation(line: 903, column: 16, scope: !12755)
!12811 = !DILocation(line: 903, column: 24, scope: !12755)
!12812 = !DILocation(line: 903, column: 14, scope: !12755)
!12813 = !DILocation(line: 904, column: 9, scope: !12755)
!12814 = !DILocation(line: 904, column: 17, scope: !12755)
!12815 = !DILocation(line: 904, column: 22, scope: !12755)
!12816 = !DILocation(line: 905, column: 13, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12755, file: !1149, line: 905, column: 13)
!12818 = !DILocation(line: 905, column: 13, scope: !12755)
!12819 = !DILocation(line: 906, column: 11, scope: !12817)
!12820 = !DILocation(line: 907, column: 35, scope: !12755)
!12821 = !DILocation(line: 907, column: 40, scope: !12755)
!12822 = !DILocation(line: 907, column: 22, scope: !12755)
!12823 = !DILocation(line: 907, column: 20, scope: !12755)
!12824 = !DILocation(line: 909, column: 13, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12755, file: !1149, line: 909, column: 13)
!12826 = !DILocation(line: 909, column: 25, scope: !12825)
!12827 = !DILocation(line: 909, column: 13, scope: !12755)
!12828 = !DILocalVariable(name: "new_entry", scope: !12829, file: !1149, line: 913, type: !1152)
!12829 = distinct !DILexicalBlock(scope: !12825, file: !1149, line: 910, column: 11)
!12830 = !DILocation(line: 913, column: 32, scope: !12829)
!12831 = !DILocation(line: 913, column: 60, scope: !12829)
!12832 = !DILocation(line: 913, column: 44, scope: !12829)
!12833 = !DILocation(line: 915, column: 17, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12829, file: !1149, line: 915, column: 17)
!12835 = !DILocation(line: 915, column: 27, scope: !12834)
!12836 = !DILocation(line: 915, column: 17, scope: !12829)
!12837 = !DILocation(line: 916, column: 15, scope: !12834)
!12838 = !DILocation(line: 918, column: 31, scope: !12829)
!12839 = !DILocation(line: 918, column: 13, scope: !12829)
!12840 = !DILocation(line: 918, column: 24, scope: !12829)
!12841 = !DILocation(line: 918, column: 29, scope: !12829)
!12842 = !DILocation(line: 919, column: 31, scope: !12829)
!12843 = !DILocation(line: 919, column: 43, scope: !12829)
!12844 = !DILocation(line: 919, column: 13, scope: !12829)
!12845 = !DILocation(line: 919, column: 24, scope: !12829)
!12846 = !DILocation(line: 919, column: 29, scope: !12829)
!12847 = !DILocation(line: 920, column: 32, scope: !12829)
!12848 = !DILocation(line: 920, column: 13, scope: !12829)
!12849 = !DILocation(line: 920, column: 25, scope: !12829)
!12850 = !DILocation(line: 920, column: 30, scope: !12829)
!12851 = !DILocation(line: 921, column: 11, scope: !12829)
!12852 = !DILocation(line: 925, column: 32, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12825, file: !1149, line: 923, column: 11)
!12854 = !DILocation(line: 925, column: 13, scope: !12853)
!12855 = !DILocation(line: 925, column: 25, scope: !12853)
!12856 = !DILocation(line: 925, column: 30, scope: !12853)
!12857 = !DILocation(line: 926, column: 13, scope: !12853)
!12858 = !DILocation(line: 926, column: 18, scope: !12853)
!12859 = !DILocation(line: 926, column: 32, scope: !12853)
!12860 = !DILocation(line: 928, column: 9, scope: !12755)
!12861 = !DILocation(line: 928, column: 17, scope: !12755)
!12862 = !DILocation(line: 928, column: 22, scope: !12755)
!12863 = !DILocation(line: 929, column: 9, scope: !12755)
!12864 = !DILocation(line: 929, column: 14, scope: !12755)
!12865 = !DILocation(line: 929, column: 28, scope: !12755)
!12866 = !DILocation(line: 930, column: 7, scope: !12755)
!12867 = !DILocation(line: 865, column: 64, scope: !12745)
!12868 = !DILocation(line: 865, column: 3, scope: !12745)
!12869 = distinct !{!12869, !12749, !12870}
!12870 = !DILocation(line: 930, column: 7, scope: !12740)
!12871 = !DILocation(line: 931, column: 3, scope: !12726)
!12872 = !DILocation(line: 932, column: 1, scope: !12726)
!12873 = distinct !DISubprogram(name: "free_entry", scope: !1149, file: !1149, line: 776, type: !1269, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12874 = !DILocalVariable(name: "table", arg: 1, scope: !12873, file: !1149, line: 776, type: !1248)
!12875 = !DILocation(line: 776, column: 25, scope: !12873)
!12876 = !DILocalVariable(name: "entry", arg: 2, scope: !12873, file: !1149, line: 776, type: !1152)
!12877 = !DILocation(line: 776, column: 51, scope: !12873)
!12878 = !DILocation(line: 778, column: 3, scope: !12873)
!12879 = !DILocation(line: 778, column: 10, scope: !12873)
!12880 = !DILocation(line: 778, column: 15, scope: !12873)
!12881 = !DILocation(line: 779, column: 17, scope: !12873)
!12882 = !DILocation(line: 779, column: 24, scope: !12873)
!12883 = !DILocation(line: 779, column: 3, scope: !12873)
!12884 = !DILocation(line: 779, column: 10, scope: !12873)
!12885 = !DILocation(line: 779, column: 15, scope: !12873)
!12886 = !DILocation(line: 780, column: 28, scope: !12873)
!12887 = !DILocation(line: 780, column: 3, scope: !12873)
!12888 = !DILocation(line: 780, column: 10, scope: !12873)
!12889 = !DILocation(line: 780, column: 26, scope: !12873)
!12890 = !DILocation(line: 781, column: 1, scope: !12873)
!12891 = distinct !DISubprogram(name: "allocate_entry", scope: !1149, file: !1149, line: 751, type: !1274, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12892 = !DILocalVariable(name: "table", arg: 1, scope: !12891, file: !1149, line: 751, type: !1248)
!12893 = !DILocation(line: 751, column: 29, scope: !12891)
!12894 = !DILocalVariable(name: "new", scope: !12891, file: !1149, line: 753, type: !1152)
!12895 = !DILocation(line: 753, column: 22, scope: !12891)
!12896 = !DILocation(line: 755, column: 7, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12891, file: !1149, line: 755, column: 7)
!12898 = !DILocation(line: 755, column: 14, scope: !12897)
!12899 = !DILocation(line: 755, column: 7, scope: !12891)
!12900 = !DILocation(line: 757, column: 13, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12897, file: !1149, line: 756, column: 5)
!12902 = !DILocation(line: 757, column: 20, scope: !12901)
!12903 = !DILocation(line: 757, column: 11, scope: !12901)
!12904 = !DILocation(line: 758, column: 32, scope: !12901)
!12905 = !DILocation(line: 758, column: 37, scope: !12901)
!12906 = !DILocation(line: 758, column: 7, scope: !12901)
!12907 = !DILocation(line: 758, column: 14, scope: !12901)
!12908 = !DILocation(line: 758, column: 30, scope: !12901)
!12909 = !DILocation(line: 759, column: 5, scope: !12901)
!12910 = !DILocation(line: 765, column: 13, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12897, file: !1149, line: 761, column: 5)
!12912 = !DILocation(line: 765, column: 11, scope: !12911)
!12913 = !DILocation(line: 769, column: 10, scope: !12891)
!12914 = !DILocation(line: 769, column: 3, scope: !12891)
!12915 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !1149, file: !1149, line: 1038, type: !1253, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!12916 = !DILocalVariable(name: "table", arg: 1, scope: !12915, file: !1149, line: 1038, type: !1248)
!12917 = !DILocation(line: 1038, column: 36, scope: !12915)
!12918 = !DILocalVariable(name: "entry", arg: 2, scope: !12915, file: !1149, line: 1038, type: !175)
!12919 = !DILocation(line: 1038, column: 55, scope: !12915)
!12920 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12915, file: !1149, line: 1039, type: !181)
!12921 = !DILocation(line: 1039, column: 37, scope: !12915)
!12922 = !DILocalVariable(name: "data", scope: !12915, file: !1149, line: 1041, type: !167)
!12923 = !DILocation(line: 1041, column: 9, scope: !12915)
!12924 = !DILocalVariable(name: "bucket", scope: !12915, file: !1149, line: 1042, type: !1152)
!12925 = !DILocation(line: 1042, column: 22, scope: !12915)
!12926 = !DILocation(line: 1047, column: 9, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12915, file: !1149, line: 1047, column: 7)
!12928 = !DILocation(line: 1047, column: 7, scope: !12915)
!12929 = !DILocation(line: 1048, column: 5, scope: !12927)
!12930 = !DILocation(line: 1051, column: 32, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12915, file: !1149, line: 1051, column: 7)
!12932 = !DILocation(line: 1051, column: 39, scope: !12931)
!12933 = !DILocation(line: 1051, column: 15, scope: !12931)
!12934 = !DILocation(line: 1051, column: 13, scope: !12931)
!12935 = !DILocation(line: 1051, column: 63, scope: !12931)
!12936 = !DILocation(line: 1051, column: 7, scope: !12915)
!12937 = !DILocation(line: 1053, column: 11, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !1149, line: 1053, column: 11)
!12939 = distinct !DILexicalBlock(scope: !12931, file: !1149, line: 1052, column: 5)
!12940 = !DILocation(line: 1053, column: 11, scope: !12939)
!12941 = !DILocation(line: 1054, column: 24, scope: !12938)
!12942 = !DILocation(line: 1054, column: 10, scope: !12938)
!12943 = !DILocation(line: 1054, column: 22, scope: !12938)
!12944 = !DILocation(line: 1054, column: 9, scope: !12938)
!12945 = !DILocation(line: 1055, column: 7, scope: !12939)
!12946 = !DILocation(line: 1063, column: 7, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12915, file: !1149, line: 1063, column: 7)
!12948 = !DILocation(line: 1063, column: 14, scope: !12947)
!12949 = !DILocation(line: 1064, column: 9, scope: !12947)
!12950 = !DILocation(line: 1064, column: 16, scope: !12947)
!12951 = !DILocation(line: 1064, column: 24, scope: !12947)
!12952 = !DILocation(line: 1064, column: 43, scope: !12947)
!12953 = !DILocation(line: 1064, column: 50, scope: !12947)
!12954 = !DILocation(line: 1064, column: 41, scope: !12947)
!12955 = !DILocation(line: 1064, column: 7, scope: !12947)
!12956 = !DILocation(line: 1063, column: 7, scope: !12915)
!12957 = !DILocation(line: 1068, column: 21, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12947, file: !1149, line: 1065, column: 5)
!12959 = !DILocation(line: 1068, column: 7, scope: !12958)
!12960 = !DILocation(line: 1069, column: 11, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !1149, line: 1069, column: 11)
!12962 = !DILocation(line: 1069, column: 18, scope: !12961)
!12963 = !DILocation(line: 1070, column: 13, scope: !12961)
!12964 = !DILocation(line: 1070, column: 20, scope: !12961)
!12965 = !DILocation(line: 1070, column: 28, scope: !12961)
!12966 = !DILocation(line: 1070, column: 47, scope: !12961)
!12967 = !DILocation(line: 1070, column: 54, scope: !12961)
!12968 = !DILocation(line: 1070, column: 45, scope: !12961)
!12969 = !DILocation(line: 1070, column: 11, scope: !12961)
!12970 = !DILocation(line: 1069, column: 11, scope: !12958)
!12971 = !DILocalVariable(name: "tuning", scope: !12972, file: !1149, line: 1072, type: !1164)
!12972 = distinct !DILexicalBlock(scope: !12961, file: !1149, line: 1071, column: 9)
!12973 = !DILocation(line: 1072, column: 30, scope: !12972)
!12974 = !DILocation(line: 1072, column: 39, scope: !12972)
!12975 = !DILocation(line: 1072, column: 46, scope: !12972)
!12976 = !DILocalVariable(name: "candidate", scope: !12972, file: !1149, line: 1073, type: !1170)
!12977 = !DILocation(line: 1073, column: 17, scope: !12972)
!12978 = !DILocation(line: 1074, column: 14, scope: !12972)
!12979 = !DILocation(line: 1074, column: 22, scope: !12972)
!12980 = !DILocation(line: 1075, column: 17, scope: !12972)
!12981 = !DILocation(line: 1075, column: 24, scope: !12972)
!12982 = !DILocation(line: 1075, column: 36, scope: !12972)
!12983 = !DILocation(line: 1075, column: 44, scope: !12972)
!12984 = !DILocation(line: 1075, column: 34, scope: !12972)
!12985 = !DILocation(line: 1076, column: 17, scope: !12972)
!12986 = !DILocation(line: 1076, column: 24, scope: !12972)
!12987 = !DILocation(line: 1076, column: 36, scope: !12972)
!12988 = !DILocation(line: 1076, column: 44, scope: !12972)
!12989 = !DILocation(line: 1076, column: 34, scope: !12972)
!12990 = !DILocation(line: 1077, column: 19, scope: !12972)
!12991 = !DILocation(line: 1077, column: 27, scope: !12972)
!12992 = !DILocation(line: 1077, column: 17, scope: !12972)
!12993 = !DILocation(line: 1079, column: 27, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12972, file: !1149, line: 1079, column: 15)
!12995 = !DILocation(line: 1079, column: 24, scope: !12994)
!12996 = !DILocation(line: 1079, column: 15, scope: !12972)
!12997 = !DILocation(line: 1080, column: 13, scope: !12994)
!12998 = !DILocation(line: 1083, column: 29, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12972, file: !1149, line: 1083, column: 15)
!13000 = !DILocation(line: 1083, column: 36, scope: !12999)
!13001 = !DILocation(line: 1083, column: 16, scope: !12999)
!13002 = !DILocation(line: 1083, column: 15, scope: !12972)
!13003 = !DILocation(line: 1084, column: 13, scope: !12999)
!13004 = !DILocation(line: 1087, column: 32, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12972, file: !1149, line: 1087, column: 15)
!13006 = !DILocation(line: 1087, column: 39, scope: !13005)
!13007 = !DILocation(line: 1087, column: 15, scope: !13005)
!13008 = !DILocation(line: 1087, column: 62, scope: !13005)
!13009 = !DILocation(line: 1087, column: 15, scope: !12972)
!13010 = !DILocation(line: 1088, column: 13, scope: !13005)
!13011 = !DILocation(line: 1089, column: 9, scope: !12972)
!13012 = !DILocation(line: 1090, column: 5, scope: !12958)
!13013 = !DILocation(line: 1094, column: 7, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12915, file: !1149, line: 1094, column: 7)
!13015 = !DILocation(line: 1094, column: 15, scope: !13014)
!13016 = !DILocation(line: 1094, column: 7, scope: !12915)
!13017 = !DILocalVariable(name: "new_entry", scope: !13018, file: !1149, line: 1096, type: !1152)
!13018 = distinct !DILexicalBlock(scope: !13014, file: !1149, line: 1095, column: 5)
!13019 = !DILocation(line: 1096, column: 26, scope: !13018)
!13020 = !DILocation(line: 1096, column: 54, scope: !13018)
!13021 = !DILocation(line: 1096, column: 38, scope: !13018)
!13022 = !DILocation(line: 1098, column: 11, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13018, file: !1149, line: 1098, column: 11)
!13024 = !DILocation(line: 1098, column: 21, scope: !13023)
!13025 = !DILocation(line: 1098, column: 11, scope: !13018)
!13026 = !DILocation(line: 1099, column: 9, scope: !13023)
!13027 = !DILocation(line: 1103, column: 34, scope: !13018)
!13028 = !DILocation(line: 1103, column: 7, scope: !13018)
!13029 = !DILocation(line: 1103, column: 18, scope: !13018)
!13030 = !DILocation(line: 1103, column: 23, scope: !13018)
!13031 = !DILocation(line: 1104, column: 25, scope: !13018)
!13032 = !DILocation(line: 1104, column: 33, scope: !13018)
!13033 = !DILocation(line: 1104, column: 7, scope: !13018)
!13034 = !DILocation(line: 1104, column: 18, scope: !13018)
!13035 = !DILocation(line: 1104, column: 23, scope: !13018)
!13036 = !DILocation(line: 1105, column: 22, scope: !13018)
!13037 = !DILocation(line: 1105, column: 7, scope: !13018)
!13038 = !DILocation(line: 1105, column: 15, scope: !13018)
!13039 = !DILocation(line: 1105, column: 20, scope: !13018)
!13040 = !DILocation(line: 1106, column: 7, scope: !13018)
!13041 = !DILocation(line: 1106, column: 14, scope: !13018)
!13042 = !DILocation(line: 1106, column: 23, scope: !13018)
!13043 = !DILocation(line: 1107, column: 7, scope: !13018)
!13044 = !DILocation(line: 1112, column: 27, scope: !12915)
!13045 = !DILocation(line: 1112, column: 3, scope: !12915)
!13046 = !DILocation(line: 1112, column: 11, scope: !12915)
!13047 = !DILocation(line: 1112, column: 16, scope: !12915)
!13048 = !DILocation(line: 1113, column: 3, scope: !12915)
!13049 = !DILocation(line: 1113, column: 10, scope: !12915)
!13050 = !DILocation(line: 1113, column: 19, scope: !12915)
!13051 = !DILocation(line: 1114, column: 3, scope: !12915)
!13052 = !DILocation(line: 1114, column: 10, scope: !12915)
!13053 = !DILocation(line: 1114, column: 24, scope: !12915)
!13054 = !DILocation(line: 1116, column: 3, scope: !12915)
!13055 = !DILocation(line: 1117, column: 1, scope: !12915)
!13056 = distinct !DISubprogram(name: "hash_find_entry", scope: !1149, file: !1149, line: 790, type: !1271, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!13057 = !DILocalVariable(name: "table", arg: 1, scope: !13056, file: !1149, line: 790, type: !1248)
!13058 = !DILocation(line: 790, column: 30, scope: !13056)
!13059 = !DILocalVariable(name: "entry", arg: 2, scope: !13056, file: !1149, line: 790, type: !175)
!13060 = !DILocation(line: 790, column: 49, scope: !13056)
!13061 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13056, file: !1149, line: 791, type: !1273)
!13062 = !DILocation(line: 791, column: 38, scope: !13056)
!13063 = !DILocalVariable(name: "delete", arg: 4, scope: !13056, file: !1149, line: 791, type: !141)
!13064 = !DILocation(line: 791, column: 56, scope: !13056)
!13065 = !DILocalVariable(name: "bucket", scope: !13056, file: !1149, line: 793, type: !1152)
!13066 = !DILocation(line: 793, column: 22, scope: !13056)
!13067 = !DILocation(line: 793, column: 44, scope: !13056)
!13068 = !DILocation(line: 793, column: 51, scope: !13056)
!13069 = !DILocation(line: 793, column: 31, scope: !13056)
!13070 = !DILocalVariable(name: "cursor", scope: !13056, file: !1149, line: 794, type: !1152)
!13071 = !DILocation(line: 794, column: 22, scope: !13056)
!13072 = !DILocation(line: 796, column: 18, scope: !13056)
!13073 = !DILocation(line: 796, column: 4, scope: !13056)
!13074 = !DILocation(line: 796, column: 16, scope: !13056)
!13075 = !DILocation(line: 799, column: 7, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13056, file: !1149, line: 799, column: 7)
!13077 = !DILocation(line: 799, column: 15, scope: !13076)
!13078 = !DILocation(line: 799, column: 20, scope: !13076)
!13079 = !DILocation(line: 799, column: 7, scope: !13056)
!13080 = !DILocation(line: 800, column: 5, scope: !13076)
!13081 = !DILocation(line: 803, column: 7, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13056, file: !1149, line: 803, column: 7)
!13083 = !DILocation(line: 803, column: 16, scope: !13082)
!13084 = !DILocation(line: 803, column: 24, scope: !13082)
!13085 = !DILocation(line: 803, column: 13, scope: !13082)
!13086 = !DILocation(line: 803, column: 29, scope: !13082)
!13087 = !DILocation(line: 803, column: 32, scope: !13082)
!13088 = !DILocation(line: 803, column: 39, scope: !13082)
!13089 = !DILocation(line: 803, column: 51, scope: !13082)
!13090 = !DILocation(line: 803, column: 58, scope: !13082)
!13091 = !DILocation(line: 803, column: 66, scope: !13082)
!13092 = !DILocation(line: 803, column: 7, scope: !13056)
!13093 = !DILocalVariable(name: "data", scope: !13094, file: !1149, line: 805, type: !167)
!13094 = distinct !DILexicalBlock(scope: !13082, file: !1149, line: 804, column: 5)
!13095 = !DILocation(line: 805, column: 13, scope: !13094)
!13096 = !DILocation(line: 805, column: 20, scope: !13094)
!13097 = !DILocation(line: 805, column: 28, scope: !13094)
!13098 = !DILocation(line: 807, column: 11, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13094, file: !1149, line: 807, column: 11)
!13100 = !DILocation(line: 807, column: 11, scope: !13094)
!13101 = !DILocation(line: 809, column: 15, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !1149, line: 809, column: 15)
!13103 = distinct !DILexicalBlock(scope: !13099, file: !1149, line: 808, column: 9)
!13104 = !DILocation(line: 809, column: 23, scope: !13102)
!13105 = !DILocation(line: 809, column: 15, scope: !13103)
!13106 = !DILocalVariable(name: "next", scope: !13107, file: !1149, line: 811, type: !1152)
!13107 = distinct !DILexicalBlock(scope: !13102, file: !1149, line: 810, column: 13)
!13108 = !DILocation(line: 811, column: 34, scope: !13107)
!13109 = !DILocation(line: 811, column: 41, scope: !13107)
!13110 = !DILocation(line: 811, column: 49, scope: !13107)
!13111 = !DILocation(line: 815, column: 16, scope: !13107)
!13112 = !DILocation(line: 815, column: 26, scope: !13107)
!13113 = !DILocation(line: 815, column: 25, scope: !13107)
!13114 = !{i64 0, i64 8, !2474, i64 8, i64 8, !2474}
!13115 = !DILocation(line: 816, column: 27, scope: !13107)
!13116 = !DILocation(line: 816, column: 34, scope: !13107)
!13117 = !DILocation(line: 816, column: 15, scope: !13107)
!13118 = !DILocation(line: 817, column: 13, scope: !13107)
!13119 = !DILocation(line: 820, column: 15, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13102, file: !1149, line: 819, column: 13)
!13121 = !DILocation(line: 820, column: 23, scope: !13120)
!13122 = !DILocation(line: 820, column: 28, scope: !13120)
!13123 = !DILocation(line: 822, column: 9, scope: !13103)
!13124 = !DILocation(line: 824, column: 14, scope: !13094)
!13125 = !DILocation(line: 824, column: 7, scope: !13094)
!13126 = !DILocation(line: 828, column: 17, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13056, file: !1149, line: 828, column: 3)
!13128 = !DILocation(line: 828, column: 15, scope: !13127)
!13129 = !DILocation(line: 828, column: 8, scope: !13127)
!13130 = !DILocation(line: 828, column: 25, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13127, file: !1149, line: 828, column: 3)
!13132 = !DILocation(line: 828, column: 33, scope: !13131)
!13133 = !DILocation(line: 828, column: 3, scope: !13127)
!13134 = !DILocation(line: 830, column: 11, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !1149, line: 830, column: 11)
!13136 = distinct !DILexicalBlock(scope: !13131, file: !1149, line: 829, column: 5)
!13137 = !DILocation(line: 830, column: 20, scope: !13135)
!13138 = !DILocation(line: 830, column: 28, scope: !13135)
!13139 = !DILocation(line: 830, column: 34, scope: !13135)
!13140 = !DILocation(line: 830, column: 17, scope: !13135)
!13141 = !DILocation(line: 831, column: 11, scope: !13135)
!13142 = !DILocation(line: 831, column: 14, scope: !13135)
!13143 = !DILocation(line: 831, column: 21, scope: !13135)
!13144 = !DILocation(line: 831, column: 33, scope: !13135)
!13145 = !DILocation(line: 831, column: 40, scope: !13135)
!13146 = !DILocation(line: 831, column: 48, scope: !13135)
!13147 = !DILocation(line: 831, column: 54, scope: !13135)
!13148 = !DILocation(line: 830, column: 11, scope: !13136)
!13149 = !DILocalVariable(name: "data", scope: !13150, file: !1149, line: 833, type: !167)
!13150 = distinct !DILexicalBlock(scope: !13135, file: !1149, line: 832, column: 9)
!13151 = !DILocation(line: 833, column: 17, scope: !13150)
!13152 = !DILocation(line: 833, column: 24, scope: !13150)
!13153 = !DILocation(line: 833, column: 32, scope: !13150)
!13154 = !DILocation(line: 833, column: 38, scope: !13150)
!13155 = !DILocation(line: 835, column: 15, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13150, file: !1149, line: 835, column: 15)
!13157 = !DILocation(line: 835, column: 15, scope: !13150)
!13158 = !DILocalVariable(name: "next", scope: !13159, file: !1149, line: 837, type: !1152)
!13159 = distinct !DILexicalBlock(scope: !13156, file: !1149, line: 836, column: 13)
!13160 = !DILocation(line: 837, column: 34, scope: !13159)
!13161 = !DILocation(line: 837, column: 41, scope: !13159)
!13162 = !DILocation(line: 837, column: 49, scope: !13159)
!13163 = !DILocation(line: 841, column: 30, scope: !13159)
!13164 = !DILocation(line: 841, column: 36, scope: !13159)
!13165 = !DILocation(line: 841, column: 15, scope: !13159)
!13166 = !DILocation(line: 841, column: 23, scope: !13159)
!13167 = !DILocation(line: 841, column: 28, scope: !13159)
!13168 = !DILocation(line: 842, column: 27, scope: !13159)
!13169 = !DILocation(line: 842, column: 34, scope: !13159)
!13170 = !DILocation(line: 842, column: 15, scope: !13159)
!13171 = !DILocation(line: 843, column: 13, scope: !13159)
!13172 = !DILocation(line: 845, column: 18, scope: !13150)
!13173 = !DILocation(line: 845, column: 11, scope: !13150)
!13174 = !DILocation(line: 847, column: 5, scope: !13136)
!13175 = !DILocation(line: 828, column: 48, scope: !13131)
!13176 = !DILocation(line: 828, column: 56, scope: !13131)
!13177 = !DILocation(line: 828, column: 46, scope: !13131)
!13178 = !DILocation(line: 828, column: 3, scope: !13131)
!13179 = distinct !{!13179, !13133, !13180}
!13180 = !DILocation(line: 847, column: 5, scope: !13127)
!13181 = !DILocation(line: 850, column: 3, scope: !13056)
!13182 = !DILocation(line: 851, column: 1, scope: !13056)
!13183 = distinct !DISubprogram(name: "hash_insert", scope: !1149, file: !1149, line: 1126, type: !1255, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!13184 = !DILocalVariable(name: "table", arg: 1, scope: !13183, file: !1149, line: 1126, type: !1248)
!13185 = !DILocation(line: 1126, column: 26, scope: !13183)
!13186 = !DILocalVariable(name: "entry", arg: 2, scope: !13183, file: !1149, line: 1126, type: !175)
!13187 = !DILocation(line: 1126, column: 45, scope: !13183)
!13188 = !DILocalVariable(name: "matched_ent", scope: !13183, file: !1149, line: 1128, type: !175)
!13189 = !DILocation(line: 1128, column: 15, scope: !13183)
!13190 = !DILocalVariable(name: "err", scope: !13183, file: !1149, line: 1129, type: !27)
!13191 = !DILocation(line: 1129, column: 7, scope: !13183)
!13192 = !DILocation(line: 1129, column: 36, scope: !13183)
!13193 = !DILocation(line: 1129, column: 43, scope: !13183)
!13194 = !DILocation(line: 1129, column: 13, scope: !13183)
!13195 = !DILocation(line: 1130, column: 11, scope: !13183)
!13196 = !DILocation(line: 1130, column: 15, scope: !13183)
!13197 = !DILocation(line: 1132, column: 23, scope: !13183)
!13198 = !DILocation(line: 1132, column: 27, scope: !13183)
!13199 = !DILocation(line: 1132, column: 34, scope: !13183)
!13200 = !DILocation(line: 1132, column: 48, scope: !13183)
!13201 = !DILocation(line: 1130, column: 3, scope: !13183)
!13202 = distinct !DISubprogram(name: "hash_delete", scope: !1149, file: !1149, line: 1140, type: !1255, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1140, retainedNodes: !152)
!13203 = !DILocalVariable(name: "table", arg: 1, scope: !13202, file: !1149, line: 1140, type: !1248)
!13204 = !DILocation(line: 1140, column: 26, scope: !13202)
!13205 = !DILocalVariable(name: "entry", arg: 2, scope: !13202, file: !1149, line: 1140, type: !175)
!13206 = !DILocation(line: 1140, column: 45, scope: !13202)
!13207 = !DILocalVariable(name: "data", scope: !13202, file: !1149, line: 1142, type: !167)
!13208 = !DILocation(line: 1142, column: 9, scope: !13202)
!13209 = !DILocalVariable(name: "bucket", scope: !13202, file: !1149, line: 1143, type: !1152)
!13210 = !DILocation(line: 1143, column: 22, scope: !13202)
!13211 = !DILocation(line: 1145, column: 27, scope: !13202)
!13212 = !DILocation(line: 1145, column: 34, scope: !13202)
!13213 = !DILocation(line: 1145, column: 10, scope: !13202)
!13214 = !DILocation(line: 1145, column: 8, scope: !13202)
!13215 = !DILocation(line: 1146, column: 8, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13202, file: !1149, line: 1146, column: 7)
!13217 = !DILocation(line: 1146, column: 7, scope: !13202)
!13218 = !DILocation(line: 1147, column: 5, scope: !13216)
!13219 = !DILocation(line: 1149, column: 3, scope: !13202)
!13220 = !DILocation(line: 1149, column: 10, scope: !13202)
!13221 = !DILocation(line: 1149, column: 19, scope: !13202)
!13222 = !DILocation(line: 1150, column: 8, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13202, file: !1149, line: 1150, column: 7)
!13224 = !DILocation(line: 1150, column: 16, scope: !13223)
!13225 = !DILocation(line: 1150, column: 7, scope: !13202)
!13226 = !DILocation(line: 1152, column: 7, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13223, file: !1149, line: 1151, column: 5)
!13228 = !DILocation(line: 1152, column: 14, scope: !13227)
!13229 = !DILocation(line: 1152, column: 28, scope: !13227)
!13230 = !DILocation(line: 1157, column: 11, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13227, file: !1149, line: 1157, column: 11)
!13232 = !DILocation(line: 1157, column: 18, scope: !13231)
!13233 = !DILocation(line: 1158, column: 13, scope: !13231)
!13234 = !DILocation(line: 1158, column: 20, scope: !13231)
!13235 = !DILocation(line: 1158, column: 28, scope: !13231)
!13236 = !DILocation(line: 1158, column: 47, scope: !13231)
!13237 = !DILocation(line: 1158, column: 54, scope: !13231)
!13238 = !DILocation(line: 1158, column: 45, scope: !13231)
!13239 = !DILocation(line: 1158, column: 11, scope: !13231)
!13240 = !DILocation(line: 1157, column: 11, scope: !13227)
!13241 = !DILocation(line: 1162, column: 25, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13231, file: !1149, line: 1159, column: 9)
!13243 = !DILocation(line: 1162, column: 11, scope: !13242)
!13244 = !DILocation(line: 1163, column: 15, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13242, file: !1149, line: 1163, column: 15)
!13246 = !DILocation(line: 1163, column: 22, scope: !13245)
!13247 = !DILocation(line: 1164, column: 17, scope: !13245)
!13248 = !DILocation(line: 1164, column: 24, scope: !13245)
!13249 = !DILocation(line: 1164, column: 32, scope: !13245)
!13250 = !DILocation(line: 1164, column: 51, scope: !13245)
!13251 = !DILocation(line: 1164, column: 58, scope: !13245)
!13252 = !DILocation(line: 1164, column: 49, scope: !13245)
!13253 = !DILocation(line: 1164, column: 15, scope: !13245)
!13254 = !DILocation(line: 1163, column: 15, scope: !13242)
!13255 = !DILocalVariable(name: "tuning", scope: !13256, file: !1149, line: 1166, type: !1164)
!13256 = distinct !DILexicalBlock(scope: !13245, file: !1149, line: 1165, column: 13)
!13257 = !DILocation(line: 1166, column: 34, scope: !13256)
!13258 = !DILocation(line: 1166, column: 43, scope: !13256)
!13259 = !DILocation(line: 1166, column: 50, scope: !13256)
!13260 = !DILocalVariable(name: "candidate", scope: !13256, file: !1149, line: 1167, type: !149)
!13261 = !DILocation(line: 1167, column: 22, scope: !13256)
!13262 = !DILocation(line: 1168, column: 18, scope: !13256)
!13263 = !DILocation(line: 1168, column: 26, scope: !13256)
!13264 = !DILocation(line: 1169, column: 20, scope: !13256)
!13265 = !DILocation(line: 1169, column: 27, scope: !13256)
!13266 = !DILocation(line: 1169, column: 39, scope: !13256)
!13267 = !DILocation(line: 1169, column: 47, scope: !13256)
!13268 = !DILocation(line: 1169, column: 37, scope: !13256)
!13269 = !DILocation(line: 1170, column: 21, scope: !13256)
!13270 = !DILocation(line: 1170, column: 28, scope: !13256)
!13271 = !DILocation(line: 1170, column: 40, scope: !13256)
!13272 = !DILocation(line: 1170, column: 48, scope: !13256)
!13273 = !DILocation(line: 1170, column: 38, scope: !13256)
!13274 = !DILocation(line: 1171, column: 23, scope: !13256)
!13275 = !DILocation(line: 1171, column: 31, scope: !13256)
!13276 = !DILocation(line: 1171, column: 21, scope: !13256)
!13277 = !DILocation(line: 1168, column: 17, scope: !13256)
!13278 = !DILocation(line: 1173, column: 33, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13256, file: !1149, line: 1173, column: 19)
!13280 = !DILocation(line: 1173, column: 40, scope: !13279)
!13281 = !DILocation(line: 1173, column: 20, scope: !13279)
!13282 = !DILocation(line: 1173, column: 19, scope: !13256)
!13283 = !DILocalVariable(name: "cursor", scope: !13284, file: !1149, line: 1181, type: !1152)
!13284 = distinct !DILexicalBlock(scope: !13279, file: !1149, line: 1174, column: 17)
!13285 = !DILocation(line: 1181, column: 38, scope: !13284)
!13286 = !DILocation(line: 1181, column: 47, scope: !13284)
!13287 = !DILocation(line: 1181, column: 54, scope: !13284)
!13288 = !DILocalVariable(name: "next", scope: !13284, file: !1149, line: 1182, type: !1152)
!13289 = !DILocation(line: 1182, column: 38, scope: !13284)
!13290 = !DILocation(line: 1183, column: 19, scope: !13284)
!13291 = !DILocation(line: 1183, column: 26, scope: !13284)
!13292 = !DILocation(line: 1185, column: 30, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13284, file: !1149, line: 1184, column: 21)
!13294 = !DILocation(line: 1185, column: 38, scope: !13293)
!13295 = !DILocation(line: 1185, column: 28, scope: !13293)
!13296 = !DILocation(line: 1186, column: 29, scope: !13293)
!13297 = !DILocation(line: 1186, column: 23, scope: !13293)
!13298 = !DILocation(line: 1187, column: 32, scope: !13293)
!13299 = !DILocation(line: 1187, column: 30, scope: !13293)
!13300 = distinct !{!13300, !13290, !13301}
!13301 = !DILocation(line: 1188, column: 21, scope: !13284)
!13302 = !DILocation(line: 1189, column: 19, scope: !13284)
!13303 = !DILocation(line: 1189, column: 26, scope: !13284)
!13304 = !DILocation(line: 1189, column: 42, scope: !13284)
!13305 = !DILocation(line: 1191, column: 17, scope: !13284)
!13306 = !DILocation(line: 1192, column: 13, scope: !13256)
!13307 = !DILocation(line: 1193, column: 9, scope: !13242)
!13308 = !DILocation(line: 1194, column: 5, scope: !13227)
!13309 = !DILocation(line: 1196, column: 10, scope: !13202)
!13310 = !DILocation(line: 1196, column: 3, scope: !13202)
!13311 = !DILocation(line: 1197, column: 1, scope: !13202)
!13312 = distinct !DISubprogram(name: "triple_hash", scope: !13313, file: !13313, line: 34, type: !328, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !152)
!13313 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!13314 = !DILocalVariable(name: "x", arg: 1, scope: !13312, file: !13313, line: 34, type: !175)
!13315 = !DILocation(line: 34, column: 26, scope: !13312)
!13316 = !DILocalVariable(name: "table_size", arg: 2, scope: !13312, file: !13313, line: 34, type: !149)
!13317 = !DILocation(line: 34, column: 36, scope: !13312)
!13318 = !DILocalVariable(name: "p", scope: !13312, file: !13313, line: 36, type: !1851)
!13319 = !DILocation(line: 36, column: 26, scope: !13312)
!13320 = !DILocation(line: 36, column: 30, scope: !13312)
!13321 = !DILocalVariable(name: "tmp", scope: !13312, file: !13313, line: 37, type: !149)
!13322 = !DILocation(line: 37, column: 10, scope: !13312)
!13323 = !DILocation(line: 37, column: 26, scope: !13312)
!13324 = !DILocation(line: 37, column: 29, scope: !13312)
!13325 = !DILocation(line: 37, column: 35, scope: !13312)
!13326 = !DILocation(line: 37, column: 16, scope: !13312)
!13327 = !DILocation(line: 40, column: 11, scope: !13312)
!13328 = !DILocation(line: 40, column: 17, scope: !13312)
!13329 = !DILocation(line: 40, column: 20, scope: !13312)
!13330 = !DILocation(line: 40, column: 15, scope: !13312)
!13331 = !DILocation(line: 40, column: 30, scope: !13312)
!13332 = !DILocation(line: 40, column: 28, scope: !13312)
!13333 = !DILocation(line: 40, column: 3, scope: !13312)
!13334 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !13313, file: !13313, line: 45, type: !328, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !152)
!13335 = !DILocalVariable(name: "x", arg: 1, scope: !13334, file: !13313, line: 45, type: !175)
!13336 = !DILocation(line: 45, column: 34, scope: !13334)
!13337 = !DILocalVariable(name: "table_size", arg: 2, scope: !13334, file: !13313, line: 45, type: !149)
!13338 = !DILocation(line: 45, column: 44, scope: !13334)
!13339 = !DILocalVariable(name: "p", scope: !13334, file: !13313, line: 47, type: !1851)
!13340 = !DILocation(line: 47, column: 26, scope: !13334)
!13341 = !DILocation(line: 47, column: 30, scope: !13334)
!13342 = !DILocation(line: 50, column: 10, scope: !13334)
!13343 = !DILocation(line: 50, column: 13, scope: !13334)
!13344 = !DILocation(line: 50, column: 22, scope: !13334)
!13345 = !DILocation(line: 50, column: 20, scope: !13334)
!13346 = !DILocation(line: 50, column: 3, scope: !13334)
!13347 = distinct !DISubprogram(name: "triple_compare", scope: !13313, file: !13313, line: 55, type: !332, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !152)
!13348 = !DILocalVariable(name: "x", arg: 1, scope: !13347, file: !13313, line: 55, type: !175)
!13349 = !DILocation(line: 55, column: 29, scope: !13347)
!13350 = !DILocalVariable(name: "y", arg: 2, scope: !13347, file: !13313, line: 55, type: !175)
!13351 = !DILocation(line: 55, column: 44, scope: !13347)
!13352 = !DILocalVariable(name: "a", scope: !13347, file: !13313, line: 57, type: !1851)
!13353 = !DILocation(line: 57, column: 26, scope: !13347)
!13354 = !DILocation(line: 57, column: 30, scope: !13347)
!13355 = !DILocalVariable(name: "b", scope: !13347, file: !13313, line: 58, type: !1851)
!13356 = !DILocation(line: 58, column: 26, scope: !13347)
!13357 = !DILocation(line: 58, column: 30, scope: !13347)
!13358 = !DILocation(line: 59, column: 11, scope: !13347)
!13359 = !DILocation(line: 59, column: 31, scope: !13347)
!13360 = !DILocation(line: 59, column: 45, scope: !13347)
!13361 = !DILocation(line: 59, column: 48, scope: !13347)
!13362 = !DILocation(line: 59, column: 54, scope: !13347)
!13363 = !DILocation(line: 59, column: 57, scope: !13347)
!13364 = !DILocation(line: 59, column: 34, scope: !13347)
!13365 = !DILocation(line: 0, scope: !13347)
!13366 = !DILocation(line: 59, column: 10, scope: !13347)
!13367 = !DILocation(line: 59, column: 3, scope: !13347)
!13368 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !13313, file: !13313, line: 63, type: !332, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !152)
!13369 = !DILocalVariable(name: "x", arg: 1, scope: !13368, file: !13313, line: 63, type: !175)
!13370 = !DILocation(line: 63, column: 37, scope: !13368)
!13371 = !DILocalVariable(name: "y", arg: 2, scope: !13368, file: !13313, line: 63, type: !175)
!13372 = !DILocation(line: 63, column: 52, scope: !13368)
!13373 = !DILocalVariable(name: "a", scope: !13368, file: !13313, line: 65, type: !1851)
!13374 = !DILocation(line: 65, column: 26, scope: !13368)
!13375 = !DILocation(line: 65, column: 30, scope: !13368)
!13376 = !DILocalVariable(name: "b", scope: !13368, file: !13313, line: 66, type: !1851)
!13377 = !DILocation(line: 66, column: 26, scope: !13368)
!13378 = !DILocation(line: 66, column: 30, scope: !13368)
!13379 = !DILocation(line: 67, column: 11, scope: !13368)
!13380 = !DILocation(line: 67, column: 31, scope: !13368)
!13381 = !DILocation(line: 67, column: 34, scope: !13368)
!13382 = !DILocation(line: 0, scope: !13368)
!13383 = !DILocation(line: 67, column: 10, scope: !13368)
!13384 = !DILocation(line: 67, column: 3, scope: !13368)
!13385 = distinct !DISubprogram(name: "triple_free", scope: !13313, file: !13313, line: 72, type: !334, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1848, retainedNodes: !152)
!13386 = !DILocalVariable(name: "x", arg: 1, scope: !13385, file: !13313, line: 72, type: !167)
!13387 = !DILocation(line: 72, column: 20, scope: !13385)
!13388 = !DILocalVariable(name: "a", scope: !13385, file: !13313, line: 74, type: !1858)
!13389 = !DILocation(line: 74, column: 20, scope: !13385)
!13390 = !DILocation(line: 74, column: 24, scope: !13385)
!13391 = !DILocation(line: 75, column: 9, scope: !13385)
!13392 = !DILocation(line: 75, column: 12, scope: !13385)
!13393 = !DILocation(line: 75, column: 3, scope: !13385)
!13394 = !DILocation(line: 76, column: 9, scope: !13385)
!13395 = !DILocation(line: 76, column: 3, scope: !13385)
!13396 = !DILocation(line: 77, column: 1, scope: !13385)
!13397 = distinct !DISubprogram(name: "human_readable", scope: !1336, file: !1336, line: 153, type: !1283, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1279, retainedNodes: !152)
!13398 = !DILocalVariable(name: "n", arg: 1, scope: !13397, file: !1336, line: 153, type: !168)
!13399 = !DILocation(line: 153, column: 27, scope: !13397)
!13400 = !DILocalVariable(name: "buf", arg: 2, scope: !13397, file: !1336, line: 153, type: !143)
!13401 = !DILocation(line: 153, column: 36, scope: !13397)
!13402 = !DILocalVariable(name: "opts", arg: 3, scope: !13397, file: !1336, line: 153, type: !27)
!13403 = !DILocation(line: 153, column: 45, scope: !13397)
!13404 = !DILocalVariable(name: "from_block_size", arg: 4, scope: !13397, file: !1336, line: 154, type: !168)
!13405 = !DILocation(line: 154, column: 27, scope: !13397)
!13406 = !DILocalVariable(name: "to_block_size", arg: 5, scope: !13397, file: !1336, line: 154, type: !168)
!13407 = !DILocation(line: 154, column: 54, scope: !13397)
!13408 = !DILocalVariable(name: "inexact_style", scope: !13397, file: !1336, line: 156, type: !27)
!13409 = !DILocation(line: 156, column: 7, scope: !13397)
!13410 = !DILocation(line: 157, column: 5, scope: !13397)
!13411 = !DILocation(line: 157, column: 10, scope: !13397)
!13412 = !DILocalVariable(name: "base", scope: !13397, file: !1336, line: 158, type: !6)
!13413 = !DILocation(line: 158, column: 16, scope: !13397)
!13414 = !DILocation(line: 158, column: 23, scope: !13397)
!13415 = !DILocation(line: 158, column: 28, scope: !13397)
!13416 = !DILocalVariable(name: "amt", scope: !13397, file: !1336, line: 159, type: !168)
!13417 = !DILocation(line: 159, column: 13, scope: !13397)
!13418 = !DILocalVariable(name: "tenths", scope: !13397, file: !1336, line: 160, type: !27)
!13419 = !DILocation(line: 160, column: 7, scope: !13397)
!13420 = !DILocalVariable(name: "exponent", scope: !13397, file: !1336, line: 161, type: !27)
!13421 = !DILocation(line: 161, column: 7, scope: !13397)
!13422 = !DILocalVariable(name: "exponent_max", scope: !13397, file: !1336, line: 162, type: !27)
!13423 = !DILocation(line: 162, column: 7, scope: !13397)
!13424 = !DILocalVariable(name: "p", scope: !13397, file: !1336, line: 163, type: !143)
!13425 = !DILocation(line: 163, column: 9, scope: !13397)
!13426 = !DILocalVariable(name: "psuffix", scope: !13397, file: !1336, line: 164, type: !143)
!13427 = !DILocation(line: 164, column: 9, scope: !13397)
!13428 = !DILocalVariable(name: "integerlim", scope: !13397, file: !1336, line: 165, type: !146)
!13429 = !DILocation(line: 165, column: 15, scope: !13397)
!13430 = !DILocalVariable(name: "rounding", scope: !13397, file: !1336, line: 171, type: !27)
!13431 = !DILocation(line: 171, column: 7, scope: !13397)
!13432 = !DILocalVariable(name: "decimal_point", scope: !13397, file: !1336, line: 173, type: !146)
!13433 = !DILocation(line: 173, column: 15, scope: !13397)
!13434 = !DILocalVariable(name: "decimal_pointlen", scope: !13397, file: !1336, line: 174, type: !149)
!13435 = !DILocation(line: 174, column: 10, scope: !13397)
!13436 = !DILocalVariable(name: "grouping", scope: !13397, file: !1336, line: 175, type: !146)
!13437 = !DILocation(line: 175, column: 15, scope: !13397)
!13438 = !DILocalVariable(name: "thousands_sep", scope: !13397, file: !1336, line: 176, type: !146)
!13439 = !DILocation(line: 176, column: 15, scope: !13397)
!13440 = !DILocalVariable(name: "l", scope: !13397, file: !1336, line: 177, type: !1285)
!13441 = !DILocation(line: 177, column: 23, scope: !13397)
!13442 = !DILocation(line: 177, column: 27, scope: !13397)
!13443 = !DILocalVariable(name: "pointlen", scope: !13397, file: !1336, line: 178, type: !149)
!13444 = !DILocation(line: 178, column: 10, scope: !13397)
!13445 = !DILocation(line: 178, column: 29, scope: !13397)
!13446 = !DILocation(line: 178, column: 32, scope: !13397)
!13447 = !{!13448, !2475, i64 0}
!13448 = !{!"lconv", !2475, i64 0, !2475, i64 8, !2475, i64 16, !2475, i64 24, !2475, i64 32, !2475, i64 40, !2475, i64 48, !2475, i64 56, !2475, i64 64, !2475, i64 72, !2470, i64 80, !2470, i64 81, !2470, i64 82, !2470, i64 83, !2470, i64 84, !2470, i64 85, !2470, i64 86, !2470, i64 87, !2470, i64 88, !2470, i64 89, !2470, i64 90, !2470, i64 91, !2470, i64 92, !2470, i64 93}
!13449 = !DILocation(line: 178, column: 21, scope: !13397)
!13450 = !DILocation(line: 179, column: 11, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 179, column: 7)
!13452 = !DILocation(line: 179, column: 9, scope: !13451)
!13453 = !DILocation(line: 179, column: 20, scope: !13451)
!13454 = !DILocation(line: 179, column: 23, scope: !13451)
!13455 = !DILocation(line: 179, column: 32, scope: !13451)
!13456 = !DILocation(line: 179, column: 7, scope: !13397)
!13457 = !DILocation(line: 181, column: 23, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13451, file: !1336, line: 180, column: 5)
!13459 = !DILocation(line: 181, column: 26, scope: !13458)
!13460 = !DILocation(line: 181, column: 21, scope: !13458)
!13461 = !DILocation(line: 182, column: 26, scope: !13458)
!13462 = !DILocation(line: 182, column: 24, scope: !13458)
!13463 = !DILocation(line: 183, column: 5, scope: !13458)
!13464 = !DILocation(line: 184, column: 14, scope: !13397)
!13465 = !DILocation(line: 184, column: 17, scope: !13397)
!13466 = !{!13448, !2475, i64 16}
!13467 = !DILocation(line: 184, column: 12, scope: !13397)
!13468 = !DILocation(line: 185, column: 15, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 185, column: 7)
!13470 = !DILocation(line: 185, column: 18, scope: !13469)
!13471 = !{!13448, !2475, i64 8}
!13472 = !DILocation(line: 185, column: 7, scope: !13469)
!13473 = !DILocation(line: 185, column: 33, scope: !13469)
!13474 = !DILocation(line: 185, column: 7, scope: !13397)
!13475 = !DILocation(line: 186, column: 21, scope: !13469)
!13476 = !DILocation(line: 186, column: 24, scope: !13469)
!13477 = !DILocation(line: 186, column: 19, scope: !13469)
!13478 = !DILocation(line: 186, column: 5, scope: !13469)
!13479 = !DILocation(line: 189, column: 13, scope: !13397)
!13480 = !DILocation(line: 189, column: 17, scope: !13397)
!13481 = !DILocation(line: 189, column: 42, scope: !13397)
!13482 = !DILocation(line: 189, column: 46, scope: !13397)
!13483 = !DILocation(line: 189, column: 11, scope: !13397)
!13484 = !DILocation(line: 190, column: 7, scope: !13397)
!13485 = !DILocation(line: 190, column: 5, scope: !13397)
!13486 = !DILocation(line: 195, column: 7, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 195, column: 7)
!13488 = !DILocation(line: 195, column: 24, scope: !13487)
!13489 = !DILocation(line: 195, column: 21, scope: !13487)
!13490 = !DILocation(line: 195, column: 7, scope: !13397)
!13491 = !DILocation(line: 197, column: 11, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13493, file: !1336, line: 197, column: 11)
!13493 = distinct !DILexicalBlock(scope: !13487, file: !1336, line: 196, column: 5)
!13494 = !DILocation(line: 197, column: 29, scope: !13492)
!13495 = !DILocation(line: 197, column: 27, scope: !13492)
!13496 = !DILocation(line: 197, column: 43, scope: !13492)
!13497 = !DILocation(line: 197, column: 11, scope: !13493)
!13498 = !DILocalVariable(name: "multiplier", scope: !13499, file: !1336, line: 199, type: !168)
!13499 = distinct !DILexicalBlock(scope: !13492, file: !1336, line: 198, column: 9)
!13500 = !DILocation(line: 199, column: 21, scope: !13499)
!13501 = !DILocation(line: 199, column: 34, scope: !13499)
!13502 = !DILocation(line: 199, column: 52, scope: !13499)
!13503 = !DILocation(line: 199, column: 50, scope: !13499)
!13504 = !DILocation(line: 200, column: 17, scope: !13499)
!13505 = !DILocation(line: 200, column: 21, scope: !13499)
!13506 = !DILocation(line: 200, column: 19, scope: !13499)
!13507 = !DILocation(line: 200, column: 15, scope: !13499)
!13508 = !DILocation(line: 201, column: 15, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13499, file: !1336, line: 201, column: 15)
!13510 = !DILocation(line: 201, column: 21, scope: !13509)
!13511 = !DILocation(line: 201, column: 19, scope: !13509)
!13512 = !DILocation(line: 201, column: 35, scope: !13509)
!13513 = !DILocation(line: 201, column: 32, scope: !13509)
!13514 = !DILocation(line: 201, column: 15, scope: !13499)
!13515 = !DILocation(line: 203, column: 22, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13509, file: !1336, line: 202, column: 13)
!13517 = !DILocation(line: 204, column: 24, scope: !13516)
!13518 = !DILocation(line: 205, column: 15, scope: !13516)
!13519 = !DILocation(line: 207, column: 9, scope: !13499)
!13520 = !DILocation(line: 208, column: 5, scope: !13493)
!13521 = !DILocation(line: 209, column: 12, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13487, file: !1336, line: 209, column: 12)
!13523 = !DILocation(line: 209, column: 28, scope: !13522)
!13524 = !DILocation(line: 209, column: 33, scope: !13522)
!13525 = !DILocation(line: 209, column: 36, scope: !13522)
!13526 = !DILocation(line: 209, column: 52, scope: !13522)
!13527 = !DILocation(line: 209, column: 50, scope: !13522)
!13528 = !DILocation(line: 209, column: 68, scope: !13522)
!13529 = !DILocation(line: 209, column: 12, scope: !13487)
!13530 = !DILocalVariable(name: "divisor", scope: !13531, file: !1336, line: 211, type: !168)
!13531 = distinct !DILexicalBlock(scope: !13522, file: !1336, line: 210, column: 5)
!13532 = !DILocation(line: 211, column: 17, scope: !13531)
!13533 = !DILocation(line: 211, column: 27, scope: !13531)
!13534 = !DILocation(line: 211, column: 43, scope: !13531)
!13535 = !DILocation(line: 211, column: 41, scope: !13531)
!13536 = !DILocalVariable(name: "r10", scope: !13531, file: !1336, line: 212, type: !168)
!13537 = !DILocation(line: 212, column: 17, scope: !13531)
!13538 = !DILocation(line: 212, column: 24, scope: !13531)
!13539 = !DILocation(line: 212, column: 28, scope: !13531)
!13540 = !DILocation(line: 212, column: 26, scope: !13531)
!13541 = !DILocation(line: 212, column: 37, scope: !13531)
!13542 = !DILocalVariable(name: "r2", scope: !13531, file: !1336, line: 213, type: !168)
!13543 = !DILocation(line: 213, column: 17, scope: !13531)
!13544 = !DILocation(line: 213, column: 23, scope: !13531)
!13545 = !DILocation(line: 213, column: 29, scope: !13531)
!13546 = !DILocation(line: 213, column: 27, scope: !13531)
!13547 = !DILocation(line: 213, column: 38, scope: !13531)
!13548 = !DILocation(line: 214, column: 13, scope: !13531)
!13549 = !DILocation(line: 214, column: 17, scope: !13531)
!13550 = !DILocation(line: 214, column: 15, scope: !13531)
!13551 = !DILocation(line: 214, column: 11, scope: !13531)
!13552 = !DILocation(line: 215, column: 16, scope: !13531)
!13553 = !DILocation(line: 215, column: 22, scope: !13531)
!13554 = !DILocation(line: 215, column: 20, scope: !13531)
!13555 = !DILocation(line: 215, column: 14, scope: !13531)
!13556 = !DILocation(line: 216, column: 18, scope: !13531)
!13557 = !DILocation(line: 216, column: 23, scope: !13531)
!13558 = !DILocation(line: 216, column: 21, scope: !13531)
!13559 = !DILocation(line: 216, column: 37, scope: !13531)
!13560 = !DILocation(line: 216, column: 35, scope: !13531)
!13561 = !DILocation(line: 216, column: 47, scope: !13531)
!13562 = !DILocation(line: 216, column: 57, scope: !13531)
!13563 = !DILocation(line: 216, column: 55, scope: !13531)
!13564 = !DILocation(line: 216, column: 44, scope: !13531)
!13565 = !DILocation(line: 216, column: 16, scope: !13531)
!13566 = !DILocation(line: 217, column: 7, scope: !13531)
!13567 = !DILocalVariable(name: "dto_block_size", scope: !13568, file: !1336, line: 225, type: !1314)
!13568 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 220, column: 3)
!13569 = !DILocation(line: 225, column: 17, scope: !13568)
!13570 = !DILocation(line: 225, column: 34, scope: !13568)
!13571 = !{!13572, !13572, i64 0}
!13572 = !{!"long double", !2470, i64 0}
!13573 = !DILocalVariable(name: "damt", scope: !13568, file: !1336, line: 226, type: !1314)
!13574 = !DILocation(line: 226, column: 17, scope: !13568)
!13575 = !DILocation(line: 226, column: 24, scope: !13568)
!13576 = !DILocation(line: 226, column: 29, scope: !13568)
!13577 = !DILocation(line: 226, column: 47, scope: !13568)
!13578 = !DILocation(line: 226, column: 45, scope: !13568)
!13579 = !DILocation(line: 226, column: 26, scope: !13568)
!13580 = !DILocalVariable(name: "buflen", scope: !13568, file: !1336, line: 227, type: !149)
!13581 = !DILocation(line: 227, column: 12, scope: !13568)
!13582 = !DILocalVariable(name: "nonintegerlen", scope: !13568, file: !1336, line: 228, type: !149)
!13583 = !DILocation(line: 228, column: 12, scope: !13568)
!13584 = !DILocation(line: 230, column: 12, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13568, file: !1336, line: 230, column: 9)
!13586 = !DILocation(line: 230, column: 17, scope: !13585)
!13587 = !DILocation(line: 230, column: 9, scope: !13568)
!13588 = !DILocation(line: 232, column: 18, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13585, file: !1336, line: 231, column: 7)
!13590 = !DILocation(line: 232, column: 46, scope: !13589)
!13591 = !DILocation(line: 232, column: 61, scope: !13589)
!13592 = !DILocation(line: 232, column: 32, scope: !13589)
!13593 = !DILocation(line: 232, column: 9, scope: !13589)
!13594 = !DILocation(line: 233, column: 26, scope: !13589)
!13595 = !DILocation(line: 233, column: 18, scope: !13589)
!13596 = !DILocation(line: 233, column: 16, scope: !13589)
!13597 = !DILocation(line: 234, column: 23, scope: !13589)
!13598 = !DILocation(line: 235, column: 7, scope: !13589)
!13599 = !DILocalVariable(name: "e", scope: !13600, file: !1336, line: 238, type: !1314)
!13600 = distinct !DILexicalBlock(scope: !13585, file: !1336, line: 237, column: 7)
!13601 = !DILocation(line: 238, column: 21, scope: !13600)
!13602 = !DILocation(line: 239, column: 18, scope: !13600)
!13603 = !DILocation(line: 241, column: 9, scope: !13600)
!13604 = !DILocation(line: 243, column: 18, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13600, file: !1336, line: 242, column: 11)
!13606 = !DILocation(line: 243, column: 15, scope: !13605)
!13607 = !DILocation(line: 244, column: 21, scope: !13605)
!13608 = !DILocation(line: 245, column: 11, scope: !13605)
!13609 = !DILocation(line: 246, column: 16, scope: !13600)
!13610 = !DILocation(line: 246, column: 20, scope: !13600)
!13611 = !DILocation(line: 246, column: 18, scope: !13600)
!13612 = !DILocation(line: 246, column: 28, scope: !13600)
!13613 = !DILocation(line: 246, column: 25, scope: !13600)
!13614 = !DILocation(line: 246, column: 33, scope: !13600)
!13615 = !DILocation(line: 246, column: 36, scope: !13600)
!13616 = !DILocation(line: 246, column: 47, scope: !13600)
!13617 = !DILocation(line: 246, column: 45, scope: !13600)
!13618 = !DILocation(line: 0, scope: !13600)
!13619 = distinct !{!13619, !13603, !13620}
!13620 = !DILocation(line: 246, column: 59, scope: !13600)
!13621 = !DILocation(line: 248, column: 17, scope: !13600)
!13622 = !DILocation(line: 248, column: 14, scope: !13600)
!13623 = !DILocation(line: 250, column: 18, scope: !13600)
!13624 = !DILocation(line: 250, column: 46, scope: !13600)
!13625 = !DILocation(line: 250, column: 61, scope: !13600)
!13626 = !DILocation(line: 250, column: 32, scope: !13600)
!13627 = !DILocation(line: 250, column: 9, scope: !13600)
!13628 = !DILocation(line: 251, column: 26, scope: !13600)
!13629 = !DILocation(line: 251, column: 18, scope: !13600)
!13630 = !DILocation(line: 251, column: 16, scope: !13600)
!13631 = !DILocation(line: 252, column: 25, scope: !13600)
!13632 = !DILocation(line: 252, column: 42, scope: !13600)
!13633 = !DILocation(line: 252, column: 23, scope: !13600)
!13634 = !DILocation(line: 254, column: 17, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13600, file: !1336, line: 254, column: 13)
!13636 = !DILocation(line: 254, column: 15, scope: !13635)
!13637 = !DILocation(line: 254, column: 36, scope: !13635)
!13638 = !DILocation(line: 254, column: 41, scope: !13635)
!13639 = !DILocation(line: 254, column: 33, scope: !13635)
!13640 = !DILocation(line: 254, column: 31, scope: !13635)
!13641 = !DILocation(line: 254, column: 62, scope: !13635)
!13642 = !DILocation(line: 254, column: 60, scope: !13635)
!13643 = !DILocation(line: 255, column: 13, scope: !13635)
!13644 = !DILocation(line: 255, column: 18, scope: !13635)
!13645 = !DILocation(line: 255, column: 23, scope: !13635)
!13646 = !DILocation(line: 256, column: 17, scope: !13635)
!13647 = !DILocation(line: 256, column: 20, scope: !13635)
!13648 = !DILocation(line: 256, column: 24, scope: !13635)
!13649 = !DILocation(line: 256, column: 31, scope: !13635)
!13650 = !DILocation(line: 256, column: 36, scope: !13635)
!13651 = !DILocation(line: 254, column: 13, scope: !13600)
!13652 = !DILocation(line: 258, column: 22, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13635, file: !1336, line: 257, column: 11)
!13654 = !DILocation(line: 259, column: 36, scope: !13653)
!13655 = !DILocation(line: 259, column: 51, scope: !13653)
!13656 = !DILocation(line: 259, column: 56, scope: !13653)
!13657 = !DILocation(line: 259, column: 22, scope: !13653)
!13658 = !DILocation(line: 259, column: 62, scope: !13653)
!13659 = !DILocation(line: 258, column: 13, scope: !13653)
!13660 = !DILocation(line: 260, column: 30, scope: !13653)
!13661 = !DILocation(line: 260, column: 22, scope: !13653)
!13662 = !DILocation(line: 260, column: 20, scope: !13653)
!13663 = !DILocation(line: 261, column: 27, scope: !13653)
!13664 = !DILocation(line: 262, column: 11, scope: !13653)
!13665 = !DILocation(line: 265, column: 9, scope: !13568)
!13666 = !DILocation(line: 265, column: 19, scope: !13568)
!13667 = !DILocation(line: 265, column: 17, scope: !13568)
!13668 = !DILocation(line: 265, column: 7, scope: !13568)
!13669 = !DILocation(line: 266, column: 14, scope: !13568)
!13670 = !DILocation(line: 266, column: 17, scope: !13568)
!13671 = !DILocation(line: 266, column: 22, scope: !13568)
!13672 = !DILocation(line: 266, column: 5, scope: !13568)
!13673 = !DILocation(line: 267, column: 18, scope: !13568)
!13674 = !DILocation(line: 267, column: 22, scope: !13568)
!13675 = !DILocation(line: 267, column: 20, scope: !13568)
!13676 = !DILocation(line: 267, column: 31, scope: !13568)
!13677 = !DILocation(line: 267, column: 29, scope: !13568)
!13678 = !DILocation(line: 267, column: 16, scope: !13568)
!13679 = !DILocation(line: 269, column: 3, scope: !13397)
!13680 = !DILabel(scope: !13397, name: "use_integer_arithmetic", file: !1336, line: 271)
!13681 = !DILocation(line: 271, column: 2, scope: !13397)
!13682 = !DILocation(line: 278, column: 9, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !1336, line: 278, column: 9)
!13684 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 272, column: 3)
!13685 = !DILocation(line: 278, column: 14, scope: !13683)
!13686 = !DILocation(line: 278, column: 9, scope: !13684)
!13687 = !DILocation(line: 280, column: 18, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13683, file: !1336, line: 279, column: 7)
!13689 = !DILocation(line: 282, column: 13, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13688, file: !1336, line: 282, column: 13)
!13691 = !DILocation(line: 282, column: 21, scope: !13690)
!13692 = !DILocation(line: 282, column: 18, scope: !13690)
!13693 = !DILocation(line: 282, column: 13, scope: !13688)
!13694 = !DILocation(line: 284, column: 13, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13690, file: !1336, line: 283, column: 11)
!13696 = !DILocalVariable(name: "r10", scope: !13697, file: !1336, line: 286, type: !6)
!13697 = distinct !DILexicalBlock(scope: !13695, file: !1336, line: 285, column: 15)
!13698 = !DILocation(line: 286, column: 30, scope: !13697)
!13699 = !DILocation(line: 286, column: 37, scope: !13697)
!13700 = !DILocation(line: 286, column: 43, scope: !13697)
!13701 = !DILocation(line: 286, column: 41, scope: !13697)
!13702 = !DILocation(line: 286, column: 49, scope: !13697)
!13703 = !DILocation(line: 286, column: 56, scope: !13697)
!13704 = !DILocation(line: 286, column: 54, scope: !13697)
!13705 = !DILocation(line: 286, column: 36, scope: !13697)
!13706 = !DILocalVariable(name: "r2", scope: !13697, file: !1336, line: 287, type: !6)
!13707 = !DILocation(line: 287, column: 30, scope: !13697)
!13708 = !DILocation(line: 287, column: 36, scope: !13697)
!13709 = !DILocation(line: 287, column: 42, scope: !13697)
!13710 = !DILocation(line: 287, column: 40, scope: !13697)
!13711 = !DILocation(line: 287, column: 48, scope: !13697)
!13712 = !DILocation(line: 287, column: 55, scope: !13697)
!13713 = !DILocation(line: 287, column: 64, scope: !13697)
!13714 = !DILocation(line: 287, column: 52, scope: !13697)
!13715 = !DILocation(line: 288, column: 24, scope: !13697)
!13716 = !DILocation(line: 288, column: 21, scope: !13697)
!13717 = !DILocation(line: 289, column: 26, scope: !13697)
!13718 = !DILocation(line: 289, column: 32, scope: !13697)
!13719 = !DILocation(line: 289, column: 30, scope: !13697)
!13720 = !DILocation(line: 289, column: 24, scope: !13697)
!13721 = !DILocation(line: 290, column: 29, scope: !13697)
!13722 = !DILocation(line: 290, column: 34, scope: !13697)
!13723 = !DILocation(line: 290, column: 32, scope: !13697)
!13724 = !DILocation(line: 291, column: 32, scope: !13697)
!13725 = !DILocation(line: 291, column: 37, scope: !13697)
!13726 = !DILocation(line: 291, column: 35, scope: !13697)
!13727 = !DILocation(line: 291, column: 47, scope: !13697)
!13728 = !DILocation(line: 292, column: 36, scope: !13697)
!13729 = !DILocation(line: 292, column: 43, scope: !13697)
!13730 = !DILocation(line: 292, column: 48, scope: !13697)
!13731 = !DILocation(line: 292, column: 46, scope: !13697)
!13732 = !DILocation(line: 292, column: 41, scope: !13697)
!13733 = !DILocation(line: 292, column: 33, scope: !13697)
!13734 = !DILocation(line: 290, column: 26, scope: !13697)
!13735 = !DILocation(line: 293, column: 25, scope: !13697)
!13736 = !DILocation(line: 294, column: 15, scope: !13697)
!13737 = !DILocation(line: 295, column: 20, scope: !13695)
!13738 = !DILocation(line: 295, column: 28, scope: !13695)
!13739 = !DILocation(line: 295, column: 25, scope: !13695)
!13740 = !DILocation(line: 295, column: 32, scope: !13695)
!13741 = !DILocation(line: 295, column: 35, scope: !13695)
!13742 = !DILocation(line: 295, column: 46, scope: !13695)
!13743 = !DILocation(line: 295, column: 44, scope: !13695)
!13744 = !DILocation(line: 0, scope: !13695)
!13745 = distinct !{!13745, !13694, !13746}
!13746 = !DILocation(line: 295, column: 58, scope: !13695)
!13747 = !DILocation(line: 297, column: 17, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13695, file: !1336, line: 297, column: 17)
!13749 = !DILocation(line: 297, column: 21, scope: !13748)
!13750 = !DILocation(line: 297, column: 17, scope: !13695)
!13751 = !DILocation(line: 299, column: 21, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13753, file: !1336, line: 299, column: 21)
!13753 = distinct !DILexicalBlock(scope: !13748, file: !1336, line: 298, column: 15)
!13754 = !DILocation(line: 299, column: 35, scope: !13752)
!13755 = !DILocation(line: 299, column: 21, scope: !13753)
!13756 = !DILocation(line: 300, column: 27, scope: !13752)
!13757 = !DILocation(line: 300, column: 39, scope: !13752)
!13758 = !DILocation(line: 300, column: 46, scope: !13752)
!13759 = !DILocation(line: 300, column: 36, scope: !13752)
!13760 = !DILocation(line: 300, column: 25, scope: !13752)
!13761 = !DILocation(line: 301, column: 23, scope: !13752)
!13762 = !DILocation(line: 301, column: 37, scope: !13752)
!13763 = !DILocation(line: 301, column: 54, scope: !13752)
!13764 = !DILocation(line: 301, column: 61, scope: !13752)
!13765 = !DILocation(line: 301, column: 59, scope: !13752)
!13766 = !DILocation(line: 303, column: 27, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13752, file: !1336, line: 302, column: 19)
!13768 = !DILocation(line: 304, column: 30, scope: !13767)
!13769 = !DILocation(line: 306, column: 25, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13767, file: !1336, line: 306, column: 25)
!13771 = !DILocation(line: 306, column: 32, scope: !13770)
!13772 = !DILocation(line: 306, column: 25, scope: !13767)
!13773 = !DILocation(line: 308, column: 28, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13770, file: !1336, line: 307, column: 23)
!13775 = !DILocation(line: 309, column: 32, scope: !13774)
!13776 = !DILocation(line: 310, column: 23, scope: !13774)
!13777 = !DILocation(line: 311, column: 19, scope: !13767)
!13778 = !DILocation(line: 313, column: 21, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13753, file: !1336, line: 313, column: 21)
!13780 = !DILocation(line: 313, column: 25, scope: !13779)
!13781 = !DILocation(line: 314, column: 21, scope: !13779)
!13782 = !DILocation(line: 314, column: 25, scope: !13779)
!13783 = !DILocation(line: 314, column: 32, scope: !13779)
!13784 = !DILocation(line: 314, column: 38, scope: !13779)
!13785 = !DILocation(line: 314, column: 43, scope: !13779)
!13786 = !DILocation(line: 313, column: 21, scope: !13753)
!13787 = !DILocation(line: 316, column: 34, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13779, file: !1336, line: 315, column: 19)
!13789 = !DILocation(line: 316, column: 32, scope: !13788)
!13790 = !DILocation(line: 316, column: 28, scope: !13788)
!13791 = !DILocation(line: 316, column: 22, scope: !13788)
!13792 = !DILocation(line: 316, column: 26, scope: !13788)
!13793 = !DILocation(line: 317, column: 26, scope: !13788)
!13794 = !DILocation(line: 317, column: 23, scope: !13788)
!13795 = !DILocation(line: 318, column: 29, scope: !13788)
!13796 = !DILocation(line: 318, column: 32, scope: !13788)
!13797 = !DILocation(line: 318, column: 47, scope: !13788)
!13798 = !DILocation(line: 318, column: 21, scope: !13788)
!13799 = !DILocation(line: 319, column: 39, scope: !13788)
!13800 = !DILocation(line: 319, column: 28, scope: !13788)
!13801 = !DILocation(line: 320, column: 19, scope: !13788)
!13802 = !DILocation(line: 321, column: 15, scope: !13753)
!13803 = !DILocation(line: 322, column: 11, scope: !13695)
!13804 = !DILocation(line: 323, column: 7, scope: !13688)
!13805 = !DILocation(line: 325, column: 9, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13684, file: !1336, line: 325, column: 9)
!13807 = !DILocation(line: 325, column: 23, scope: !13806)
!13808 = !DILocation(line: 325, column: 9, scope: !13684)
!13809 = !DILocation(line: 326, column: 15, scope: !13806)
!13810 = !DILocation(line: 326, column: 29, scope: !13806)
!13811 = !DILocation(line: 326, column: 41, scope: !13806)
!13812 = !DILocation(line: 326, column: 45, scope: !13806)
!13813 = !DILocation(line: 326, column: 38, scope: !13806)
!13814 = !DILocation(line: 326, column: 27, scope: !13806)
!13815 = !DILocation(line: 326, column: 22, scope: !13806)
!13816 = !DILocation(line: 326, column: 13, scope: !13806)
!13817 = !DILocation(line: 327, column: 11, scope: !13806)
!13818 = !DILocation(line: 327, column: 25, scope: !13806)
!13819 = !DILocation(line: 327, column: 42, scope: !13806)
!13820 = !DILocation(line: 327, column: 49, scope: !13806)
!13821 = !DILocation(line: 327, column: 58, scope: !13806)
!13822 = !DILocation(line: 327, column: 56, scope: !13806)
!13823 = !DILocation(line: 327, column: 47, scope: !13806)
!13824 = !DILocation(line: 329, column: 12, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13806, file: !1336, line: 328, column: 7)
!13826 = !DILocation(line: 331, column: 14, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13825, file: !1336, line: 331, column: 13)
!13828 = !DILocation(line: 331, column: 19, scope: !13827)
!13829 = !DILocation(line: 332, column: 13, scope: !13827)
!13830 = !DILocation(line: 332, column: 16, scope: !13827)
!13831 = !DILocation(line: 332, column: 23, scope: !13827)
!13832 = !DILocation(line: 332, column: 20, scope: !13827)
!13833 = !DILocation(line: 332, column: 28, scope: !13827)
!13834 = !DILocation(line: 332, column: 31, scope: !13827)
!13835 = !DILocation(line: 332, column: 42, scope: !13827)
!13836 = !DILocation(line: 332, column: 40, scope: !13827)
!13837 = !DILocation(line: 331, column: 13, scope: !13825)
!13838 = !DILocation(line: 334, column: 21, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13827, file: !1336, line: 333, column: 11)
!13840 = !DILocation(line: 335, column: 20, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13839, file: !1336, line: 335, column: 17)
!13842 = !DILocation(line: 335, column: 25, scope: !13841)
!13843 = !DILocation(line: 335, column: 17, scope: !13839)
!13844 = !DILocation(line: 337, column: 18, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13841, file: !1336, line: 336, column: 15)
!13846 = !DILocation(line: 337, column: 22, scope: !13845)
!13847 = !DILocation(line: 338, column: 22, scope: !13845)
!13848 = !DILocation(line: 338, column: 19, scope: !13845)
!13849 = !DILocation(line: 339, column: 25, scope: !13845)
!13850 = !DILocation(line: 339, column: 28, scope: !13845)
!13851 = !DILocation(line: 339, column: 43, scope: !13845)
!13852 = !DILocation(line: 339, column: 17, scope: !13845)
!13853 = !DILocation(line: 340, column: 15, scope: !13845)
!13854 = !DILocation(line: 341, column: 17, scope: !13839)
!13855 = !DILocation(line: 342, column: 11, scope: !13839)
!13856 = !DILocation(line: 343, column: 7, scope: !13825)
!13857 = !DILocation(line: 345, column: 18, scope: !13684)
!13858 = !DILocation(line: 345, column: 16, scope: !13684)
!13859 = !DILocation(line: 347, column: 5, scope: !13684)
!13860 = !DILocalVariable(name: "digit", scope: !13861, file: !1336, line: 349, type: !27)
!13861 = distinct !DILexicalBlock(scope: !13684, file: !1336, line: 348, column: 7)
!13862 = !DILocation(line: 349, column: 13, scope: !13861)
!13863 = !DILocation(line: 349, column: 21, scope: !13861)
!13864 = !DILocation(line: 349, column: 25, scope: !13861)
!13865 = !DILocation(line: 350, column: 16, scope: !13861)
!13866 = !DILocation(line: 350, column: 22, scope: !13861)
!13867 = !DILocation(line: 350, column: 10, scope: !13861)
!13868 = !DILocation(line: 350, column: 14, scope: !13861)
!13869 = !DILocation(line: 351, column: 7, scope: !13861)
!13870 = !DILocation(line: 352, column: 17, scope: !13684)
!13871 = !DILocation(line: 352, column: 24, scope: !13684)
!13872 = distinct !{!13872, !13859, !13873}
!13873 = !DILocation(line: 352, column: 28, scope: !13684)
!13874 = !DILocation(line: 353, column: 3, scope: !13684)
!13875 = !DILabel(scope: !13397, name: "do_grouping", file: !1336, line: 355)
!13876 = !DILocation(line: 355, column: 2, scope: !13397)
!13877 = !DILocation(line: 356, column: 7, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 356, column: 7)
!13879 = !DILocation(line: 356, column: 12, scope: !13878)
!13880 = !DILocation(line: 356, column: 7, scope: !13397)
!13881 = !DILocation(line: 357, column: 23, scope: !13878)
!13882 = !DILocation(line: 357, column: 26, scope: !13878)
!13883 = !DILocation(line: 357, column: 39, scope: !13878)
!13884 = !DILocation(line: 357, column: 37, scope: !13878)
!13885 = !DILocation(line: 357, column: 42, scope: !13878)
!13886 = !DILocation(line: 357, column: 52, scope: !13878)
!13887 = !DILocation(line: 357, column: 9, scope: !13878)
!13888 = !DILocation(line: 357, column: 7, scope: !13878)
!13889 = !DILocation(line: 357, column: 5, scope: !13878)
!13890 = !DILocation(line: 359, column: 7, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13397, file: !1336, line: 359, column: 7)
!13892 = !DILocation(line: 359, column: 12, scope: !13891)
!13893 = !DILocation(line: 359, column: 7, scope: !13397)
!13894 = !DILocation(line: 361, column: 11, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13896, file: !1336, line: 361, column: 11)
!13896 = distinct !DILexicalBlock(scope: !13891, file: !1336, line: 360, column: 5)
!13897 = !DILocation(line: 361, column: 20, scope: !13895)
!13898 = !DILocation(line: 361, column: 11, scope: !13896)
!13899 = !DILocalVariable(name: "power", scope: !13900, file: !1336, line: 363, type: !168)
!13900 = distinct !DILexicalBlock(scope: !13895, file: !1336, line: 362, column: 9)
!13901 = !DILocation(line: 363, column: 21, scope: !13900)
!13902 = !DILocation(line: 364, column: 20, scope: !13900)
!13903 = !DILocation(line: 365, column: 22, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13900, file: !1336, line: 365, column: 11)
!13905 = !DILocation(line: 365, column: 16, scope: !13904)
!13906 = !DILocation(line: 365, column: 27, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13904, file: !1336, line: 365, column: 11)
!13908 = !DILocation(line: 365, column: 35, scope: !13907)
!13909 = !DILocation(line: 365, column: 33, scope: !13907)
!13910 = !DILocation(line: 365, column: 11, scope: !13904)
!13911 = !DILocation(line: 366, column: 17, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13907, file: !1336, line: 366, column: 17)
!13913 = !DILocation(line: 366, column: 31, scope: !13912)
!13914 = !DILocation(line: 366, column: 28, scope: !13912)
!13915 = !DILocation(line: 366, column: 17, scope: !13907)
!13916 = !DILocation(line: 367, column: 15, scope: !13912)
!13917 = !DILocation(line: 365, column: 59, scope: !13907)
!13918 = !DILocation(line: 365, column: 56, scope: !13907)
!13919 = !DILocation(line: 365, column: 11, scope: !13907)
!13920 = distinct !{!13920, !13910, !13921}
!13921 = !DILocation(line: 367, column: 15, scope: !13904)
!13922 = !DILocation(line: 368, column: 9, scope: !13900)
!13923 = !DILocation(line: 370, column: 12, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13896, file: !1336, line: 370, column: 11)
!13925 = !DILocation(line: 370, column: 24, scope: !13924)
!13926 = !DILocation(line: 370, column: 29, scope: !13924)
!13927 = !DILocation(line: 370, column: 21, scope: !13924)
!13928 = !DILocation(line: 370, column: 41, scope: !13924)
!13929 = !DILocation(line: 370, column: 45, scope: !13924)
!13930 = !DILocation(line: 370, column: 50, scope: !13924)
!13931 = !DILocation(line: 370, column: 11, scope: !13896)
!13932 = !DILocation(line: 371, column: 17, scope: !13924)
!13933 = !DILocation(line: 371, column: 20, scope: !13924)
!13934 = !DILocation(line: 371, column: 9, scope: !13924)
!13935 = !DILocation(line: 373, column: 11, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13896, file: !1336, line: 373, column: 11)
!13937 = !DILocation(line: 373, column: 11, scope: !13896)
!13938 = !DILocation(line: 374, column: 26, scope: !13936)
!13939 = !DILocation(line: 374, column: 31, scope: !13936)
!13940 = !DILocation(line: 374, column: 50, scope: !13936)
!13941 = !DILocation(line: 374, column: 53, scope: !13936)
!13942 = !DILocation(line: 374, column: 62, scope: !13936)
!13943 = !DILocation(line: 374, column: 23, scope: !13936)
!13944 = !DILocation(line: 376, column: 38, scope: !13936)
!13945 = !DILocation(line: 376, column: 25, scope: !13936)
!13946 = !DILocation(line: 374, column: 22, scope: !13936)
!13947 = !DILocation(line: 374, column: 17, scope: !13936)
!13948 = !DILocation(line: 374, column: 20, scope: !13936)
!13949 = !DILocation(line: 374, column: 9, scope: !13936)
!13950 = !DILocation(line: 378, column: 11, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13896, file: !1336, line: 378, column: 11)
!13952 = !DILocation(line: 378, column: 16, scope: !13951)
!13953 = !DILocation(line: 378, column: 11, scope: !13896)
!13954 = !DILocation(line: 380, column: 16, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !1336, line: 380, column: 15)
!13956 = distinct !DILexicalBlock(scope: !13951, file: !1336, line: 379, column: 9)
!13957 = !DILocation(line: 380, column: 21, scope: !13955)
!13958 = !DILocation(line: 380, column: 40, scope: !13955)
!13959 = !DILocation(line: 380, column: 43, scope: !13955)
!13960 = !DILocation(line: 380, column: 15, scope: !13956)
!13961 = !DILocation(line: 381, column: 21, scope: !13955)
!13962 = !DILocation(line: 381, column: 24, scope: !13955)
!13963 = !DILocation(line: 381, column: 13, scope: !13955)
!13964 = !DILocation(line: 382, column: 19, scope: !13956)
!13965 = !DILocation(line: 382, column: 22, scope: !13956)
!13966 = !DILocation(line: 383, column: 9, scope: !13956)
!13967 = !DILocation(line: 384, column: 5, scope: !13896)
!13968 = !DILocation(line: 386, column: 4, scope: !13397)
!13969 = !DILocation(line: 386, column: 12, scope: !13397)
!13970 = !DILocation(line: 388, column: 10, scope: !13397)
!13971 = !DILocation(line: 388, column: 3, scope: !13397)
!13972 = distinct !DISubprogram(name: "adjust_value", scope: !1336, file: !1336, line: 54, type: !1320, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1279, retainedNodes: !152)
!13973 = !DILocalVariable(name: "inexact_style", arg: 1, scope: !13972, file: !1336, line: 54, type: !27)
!13974 = !DILocation(line: 54, column: 19, scope: !13972)
!13975 = !DILocalVariable(name: "value", arg: 2, scope: !13972, file: !1336, line: 54, type: !1314)
!13976 = !DILocation(line: 54, column: 46, scope: !13972)
!13977 = !DILocation(line: 60, column: 7, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13972, file: !1336, line: 60, column: 7)
!13979 = !DILocation(line: 60, column: 21, scope: !13978)
!13980 = !DILocation(line: 60, column: 47, scope: !13978)
!13981 = !DILocation(line: 60, column: 50, scope: !13978)
!13982 = !DILocation(line: 60, column: 56, scope: !13978)
!13983 = !DILocation(line: 60, column: 7, scope: !13972)
!13984 = !DILocalVariable(name: "u", scope: !13985, file: !1336, line: 62, type: !168)
!13985 = distinct !DILexicalBlock(scope: !13978, file: !1336, line: 61, column: 5)
!13986 = !DILocation(line: 62, column: 17, scope: !13985)
!13987 = !DILocation(line: 62, column: 21, scope: !13985)
!13988 = !DILocation(line: 63, column: 15, scope: !13985)
!13989 = !DILocation(line: 63, column: 20, scope: !13985)
!13990 = !DILocation(line: 63, column: 34, scope: !13985)
!13991 = !DILocation(line: 63, column: 51, scope: !13985)
!13992 = !DILocation(line: 63, column: 54, scope: !13985)
!13993 = !DILocation(line: 63, column: 59, scope: !13985)
!13994 = !DILocation(line: 63, column: 56, scope: !13985)
!13995 = !DILocation(line: 0, scope: !13985)
!13996 = !DILocation(line: 63, column: 19, scope: !13985)
!13997 = !DILocation(line: 63, column: 17, scope: !13985)
!13998 = !DILocation(line: 63, column: 13, scope: !13985)
!13999 = !DILocation(line: 64, column: 5, scope: !13985)
!14000 = !DILocation(line: 66, column: 10, scope: !13972)
!14001 = !DILocation(line: 66, column: 3, scope: !13972)
!14002 = distinct !DISubprogram(name: "group_number", scope: !1336, file: !1336, line: 79, type: !1322, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1279, retainedNodes: !152)
!14003 = !DILocalVariable(name: "number", arg: 1, scope: !14002, file: !1336, line: 79, type: !143)
!14004 = !DILocation(line: 79, column: 21, scope: !14002)
!14005 = !DILocalVariable(name: "numberlen", arg: 2, scope: !14002, file: !1336, line: 79, type: !149)
!14006 = !DILocation(line: 79, column: 36, scope: !14002)
!14007 = !DILocalVariable(name: "grouping", arg: 3, scope: !14002, file: !1336, line: 80, type: !146)
!14008 = !DILocation(line: 80, column: 27, scope: !14002)
!14009 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !14002, file: !1336, line: 80, type: !146)
!14010 = !DILocation(line: 80, column: 49, scope: !14002)
!14011 = !DILocalVariable(name: "d", scope: !14002, file: !1336, line: 82, type: !143)
!14012 = !DILocation(line: 82, column: 18, scope: !14002)
!14013 = !DILocalVariable(name: "grouplen", scope: !14002, file: !1336, line: 83, type: !149)
!14014 = !DILocation(line: 83, column: 10, scope: !14002)
!14015 = !DILocalVariable(name: "thousands_seplen", scope: !14002, file: !1336, line: 84, type: !149)
!14016 = !DILocation(line: 84, column: 10, scope: !14002)
!14017 = !DILocation(line: 84, column: 37, scope: !14002)
!14018 = !DILocation(line: 84, column: 29, scope: !14002)
!14019 = !DILocalVariable(name: "i", scope: !14002, file: !1336, line: 85, type: !149)
!14020 = !DILocation(line: 85, column: 10, scope: !14002)
!14021 = !DILocation(line: 85, column: 14, scope: !14002)
!14022 = !DILocalVariable(name: "buf", scope: !14002, file: !1336, line: 89, type: !1324)
!14023 = !DILocation(line: 89, column: 8, scope: !14002)
!14024 = !DILocation(line: 91, column: 3, scope: !14002)
!14025 = !DILocation(line: 91, column: 16, scope: !14002)
!14026 = !DILocation(line: 91, column: 24, scope: !14002)
!14027 = !DILocation(line: 92, column: 7, scope: !14002)
!14028 = !DILocation(line: 92, column: 16, scope: !14002)
!14029 = !DILocation(line: 92, column: 14, scope: !14002)
!14030 = !DILocation(line: 92, column: 5, scope: !14002)
!14031 = !DILocation(line: 94, column: 3, scope: !14002)
!14032 = !DILocalVariable(name: "g", scope: !14033, file: !1336, line: 96, type: !579)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !1336, line: 95, column: 5)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !1336, line: 94, column: 3)
!14035 = distinct !DILexicalBlock(scope: !14002, file: !1336, line: 94, column: 3)
!14036 = !DILocation(line: 96, column: 21, scope: !14033)
!14037 = !DILocation(line: 96, column: 26, scope: !14033)
!14038 = !DILocation(line: 96, column: 25, scope: !14033)
!14039 = !DILocation(line: 98, column: 11, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14033, file: !1336, line: 98, column: 11)
!14041 = !DILocation(line: 98, column: 11, scope: !14033)
!14042 = !DILocation(line: 100, column: 22, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14040, file: !1336, line: 99, column: 9)
!14044 = !DILocation(line: 100, column: 24, scope: !14043)
!14045 = !DILocation(line: 100, column: 37, scope: !14043)
!14046 = !DILocation(line: 100, column: 41, scope: !14043)
!14047 = !DILocation(line: 100, column: 20, scope: !14043)
!14048 = !DILocation(line: 101, column: 19, scope: !14043)
!14049 = !DILocation(line: 102, column: 9, scope: !14043)
!14050 = !DILocation(line: 104, column: 11, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14033, file: !1336, line: 104, column: 11)
!14052 = !DILocation(line: 104, column: 15, scope: !14051)
!14053 = !DILocation(line: 104, column: 13, scope: !14051)
!14054 = !DILocation(line: 104, column: 11, scope: !14033)
!14055 = !DILocation(line: 105, column: 20, scope: !14051)
!14056 = !DILocation(line: 105, column: 18, scope: !14051)
!14057 = !DILocation(line: 105, column: 9, scope: !14051)
!14058 = !DILocation(line: 107, column: 12, scope: !14033)
!14059 = !DILocation(line: 107, column: 9, scope: !14033)
!14060 = !DILocation(line: 108, column: 12, scope: !14033)
!14061 = !DILocation(line: 108, column: 9, scope: !14033)
!14062 = !DILocation(line: 109, column: 15, scope: !14033)
!14063 = !DILocation(line: 109, column: 18, scope: !14033)
!14064 = !DILocation(line: 109, column: 24, scope: !14033)
!14065 = !DILocation(line: 109, column: 22, scope: !14033)
!14066 = !DILocation(line: 109, column: 27, scope: !14033)
!14067 = !DILocation(line: 109, column: 7, scope: !14033)
!14068 = !DILocation(line: 110, column: 11, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14033, file: !1336, line: 110, column: 11)
!14070 = !DILocation(line: 110, column: 13, scope: !14069)
!14071 = !DILocation(line: 110, column: 11, scope: !14033)
!14072 = !DILocation(line: 111, column: 16, scope: !14069)
!14073 = !DILocation(line: 111, column: 9, scope: !14069)
!14074 = !DILocation(line: 113, column: 12, scope: !14033)
!14075 = !DILocation(line: 113, column: 9, scope: !14033)
!14076 = !DILocation(line: 114, column: 15, scope: !14033)
!14077 = !DILocation(line: 114, column: 18, scope: !14033)
!14078 = !DILocation(line: 114, column: 33, scope: !14033)
!14079 = !DILocation(line: 114, column: 7, scope: !14033)
!14080 = !DILocation(line: 94, column: 3, scope: !14034)
!14081 = distinct !{!14081, !14082, !14083}
!14082 = !DILocation(line: 94, column: 3, scope: !14035)
!14083 = !DILocation(line: 115, column: 5, scope: !14035)
!14084 = distinct !DISubprogram(name: "human_options", scope: !1336, file: !1336, line: 462, type: !1316, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1279, retainedNodes: !152)
!14085 = !DILocalVariable(name: "spec", arg: 1, scope: !14084, file: !1336, line: 462, type: !146)
!14086 = !DILocation(line: 462, column: 28, scope: !14084)
!14087 = !DILocalVariable(name: "opts", arg: 2, scope: !14084, file: !1336, line: 462, type: !512)
!14088 = !DILocation(line: 462, column: 39, scope: !14084)
!14089 = !DILocalVariable(name: "block_size", arg: 3, scope: !14084, file: !1336, line: 462, type: !1318)
!14090 = !DILocation(line: 462, column: 56, scope: !14084)
!14091 = !DILocalVariable(name: "e", scope: !14084, file: !1336, line: 464, type: !1319)
!14092 = !DILocation(line: 464, column: 16, scope: !14084)
!14093 = !DILocation(line: 464, column: 30, scope: !14084)
!14094 = !DILocation(line: 464, column: 36, scope: !14084)
!14095 = !DILocation(line: 464, column: 48, scope: !14084)
!14096 = !DILocation(line: 464, column: 20, scope: !14084)
!14097 = !DILocation(line: 465, column: 8, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14084, file: !1336, line: 465, column: 7)
!14099 = !DILocation(line: 465, column: 7, scope: !14098)
!14100 = !DILocation(line: 465, column: 19, scope: !14098)
!14101 = !DILocation(line: 465, column: 7, scope: !14084)
!14102 = !DILocation(line: 467, column: 21, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14098, file: !1336, line: 466, column: 5)
!14104 = !DILocation(line: 467, column: 8, scope: !14103)
!14105 = !DILocation(line: 467, column: 19, scope: !14103)
!14106 = !DILocation(line: 468, column: 9, scope: !14103)
!14107 = !DILocation(line: 469, column: 5, scope: !14103)
!14108 = !DILocation(line: 470, column: 10, scope: !14084)
!14109 = !DILocation(line: 470, column: 3, scope: !14084)
!14110 = distinct !DISubprogram(name: "humblock", scope: !1336, file: !1336, line: 412, type: !1327, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1279, retainedNodes: !152)
!14111 = !DILocalVariable(name: "spec", arg: 1, scope: !14110, file: !1336, line: 412, type: !146)
!14112 = !DILocation(line: 412, column: 23, scope: !14110)
!14113 = !DILocalVariable(name: "block_size", arg: 2, scope: !14110, file: !1336, line: 412, type: !1318)
!14114 = !DILocation(line: 412, column: 40, scope: !14110)
!14115 = !DILocalVariable(name: "options", arg: 3, scope: !14110, file: !1336, line: 412, type: !512)
!14116 = !DILocation(line: 412, column: 57, scope: !14110)
!14117 = !DILocalVariable(name: "i", scope: !14110, file: !1336, line: 414, type: !27)
!14118 = !DILocation(line: 414, column: 7, scope: !14110)
!14119 = !DILocalVariable(name: "opts", scope: !14110, file: !1336, line: 415, type: !27)
!14120 = !DILocation(line: 415, column: 7, scope: !14110)
!14121 = !DILocation(line: 417, column: 9, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14110, file: !1336, line: 417, column: 7)
!14123 = !DILocation(line: 418, column: 7, scope: !14122)
!14124 = !DILocation(line: 418, column: 20, scope: !14122)
!14125 = !DILocation(line: 418, column: 18, scope: !14122)
!14126 = !DILocation(line: 419, column: 7, scope: !14122)
!14127 = !DILocation(line: 419, column: 20, scope: !14122)
!14128 = !DILocation(line: 419, column: 18, scope: !14122)
!14129 = !DILocation(line: 417, column: 7, scope: !14110)
!14130 = !DILocation(line: 420, column: 19, scope: !14122)
!14131 = !DILocation(line: 420, column: 6, scope: !14122)
!14132 = !DILocation(line: 420, column: 17, scope: !14122)
!14133 = !DILocation(line: 420, column: 5, scope: !14122)
!14134 = !DILocation(line: 423, column: 12, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !1336, line: 423, column: 11)
!14136 = distinct !DILexicalBlock(scope: !14122, file: !1336, line: 422, column: 5)
!14137 = !DILocation(line: 423, column: 11, scope: !14135)
!14138 = !DILocation(line: 423, column: 17, scope: !14135)
!14139 = !DILocation(line: 423, column: 11, scope: !14136)
!14140 = !DILocation(line: 425, column: 16, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14135, file: !1336, line: 424, column: 9)
!14142 = !DILocation(line: 426, column: 15, scope: !14141)
!14143 = !DILocation(line: 427, column: 9, scope: !14141)
!14144 = !DILocation(line: 429, column: 21, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14136, file: !1336, line: 429, column: 11)
!14146 = !DILocation(line: 429, column: 19, scope: !14145)
!14147 = !DILocation(line: 429, column: 13, scope: !14145)
!14148 = !DILocation(line: 429, column: 11, scope: !14136)
!14149 = !DILocation(line: 431, column: 35, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14145, file: !1336, line: 430, column: 9)
!14151 = !DILocation(line: 431, column: 19, scope: !14150)
!14152 = !DILocation(line: 431, column: 16, scope: !14150)
!14153 = !DILocation(line: 432, column: 12, scope: !14150)
!14154 = !DILocation(line: 432, column: 23, scope: !14150)
!14155 = !DILocation(line: 433, column: 9, scope: !14150)
!14156 = !DILocalVariable(name: "ptr", scope: !14157, file: !1336, line: 436, type: !143)
!14157 = distinct !DILexicalBlock(scope: !14145, file: !1336, line: 435, column: 9)
!14158 = !DILocation(line: 436, column: 17, scope: !14157)
!14159 = !DILocalVariable(name: "e", scope: !14157, file: !1336, line: 437, type: !1319)
!14160 = !DILocation(line: 437, column: 24, scope: !14157)
!14161 = !DILocation(line: 437, column: 40, scope: !14157)
!14162 = !DILocation(line: 437, column: 55, scope: !14157)
!14163 = !DILocation(line: 437, column: 28, scope: !14157)
!14164 = !DILocation(line: 439, column: 15, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14157, file: !1336, line: 439, column: 15)
!14166 = !DILocation(line: 439, column: 17, scope: !14165)
!14167 = !DILocation(line: 439, column: 15, scope: !14157)
!14168 = !DILocation(line: 441, column: 16, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14165, file: !1336, line: 440, column: 13)
!14170 = !DILocation(line: 441, column: 24, scope: !14169)
!14171 = !DILocation(line: 442, column: 22, scope: !14169)
!14172 = !DILocation(line: 442, column: 15, scope: !14169)
!14173 = !DILocation(line: 444, column: 11, scope: !14157)
!14174 = !DILocation(line: 444, column: 29, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14176, file: !1336, line: 444, column: 11)
!14176 = distinct !DILexicalBlock(scope: !14157, file: !1336, line: 444, column: 11)
!14177 = !DILocation(line: 444, column: 28, scope: !14175)
!14178 = !DILocation(line: 444, column: 25, scope: !14175)
!14179 = !DILocation(line: 444, column: 34, scope: !14175)
!14180 = !DILocation(line: 444, column: 38, scope: !14175)
!14181 = !DILocation(line: 444, column: 37, scope: !14175)
!14182 = !DILocation(line: 444, column: 43, scope: !14175)
!14183 = !DILocation(line: 0, scope: !14175)
!14184 = !DILocation(line: 444, column: 18, scope: !14175)
!14185 = !DILocation(line: 444, column: 11, scope: !14176)
!14186 = !DILocation(line: 445, column: 17, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14175, file: !1336, line: 445, column: 17)
!14188 = !DILocation(line: 445, column: 25, scope: !14187)
!14189 = !DILocation(line: 445, column: 22, scope: !14187)
!14190 = !DILocation(line: 445, column: 17, scope: !14175)
!14191 = !DILocation(line: 447, column: 22, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14187, file: !1336, line: 446, column: 15)
!14193 = !DILocation(line: 448, column: 21, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14192, file: !1336, line: 448, column: 21)
!14195 = !DILocation(line: 448, column: 29, scope: !14194)
!14196 = !DILocation(line: 448, column: 21, scope: !14192)
!14197 = !DILocation(line: 449, column: 24, scope: !14194)
!14198 = !DILocation(line: 449, column: 19, scope: !14194)
!14199 = !DILocation(line: 450, column: 21, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14192, file: !1336, line: 450, column: 21)
!14201 = !DILocation(line: 450, column: 29, scope: !14200)
!14202 = !DILocation(line: 450, column: 36, scope: !14200)
!14203 = !DILocation(line: 450, column: 39, scope: !14200)
!14204 = !DILocation(line: 450, column: 47, scope: !14200)
!14205 = !DILocation(line: 450, column: 21, scope: !14192)
!14206 = !DILocation(line: 451, column: 24, scope: !14200)
!14207 = !DILocation(line: 451, column: 19, scope: !14200)
!14208 = !DILocation(line: 452, column: 17, scope: !14192)
!14209 = !DILocation(line: 444, column: 56, scope: !14175)
!14210 = !DILocation(line: 444, column: 11, scope: !14175)
!14211 = distinct !{!14211, !14185, !14212}
!14212 = !DILocation(line: 453, column: 15, scope: !14176)
!14213 = !DILocation(line: 457, column: 14, scope: !14110)
!14214 = !DILocation(line: 457, column: 4, scope: !14110)
!14215 = !DILocation(line: 457, column: 12, scope: !14110)
!14216 = !DILocation(line: 458, column: 3, scope: !14110)
!14217 = !DILocation(line: 459, column: 1, scope: !14110)
!14218 = distinct !DISubprogram(name: "default_block_size", scope: !1336, file: !1336, line: 406, type: !1331, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1279, retainedNodes: !152)
!14219 = !DILocation(line: 408, column: 10, scope: !14218)
!14220 = !DILocation(line: 408, column: 3, scope: !14218)
!14221 = distinct !DISubprogram(name: "getuser", scope: !1348, file: !1348, line: 69, type: !1344, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !152)
!14222 = !DILocalVariable(name: "uid", arg: 1, scope: !14221, file: !1348, line: 69, type: !675)
!14223 = !DILocation(line: 69, column: 16, scope: !14221)
!14224 = !DILocalVariable(name: "tail", scope: !14221, file: !1348, line: 71, type: !1346)
!14225 = !DILocation(line: 71, column: 18, scope: !14221)
!14226 = !DILocalVariable(name: "match", scope: !14221, file: !1348, line: 72, type: !1346)
!14227 = !DILocation(line: 72, column: 18, scope: !14221)
!14228 = !DILocation(line: 74, column: 15, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14221, file: !1348, line: 74, column: 3)
!14230 = !DILocation(line: 74, column: 13, scope: !14229)
!14231 = !DILocation(line: 74, column: 8, scope: !14229)
!14232 = !DILocation(line: 74, column: 27, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14229, file: !1348, line: 74, column: 3)
!14234 = !DILocation(line: 74, column: 3, scope: !14229)
!14235 = !DILocation(line: 76, column: 11, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !1348, line: 76, column: 11)
!14237 = distinct !DILexicalBlock(scope: !14233, file: !1348, line: 75, column: 5)
!14238 = !DILocation(line: 76, column: 17, scope: !14236)
!14239 = !DILocation(line: 76, column: 20, scope: !14236)
!14240 = !DILocation(line: 76, column: 25, scope: !14236)
!14241 = !DILocation(line: 76, column: 22, scope: !14236)
!14242 = !DILocation(line: 76, column: 11, scope: !14237)
!14243 = !DILocation(line: 78, column: 19, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14236, file: !1348, line: 77, column: 9)
!14245 = !DILocation(line: 78, column: 17, scope: !14244)
!14246 = !DILocation(line: 79, column: 11, scope: !14244)
!14247 = !DILocation(line: 81, column: 5, scope: !14237)
!14248 = !DILocation(line: 74, column: 40, scope: !14233)
!14249 = !DILocation(line: 74, column: 46, scope: !14233)
!14250 = !DILocation(line: 74, column: 38, scope: !14233)
!14251 = !DILocation(line: 74, column: 3, scope: !14233)
!14252 = distinct !{!14252, !14234, !14253}
!14253 = !DILocation(line: 81, column: 5, scope: !14229)
!14254 = !DILocation(line: 83, column: 7, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14221, file: !1348, line: 83, column: 7)
!14256 = !DILocation(line: 83, column: 13, scope: !14255)
!14257 = !DILocation(line: 83, column: 7, scope: !14221)
!14258 = !DILocalVariable(name: "pwent", scope: !14259, file: !1348, line: 85, type: !1357)
!14259 = distinct !DILexicalBlock(scope: !14255, file: !1348, line: 84, column: 5)
!14260 = !DILocation(line: 85, column: 22, scope: !14259)
!14261 = !DILocation(line: 85, column: 40, scope: !14259)
!14262 = !DILocation(line: 85, column: 30, scope: !14259)
!14263 = !DILocalVariable(name: "name", scope: !14259, file: !1348, line: 86, type: !146)
!14264 = !DILocation(line: 86, column: 19, scope: !14259)
!14265 = !DILocation(line: 86, column: 26, scope: !14259)
!14266 = !DILocation(line: 86, column: 34, scope: !14259)
!14267 = !DILocation(line: 86, column: 41, scope: !14259)
!14268 = !{!14269, !2475, i64 0}
!14269 = !{!"passwd", !2475, i64 0, !2475, i64 8, !2469, i64 16, !2469, i64 20, !2475, i64 24, !2475, i64 32, !2475, i64 40}
!14270 = !DILocation(line: 87, column: 24, scope: !14259)
!14271 = !DILocation(line: 87, column: 15, scope: !14259)
!14272 = !DILocation(line: 87, column: 13, scope: !14259)
!14273 = !DILocation(line: 88, column: 21, scope: !14259)
!14274 = !DILocation(line: 88, column: 7, scope: !14259)
!14275 = !DILocation(line: 88, column: 14, scope: !14259)
!14276 = !DILocation(line: 88, column: 17, scope: !14259)
!14277 = !DILocation(line: 88, column: 19, scope: !14259)
!14278 = !DILocation(line: 89, column: 15, scope: !14259)
!14279 = !DILocation(line: 89, column: 22, scope: !14259)
!14280 = !DILocation(line: 89, column: 28, scope: !14259)
!14281 = !DILocation(line: 89, column: 7, scope: !14259)
!14282 = !DILocation(line: 92, column: 21, scope: !14259)
!14283 = !DILocation(line: 92, column: 7, scope: !14259)
!14284 = !DILocation(line: 92, column: 14, scope: !14259)
!14285 = !DILocation(line: 92, column: 19, scope: !14259)
!14286 = !DILocation(line: 93, column: 20, scope: !14259)
!14287 = !DILocation(line: 93, column: 18, scope: !14259)
!14288 = !DILocation(line: 94, column: 5, scope: !14259)
!14289 = !DILocation(line: 96, column: 10, scope: !14221)
!14290 = !DILocation(line: 96, column: 17, scope: !14221)
!14291 = !DILocation(line: 96, column: 27, scope: !14221)
!14292 = !DILocation(line: 96, column: 34, scope: !14221)
!14293 = !DILocation(line: 96, column: 3, scope: !14221)
!14294 = distinct !DISubprogram(name: "getuidbyname", scope: !1348, file: !1348, line: 105, type: !1368, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !152)
!14295 = !DILocalVariable(name: "user", arg: 1, scope: !14294, file: !1348, line: 105, type: !146)
!14296 = !DILocation(line: 105, column: 27, scope: !14294)
!14297 = !DILocalVariable(name: "tail", scope: !14294, file: !1348, line: 107, type: !1346)
!14298 = !DILocation(line: 107, column: 18, scope: !14294)
!14299 = !DILocalVariable(name: "pwent", scope: !14294, file: !1348, line: 108, type: !1357)
!14300 = !DILocation(line: 108, column: 18, scope: !14294)
!14301 = !DILocation(line: 110, column: 15, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14294, file: !1348, line: 110, column: 3)
!14303 = !DILocation(line: 110, column: 13, scope: !14302)
!14304 = !DILocation(line: 110, column: 8, scope: !14302)
!14305 = !DILocation(line: 110, column: 27, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14302, file: !1348, line: 110, column: 3)
!14307 = !DILocation(line: 110, column: 3, scope: !14302)
!14308 = !DILocation(line: 112, column: 10, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14306, file: !1348, line: 112, column: 9)
!14310 = !DILocation(line: 112, column: 16, scope: !14309)
!14311 = !DILocation(line: 112, column: 9, scope: !14309)
!14312 = !DILocation(line: 112, column: 25, scope: !14309)
!14313 = !DILocation(line: 112, column: 24, scope: !14309)
!14314 = !DILocation(line: 112, column: 21, scope: !14309)
!14315 = !DILocation(line: 112, column: 30, scope: !14309)
!14316 = !DILocation(line: 112, column: 42, scope: !14309)
!14317 = !DILocation(line: 112, column: 48, scope: !14309)
!14318 = !DILocation(line: 112, column: 54, scope: !14309)
!14319 = !DILocation(line: 112, column: 34, scope: !14309)
!14320 = !DILocation(line: 112, column: 9, scope: !14306)
!14321 = !DILocation(line: 113, column: 15, scope: !14309)
!14322 = !DILocation(line: 113, column: 21, scope: !14309)
!14323 = !DILocation(line: 113, column: 24, scope: !14309)
!14324 = !DILocation(line: 113, column: 7, scope: !14309)
!14325 = !DILocation(line: 112, column: 58, scope: !14309)
!14326 = !DILocation(line: 110, column: 40, scope: !14306)
!14327 = !DILocation(line: 110, column: 46, scope: !14306)
!14328 = !DILocation(line: 110, column: 38, scope: !14306)
!14329 = !DILocation(line: 110, column: 3, scope: !14306)
!14330 = distinct !{!14330, !14307, !14331}
!14331 = !DILocation(line: 113, column: 24, scope: !14302)
!14332 = !DILocation(line: 115, column: 15, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14294, file: !1348, line: 115, column: 3)
!14334 = !DILocation(line: 115, column: 13, scope: !14333)
!14335 = !DILocation(line: 115, column: 8, scope: !14333)
!14336 = !DILocation(line: 115, column: 29, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14333, file: !1348, line: 115, column: 3)
!14338 = !DILocation(line: 115, column: 3, scope: !14333)
!14339 = !DILocation(line: 117, column: 10, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14337, file: !1348, line: 117, column: 9)
!14341 = !DILocation(line: 117, column: 16, scope: !14340)
!14342 = !DILocation(line: 117, column: 9, scope: !14340)
!14343 = !DILocation(line: 117, column: 25, scope: !14340)
!14344 = !DILocation(line: 117, column: 24, scope: !14340)
!14345 = !DILocation(line: 117, column: 21, scope: !14340)
!14346 = !DILocation(line: 117, column: 30, scope: !14340)
!14347 = !DILocation(line: 117, column: 42, scope: !14340)
!14348 = !DILocation(line: 117, column: 48, scope: !14340)
!14349 = !DILocation(line: 117, column: 54, scope: !14340)
!14350 = !DILocation(line: 117, column: 34, scope: !14340)
!14351 = !DILocation(line: 117, column: 9, scope: !14337)
!14352 = !DILocation(line: 118, column: 7, scope: !14340)
!14353 = !DILocation(line: 117, column: 58, scope: !14340)
!14354 = !DILocation(line: 115, column: 42, scope: !14337)
!14355 = !DILocation(line: 115, column: 48, scope: !14337)
!14356 = !DILocation(line: 115, column: 40, scope: !14337)
!14357 = !DILocation(line: 115, column: 3, scope: !14337)
!14358 = distinct !{!14358, !14338, !14359}
!14359 = !DILocation(line: 118, column: 14, scope: !14333)
!14360 = !DILocation(line: 120, column: 21, scope: !14294)
!14361 = !DILocation(line: 120, column: 11, scope: !14294)
!14362 = !DILocation(line: 120, column: 9, scope: !14294)
!14363 = !DILocation(line: 131, column: 19, scope: !14294)
!14364 = !DILocation(line: 131, column: 10, scope: !14294)
!14365 = !DILocation(line: 131, column: 8, scope: !14294)
!14366 = !DILocation(line: 132, column: 11, scope: !14294)
!14367 = !DILocation(line: 132, column: 17, scope: !14294)
!14368 = !DILocation(line: 132, column: 23, scope: !14294)
!14369 = !DILocation(line: 132, column: 3, scope: !14294)
!14370 = !DILocation(line: 135, column: 7, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14294, file: !1348, line: 135, column: 7)
!14372 = !DILocation(line: 135, column: 7, scope: !14294)
!14373 = !DILocation(line: 137, column: 20, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14371, file: !1348, line: 136, column: 5)
!14375 = !DILocation(line: 137, column: 27, scope: !14374)
!14376 = !{!14269, !2469, i64 16}
!14377 = !DILocation(line: 137, column: 7, scope: !14374)
!14378 = !DILocation(line: 137, column: 13, scope: !14374)
!14379 = !DILocation(line: 137, column: 16, scope: !14374)
!14380 = !DILocation(line: 137, column: 18, scope: !14374)
!14381 = !DILocation(line: 138, column: 20, scope: !14374)
!14382 = !DILocation(line: 138, column: 7, scope: !14374)
!14383 = !DILocation(line: 138, column: 13, scope: !14374)
!14384 = !DILocation(line: 138, column: 18, scope: !14374)
!14385 = !DILocation(line: 139, column: 20, scope: !14374)
!14386 = !DILocation(line: 139, column: 18, scope: !14374)
!14387 = !DILocation(line: 140, column: 15, scope: !14374)
!14388 = !DILocation(line: 140, column: 21, scope: !14374)
!14389 = !DILocation(line: 140, column: 24, scope: !14374)
!14390 = !DILocation(line: 140, column: 7, scope: !14374)
!14391 = !DILocation(line: 143, column: 16, scope: !14294)
!14392 = !DILocation(line: 143, column: 3, scope: !14294)
!14393 = !DILocation(line: 143, column: 9, scope: !14294)
!14394 = !DILocation(line: 143, column: 14, scope: !14294)
!14395 = !DILocation(line: 144, column: 18, scope: !14294)
!14396 = !DILocation(line: 144, column: 16, scope: !14294)
!14397 = !DILocation(line: 145, column: 3, scope: !14294)
!14398 = !DILocation(line: 146, column: 1, scope: !14294)
!14399 = distinct !DISubprogram(name: "getgroup", scope: !1348, file: !1348, line: 151, type: !1371, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !152)
!14400 = !DILocalVariable(name: "gid", arg: 1, scope: !14399, file: !1348, line: 151, type: !680)
!14401 = !DILocation(line: 151, column: 17, scope: !14399)
!14402 = !DILocalVariable(name: "tail", scope: !14399, file: !1348, line: 153, type: !1346)
!14403 = !DILocation(line: 153, column: 18, scope: !14399)
!14404 = !DILocalVariable(name: "match", scope: !14399, file: !1348, line: 154, type: !1346)
!14405 = !DILocation(line: 154, column: 18, scope: !14399)
!14406 = !DILocation(line: 156, column: 15, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14399, file: !1348, line: 156, column: 3)
!14408 = !DILocation(line: 156, column: 13, scope: !14407)
!14409 = !DILocation(line: 156, column: 8, scope: !14407)
!14410 = !DILocation(line: 156, column: 28, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14407, file: !1348, line: 156, column: 3)
!14412 = !DILocation(line: 156, column: 3, scope: !14407)
!14413 = !DILocation(line: 158, column: 11, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14415, file: !1348, line: 158, column: 11)
!14415 = distinct !DILexicalBlock(scope: !14411, file: !1348, line: 157, column: 5)
!14416 = !DILocation(line: 158, column: 17, scope: !14414)
!14417 = !DILocation(line: 158, column: 20, scope: !14414)
!14418 = !DILocation(line: 158, column: 25, scope: !14414)
!14419 = !DILocation(line: 158, column: 22, scope: !14414)
!14420 = !DILocation(line: 158, column: 11, scope: !14415)
!14421 = !DILocation(line: 160, column: 19, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14414, file: !1348, line: 159, column: 9)
!14423 = !DILocation(line: 160, column: 17, scope: !14422)
!14424 = !DILocation(line: 161, column: 11, scope: !14422)
!14425 = !DILocation(line: 163, column: 5, scope: !14415)
!14426 = !DILocation(line: 156, column: 41, scope: !14411)
!14427 = !DILocation(line: 156, column: 47, scope: !14411)
!14428 = !DILocation(line: 156, column: 39, scope: !14411)
!14429 = !DILocation(line: 156, column: 3, scope: !14411)
!14430 = distinct !{!14430, !14412, !14431}
!14431 = !DILocation(line: 163, column: 5, scope: !14407)
!14432 = !DILocation(line: 165, column: 7, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14399, file: !1348, line: 165, column: 7)
!14434 = !DILocation(line: 165, column: 13, scope: !14433)
!14435 = !DILocation(line: 165, column: 7, scope: !14399)
!14436 = !DILocalVariable(name: "grent", scope: !14437, file: !1348, line: 167, type: !1373)
!14437 = distinct !DILexicalBlock(scope: !14433, file: !1348, line: 166, column: 5)
!14438 = !DILocation(line: 167, column: 21, scope: !14437)
!14439 = !DILocation(line: 167, column: 39, scope: !14437)
!14440 = !DILocation(line: 167, column: 29, scope: !14437)
!14441 = !DILocalVariable(name: "name", scope: !14437, file: !1348, line: 168, type: !146)
!14442 = !DILocation(line: 168, column: 19, scope: !14437)
!14443 = !DILocation(line: 168, column: 26, scope: !14437)
!14444 = !DILocation(line: 168, column: 34, scope: !14437)
!14445 = !DILocation(line: 168, column: 41, scope: !14437)
!14446 = !{!14447, !2475, i64 0}
!14447 = !{!"group", !2475, i64 0, !2475, i64 8, !2469, i64 16, !2475, i64 24}
!14448 = !DILocation(line: 169, column: 24, scope: !14437)
!14449 = !DILocation(line: 169, column: 15, scope: !14437)
!14450 = !DILocation(line: 169, column: 13, scope: !14437)
!14451 = !DILocation(line: 170, column: 21, scope: !14437)
!14452 = !DILocation(line: 170, column: 7, scope: !14437)
!14453 = !DILocation(line: 170, column: 14, scope: !14437)
!14454 = !DILocation(line: 170, column: 17, scope: !14437)
!14455 = !DILocation(line: 170, column: 19, scope: !14437)
!14456 = !DILocation(line: 171, column: 15, scope: !14437)
!14457 = !DILocation(line: 171, column: 22, scope: !14437)
!14458 = !DILocation(line: 171, column: 28, scope: !14437)
!14459 = !DILocation(line: 171, column: 7, scope: !14437)
!14460 = !DILocation(line: 174, column: 21, scope: !14437)
!14461 = !DILocation(line: 174, column: 7, scope: !14437)
!14462 = !DILocation(line: 174, column: 14, scope: !14437)
!14463 = !DILocation(line: 174, column: 19, scope: !14437)
!14464 = !DILocation(line: 175, column: 21, scope: !14437)
!14465 = !DILocation(line: 175, column: 19, scope: !14437)
!14466 = !DILocation(line: 176, column: 5, scope: !14437)
!14467 = !DILocation(line: 178, column: 10, scope: !14399)
!14468 = !DILocation(line: 178, column: 17, scope: !14399)
!14469 = !DILocation(line: 178, column: 27, scope: !14399)
!14470 = !DILocation(line: 178, column: 34, scope: !14399)
!14471 = !DILocation(line: 178, column: 3, scope: !14399)
!14472 = distinct !DISubprogram(name: "getgidbyname", scope: !1348, file: !1348, line: 187, type: !1381, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !152)
!14473 = !DILocalVariable(name: "group", arg: 1, scope: !14472, file: !1348, line: 187, type: !146)
!14474 = !DILocation(line: 187, column: 27, scope: !14472)
!14475 = !DILocalVariable(name: "tail", scope: !14472, file: !1348, line: 189, type: !1346)
!14476 = !DILocation(line: 189, column: 18, scope: !14472)
!14477 = !DILocalVariable(name: "grent", scope: !14472, file: !1348, line: 190, type: !1373)
!14478 = !DILocation(line: 190, column: 17, scope: !14472)
!14479 = !DILocation(line: 192, column: 15, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14472, file: !1348, line: 192, column: 3)
!14481 = !DILocation(line: 192, column: 13, scope: !14480)
!14482 = !DILocation(line: 192, column: 8, scope: !14480)
!14483 = !DILocation(line: 192, column: 28, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14480, file: !1348, line: 192, column: 3)
!14485 = !DILocation(line: 192, column: 3, scope: !14480)
!14486 = !DILocation(line: 194, column: 10, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14484, file: !1348, line: 194, column: 9)
!14488 = !DILocation(line: 194, column: 16, scope: !14487)
!14489 = !DILocation(line: 194, column: 9, scope: !14487)
!14490 = !DILocation(line: 194, column: 25, scope: !14487)
!14491 = !DILocation(line: 194, column: 24, scope: !14487)
!14492 = !DILocation(line: 194, column: 21, scope: !14487)
!14493 = !DILocation(line: 194, column: 31, scope: !14487)
!14494 = !DILocation(line: 194, column: 43, scope: !14487)
!14495 = !DILocation(line: 194, column: 49, scope: !14487)
!14496 = !DILocation(line: 194, column: 55, scope: !14487)
!14497 = !DILocation(line: 194, column: 35, scope: !14487)
!14498 = !DILocation(line: 194, column: 9, scope: !14484)
!14499 = !DILocation(line: 195, column: 15, scope: !14487)
!14500 = !DILocation(line: 195, column: 21, scope: !14487)
!14501 = !DILocation(line: 195, column: 24, scope: !14487)
!14502 = !DILocation(line: 195, column: 7, scope: !14487)
!14503 = !DILocation(line: 194, column: 60, scope: !14487)
!14504 = !DILocation(line: 192, column: 41, scope: !14484)
!14505 = !DILocation(line: 192, column: 47, scope: !14484)
!14506 = !DILocation(line: 192, column: 39, scope: !14484)
!14507 = !DILocation(line: 192, column: 3, scope: !14484)
!14508 = distinct !{!14508, !14485, !14509}
!14509 = !DILocation(line: 195, column: 24, scope: !14480)
!14510 = !DILocation(line: 197, column: 15, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14472, file: !1348, line: 197, column: 3)
!14512 = !DILocation(line: 197, column: 13, scope: !14511)
!14513 = !DILocation(line: 197, column: 8, scope: !14511)
!14514 = !DILocation(line: 197, column: 30, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14511, file: !1348, line: 197, column: 3)
!14516 = !DILocation(line: 197, column: 3, scope: !14511)
!14517 = !DILocation(line: 199, column: 10, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14515, file: !1348, line: 199, column: 9)
!14519 = !DILocation(line: 199, column: 16, scope: !14518)
!14520 = !DILocation(line: 199, column: 9, scope: !14518)
!14521 = !DILocation(line: 199, column: 25, scope: !14518)
!14522 = !DILocation(line: 199, column: 24, scope: !14518)
!14523 = !DILocation(line: 199, column: 21, scope: !14518)
!14524 = !DILocation(line: 199, column: 31, scope: !14518)
!14525 = !DILocation(line: 199, column: 43, scope: !14518)
!14526 = !DILocation(line: 199, column: 49, scope: !14518)
!14527 = !DILocation(line: 199, column: 55, scope: !14518)
!14528 = !DILocation(line: 199, column: 35, scope: !14518)
!14529 = !DILocation(line: 199, column: 9, scope: !14515)
!14530 = !DILocation(line: 200, column: 7, scope: !14518)
!14531 = !DILocation(line: 199, column: 60, scope: !14518)
!14532 = !DILocation(line: 197, column: 43, scope: !14515)
!14533 = !DILocation(line: 197, column: 49, scope: !14515)
!14534 = !DILocation(line: 197, column: 41, scope: !14515)
!14535 = !DILocation(line: 197, column: 3, scope: !14515)
!14536 = distinct !{!14536, !14516, !14537}
!14537 = !DILocation(line: 200, column: 14, scope: !14511)
!14538 = !DILocation(line: 202, column: 21, scope: !14472)
!14539 = !DILocation(line: 202, column: 11, scope: !14472)
!14540 = !DILocation(line: 202, column: 9, scope: !14472)
!14541 = !DILocation(line: 213, column: 19, scope: !14472)
!14542 = !DILocation(line: 213, column: 10, scope: !14472)
!14543 = !DILocation(line: 213, column: 8, scope: !14472)
!14544 = !DILocation(line: 214, column: 11, scope: !14472)
!14545 = !DILocation(line: 214, column: 17, scope: !14472)
!14546 = !DILocation(line: 214, column: 23, scope: !14472)
!14547 = !DILocation(line: 214, column: 3, scope: !14472)
!14548 = !DILocation(line: 217, column: 7, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14472, file: !1348, line: 217, column: 7)
!14550 = !DILocation(line: 217, column: 7, scope: !14472)
!14551 = !DILocation(line: 219, column: 20, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14549, file: !1348, line: 218, column: 5)
!14553 = !DILocation(line: 219, column: 27, scope: !14552)
!14554 = !{!14447, !2469, i64 16}
!14555 = !DILocation(line: 219, column: 7, scope: !14552)
!14556 = !DILocation(line: 219, column: 13, scope: !14552)
!14557 = !DILocation(line: 219, column: 16, scope: !14552)
!14558 = !DILocation(line: 219, column: 18, scope: !14552)
!14559 = !DILocation(line: 220, column: 20, scope: !14552)
!14560 = !DILocation(line: 220, column: 7, scope: !14552)
!14561 = !DILocation(line: 220, column: 13, scope: !14552)
!14562 = !DILocation(line: 220, column: 18, scope: !14552)
!14563 = !DILocation(line: 221, column: 21, scope: !14552)
!14564 = !DILocation(line: 221, column: 19, scope: !14552)
!14565 = !DILocation(line: 222, column: 15, scope: !14552)
!14566 = !DILocation(line: 222, column: 21, scope: !14552)
!14567 = !DILocation(line: 222, column: 24, scope: !14552)
!14568 = !DILocation(line: 222, column: 7, scope: !14552)
!14569 = !DILocation(line: 225, column: 16, scope: !14472)
!14570 = !DILocation(line: 225, column: 3, scope: !14472)
!14571 = !DILocation(line: 225, column: 9, scope: !14472)
!14572 = !DILocation(line: 225, column: 14, scope: !14472)
!14573 = !DILocation(line: 226, column: 19, scope: !14472)
!14574 = !DILocation(line: 226, column: 17, scope: !14472)
!14575 = !DILocation(line: 227, column: 3, scope: !14472)
!14576 = !DILocation(line: 228, column: 1, scope: !14472)
!14577 = distinct !DISubprogram(name: "imaxtostr", scope: !14578, file: !14578, line: 36, type: !1863, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1859, retainedNodes: !152)
!14578 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/mohamad/clone/coreutils")
!14579 = !DILocalVariable(name: "i", arg: 1, scope: !14577, file: !14578, line: 36, type: !1862)
!14580 = !DILocation(line: 36, column: 19, scope: !14577)
!14581 = !DILocalVariable(name: "buf", arg: 2, scope: !14577, file: !14578, line: 36, type: !143)
!14582 = !DILocation(line: 36, column: 28, scope: !14577)
!14583 = !DILocalVariable(name: "p", scope: !14577, file: !14578, line: 38, type: !143)
!14584 = !DILocation(line: 38, column: 9, scope: !14577)
!14585 = !DILocation(line: 38, column: 13, scope: !14577)
!14586 = !DILocation(line: 38, column: 17, scope: !14577)
!14587 = !DILocation(line: 39, column: 4, scope: !14577)
!14588 = !DILocation(line: 39, column: 6, scope: !14577)
!14589 = !DILocation(line: 41, column: 7, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14577, file: !14578, line: 41, column: 7)
!14591 = !DILocation(line: 41, column: 9, scope: !14590)
!14592 = !DILocation(line: 41, column: 7, scope: !14577)
!14593 = !DILocation(line: 43, column: 7, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14590, file: !14578, line: 42, column: 5)
!14595 = !DILocation(line: 44, column: 22, scope: !14594)
!14596 = !DILocation(line: 44, column: 24, scope: !14594)
!14597 = !DILocation(line: 44, column: 20, scope: !14594)
!14598 = !DILocation(line: 44, column: 16, scope: !14594)
!14599 = !DILocation(line: 44, column: 10, scope: !14594)
!14600 = !DILocation(line: 44, column: 14, scope: !14594)
!14601 = !DILocation(line: 44, column: 9, scope: !14594)
!14602 = !DILocation(line: 45, column: 17, scope: !14594)
!14603 = !DILocation(line: 45, column: 24, scope: !14594)
!14604 = distinct !{!14604, !14593, !14605}
!14605 = !DILocation(line: 45, column: 28, scope: !14594)
!14606 = !DILocation(line: 47, column: 8, scope: !14594)
!14607 = !DILocation(line: 47, column: 12, scope: !14594)
!14608 = !DILocation(line: 48, column: 5, scope: !14594)
!14609 = !DILocation(line: 51, column: 7, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14590, file: !14578, line: 50, column: 5)
!14611 = !DILocation(line: 52, column: 22, scope: !14610)
!14612 = !DILocation(line: 52, column: 24, scope: !14610)
!14613 = !DILocation(line: 52, column: 20, scope: !14610)
!14614 = !DILocation(line: 52, column: 16, scope: !14610)
!14615 = !DILocation(line: 52, column: 10, scope: !14610)
!14616 = !DILocation(line: 52, column: 14, scope: !14610)
!14617 = !DILocation(line: 52, column: 9, scope: !14610)
!14618 = !DILocation(line: 53, column: 17, scope: !14610)
!14619 = !DILocation(line: 53, column: 24, scope: !14610)
!14620 = distinct !{!14620, !14609, !14621}
!14621 = !DILocation(line: 53, column: 28, scope: !14610)
!14622 = !DILocation(line: 56, column: 10, scope: !14577)
!14623 = !DILocation(line: 56, column: 3, scope: !14577)
!14624 = distinct !DISubprogram(name: "umaxtostr", scope: !14578, file: !14578, line: 36, type: !1868, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1865, retainedNodes: !152)
!14625 = !DILocalVariable(name: "i", arg: 1, scope: !14624, file: !14578, line: 36, type: !168)
!14626 = !DILocation(line: 36, column: 19, scope: !14624)
!14627 = !DILocalVariable(name: "buf", arg: 2, scope: !14624, file: !14578, line: 36, type: !143)
!14628 = !DILocation(line: 36, column: 28, scope: !14624)
!14629 = !DILocalVariable(name: "p", scope: !14624, file: !14578, line: 38, type: !143)
!14630 = !DILocation(line: 38, column: 9, scope: !14624)
!14631 = !DILocation(line: 38, column: 13, scope: !14624)
!14632 = !DILocation(line: 38, column: 17, scope: !14624)
!14633 = !DILocation(line: 39, column: 4, scope: !14624)
!14634 = !DILocation(line: 39, column: 6, scope: !14624)
!14635 = !DILocation(line: 41, column: 7, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14624, file: !14578, line: 41, column: 7)
!14637 = !DILocation(line: 41, column: 9, scope: !14636)
!14638 = !DILocation(line: 41, column: 7, scope: !14624)
!14639 = !DILocation(line: 43, column: 7, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14636, file: !14578, line: 42, column: 5)
!14641 = !DILocation(line: 44, column: 22, scope: !14640)
!14642 = !DILocation(line: 44, column: 24, scope: !14640)
!14643 = !DILocation(line: 44, column: 20, scope: !14640)
!14644 = !DILocation(line: 44, column: 16, scope: !14640)
!14645 = !DILocation(line: 44, column: 10, scope: !14640)
!14646 = !DILocation(line: 44, column: 14, scope: !14640)
!14647 = !DILocation(line: 44, column: 9, scope: !14640)
!14648 = !DILocation(line: 45, column: 17, scope: !14640)
!14649 = !DILocation(line: 45, column: 24, scope: !14640)
!14650 = distinct !{!14650, !14639, !14651}
!14651 = !DILocation(line: 45, column: 28, scope: !14640)
!14652 = !DILocation(line: 47, column: 8, scope: !14640)
!14653 = !DILocation(line: 47, column: 12, scope: !14640)
!14654 = !DILocation(line: 48, column: 5, scope: !14640)
!14655 = !DILocation(line: 51, column: 7, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14636, file: !14578, line: 50, column: 5)
!14657 = !DILocation(line: 52, column: 22, scope: !14656)
!14658 = !DILocation(line: 52, column: 24, scope: !14656)
!14659 = !DILocation(line: 52, column: 20, scope: !14656)
!14660 = !DILocation(line: 52, column: 16, scope: !14656)
!14661 = !DILocation(line: 52, column: 10, scope: !14656)
!14662 = !DILocation(line: 52, column: 14, scope: !14656)
!14663 = !DILocation(line: 52, column: 9, scope: !14656)
!14664 = !DILocation(line: 53, column: 17, scope: !14656)
!14665 = !DILocation(line: 53, column: 24, scope: !14656)
!14666 = distinct !{!14666, !14655, !14667}
!14667 = !DILocation(line: 53, column: 28, scope: !14656)
!14668 = !DILocation(line: 56, column: 10, scope: !14624)
!14669 = !DILocation(line: 56, column: 3, scope: !14624)
!14670 = distinct !DISubprogram(name: "mbsalign", scope: !14671, file: !14671, line: 112, type: !1875, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1870, retainedNodes: !152)
!14671 = !DIFile(filename: "lib/mbsalign.c", directory: "/home/mohamad/clone/coreutils")
!14672 = !DILocalVariable(name: "src", arg: 1, scope: !14670, file: !14671, line: 112, type: !146)
!14673 = !DILocation(line: 112, column: 23, scope: !14670)
!14674 = !DILocalVariable(name: "dest", arg: 2, scope: !14670, file: !14671, line: 112, type: !143)
!14675 = !DILocation(line: 112, column: 34, scope: !14670)
!14676 = !DILocalVariable(name: "dest_size", arg: 3, scope: !14670, file: !14671, line: 112, type: !149)
!14677 = !DILocation(line: 112, column: 47, scope: !14670)
!14678 = !DILocalVariable(name: "width", arg: 4, scope: !14670, file: !14671, line: 113, type: !148)
!14679 = !DILocation(line: 113, column: 19, scope: !14670)
!14680 = !DILocalVariable(name: "align", arg: 5, scope: !14670, file: !14671, line: 113, type: !574)
!14681 = !DILocation(line: 113, column: 38, scope: !14670)
!14682 = !DILocalVariable(name: "flags", arg: 6, scope: !14670, file: !14671, line: 113, type: !27)
!14683 = !DILocation(line: 113, column: 49, scope: !14670)
!14684 = !DILocalVariable(name: "ret", scope: !14670, file: !14671, line: 115, type: !149)
!14685 = !DILocation(line: 115, column: 10, scope: !14670)
!14686 = !DILocalVariable(name: "src_size", scope: !14670, file: !14671, line: 116, type: !149)
!14687 = !DILocation(line: 116, column: 10, scope: !14670)
!14688 = !DILocation(line: 116, column: 29, scope: !14670)
!14689 = !DILocation(line: 116, column: 21, scope: !14670)
!14690 = !DILocation(line: 116, column: 34, scope: !14670)
!14691 = !DILocalVariable(name: "newstr", scope: !14670, file: !14671, line: 117, type: !143)
!14692 = !DILocation(line: 117, column: 9, scope: !14670)
!14693 = !DILocalVariable(name: "str_wc", scope: !14670, file: !14671, line: 118, type: !1877)
!14694 = !DILocation(line: 118, column: 12, scope: !14670)
!14695 = !DILocalVariable(name: "str_to_print", scope: !14670, file: !14671, line: 119, type: !146)
!14696 = !DILocation(line: 119, column: 15, scope: !14670)
!14697 = !DILocation(line: 119, column: 30, scope: !14670)
!14698 = !DILocalVariable(name: "n_cols", scope: !14670, file: !14671, line: 120, type: !149)
!14699 = !DILocation(line: 120, column: 10, scope: !14670)
!14700 = !DILocation(line: 120, column: 19, scope: !14670)
!14701 = !DILocation(line: 120, column: 28, scope: !14670)
!14702 = !DILocalVariable(name: "n_used_bytes", scope: !14670, file: !14671, line: 121, type: !149)
!14703 = !DILocation(line: 121, column: 10, scope: !14670)
!14704 = !DILocation(line: 121, column: 25, scope: !14670)
!14705 = !DILocalVariable(name: "n_spaces", scope: !14670, file: !14671, line: 122, type: !149)
!14706 = !DILocation(line: 122, column: 10, scope: !14670)
!14707 = !DILocalVariable(name: "conversion", scope: !14670, file: !14671, line: 123, type: !141)
!14708 = !DILocation(line: 123, column: 8, scope: !14670)
!14709 = !DILocalVariable(name: "wc_enabled", scope: !14670, file: !14671, line: 124, type: !141)
!14710 = !DILocation(line: 124, column: 8, scope: !14670)
!14711 = !DILocation(line: 129, column: 9, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14670, file: !14671, line: 129, column: 7)
!14713 = !DILocation(line: 129, column: 15, scope: !14712)
!14714 = !DILocation(line: 129, column: 35, scope: !14712)
!14715 = !DILocation(line: 129, column: 38, scope: !14712)
!14716 = !DILocation(line: 129, column: 49, scope: !14712)
!14717 = !DILocation(line: 129, column: 7, scope: !14670)
!14718 = !DILocalVariable(name: "src_chars", scope: !14719, file: !14671, line: 131, type: !149)
!14719 = distinct !DILexicalBlock(scope: !14712, file: !14671, line: 130, column: 5)
!14720 = !DILocation(line: 131, column: 14, scope: !14719)
!14721 = !DILocation(line: 131, column: 42, scope: !14719)
!14722 = !DILocation(line: 131, column: 26, scope: !14719)
!14723 = !DILocation(line: 132, column: 11, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14719, file: !14671, line: 132, column: 11)
!14725 = !DILocation(line: 132, column: 21, scope: !14724)
!14726 = !DILocation(line: 132, column: 11, scope: !14719)
!14727 = !DILocation(line: 134, column: 15, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14729, file: !14671, line: 134, column: 15)
!14729 = distinct !DILexicalBlock(scope: !14724, file: !14671, line: 133, column: 9)
!14730 = !DILocation(line: 134, column: 21, scope: !14728)
!14731 = !DILocation(line: 134, column: 15, scope: !14729)
!14732 = !DILocation(line: 135, column: 13, scope: !14728)
!14733 = !DILocation(line: 137, column: 13, scope: !14728)
!14734 = !DILocation(line: 139, column: 17, scope: !14719)
!14735 = !DILocation(line: 140, column: 24, scope: !14719)
!14736 = !DILocation(line: 140, column: 34, scope: !14719)
!14737 = !DILocation(line: 140, column: 16, scope: !14719)
!14738 = !DILocation(line: 140, column: 14, scope: !14719)
!14739 = !DILocation(line: 141, column: 11, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14719, file: !14671, line: 141, column: 11)
!14741 = !DILocation(line: 141, column: 18, scope: !14740)
!14742 = !DILocation(line: 141, column: 11, scope: !14719)
!14743 = !DILocation(line: 143, column: 15, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !14671, line: 143, column: 15)
!14745 = distinct !DILexicalBlock(scope: !14740, file: !14671, line: 142, column: 9)
!14746 = !DILocation(line: 143, column: 21, scope: !14744)
!14747 = !DILocation(line: 143, column: 15, scope: !14745)
!14748 = !DILocation(line: 144, column: 13, scope: !14744)
!14749 = !DILocation(line: 146, column: 13, scope: !14744)
!14750 = !DILocation(line: 148, column: 21, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14719, file: !14671, line: 148, column: 11)
!14752 = !DILocation(line: 148, column: 29, scope: !14751)
!14753 = !DILocation(line: 148, column: 34, scope: !14751)
!14754 = !DILocation(line: 148, column: 11, scope: !14751)
!14755 = !DILocation(line: 148, column: 45, scope: !14751)
!14756 = !DILocation(line: 148, column: 11, scope: !14719)
!14757 = !DILocation(line: 150, column: 11, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14751, file: !14671, line: 149, column: 9)
!14759 = !DILocation(line: 150, column: 18, scope: !14758)
!14760 = !DILocation(line: 150, column: 28, scope: !14758)
!14761 = !DILocation(line: 150, column: 33, scope: !14758)
!14762 = !DILocation(line: 151, column: 22, scope: !14758)
!14763 = !DILocation(line: 152, column: 45, scope: !14758)
!14764 = !DILocation(line: 152, column: 24, scope: !14758)
!14765 = !DILocation(line: 152, column: 22, scope: !14758)
!14766 = !DILocation(line: 153, column: 30, scope: !14758)
!14767 = !DILocation(line: 153, column: 38, scope: !14758)
!14768 = !DILocation(line: 153, column: 20, scope: !14758)
!14769 = !DILocation(line: 153, column: 18, scope: !14758)
!14770 = !DILocation(line: 154, column: 9, scope: !14758)
!14771 = !DILocation(line: 155, column: 5, scope: !14719)
!14772 = !DILocation(line: 159, column: 7, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14670, file: !14671, line: 159, column: 7)
!14774 = !DILocation(line: 159, column: 18, scope: !14773)
!14775 = !DILocation(line: 159, column: 22, scope: !14773)
!14776 = !DILocation(line: 159, column: 33, scope: !14773)
!14777 = !DILocation(line: 159, column: 37, scope: !14773)
!14778 = !DILocation(line: 159, column: 47, scope: !14773)
!14779 = !DILocation(line: 159, column: 46, scope: !14773)
!14780 = !DILocation(line: 159, column: 44, scope: !14773)
!14781 = !DILocation(line: 159, column: 7, scope: !14670)
!14782 = !DILocation(line: 161, column: 13, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !14671, line: 161, column: 13)
!14784 = distinct !DILexicalBlock(scope: !14773, file: !14671, line: 160, column: 5)
!14785 = !DILocation(line: 161, column: 13, scope: !14784)
!14786 = !DILocation(line: 165, column: 40, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14783, file: !14671, line: 162, column: 11)
!14788 = !DILocation(line: 165, column: 24, scope: !14787)
!14789 = !DILocation(line: 165, column: 51, scope: !14787)
!14790 = !DILocation(line: 165, column: 22, scope: !14787)
!14791 = !DILocation(line: 166, column: 11, scope: !14787)
!14792 = !DILocation(line: 167, column: 26, scope: !14784)
!14793 = !DILocation(line: 167, column: 18, scope: !14784)
!14794 = !DILocation(line: 167, column: 16, scope: !14784)
!14795 = !DILocation(line: 168, column: 13, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14784, file: !14671, line: 168, column: 13)
!14797 = !DILocation(line: 168, column: 20, scope: !14796)
!14798 = !DILocation(line: 168, column: 13, scope: !14784)
!14799 = !DILocation(line: 170, column: 15, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14801, file: !14671, line: 170, column: 15)
!14801 = distinct !DILexicalBlock(scope: !14796, file: !14671, line: 169, column: 9)
!14802 = !DILocation(line: 170, column: 21, scope: !14800)
!14803 = !DILocation(line: 170, column: 15, scope: !14801)
!14804 = !DILocation(line: 171, column: 13, scope: !14800)
!14805 = !DILocation(line: 173, column: 13, scope: !14800)
!14806 = !DILocation(line: 175, column: 24, scope: !14784)
!14807 = !DILocation(line: 175, column: 22, scope: !14784)
!14808 = !DILocation(line: 176, column: 31, scope: !14784)
!14809 = !DILocation(line: 176, column: 40, scope: !14784)
!14810 = !DILocation(line: 176, column: 39, scope: !14784)
!14811 = !DILocation(line: 176, column: 18, scope: !14784)
!14812 = !DILocation(line: 176, column: 16, scope: !14784)
!14813 = !DILocation(line: 177, column: 34, scope: !14784)
!14814 = !DILocation(line: 177, column: 42, scope: !14784)
!14815 = !DILocation(line: 177, column: 50, scope: !14784)
!14816 = !DILocation(line: 177, column: 24, scope: !14784)
!14817 = !DILocation(line: 177, column: 22, scope: !14784)
!14818 = !DILocation(line: 178, column: 5, scope: !14784)
!14819 = !DILocation(line: 159, column: 53, scope: !14773)
!14820 = !DILabel(scope: !14670, name: "mbsalign_unibyte", file: !14671, line: 180)
!14821 = !DILocation(line: 180, column: 1, scope: !14670)
!14822 = !DILocation(line: 182, column: 7, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14670, file: !14671, line: 182, column: 7)
!14824 = !DILocation(line: 182, column: 17, scope: !14823)
!14825 = !DILocation(line: 182, column: 16, scope: !14823)
!14826 = !DILocation(line: 182, column: 14, scope: !14823)
!14827 = !DILocation(line: 182, column: 7, scope: !14670)
!14828 = !DILocation(line: 184, column: 17, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14823, file: !14671, line: 183, column: 5)
!14830 = !DILocation(line: 184, column: 16, scope: !14829)
!14831 = !DILocation(line: 184, column: 14, scope: !14829)
!14832 = !DILocation(line: 185, column: 22, scope: !14829)
!14833 = !DILocation(line: 185, column: 20, scope: !14829)
!14834 = !DILocation(line: 186, column: 5, scope: !14829)
!14835 = !DILocation(line: 188, column: 8, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14670, file: !14671, line: 188, column: 7)
!14837 = !DILocation(line: 188, column: 7, scope: !14836)
!14838 = !DILocation(line: 188, column: 16, scope: !14836)
!14839 = !DILocation(line: 188, column: 14, scope: !14836)
!14840 = !DILocation(line: 188, column: 7, scope: !14670)
!14841 = !DILocation(line: 189, column: 17, scope: !14836)
!14842 = !DILocation(line: 189, column: 16, scope: !14836)
!14843 = !DILocation(line: 189, column: 25, scope: !14836)
!14844 = !DILocation(line: 189, column: 23, scope: !14836)
!14845 = !DILocation(line: 189, column: 14, scope: !14836)
!14846 = !DILocation(line: 189, column: 5, scope: !14836)
!14847 = !DILocation(line: 192, column: 12, scope: !14670)
!14848 = !DILocation(line: 192, column: 4, scope: !14670)
!14849 = !DILocation(line: 192, column: 10, scope: !14670)
!14850 = !DILocalVariable(name: "start_spaces", scope: !14851, file: !14671, line: 195, type: !149)
!14851 = distinct !DILexicalBlock(scope: !14670, file: !14671, line: 194, column: 3)
!14852 = !DILocation(line: 195, column: 12, scope: !14851)
!14853 = !DILocalVariable(name: "end_spaces", scope: !14851, file: !14671, line: 195, type: !149)
!14854 = !DILocation(line: 195, column: 26, scope: !14851)
!14855 = !DILocation(line: 197, column: 13, scope: !14851)
!14856 = !DILocation(line: 197, column: 5, scope: !14851)
!14857 = !DILocation(line: 200, column: 22, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14851, file: !14671, line: 198, column: 7)
!14859 = !DILocation(line: 201, column: 22, scope: !14858)
!14860 = !DILocation(line: 201, column: 20, scope: !14858)
!14861 = !DILocation(line: 202, column: 9, scope: !14858)
!14862 = !DILocation(line: 204, column: 24, scope: !14858)
!14863 = !DILocation(line: 204, column: 22, scope: !14858)
!14864 = !DILocation(line: 205, column: 20, scope: !14858)
!14865 = !DILocation(line: 206, column: 9, scope: !14858)
!14866 = !DILocation(line: 209, column: 24, scope: !14858)
!14867 = !DILocation(line: 209, column: 33, scope: !14858)
!14868 = !DILocation(line: 209, column: 39, scope: !14858)
!14869 = !DILocation(line: 209, column: 48, scope: !14858)
!14870 = !DILocation(line: 209, column: 37, scope: !14858)
!14871 = !DILocation(line: 209, column: 22, scope: !14858)
!14872 = !DILocation(line: 210, column: 22, scope: !14858)
!14873 = !DILocation(line: 210, column: 31, scope: !14858)
!14874 = !DILocation(line: 210, column: 20, scope: !14858)
!14875 = !DILocation(line: 211, column: 9, scope: !14858)
!14876 = !DILocation(line: 214, column: 11, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14851, file: !14671, line: 214, column: 11)
!14878 = !DILocation(line: 214, column: 17, scope: !14877)
!14879 = !DILocation(line: 214, column: 11, scope: !14851)
!14880 = !DILocation(line: 215, column: 22, scope: !14877)
!14881 = !DILocation(line: 215, column: 9, scope: !14877)
!14882 = !DILocation(line: 216, column: 11, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14851, file: !14671, line: 216, column: 11)
!14884 = !DILocation(line: 216, column: 17, scope: !14883)
!14885 = !DILocation(line: 216, column: 11, scope: !14851)
!14886 = !DILocation(line: 217, column: 20, scope: !14883)
!14887 = !DILocation(line: 217, column: 9, scope: !14883)
!14888 = !DILocation(line: 220, column: 11, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14851, file: !14671, line: 220, column: 11)
!14890 = !DILocation(line: 220, column: 21, scope: !14889)
!14891 = !DILocation(line: 220, column: 11, scope: !14851)
!14892 = !DILocalVariable(name: "space_left", scope: !14893, file: !14671, line: 222, type: !149)
!14893 = distinct !DILexicalBlock(scope: !14889, file: !14671, line: 221, column: 9)
!14894 = !DILocation(line: 222, column: 18, scope: !14893)
!14895 = !DILocalVariable(name: "dest_end", scope: !14893, file: !14671, line: 223, type: !143)
!14896 = !DILocation(line: 223, column: 17, scope: !14893)
!14897 = !DILocation(line: 223, column: 28, scope: !14893)
!14898 = !DILocation(line: 223, column: 35, scope: !14893)
!14899 = !DILocation(line: 223, column: 33, scope: !14893)
!14900 = !DILocation(line: 223, column: 45, scope: !14893)
!14901 = !DILocation(line: 225, column: 33, scope: !14893)
!14902 = !DILocation(line: 225, column: 39, scope: !14893)
!14903 = !DILocation(line: 225, column: 49, scope: !14893)
!14904 = !DILocation(line: 225, column: 18, scope: !14893)
!14905 = !DILocation(line: 225, column: 16, scope: !14893)
!14906 = !DILocation(line: 226, column: 24, scope: !14893)
!14907 = !DILocation(line: 226, column: 35, scope: !14893)
!14908 = !DILocation(line: 226, column: 33, scope: !14893)
!14909 = !DILocation(line: 226, column: 22, scope: !14893)
!14910 = !DILocation(line: 227, column: 27, scope: !14893)
!14911 = !DILocation(line: 227, column: 33, scope: !14893)
!14912 = !DILocation(line: 227, column: 47, scope: !14893)
!14913 = !DILocation(line: 227, column: 18, scope: !14893)
!14914 = !DILocation(line: 227, column: 16, scope: !14893)
!14915 = !DILocation(line: 228, column: 26, scope: !14893)
!14916 = !DILocation(line: 228, column: 32, scope: !14893)
!14917 = !DILocation(line: 228, column: 42, scope: !14893)
!14918 = !DILocation(line: 228, column: 11, scope: !14893)
!14919 = !DILocation(line: 229, column: 9, scope: !14893)
!14920 = !DILocation(line: 232, column: 11, scope: !14851)
!14921 = !DILocation(line: 232, column: 28, scope: !14851)
!14922 = !DILocation(line: 232, column: 43, scope: !14851)
!14923 = !DILocation(line: 232, column: 41, scope: !14851)
!14924 = !DILocation(line: 232, column: 55, scope: !14851)
!14925 = !DILocation(line: 232, column: 24, scope: !14851)
!14926 = !DILocation(line: 232, column: 9, scope: !14851)
!14927 = !DILocation(line: 233, column: 3, scope: !14851)
!14928 = !DILabel(scope: !14670, name: "mbsalign_cleanup", file: !14671, line: 235)
!14929 = !DILocation(line: 235, column: 1, scope: !14670)
!14930 = !DILocation(line: 237, column: 9, scope: !14670)
!14931 = !DILocation(line: 237, column: 3, scope: !14670)
!14932 = !DILocation(line: 238, column: 9, scope: !14670)
!14933 = !DILocation(line: 238, column: 3, scope: !14670)
!14934 = !DILocation(line: 240, column: 10, scope: !14670)
!14935 = !DILocation(line: 240, column: 3, scope: !14670)
!14936 = distinct !DISubprogram(name: "wc_ensure_printable", scope: !14671, file: !14671, line: 40, type: !1880, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1870, retainedNodes: !152)
!14937 = !DILocalVariable(name: "wchars", arg: 1, scope: !14936, file: !14671, line: 40, type: !1877)
!14938 = !DILocation(line: 40, column: 31, scope: !14936)
!14939 = !DILocalVariable(name: "replaced", scope: !14936, file: !14671, line: 42, type: !141)
!14940 = !DILocation(line: 42, column: 8, scope: !14936)
!14941 = !DILocalVariable(name: "wc", scope: !14936, file: !14671, line: 43, type: !1877)
!14942 = !DILocation(line: 43, column: 12, scope: !14936)
!14943 = !DILocation(line: 43, column: 17, scope: !14936)
!14944 = !DILocation(line: 44, column: 3, scope: !14936)
!14945 = !DILocation(line: 44, column: 11, scope: !14936)
!14946 = !DILocation(line: 44, column: 10, scope: !14936)
!14947 = !DILocation(line: 46, column: 32, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14949, file: !14671, line: 46, column: 11)
!14949 = distinct !DILexicalBlock(scope: !14936, file: !14671, line: 45, column: 5)
!14950 = !DILocation(line: 46, column: 31, scope: !14948)
!14951 = !DILocation(line: 46, column: 12, scope: !14948)
!14952 = !DILocation(line: 46, column: 11, scope: !14949)
!14953 = !DILocation(line: 48, column: 12, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14948, file: !14671, line: 47, column: 9)
!14955 = !DILocation(line: 48, column: 15, scope: !14954)
!14956 = !DILocation(line: 49, column: 20, scope: !14954)
!14957 = !DILocation(line: 50, column: 9, scope: !14954)
!14958 = !DILocation(line: 51, column: 9, scope: !14949)
!14959 = distinct !{!14959, !14944, !14960}
!14960 = !DILocation(line: 52, column: 5, scope: !14936)
!14961 = !DILocation(line: 53, column: 10, scope: !14936)
!14962 = !DILocation(line: 53, column: 3, scope: !14936)
!14963 = distinct !DISubprogram(name: "wc_truncate", scope: !14671, file: !14671, line: 60, type: !1882, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1870, retainedNodes: !152)
!14964 = !DILocalVariable(name: "wc", arg: 1, scope: !14963, file: !14671, line: 60, type: !1877)
!14965 = !DILocation(line: 60, column: 23, scope: !14963)
!14966 = !DILocalVariable(name: "width", arg: 2, scope: !14963, file: !14671, line: 60, type: !149)
!14967 = !DILocation(line: 60, column: 34, scope: !14963)
!14968 = !DILocalVariable(name: "cells", scope: !14963, file: !14671, line: 62, type: !149)
!14969 = !DILocation(line: 62, column: 10, scope: !14963)
!14970 = !DILocalVariable(name: "next_cells", scope: !14963, file: !14671, line: 63, type: !27)
!14971 = !DILocation(line: 63, column: 7, scope: !14963)
!14972 = !DILocation(line: 65, column: 3, scope: !14963)
!14973 = !DILocation(line: 65, column: 11, scope: !14963)
!14974 = !DILocation(line: 65, column: 10, scope: !14963)
!14975 = !DILocation(line: 67, column: 30, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14963, file: !14671, line: 66, column: 5)
!14977 = !DILocation(line: 67, column: 29, scope: !14976)
!14978 = !DILocation(line: 67, column: 20, scope: !14976)
!14979 = !DILocation(line: 67, column: 18, scope: !14976)
!14980 = !DILocation(line: 68, column: 11, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14976, file: !14671, line: 68, column: 11)
!14982 = !DILocation(line: 68, column: 22, scope: !14981)
!14983 = !DILocation(line: 68, column: 11, scope: !14976)
!14984 = !DILocation(line: 70, column: 12, scope: !14985)
!14985 = distinct !DILexicalBlock(scope: !14981, file: !14671, line: 69, column: 9)
!14986 = !DILocation(line: 70, column: 15, scope: !14985)
!14987 = !DILocation(line: 71, column: 22, scope: !14985)
!14988 = !DILocation(line: 72, column: 9, scope: !14985)
!14989 = !DILocation(line: 73, column: 11, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14976, file: !14671, line: 73, column: 11)
!14991 = !DILocation(line: 73, column: 19, scope: !14990)
!14992 = !DILocation(line: 73, column: 17, scope: !14990)
!14993 = !DILocation(line: 73, column: 32, scope: !14990)
!14994 = !DILocation(line: 73, column: 30, scope: !14990)
!14995 = !DILocation(line: 73, column: 11, scope: !14976)
!14996 = !DILocation(line: 74, column: 9, scope: !14990)
!14997 = !DILocation(line: 75, column: 16, scope: !14976)
!14998 = !DILocation(line: 75, column: 13, scope: !14976)
!14999 = !DILocation(line: 76, column: 9, scope: !14976)
!15000 = distinct !{!15000, !14972, !15001}
!15001 = !DILocation(line: 77, column: 5, scope: !14963)
!15002 = !DILocation(line: 78, column: 4, scope: !14963)
!15003 = !DILocation(line: 78, column: 7, scope: !14963)
!15004 = !DILocation(line: 79, column: 10, scope: !14963)
!15005 = !DILocation(line: 79, column: 3, scope: !14963)
!15006 = distinct !DISubprogram(name: "mbs_align_pad", scope: !14671, file: !14671, line: 88, type: !1884, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1870, retainedNodes: !152)
!15007 = !DILocalVariable(name: "dest", arg: 1, scope: !15006, file: !14671, line: 88, type: !143)
!15008 = !DILocation(line: 88, column: 22, scope: !15006)
!15009 = !DILocalVariable(name: "dest_end", arg: 2, scope: !15006, file: !14671, line: 88, type: !146)
!15010 = !DILocation(line: 88, column: 40, scope: !15006)
!15011 = !DILocalVariable(name: "n_spaces", arg: 3, scope: !15006, file: !14671, line: 88, type: !149)
!15012 = !DILocation(line: 88, column: 57, scope: !15006)
!15013 = !DILocation(line: 92, column: 3, scope: !15006)
!15014 = !DILocation(line: 92, column: 18, scope: !15006)
!15015 = !DILocation(line: 92, column: 21, scope: !15006)
!15016 = !DILocation(line: 92, column: 25, scope: !15006)
!15017 = !DILocation(line: 92, column: 32, scope: !15006)
!15018 = !DILocation(line: 92, column: 30, scope: !15006)
!15019 = !DILocation(line: 0, scope: !15006)
!15020 = !DILocation(line: 93, column: 10, scope: !15006)
!15021 = !DILocation(line: 93, column: 13, scope: !15006)
!15022 = distinct !{!15022, !15013, !15023}
!15023 = !DILocation(line: 93, column: 15, scope: !15006)
!15024 = !DILocation(line: 94, column: 4, scope: !15006)
!15025 = !DILocation(line: 94, column: 9, scope: !15006)
!15026 = !DILocation(line: 95, column: 10, scope: !15006)
!15027 = !DILocation(line: 95, column: 3, scope: !15006)
!15028 = distinct !DISubprogram(name: "ambsalign", scope: !14671, file: !14671, line: 248, type: !1878, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1870, retainedNodes: !152)
!15029 = !DILocalVariable(name: "src", arg: 1, scope: !15028, file: !14671, line: 248, type: !146)
!15030 = !DILocation(line: 248, column: 24, scope: !15028)
!15031 = !DILocalVariable(name: "width", arg: 2, scope: !15028, file: !14671, line: 248, type: !148)
!15032 = !DILocation(line: 248, column: 37, scope: !15028)
!15033 = !DILocalVariable(name: "align", arg: 3, scope: !15028, file: !14671, line: 248, type: !574)
!15034 = !DILocation(line: 248, column: 56, scope: !15028)
!15035 = !DILocalVariable(name: "flags", arg: 4, scope: !15028, file: !14671, line: 248, type: !27)
!15036 = !DILocation(line: 248, column: 67, scope: !15028)
!15037 = !DILocalVariable(name: "orig_width", scope: !15028, file: !14671, line: 250, type: !149)
!15038 = !DILocation(line: 250, column: 10, scope: !15028)
!15039 = !DILocation(line: 250, column: 24, scope: !15028)
!15040 = !DILocation(line: 250, column: 23, scope: !15028)
!15041 = !DILocalVariable(name: "size", scope: !15028, file: !14671, line: 251, type: !149)
!15042 = !DILocation(line: 251, column: 10, scope: !15028)
!15043 = !DILocation(line: 251, column: 18, scope: !15028)
!15044 = !DILocation(line: 251, column: 17, scope: !15028)
!15045 = !DILocalVariable(name: "req", scope: !15028, file: !14671, line: 252, type: !149)
!15046 = !DILocation(line: 252, column: 10, scope: !15028)
!15047 = !DILocation(line: 252, column: 16, scope: !15028)
!15048 = !DILocalVariable(name: "buf", scope: !15028, file: !14671, line: 253, type: !143)
!15049 = !DILocation(line: 253, column: 9, scope: !15028)
!15050 = !DILocation(line: 255, column: 3, scope: !15028)
!15051 = !DILocation(line: 255, column: 10, scope: !15028)
!15052 = !DILocation(line: 255, column: 17, scope: !15028)
!15053 = !DILocation(line: 255, column: 14, scope: !15028)
!15054 = !DILocalVariable(name: "nbuf", scope: !15055, file: !14671, line: 257, type: !143)
!15055 = distinct !DILexicalBlock(scope: !15028, file: !14671, line: 256, column: 5)
!15056 = !DILocation(line: 257, column: 13, scope: !15055)
!15057 = !DILocation(line: 258, column: 14, scope: !15055)
!15058 = !DILocation(line: 258, column: 18, scope: !15055)
!15059 = !DILocation(line: 258, column: 12, scope: !15055)
!15060 = !DILocation(line: 259, column: 23, scope: !15055)
!15061 = !DILocation(line: 259, column: 28, scope: !15055)
!15062 = !DILocation(line: 259, column: 14, scope: !15055)
!15063 = !DILocation(line: 259, column: 12, scope: !15055)
!15064 = !DILocation(line: 260, column: 11, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15055, file: !14671, line: 260, column: 11)
!15066 = !DILocation(line: 260, column: 16, scope: !15065)
!15067 = !DILocation(line: 260, column: 11, scope: !15055)
!15068 = !DILocation(line: 262, column: 17, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15065, file: !14671, line: 261, column: 9)
!15070 = !DILocation(line: 262, column: 11, scope: !15069)
!15071 = !DILocation(line: 263, column: 15, scope: !15069)
!15072 = !DILocation(line: 264, column: 11, scope: !15069)
!15073 = !DILocation(line: 266, column: 13, scope: !15055)
!15074 = !DILocation(line: 266, column: 11, scope: !15055)
!15075 = !DILocation(line: 267, column: 16, scope: !15055)
!15076 = !DILocation(line: 267, column: 8, scope: !15055)
!15077 = !DILocation(line: 267, column: 14, scope: !15055)
!15078 = !DILocation(line: 268, column: 23, scope: !15055)
!15079 = !DILocation(line: 268, column: 28, scope: !15055)
!15080 = !DILocation(line: 268, column: 33, scope: !15055)
!15081 = !DILocation(line: 268, column: 39, scope: !15055)
!15082 = !DILocation(line: 268, column: 46, scope: !15055)
!15083 = !DILocation(line: 268, column: 53, scope: !15055)
!15084 = !DILocation(line: 268, column: 13, scope: !15055)
!15085 = !DILocation(line: 268, column: 11, scope: !15055)
!15086 = !DILocation(line: 269, column: 11, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15055, file: !14671, line: 269, column: 11)
!15088 = !DILocation(line: 269, column: 15, scope: !15087)
!15089 = !DILocation(line: 269, column: 11, scope: !15055)
!15090 = !DILocation(line: 271, column: 17, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15087, file: !14671, line: 270, column: 9)
!15092 = !DILocation(line: 271, column: 11, scope: !15091)
!15093 = !DILocation(line: 272, column: 15, scope: !15091)
!15094 = !DILocation(line: 273, column: 11, scope: !15091)
!15095 = distinct !{!15095, !15050, !15096}
!15096 = !DILocation(line: 275, column: 5, scope: !15028)
!15097 = !DILocation(line: 277, column: 10, scope: !15028)
!15098 = !DILocation(line: 277, column: 3, scope: !15028)
!15099 = distinct !DISubprogram(name: "gnu_mbswidth", scope: !15100, file: !15100, line: 47, type: !1889, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1886, retainedNodes: !152)
!15100 = !DIFile(filename: "lib/mbswidth.c", directory: "/home/mohamad/clone/coreutils")
!15101 = !DILocalVariable(name: "string", arg: 1, scope: !15099, file: !15100, line: 47, type: !146)
!15102 = !DILocation(line: 47, column: 23, scope: !15099)
!15103 = !DILocalVariable(name: "flags", arg: 2, scope: !15099, file: !15100, line: 47, type: !27)
!15104 = !DILocation(line: 47, column: 35, scope: !15099)
!15105 = !DILocation(line: 49, column: 21, scope: !15099)
!15106 = !DILocation(line: 49, column: 37, scope: !15099)
!15107 = !DILocation(line: 49, column: 29, scope: !15099)
!15108 = !DILocation(line: 49, column: 46, scope: !15099)
!15109 = !DILocation(line: 49, column: 10, scope: !15099)
!15110 = !DILocation(line: 49, column: 3, scope: !15099)
!15111 = distinct !DISubprogram(name: "mbsnwidth", scope: !15100, file: !15100, line: 57, type: !1891, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1886, retainedNodes: !152)
!15112 = !DILocalVariable(name: "string", arg: 1, scope: !15111, file: !15100, line: 57, type: !146)
!15113 = !DILocation(line: 57, column: 24, scope: !15111)
!15114 = !DILocalVariable(name: "nbytes", arg: 2, scope: !15111, file: !15100, line: 57, type: !149)
!15115 = !DILocation(line: 57, column: 39, scope: !15111)
!15116 = !DILocalVariable(name: "flags", arg: 3, scope: !15111, file: !15100, line: 57, type: !27)
!15117 = !DILocation(line: 57, column: 51, scope: !15111)
!15118 = !DILocalVariable(name: "p", scope: !15111, file: !15100, line: 59, type: !146)
!15119 = !DILocation(line: 59, column: 15, scope: !15111)
!15120 = !DILocation(line: 59, column: 19, scope: !15111)
!15121 = !DILocalVariable(name: "plimit", scope: !15111, file: !15100, line: 60, type: !146)
!15122 = !DILocation(line: 60, column: 15, scope: !15111)
!15123 = !DILocation(line: 60, column: 24, scope: !15111)
!15124 = !DILocation(line: 60, column: 28, scope: !15111)
!15125 = !DILocation(line: 60, column: 26, scope: !15111)
!15126 = !DILocalVariable(name: "width", scope: !15111, file: !15100, line: 61, type: !27)
!15127 = !DILocation(line: 61, column: 7, scope: !15111)
!15128 = !DILocation(line: 63, column: 9, scope: !15111)
!15129 = !DILocation(line: 64, column: 7, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15111, file: !15100, line: 64, column: 7)
!15131 = !DILocation(line: 64, column: 18, scope: !15130)
!15132 = !DILocation(line: 64, column: 7, scope: !15111)
!15133 = !DILocation(line: 66, column: 7, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15130, file: !15100, line: 65, column: 5)
!15135 = !DILocation(line: 66, column: 14, scope: !15134)
!15136 = !DILocation(line: 66, column: 18, scope: !15134)
!15137 = !DILocation(line: 66, column: 16, scope: !15134)
!15138 = !DILocation(line: 67, column: 18, scope: !15134)
!15139 = !DILocation(line: 67, column: 17, scope: !15134)
!15140 = !DILocation(line: 67, column: 9, scope: !15134)
!15141 = !DILocation(line: 90, column: 16, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15134, file: !15100, line: 68, column: 11)
!15143 = !DILocation(line: 91, column: 20, scope: !15142)
!15144 = !DILocation(line: 92, column: 15, scope: !15142)
!15145 = !DILocalVariable(name: "mbstate", scope: !15146, file: !15100, line: 96, type: !1893)
!15146 = distinct !DILexicalBlock(scope: !15142, file: !15100, line: 95, column: 15)
!15147 = !DILocation(line: 96, column: 27, scope: !15146)
!15148 = !DILocation(line: 97, column: 17, scope: !15146)
!15149 = !DILocation(line: 98, column: 17, scope: !15146)
!15150 = !DILocalVariable(name: "wc", scope: !15151, file: !15100, line: 100, type: !641)
!15151 = distinct !DILexicalBlock(scope: !15146, file: !15100, line: 99, column: 19)
!15152 = !DILocation(line: 100, column: 29, scope: !15151)
!15153 = !DILocalVariable(name: "bytes", scope: !15151, file: !15100, line: 101, type: !149)
!15154 = !DILocation(line: 101, column: 28, scope: !15151)
!15155 = !DILocalVariable(name: "w", scope: !15151, file: !15100, line: 102, type: !27)
!15156 = !DILocation(line: 102, column: 25, scope: !15151)
!15157 = !DILocation(line: 104, column: 43, scope: !15151)
!15158 = !DILocation(line: 104, column: 46, scope: !15151)
!15159 = !DILocation(line: 104, column: 55, scope: !15151)
!15160 = !DILocation(line: 104, column: 53, scope: !15151)
!15161 = !DILocation(line: 104, column: 29, scope: !15151)
!15162 = !DILocation(line: 104, column: 27, scope: !15151)
!15163 = !DILocation(line: 106, column: 25, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15151, file: !15100, line: 106, column: 25)
!15165 = !DILocation(line: 106, column: 31, scope: !15164)
!15166 = !DILocation(line: 106, column: 25, scope: !15151)
!15167 = !DILocation(line: 109, column: 31, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15169, file: !15100, line: 109, column: 29)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !15100, line: 108, column: 23)
!15170 = !DILocation(line: 109, column: 37, scope: !15168)
!15171 = !DILocation(line: 109, column: 29, scope: !15169)
!15172 = !DILocation(line: 111, column: 30, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15168, file: !15100, line: 110, column: 27)
!15174 = !DILocation(line: 112, column: 34, scope: !15173)
!15175 = !DILocation(line: 113, column: 29, scope: !15173)
!15176 = !DILocation(line: 116, column: 27, scope: !15168)
!15177 = !DILocation(line: 119, column: 25, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15151, file: !15100, line: 119, column: 25)
!15179 = !DILocation(line: 119, column: 31, scope: !15178)
!15180 = !DILocation(line: 119, column: 25, scope: !15151)
!15181 = !DILocation(line: 122, column: 31, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15183, file: !15100, line: 122, column: 29)
!15183 = distinct !DILexicalBlock(scope: !15178, file: !15100, line: 121, column: 23)
!15184 = !DILocation(line: 122, column: 37, scope: !15182)
!15185 = !DILocation(line: 122, column: 29, scope: !15183)
!15186 = !DILocation(line: 124, column: 33, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15182, file: !15100, line: 123, column: 27)
!15188 = !DILocation(line: 124, column: 31, scope: !15187)
!15189 = !DILocation(line: 125, column: 34, scope: !15187)
!15190 = !DILocation(line: 126, column: 29, scope: !15187)
!15191 = !DILocation(line: 129, column: 27, scope: !15182)
!15192 = !DILocation(line: 132, column: 25, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15151, file: !15100, line: 132, column: 25)
!15194 = !DILocation(line: 132, column: 31, scope: !15193)
!15195 = !DILocation(line: 132, column: 25, scope: !15151)
!15196 = !DILocation(line: 134, column: 29, scope: !15193)
!15197 = !DILocation(line: 134, column: 23, scope: !15193)
!15198 = !DILocation(line: 136, column: 34, scope: !15151)
!15199 = !DILocation(line: 136, column: 25, scope: !15151)
!15200 = !DILocation(line: 136, column: 23, scope: !15151)
!15201 = !DILocation(line: 137, column: 25, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15151, file: !15100, line: 137, column: 25)
!15203 = !DILocation(line: 137, column: 27, scope: !15202)
!15204 = !DILocation(line: 137, column: 25, scope: !15151)
!15205 = !DILocation(line: 140, column: 29, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !15100, line: 140, column: 29)
!15207 = distinct !DILexicalBlock(scope: !15202, file: !15100, line: 139, column: 23)
!15208 = !DILocation(line: 140, column: 43, scope: !15206)
!15209 = !DILocation(line: 140, column: 41, scope: !15206)
!15210 = !DILocation(line: 140, column: 31, scope: !15206)
!15211 = !DILocation(line: 140, column: 29, scope: !15207)
!15212 = !DILocation(line: 141, column: 27, scope: !15206)
!15213 = !DILocation(line: 142, column: 34, scope: !15207)
!15214 = !DILocation(line: 142, column: 31, scope: !15207)
!15215 = !DILocation(line: 143, column: 23, scope: !15207)
!15216 = !DILocation(line: 146, column: 29, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15202, file: !15100, line: 146, column: 27)
!15218 = !DILocation(line: 146, column: 35, scope: !15217)
!15219 = !DILocation(line: 146, column: 27, scope: !15202)
!15220 = !DILocation(line: 148, column: 42, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15222, file: !15100, line: 148, column: 31)
!15222 = distinct !DILexicalBlock(scope: !15217, file: !15100, line: 147, column: 25)
!15223 = !DILocation(line: 148, column: 32, scope: !15221)
!15224 = !DILocation(line: 148, column: 31, scope: !15222)
!15225 = !DILocation(line: 150, column: 35, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !15100, line: 150, column: 35)
!15227 = distinct !DILexicalBlock(scope: !15221, file: !15100, line: 149, column: 29)
!15228 = !DILocation(line: 150, column: 41, scope: !15226)
!15229 = !DILocation(line: 150, column: 35, scope: !15227)
!15230 = !DILocation(line: 151, column: 33, scope: !15226)
!15231 = !DILocation(line: 152, column: 36, scope: !15227)
!15232 = !DILocation(line: 153, column: 29, scope: !15227)
!15233 = !DILocation(line: 154, column: 25, scope: !15222)
!15234 = !DILocation(line: 156, column: 25, scope: !15217)
!15235 = !DILocation(line: 158, column: 26, scope: !15151)
!15236 = !DILocation(line: 158, column: 23, scope: !15151)
!15237 = !DILocation(line: 159, column: 19, scope: !15151)
!15238 = !DILocation(line: 160, column: 26, scope: !15146)
!15239 = !DILocation(line: 160, column: 24, scope: !15146)
!15240 = distinct !{!15240, !15149, !15241}
!15241 = !DILocation(line: 160, column: 44, scope: !15146)
!15242 = !DILocation(line: 162, column: 15, scope: !15142)
!15243 = distinct !{!15243, !15133, !15244}
!15244 = !DILocation(line: 163, column: 11, scope: !15134)
!15245 = !DILocation(line: 164, column: 14, scope: !15134)
!15246 = !DILocation(line: 164, column: 7, scope: !15134)
!15247 = !DILocation(line: 167, column: 3, scope: !15111)
!15248 = !DILocation(line: 167, column: 10, scope: !15111)
!15249 = !DILocation(line: 167, column: 14, scope: !15111)
!15250 = !DILocation(line: 167, column: 12, scope: !15111)
!15251 = !DILocalVariable(name: "c", scope: !15252, file: !15100, line: 169, type: !579)
!15252 = distinct !DILexicalBlock(scope: !15111, file: !15100, line: 168, column: 5)
!15253 = !DILocation(line: 169, column: 21, scope: !15252)
!15254 = !DILocation(line: 169, column: 43, scope: !15252)
!15255 = !DILocation(line: 169, column: 41, scope: !15252)
!15256 = !DILocation(line: 171, column: 11, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15252, file: !15100, line: 171, column: 11)
!15258 = !DILocation(line: 171, column: 11, scope: !15252)
!15259 = !DILocation(line: 173, column: 15, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15261, file: !15100, line: 173, column: 15)
!15261 = distinct !DILexicalBlock(scope: !15257, file: !15100, line: 172, column: 9)
!15262 = !DILocation(line: 173, column: 21, scope: !15260)
!15263 = !DILocation(line: 173, column: 15, scope: !15261)
!15264 = !DILocation(line: 174, column: 13, scope: !15260)
!15265 = !DILocation(line: 175, column: 16, scope: !15261)
!15266 = !DILocation(line: 176, column: 9, scope: !15261)
!15267 = !DILocation(line: 177, column: 18, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15257, file: !15100, line: 177, column: 16)
!15269 = !DILocation(line: 177, column: 24, scope: !15268)
!15270 = !DILocation(line: 177, column: 16, scope: !15257)
!15271 = !DILocation(line: 179, column: 16, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !15100, line: 179, column: 15)
!15273 = distinct !DILexicalBlock(scope: !15268, file: !15100, line: 178, column: 9)
!15274 = !DILocation(line: 179, column: 15, scope: !15273)
!15275 = !DILocation(line: 181, column: 19, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15277, file: !15100, line: 181, column: 19)
!15277 = distinct !DILexicalBlock(scope: !15272, file: !15100, line: 180, column: 13)
!15278 = !DILocation(line: 181, column: 25, scope: !15276)
!15279 = !DILocation(line: 181, column: 19, scope: !15277)
!15280 = !DILocation(line: 182, column: 17, scope: !15276)
!15281 = !DILocation(line: 183, column: 20, scope: !15277)
!15282 = !DILocation(line: 184, column: 13, scope: !15277)
!15283 = !DILocation(line: 185, column: 9, scope: !15273)
!15284 = !DILocation(line: 187, column: 9, scope: !15268)
!15285 = distinct !{!15285, !15247, !15286}
!15286 = !DILocation(line: 188, column: 5, scope: !15111)
!15287 = !DILocation(line: 189, column: 10, scope: !15111)
!15288 = !DILocation(line: 189, column: 3, scope: !15111)
!15289 = !DILabel(scope: !15111, name: "overflow", file: !15100, line: 191)
!15290 = !DILocation(line: 191, column: 2, scope: !15111)
!15291 = !DILocation(line: 192, column: 3, scope: !15111)
!15292 = !DILocation(line: 193, column: 1, scope: !15111)
!15293 = distinct !DISubprogram(name: "mpsort", scope: !1909, file: !1909, line: 153, type: !1906, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1903, retainedNodes: !152)
!15294 = !DILocalVariable(name: "base", arg: 1, scope: !15293, file: !1909, line: 153, type: !181)
!15295 = !DILocation(line: 153, column: 22, scope: !15293)
!15296 = !DILocalVariable(name: "n", arg: 2, scope: !15293, file: !1909, line: 153, type: !149)
!15297 = !DILocation(line: 153, column: 35, scope: !15293)
!15298 = !DILocalVariable(name: "cmp", arg: 3, scope: !15293, file: !1909, line: 153, type: !1908)
!15299 = !DILocation(line: 153, column: 58, scope: !15293)
!15300 = !DILocation(line: 155, column: 20, scope: !15293)
!15301 = !DILocation(line: 155, column: 26, scope: !15293)
!15302 = !DILocation(line: 155, column: 29, scope: !15293)
!15303 = !DILocation(line: 155, column: 36, scope: !15293)
!15304 = !DILocation(line: 155, column: 34, scope: !15293)
!15305 = !DILocation(line: 155, column: 39, scope: !15293)
!15306 = !DILocation(line: 155, column: 3, scope: !15293)
!15307 = !DILocation(line: 156, column: 1, scope: !15293)
!15308 = distinct !DISubprogram(name: "mpsort_with_tmp", scope: !1909, file: !1909, line: 86, type: !1913, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1903, retainedNodes: !152)
!15309 = !DILocalVariable(name: "base", arg: 1, scope: !15308, file: !1909, line: 86, type: !1915)
!15310 = !DILocation(line: 86, column: 40, scope: !15308)
!15311 = !DILocalVariable(name: "n", arg: 2, scope: !15308, file: !1909, line: 86, type: !149)
!15312 = !DILocation(line: 86, column: 53, scope: !15308)
!15313 = !DILocalVariable(name: "tmp", arg: 3, scope: !15308, file: !1909, line: 87, type: !1915)
!15314 = !DILocation(line: 87, column: 40, scope: !15308)
!15315 = !DILocalVariable(name: "cmp", arg: 4, scope: !15308, file: !1909, line: 88, type: !1908)
!15316 = !DILocation(line: 88, column: 38, scope: !15308)
!15317 = !DILocation(line: 90, column: 7, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15308, file: !1909, line: 90, column: 7)
!15319 = !DILocation(line: 90, column: 9, scope: !15318)
!15320 = !DILocation(line: 90, column: 7, scope: !15308)
!15321 = !DILocation(line: 92, column: 11, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15323, file: !1909, line: 92, column: 11)
!15323 = distinct !DILexicalBlock(scope: !15318, file: !1909, line: 91, column: 5)
!15324 = !DILocation(line: 92, column: 13, scope: !15322)
!15325 = !DILocation(line: 92, column: 11, scope: !15323)
!15326 = !DILocalVariable(name: "p0", scope: !15327, file: !1909, line: 94, type: !175)
!15327 = distinct !DILexicalBlock(scope: !15322, file: !1909, line: 93, column: 9)
!15328 = !DILocation(line: 94, column: 23, scope: !15327)
!15329 = !DILocation(line: 94, column: 28, scope: !15327)
!15330 = !DILocalVariable(name: "p1", scope: !15327, file: !1909, line: 95, type: !175)
!15331 = !DILocation(line: 95, column: 23, scope: !15327)
!15332 = !DILocation(line: 95, column: 28, scope: !15327)
!15333 = !DILocation(line: 96, column: 18, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15327, file: !1909, line: 96, column: 15)
!15335 = !DILocation(line: 96, column: 23, scope: !15334)
!15336 = !DILocation(line: 96, column: 27, scope: !15334)
!15337 = !DILocation(line: 96, column: 31, scope: !15334)
!15338 = !DILocation(line: 96, column: 15, scope: !15327)
!15339 = !DILocation(line: 98, column: 25, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15334, file: !1909, line: 97, column: 13)
!15341 = !DILocation(line: 98, column: 15, scope: !15340)
!15342 = !DILocation(line: 98, column: 23, scope: !15340)
!15343 = !DILocation(line: 99, column: 25, scope: !15340)
!15344 = !DILocation(line: 99, column: 15, scope: !15340)
!15345 = !DILocation(line: 99, column: 23, scope: !15340)
!15346 = !DILocation(line: 100, column: 13, scope: !15340)
!15347 = !DILocation(line: 101, column: 9, scope: !15327)
!15348 = !DILocation(line: 102, column: 5, scope: !15323)
!15349 = !DILocalVariable(name: "n1", scope: !15350, file: !1909, line: 105, type: !149)
!15350 = distinct !DILexicalBlock(scope: !15318, file: !1909, line: 104, column: 5)
!15351 = !DILocation(line: 105, column: 14, scope: !15350)
!15352 = !DILocation(line: 105, column: 19, scope: !15350)
!15353 = !DILocation(line: 105, column: 21, scope: !15350)
!15354 = !DILocalVariable(name: "n2", scope: !15350, file: !1909, line: 106, type: !149)
!15355 = !DILocation(line: 106, column: 14, scope: !15350)
!15356 = !DILocation(line: 106, column: 19, scope: !15350)
!15357 = !DILocation(line: 106, column: 23, scope: !15350)
!15358 = !DILocation(line: 106, column: 21, scope: !15350)
!15359 = !DILocalVariable(name: "i", scope: !15350, file: !1909, line: 107, type: !149)
!15360 = !DILocation(line: 107, column: 14, scope: !15350)
!15361 = !DILocalVariable(name: "t", scope: !15350, file: !1909, line: 108, type: !149)
!15362 = !DILocation(line: 108, column: 14, scope: !15350)
!15363 = !DILocalVariable(name: "tlim", scope: !15350, file: !1909, line: 109, type: !149)
!15364 = !DILocation(line: 109, column: 14, scope: !15350)
!15365 = !DILocation(line: 109, column: 21, scope: !15350)
!15366 = !DILocalVariable(name: "b", scope: !15350, file: !1909, line: 110, type: !149)
!15367 = !DILocation(line: 110, column: 14, scope: !15350)
!15368 = !DILocation(line: 110, column: 18, scope: !15350)
!15369 = !DILocalVariable(name: "blim", scope: !15350, file: !1909, line: 111, type: !149)
!15370 = !DILocation(line: 111, column: 14, scope: !15350)
!15371 = !DILocation(line: 111, column: 21, scope: !15350)
!15372 = !DILocalVariable(name: "bb", scope: !15350, file: !1909, line: 112, type: !175)
!15373 = !DILocation(line: 112, column: 19, scope: !15350)
!15374 = !DILocalVariable(name: "tt", scope: !15350, file: !1909, line: 113, type: !175)
!15375 = !DILocation(line: 113, column: 19, scope: !15350)
!15376 = !DILocation(line: 115, column: 24, scope: !15350)
!15377 = !DILocation(line: 115, column: 31, scope: !15350)
!15378 = !DILocation(line: 115, column: 29, scope: !15350)
!15379 = !DILocation(line: 115, column: 35, scope: !15350)
!15380 = !DILocation(line: 115, column: 39, scope: !15350)
!15381 = !DILocation(line: 115, column: 44, scope: !15350)
!15382 = !DILocation(line: 115, column: 7, scope: !15350)
!15383 = !DILocation(line: 117, column: 11, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15350, file: !1909, line: 117, column: 11)
!15385 = !DILocation(line: 117, column: 14, scope: !15384)
!15386 = !DILocation(line: 117, column: 11, scope: !15350)
!15387 = !DILocation(line: 118, column: 18, scope: !15384)
!15388 = !DILocation(line: 118, column: 9, scope: !15384)
!15389 = !DILocation(line: 118, column: 16, scope: !15384)
!15390 = !DILocation(line: 120, column: 26, scope: !15384)
!15391 = !DILocation(line: 120, column: 32, scope: !15384)
!15392 = !DILocation(line: 120, column: 36, scope: !15384)
!15393 = !DILocation(line: 120, column: 41, scope: !15384)
!15394 = !DILocation(line: 120, column: 9, scope: !15384)
!15395 = !DILocation(line: 122, column: 12, scope: !15350)
!15396 = !DILocation(line: 122, column: 16, scope: !15350)
!15397 = !DILocation(line: 122, column: 10, scope: !15350)
!15398 = !DILocation(line: 123, column: 12, scope: !15350)
!15399 = !DILocation(line: 123, column: 17, scope: !15350)
!15400 = !DILocation(line: 123, column: 10, scope: !15350)
!15401 = !DILocation(line: 125, column: 14, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15350, file: !1909, line: 125, column: 7)
!15403 = !DILocation(line: 125, column: 12, scope: !15402)
!15404 = !DILocation(line: 126, column: 13, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15406, file: !1909, line: 126, column: 13)
!15406 = distinct !DILexicalBlock(scope: !15402, file: !1909, line: 125, column: 7)
!15407 = !DILocation(line: 126, column: 18, scope: !15405)
!15408 = !DILocation(line: 126, column: 22, scope: !15405)
!15409 = !DILocation(line: 126, column: 26, scope: !15405)
!15410 = !DILocation(line: 126, column: 13, scope: !15406)
!15411 = !DILocation(line: 128, column: 25, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15405, file: !1909, line: 127, column: 11)
!15413 = !DILocation(line: 128, column: 13, scope: !15412)
!15414 = !DILocation(line: 128, column: 19, scope: !15412)
!15415 = !DILocation(line: 128, column: 23, scope: !15412)
!15416 = !DILocation(line: 129, column: 14, scope: !15412)
!15417 = !DILocation(line: 130, column: 17, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15412, file: !1909, line: 130, column: 17)
!15419 = !DILocation(line: 130, column: 22, scope: !15418)
!15420 = !DILocation(line: 130, column: 19, scope: !15418)
!15421 = !DILocation(line: 130, column: 17, scope: !15412)
!15422 = !DILocation(line: 131, column: 15, scope: !15418)
!15423 = !DILocation(line: 132, column: 18, scope: !15412)
!15424 = !DILocation(line: 132, column: 22, scope: !15412)
!15425 = !DILocation(line: 132, column: 16, scope: !15412)
!15426 = !DILocation(line: 133, column: 11, scope: !15412)
!15427 = !DILocation(line: 136, column: 25, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15405, file: !1909, line: 135, column: 11)
!15429 = !DILocation(line: 136, column: 13, scope: !15428)
!15430 = !DILocation(line: 136, column: 19, scope: !15428)
!15431 = !DILocation(line: 136, column: 23, scope: !15428)
!15432 = !DILocation(line: 137, column: 14, scope: !15428)
!15433 = !DILocation(line: 138, column: 17, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15428, file: !1909, line: 138, column: 17)
!15435 = !DILocation(line: 138, column: 22, scope: !15434)
!15436 = !DILocation(line: 138, column: 19, scope: !15434)
!15437 = !DILocation(line: 138, column: 17, scope: !15428)
!15438 = !DILocation(line: 140, column: 25, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15434, file: !1909, line: 139, column: 15)
!15440 = !DILocation(line: 140, column: 32, scope: !15439)
!15441 = !DILocation(line: 140, column: 30, scope: !15439)
!15442 = !DILocation(line: 140, column: 17, scope: !15439)
!15443 = !DILocation(line: 140, column: 35, scope: !15439)
!15444 = !DILocation(line: 140, column: 41, scope: !15439)
!15445 = !DILocation(line: 140, column: 39, scope: !15439)
!15446 = !DILocation(line: 140, column: 45, scope: !15439)
!15447 = !DILocation(line: 140, column: 52, scope: !15439)
!15448 = !DILocation(line: 140, column: 50, scope: !15439)
!15449 = !DILocation(line: 140, column: 55, scope: !15439)
!15450 = !DILocation(line: 141, column: 17, scope: !15439)
!15451 = !DILocation(line: 143, column: 18, scope: !15428)
!15452 = !DILocation(line: 143, column: 23, scope: !15428)
!15453 = !DILocation(line: 143, column: 16, scope: !15428)
!15454 = !DILocation(line: 125, column: 7, scope: !15406)
!15455 = distinct !{!15455, !15456, !15457}
!15456 = !DILocation(line: 125, column: 7, scope: !15402)
!15457 = !DILocation(line: 144, column: 11, scope: !15402)
!15458 = !DILocation(line: 146, column: 1, scope: !15308)
!15459 = distinct !DISubprogram(name: "mpsort_into_tmp", scope: !1909, file: !1909, line: 37, type: !1913, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1903, retainedNodes: !152)
!15460 = !DILocalVariable(name: "base", arg: 1, scope: !15459, file: !1909, line: 37, type: !1915)
!15461 = !DILocation(line: 37, column: 40, scope: !15459)
!15462 = !DILocalVariable(name: "n", arg: 2, scope: !15459, file: !1909, line: 37, type: !149)
!15463 = !DILocation(line: 37, column: 53, scope: !15459)
!15464 = !DILocalVariable(name: "tmp", arg: 3, scope: !15459, file: !1909, line: 38, type: !1915)
!15465 = !DILocation(line: 38, column: 40, scope: !15459)
!15466 = !DILocalVariable(name: "cmp", arg: 4, scope: !15459, file: !1909, line: 39, type: !1908)
!15467 = !DILocation(line: 39, column: 38, scope: !15459)
!15468 = !DILocalVariable(name: "n1", scope: !15459, file: !1909, line: 41, type: !149)
!15469 = !DILocation(line: 41, column: 10, scope: !15459)
!15470 = !DILocation(line: 41, column: 15, scope: !15459)
!15471 = !DILocation(line: 41, column: 17, scope: !15459)
!15472 = !DILocalVariable(name: "n2", scope: !15459, file: !1909, line: 42, type: !149)
!15473 = !DILocation(line: 42, column: 10, scope: !15459)
!15474 = !DILocation(line: 42, column: 15, scope: !15459)
!15475 = !DILocation(line: 42, column: 19, scope: !15459)
!15476 = !DILocation(line: 42, column: 17, scope: !15459)
!15477 = !DILocalVariable(name: "a", scope: !15459, file: !1909, line: 43, type: !149)
!15478 = !DILocation(line: 43, column: 10, scope: !15459)
!15479 = !DILocalVariable(name: "alim", scope: !15459, file: !1909, line: 44, type: !149)
!15480 = !DILocation(line: 44, column: 10, scope: !15459)
!15481 = !DILocation(line: 44, column: 17, scope: !15459)
!15482 = !DILocalVariable(name: "b", scope: !15459, file: !1909, line: 45, type: !149)
!15483 = !DILocation(line: 45, column: 10, scope: !15459)
!15484 = !DILocation(line: 45, column: 14, scope: !15459)
!15485 = !DILocalVariable(name: "blim", scope: !15459, file: !1909, line: 46, type: !149)
!15486 = !DILocation(line: 46, column: 10, scope: !15459)
!15487 = !DILocation(line: 46, column: 17, scope: !15459)
!15488 = !DILocalVariable(name: "ba", scope: !15459, file: !1909, line: 47, type: !175)
!15489 = !DILocation(line: 47, column: 15, scope: !15459)
!15490 = !DILocalVariable(name: "bb", scope: !15459, file: !1909, line: 48, type: !175)
!15491 = !DILocation(line: 48, column: 15, scope: !15459)
!15492 = !DILocation(line: 50, column: 20, scope: !15459)
!15493 = !DILocation(line: 50, column: 27, scope: !15459)
!15494 = !DILocation(line: 50, column: 25, scope: !15459)
!15495 = !DILocation(line: 50, column: 31, scope: !15459)
!15496 = !DILocation(line: 50, column: 35, scope: !15459)
!15497 = !DILocation(line: 50, column: 40, scope: !15459)
!15498 = !DILocation(line: 50, column: 3, scope: !15459)
!15499 = !DILocation(line: 51, column: 20, scope: !15459)
!15500 = !DILocation(line: 51, column: 26, scope: !15459)
!15501 = !DILocation(line: 51, column: 30, scope: !15459)
!15502 = !DILocation(line: 51, column: 35, scope: !15459)
!15503 = !DILocation(line: 51, column: 3, scope: !15459)
!15504 = !DILocation(line: 53, column: 8, scope: !15459)
!15505 = !DILocation(line: 53, column: 13, scope: !15459)
!15506 = !DILocation(line: 53, column: 6, scope: !15459)
!15507 = !DILocation(line: 54, column: 8, scope: !15459)
!15508 = !DILocation(line: 54, column: 13, scope: !15459)
!15509 = !DILocation(line: 54, column: 6, scope: !15459)
!15510 = !DILocation(line: 56, column: 3, scope: !15459)
!15511 = !DILocation(line: 57, column: 9, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !1909, line: 57, column: 9)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !1909, line: 56, column: 3)
!15514 = distinct !DILexicalBlock(scope: !15459, file: !1909, line: 56, column: 3)
!15515 = !DILocation(line: 57, column: 14, scope: !15512)
!15516 = !DILocation(line: 57, column: 18, scope: !15512)
!15517 = !DILocation(line: 57, column: 22, scope: !15512)
!15518 = !DILocation(line: 57, column: 9, scope: !15513)
!15519 = !DILocation(line: 59, column: 18, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15512, file: !1909, line: 58, column: 7)
!15521 = !DILocation(line: 59, column: 13, scope: !15520)
!15522 = !DILocation(line: 59, column: 16, scope: !15520)
!15523 = !DILocation(line: 60, column: 10, scope: !15520)
!15524 = !DILocation(line: 61, column: 13, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15520, file: !1909, line: 61, column: 13)
!15526 = !DILocation(line: 61, column: 18, scope: !15525)
!15527 = !DILocation(line: 61, column: 15, scope: !15525)
!15528 = !DILocation(line: 61, column: 13, scope: !15520)
!15529 = !DILocation(line: 63, column: 17, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15525, file: !1909, line: 62, column: 11)
!15531 = !DILocation(line: 63, column: 15, scope: !15530)
!15532 = !DILocation(line: 64, column: 20, scope: !15530)
!15533 = !DILocation(line: 64, column: 18, scope: !15530)
!15534 = !DILocation(line: 65, column: 13, scope: !15530)
!15535 = !DILocation(line: 67, column: 14, scope: !15520)
!15536 = !DILocation(line: 67, column: 19, scope: !15520)
!15537 = !DILocation(line: 67, column: 12, scope: !15520)
!15538 = !DILocation(line: 68, column: 7, scope: !15520)
!15539 = !DILocation(line: 71, column: 18, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15512, file: !1909, line: 70, column: 7)
!15541 = !DILocation(line: 71, column: 13, scope: !15540)
!15542 = !DILocation(line: 71, column: 16, scope: !15540)
!15543 = !DILocation(line: 72, column: 10, scope: !15540)
!15544 = !DILocation(line: 73, column: 13, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15540, file: !1909, line: 73, column: 13)
!15546 = !DILocation(line: 73, column: 18, scope: !15545)
!15547 = !DILocation(line: 73, column: 15, scope: !15545)
!15548 = !DILocation(line: 73, column: 13, scope: !15540)
!15549 = !DILocation(line: 74, column: 11, scope: !15545)
!15550 = !DILocation(line: 75, column: 14, scope: !15540)
!15551 = !DILocation(line: 75, column: 19, scope: !15540)
!15552 = !DILocation(line: 75, column: 12, scope: !15540)
!15553 = !DILocation(line: 56, column: 3, scope: !15513)
!15554 = distinct !{!15554, !15555, !15556}
!15555 = !DILocation(line: 56, column: 3, scope: !15514)
!15556 = !DILocation(line: 76, column: 7, scope: !15514)
!15557 = !DILocation(line: 78, column: 11, scope: !15459)
!15558 = !DILocation(line: 78, column: 3, scope: !15459)
!15559 = !DILocation(line: 78, column: 16, scope: !15459)
!15560 = !DILocation(line: 78, column: 23, scope: !15459)
!15561 = !DILocation(line: 78, column: 21, scope: !15459)
!15562 = !DILocation(line: 78, column: 27, scope: !15459)
!15563 = !DILocation(line: 78, column: 34, scope: !15459)
!15564 = !DILocation(line: 78, column: 32, scope: !15459)
!15565 = !DILocation(line: 78, column: 37, scope: !15459)
!15566 = !DILocation(line: 79, column: 1, scope: !15459)
!15567 = distinct !DISubprogram(name: "nstrftime", scope: !15568, file: !15568, line: 431, type: !1919, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1916, retainedNodes: !152)
!15568 = !DIFile(filename: "lib/nstrftime.c", directory: "/home/mohamad/clone/coreutils")
!15569 = !DILocalVariable(name: "s", arg: 1, scope: !15567, file: !15568, line: 431, type: !143)
!15570 = !DILocation(line: 431, column: 32, scope: !15567)
!15571 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15567, file: !15568, line: 431, type: !149)
!15572 = !DILocation(line: 431, column: 35, scope: !15567)
!15573 = !DILocalVariable(name: "format", arg: 3, scope: !15567, file: !15568, line: 432, type: !146)
!15574 = !DILocation(line: 432, column: 28, scope: !15567)
!15575 = !DILocalVariable(name: "tp", arg: 4, scope: !15567, file: !15568, line: 433, type: !1921)
!15576 = !DILocation(line: 433, column: 31, scope: !15567)
!15577 = !DILocalVariable(name: "tz", arg: 5, scope: !15567, file: !15568, line: 433, type: !1936)
!15578 = !DILocation(line: 433, column: 34, scope: !15567)
!15579 = !DILocalVariable(name: "ns", arg: 6, scope: !15567, file: !15568, line: 433, type: !27)
!15580 = !DILocalVariable(name: "tzset_called", scope: !15567, file: !15568, line: 435, type: !141)
!15581 = !DILocation(line: 435, column: 8, scope: !15567)
!15582 = !DILocation(line: 436, column: 31, scope: !15567)
!15583 = !DILocation(line: 436, column: 34, scope: !15567)
!15584 = !DILocation(line: 436, column: 57, scope: !15567)
!15585 = !DILocation(line: 436, column: 65, scope: !15567)
!15586 = !DILocation(line: 437, column: 52, scope: !15567)
!15587 = !DILocation(line: 436, column: 10, scope: !15567)
!15588 = !DILocation(line: 436, column: 3, scope: !15567)
!15589 = distinct !DISubprogram(name: "__strftime_internal", scope: !15568, file: !15568, line: 447, type: !1944, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !152)
!15590 = !DILocalVariable(name: "s", arg: 1, scope: !15589, file: !15568, line: 447, type: !143)
!15591 = !DILocation(line: 447, column: 40, scope: !15589)
!15592 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15589, file: !15568, line: 447, type: !149)
!15593 = !DILocation(line: 447, column: 43, scope: !15589)
!15594 = !DILocalVariable(name: "format", arg: 3, scope: !15589, file: !15568, line: 448, type: !146)
!15595 = !DILocation(line: 448, column: 36, scope: !15589)
!15596 = !DILocalVariable(name: "tp", arg: 4, scope: !15589, file: !15568, line: 449, type: !1921)
!15597 = !DILocation(line: 449, column: 39, scope: !15589)
!15598 = !DILocalVariable(name: "upcase", arg: 5, scope: !15589, file: !15568, line: 449, type: !141)
!15599 = !DILocation(line: 449, column: 48, scope: !15589)
!15600 = !DILocalVariable(name: "yr_spec", arg: 6, scope: !15589, file: !15568, line: 450, type: !27)
!15601 = !DILocation(line: 450, column: 26, scope: !15589)
!15602 = !DILocalVariable(name: "width", arg: 7, scope: !15589, file: !15568, line: 450, type: !27)
!15603 = !DILocation(line: 450, column: 39, scope: !15589)
!15604 = !DILocalVariable(name: "tzset_called", arg: 8, scope: !15589, file: !15568, line: 450, type: !628)
!15605 = !DILocation(line: 450, column: 52, scope: !15589)
!15606 = !DILocalVariable(name: "tz", arg: 9, scope: !15589, file: !15568, line: 451, type: !1936)
!15607 = !DILocation(line: 451, column: 22, scope: !15589)
!15608 = !DILocalVariable(name: "ns", arg: 10, scope: !15589, file: !15568, line: 451, type: !27)
!15609 = !DILocalVariable(name: "hour12", scope: !15589, file: !15568, line: 460, type: !27)
!15610 = !DILocation(line: 460, column: 7, scope: !15589)
!15611 = !DILocation(line: 460, column: 16, scope: !15589)
!15612 = !DILocation(line: 460, column: 20, scope: !15589)
!15613 = !{!6851, !2469, i64 8}
!15614 = !DILocalVariable(name: "zone", scope: !15589, file: !15568, line: 498, type: !146)
!15615 = !DILocation(line: 498, column: 15, scope: !15589)
!15616 = !DILocalVariable(name: "i", scope: !15589, file: !15568, line: 499, type: !149)
!15617 = !DILocation(line: 499, column: 10, scope: !15589)
!15618 = !DILocalVariable(name: "p", scope: !15589, file: !15568, line: 500, type: !143)
!15619 = !DILocation(line: 500, column: 21, scope: !15589)
!15620 = !DILocation(line: 500, column: 25, scope: !15589)
!15621 = !DILocalVariable(name: "f", scope: !15589, file: !15568, line: 501, type: !146)
!15622 = !DILocation(line: 501, column: 17, scope: !15589)
!15623 = !DILocation(line: 515, column: 8, scope: !15589)
!15624 = !DILocation(line: 523, column: 25, scope: !15589)
!15625 = !DILocation(line: 523, column: 29, scope: !15589)
!15626 = !{!6851, !2475, i64 48}
!15627 = !DILocation(line: 523, column: 8, scope: !15589)
!15628 = !DILocation(line: 553, column: 9, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15589, file: !15568, line: 553, column: 7)
!15630 = !DILocation(line: 553, column: 7, scope: !15589)
!15631 = !DILocation(line: 554, column: 10, scope: !15629)
!15632 = !DILocation(line: 554, column: 5, scope: !15629)
!15633 = !DILocation(line: 556, column: 7, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15589, file: !15568, line: 556, column: 7)
!15635 = !DILocation(line: 556, column: 14, scope: !15634)
!15636 = !DILocation(line: 556, column: 7, scope: !15589)
!15637 = !DILocation(line: 557, column: 12, scope: !15634)
!15638 = !DILocation(line: 557, column: 5, scope: !15634)
!15639 = !DILocation(line: 559, column: 9, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15634, file: !15568, line: 559, column: 9)
!15641 = !DILocation(line: 559, column: 16, scope: !15640)
!15642 = !DILocation(line: 559, column: 9, scope: !15634)
!15643 = !DILocation(line: 560, column: 14, scope: !15640)
!15644 = !DILocation(line: 560, column: 7, scope: !15640)
!15645 = !DILocation(line: 562, column: 12, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15589, file: !15568, line: 562, column: 3)
!15647 = !DILocation(line: 562, column: 10, scope: !15646)
!15648 = !DILocation(line: 562, column: 8, scope: !15646)
!15649 = !DILocation(line: 562, column: 21, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15646, file: !15568, line: 562, column: 3)
!15651 = !DILocation(line: 562, column: 20, scope: !15650)
!15652 = !DILocation(line: 562, column: 23, scope: !15650)
!15653 = !DILocation(line: 562, column: 3, scope: !15646)
!15654 = !DILocalVariable(name: "pad", scope: !15655, file: !15568, line: 564, type: !27)
!15655 = distinct !DILexicalBlock(scope: !15650, file: !15568, line: 563, column: 5)
!15656 = !DILocation(line: 564, column: 11, scope: !15655)
!15657 = !DILocalVariable(name: "modifier", scope: !15655, file: !15568, line: 565, type: !27)
!15658 = !DILocation(line: 565, column: 11, scope: !15655)
!15659 = !DILocalVariable(name: "digits", scope: !15655, file: !15568, line: 566, type: !27)
!15660 = !DILocation(line: 566, column: 11, scope: !15655)
!15661 = !DILocalVariable(name: "number_value", scope: !15655, file: !15568, line: 567, type: !27)
!15662 = !DILocation(line: 567, column: 11, scope: !15655)
!15663 = !DILocalVariable(name: "u_number_value", scope: !15655, file: !15568, line: 568, type: !6)
!15664 = !DILocation(line: 568, column: 20, scope: !15655)
!15665 = !DILocalVariable(name: "negative_number", scope: !15655, file: !15568, line: 569, type: !141)
!15666 = !DILocation(line: 569, column: 12, scope: !15655)
!15667 = !DILocalVariable(name: "always_output_a_sign", scope: !15655, file: !15568, line: 570, type: !141)
!15668 = !DILocation(line: 570, column: 12, scope: !15655)
!15669 = !DILocalVariable(name: "tz_colon_mask", scope: !15655, file: !15568, line: 571, type: !27)
!15670 = !DILocation(line: 571, column: 11, scope: !15655)
!15671 = !DILocalVariable(name: "subfmt", scope: !15655, file: !15568, line: 572, type: !146)
!15672 = !DILocation(line: 572, column: 21, scope: !15655)
!15673 = !DILocalVariable(name: "sign_char", scope: !15655, file: !15568, line: 573, type: !144)
!15674 = !DILocation(line: 573, column: 14, scope: !15655)
!15675 = !DILocalVariable(name: "bufp", scope: !15655, file: !15568, line: 574, type: !143)
!15676 = !DILocation(line: 574, column: 15, scope: !15655)
!15677 = !DILocalVariable(name: "buf", scope: !15655, file: !15568, line: 575, type: !1946)
!15678 = !DILocation(line: 575, column: 14, scope: !15655)
!15679 = !DILocalVariable(name: "to_lowcase", scope: !15655, file: !15568, line: 580, type: !141)
!15680 = !DILocation(line: 580, column: 12, scope: !15655)
!15681 = !DILocalVariable(name: "to_uppcase", scope: !15655, file: !15568, line: 581, type: !141)
!15682 = !DILocation(line: 581, column: 12, scope: !15655)
!15683 = !DILocation(line: 581, column: 25, scope: !15655)
!15684 = !DILocalVariable(name: "colons", scope: !15655, file: !15568, line: 582, type: !149)
!15685 = !DILocation(line: 582, column: 14, scope: !15655)
!15686 = !DILocalVariable(name: "change_case", scope: !15655, file: !15568, line: 583, type: !141)
!15687 = !DILocation(line: 583, column: 12, scope: !15655)
!15688 = !DILocalVariable(name: "format_char", scope: !15655, file: !15568, line: 584, type: !27)
!15689 = !DILocation(line: 584, column: 11, scope: !15655)
!15690 = !DILocalVariable(name: "subwidth", scope: !15655, file: !15568, line: 585, type: !27)
!15691 = !DILocation(line: 585, column: 11, scope: !15655)
!15692 = !DILocation(line: 667, column: 12, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15655, file: !15568, line: 667, column: 11)
!15694 = !DILocation(line: 667, column: 11, scope: !15693)
!15695 = !DILocation(line: 667, column: 14, scope: !15693)
!15696 = !DILocation(line: 667, column: 11, scope: !15655)
!15697 = !DILocation(line: 669, column: 11, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15693, file: !15568, line: 668, column: 9)
!15699 = !DILocalVariable(name: "_n", scope: !15700, file: !15568, line: 669, type: !149)
!15700 = distinct !DILexicalBlock(scope: !15698, file: !15568, line: 669, column: 11)
!15701 = !DILocation(line: 669, column: 11, scope: !15700)
!15702 = !DILocalVariable(name: "_w", scope: !15700, file: !15568, line: 669, type: !149)
!15703 = !DILocalVariable(name: "_incr", scope: !15700, file: !15568, line: 669, type: !149)
!15704 = !DILocation(line: 669, column: 11, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15700, file: !15568, line: 669, column: 11)
!15706 = !DILocation(line: 669, column: 11, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15700, file: !15568, line: 669, column: 11)
!15708 = !DILocation(line: 669, column: 11, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15710, file: !15568, line: 669, column: 11)
!15710 = distinct !DILexicalBlock(scope: !15707, file: !15568, line: 669, column: 11)
!15711 = !DILocation(line: 669, column: 11, scope: !15710)
!15712 = !DILocalVariable(name: "_delta", scope: !15713, file: !15568, line: 669, type: !149)
!15713 = distinct !DILexicalBlock(scope: !15709, file: !15568, line: 669, column: 11)
!15714 = !DILocation(line: 669, column: 11, scope: !15713)
!15715 = !DILocation(line: 669, column: 11, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15713, file: !15568, line: 669, column: 11)
!15717 = !DILocation(line: 670, column: 11, scope: !15698)
!15718 = !DILocation(line: 676, column: 7, scope: !15655)
!15719 = !DILocation(line: 678, column: 20, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15655, file: !15568, line: 677, column: 9)
!15721 = !DILocation(line: 678, column: 19, scope: !15720)
!15722 = !DILocation(line: 678, column: 11, scope: !15720)
!15723 = !DILocation(line: 685, column: 22, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15720, file: !15568, line: 679, column: 13)
!15725 = !DILocation(line: 685, column: 21, scope: !15724)
!15726 = !DILocation(line: 685, column: 19, scope: !15724)
!15727 = !DILocation(line: 686, column: 15, scope: !15724)
!15728 = distinct !{!15728, !15718, !15729}
!15729 = !DILocation(line: 700, column: 9, scope: !15655)
!15730 = !DILocation(line: 690, column: 26, scope: !15724)
!15731 = !DILocation(line: 691, column: 15, scope: !15724)
!15732 = !DILocation(line: 693, column: 27, scope: !15724)
!15733 = !DILocation(line: 694, column: 15, scope: !15724)
!15734 = !DILocation(line: 697, column: 15, scope: !15724)
!15735 = !DILocation(line: 699, column: 11, scope: !15720)
!15736 = !DILocation(line: 702, column: 11, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15655, file: !15568, line: 702, column: 11)
!15738 = !DILocation(line: 702, column: 11, scope: !15655)
!15739 = !DILocation(line: 704, column: 17, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15737, file: !15568, line: 703, column: 9)
!15741 = !DILocation(line: 705, column: 11, scope: !15740)
!15742 = !DILocation(line: 707, column: 19, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15744, file: !15568, line: 707, column: 19)
!15744 = distinct !DILexicalBlock(scope: !15740, file: !15568, line: 706, column: 13)
!15745 = !DILocation(line: 707, column: 25, scope: !15743)
!15746 = !DILocation(line: 708, column: 19, scope: !15743)
!15747 = !DILocation(line: 708, column: 23, scope: !15743)
!15748 = !DILocation(line: 708, column: 29, scope: !15743)
!15749 = !DILocation(line: 708, column: 45, scope: !15743)
!15750 = !DILocation(line: 708, column: 49, scope: !15743)
!15751 = !DILocation(line: 708, column: 48, scope: !15743)
!15752 = !DILocation(line: 708, column: 51, scope: !15743)
!15753 = !DILocation(line: 708, column: 61, scope: !15743)
!15754 = !DILocation(line: 707, column: 19, scope: !15744)
!15755 = !DILocation(line: 710, column: 23, scope: !15743)
!15756 = !DILocation(line: 710, column: 17, scope: !15743)
!15757 = !DILocation(line: 713, column: 25, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15743, file: !15568, line: 712, column: 17)
!15759 = !DILocation(line: 714, column: 29, scope: !15758)
!15760 = !DILocation(line: 714, column: 28, scope: !15758)
!15761 = !DILocation(line: 714, column: 31, scope: !15758)
!15762 = !DILocation(line: 714, column: 25, scope: !15758)
!15763 = !DILocation(line: 716, column: 15, scope: !15744)
!15764 = !DILocation(line: 717, column: 13, scope: !15744)
!15765 = !DILocation(line: 718, column: 18, scope: !15740)
!15766 = distinct !{!15766, !15741, !15767}
!15767 = !DILocation(line: 718, column: 30, scope: !15740)
!15768 = !DILocation(line: 719, column: 9, scope: !15740)
!15769 = !DILocation(line: 722, column: 16, scope: !15655)
!15770 = !DILocation(line: 722, column: 15, scope: !15655)
!15771 = !DILocation(line: 722, column: 7, scope: !15655)
!15772 = !DILocation(line: 726, column: 24, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15655, file: !15568, line: 723, column: 9)
!15774 = !DILocation(line: 726, column: 22, scope: !15773)
!15775 = !DILocation(line: 726, column: 20, scope: !15773)
!15776 = !DILocation(line: 727, column: 11, scope: !15773)
!15777 = !DILocation(line: 730, column: 20, scope: !15773)
!15778 = !DILocation(line: 731, column: 11, scope: !15773)
!15779 = !DILocation(line: 735, column: 22, scope: !15655)
!15780 = !DILocation(line: 735, column: 21, scope: !15655)
!15781 = !DILocation(line: 735, column: 19, scope: !15655)
!15782 = !DILocation(line: 736, column: 15, scope: !15655)
!15783 = !DILocation(line: 736, column: 7, scope: !15655)
!15784 = !DILocation(line: 782, column: 15, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 782, column: 15)
!15786 = distinct !DILexicalBlock(scope: !15655, file: !15568, line: 737, column: 9)
!15787 = !DILocation(line: 782, column: 24, scope: !15785)
!15788 = !DILocation(line: 782, column: 15, scope: !15786)
!15789 = !DILocation(line: 783, column: 13, scope: !15785)
!15790 = !DILocation(line: 784, column: 11, scope: !15786)
!15791 = !DILocalVariable(name: "_n", scope: !15792, file: !15568, line: 784, type: !149)
!15792 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 784, column: 11)
!15793 = !DILocation(line: 784, column: 11, scope: !15792)
!15794 = !DILocalVariable(name: "_w", scope: !15792, file: !15568, line: 784, type: !149)
!15795 = !DILocalVariable(name: "_incr", scope: !15792, file: !15568, line: 784, type: !149)
!15796 = !DILocation(line: 784, column: 11, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15792, file: !15568, line: 784, column: 11)
!15798 = !DILocation(line: 784, column: 11, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15792, file: !15568, line: 784, column: 11)
!15800 = !DILocation(line: 784, column: 11, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15802, file: !15568, line: 784, column: 11)
!15802 = distinct !DILexicalBlock(scope: !15799, file: !15568, line: 784, column: 11)
!15803 = !DILocation(line: 784, column: 11, scope: !15802)
!15804 = !DILocalVariable(name: "_delta", scope: !15805, file: !15568, line: 784, type: !149)
!15805 = distinct !DILexicalBlock(scope: !15801, file: !15568, line: 784, column: 11)
!15806 = !DILocation(line: 784, column: 11, scope: !15805)
!15807 = !DILocation(line: 784, column: 11, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15805, file: !15568, line: 784, column: 11)
!15809 = !DILocation(line: 785, column: 11, scope: !15786)
!15810 = !DILocation(line: 788, column: 15, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 788, column: 15)
!15812 = !DILocation(line: 788, column: 24, scope: !15811)
!15813 = !DILocation(line: 788, column: 15, scope: !15786)
!15814 = !DILocation(line: 789, column: 13, scope: !15811)
!15815 = !DILocation(line: 790, column: 15, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 790, column: 15)
!15817 = !DILocation(line: 790, column: 15, scope: !15786)
!15818 = !DILocation(line: 792, column: 26, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15816, file: !15568, line: 791, column: 13)
!15820 = !DILocation(line: 793, column: 26, scope: !15819)
!15821 = !DILocation(line: 794, column: 13, scope: !15819)
!15822 = !DILocation(line: 799, column: 11, scope: !15786)
!15823 = !DILocation(line: 803, column: 15, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 803, column: 15)
!15825 = !DILocation(line: 803, column: 24, scope: !15824)
!15826 = !DILocation(line: 803, column: 15, scope: !15786)
!15827 = !DILocation(line: 804, column: 13, scope: !15824)
!15828 = !DILocation(line: 805, column: 15, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 805, column: 15)
!15830 = !DILocation(line: 805, column: 15, scope: !15786)
!15831 = !DILocation(line: 807, column: 26, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15829, file: !15568, line: 806, column: 13)
!15833 = !DILocation(line: 808, column: 26, scope: !15832)
!15834 = !DILocation(line: 809, column: 13, scope: !15832)
!15835 = !DILocation(line: 814, column: 11, scope: !15786)
!15836 = !DILocation(line: 819, column: 15, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 819, column: 15)
!15838 = !DILocation(line: 819, column: 15, scope: !15786)
!15839 = !DILocation(line: 821, column: 26, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15837, file: !15568, line: 820, column: 13)
!15841 = !DILocation(line: 822, column: 26, scope: !15840)
!15842 = !DILocation(line: 823, column: 13, scope: !15840)
!15843 = !DILocation(line: 824, column: 15, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 824, column: 15)
!15845 = !DILocation(line: 824, column: 24, scope: !15844)
!15846 = !DILocation(line: 824, column: 15, scope: !15786)
!15847 = !DILocation(line: 825, column: 13, scope: !15844)
!15848 = !DILocation(line: 833, column: 11, scope: !15786)
!15849 = !DILocation(line: 837, column: 15, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 837, column: 15)
!15851 = !DILocation(line: 837, column: 24, scope: !15850)
!15852 = !DILocation(line: 837, column: 15, scope: !15786)
!15853 = !DILocation(line: 838, column: 13, scope: !15850)
!15854 = !DILocation(line: 839, column: 15, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 839, column: 15)
!15856 = !DILocation(line: 839, column: 15, scope: !15786)
!15857 = !DILocation(line: 841, column: 26, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15855, file: !15568, line: 840, column: 13)
!15859 = !DILocation(line: 842, column: 26, scope: !15858)
!15860 = !DILocation(line: 843, column: 13, scope: !15858)
!15861 = !DILocation(line: 851, column: 11, scope: !15786)
!15862 = !DILocation(line: 855, column: 15, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 855, column: 15)
!15864 = !DILocation(line: 855, column: 24, scope: !15863)
!15865 = !DILocation(line: 855, column: 15, scope: !15786)
!15866 = !DILocation(line: 856, column: 13, scope: !15863)
!15867 = !DILocation(line: 865, column: 11, scope: !15786)
!15868 = !DILabel(scope: !15786, name: "subformat", file: !15568, line: 868)
!15869 = !DILocation(line: 868, column: 9, scope: !15786)
!15870 = !DILocation(line: 869, column: 20, scope: !15786)
!15871 = !DILocation(line: 869, column: 11, scope: !15786)
!15872 = !DILabel(scope: !15786, name: "subformat_width", file: !15568, line: 870)
!15873 = !DILocation(line: 870, column: 9, scope: !15786)
!15874 = !DILocalVariable(name: "len", scope: !15875, file: !15568, line: 872, type: !149)
!15875 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 871, column: 11)
!15876 = !DILocation(line: 872, column: 20, scope: !15875)
!15877 = !DILocation(line: 873, column: 47, scope: !15875)
!15878 = !DILocation(line: 873, column: 55, scope: !15875)
!15879 = !DILocation(line: 873, column: 59, scope: !15875)
!15880 = !DILocation(line: 874, column: 47, scope: !15875)
!15881 = !DILocation(line: 874, column: 52, scope: !15875)
!15882 = !DILocation(line: 874, column: 62, scope: !15875)
!15883 = !DILocation(line: 875, column: 47, scope: !15875)
!15884 = !DILocation(line: 872, column: 26, scope: !15875)
!15885 = !DILocation(line: 876, column: 13, scope: !15875)
!15886 = !DILocalVariable(name: "_n", scope: !15887, file: !15568, line: 876, type: !149)
!15887 = distinct !DILexicalBlock(scope: !15875, file: !15568, line: 876, column: 13)
!15888 = !DILocation(line: 876, column: 13, scope: !15887)
!15889 = !DILocalVariable(name: "_w", scope: !15887, file: !15568, line: 876, type: !149)
!15890 = !DILocalVariable(name: "_incr", scope: !15887, file: !15568, line: 876, type: !149)
!15891 = !DILocation(line: 876, column: 13, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15887, file: !15568, line: 876, column: 13)
!15893 = !DILocation(line: 876, column: 13, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15887, file: !15568, line: 876, column: 13)
!15895 = !DILocation(line: 876, column: 13, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !15568, line: 876, column: 13)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !15568, line: 876, column: 13)
!15898 = !DILocation(line: 876, column: 13, scope: !15897)
!15899 = !DILocalVariable(name: "_delta", scope: !15900, file: !15568, line: 876, type: !149)
!15900 = distinct !DILexicalBlock(scope: !15896, file: !15568, line: 876, column: 13)
!15901 = !DILocation(line: 876, column: 13, scope: !15900)
!15902 = !DILocation(line: 876, column: 13, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15900, file: !15568, line: 876, column: 13)
!15904 = !DILocation(line: 882, column: 11, scope: !15786)
!15905 = !DILabel(scope: !15786, name: "underlying_strftime", file: !15568, line: 885)
!15906 = !DILocation(line: 885, column: 9, scope: !15786)
!15907 = !DILocalVariable(name: "ufmt", scope: !15908, file: !15568, line: 889, type: !1949)
!15908 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 886, column: 11)
!15909 = !DILocation(line: 889, column: 18, scope: !15908)
!15910 = !DILocalVariable(name: "u", scope: !15908, file: !15568, line: 890, type: !143)
!15911 = !DILocation(line: 890, column: 19, scope: !15908)
!15912 = !DILocation(line: 890, column: 23, scope: !15908)
!15913 = !DILocalVariable(name: "ubuf", scope: !15908, file: !15568, line: 891, type: !1950)
!15914 = !DILocation(line: 891, column: 18, scope: !15908)
!15915 = !DILocalVariable(name: "len", scope: !15908, file: !15568, line: 892, type: !149)
!15916 = !DILocation(line: 892, column: 20, scope: !15908)
!15917 = !DILocation(line: 903, column: 15, scope: !15908)
!15918 = !DILocation(line: 903, column: 18, scope: !15908)
!15919 = !DILocation(line: 904, column: 15, scope: !15908)
!15920 = !DILocation(line: 904, column: 18, scope: !15908)
!15921 = !DILocation(line: 905, column: 17, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15908, file: !15568, line: 905, column: 17)
!15923 = !DILocation(line: 905, column: 26, scope: !15922)
!15924 = !DILocation(line: 905, column: 17, scope: !15908)
!15925 = !DILocation(line: 906, column: 22, scope: !15922)
!15926 = !DILocation(line: 906, column: 17, scope: !15922)
!15927 = !DILocation(line: 906, column: 20, scope: !15922)
!15928 = !DILocation(line: 906, column: 15, scope: !15922)
!15929 = !DILocation(line: 907, column: 20, scope: !15908)
!15930 = !DILocation(line: 907, column: 15, scope: !15908)
!15931 = !DILocation(line: 907, column: 18, scope: !15908)
!15932 = !DILocation(line: 908, column: 14, scope: !15908)
!15933 = !DILocation(line: 908, column: 16, scope: !15908)
!15934 = !DILocation(line: 909, column: 29, scope: !15908)
!15935 = !DILocation(line: 909, column: 48, scope: !15908)
!15936 = !DILocation(line: 909, column: 54, scope: !15908)
!15937 = !DILocation(line: 909, column: 19, scope: !15908)
!15938 = !DILocation(line: 909, column: 17, scope: !15908)
!15939 = !DILocation(line: 910, column: 17, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15908, file: !15568, line: 910, column: 17)
!15941 = !DILocation(line: 910, column: 21, scope: !15940)
!15942 = !DILocation(line: 910, column: 17, scope: !15908)
!15943 = !DILocation(line: 911, column: 15, scope: !15940)
!15944 = !DILocalVariable(name: "_n", scope: !15945, file: !15568, line: 911, type: !149)
!15945 = distinct !DILexicalBlock(scope: !15940, file: !15568, line: 911, column: 15)
!15946 = !DILocation(line: 911, column: 15, scope: !15945)
!15947 = !DILocalVariable(name: "_w", scope: !15945, file: !15568, line: 911, type: !149)
!15948 = !DILocalVariable(name: "_incr", scope: !15945, file: !15568, line: 911, type: !149)
!15949 = !DILocation(line: 911, column: 15, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15945, file: !15568, line: 911, column: 15)
!15951 = !DILocation(line: 911, column: 15, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15945, file: !15568, line: 911, column: 15)
!15953 = !DILocation(line: 911, column: 15, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15955, file: !15568, line: 911, column: 15)
!15955 = distinct !DILexicalBlock(scope: !15952, file: !15568, line: 911, column: 15)
!15956 = !DILocation(line: 911, column: 15, scope: !15955)
!15957 = !DILocalVariable(name: "_delta", scope: !15958, file: !15568, line: 911, type: !149)
!15958 = distinct !DILexicalBlock(scope: !15954, file: !15568, line: 911, column: 15)
!15959 = !DILocation(line: 911, column: 15, scope: !15958)
!15960 = !DILocation(line: 911, column: 15, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15958, file: !15568, line: 911, column: 15)
!15962 = !DILocation(line: 911, column: 15, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15955, file: !15568, line: 911, column: 15)
!15964 = !DILocation(line: 911, column: 15, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15963, file: !15568, line: 911, column: 15)
!15966 = !DILocation(line: 913, column: 11, scope: !15786)
!15967 = !DILocation(line: 917, column: 15, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 917, column: 15)
!15969 = !DILocation(line: 917, column: 24, scope: !15968)
!15970 = !DILocation(line: 917, column: 15, scope: !15786)
!15971 = !DILocation(line: 933, column: 15, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15968, file: !15568, line: 918, column: 13)
!15973 = !DILocalVariable(name: "century", scope: !15974, file: !15568, line: 938, type: !27)
!15974 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 937, column: 11)
!15975 = !DILocation(line: 938, column: 17, scope: !15974)
!15976 = !DILocation(line: 938, column: 27, scope: !15974)
!15977 = !DILocation(line: 938, column: 31, scope: !15974)
!15978 = !{!6851, !2469, i64 20}
!15979 = !DILocation(line: 938, column: 39, scope: !15974)
!15980 = !DILocation(line: 938, column: 45, scope: !15974)
!15981 = !DILocation(line: 939, column: 24, scope: !15974)
!15982 = !DILocation(line: 939, column: 28, scope: !15974)
!15983 = !DILocation(line: 939, column: 36, scope: !15974)
!15984 = !DILocation(line: 939, column: 42, scope: !15974)
!15985 = !DILocation(line: 939, column: 46, scope: !15974)
!15986 = !DILocation(line: 939, column: 53, scope: !15974)
!15987 = !DILocation(line: 939, column: 51, scope: !15974)
!15988 = !DILocation(line: 0, scope: !15974)
!15989 = !DILocation(line: 939, column: 21, scope: !15974)
!15990 = !DILocation(line: 940, column: 13, scope: !15974)
!15991 = !DILocation(line: 940, column: 13, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15974, file: !15568, line: 940, column: 13)
!15993 = !DILocation(line: 941, column: 11, scope: !15974)
!15994 = !DILocation(line: 944, column: 15, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 944, column: 15)
!15996 = !DILocation(line: 944, column: 24, scope: !15995)
!15997 = !DILocation(line: 944, column: 15, scope: !15786)
!15998 = !DILocation(line: 945, column: 13, scope: !15995)
!15999 = !DILocation(line: 954, column: 11, scope: !15786)
!16000 = !DILocation(line: 957, column: 15, scope: !16001)
!16001 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 957, column: 15)
!16002 = !DILocation(line: 957, column: 24, scope: !16001)
!16003 = !DILocation(line: 957, column: 15, scope: !15786)
!16004 = !DILocation(line: 958, column: 13, scope: !16001)
!16005 = !DILocation(line: 959, column: 18, scope: !15786)
!16006 = !DILocation(line: 960, column: 11, scope: !15786)
!16007 = !DILocation(line: 963, column: 15, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 963, column: 15)
!16009 = !DILocation(line: 963, column: 24, scope: !16008)
!16010 = !DILocation(line: 963, column: 15, scope: !15786)
!16011 = !DILocation(line: 964, column: 13, scope: !16008)
!16012 = !DILocation(line: 966, column: 11, scope: !15786)
!16013 = !DILocation(line: 966, column: 11, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 966, column: 11)
!16015 = !{!6851, !2469, i64 12}
!16016 = !DILocation(line: 969, column: 15, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 969, column: 15)
!16018 = !DILocation(line: 969, column: 24, scope: !16017)
!16019 = !DILocation(line: 969, column: 15, scope: !15786)
!16020 = !DILocation(line: 970, column: 13, scope: !16017)
!16021 = !DILocation(line: 972, column: 11, scope: !15786)
!16022 = !DILocation(line: 972, column: 11, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 972, column: 11)
!16024 = !DILabel(scope: !15786, name: "do_tz_offset", file: !15568, line: 977)
!16025 = !DILocation(line: 977, column: 9, scope: !15786)
!16026 = !DILocation(line: 978, column: 32, scope: !15786)
!16027 = !DILocation(line: 979, column: 11, scope: !15786)
!16028 = !DILabel(scope: !15786, name: "do_yearish", file: !15568, line: 981)
!16029 = !DILocation(line: 981, column: 9, scope: !15786)
!16030 = !DILocation(line: 982, column: 15, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 982, column: 15)
!16032 = !DILocation(line: 982, column: 19, scope: !16031)
!16033 = !DILocation(line: 982, column: 15, scope: !15786)
!16034 = !DILocation(line: 983, column: 19, scope: !16031)
!16035 = !DILocation(line: 983, column: 17, scope: !16031)
!16036 = !DILocation(line: 983, column: 13, scope: !16031)
!16037 = !DILocation(line: 985, column: 16, scope: !15786)
!16038 = !DILocation(line: 985, column: 20, scope: !15786)
!16039 = !DILocation(line: 986, column: 16, scope: !15786)
!16040 = !DILocation(line: 986, column: 21, scope: !15786)
!16041 = !DILocation(line: 986, column: 28, scope: !15786)
!16042 = !DILocation(line: 986, column: 48, scope: !15786)
!16043 = !DILocation(line: 986, column: 46, scope: !15786)
!16044 = !DILocation(line: 987, column: 20, scope: !15786)
!16045 = !DILocation(line: 987, column: 23, scope: !15786)
!16046 = !DILocation(line: 987, column: 32, scope: !15786)
!16047 = !DILocation(line: 987, column: 30, scope: !15786)
!16048 = !DILocation(line: 0, scope: !15786)
!16049 = !DILocation(line: 985, column: 13, scope: !15786)
!16050 = !DILocation(line: 988, column: 11, scope: !15786)
!16051 = !DILabel(scope: !15786, name: "do_number_spacepad", file: !15568, line: 990)
!16052 = !DILocation(line: 990, column: 9, scope: !15786)
!16053 = !DILocation(line: 991, column: 15, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 991, column: 15)
!16055 = !DILocation(line: 991, column: 19, scope: !16054)
!16056 = !DILocation(line: 991, column: 15, scope: !15786)
!16057 = !DILocation(line: 992, column: 17, scope: !16054)
!16058 = !DILocation(line: 992, column: 13, scope: !16054)
!16059 = !DILocation(line: 991, column: 22, scope: !16054)
!16060 = !DILabel(scope: !15786, name: "do_number", file: !15568, line: 994)
!16061 = !DILocation(line: 994, column: 9, scope: !15786)
!16062 = !DILocation(line: 996, column: 29, scope: !15786)
!16063 = !DILocation(line: 996, column: 42, scope: !15786)
!16064 = !DILocation(line: 996, column: 27, scope: !15786)
!16065 = !DILocation(line: 997, column: 28, scope: !15786)
!16066 = !DILocation(line: 997, column: 26, scope: !15786)
!16067 = !DILocation(line: 997, column: 11, scope: !15786)
!16068 = !DILabel(scope: !15786, name: "do_signed_number", file: !15568, line: 999)
!16069 = !DILocation(line: 999, column: 9, scope: !15786)
!16070 = !DILocation(line: 1000, column: 32, scope: !15786)
!16071 = !DILocation(line: 1000, column: 11, scope: !15786)
!16072 = !DILabel(scope: !15786, name: "do_maybe_signed_number", file: !15568, line: 1002)
!16073 = !DILocation(line: 1002, column: 9, scope: !15786)
!16074 = !DILocation(line: 1003, column: 25, scope: !15786)
!16075 = !DILocation(line: 1003, column: 11, scope: !15786)
!16076 = !DILabel(scope: !15786, name: "do_number_body", file: !15568, line: 1005)
!16077 = !DILocation(line: 1005, column: 9, scope: !15786)
!16078 = !DILocation(line: 1011, column: 15, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1011, column: 15)
!16080 = !DILocation(line: 1011, column: 24, scope: !16079)
!16081 = !DILocation(line: 1011, column: 35, scope: !16079)
!16082 = !DILocation(line: 1011, column: 39, scope: !16079)
!16083 = !DILocation(line: 1011, column: 15, scope: !15786)
!16084 = !DILocation(line: 1029, column: 15, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16079, file: !15568, line: 1012, column: 13)
!16086 = !DILocation(line: 1033, column: 18, scope: !15786)
!16087 = !DILocation(line: 1033, column: 22, scope: !15786)
!16088 = !DILocation(line: 1033, column: 16, scope: !15786)
!16089 = !DILocation(line: 1035, column: 15, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1035, column: 15)
!16091 = !DILocation(line: 1035, column: 15, scope: !15786)
!16092 = !DILocation(line: 1036, column: 32, scope: !16090)
!16093 = !DILocation(line: 1036, column: 30, scope: !16090)
!16094 = !DILocation(line: 1036, column: 28, scope: !16090)
!16095 = !DILocation(line: 1036, column: 13, scope: !16090)
!16096 = !DILocation(line: 1038, column: 11, scope: !15786)
!16097 = !DILocation(line: 1040, column: 19, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16099, file: !15568, line: 1040, column: 19)
!16099 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1039, column: 13)
!16100 = !DILocation(line: 1040, column: 33, scope: !16098)
!16101 = !DILocation(line: 1040, column: 19, scope: !16099)
!16102 = !DILocation(line: 1041, column: 18, scope: !16098)
!16103 = !DILocation(line: 1041, column: 25, scope: !16098)
!16104 = !DILocation(line: 1041, column: 17, scope: !16098)
!16105 = !DILocation(line: 1042, column: 29, scope: !16099)
!16106 = !DILocation(line: 1043, column: 25, scope: !16099)
!16107 = !DILocation(line: 1043, column: 40, scope: !16099)
!16108 = !DILocation(line: 1043, column: 45, scope: !16099)
!16109 = !DILocation(line: 1043, column: 16, scope: !16099)
!16110 = !DILocation(line: 1043, column: 23, scope: !16099)
!16111 = !DILocation(line: 1044, column: 30, scope: !16099)
!16112 = !DILocation(line: 1045, column: 13, scope: !16099)
!16113 = !DILocation(line: 1046, column: 18, scope: !15786)
!16114 = !DILocation(line: 1046, column: 33, scope: !15786)
!16115 = !DILocation(line: 1046, column: 38, scope: !15786)
!16116 = !DILocation(line: 1046, column: 41, scope: !15786)
!16117 = !DILocation(line: 1046, column: 55, scope: !15786)
!16118 = distinct !{!16118, !16096, !16119}
!16119 = !DILocation(line: 1046, column: 59, scope: !15786)
!16120 = !DILabel(scope: !15786, name: "do_number_sign_and_padding", file: !15568, line: 1048)
!16121 = !DILocation(line: 1048, column: 9, scope: !15786)
!16122 = !DILocation(line: 1049, column: 15, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1049, column: 15)
!16124 = !DILocation(line: 1049, column: 24, scope: !16123)
!16125 = !DILocation(line: 1049, column: 22, scope: !16123)
!16126 = !DILocation(line: 1049, column: 15, scope: !15786)
!16127 = !DILocation(line: 1050, column: 22, scope: !16123)
!16128 = !DILocation(line: 1050, column: 20, scope: !16123)
!16129 = !DILocation(line: 1050, column: 13, scope: !16123)
!16130 = !DILocation(line: 1052, column: 24, scope: !15786)
!16131 = !DILocation(line: 1053, column: 26, scope: !15786)
!16132 = !DILocation(line: 1052, column: 23, scope: !15786)
!16133 = !DILocation(line: 1052, column: 21, scope: !15786)
!16134 = !DILocation(line: 1056, column: 15, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1056, column: 15)
!16136 = !DILocation(line: 1056, column: 19, scope: !16135)
!16137 = !DILocation(line: 1056, column: 15, scope: !15786)
!16138 = !DILocation(line: 1058, column: 19, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16140, file: !15568, line: 1058, column: 19)
!16140 = distinct !DILexicalBlock(scope: !16135, file: !15568, line: 1057, column: 13)
!16141 = !DILocation(line: 1058, column: 19, scope: !16140)
!16142 = !DILocation(line: 1059, column: 17, scope: !16139)
!16143 = !DILocalVariable(name: "_n", scope: !16144, file: !15568, line: 1059, type: !149)
!16144 = distinct !DILexicalBlock(scope: !16139, file: !15568, line: 1059, column: 17)
!16145 = !DILocation(line: 1059, column: 17, scope: !16144)
!16146 = !DILocalVariable(name: "_w", scope: !16144, file: !15568, line: 1059, type: !149)
!16147 = !DILocalVariable(name: "_incr", scope: !16144, file: !15568, line: 1059, type: !149)
!16148 = !DILocation(line: 1059, column: 17, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16144, file: !15568, line: 1059, column: 17)
!16150 = !DILocation(line: 1059, column: 17, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16144, file: !15568, line: 1059, column: 17)
!16152 = !DILocation(line: 1059, column: 17, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16154, file: !15568, line: 1059, column: 17)
!16154 = distinct !DILexicalBlock(scope: !16151, file: !15568, line: 1059, column: 17)
!16155 = !DILocation(line: 1059, column: 17, scope: !16154)
!16156 = !DILocalVariable(name: "_delta", scope: !16157, file: !15568, line: 1059, type: !149)
!16157 = distinct !DILexicalBlock(scope: !16153, file: !15568, line: 1059, column: 17)
!16158 = !DILocation(line: 1059, column: 17, scope: !16157)
!16159 = !DILocation(line: 1059, column: 17, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16157, file: !15568, line: 1059, column: 17)
!16161 = !DILocation(line: 1060, column: 13, scope: !16140)
!16162 = !DILocalVariable(name: "padding", scope: !16163, file: !15568, line: 1063, type: !27)
!16163 = distinct !DILexicalBlock(scope: !16135, file: !15568, line: 1062, column: 13)
!16164 = !DILocation(line: 1063, column: 19, scope: !16163)
!16165 = !DILocation(line: 1063, column: 29, scope: !16163)
!16166 = !DILocation(line: 1063, column: 39, scope: !16163)
!16167 = !DILocation(line: 1063, column: 43, scope: !16163)
!16168 = !DILocation(line: 1064, column: 41, scope: !16163)
!16169 = !DILocation(line: 1064, column: 39, scope: !16163)
!16170 = !DILocation(line: 1063, column: 36, scope: !16163)
!16171 = !DILocation(line: 1064, column: 51, scope: !16163)
!16172 = !DILocation(line: 1064, column: 50, scope: !16163)
!16173 = !DILocation(line: 1064, column: 49, scope: !16163)
!16174 = !DILocation(line: 1064, column: 47, scope: !16163)
!16175 = !DILocation(line: 1066, column: 19, scope: !16176)
!16176 = distinct !DILexicalBlock(scope: !16163, file: !15568, line: 1066, column: 19)
!16177 = !DILocation(line: 1066, column: 27, scope: !16176)
!16178 = !DILocation(line: 1066, column: 19, scope: !16163)
!16179 = !DILocation(line: 1068, column: 23, scope: !16180)
!16180 = distinct !DILexicalBlock(scope: !16181, file: !15568, line: 1068, column: 23)
!16181 = distinct !DILexicalBlock(scope: !16176, file: !15568, line: 1067, column: 17)
!16182 = !DILocation(line: 1068, column: 27, scope: !16180)
!16183 = !DILocation(line: 1068, column: 23, scope: !16181)
!16184 = !DILocation(line: 1070, column: 36, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !15568, line: 1070, column: 27)
!16186 = distinct !DILexicalBlock(scope: !16180, file: !15568, line: 1069, column: 21)
!16187 = !DILocation(line: 1070, column: 27, scope: !16185)
!16188 = !DILocation(line: 1070, column: 47, scope: !16185)
!16189 = !DILocation(line: 1070, column: 57, scope: !16185)
!16190 = !DILocation(line: 1070, column: 55, scope: !16185)
!16191 = !DILocation(line: 1070, column: 44, scope: !16185)
!16192 = !DILocation(line: 1070, column: 27, scope: !16186)
!16193 = !DILocation(line: 1071, column: 25, scope: !16185)
!16194 = !DILocation(line: 1073, column: 27, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16186, file: !15568, line: 1073, column: 27)
!16196 = !DILocation(line: 1073, column: 27, scope: !16186)
!16197 = !DILocation(line: 1074, column: 25, scope: !16195)
!16198 = !DILocation(line: 1075, column: 28, scope: !16186)
!16199 = !DILocation(line: 1075, column: 25, scope: !16186)
!16200 = !DILocation(line: 1076, column: 31, scope: !16186)
!16201 = !DILocation(line: 1076, column: 39, scope: !16186)
!16202 = !DILocation(line: 1076, column: 37, scope: !16186)
!16203 = !DILocation(line: 1076, column: 49, scope: !16186)
!16204 = !DILocation(line: 1076, column: 57, scope: !16186)
!16205 = !DILocation(line: 1076, column: 55, scope: !16186)
!16206 = !DILocation(line: 1076, column: 29, scope: !16186)
!16207 = !DILocation(line: 1077, column: 27, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16186, file: !15568, line: 1077, column: 27)
!16209 = !DILocation(line: 1077, column: 27, scope: !16186)
!16210 = !DILocation(line: 1078, column: 25, scope: !16208)
!16211 = !DILocalVariable(name: "_n", scope: !16212, file: !15568, line: 1078, type: !149)
!16212 = distinct !DILexicalBlock(scope: !16208, file: !15568, line: 1078, column: 25)
!16213 = !DILocation(line: 1078, column: 25, scope: !16212)
!16214 = !DILocalVariable(name: "_w", scope: !16212, file: !15568, line: 1078, type: !149)
!16215 = !DILocalVariable(name: "_incr", scope: !16212, file: !15568, line: 1078, type: !149)
!16216 = !DILocation(line: 1078, column: 25, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16212, file: !15568, line: 1078, column: 25)
!16218 = !DILocation(line: 1078, column: 25, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16212, file: !15568, line: 1078, column: 25)
!16220 = !DILocation(line: 1078, column: 25, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16222, file: !15568, line: 1078, column: 25)
!16222 = distinct !DILexicalBlock(scope: !16219, file: !15568, line: 1078, column: 25)
!16223 = !DILocation(line: 1078, column: 25, scope: !16222)
!16224 = !DILocalVariable(name: "_delta", scope: !16225, file: !15568, line: 1078, type: !149)
!16225 = distinct !DILexicalBlock(scope: !16221, file: !15568, line: 1078, column: 25)
!16226 = !DILocation(line: 1078, column: 25, scope: !16225)
!16227 = !DILocation(line: 1078, column: 25, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16225, file: !15568, line: 1078, column: 25)
!16229 = !DILocation(line: 1079, column: 21, scope: !16186)
!16230 = !DILocation(line: 1082, column: 36, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !15568, line: 1082, column: 27)
!16232 = distinct !DILexicalBlock(scope: !16180, file: !15568, line: 1081, column: 21)
!16233 = !DILocation(line: 1082, column: 27, scope: !16231)
!16234 = !DILocation(line: 1082, column: 46, scope: !16231)
!16235 = !DILocation(line: 1082, column: 56, scope: !16231)
!16236 = !DILocation(line: 1082, column: 54, scope: !16231)
!16237 = !DILocation(line: 1082, column: 43, scope: !16231)
!16238 = !DILocation(line: 1082, column: 27, scope: !16232)
!16239 = !DILocation(line: 1083, column: 25, scope: !16231)
!16240 = !DILocation(line: 1085, column: 27, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16232, file: !15568, line: 1085, column: 27)
!16242 = !DILocation(line: 1085, column: 27, scope: !16232)
!16243 = !DILocation(line: 1086, column: 25, scope: !16241)
!16244 = !DILocalVariable(name: "_n", scope: !16245, file: !15568, line: 1086, type: !149)
!16245 = distinct !DILexicalBlock(scope: !16241, file: !15568, line: 1086, column: 25)
!16246 = !DILocation(line: 1086, column: 25, scope: !16245)
!16247 = !DILocalVariable(name: "_w", scope: !16245, file: !15568, line: 1086, type: !149)
!16248 = !DILocalVariable(name: "_incr", scope: !16245, file: !15568, line: 1086, type: !149)
!16249 = !DILocation(line: 1086, column: 25, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16245, file: !15568, line: 1086, column: 25)
!16251 = !DILocation(line: 1086, column: 25, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16245, file: !15568, line: 1086, column: 25)
!16253 = !DILocation(line: 1086, column: 25, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16255, file: !15568, line: 1086, column: 25)
!16255 = distinct !DILexicalBlock(scope: !16252, file: !15568, line: 1086, column: 25)
!16256 = !DILocation(line: 1086, column: 25, scope: !16255)
!16257 = !DILocalVariable(name: "_delta", scope: !16258, file: !15568, line: 1086, type: !149)
!16258 = distinct !DILexicalBlock(scope: !16254, file: !15568, line: 1086, column: 25)
!16259 = !DILocation(line: 1086, column: 25, scope: !16258)
!16260 = !DILocation(line: 1086, column: 25, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16258, file: !15568, line: 1086, column: 25)
!16262 = !DILocation(line: 1088, column: 27, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16232, file: !15568, line: 1088, column: 27)
!16264 = !DILocation(line: 1088, column: 27, scope: !16232)
!16265 = !DILocation(line: 1089, column: 25, scope: !16263)
!16266 = !DILocation(line: 1090, column: 28, scope: !16232)
!16267 = !DILocation(line: 1090, column: 25, scope: !16232)
!16268 = !DILocation(line: 1091, column: 29, scope: !16232)
!16269 = !DILocation(line: 1093, column: 17, scope: !16181)
!16270 = !DILocation(line: 1096, column: 23, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16272, file: !15568, line: 1096, column: 23)
!16272 = distinct !DILexicalBlock(scope: !16176, file: !15568, line: 1095, column: 17)
!16273 = !DILocation(line: 1096, column: 23, scope: !16272)
!16274 = !DILocation(line: 1097, column: 21, scope: !16271)
!16275 = !DILocalVariable(name: "_n", scope: !16276, file: !15568, line: 1097, type: !149)
!16276 = distinct !DILexicalBlock(scope: !16271, file: !15568, line: 1097, column: 21)
!16277 = !DILocation(line: 1097, column: 21, scope: !16276)
!16278 = !DILocalVariable(name: "_w", scope: !16276, file: !15568, line: 1097, type: !149)
!16279 = !DILocalVariable(name: "_incr", scope: !16276, file: !15568, line: 1097, type: !149)
!16280 = !DILocation(line: 1097, column: 21, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16276, file: !15568, line: 1097, column: 21)
!16282 = !DILocation(line: 1097, column: 21, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16276, file: !15568, line: 1097, column: 21)
!16284 = !DILocation(line: 1097, column: 21, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16286, file: !15568, line: 1097, column: 21)
!16286 = distinct !DILexicalBlock(scope: !16283, file: !15568, line: 1097, column: 21)
!16287 = !DILocation(line: 1097, column: 21, scope: !16286)
!16288 = !DILocalVariable(name: "_delta", scope: !16289, file: !15568, line: 1097, type: !149)
!16289 = distinct !DILexicalBlock(scope: !16285, file: !15568, line: 1097, column: 21)
!16290 = !DILocation(line: 1097, column: 21, scope: !16289)
!16291 = !DILocation(line: 1097, column: 21, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16289, file: !15568, line: 1097, column: 21)
!16293 = !DILocation(line: 1101, column: 11, scope: !15786)
!16294 = !DILocalVariable(name: "_n", scope: !16295, file: !15568, line: 1101, type: !149)
!16295 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1101, column: 11)
!16296 = !DILocation(line: 1101, column: 11, scope: !16295)
!16297 = !DILocalVariable(name: "_w", scope: !16295, file: !15568, line: 1101, type: !149)
!16298 = !DILocalVariable(name: "_incr", scope: !16295, file: !15568, line: 1101, type: !149)
!16299 = !DILocation(line: 1101, column: 11, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16295, file: !15568, line: 1101, column: 11)
!16301 = !DILocation(line: 1101, column: 11, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16295, file: !15568, line: 1101, column: 11)
!16303 = !DILocation(line: 1101, column: 11, scope: !16304)
!16304 = distinct !DILexicalBlock(scope: !16305, file: !15568, line: 1101, column: 11)
!16305 = distinct !DILexicalBlock(scope: !16302, file: !15568, line: 1101, column: 11)
!16306 = !DILocation(line: 1101, column: 11, scope: !16305)
!16307 = !DILocalVariable(name: "_delta", scope: !16308, file: !15568, line: 1101, type: !149)
!16308 = distinct !DILexicalBlock(scope: !16304, file: !15568, line: 1101, column: 11)
!16309 = !DILocation(line: 1101, column: 11, scope: !16308)
!16310 = !DILocation(line: 1101, column: 11, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16308, file: !15568, line: 1101, column: 11)
!16312 = !DILocation(line: 1101, column: 11, scope: !16313)
!16313 = distinct !DILexicalBlock(scope: !16305, file: !15568, line: 1101, column: 11)
!16314 = !DILocation(line: 1101, column: 11, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16313, file: !15568, line: 1101, column: 11)
!16316 = !DILocation(line: 1102, column: 11, scope: !15786)
!16317 = !DILocation(line: 1105, column: 15, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1105, column: 15)
!16319 = !DILocation(line: 1105, column: 24, scope: !16318)
!16320 = !DILocation(line: 1105, column: 15, scope: !15786)
!16321 = !DILocation(line: 1106, column: 13, scope: !16318)
!16322 = !DILocation(line: 1107, column: 15, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1107, column: 15)
!16324 = !DILocation(line: 1107, column: 19, scope: !16323)
!16325 = !DILocation(line: 1107, column: 24, scope: !16323)
!16326 = !DILocation(line: 1107, column: 27, scope: !16323)
!16327 = !DILocation(line: 1107, column: 33, scope: !16323)
!16328 = !DILocation(line: 1107, column: 15, scope: !15786)
!16329 = !DILocation(line: 1109, column: 19, scope: !16330)
!16330 = distinct !DILexicalBlock(scope: !16323, file: !15568, line: 1108, column: 13)
!16331 = !DILocation(line: 1110, column: 24, scope: !16330)
!16332 = !DILocation(line: 1111, column: 13, scope: !16330)
!16333 = !DILocation(line: 1114, column: 26, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16323, file: !15568, line: 1113, column: 13)
!16335 = !DILocation(line: 1114, column: 32, scope: !16334)
!16336 = !DILocation(line: 1114, column: 24, scope: !16334)
!16337 = !DILocation(line: 1115, column: 19, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16334, file: !15568, line: 1115, column: 19)
!16339 = !DILocation(line: 1115, column: 28, scope: !16338)
!16340 = !DILocation(line: 1115, column: 19, scope: !16334)
!16341 = !DILocation(line: 1116, column: 26, scope: !16338)
!16342 = !DILocation(line: 1116, column: 17, scope: !16338)
!16343 = !DILocation(line: 1118, column: 18, scope: !15786)
!16344 = !DILocation(line: 1119, column: 11, scope: !15786)
!16345 = !DILocation(line: 1122, column: 15, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1122, column: 15)
!16347 = !DILocation(line: 1122, column: 24, scope: !16346)
!16348 = !DILocation(line: 1122, column: 15, scope: !15786)
!16349 = !DILocation(line: 1123, column: 13, scope: !16346)
!16350 = !DILocation(line: 1125, column: 11, scope: !15786)
!16351 = !DILocation(line: 1125, column: 11, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1125, column: 11)
!16353 = !DILocation(line: 1128, column: 15, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1128, column: 15)
!16355 = !DILocation(line: 1128, column: 24, scope: !16354)
!16356 = !DILocation(line: 1128, column: 15, scope: !15786)
!16357 = !DILocation(line: 1129, column: 13, scope: !16354)
!16358 = !DILocation(line: 1131, column: 11, scope: !15786)
!16359 = !DILocation(line: 1131, column: 11, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1131, column: 11)
!16361 = !DILocation(line: 1134, column: 15, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1134, column: 15)
!16363 = !DILocation(line: 1134, column: 24, scope: !16362)
!16364 = !DILocation(line: 1134, column: 15, scope: !15786)
!16365 = !DILocation(line: 1135, column: 13, scope: !16362)
!16366 = !DILocation(line: 1137, column: 11, scope: !15786)
!16367 = !DILocation(line: 1137, column: 11, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1137, column: 11)
!16369 = !DILocation(line: 1140, column: 15, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1140, column: 15)
!16371 = !DILocation(line: 1140, column: 24, scope: !16370)
!16372 = !DILocation(line: 1140, column: 15, scope: !15786)
!16373 = !DILocation(line: 1141, column: 13, scope: !16370)
!16374 = !DILocation(line: 1143, column: 11, scope: !15786)
!16375 = !DILocation(line: 1143, column: 11, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1143, column: 11)
!16377 = !DILocation(line: 1146, column: 15, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1146, column: 15)
!16379 = !DILocation(line: 1146, column: 24, scope: !16378)
!16380 = !DILocation(line: 1146, column: 15, scope: !15786)
!16381 = !DILocation(line: 1147, column: 13, scope: !16378)
!16382 = !DILocation(line: 1149, column: 11, scope: !15786)
!16383 = !DILocation(line: 1149, column: 11, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1149, column: 11)
!16385 = !{!6851, !2469, i64 28}
!16386 = !DILocation(line: 1152, column: 15, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1152, column: 15)
!16388 = !DILocation(line: 1152, column: 24, scope: !16387)
!16389 = !DILocation(line: 1152, column: 15, scope: !15786)
!16390 = !DILocation(line: 1153, column: 13, scope: !16387)
!16391 = !DILocation(line: 1155, column: 11, scope: !15786)
!16392 = !DILocation(line: 1155, column: 11, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1155, column: 11)
!16394 = !{!6851, !2469, i64 4}
!16395 = !DILocation(line: 1158, column: 15, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1158, column: 15)
!16397 = !DILocation(line: 1158, column: 24, scope: !16396)
!16398 = !DILocation(line: 1158, column: 15, scope: !15786)
!16399 = !DILocation(line: 1159, column: 13, scope: !16396)
!16400 = !DILocation(line: 1161, column: 11, scope: !15786)
!16401 = !DILocation(line: 1161, column: 11, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1161, column: 11)
!16403 = !DILocation(line: 1165, column: 15, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1165, column: 15)
!16405 = !DILocation(line: 1165, column: 24, scope: !16404)
!16406 = !DILocation(line: 1165, column: 15, scope: !15786)
!16407 = !DILocation(line: 1166, column: 13, scope: !16404)
!16408 = !DILocation(line: 1168, column: 26, scope: !15786)
!16409 = !DILocation(line: 1168, column: 24, scope: !15786)
!16410 = !DILocation(line: 1169, column: 15, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1169, column: 15)
!16412 = !DILocation(line: 1169, column: 21, scope: !16411)
!16413 = !DILocation(line: 1169, column: 15, scope: !15786)
!16414 = !DILocation(line: 1170, column: 19, scope: !16411)
!16415 = !DILocation(line: 1170, column: 13, scope: !16411)
!16416 = !DILocalVariable(name: "j", scope: !16417, file: !15568, line: 1174, type: !27)
!16417 = distinct !DILexicalBlock(scope: !16411, file: !15568, line: 1172, column: 13)
!16418 = !DILocation(line: 1174, column: 19, scope: !16417)
!16419 = !DILocation(line: 1175, column: 24, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16417, file: !15568, line: 1175, column: 15)
!16421 = !DILocation(line: 1175, column: 22, scope: !16420)
!16422 = !DILocation(line: 1175, column: 20, scope: !16420)
!16423 = !DILocation(line: 1175, column: 31, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16420, file: !15568, line: 1175, column: 15)
!16425 = !DILocation(line: 1175, column: 33, scope: !16424)
!16426 = !DILocation(line: 1175, column: 15, scope: !16420)
!16427 = !DILocation(line: 1176, column: 30, scope: !16424)
!16428 = !DILocation(line: 1176, column: 17, scope: !16424)
!16429 = !DILocation(line: 1175, column: 39, scope: !16424)
!16430 = !DILocation(line: 1175, column: 15, scope: !16424)
!16431 = distinct !{!16431, !16426, !16432}
!16432 = !DILocation(line: 1176, column: 33, scope: !16420)
!16433 = !DILocation(line: 1179, column: 11, scope: !15786)
!16434 = !DILocation(line: 1179, column: 11, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1179, column: 11)
!16436 = !DILocation(line: 1183, column: 11, scope: !15786)
!16437 = !DILocalVariable(name: "_n", scope: !16438, file: !15568, line: 1183, type: !149)
!16438 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1183, column: 11)
!16439 = !DILocation(line: 1183, column: 11, scope: !16438)
!16440 = !DILocalVariable(name: "_w", scope: !16438, file: !15568, line: 1183, type: !149)
!16441 = !DILocalVariable(name: "_incr", scope: !16438, file: !15568, line: 1183, type: !149)
!16442 = !DILocation(line: 1183, column: 11, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16438, file: !15568, line: 1183, column: 11)
!16444 = !DILocation(line: 1183, column: 11, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16438, file: !15568, line: 1183, column: 11)
!16446 = !DILocation(line: 1183, column: 11, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16448, file: !15568, line: 1183, column: 11)
!16448 = distinct !DILexicalBlock(scope: !16445, file: !15568, line: 1183, column: 11)
!16449 = !DILocation(line: 1183, column: 11, scope: !16448)
!16450 = !DILocalVariable(name: "_delta", scope: !16451, file: !15568, line: 1183, type: !149)
!16451 = distinct !DILexicalBlock(scope: !16447, file: !15568, line: 1183, column: 11)
!16452 = !DILocation(line: 1183, column: 11, scope: !16451)
!16453 = !DILocation(line: 1183, column: 11, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16451, file: !15568, line: 1183, column: 11)
!16455 = !DILocation(line: 1184, column: 11, scope: !15786)
!16456 = !DILocation(line: 1187, column: 22, scope: !15786)
!16457 = !DILocation(line: 1189, column: 23, scope: !15786)
!16458 = !DILocation(line: 1191, column: 11, scope: !15786)
!16459 = !DILocation(line: 1193, column: 15, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1193, column: 15)
!16461 = !DILocation(line: 1193, column: 15, scope: !15786)
!16462 = !DILocation(line: 1195, column: 26, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16460, file: !15568, line: 1194, column: 13)
!16464 = !DILocation(line: 1196, column: 26, scope: !16463)
!16465 = !DILocation(line: 1197, column: 13, scope: !16463)
!16466 = !DILocation(line: 1202, column: 11, scope: !15786)
!16467 = !DILocation(line: 1206, column: 11, scope: !15786)
!16468 = !DILocation(line: 1206, column: 11, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1206, column: 11)
!16470 = !DILocation(line: 1207, column: 11, scope: !15786)
!16471 = !DILocation(line: 1210, column: 18, scope: !15786)
!16472 = !DILocation(line: 1211, column: 11, scope: !15786)
!16473 = !DILocation(line: 1221, column: 11, scope: !15786)
!16474 = !DILocation(line: 1225, column: 15, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1225, column: 15)
!16476 = !DILocation(line: 1225, column: 24, scope: !16475)
!16477 = !DILocation(line: 1225, column: 15, scope: !15786)
!16478 = !DILocation(line: 1226, column: 13, scope: !16475)
!16479 = !DILocation(line: 1228, column: 11, scope: !15786)
!16480 = !DILocation(line: 1228, column: 11, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1228, column: 11)
!16482 = !{!6851, !2469, i64 0}
!16483 = !DILocalVariable(name: "ltm", scope: !16484, file: !15568, line: 1232, type: !1923)
!16484 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1231, column: 11)
!16485 = !DILocation(line: 1232, column: 23, scope: !16484)
!16486 = !DILocalVariable(name: "t", scope: !16484, file: !15568, line: 1233, type: !162)
!16487 = !DILocation(line: 1233, column: 20, scope: !16484)
!16488 = !DILocation(line: 1235, column: 20, scope: !16484)
!16489 = !DILocation(line: 1235, column: 19, scope: !16484)
!16490 = !{i64 0, i64 4, !2468, i64 4, i64 4, !2468, i64 8, i64 4, !2468, i64 12, i64 4, !2468, i64 16, i64 4, !2468, i64 20, i64 4, !2468, i64 24, i64 4, !2468, i64 28, i64 4, !2468, i64 32, i64 4, !2468, i64 40, i64 8, !2611, i64 48, i64 8, !2474}
!16491 = !DILocation(line: 1236, column: 27, scope: !16484)
!16492 = !DILocation(line: 1236, column: 17, scope: !16484)
!16493 = !DILocation(line: 1236, column: 15, scope: !16484)
!16494 = !DILocation(line: 1241, column: 20, scope: !16484)
!16495 = !DILocation(line: 1241, column: 24, scope: !16484)
!16496 = !DILocation(line: 1241, column: 18, scope: !16484)
!16497 = !DILocation(line: 1242, column: 31, scope: !16484)
!16498 = !DILocation(line: 1242, column: 33, scope: !16484)
!16499 = !DILocation(line: 1242, column: 29, scope: !16484)
!16500 = !DILocation(line: 1244, column: 13, scope: !16484)
!16501 = !DILocalVariable(name: "d", scope: !16502, file: !15568, line: 1246, type: !27)
!16502 = distinct !DILexicalBlock(scope: !16484, file: !15568, line: 1245, column: 15)
!16503 = !DILocation(line: 1246, column: 21, scope: !16502)
!16504 = !DILocation(line: 1246, column: 25, scope: !16502)
!16505 = !DILocation(line: 1246, column: 27, scope: !16502)
!16506 = !DILocation(line: 1247, column: 19, scope: !16502)
!16507 = !DILocation(line: 1248, column: 28, scope: !16502)
!16508 = !DILocation(line: 1248, column: 47, scope: !16502)
!16509 = !DILocation(line: 1248, column: 46, scope: !16502)
!16510 = !DILocation(line: 1248, column: 51, scope: !16502)
!16511 = !DILocation(line: 1248, column: 54, scope: !16502)
!16512 = !DILocation(line: 1248, column: 27, scope: !16502)
!16513 = !DILocation(line: 1248, column: 18, scope: !16502)
!16514 = !DILocation(line: 1248, column: 25, scope: !16502)
!16515 = !DILocation(line: 1249, column: 15, scope: !16502)
!16516 = !DILocation(line: 1250, column: 20, scope: !16484)
!16517 = !DILocation(line: 1250, column: 22, scope: !16484)
!16518 = distinct !{!16518, !16500, !16519}
!16519 = !DILocation(line: 1250, column: 26, scope: !16484)
!16520 = !DILocation(line: 1252, column: 20, scope: !16484)
!16521 = !DILocation(line: 1253, column: 34, scope: !16484)
!16522 = !DILocation(line: 1254, column: 13, scope: !16484)
!16523 = !DILocation(line: 1258, column: 15, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1258, column: 15)
!16525 = !DILocation(line: 1258, column: 24, scope: !16524)
!16526 = !DILocation(line: 1258, column: 15, scope: !15786)
!16527 = !DILocation(line: 1259, column: 13, scope: !16524)
!16528 = !DILocation(line: 1268, column: 11, scope: !15786)
!16529 = !DILocation(line: 1271, column: 18, scope: !15786)
!16530 = !DILocation(line: 1272, column: 11, scope: !15786)
!16531 = !DILocation(line: 1275, column: 11, scope: !15786)
!16532 = !DILocalVariable(name: "_n", scope: !16533, file: !15568, line: 1275, type: !149)
!16533 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1275, column: 11)
!16534 = !DILocation(line: 1275, column: 11, scope: !16533)
!16535 = !DILocalVariable(name: "_w", scope: !16533, file: !15568, line: 1275, type: !149)
!16536 = !DILocalVariable(name: "_incr", scope: !16533, file: !15568, line: 1275, type: !149)
!16537 = !DILocation(line: 1275, column: 11, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16533, file: !15568, line: 1275, column: 11)
!16539 = !DILocation(line: 1275, column: 11, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16533, file: !15568, line: 1275, column: 11)
!16541 = !DILocation(line: 1275, column: 11, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !16543, file: !15568, line: 1275, column: 11)
!16543 = distinct !DILexicalBlock(scope: !16540, file: !15568, line: 1275, column: 11)
!16544 = !DILocation(line: 1275, column: 11, scope: !16543)
!16545 = !DILocalVariable(name: "_delta", scope: !16546, file: !15568, line: 1275, type: !149)
!16546 = distinct !DILexicalBlock(scope: !16542, file: !15568, line: 1275, column: 11)
!16547 = !DILocation(line: 1275, column: 11, scope: !16546)
!16548 = !DILocation(line: 1275, column: 11, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16546, file: !15568, line: 1275, column: 11)
!16550 = !DILocation(line: 1276, column: 11, scope: !15786)
!16551 = !DILocation(line: 1279, column: 11, scope: !15786)
!16552 = !DILocation(line: 1279, column: 11, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1279, column: 11)
!16554 = !{!6851, !2469, i64 24}
!16555 = !DILocation(line: 1282, column: 15, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1282, column: 15)
!16557 = !DILocation(line: 1282, column: 24, scope: !16556)
!16558 = !DILocation(line: 1282, column: 15, scope: !15786)
!16559 = !DILocation(line: 1283, column: 13, scope: !16556)
!16560 = !DILocation(line: 1285, column: 11, scope: !15786)
!16561 = !DILocation(line: 1285, column: 11, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1285, column: 11)
!16563 = !DILocation(line: 1290, column: 15, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1290, column: 15)
!16565 = !DILocation(line: 1290, column: 24, scope: !16564)
!16566 = !DILocation(line: 1290, column: 15, scope: !15786)
!16567 = !DILocation(line: 1291, column: 13, scope: !16564)
!16568 = !DILocalVariable(name: "year", scope: !16569, file: !15568, line: 1297, type: !27)
!16569 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1292, column: 11)
!16570 = !DILocation(line: 1297, column: 17, scope: !16569)
!16571 = !DILocation(line: 1297, column: 25, scope: !16569)
!16572 = !DILocation(line: 1297, column: 29, scope: !16569)
!16573 = !DILocation(line: 1298, column: 28, scope: !16569)
!16574 = !DILocation(line: 1298, column: 32, scope: !16569)
!16575 = !DILocation(line: 1298, column: 40, scope: !16569)
!16576 = !DILocation(line: 1298, column: 25, scope: !16569)
!16577 = !DILocalVariable(name: "year_adjust", scope: !16569, file: !15568, line: 1301, type: !27)
!16578 = !DILocation(line: 1301, column: 17, scope: !16569)
!16579 = !DILocalVariable(name: "days", scope: !16569, file: !15568, line: 1302, type: !27)
!16580 = !DILocation(line: 1302, column: 17, scope: !16569)
!16581 = !DILocation(line: 1302, column: 39, scope: !16569)
!16582 = !DILocation(line: 1302, column: 43, scope: !16569)
!16583 = !DILocation(line: 1302, column: 52, scope: !16569)
!16584 = !DILocation(line: 1302, column: 56, scope: !16569)
!16585 = !DILocation(line: 1302, column: 24, scope: !16569)
!16586 = !DILocation(line: 1304, column: 17, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16569, file: !15568, line: 1304, column: 17)
!16588 = !DILocation(line: 1304, column: 22, scope: !16587)
!16589 = !DILocation(line: 1304, column: 17, scope: !16569)
!16590 = !DILocation(line: 1307, column: 29, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16587, file: !15568, line: 1305, column: 15)
!16592 = !DILocation(line: 1308, column: 39, scope: !16591)
!16593 = !DILocation(line: 1308, column: 43, scope: !16591)
!16594 = !DILocation(line: 1308, column: 60, scope: !16591)
!16595 = !DILocation(line: 0, scope: !16591)
!16596 = !DILocation(line: 1308, column: 58, scope: !16591)
!16597 = !DILocation(line: 1308, column: 51, scope: !16591)
!16598 = !DILocation(line: 1309, column: 39, scope: !16591)
!16599 = !DILocation(line: 1309, column: 43, scope: !16591)
!16600 = !DILocation(line: 1308, column: 24, scope: !16591)
!16601 = !DILocation(line: 1308, column: 22, scope: !16591)
!16602 = !DILocation(line: 1310, column: 15, scope: !16591)
!16603 = !DILocalVariable(name: "d", scope: !16604, file: !15568, line: 1313, type: !27)
!16604 = distinct !DILexicalBlock(scope: !16587, file: !15568, line: 1312, column: 15)
!16605 = !DILocation(line: 1313, column: 21, scope: !16604)
!16606 = !DILocation(line: 1313, column: 40, scope: !16604)
!16607 = !DILocation(line: 1313, column: 44, scope: !16604)
!16608 = !DILocation(line: 1313, column: 61, scope: !16604)
!16609 = !DILocation(line: 0, scope: !16604)
!16610 = !DILocation(line: 1313, column: 59, scope: !16604)
!16611 = !DILocation(line: 1313, column: 52, scope: !16604)
!16612 = !DILocation(line: 1314, column: 40, scope: !16604)
!16613 = !DILocation(line: 1314, column: 44, scope: !16604)
!16614 = !DILocation(line: 1313, column: 25, scope: !16604)
!16615 = !DILocation(line: 1315, column: 26, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16604, file: !15568, line: 1315, column: 21)
!16617 = !DILocation(line: 1315, column: 23, scope: !16616)
!16618 = !DILocation(line: 1315, column: 21, scope: !16604)
!16619 = !DILocation(line: 1318, column: 33, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16616, file: !15568, line: 1316, column: 19)
!16621 = !DILocation(line: 1319, column: 28, scope: !16620)
!16622 = !DILocation(line: 1319, column: 26, scope: !16620)
!16623 = !DILocation(line: 1320, column: 19, scope: !16620)
!16624 = !DILocation(line: 1323, column: 22, scope: !16569)
!16625 = !DILocation(line: 1323, column: 21, scope: !16569)
!16626 = !DILocation(line: 1323, column: 13, scope: !16569)
!16627 = !DILocalVariable(name: "yy", scope: !16628, file: !15568, line: 1327, type: !27)
!16628 = distinct !DILexicalBlock(scope: !16629, file: !15568, line: 1326, column: 17)
!16629 = distinct !DILexicalBlock(scope: !16569, file: !15568, line: 1324, column: 15)
!16630 = !DILocation(line: 1327, column: 23, scope: !16628)
!16631 = !DILocation(line: 1327, column: 29, scope: !16628)
!16632 = !DILocation(line: 1327, column: 33, scope: !16628)
!16633 = !DILocation(line: 1327, column: 41, scope: !16628)
!16634 = !DILocation(line: 1327, column: 49, scope: !16628)
!16635 = !DILocation(line: 1327, column: 47, scope: !16628)
!16636 = !DILocation(line: 1327, column: 62, scope: !16628)
!16637 = !DILocation(line: 1328, column: 19, scope: !16628)
!16638 = !DILocation(line: 1328, column: 19, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16628, file: !15568, line: 1328, column: 19)
!16640 = !DILocation(line: 1334, column: 17, scope: !16628)
!16641 = !DILocation(line: 1337, column: 17, scope: !16629)
!16642 = !DILocation(line: 1337, column: 17, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16629, file: !15568, line: 1337, column: 17)
!16644 = !DILocation(line: 1342, column: 17, scope: !16629)
!16645 = !DILocation(line: 1342, column: 17, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16629, file: !15568, line: 1342, column: 17)
!16647 = !DILocation(line: 1343, column: 15, scope: !16629)
!16648 = !DILocation(line: 1344, column: 11, scope: !16569)
!16649 = !DILocation(line: 1347, column: 15, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1347, column: 15)
!16651 = !DILocation(line: 1347, column: 24, scope: !16650)
!16652 = !DILocation(line: 1347, column: 15, scope: !15786)
!16653 = !DILocation(line: 1348, column: 13, scope: !16650)
!16654 = !DILocation(line: 1350, column: 11, scope: !15786)
!16655 = !DILocation(line: 1350, column: 11, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1350, column: 11)
!16657 = !DILocation(line: 1353, column: 15, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1353, column: 15)
!16659 = !DILocation(line: 1353, column: 24, scope: !16658)
!16660 = !DILocation(line: 1353, column: 15, scope: !15786)
!16661 = !DILocation(line: 1354, column: 13, scope: !16658)
!16662 = !DILocation(line: 1356, column: 11, scope: !15786)
!16663 = !DILocation(line: 1356, column: 11, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1356, column: 11)
!16665 = !DILocation(line: 1359, column: 15, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1359, column: 15)
!16667 = !DILocation(line: 1359, column: 24, scope: !16666)
!16668 = !DILocation(line: 1359, column: 15, scope: !15786)
!16669 = !DILocation(line: 1375, column: 15, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16666, file: !15568, line: 1360, column: 13)
!16671 = !DILocation(line: 1378, column: 15, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1378, column: 15)
!16673 = !DILocation(line: 1378, column: 24, scope: !16672)
!16674 = !DILocation(line: 1378, column: 15, scope: !15786)
!16675 = !DILocation(line: 1379, column: 13, scope: !16672)
!16676 = !DILocation(line: 1381, column: 11, scope: !15786)
!16677 = !DILocation(line: 1381, column: 11, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1381, column: 11)
!16679 = !DILocation(line: 1385, column: 15, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1385, column: 15)
!16681 = !DILocation(line: 1385, column: 24, scope: !16680)
!16682 = !DILocation(line: 1385, column: 15, scope: !15786)
!16683 = !DILocation(line: 1398, column: 15, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16680, file: !15568, line: 1386, column: 13)
!16685 = !DILocalVariable(name: "yy", scope: !16686, file: !15568, line: 1403, type: !27)
!16686 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1402, column: 11)
!16687 = !DILocation(line: 1403, column: 17, scope: !16686)
!16688 = !DILocation(line: 1403, column: 22, scope: !16686)
!16689 = !DILocation(line: 1403, column: 26, scope: !16686)
!16690 = !DILocation(line: 1403, column: 34, scope: !16686)
!16691 = !DILocation(line: 1404, column: 17, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16686, file: !15568, line: 1404, column: 17)
!16693 = !DILocation(line: 1404, column: 20, scope: !16692)
!16694 = !DILocation(line: 1404, column: 17, scope: !16686)
!16695 = !DILocation(line: 1405, column: 20, scope: !16692)
!16696 = !DILocation(line: 1405, column: 24, scope: !16692)
!16697 = !DILocation(line: 1405, column: 32, scope: !16692)
!16698 = !DILocation(line: 1405, column: 52, scope: !16692)
!16699 = !DILocation(line: 1405, column: 51, scope: !16692)
!16700 = !DILocation(line: 1405, column: 57, scope: !16692)
!16701 = !DILocation(line: 1405, column: 60, scope: !16692)
!16702 = !DILocation(line: 1405, column: 18, scope: !16692)
!16703 = !DILocation(line: 1405, column: 15, scope: !16692)
!16704 = !DILocation(line: 1406, column: 13, scope: !16686)
!16705 = !DILocation(line: 1406, column: 13, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16686, file: !15568, line: 1406, column: 13)
!16707 = !DILocation(line: 1407, column: 11, scope: !16686)
!16708 = !DILocation(line: 1410, column: 15, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1410, column: 15)
!16710 = !DILocation(line: 1410, column: 15, scope: !15786)
!16711 = !DILocation(line: 1412, column: 26, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16709, file: !15568, line: 1411, column: 13)
!16713 = !DILocation(line: 1413, column: 26, scope: !16712)
!16714 = !DILocation(line: 1414, column: 13, scope: !16712)
!16715 = !DILocation(line: 1426, column: 11, scope: !15786)
!16716 = !DILocalVariable(name: "_n", scope: !16717, file: !15568, line: 1426, type: !149)
!16717 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1426, column: 11)
!16718 = !DILocation(line: 1426, column: 11, scope: !16717)
!16719 = !DILocalVariable(name: "_w", scope: !16717, file: !15568, line: 1426, type: !149)
!16720 = !DILocalVariable(name: "_incr", scope: !16717, file: !15568, line: 1426, type: !149)
!16721 = !DILocation(line: 1426, column: 11, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16717, file: !15568, line: 1426, column: 11)
!16723 = !DILocation(line: 1426, column: 11, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16717, file: !15568, line: 1426, column: 11)
!16725 = !DILocation(line: 1426, column: 11, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16727, file: !15568, line: 1426, column: 11)
!16727 = distinct !DILexicalBlock(scope: !16724, file: !15568, line: 1426, column: 11)
!16728 = !DILocation(line: 1426, column: 11, scope: !16727)
!16729 = !DILocalVariable(name: "_delta", scope: !16730, file: !15568, line: 1426, type: !149)
!16730 = distinct !DILexicalBlock(scope: !16726, file: !15568, line: 1426, column: 11)
!16731 = !DILocation(line: 1426, column: 11, scope: !16730)
!16732 = !DILocation(line: 1426, column: 11, scope: !16733)
!16733 = distinct !DILexicalBlock(scope: !16730, file: !15568, line: 1426, column: 11)
!16734 = !DILocation(line: 1426, column: 11, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16727, file: !15568, line: 1426, column: 11)
!16736 = !DILocation(line: 1426, column: 11, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16735, file: !15568, line: 1426, column: 11)
!16738 = !DILocation(line: 1428, column: 11, scope: !15786)
!16739 = !DILocation(line: 1433, column: 23, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1433, column: 11)
!16741 = !DILocation(line: 1433, column: 16, scope: !16740)
!16742 = !DILocation(line: 1433, column: 28, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16740, file: !15568, line: 1433, column: 11)
!16744 = !DILocation(line: 1433, column: 30, scope: !16743)
!16745 = !DILocation(line: 1433, column: 38, scope: !16743)
!16746 = !DILocation(line: 1433, column: 11, scope: !16740)
!16747 = !DILocation(line: 1434, column: 13, scope: !16743)
!16748 = !DILocation(line: 1433, column: 56, scope: !16743)
!16749 = !DILocation(line: 1433, column: 11, scope: !16743)
!16750 = distinct !{!16750, !16746, !16751}
!16751 = !DILocation(line: 1434, column: 13, scope: !16740)
!16752 = !DILocation(line: 1435, column: 15, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1435, column: 15)
!16754 = !DILocation(line: 1435, column: 17, scope: !16753)
!16755 = !DILocation(line: 1435, column: 25, scope: !16753)
!16756 = !DILocation(line: 1435, column: 15, scope: !15786)
!16757 = !DILocation(line: 1436, column: 13, scope: !16753)
!16758 = !DILocation(line: 1437, column: 16, scope: !15786)
!16759 = !DILocation(line: 1437, column: 13, scope: !15786)
!16760 = !DILocation(line: 1438, column: 11, scope: !15786)
!16761 = !DILocation(line: 1441, column: 18, scope: !15786)
!16762 = !DILocation(line: 1441, column: 11, scope: !15786)
!16763 = !DILabel(scope: !15786, name: "do_z_conversion", file: !15568, line: 1443)
!16764 = !DILocation(line: 1443, column: 9, scope: !15786)
!16765 = !DILocation(line: 1444, column: 15, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1444, column: 15)
!16767 = !DILocation(line: 1444, column: 19, scope: !16766)
!16768 = !{!6851, !2469, i64 32}
!16769 = !DILocation(line: 1444, column: 28, scope: !16766)
!16770 = !DILocation(line: 1444, column: 15, scope: !15786)
!16771 = !DILocation(line: 1445, column: 13, scope: !16766)
!16772 = !DILocalVariable(name: "diff", scope: !16773, file: !15568, line: 1448, type: !27)
!16773 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1447, column: 11)
!16774 = !DILocation(line: 1448, column: 17, scope: !16773)
!16775 = !DILocalVariable(name: "hour_diff", scope: !16773, file: !15568, line: 1449, type: !27)
!16776 = !DILocation(line: 1449, column: 17, scope: !16773)
!16777 = !DILocalVariable(name: "min_diff", scope: !16773, file: !15568, line: 1450, type: !27)
!16778 = !DILocation(line: 1450, column: 17, scope: !16773)
!16779 = !DILocalVariable(name: "sec_diff", scope: !16773, file: !15568, line: 1451, type: !27)
!16780 = !DILocation(line: 1451, column: 17, scope: !16773)
!16781 = !DILocation(line: 1453, column: 20, scope: !16773)
!16782 = !DILocation(line: 1453, column: 24, scope: !16773)
!16783 = !{!6851, !2499, i64 40}
!16784 = !DILocation(line: 1453, column: 18, scope: !16773)
!16785 = !DILocation(line: 1482, column: 31, scope: !16773)
!16786 = !DILocation(line: 1482, column: 36, scope: !16773)
!16787 = !DILocation(line: 1482, column: 40, scope: !16773)
!16788 = !DILocation(line: 1482, column: 44, scope: !16773)
!16789 = !DILocation(line: 1482, column: 49, scope: !16773)
!16790 = !DILocation(line: 1482, column: 54, scope: !16773)
!16791 = !DILocation(line: 1482, column: 58, scope: !16773)
!16792 = !DILocation(line: 1482, column: 57, scope: !16773)
!16793 = !DILocation(line: 1482, column: 63, scope: !16773)
!16794 = !DILocation(line: 0, scope: !16773)
!16795 = !DILocation(line: 1482, column: 29, scope: !16773)
!16796 = !DILocation(line: 1483, column: 25, scope: !16773)
!16797 = !DILocation(line: 1483, column: 30, scope: !16773)
!16798 = !DILocation(line: 1483, column: 35, scope: !16773)
!16799 = !DILocation(line: 1483, column: 23, scope: !16773)
!16800 = !DILocation(line: 1484, column: 24, scope: !16773)
!16801 = !DILocation(line: 1484, column: 29, scope: !16773)
!16802 = !DILocation(line: 1484, column: 34, scope: !16773)
!16803 = !DILocation(line: 1484, column: 22, scope: !16773)
!16804 = !DILocation(line: 1485, column: 24, scope: !16773)
!16805 = !DILocation(line: 1485, column: 29, scope: !16773)
!16806 = !DILocation(line: 1485, column: 22, scope: !16773)
!16807 = !DILocation(line: 1487, column: 21, scope: !16773)
!16808 = !DILocation(line: 1487, column: 13, scope: !16773)
!16809 = !DILocation(line: 1490, column: 17, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16773, file: !15568, line: 1488, column: 15)
!16811 = !DILocation(line: 1490, column: 17, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16810, file: !15568, line: 1490, column: 17)
!16813 = !DILabel(scope: !16810, name: "tz_hh_mm", file: !15568, line: 1492)
!16814 = !DILocation(line: 1492, column: 23, scope: !16810)
!16815 = !DILocation(line: 1493, column: 17, scope: !16810)
!16816 = !DILocation(line: 1493, column: 17, scope: !16817)
!16817 = distinct !DILexicalBlock(scope: !16810, file: !15568, line: 1493, column: 17)
!16818 = !DILabel(scope: !16810, name: "tz_hh_mm_ss", file: !15568, line: 1495)
!16819 = !DILocation(line: 1495, column: 23, scope: !16810)
!16820 = !DILocation(line: 1496, column: 17, scope: !16810)
!16821 = !DILocation(line: 1496, column: 17, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16810, file: !15568, line: 1496, column: 17)
!16823 = !DILocation(line: 1500, column: 21, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16810, file: !15568, line: 1500, column: 21)
!16825 = !DILocation(line: 1500, column: 30, scope: !16824)
!16826 = !DILocation(line: 1500, column: 21, scope: !16810)
!16827 = !DILocation(line: 1501, column: 19, scope: !16824)
!16828 = !DILocation(line: 1502, column: 21, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16810, file: !15568, line: 1502, column: 21)
!16830 = !DILocation(line: 1502, column: 30, scope: !16829)
!16831 = !DILocation(line: 1502, column: 21, scope: !16810)
!16832 = !DILocation(line: 1503, column: 19, scope: !16829)
!16833 = !DILocation(line: 1504, column: 17, scope: !16810)
!16834 = !DILocation(line: 1504, column: 17, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16810, file: !15568, line: 1504, column: 17)
!16836 = !DILocation(line: 1507, column: 17, scope: !16810)
!16837 = !DILocation(line: 1512, column: 13, scope: !15786)
!16838 = !DILocation(line: 1513, column: 13, scope: !15786)
!16839 = !DILabel(scope: !15786, name: "bad_format", file: !15568, line: 1518)
!16840 = !DILocation(line: 1518, column: 9, scope: !15786)
!16841 = !DILocalVariable(name: "flen", scope: !16842, file: !15568, line: 1520, type: !27)
!16842 = distinct !DILexicalBlock(scope: !15786, file: !15568, line: 1519, column: 11)
!16843 = !DILocation(line: 1520, column: 17, scope: !16842)
!16844 = !DILocation(line: 1521, column: 23, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16842, file: !15568, line: 1521, column: 13)
!16846 = !DILocation(line: 1521, column: 18, scope: !16845)
!16847 = !DILocation(line: 1521, column: 28, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16845, file: !15568, line: 1521, column: 13)
!16849 = !DILocation(line: 1521, column: 34, scope: !16848)
!16850 = !DILocation(line: 1521, column: 32, scope: !16848)
!16851 = !DILocation(line: 1521, column: 40, scope: !16848)
!16852 = !DILocation(line: 1521, column: 13, scope: !16845)
!16853 = !DILocation(line: 1522, column: 15, scope: !16848)
!16854 = !DILocation(line: 1521, column: 56, scope: !16848)
!16855 = !DILocation(line: 1521, column: 13, scope: !16848)
!16856 = distinct !{!16856, !16852, !16857}
!16857 = !DILocation(line: 1522, column: 15, scope: !16845)
!16858 = !DILocation(line: 1523, column: 13, scope: !16842)
!16859 = !DILocalVariable(name: "_n", scope: !16860, file: !15568, line: 1523, type: !149)
!16860 = distinct !DILexicalBlock(scope: !16842, file: !15568, line: 1523, column: 13)
!16861 = !DILocation(line: 1523, column: 13, scope: !16860)
!16862 = !DILocalVariable(name: "_w", scope: !16860, file: !15568, line: 1523, type: !149)
!16863 = !DILocalVariable(name: "_incr", scope: !16860, file: !15568, line: 1523, type: !149)
!16864 = !DILocation(line: 1523, column: 13, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16860, file: !15568, line: 1523, column: 13)
!16866 = !DILocation(line: 1523, column: 13, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16860, file: !15568, line: 1523, column: 13)
!16868 = !DILocation(line: 1523, column: 13, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16870, file: !15568, line: 1523, column: 13)
!16870 = distinct !DILexicalBlock(scope: !16867, file: !15568, line: 1523, column: 13)
!16871 = !DILocation(line: 1523, column: 13, scope: !16870)
!16872 = !DILocalVariable(name: "_delta", scope: !16873, file: !15568, line: 1523, type: !149)
!16873 = distinct !DILexicalBlock(scope: !16869, file: !15568, line: 1523, column: 13)
!16874 = !DILocation(line: 1523, column: 13, scope: !16873)
!16875 = !DILocation(line: 1523, column: 13, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16873, file: !15568, line: 1523, column: 13)
!16877 = !DILocation(line: 1523, column: 13, scope: !16878)
!16878 = distinct !DILexicalBlock(scope: !16870, file: !15568, line: 1523, column: 13)
!16879 = !DILocation(line: 1523, column: 13, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16878, file: !15568, line: 1523, column: 13)
!16881 = !DILocation(line: 1525, column: 11, scope: !15786)
!16882 = !DILocation(line: 1527, column: 5, scope: !15655)
!16883 = !DILocation(line: 562, column: 38, scope: !15650)
!16884 = !DILocation(line: 562, column: 45, scope: !15650)
!16885 = !DILocation(line: 562, column: 3, scope: !15650)
!16886 = distinct !{!16886, !15653, !16887}
!16887 = !DILocation(line: 1527, column: 5, scope: !15646)
!16888 = !DILocation(line: 1530, column: 7, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !15589, file: !15568, line: 1530, column: 7)
!16890 = !DILocation(line: 1530, column: 9, scope: !16889)
!16891 = !DILocation(line: 1530, column: 12, scope: !16889)
!16892 = !DILocation(line: 1530, column: 20, scope: !16889)
!16893 = !DILocation(line: 1530, column: 7, scope: !15589)
!16894 = !DILocation(line: 1531, column: 6, scope: !16889)
!16895 = !DILocation(line: 1531, column: 8, scope: !16889)
!16896 = !DILocation(line: 1531, column: 5, scope: !16889)
!16897 = !DILocation(line: 1534, column: 10, scope: !15589)
!16898 = !DILocation(line: 1534, column: 3, scope: !15589)
!16899 = !DILocation(line: 1535, column: 1, scope: !15589)
!16900 = distinct !DISubprogram(name: "memcpy_lowcase", scope: !15568, file: !15568, line: 320, type: !1884, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !152)
!16901 = !DILocalVariable(name: "dest", arg: 1, scope: !16900, file: !15568, line: 320, type: !143)
!16902 = !DILocation(line: 320, column: 25, scope: !16900)
!16903 = !DILocalVariable(name: "src", arg: 2, scope: !16900, file: !15568, line: 320, type: !146)
!16904 = !DILocation(line: 320, column: 45, scope: !16900)
!16905 = !DILocalVariable(name: "len", arg: 3, scope: !16900, file: !15568, line: 320, type: !149)
!16906 = !DILocation(line: 320, column: 57, scope: !16900)
!16907 = !DILocation(line: 322, column: 3, scope: !16900)
!16908 = !DILocation(line: 322, column: 13, scope: !16900)
!16909 = !DILocation(line: 322, column: 16, scope: !16900)
!16910 = !DILocation(line: 323, column: 17, scope: !16900)
!16911 = !DILocation(line: 323, column: 5, scope: !16900)
!16912 = !DILocation(line: 323, column: 10, scope: !16900)
!16913 = !DILocation(line: 323, column: 15, scope: !16900)
!16914 = distinct !{!16914, !16907, !16910}
!16915 = !DILocation(line: 324, column: 10, scope: !16900)
!16916 = !DILocation(line: 324, column: 3, scope: !16900)
!16917 = distinct !DISubprogram(name: "memcpy_uppcase", scope: !15568, file: !15568, line: 331, type: !1884, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !152)
!16918 = !DILocalVariable(name: "dest", arg: 1, scope: !16917, file: !15568, line: 331, type: !143)
!16919 = !DILocation(line: 331, column: 25, scope: !16917)
!16920 = !DILocalVariable(name: "src", arg: 2, scope: !16917, file: !15568, line: 331, type: !146)
!16921 = !DILocation(line: 331, column: 45, scope: !16917)
!16922 = !DILocalVariable(name: "len", arg: 3, scope: !16917, file: !15568, line: 331, type: !149)
!16923 = !DILocation(line: 331, column: 57, scope: !16917)
!16924 = !DILocation(line: 333, column: 3, scope: !16917)
!16925 = !DILocation(line: 333, column: 13, scope: !16917)
!16926 = !DILocation(line: 333, column: 16, scope: !16917)
!16927 = !DILocation(line: 334, column: 17, scope: !16917)
!16928 = !DILocation(line: 334, column: 5, scope: !16917)
!16929 = !DILocation(line: 334, column: 10, scope: !16917)
!16930 = !DILocation(line: 334, column: 15, scope: !16917)
!16931 = distinct !{!16931, !16924, !16927}
!16932 = !DILocation(line: 335, column: 10, scope: !16917)
!16933 = !DILocation(line: 335, column: 3, scope: !16917)
!16934 = distinct !DISubprogram(name: "iso_week_days", scope: !15568, file: !15568, line: 381, type: !1953, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1916, retainedNodes: !152)
!16935 = !DILocalVariable(name: "yday", arg: 1, scope: !16934, file: !15568, line: 381, type: !27)
!16936 = !DILocation(line: 381, column: 20, scope: !16934)
!16937 = !DILocalVariable(name: "wday", arg: 2, scope: !16934, file: !15568, line: 381, type: !27)
!16938 = !DILocation(line: 381, column: 30, scope: !16934)
!16939 = !DILocalVariable(name: "big_enough_multiple_of_7", scope: !16934, file: !15568, line: 384, type: !27)
!16940 = !DILocation(line: 384, column: 7, scope: !16934)
!16941 = !DILocation(line: 385, column: 11, scope: !16934)
!16942 = !DILocation(line: 386, column: 14, scope: !16934)
!16943 = !DILocation(line: 386, column: 21, scope: !16934)
!16944 = !DILocation(line: 386, column: 19, scope: !16934)
!16945 = !DILocation(line: 386, column: 26, scope: !16934)
!16946 = !DILocation(line: 386, column: 45, scope: !16934)
!16947 = !DILocation(line: 386, column: 43, scope: !16934)
!16948 = !DILocation(line: 386, column: 71, scope: !16934)
!16949 = !DILocation(line: 386, column: 11, scope: !16934)
!16950 = !DILocation(line: 387, column: 11, scope: !16934)
!16951 = !DILocation(line: 387, column: 28, scope: !16934)
!16952 = !DILocation(line: 385, column: 3, scope: !16934)
!16953 = distinct !DISubprogram(name: "set_program_name", scope: !1435, file: !1435, line: 39, type: !558, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !152)
!16954 = !DILocalVariable(name: "argv0", arg: 1, scope: !16953, file: !1435, line: 39, type: !146)
!16955 = !DILocation(line: 39, column: 31, scope: !16953)
!16956 = !DILocalVariable(name: "slash", scope: !16953, file: !1435, line: 46, type: !146)
!16957 = !DILocation(line: 46, column: 15, scope: !16953)
!16958 = !DILocalVariable(name: "base", scope: !16953, file: !1435, line: 47, type: !146)
!16959 = !DILocation(line: 47, column: 15, scope: !16953)
!16960 = !DILocation(line: 51, column: 7, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16953, file: !1435, line: 51, column: 7)
!16962 = !DILocation(line: 51, column: 13, scope: !16961)
!16963 = !DILocation(line: 51, column: 7, scope: !16953)
!16964 = !DILocation(line: 55, column: 14, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16961, file: !1435, line: 52, column: 5)
!16966 = !DILocation(line: 54, column: 7, scope: !16965)
!16967 = !DILocation(line: 56, column: 7, scope: !16965)
!16968 = !DILocation(line: 59, column: 20, scope: !16953)
!16969 = !DILocation(line: 59, column: 11, scope: !16953)
!16970 = !DILocation(line: 59, column: 9, scope: !16953)
!16971 = !DILocation(line: 60, column: 11, scope: !16953)
!16972 = !DILocation(line: 60, column: 17, scope: !16953)
!16973 = !DILocation(line: 60, column: 27, scope: !16953)
!16974 = !DILocation(line: 60, column: 33, scope: !16953)
!16975 = !DILocation(line: 60, column: 39, scope: !16953)
!16976 = !DILocation(line: 60, column: 8, scope: !16953)
!16977 = !DILocation(line: 61, column: 7, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16953, file: !1435, line: 61, column: 7)
!16979 = !DILocation(line: 61, column: 14, scope: !16978)
!16980 = !DILocation(line: 61, column: 12, scope: !16978)
!16981 = !DILocation(line: 61, column: 20, scope: !16978)
!16982 = !DILocation(line: 61, column: 25, scope: !16978)
!16983 = !DILocation(line: 61, column: 37, scope: !16978)
!16984 = !DILocation(line: 61, column: 42, scope: !16978)
!16985 = !DILocation(line: 61, column: 28, scope: !16978)
!16986 = !DILocation(line: 61, column: 61, scope: !16978)
!16987 = !DILocation(line: 61, column: 7, scope: !16953)
!16988 = !DILocation(line: 63, column: 15, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16978, file: !1435, line: 62, column: 5)
!16990 = !DILocation(line: 63, column: 13, scope: !16989)
!16991 = !DILocation(line: 64, column: 20, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16989, file: !1435, line: 64, column: 11)
!16993 = !DILocation(line: 64, column: 11, scope: !16992)
!16994 = !DILocation(line: 64, column: 36, scope: !16992)
!16995 = !DILocation(line: 64, column: 11, scope: !16989)
!16996 = !DILocation(line: 66, column: 19, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16992, file: !1435, line: 65, column: 9)
!16998 = !DILocation(line: 66, column: 24, scope: !16997)
!16999 = !DILocation(line: 66, column: 17, scope: !16997)
!17000 = !DILocation(line: 70, column: 52, scope: !16997)
!17001 = !DILocation(line: 70, column: 41, scope: !16997)
!17002 = !DILocation(line: 72, column: 9, scope: !16997)
!17003 = !DILocation(line: 73, column: 5, scope: !16989)
!17004 = !DILocation(line: 84, column: 18, scope: !16953)
!17005 = !DILocation(line: 84, column: 16, scope: !16953)
!17006 = !DILocation(line: 90, column: 38, scope: !16953)
!17007 = !DILocation(line: 90, column: 27, scope: !16953)
!17008 = !DILocation(line: 92, column: 1, scope: !16953)
!17009 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1448, file: !1448, line: 122, type: !1444, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17010 = !DILocalVariable(name: "o", arg: 1, scope: !17009, file: !1448, line: 122, type: !1446)
!17011 = !DILocation(line: 122, column: 48, scope: !17009)
!17012 = !DILocalVariable(name: "e", scope: !17009, file: !1448, line: 124, type: !27)
!17013 = !DILocation(line: 124, column: 7, scope: !17009)
!17014 = !DILocation(line: 124, column: 11, scope: !17009)
!17015 = !DILocalVariable(name: "p", scope: !17009, file: !1448, line: 125, type: !1446)
!17016 = !DILocation(line: 125, column: 27, scope: !17009)
!17017 = !DILocation(line: 125, column: 40, scope: !17009)
!17018 = !DILocation(line: 125, column: 44, scope: !17009)
!17019 = !DILocation(line: 125, column: 31, scope: !17009)
!17020 = !DILocation(line: 127, column: 11, scope: !17009)
!17021 = !DILocation(line: 127, column: 3, scope: !17009)
!17022 = !DILocation(line: 127, column: 9, scope: !17009)
!17023 = !DILocation(line: 128, column: 10, scope: !17009)
!17024 = !DILocation(line: 128, column: 3, scope: !17009)
!17025 = distinct !DISubprogram(name: "get_quoting_style", scope: !1448, file: !1448, line: 133, type: !1456, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17026 = !DILocalVariable(name: "o", arg: 1, scope: !17025, file: !1448, line: 133, type: !1458)
!17027 = !DILocation(line: 133, column: 50, scope: !17025)
!17028 = !DILocation(line: 135, column: 11, scope: !17025)
!17029 = !DILocation(line: 135, column: 15, scope: !17025)
!17030 = !DILocation(line: 135, column: 46, scope: !17025)
!17031 = !{!17032, !2470, i64 0}
!17032 = !{!"quoting_options", !2470, i64 0, !2469, i64 4, !2470, i64 8, !2475, i64 40, !2475, i64 48}
!17033 = !DILocation(line: 135, column: 3, scope: !17025)
!17034 = distinct !DISubprogram(name: "set_quoting_style", scope: !1448, file: !1448, line: 141, type: !1460, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17035 = !DILocalVariable(name: "o", arg: 1, scope: !17034, file: !1448, line: 141, type: !1446)
!17036 = !DILocation(line: 141, column: 44, scope: !17034)
!17037 = !DILocalVariable(name: "s", arg: 2, scope: !17034, file: !1448, line: 141, type: !95)
!17038 = !DILocation(line: 141, column: 66, scope: !17034)
!17039 = !DILocation(line: 143, column: 47, scope: !17034)
!17040 = !DILocation(line: 143, column: 4, scope: !17034)
!17041 = !DILocation(line: 143, column: 8, scope: !17034)
!17042 = !DILocation(line: 143, column: 39, scope: !17034)
!17043 = !DILocation(line: 143, column: 45, scope: !17034)
!17044 = !DILocation(line: 144, column: 1, scope: !17034)
!17045 = distinct !DISubprogram(name: "set_char_quoting", scope: !1448, file: !1448, line: 152, type: !1462, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17046 = !DILocalVariable(name: "o", arg: 1, scope: !17045, file: !1448, line: 152, type: !1446)
!17047 = !DILocation(line: 152, column: 43, scope: !17045)
!17048 = !DILocalVariable(name: "c", arg: 2, scope: !17045, file: !1448, line: 152, type: !144)
!17049 = !DILocation(line: 152, column: 51, scope: !17045)
!17050 = !DILocalVariable(name: "i", arg: 3, scope: !17045, file: !1448, line: 152, type: !27)
!17051 = !DILocation(line: 152, column: 58, scope: !17045)
!17052 = !DILocalVariable(name: "uc", scope: !17045, file: !1448, line: 154, type: !579)
!17053 = !DILocation(line: 154, column: 17, scope: !17045)
!17054 = !DILocation(line: 154, column: 22, scope: !17045)
!17055 = !DILocalVariable(name: "p", scope: !17045, file: !1448, line: 155, type: !1464)
!17056 = !DILocation(line: 155, column: 17, scope: !17045)
!17057 = !DILocation(line: 156, column: 6, scope: !17045)
!17058 = !DILocation(line: 156, column: 10, scope: !17045)
!17059 = !DILocation(line: 156, column: 41, scope: !17045)
!17060 = !DILocation(line: 156, column: 5, scope: !17045)
!17061 = !DILocation(line: 156, column: 59, scope: !17045)
!17062 = !DILocation(line: 156, column: 62, scope: !17045)
!17063 = !DILocation(line: 156, column: 57, scope: !17045)
!17064 = !DILocalVariable(name: "shift", scope: !17045, file: !1448, line: 157, type: !27)
!17065 = !DILocation(line: 157, column: 7, scope: !17045)
!17066 = !DILocation(line: 157, column: 15, scope: !17045)
!17067 = !DILocation(line: 157, column: 18, scope: !17045)
!17068 = !DILocalVariable(name: "r", scope: !17045, file: !1448, line: 158, type: !27)
!17069 = !DILocation(line: 158, column: 7, scope: !17045)
!17070 = !DILocation(line: 158, column: 13, scope: !17045)
!17071 = !DILocation(line: 158, column: 12, scope: !17045)
!17072 = !DILocation(line: 158, column: 18, scope: !17045)
!17073 = !DILocation(line: 158, column: 15, scope: !17045)
!17074 = !DILocation(line: 158, column: 25, scope: !17045)
!17075 = !DILocation(line: 159, column: 11, scope: !17045)
!17076 = !DILocation(line: 159, column: 13, scope: !17045)
!17077 = !DILocation(line: 159, column: 20, scope: !17045)
!17078 = !DILocation(line: 159, column: 18, scope: !17045)
!17079 = !DILocation(line: 159, column: 26, scope: !17045)
!17080 = !DILocation(line: 159, column: 23, scope: !17045)
!17081 = !DILocation(line: 159, column: 4, scope: !17045)
!17082 = !DILocation(line: 159, column: 6, scope: !17045)
!17083 = !DILocation(line: 160, column: 10, scope: !17045)
!17084 = !DILocation(line: 160, column: 3, scope: !17045)
!17085 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1448, file: !1448, line: 168, type: !1465, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17086 = !DILocalVariable(name: "o", arg: 1, scope: !17085, file: !1448, line: 168, type: !1446)
!17087 = !DILocation(line: 168, column: 44, scope: !17085)
!17088 = !DILocalVariable(name: "i", arg: 2, scope: !17085, file: !1448, line: 168, type: !27)
!17089 = !DILocation(line: 168, column: 51, scope: !17085)
!17090 = !DILocalVariable(name: "r", scope: !17085, file: !1448, line: 170, type: !27)
!17091 = !DILocation(line: 170, column: 7, scope: !17085)
!17092 = !DILocation(line: 171, column: 8, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17085, file: !1448, line: 171, column: 7)
!17094 = !DILocation(line: 171, column: 7, scope: !17085)
!17095 = !DILocation(line: 172, column: 7, scope: !17093)
!17096 = !DILocation(line: 172, column: 5, scope: !17093)
!17097 = !DILocation(line: 173, column: 7, scope: !17085)
!17098 = !DILocation(line: 173, column: 10, scope: !17085)
!17099 = !{!17032, !2469, i64 4}
!17100 = !DILocation(line: 173, column: 5, scope: !17085)
!17101 = !DILocation(line: 174, column: 14, scope: !17085)
!17102 = !DILocation(line: 174, column: 3, scope: !17085)
!17103 = !DILocation(line: 174, column: 6, scope: !17085)
!17104 = !DILocation(line: 174, column: 12, scope: !17085)
!17105 = !DILocation(line: 175, column: 10, scope: !17085)
!17106 = !DILocation(line: 175, column: 3, scope: !17085)
!17107 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1448, file: !1448, line: 179, type: !1467, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17108 = !DILocalVariable(name: "o", arg: 1, scope: !17107, file: !1448, line: 179, type: !1446)
!17109 = !DILocation(line: 179, column: 45, scope: !17107)
!17110 = !DILocalVariable(name: "left_quote", arg: 2, scope: !17107, file: !1448, line: 180, type: !146)
!17111 = !DILocation(line: 180, column: 33, scope: !17107)
!17112 = !DILocalVariable(name: "right_quote", arg: 3, scope: !17107, file: !1448, line: 180, type: !146)
!17113 = !DILocation(line: 180, column: 57, scope: !17107)
!17114 = !DILocation(line: 182, column: 8, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17107, file: !1448, line: 182, column: 7)
!17116 = !DILocation(line: 182, column: 7, scope: !17107)
!17117 = !DILocation(line: 183, column: 7, scope: !17115)
!17118 = !DILocation(line: 183, column: 5, scope: !17115)
!17119 = !DILocation(line: 184, column: 3, scope: !17107)
!17120 = !DILocation(line: 184, column: 6, scope: !17107)
!17121 = !DILocation(line: 184, column: 12, scope: !17107)
!17122 = !DILocation(line: 185, column: 8, scope: !17123)
!17123 = distinct !DILexicalBlock(scope: !17107, file: !1448, line: 185, column: 7)
!17124 = !DILocation(line: 185, column: 19, scope: !17123)
!17125 = !DILocation(line: 185, column: 23, scope: !17123)
!17126 = !DILocation(line: 185, column: 7, scope: !17107)
!17127 = !DILocation(line: 186, column: 5, scope: !17123)
!17128 = !DILocation(line: 187, column: 19, scope: !17107)
!17129 = !DILocation(line: 187, column: 3, scope: !17107)
!17130 = !DILocation(line: 187, column: 6, scope: !17107)
!17131 = !DILocation(line: 187, column: 17, scope: !17107)
!17132 = !{!17032, !2475, i64 40}
!17133 = !DILocation(line: 188, column: 20, scope: !17107)
!17134 = !DILocation(line: 188, column: 3, scope: !17107)
!17135 = !DILocation(line: 188, column: 6, scope: !17107)
!17136 = !DILocation(line: 188, column: 18, scope: !17107)
!17137 = !{!17032, !2475, i64 48}
!17138 = !DILocation(line: 189, column: 1, scope: !17107)
!17139 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1448, file: !1448, line: 784, type: !1469, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17140 = !DILocalVariable(name: "buffer", arg: 1, scope: !17139, file: !1448, line: 784, type: !143)
!17141 = !DILocation(line: 784, column: 24, scope: !17139)
!17142 = !DILocalVariable(name: "buffersize", arg: 2, scope: !17139, file: !1448, line: 784, type: !149)
!17143 = !DILocation(line: 784, column: 39, scope: !17139)
!17144 = !DILocalVariable(name: "arg", arg: 3, scope: !17139, file: !1448, line: 785, type: !146)
!17145 = !DILocation(line: 785, column: 30, scope: !17139)
!17146 = !DILocalVariable(name: "argsize", arg: 4, scope: !17139, file: !1448, line: 785, type: !149)
!17147 = !DILocation(line: 785, column: 42, scope: !17139)
!17148 = !DILocalVariable(name: "o", arg: 5, scope: !17139, file: !1448, line: 786, type: !1458)
!17149 = !DILocation(line: 786, column: 48, scope: !17139)
!17150 = !DILocalVariable(name: "p", scope: !17139, file: !1448, line: 788, type: !1458)
!17151 = !DILocation(line: 788, column: 33, scope: !17139)
!17152 = !DILocation(line: 788, column: 37, scope: !17139)
!17153 = !DILocation(line: 788, column: 41, scope: !17139)
!17154 = !DILocalVariable(name: "e", scope: !17139, file: !1448, line: 789, type: !27)
!17155 = !DILocation(line: 789, column: 7, scope: !17139)
!17156 = !DILocation(line: 789, column: 11, scope: !17139)
!17157 = !DILocalVariable(name: "r", scope: !17139, file: !1448, line: 790, type: !149)
!17158 = !DILocation(line: 790, column: 10, scope: !17139)
!17159 = !DILocation(line: 790, column: 40, scope: !17139)
!17160 = !DILocation(line: 790, column: 48, scope: !17139)
!17161 = !DILocation(line: 790, column: 60, scope: !17139)
!17162 = !DILocation(line: 790, column: 65, scope: !17139)
!17163 = !DILocation(line: 791, column: 40, scope: !17139)
!17164 = !DILocation(line: 791, column: 43, scope: !17139)
!17165 = !DILocation(line: 791, column: 50, scope: !17139)
!17166 = !DILocation(line: 791, column: 53, scope: !17139)
!17167 = !DILocation(line: 791, column: 60, scope: !17139)
!17168 = !DILocation(line: 791, column: 63, scope: !17139)
!17169 = !DILocation(line: 792, column: 40, scope: !17139)
!17170 = !DILocation(line: 792, column: 43, scope: !17139)
!17171 = !DILocation(line: 792, column: 55, scope: !17139)
!17172 = !DILocation(line: 792, column: 58, scope: !17139)
!17173 = !DILocation(line: 790, column: 14, scope: !17139)
!17174 = !DILocation(line: 793, column: 11, scope: !17139)
!17175 = !DILocation(line: 793, column: 3, scope: !17139)
!17176 = !DILocation(line: 793, column: 9, scope: !17139)
!17177 = !DILocation(line: 794, column: 10, scope: !17139)
!17178 = !DILocation(line: 794, column: 3, scope: !17139)
!17179 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1448, file: !1448, line: 256, type: !1512, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!17180 = !DILocalVariable(name: "buffer", arg: 1, scope: !17179, file: !1448, line: 256, type: !143)
!17181 = !DILocation(line: 256, column: 33, scope: !17179)
!17182 = !DILocalVariable(name: "buffersize", arg: 2, scope: !17179, file: !1448, line: 256, type: !149)
!17183 = !DILocation(line: 256, column: 48, scope: !17179)
!17184 = !DILocalVariable(name: "arg", arg: 3, scope: !17179, file: !1448, line: 257, type: !146)
!17185 = !DILocation(line: 257, column: 39, scope: !17179)
!17186 = !DILocalVariable(name: "argsize", arg: 4, scope: !17179, file: !1448, line: 257, type: !149)
!17187 = !DILocation(line: 257, column: 51, scope: !17179)
!17188 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !17179, file: !1448, line: 258, type: !95)
!17189 = !DILocation(line: 258, column: 46, scope: !17179)
!17190 = !DILocalVariable(name: "flags", arg: 6, scope: !17179, file: !1448, line: 258, type: !27)
!17191 = !DILocation(line: 258, column: 65, scope: !17179)
!17192 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !17179, file: !1448, line: 259, type: !1514)
!17193 = !DILocation(line: 259, column: 47, scope: !17179)
!17194 = !DILocalVariable(name: "left_quote", arg: 8, scope: !17179, file: !1448, line: 260, type: !146)
!17195 = !DILocation(line: 260, column: 39, scope: !17179)
!17196 = !DILocalVariable(name: "right_quote", arg: 9, scope: !17179, file: !1448, line: 261, type: !146)
!17197 = !DILocation(line: 261, column: 39, scope: !17179)
!17198 = !DILocalVariable(name: "i", scope: !17179, file: !1448, line: 263, type: !149)
!17199 = !DILocation(line: 263, column: 10, scope: !17179)
!17200 = !DILocalVariable(name: "len", scope: !17179, file: !1448, line: 264, type: !149)
!17201 = !DILocation(line: 264, column: 10, scope: !17179)
!17202 = !DILocalVariable(name: "orig_buffersize", scope: !17179, file: !1448, line: 265, type: !149)
!17203 = !DILocation(line: 265, column: 10, scope: !17179)
!17204 = !DILocalVariable(name: "quote_string", scope: !17179, file: !1448, line: 266, type: !146)
!17205 = !DILocation(line: 266, column: 15, scope: !17179)
!17206 = !DILocalVariable(name: "quote_string_len", scope: !17179, file: !1448, line: 267, type: !149)
!17207 = !DILocation(line: 267, column: 10, scope: !17179)
!17208 = !DILocalVariable(name: "backslash_escapes", scope: !17179, file: !1448, line: 268, type: !141)
!17209 = !DILocation(line: 268, column: 8, scope: !17179)
!17210 = !DILocalVariable(name: "unibyte_locale", scope: !17179, file: !1448, line: 269, type: !141)
!17211 = !DILocation(line: 269, column: 8, scope: !17179)
!17212 = !DILocation(line: 269, column: 25, scope: !17179)
!17213 = !DILocation(line: 269, column: 36, scope: !17179)
!17214 = !DILocalVariable(name: "elide_outer_quotes", scope: !17179, file: !1448, line: 270, type: !141)
!17215 = !DILocation(line: 270, column: 8, scope: !17179)
!17216 = !DILocation(line: 270, column: 30, scope: !17179)
!17217 = !DILocation(line: 270, column: 36, scope: !17179)
!17218 = !DILocation(line: 270, column: 61, scope: !17179)
!17219 = !DILocalVariable(name: "pending_shell_escape_end", scope: !17179, file: !1448, line: 271, type: !141)
!17220 = !DILocation(line: 271, column: 8, scope: !17179)
!17221 = !DILocalVariable(name: "encountered_single_quote", scope: !17179, file: !1448, line: 272, type: !141)
!17222 = !DILocation(line: 272, column: 8, scope: !17179)
!17223 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !17179, file: !1448, line: 273, type: !141)
!17224 = !DILocation(line: 273, column: 8, scope: !17179)
!17225 = !DILocation(line: 273, column: 3, scope: !17179)
!17226 = !DILabel(scope: !17179, name: "process_input", file: !1448, line: 314)
!17227 = !DILocation(line: 314, column: 2, scope: !17179)
!17228 = !DILocation(line: 316, column: 11, scope: !17179)
!17229 = !DILocation(line: 316, column: 3, scope: !17179)
!17230 = !DILocation(line: 319, column: 21, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 317, column: 5)
!17232 = !DILocation(line: 320, column: 26, scope: !17231)
!17233 = !DILocation(line: 321, column: 7, scope: !17231)
!17234 = !DILocation(line: 323, column: 12, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17231, file: !1448, line: 323, column: 11)
!17236 = !DILocation(line: 323, column: 11, scope: !17231)
!17237 = !DILocation(line: 324, column: 9, scope: !17235)
!17238 = !DILocation(line: 324, column: 9, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17240, file: !1448, line: 324, column: 9)
!17240 = distinct !DILexicalBlock(scope: !17235, file: !1448, line: 324, column: 9)
!17241 = !DILocation(line: 324, column: 9, scope: !17240)
!17242 = !DILocation(line: 325, column: 25, scope: !17231)
!17243 = !DILocation(line: 326, column: 20, scope: !17231)
!17244 = !DILocation(line: 327, column: 24, scope: !17231)
!17245 = !DILocation(line: 328, column: 7, scope: !17231)
!17246 = !DILocation(line: 331, column: 25, scope: !17231)
!17247 = !DILocation(line: 332, column: 26, scope: !17231)
!17248 = !DILocation(line: 333, column: 7, scope: !17231)
!17249 = !DILocation(line: 339, column: 13, scope: !17250)
!17250 = distinct !DILexicalBlock(scope: !17251, file: !1448, line: 339, column: 13)
!17251 = distinct !DILexicalBlock(scope: !17231, file: !1448, line: 338, column: 7)
!17252 = !DILocation(line: 339, column: 27, scope: !17250)
!17253 = !DILocation(line: 339, column: 13, scope: !17251)
!17254 = !DILocation(line: 362, column: 50, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17250, file: !1448, line: 340, column: 11)
!17256 = !DILocation(line: 362, column: 26, scope: !17255)
!17257 = !DILocation(line: 362, column: 24, scope: !17255)
!17258 = !DILocation(line: 363, column: 51, scope: !17255)
!17259 = !DILocation(line: 363, column: 27, scope: !17255)
!17260 = !DILocation(line: 363, column: 25, scope: !17255)
!17261 = !DILocation(line: 364, column: 11, scope: !17255)
!17262 = !DILocation(line: 365, column: 14, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17251, file: !1448, line: 365, column: 13)
!17264 = !DILocation(line: 365, column: 13, scope: !17251)
!17265 = !DILocation(line: 366, column: 31, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17263, file: !1448, line: 366, column: 11)
!17267 = !DILocation(line: 366, column: 29, scope: !17266)
!17268 = !DILocation(line: 366, column: 16, scope: !17266)
!17269 = !DILocation(line: 366, column: 44, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17266, file: !1448, line: 366, column: 11)
!17271 = !DILocation(line: 366, column: 43, scope: !17270)
!17272 = !DILocation(line: 366, column: 11, scope: !17266)
!17273 = !DILocation(line: 367, column: 13, scope: !17270)
!17274 = !DILocation(line: 367, column: 13, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17276, file: !1448, line: 367, column: 13)
!17276 = distinct !DILexicalBlock(scope: !17270, file: !1448, line: 367, column: 13)
!17277 = !DILocation(line: 367, column: 13, scope: !17276)
!17278 = !DILocation(line: 366, column: 70, scope: !17270)
!17279 = !DILocation(line: 366, column: 11, scope: !17270)
!17280 = distinct !{!17280, !17272, !17281}
!17281 = !DILocation(line: 367, column: 13, scope: !17266)
!17282 = !DILocation(line: 368, column: 27, scope: !17251)
!17283 = !DILocation(line: 369, column: 24, scope: !17251)
!17284 = !DILocation(line: 369, column: 22, scope: !17251)
!17285 = !DILocation(line: 370, column: 36, scope: !17251)
!17286 = !DILocation(line: 370, column: 28, scope: !17251)
!17287 = !DILocation(line: 370, column: 26, scope: !17251)
!17288 = !DILocation(line: 372, column: 7, scope: !17231)
!17289 = !DILocation(line: 375, column: 25, scope: !17231)
!17290 = !DILocation(line: 376, column: 7, scope: !17231)
!17291 = !DILocation(line: 378, column: 26, scope: !17231)
!17292 = !DILocation(line: 379, column: 7, scope: !17231)
!17293 = !DILocation(line: 381, column: 12, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17231, file: !1448, line: 381, column: 11)
!17295 = !DILocation(line: 381, column: 11, scope: !17231)
!17296 = !DILocation(line: 382, column: 27, scope: !17294)
!17297 = !DILocation(line: 382, column: 9, scope: !17294)
!17298 = !DILocation(line: 383, column: 7, scope: !17231)
!17299 = !DILocation(line: 385, column: 21, scope: !17231)
!17300 = !DILocation(line: 386, column: 12, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17231, file: !1448, line: 386, column: 11)
!17302 = !DILocation(line: 386, column: 11, scope: !17231)
!17303 = !DILocation(line: 387, column: 9, scope: !17301)
!17304 = !DILocation(line: 387, column: 9, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !1448, line: 387, column: 9)
!17306 = distinct !DILexicalBlock(scope: !17301, file: !1448, line: 387, column: 9)
!17307 = !DILocation(line: 387, column: 9, scope: !17306)
!17308 = !DILocation(line: 388, column: 20, scope: !17231)
!17309 = !DILocation(line: 389, column: 24, scope: !17231)
!17310 = !DILocation(line: 390, column: 7, scope: !17231)
!17311 = !DILocation(line: 393, column: 26, scope: !17231)
!17312 = !DILocation(line: 394, column: 7, scope: !17231)
!17313 = !DILocation(line: 397, column: 7, scope: !17231)
!17314 = !DILocation(line: 400, column: 10, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 400, column: 3)
!17316 = !DILocation(line: 400, column: 8, scope: !17315)
!17317 = !DILocation(line: 400, column: 19, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !17315, file: !1448, line: 400, column: 3)
!17319 = !DILocation(line: 400, column: 27, scope: !17318)
!17320 = !DILocation(line: 400, column: 41, scope: !17318)
!17321 = !DILocation(line: 400, column: 45, scope: !17318)
!17322 = !DILocation(line: 400, column: 48, scope: !17318)
!17323 = !DILocation(line: 400, column: 58, scope: !17318)
!17324 = !DILocation(line: 400, column: 63, scope: !17318)
!17325 = !DILocation(line: 400, column: 60, scope: !17318)
!17326 = !DILocation(line: 400, column: 16, scope: !17318)
!17327 = !DILocation(line: 400, column: 3, scope: !17315)
!17328 = !DILocalVariable(name: "c", scope: !17329, file: !1448, line: 402, type: !579)
!17329 = distinct !DILexicalBlock(scope: !17318, file: !1448, line: 401, column: 5)
!17330 = !DILocation(line: 402, column: 21, scope: !17329)
!17331 = !DILocalVariable(name: "esc", scope: !17329, file: !1448, line: 403, type: !579)
!17332 = !DILocation(line: 403, column: 21, scope: !17329)
!17333 = !DILocalVariable(name: "is_right_quote", scope: !17329, file: !1448, line: 404, type: !141)
!17334 = !DILocation(line: 404, column: 12, scope: !17329)
!17335 = !DILocalVariable(name: "escaping", scope: !17329, file: !1448, line: 405, type: !141)
!17336 = !DILocation(line: 405, column: 12, scope: !17329)
!17337 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !17329, file: !1448, line: 406, type: !141)
!17338 = !DILocation(line: 406, column: 12, scope: !17329)
!17339 = !DILocation(line: 408, column: 11, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 408, column: 11)
!17341 = !DILocation(line: 409, column: 11, scope: !17340)
!17342 = !DILocation(line: 409, column: 14, scope: !17340)
!17343 = !DILocation(line: 409, column: 28, scope: !17340)
!17344 = !DILocation(line: 410, column: 11, scope: !17340)
!17345 = !DILocation(line: 410, column: 14, scope: !17340)
!17346 = !DILocation(line: 411, column: 11, scope: !17340)
!17347 = !DILocation(line: 411, column: 15, scope: !17340)
!17348 = !DILocation(line: 411, column: 19, scope: !17340)
!17349 = !DILocation(line: 411, column: 17, scope: !17340)
!17350 = !DILocation(line: 412, column: 19, scope: !17340)
!17351 = !DILocation(line: 412, column: 27, scope: !17340)
!17352 = !DILocation(line: 412, column: 39, scope: !17340)
!17353 = !DILocation(line: 412, column: 46, scope: !17340)
!17354 = !DILocation(line: 412, column: 44, scope: !17340)
!17355 = !DILocation(line: 416, column: 40, scope: !17340)
!17356 = !DILocation(line: 416, column: 32, scope: !17340)
!17357 = !DILocation(line: 416, column: 30, scope: !17340)
!17358 = !DILocation(line: 416, column: 48, scope: !17340)
!17359 = !DILocation(line: 412, column: 15, scope: !17340)
!17360 = !DILocation(line: 417, column: 11, scope: !17340)
!17361 = !DILocation(line: 417, column: 22, scope: !17340)
!17362 = !DILocation(line: 417, column: 28, scope: !17340)
!17363 = !DILocation(line: 417, column: 26, scope: !17340)
!17364 = !DILocation(line: 417, column: 31, scope: !17340)
!17365 = !DILocation(line: 417, column: 45, scope: !17340)
!17366 = !DILocation(line: 417, column: 14, scope: !17340)
!17367 = !DILocation(line: 417, column: 63, scope: !17340)
!17368 = !DILocation(line: 408, column: 11, scope: !17329)
!17369 = !DILocation(line: 419, column: 15, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17371, file: !1448, line: 419, column: 15)
!17371 = distinct !DILexicalBlock(scope: !17340, file: !1448, line: 418, column: 9)
!17372 = !DILocation(line: 419, column: 15, scope: !17371)
!17373 = !DILocation(line: 420, column: 13, scope: !17370)
!17374 = !DILocation(line: 421, column: 26, scope: !17371)
!17375 = !DILocation(line: 422, column: 9, scope: !17371)
!17376 = !DILocation(line: 424, column: 11, scope: !17329)
!17377 = !DILocation(line: 424, column: 15, scope: !17329)
!17378 = !DILocation(line: 424, column: 9, scope: !17329)
!17379 = !DILocation(line: 425, column: 15, scope: !17329)
!17380 = !DILocation(line: 425, column: 7, scope: !17329)
!17381 = !DILocation(line: 428, column: 15, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 428, column: 15)
!17383 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 426, column: 9)
!17384 = !DILocation(line: 428, column: 15, scope: !17383)
!17385 = !DILocation(line: 430, column: 15, scope: !17386)
!17386 = distinct !DILexicalBlock(scope: !17382, file: !1448, line: 429, column: 13)
!17387 = !DILocation(line: 430, column: 15, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17389, file: !1448, line: 430, column: 15)
!17389 = distinct !DILexicalBlock(scope: !17386, file: !1448, line: 430, column: 15)
!17390 = !DILocation(line: 430, column: 15, scope: !17389)
!17391 = !DILocation(line: 430, column: 15, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17389, file: !1448, line: 430, column: 15)
!17393 = !DILocation(line: 430, column: 15, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17392, file: !1448, line: 430, column: 15)
!17395 = !DILocation(line: 430, column: 15, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17397, file: !1448, line: 430, column: 15)
!17397 = distinct !DILexicalBlock(scope: !17394, file: !1448, line: 430, column: 15)
!17398 = !DILocation(line: 430, column: 15, scope: !17397)
!17399 = !DILocation(line: 430, column: 15, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17401, file: !1448, line: 430, column: 15)
!17401 = distinct !DILexicalBlock(scope: !17394, file: !1448, line: 430, column: 15)
!17402 = !DILocation(line: 430, column: 15, scope: !17401)
!17403 = !DILocation(line: 430, column: 15, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17405, file: !1448, line: 430, column: 15)
!17405 = distinct !DILexicalBlock(scope: !17394, file: !1448, line: 430, column: 15)
!17406 = !DILocation(line: 430, column: 15, scope: !17405)
!17407 = !DILocation(line: 430, column: 15, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17409, file: !1448, line: 430, column: 15)
!17409 = distinct !DILexicalBlock(scope: !17389, file: !1448, line: 430, column: 15)
!17410 = !DILocation(line: 430, column: 15, scope: !17409)
!17411 = !DILocation(line: 437, column: 19, scope: !17412)
!17412 = distinct !DILexicalBlock(scope: !17386, file: !1448, line: 437, column: 19)
!17413 = !DILocation(line: 437, column: 33, scope: !17412)
!17414 = !DILocation(line: 438, column: 19, scope: !17412)
!17415 = !DILocation(line: 438, column: 22, scope: !17412)
!17416 = !DILocation(line: 438, column: 24, scope: !17412)
!17417 = !DILocation(line: 438, column: 30, scope: !17412)
!17418 = !DILocation(line: 438, column: 28, scope: !17412)
!17419 = !DILocation(line: 438, column: 38, scope: !17412)
!17420 = !DILocation(line: 438, column: 48, scope: !17412)
!17421 = !DILocation(line: 438, column: 52, scope: !17412)
!17422 = !DILocation(line: 438, column: 54, scope: !17412)
!17423 = !DILocation(line: 438, column: 45, scope: !17412)
!17424 = !DILocation(line: 438, column: 59, scope: !17412)
!17425 = !DILocation(line: 438, column: 62, scope: !17412)
!17426 = !DILocation(line: 438, column: 66, scope: !17412)
!17427 = !DILocation(line: 438, column: 68, scope: !17412)
!17428 = !DILocation(line: 438, column: 73, scope: !17412)
!17429 = !DILocation(line: 437, column: 19, scope: !17386)
!17430 = !DILocation(line: 440, column: 19, scope: !17431)
!17431 = distinct !DILexicalBlock(scope: !17412, file: !1448, line: 439, column: 17)
!17432 = !DILocation(line: 440, column: 19, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !1448, line: 440, column: 19)
!17434 = distinct !DILexicalBlock(scope: !17431, file: !1448, line: 440, column: 19)
!17435 = !DILocation(line: 440, column: 19, scope: !17434)
!17436 = !DILocation(line: 441, column: 19, scope: !17431)
!17437 = !DILocation(line: 441, column: 19, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17439, file: !1448, line: 441, column: 19)
!17439 = distinct !DILexicalBlock(scope: !17431, file: !1448, line: 441, column: 19)
!17440 = !DILocation(line: 441, column: 19, scope: !17439)
!17441 = !DILocation(line: 442, column: 17, scope: !17431)
!17442 = !DILocation(line: 443, column: 17, scope: !17386)
!17443 = !DILocation(line: 448, column: 13, scope: !17386)
!17444 = !DILocation(line: 449, column: 20, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17382, file: !1448, line: 449, column: 20)
!17446 = !DILocation(line: 449, column: 26, scope: !17445)
!17447 = !DILocation(line: 449, column: 20, scope: !17382)
!17448 = !DILocation(line: 450, column: 13, scope: !17445)
!17449 = !DILocation(line: 451, column: 11, scope: !17383)
!17450 = !DILocation(line: 454, column: 19, scope: !17383)
!17451 = !DILocation(line: 454, column: 11, scope: !17383)
!17452 = !DILocation(line: 457, column: 19, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17454, file: !1448, line: 457, column: 19)
!17454 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 455, column: 13)
!17455 = !DILocation(line: 457, column: 19, scope: !17454)
!17456 = !DILocation(line: 458, column: 17, scope: !17453)
!17457 = !DILocation(line: 459, column: 15, scope: !17454)
!17458 = !DILocation(line: 462, column: 20, scope: !17459)
!17459 = distinct !DILexicalBlock(scope: !17454, file: !1448, line: 462, column: 19)
!17460 = !DILocation(line: 462, column: 26, scope: !17459)
!17461 = !DILocation(line: 463, column: 19, scope: !17459)
!17462 = !DILocation(line: 463, column: 22, scope: !17459)
!17463 = !DILocation(line: 463, column: 24, scope: !17459)
!17464 = !DILocation(line: 463, column: 30, scope: !17459)
!17465 = !DILocation(line: 463, column: 28, scope: !17459)
!17466 = !DILocation(line: 463, column: 38, scope: !17459)
!17467 = !DILocation(line: 463, column: 41, scope: !17459)
!17468 = !DILocation(line: 463, column: 45, scope: !17459)
!17469 = !DILocation(line: 463, column: 47, scope: !17459)
!17470 = !DILocation(line: 463, column: 52, scope: !17459)
!17471 = !DILocation(line: 462, column: 19, scope: !17454)
!17472 = !DILocation(line: 464, column: 25, scope: !17459)
!17473 = !DILocation(line: 464, column: 29, scope: !17459)
!17474 = !DILocation(line: 464, column: 31, scope: !17459)
!17475 = !DILocation(line: 464, column: 17, scope: !17459)
!17476 = !DILocation(line: 471, column: 25, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17478, file: !1448, line: 471, column: 25)
!17478 = distinct !DILexicalBlock(scope: !17459, file: !1448, line: 465, column: 19)
!17479 = !DILocation(line: 471, column: 25, scope: !17478)
!17480 = !DILocation(line: 472, column: 23, scope: !17477)
!17481 = !DILocation(line: 473, column: 25, scope: !17478)
!17482 = !DILocation(line: 473, column: 29, scope: !17478)
!17483 = !DILocation(line: 473, column: 31, scope: !17478)
!17484 = !DILocation(line: 473, column: 23, scope: !17478)
!17485 = !DILocation(line: 474, column: 23, scope: !17478)
!17486 = !DILocation(line: 475, column: 21, scope: !17478)
!17487 = !DILocation(line: 475, column: 21, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17489, file: !1448, line: 475, column: 21)
!17489 = distinct !DILexicalBlock(scope: !17478, file: !1448, line: 475, column: 21)
!17490 = !DILocation(line: 475, column: 21, scope: !17489)
!17491 = !DILocation(line: 476, column: 21, scope: !17478)
!17492 = !DILocation(line: 476, column: 21, scope: !17493)
!17493 = distinct !DILexicalBlock(scope: !17494, file: !1448, line: 476, column: 21)
!17494 = distinct !DILexicalBlock(scope: !17478, file: !1448, line: 476, column: 21)
!17495 = !DILocation(line: 476, column: 21, scope: !17494)
!17496 = !DILocation(line: 477, column: 21, scope: !17478)
!17497 = !DILocation(line: 477, column: 21, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17499, file: !1448, line: 477, column: 21)
!17499 = distinct !DILexicalBlock(scope: !17478, file: !1448, line: 477, column: 21)
!17500 = !DILocation(line: 477, column: 21, scope: !17499)
!17501 = !DILocation(line: 478, column: 21, scope: !17478)
!17502 = !DILocation(line: 478, column: 21, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17504, file: !1448, line: 478, column: 21)
!17504 = distinct !DILexicalBlock(scope: !17478, file: !1448, line: 478, column: 21)
!17505 = !DILocation(line: 478, column: 21, scope: !17504)
!17506 = !DILocation(line: 479, column: 21, scope: !17478)
!17507 = !DILocation(line: 482, column: 21, scope: !17478)
!17508 = !DILocation(line: 483, column: 19, scope: !17478)
!17509 = !DILocation(line: 484, column: 15, scope: !17454)
!17510 = !DILocation(line: 487, column: 15, scope: !17454)
!17511 = !DILocation(line: 489, column: 11, scope: !17383)
!17512 = !DILocation(line: 491, column: 24, scope: !17383)
!17513 = !DILocation(line: 491, column: 31, scope: !17383)
!17514 = !DILocation(line: 492, column: 24, scope: !17383)
!17515 = !DILocation(line: 492, column: 31, scope: !17383)
!17516 = !DILocation(line: 493, column: 24, scope: !17383)
!17517 = !DILocation(line: 493, column: 31, scope: !17383)
!17518 = !DILocation(line: 494, column: 24, scope: !17383)
!17519 = !DILocation(line: 494, column: 31, scope: !17383)
!17520 = !DILocation(line: 495, column: 24, scope: !17383)
!17521 = !DILocation(line: 495, column: 31, scope: !17383)
!17522 = !DILocation(line: 496, column: 24, scope: !17383)
!17523 = !DILocation(line: 496, column: 31, scope: !17383)
!17524 = !DILocation(line: 497, column: 24, scope: !17383)
!17525 = !DILocation(line: 497, column: 31, scope: !17383)
!17526 = !DILocation(line: 498, column: 26, scope: !17383)
!17527 = !DILocation(line: 498, column: 24, scope: !17383)
!17528 = !DILocation(line: 500, column: 15, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 500, column: 15)
!17530 = !DILocation(line: 500, column: 29, scope: !17529)
!17531 = !DILocation(line: 500, column: 15, scope: !17383)
!17532 = !DILocation(line: 502, column: 19, scope: !17533)
!17533 = distinct !DILexicalBlock(scope: !17534, file: !1448, line: 502, column: 19)
!17534 = distinct !DILexicalBlock(scope: !17529, file: !1448, line: 501, column: 13)
!17535 = !DILocation(line: 502, column: 19, scope: !17534)
!17536 = !DILocation(line: 503, column: 17, scope: !17533)
!17537 = !DILocation(line: 504, column: 15, scope: !17534)
!17538 = !DILocation(line: 509, column: 15, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 509, column: 15)
!17540 = !DILocation(line: 509, column: 33, scope: !17539)
!17541 = !DILocation(line: 509, column: 36, scope: !17539)
!17542 = !DILocation(line: 509, column: 55, scope: !17539)
!17543 = !DILocation(line: 509, column: 58, scope: !17539)
!17544 = !DILocation(line: 509, column: 15, scope: !17383)
!17545 = !DILocation(line: 510, column: 13, scope: !17539)
!17546 = !DILabel(scope: !17383, name: "c_and_shell_escape", file: !1448, line: 512)
!17547 = !DILocation(line: 512, column: 9, scope: !17383)
!17548 = !DILocation(line: 513, column: 15, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 513, column: 15)
!17550 = !DILocation(line: 513, column: 29, scope: !17549)
!17551 = !DILocation(line: 514, column: 15, scope: !17549)
!17552 = !DILocation(line: 514, column: 18, scope: !17549)
!17553 = !DILocation(line: 513, column: 15, scope: !17383)
!17554 = !DILocation(line: 515, column: 13, scope: !17549)
!17555 = !DILabel(scope: !17383, name: "c_escape", file: !1448, line: 517)
!17556 = !DILocation(line: 517, column: 9, scope: !17383)
!17557 = !DILocation(line: 518, column: 15, scope: !17558)
!17558 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 518, column: 15)
!17559 = !DILocation(line: 518, column: 15, scope: !17383)
!17560 = !DILocation(line: 520, column: 19, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17558, file: !1448, line: 519, column: 13)
!17562 = !DILocation(line: 520, column: 17, scope: !17561)
!17563 = !DILocation(line: 521, column: 15, scope: !17561)
!17564 = !DILocation(line: 523, column: 11, scope: !17383)
!17565 = !DILocation(line: 526, column: 18, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 526, column: 15)
!17567 = !DILocation(line: 526, column: 26, scope: !17566)
!17568 = !DILocation(line: 526, column: 15, scope: !17383)
!17569 = !DILocation(line: 526, column: 40, scope: !17566)
!17570 = !DILocation(line: 526, column: 47, scope: !17566)
!17571 = !DILocation(line: 526, column: 57, scope: !17566)
!17572 = !DILocation(line: 526, column: 65, scope: !17566)
!17573 = !DILocation(line: 527, column: 13, scope: !17566)
!17574 = !DILocation(line: 528, column: 11, scope: !17383)
!17575 = !DILocation(line: 530, column: 15, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 530, column: 15)
!17577 = !DILocation(line: 530, column: 17, scope: !17576)
!17578 = !DILocation(line: 530, column: 15, scope: !17383)
!17579 = !DILocation(line: 531, column: 13, scope: !17576)
!17580 = !DILocation(line: 532, column: 11, scope: !17383)
!17581 = !DILocation(line: 534, column: 36, scope: !17383)
!17582 = !DILocation(line: 535, column: 11, scope: !17383)
!17583 = !DILocation(line: 548, column: 15, scope: !17584)
!17584 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 548, column: 15)
!17585 = !DILocation(line: 548, column: 29, scope: !17584)
!17586 = !DILocation(line: 549, column: 15, scope: !17584)
!17587 = !DILocation(line: 549, column: 18, scope: !17584)
!17588 = !DILocation(line: 548, column: 15, scope: !17383)
!17589 = !DILocation(line: 550, column: 13, scope: !17584)
!17590 = !DILocation(line: 551, column: 11, scope: !17383)
!17591 = !DILocation(line: 554, column: 36, scope: !17383)
!17592 = !DILocation(line: 555, column: 36, scope: !17383)
!17593 = !DILocation(line: 556, column: 15, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 556, column: 15)
!17595 = !DILocation(line: 556, column: 29, scope: !17594)
!17596 = !DILocation(line: 556, column: 15, scope: !17383)
!17597 = !DILocation(line: 558, column: 19, scope: !17598)
!17598 = distinct !DILexicalBlock(scope: !17599, file: !1448, line: 558, column: 19)
!17599 = distinct !DILexicalBlock(scope: !17594, file: !1448, line: 557, column: 13)
!17600 = !DILocation(line: 558, column: 19, scope: !17599)
!17601 = !DILocation(line: 559, column: 17, scope: !17598)
!17602 = !DILocation(line: 561, column: 19, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17599, file: !1448, line: 561, column: 19)
!17604 = !DILocation(line: 561, column: 30, scope: !17603)
!17605 = !DILocation(line: 561, column: 35, scope: !17603)
!17606 = !DILocation(line: 561, column: 19, scope: !17599)
!17607 = !DILocation(line: 566, column: 37, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17603, file: !1448, line: 562, column: 17)
!17609 = !DILocation(line: 566, column: 35, scope: !17608)
!17610 = !DILocation(line: 567, column: 30, scope: !17608)
!17611 = !DILocation(line: 568, column: 17, scope: !17608)
!17612 = !DILocation(line: 570, column: 15, scope: !17599)
!17613 = !DILocation(line: 570, column: 15, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17615, file: !1448, line: 570, column: 15)
!17615 = distinct !DILexicalBlock(scope: !17599, file: !1448, line: 570, column: 15)
!17616 = !DILocation(line: 570, column: 15, scope: !17615)
!17617 = !DILocation(line: 571, column: 15, scope: !17599)
!17618 = !DILocation(line: 571, column: 15, scope: !17619)
!17619 = distinct !DILexicalBlock(scope: !17620, file: !1448, line: 571, column: 15)
!17620 = distinct !DILexicalBlock(scope: !17599, file: !1448, line: 571, column: 15)
!17621 = !DILocation(line: 571, column: 15, scope: !17620)
!17622 = !DILocation(line: 572, column: 15, scope: !17599)
!17623 = !DILocation(line: 572, column: 15, scope: !17624)
!17624 = distinct !DILexicalBlock(scope: !17625, file: !1448, line: 572, column: 15)
!17625 = distinct !DILexicalBlock(scope: !17599, file: !1448, line: 572, column: 15)
!17626 = !DILocation(line: 572, column: 15, scope: !17625)
!17627 = !DILocation(line: 573, column: 40, scope: !17599)
!17628 = !DILocation(line: 574, column: 13, scope: !17599)
!17629 = !DILocation(line: 575, column: 11, scope: !17383)
!17630 = !DILocation(line: 599, column: 36, scope: !17383)
!17631 = !DILocation(line: 600, column: 11, scope: !17383)
!17632 = !DILocalVariable(name: "m", scope: !17633, file: !1448, line: 610, type: !149)
!17633 = distinct !DILexicalBlock(scope: !17383, file: !1448, line: 608, column: 11)
!17634 = !DILocation(line: 610, column: 20, scope: !17633)
!17635 = !DILocalVariable(name: "printable", scope: !17633, file: !1448, line: 612, type: !141)
!17636 = !DILocation(line: 612, column: 18, scope: !17633)
!17637 = !DILocation(line: 614, column: 17, scope: !17638)
!17638 = distinct !DILexicalBlock(scope: !17633, file: !1448, line: 614, column: 17)
!17639 = !DILocation(line: 614, column: 17, scope: !17633)
!17640 = !DILocation(line: 616, column: 19, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17638, file: !1448, line: 615, column: 15)
!17642 = !DILocation(line: 617, column: 29, scope: !17641)
!17643 = !DILocation(line: 617, column: 41, scope: !17641)
!17644 = !DILocation(line: 617, column: 27, scope: !17641)
!17645 = !DILocation(line: 618, column: 15, scope: !17641)
!17646 = !DILocalVariable(name: "mbstate", scope: !17647, file: !1448, line: 621, type: !1516)
!17647 = distinct !DILexicalBlock(scope: !17638, file: !1448, line: 620, column: 15)
!17648 = !DILocation(line: 621, column: 27, scope: !17647)
!17649 = !DILocation(line: 622, column: 17, scope: !17647)
!17650 = !DILocation(line: 624, column: 19, scope: !17647)
!17651 = !DILocation(line: 625, column: 27, scope: !17647)
!17652 = !DILocation(line: 626, column: 21, scope: !17653)
!17653 = distinct !DILexicalBlock(scope: !17647, file: !1448, line: 626, column: 21)
!17654 = !DILocation(line: 626, column: 29, scope: !17653)
!17655 = !DILocation(line: 626, column: 21, scope: !17647)
!17656 = !DILocation(line: 627, column: 37, scope: !17653)
!17657 = !DILocation(line: 627, column: 29, scope: !17653)
!17658 = !DILocation(line: 627, column: 27, scope: !17653)
!17659 = !DILocation(line: 627, column: 19, scope: !17653)
!17660 = !DILocation(line: 629, column: 17, scope: !17647)
!17661 = !DILocalVariable(name: "w", scope: !17662, file: !1448, line: 631, type: !641)
!17662 = distinct !DILexicalBlock(scope: !17647, file: !1448, line: 630, column: 19)
!17663 = !DILocation(line: 631, column: 29, scope: !17662)
!17664 = !DILocalVariable(name: "bytes", scope: !17662, file: !1448, line: 632, type: !149)
!17665 = !DILocation(line: 632, column: 28, scope: !17662)
!17666 = !DILocation(line: 632, column: 50, scope: !17662)
!17667 = !DILocation(line: 632, column: 54, scope: !17662)
!17668 = !DILocation(line: 632, column: 58, scope: !17662)
!17669 = !DILocation(line: 632, column: 56, scope: !17662)
!17670 = !DILocation(line: 633, column: 45, scope: !17662)
!17671 = !DILocation(line: 633, column: 56, scope: !17662)
!17672 = !DILocation(line: 633, column: 60, scope: !17662)
!17673 = !DILocation(line: 633, column: 58, scope: !17662)
!17674 = !DILocation(line: 633, column: 53, scope: !17662)
!17675 = !DILocation(line: 632, column: 36, scope: !17662)
!17676 = !DILocation(line: 634, column: 25, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17662, file: !1448, line: 634, column: 25)
!17678 = !DILocation(line: 634, column: 31, scope: !17677)
!17679 = !DILocation(line: 634, column: 25, scope: !17662)
!17680 = !DILocation(line: 635, column: 23, scope: !17677)
!17681 = !DILocation(line: 636, column: 30, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17677, file: !1448, line: 636, column: 30)
!17683 = !DILocation(line: 636, column: 36, scope: !17682)
!17684 = !DILocation(line: 636, column: 30, scope: !17677)
!17685 = !DILocation(line: 638, column: 35, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17682, file: !1448, line: 637, column: 23)
!17687 = !DILocation(line: 639, column: 25, scope: !17686)
!17688 = !DILocation(line: 641, column: 30, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17682, file: !1448, line: 641, column: 30)
!17690 = !DILocation(line: 641, column: 36, scope: !17689)
!17691 = !DILocation(line: 641, column: 30, scope: !17682)
!17692 = !DILocation(line: 643, column: 35, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17689, file: !1448, line: 642, column: 23)
!17694 = !DILocation(line: 644, column: 25, scope: !17693)
!17695 = !DILocation(line: 644, column: 32, scope: !17693)
!17696 = !DILocation(line: 644, column: 36, scope: !17693)
!17697 = !DILocation(line: 644, column: 34, scope: !17693)
!17698 = !DILocation(line: 644, column: 40, scope: !17693)
!17699 = !DILocation(line: 644, column: 38, scope: !17693)
!17700 = !DILocation(line: 644, column: 48, scope: !17693)
!17701 = !DILocation(line: 644, column: 51, scope: !17693)
!17702 = !DILocation(line: 644, column: 55, scope: !17693)
!17703 = !DILocation(line: 644, column: 59, scope: !17693)
!17704 = !DILocation(line: 644, column: 57, scope: !17693)
!17705 = !DILocation(line: 0, scope: !17693)
!17706 = !DILocation(line: 645, column: 28, scope: !17693)
!17707 = distinct !{!17707, !17694, !17706}
!17708 = !DILocation(line: 646, column: 25, scope: !17693)
!17709 = !DILocation(line: 654, column: 44, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17711, file: !1448, line: 654, column: 29)
!17711 = distinct !DILexicalBlock(scope: !17689, file: !1448, line: 649, column: 23)
!17712 = !DILocation(line: 655, column: 29, scope: !17710)
!17713 = !DILocation(line: 655, column: 32, scope: !17710)
!17714 = !DILocation(line: 655, column: 46, scope: !17710)
!17715 = !DILocation(line: 654, column: 29, scope: !17711)
!17716 = !DILocalVariable(name: "j", scope: !17717, file: !1448, line: 657, type: !149)
!17717 = distinct !DILexicalBlock(scope: !17710, file: !1448, line: 656, column: 27)
!17718 = !DILocation(line: 657, column: 36, scope: !17717)
!17719 = !DILocation(line: 658, column: 36, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17717, file: !1448, line: 658, column: 29)
!17721 = !DILocation(line: 658, column: 34, scope: !17720)
!17722 = !DILocation(line: 658, column: 41, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17720, file: !1448, line: 658, column: 29)
!17724 = !DILocation(line: 658, column: 45, scope: !17723)
!17725 = !DILocation(line: 658, column: 43, scope: !17723)
!17726 = !DILocation(line: 658, column: 29, scope: !17720)
!17727 = !DILocation(line: 659, column: 39, scope: !17723)
!17728 = !DILocation(line: 659, column: 43, scope: !17723)
!17729 = !DILocation(line: 659, column: 47, scope: !17723)
!17730 = !DILocation(line: 659, column: 45, scope: !17723)
!17731 = !DILocation(line: 659, column: 51, scope: !17723)
!17732 = !DILocation(line: 659, column: 49, scope: !17723)
!17733 = !DILocation(line: 659, column: 31, scope: !17723)
!17734 = !DILocation(line: 663, column: 35, scope: !17735)
!17735 = distinct !DILexicalBlock(scope: !17723, file: !1448, line: 660, column: 33)
!17736 = !DILocation(line: 666, column: 35, scope: !17735)
!17737 = !DILocation(line: 667, column: 33, scope: !17735)
!17738 = !DILocation(line: 658, column: 53, scope: !17723)
!17739 = !DILocation(line: 658, column: 29, scope: !17723)
!17740 = distinct !{!17740, !17726, !17741}
!17741 = !DILocation(line: 667, column: 33, scope: !17720)
!17742 = !DILocation(line: 668, column: 27, scope: !17717)
!17743 = !DILocation(line: 670, column: 41, scope: !17744)
!17744 = distinct !DILexicalBlock(scope: !17711, file: !1448, line: 670, column: 29)
!17745 = !DILocation(line: 670, column: 31, scope: !17744)
!17746 = !DILocation(line: 670, column: 29, scope: !17711)
!17747 = !DILocation(line: 671, column: 37, scope: !17744)
!17748 = !DILocation(line: 671, column: 27, scope: !17744)
!17749 = !DILocation(line: 672, column: 30, scope: !17711)
!17750 = !DILocation(line: 672, column: 27, scope: !17711)
!17751 = !DILocation(line: 674, column: 19, scope: !17662)
!17752 = !DILocation(line: 675, column: 26, scope: !17647)
!17753 = !DILocation(line: 675, column: 24, scope: !17647)
!17754 = distinct !{!17754, !17660, !17755}
!17755 = !DILocation(line: 675, column: 44, scope: !17647)
!17756 = !DILocation(line: 678, column: 40, scope: !17633)
!17757 = !DILocation(line: 678, column: 38, scope: !17633)
!17758 = !DILocation(line: 680, column: 21, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17633, file: !1448, line: 680, column: 17)
!17760 = !DILocation(line: 680, column: 19, scope: !17759)
!17761 = !DILocation(line: 680, column: 23, scope: !17759)
!17762 = !DILocation(line: 680, column: 27, scope: !17759)
!17763 = !DILocation(line: 680, column: 45, scope: !17759)
!17764 = !DILocation(line: 680, column: 50, scope: !17759)
!17765 = !DILocation(line: 680, column: 17, scope: !17633)
!17766 = !DILocalVariable(name: "ilim", scope: !17767, file: !1448, line: 684, type: !149)
!17767 = distinct !DILexicalBlock(scope: !17759, file: !1448, line: 681, column: 15)
!17768 = !DILocation(line: 684, column: 24, scope: !17767)
!17769 = !DILocation(line: 684, column: 31, scope: !17767)
!17770 = !DILocation(line: 684, column: 35, scope: !17767)
!17771 = !DILocation(line: 684, column: 33, scope: !17767)
!17772 = !DILocation(line: 686, column: 17, scope: !17767)
!17773 = !DILocation(line: 688, column: 25, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17775, file: !1448, line: 688, column: 25)
!17775 = distinct !DILexicalBlock(scope: !17776, file: !1448, line: 687, column: 19)
!17776 = distinct !DILexicalBlock(scope: !17777, file: !1448, line: 686, column: 17)
!17777 = distinct !DILexicalBlock(scope: !17767, file: !1448, line: 686, column: 17)
!17778 = !DILocation(line: 688, column: 43, scope: !17774)
!17779 = !DILocation(line: 688, column: 48, scope: !17774)
!17780 = !DILocation(line: 688, column: 25, scope: !17775)
!17781 = !DILocation(line: 690, column: 25, scope: !17782)
!17782 = distinct !DILexicalBlock(scope: !17774, file: !1448, line: 689, column: 23)
!17783 = !DILocation(line: 690, column: 25, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17785, file: !1448, line: 690, column: 25)
!17785 = distinct !DILexicalBlock(scope: !17782, file: !1448, line: 690, column: 25)
!17786 = !DILocation(line: 690, column: 25, scope: !17785)
!17787 = !DILocation(line: 690, column: 25, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17785, file: !1448, line: 690, column: 25)
!17789 = !DILocation(line: 690, column: 25, scope: !17790)
!17790 = distinct !DILexicalBlock(scope: !17788, file: !1448, line: 690, column: 25)
!17791 = !DILocation(line: 690, column: 25, scope: !17792)
!17792 = distinct !DILexicalBlock(scope: !17793, file: !1448, line: 690, column: 25)
!17793 = distinct !DILexicalBlock(scope: !17790, file: !1448, line: 690, column: 25)
!17794 = !DILocation(line: 690, column: 25, scope: !17793)
!17795 = !DILocation(line: 690, column: 25, scope: !17796)
!17796 = distinct !DILexicalBlock(scope: !17797, file: !1448, line: 690, column: 25)
!17797 = distinct !DILexicalBlock(scope: !17790, file: !1448, line: 690, column: 25)
!17798 = !DILocation(line: 690, column: 25, scope: !17797)
!17799 = !DILocation(line: 690, column: 25, scope: !17800)
!17800 = distinct !DILexicalBlock(scope: !17801, file: !1448, line: 690, column: 25)
!17801 = distinct !DILexicalBlock(scope: !17790, file: !1448, line: 690, column: 25)
!17802 = !DILocation(line: 690, column: 25, scope: !17801)
!17803 = !DILocation(line: 690, column: 25, scope: !17804)
!17804 = distinct !DILexicalBlock(scope: !17805, file: !1448, line: 690, column: 25)
!17805 = distinct !DILexicalBlock(scope: !17785, file: !1448, line: 690, column: 25)
!17806 = !DILocation(line: 690, column: 25, scope: !17805)
!17807 = !DILocation(line: 691, column: 25, scope: !17782)
!17808 = !DILocation(line: 691, column: 25, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17810, file: !1448, line: 691, column: 25)
!17810 = distinct !DILexicalBlock(scope: !17782, file: !1448, line: 691, column: 25)
!17811 = !DILocation(line: 691, column: 25, scope: !17810)
!17812 = !DILocation(line: 692, column: 25, scope: !17782)
!17813 = !DILocation(line: 692, column: 25, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17815, file: !1448, line: 692, column: 25)
!17815 = distinct !DILexicalBlock(scope: !17782, file: !1448, line: 692, column: 25)
!17816 = !DILocation(line: 692, column: 25, scope: !17815)
!17817 = !DILocation(line: 693, column: 36, scope: !17782)
!17818 = !DILocation(line: 693, column: 38, scope: !17782)
!17819 = !DILocation(line: 693, column: 33, scope: !17782)
!17820 = !DILocation(line: 693, column: 29, scope: !17782)
!17821 = !DILocation(line: 693, column: 27, scope: !17782)
!17822 = !DILocation(line: 694, column: 23, scope: !17782)
!17823 = !DILocation(line: 695, column: 30, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17774, file: !1448, line: 695, column: 30)
!17825 = !DILocation(line: 695, column: 30, scope: !17774)
!17826 = !DILocation(line: 697, column: 25, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17824, file: !1448, line: 696, column: 23)
!17828 = !DILocation(line: 697, column: 25, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17830, file: !1448, line: 697, column: 25)
!17830 = distinct !DILexicalBlock(scope: !17827, file: !1448, line: 697, column: 25)
!17831 = !DILocation(line: 697, column: 25, scope: !17830)
!17832 = !DILocation(line: 698, column: 40, scope: !17827)
!17833 = !DILocation(line: 699, column: 23, scope: !17827)
!17834 = !DILocation(line: 700, column: 25, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17775, file: !1448, line: 700, column: 25)
!17836 = !DILocation(line: 700, column: 33, scope: !17835)
!17837 = !DILocation(line: 700, column: 35, scope: !17835)
!17838 = !DILocation(line: 700, column: 30, scope: !17835)
!17839 = !DILocation(line: 700, column: 25, scope: !17775)
!17840 = !DILocation(line: 701, column: 23, scope: !17835)
!17841 = !DILocation(line: 702, column: 21, scope: !17775)
!17842 = !DILocation(line: 702, column: 21, scope: !17843)
!17843 = distinct !DILexicalBlock(scope: !17844, file: !1448, line: 702, column: 21)
!17844 = distinct !DILexicalBlock(scope: !17775, file: !1448, line: 702, column: 21)
!17845 = !DILocation(line: 702, column: 21, scope: !17844)
!17846 = !DILocation(line: 702, column: 21, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17843, file: !1448, line: 702, column: 21)
!17848 = !DILocation(line: 702, column: 21, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17850, file: !1448, line: 702, column: 21)
!17850 = distinct !DILexicalBlock(scope: !17847, file: !1448, line: 702, column: 21)
!17851 = !DILocation(line: 702, column: 21, scope: !17850)
!17852 = !DILocation(line: 702, column: 21, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17854, file: !1448, line: 702, column: 21)
!17854 = distinct !DILexicalBlock(scope: !17847, file: !1448, line: 702, column: 21)
!17855 = !DILocation(line: 702, column: 21, scope: !17854)
!17856 = !DILocation(line: 703, column: 21, scope: !17775)
!17857 = !DILocation(line: 703, column: 21, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17859, file: !1448, line: 703, column: 21)
!17859 = distinct !DILexicalBlock(scope: !17775, file: !1448, line: 703, column: 21)
!17860 = !DILocation(line: 703, column: 21, scope: !17859)
!17861 = !DILocation(line: 704, column: 25, scope: !17775)
!17862 = !DILocation(line: 704, column: 29, scope: !17775)
!17863 = !DILocation(line: 704, column: 23, scope: !17775)
!17864 = !DILocation(line: 686, column: 17, scope: !17776)
!17865 = distinct !{!17865, !17866, !17867}
!17866 = !DILocation(line: 686, column: 17, scope: !17777)
!17867 = !DILocation(line: 705, column: 19, scope: !17777)
!17868 = !DILocation(line: 707, column: 17, scope: !17767)
!17869 = !DILocation(line: 710, column: 9, scope: !17383)
!17870 = !DILocation(line: 712, column: 16, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 712, column: 11)
!17872 = !DILocation(line: 712, column: 34, scope: !17871)
!17873 = !DILocation(line: 712, column: 37, scope: !17871)
!17874 = !DILocation(line: 712, column: 51, scope: !17871)
!17875 = !DILocation(line: 713, column: 15, scope: !17871)
!17876 = !DILocation(line: 713, column: 18, scope: !17871)
!17877 = !DILocation(line: 714, column: 14, scope: !17871)
!17878 = !DILocation(line: 714, column: 17, scope: !17871)
!17879 = !DILocation(line: 715, column: 14, scope: !17871)
!17880 = !DILocation(line: 715, column: 17, scope: !17871)
!17881 = !DILocation(line: 715, column: 33, scope: !17871)
!17882 = !DILocation(line: 715, column: 35, scope: !17871)
!17883 = !DILocation(line: 715, column: 51, scope: !17871)
!17884 = !DILocation(line: 715, column: 53, scope: !17871)
!17885 = !DILocation(line: 715, column: 47, scope: !17871)
!17886 = !DILocation(line: 715, column: 65, scope: !17871)
!17887 = !DILocation(line: 716, column: 11, scope: !17871)
!17888 = !DILocation(line: 716, column: 15, scope: !17871)
!17889 = !DILocation(line: 712, column: 11, scope: !17329)
!17890 = !DILocation(line: 717, column: 9, scope: !17871)
!17891 = !DILabel(scope: !17329, name: "store_escape", file: !1448, line: 719)
!17892 = !DILocation(line: 719, column: 5, scope: !17329)
!17893 = !DILocation(line: 720, column: 7, scope: !17329)
!17894 = !DILocation(line: 720, column: 7, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17896, file: !1448, line: 720, column: 7)
!17896 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 720, column: 7)
!17897 = !DILocation(line: 720, column: 7, scope: !17896)
!17898 = !DILocation(line: 720, column: 7, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17896, file: !1448, line: 720, column: 7)
!17900 = !DILocation(line: 720, column: 7, scope: !17901)
!17901 = distinct !DILexicalBlock(scope: !17899, file: !1448, line: 720, column: 7)
!17902 = !DILocation(line: 720, column: 7, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17904, file: !1448, line: 720, column: 7)
!17904 = distinct !DILexicalBlock(scope: !17901, file: !1448, line: 720, column: 7)
!17905 = !DILocation(line: 720, column: 7, scope: !17904)
!17906 = !DILocation(line: 720, column: 7, scope: !17907)
!17907 = distinct !DILexicalBlock(scope: !17908, file: !1448, line: 720, column: 7)
!17908 = distinct !DILexicalBlock(scope: !17901, file: !1448, line: 720, column: 7)
!17909 = !DILocation(line: 720, column: 7, scope: !17908)
!17910 = !DILocation(line: 720, column: 7, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17912, file: !1448, line: 720, column: 7)
!17912 = distinct !DILexicalBlock(scope: !17901, file: !1448, line: 720, column: 7)
!17913 = !DILocation(line: 720, column: 7, scope: !17912)
!17914 = !DILocation(line: 720, column: 7, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17916, file: !1448, line: 720, column: 7)
!17916 = distinct !DILexicalBlock(scope: !17896, file: !1448, line: 720, column: 7)
!17917 = !DILocation(line: 720, column: 7, scope: !17916)
!17918 = !DILabel(scope: !17329, name: "store_c", file: !1448, line: 722)
!17919 = !DILocation(line: 722, column: 5, scope: !17329)
!17920 = !DILocation(line: 723, column: 7, scope: !17329)
!17921 = !DILocation(line: 723, column: 7, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17923, file: !1448, line: 723, column: 7)
!17923 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 723, column: 7)
!17924 = !DILocation(line: 723, column: 7, scope: !17923)
!17925 = !DILocation(line: 723, column: 7, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17922, file: !1448, line: 723, column: 7)
!17927 = !DILocation(line: 723, column: 7, scope: !17928)
!17928 = distinct !DILexicalBlock(scope: !17929, file: !1448, line: 723, column: 7)
!17929 = distinct !DILexicalBlock(scope: !17926, file: !1448, line: 723, column: 7)
!17930 = !DILocation(line: 723, column: 7, scope: !17929)
!17931 = !DILocation(line: 723, column: 7, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17933, file: !1448, line: 723, column: 7)
!17933 = distinct !DILexicalBlock(scope: !17926, file: !1448, line: 723, column: 7)
!17934 = !DILocation(line: 723, column: 7, scope: !17933)
!17935 = !DILocation(line: 724, column: 7, scope: !17329)
!17936 = !DILocation(line: 724, column: 7, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17938, file: !1448, line: 724, column: 7)
!17938 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 724, column: 7)
!17939 = !DILocation(line: 724, column: 7, scope: !17938)
!17940 = !DILocation(line: 726, column: 13, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17329, file: !1448, line: 726, column: 11)
!17942 = !DILocation(line: 726, column: 11, scope: !17329)
!17943 = !DILocation(line: 727, column: 38, scope: !17941)
!17944 = !DILocation(line: 727, column: 9, scope: !17941)
!17945 = !DILocation(line: 728, column: 5, scope: !17329)
!17946 = !DILocation(line: 400, column: 75, scope: !17318)
!17947 = !DILocation(line: 400, column: 3, scope: !17318)
!17948 = distinct !{!17948, !17327, !17949}
!17949 = !DILocation(line: 728, column: 5, scope: !17315)
!17950 = !DILocation(line: 730, column: 7, scope: !17951)
!17951 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 730, column: 7)
!17952 = !DILocation(line: 730, column: 11, scope: !17951)
!17953 = !DILocation(line: 730, column: 16, scope: !17951)
!17954 = !DILocation(line: 730, column: 19, scope: !17951)
!17955 = !DILocation(line: 730, column: 33, scope: !17951)
!17956 = !DILocation(line: 731, column: 7, scope: !17951)
!17957 = !DILocation(line: 731, column: 10, scope: !17951)
!17958 = !DILocation(line: 730, column: 7, scope: !17179)
!17959 = !DILocation(line: 732, column: 5, scope: !17951)
!17960 = !DILocation(line: 738, column: 7, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 738, column: 7)
!17962 = !DILocation(line: 738, column: 21, scope: !17961)
!17963 = !DILocation(line: 738, column: 51, scope: !17961)
!17964 = !DILocation(line: 738, column: 56, scope: !17961)
!17965 = !DILocation(line: 739, column: 7, scope: !17961)
!17966 = !DILocation(line: 739, column: 10, scope: !17961)
!17967 = !DILocation(line: 738, column: 7, scope: !17179)
!17968 = !DILocation(line: 741, column: 11, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17970, file: !1448, line: 741, column: 11)
!17970 = distinct !DILexicalBlock(scope: !17961, file: !1448, line: 740, column: 5)
!17971 = !DILocation(line: 741, column: 11, scope: !17970)
!17972 = !DILocation(line: 742, column: 42, scope: !17969)
!17973 = !DILocation(line: 742, column: 50, scope: !17969)
!17974 = !DILocation(line: 742, column: 67, scope: !17969)
!17975 = !DILocation(line: 742, column: 72, scope: !17969)
!17976 = !DILocation(line: 744, column: 42, scope: !17969)
!17977 = !DILocation(line: 744, column: 49, scope: !17969)
!17978 = !DILocation(line: 745, column: 42, scope: !17969)
!17979 = !DILocation(line: 745, column: 54, scope: !17969)
!17980 = !DILocation(line: 742, column: 16, scope: !17969)
!17981 = !DILocation(line: 742, column: 9, scope: !17969)
!17982 = !DILocation(line: 746, column: 18, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17969, file: !1448, line: 746, column: 16)
!17984 = !DILocation(line: 746, column: 29, scope: !17983)
!17985 = !DILocation(line: 746, column: 32, scope: !17983)
!17986 = !DILocation(line: 746, column: 16, scope: !17969)
!17987 = !DILocation(line: 749, column: 24, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17983, file: !1448, line: 747, column: 9)
!17989 = !DILocation(line: 749, column: 22, scope: !17988)
!17990 = !DILocation(line: 750, column: 15, scope: !17988)
!17991 = !DILocation(line: 751, column: 11, scope: !17988)
!17992 = !DILocation(line: 753, column: 5, scope: !17970)
!17993 = !DILocation(line: 755, column: 7, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 755, column: 7)
!17995 = !DILocation(line: 755, column: 20, scope: !17994)
!17996 = !DILocation(line: 755, column: 24, scope: !17994)
!17997 = !DILocation(line: 755, column: 7, scope: !17179)
!17998 = !DILocation(line: 756, column: 5, scope: !17994)
!17999 = !DILocation(line: 756, column: 13, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !18001, file: !1448, line: 756, column: 5)
!18001 = distinct !DILexicalBlock(scope: !17994, file: !1448, line: 756, column: 5)
!18002 = !DILocation(line: 756, column: 12, scope: !18000)
!18003 = !DILocation(line: 756, column: 5, scope: !18001)
!18004 = !DILocation(line: 757, column: 7, scope: !18000)
!18005 = !DILocation(line: 757, column: 7, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !18007, file: !1448, line: 757, column: 7)
!18007 = distinct !DILexicalBlock(scope: !18000, file: !1448, line: 757, column: 7)
!18008 = !DILocation(line: 757, column: 7, scope: !18007)
!18009 = !DILocation(line: 756, column: 39, scope: !18000)
!18010 = !DILocation(line: 756, column: 5, scope: !18000)
!18011 = distinct !{!18011, !18003, !18012}
!18012 = !DILocation(line: 757, column: 7, scope: !18001)
!18013 = !DILocation(line: 759, column: 7, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 759, column: 7)
!18015 = !DILocation(line: 759, column: 13, scope: !18014)
!18016 = !DILocation(line: 759, column: 11, scope: !18014)
!18017 = !DILocation(line: 759, column: 7, scope: !17179)
!18018 = !DILocation(line: 760, column: 5, scope: !18014)
!18019 = !DILocation(line: 760, column: 12, scope: !18014)
!18020 = !DILocation(line: 760, column: 17, scope: !18014)
!18021 = !DILocation(line: 761, column: 10, scope: !17179)
!18022 = !DILocation(line: 761, column: 3, scope: !17179)
!18023 = !DILabel(scope: !17179, name: "force_outer_quoting_style", file: !1448, line: 763)
!18024 = !DILocation(line: 763, column: 2, scope: !17179)
!18025 = !DILocation(line: 766, column: 7, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !17179, file: !1448, line: 766, column: 7)
!18027 = !DILocation(line: 766, column: 21, scope: !18026)
!18028 = !DILocation(line: 766, column: 51, scope: !18026)
!18029 = !DILocation(line: 766, column: 54, scope: !18026)
!18030 = !DILocation(line: 766, column: 7, scope: !17179)
!18031 = !DILocation(line: 767, column: 19, scope: !18026)
!18032 = !DILocation(line: 767, column: 5, scope: !18026)
!18033 = !DILocation(line: 768, column: 36, scope: !17179)
!18034 = !DILocation(line: 768, column: 44, scope: !17179)
!18035 = !DILocation(line: 768, column: 56, scope: !17179)
!18036 = !DILocation(line: 768, column: 61, scope: !17179)
!18037 = !DILocation(line: 769, column: 36, scope: !17179)
!18038 = !DILocation(line: 770, column: 36, scope: !17179)
!18039 = !DILocation(line: 770, column: 42, scope: !17179)
!18040 = !DILocation(line: 771, column: 36, scope: !17179)
!18041 = !DILocation(line: 771, column: 48, scope: !17179)
!18042 = !DILocation(line: 768, column: 10, scope: !17179)
!18043 = !DILocation(line: 768, column: 3, scope: !17179)
!18044 = !DILocation(line: 772, column: 1, scope: !17179)
!18045 = distinct !DISubprogram(name: "gettext_quote", scope: !1448, file: !1448, line: 207, type: !1526, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18046 = !DILocalVariable(name: "msgid", arg: 1, scope: !18045, file: !1448, line: 207, type: !146)
!18047 = !DILocation(line: 207, column: 28, scope: !18045)
!18048 = !DILocalVariable(name: "s", arg: 2, scope: !18045, file: !1448, line: 207, type: !95)
!18049 = !DILocation(line: 207, column: 54, scope: !18045)
!18050 = !DILocalVariable(name: "translation", scope: !18045, file: !1448, line: 209, type: !146)
!18051 = !DILocation(line: 209, column: 15, scope: !18045)
!18052 = !DILocation(line: 209, column: 29, scope: !18045)
!18053 = !DILocalVariable(name: "locale_code", scope: !18045, file: !1448, line: 210, type: !146)
!18054 = !DILocation(line: 210, column: 15, scope: !18045)
!18055 = !DILocation(line: 212, column: 7, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18045, file: !1448, line: 212, column: 7)
!18057 = !DILocation(line: 212, column: 22, scope: !18056)
!18058 = !DILocation(line: 212, column: 19, scope: !18056)
!18059 = !DILocation(line: 212, column: 7, scope: !18045)
!18060 = !DILocation(line: 213, column: 12, scope: !18056)
!18061 = !DILocation(line: 213, column: 5, scope: !18056)
!18062 = !DILocation(line: 233, column: 17, scope: !18045)
!18063 = !DILocation(line: 233, column: 15, scope: !18045)
!18064 = !DILocation(line: 234, column: 7, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18045, file: !1448, line: 234, column: 7)
!18066 = !DILocation(line: 234, column: 7, scope: !18045)
!18067 = !DILocation(line: 235, column: 12, scope: !18065)
!18068 = !DILocation(line: 235, column: 21, scope: !18065)
!18069 = !DILocation(line: 235, column: 5, scope: !18065)
!18070 = !DILocation(line: 236, column: 7, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18045, file: !1448, line: 236, column: 7)
!18072 = !DILocation(line: 236, column: 7, scope: !18045)
!18073 = !DILocation(line: 237, column: 12, scope: !18071)
!18074 = !DILocation(line: 237, column: 21, scope: !18071)
!18075 = !DILocation(line: 237, column: 5, scope: !18071)
!18076 = !DILocation(line: 239, column: 11, scope: !18045)
!18077 = !DILocation(line: 239, column: 13, scope: !18045)
!18078 = !DILocation(line: 239, column: 3, scope: !18045)
!18079 = !DILocation(line: 240, column: 1, scope: !18045)
!18080 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1448, file: !1448, line: 799, type: !1471, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18081 = !DILocalVariable(name: "arg", arg: 1, scope: !18080, file: !1448, line: 799, type: !146)
!18082 = !DILocation(line: 799, column: 29, scope: !18080)
!18083 = !DILocalVariable(name: "argsize", arg: 2, scope: !18080, file: !1448, line: 799, type: !149)
!18084 = !DILocation(line: 799, column: 41, scope: !18080)
!18085 = !DILocalVariable(name: "o", arg: 3, scope: !18080, file: !1448, line: 800, type: !1458)
!18086 = !DILocation(line: 800, column: 47, scope: !18080)
!18087 = !DILocation(line: 802, column: 30, scope: !18080)
!18088 = !DILocation(line: 802, column: 35, scope: !18080)
!18089 = !DILocation(line: 802, column: 50, scope: !18080)
!18090 = !DILocation(line: 802, column: 10, scope: !18080)
!18091 = !DILocation(line: 802, column: 3, scope: !18080)
!18092 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1448, file: !1448, line: 812, type: !1473, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18093 = !DILocalVariable(name: "arg", arg: 1, scope: !18092, file: !1448, line: 812, type: !146)
!18094 = !DILocation(line: 812, column: 33, scope: !18092)
!18095 = !DILocalVariable(name: "argsize", arg: 2, scope: !18092, file: !1448, line: 812, type: !149)
!18096 = !DILocation(line: 812, column: 45, scope: !18092)
!18097 = !DILocalVariable(name: "size", arg: 3, scope: !18092, file: !1448, line: 812, type: !148)
!18098 = !DILocation(line: 812, column: 62, scope: !18092)
!18099 = !DILocalVariable(name: "o", arg: 4, scope: !18092, file: !1448, line: 813, type: !1458)
!18100 = !DILocation(line: 813, column: 51, scope: !18092)
!18101 = !DILocalVariable(name: "p", scope: !18092, file: !1448, line: 815, type: !1458)
!18102 = !DILocation(line: 815, column: 33, scope: !18092)
!18103 = !DILocation(line: 815, column: 37, scope: !18092)
!18104 = !DILocation(line: 815, column: 41, scope: !18092)
!18105 = !DILocalVariable(name: "e", scope: !18092, file: !1448, line: 816, type: !27)
!18106 = !DILocation(line: 816, column: 7, scope: !18092)
!18107 = !DILocation(line: 816, column: 11, scope: !18092)
!18108 = !DILocalVariable(name: "flags", scope: !18092, file: !1448, line: 818, type: !27)
!18109 = !DILocation(line: 818, column: 7, scope: !18092)
!18110 = !DILocation(line: 818, column: 15, scope: !18092)
!18111 = !DILocation(line: 818, column: 18, scope: !18092)
!18112 = !DILocation(line: 818, column: 27, scope: !18092)
!18113 = !DILocation(line: 818, column: 24, scope: !18092)
!18114 = !DILocalVariable(name: "bufsize", scope: !18092, file: !1448, line: 819, type: !149)
!18115 = !DILocation(line: 819, column: 10, scope: !18092)
!18116 = !DILocation(line: 819, column: 52, scope: !18092)
!18117 = !DILocation(line: 819, column: 57, scope: !18092)
!18118 = !DILocation(line: 819, column: 66, scope: !18092)
!18119 = !DILocation(line: 819, column: 69, scope: !18092)
!18120 = !DILocation(line: 820, column: 46, scope: !18092)
!18121 = !DILocation(line: 820, column: 53, scope: !18092)
!18122 = !DILocation(line: 820, column: 56, scope: !18092)
!18123 = !DILocation(line: 821, column: 46, scope: !18092)
!18124 = !DILocation(line: 821, column: 49, scope: !18092)
!18125 = !DILocation(line: 822, column: 46, scope: !18092)
!18126 = !DILocation(line: 822, column: 49, scope: !18092)
!18127 = !DILocation(line: 819, column: 20, scope: !18092)
!18128 = !DILocation(line: 822, column: 62, scope: !18092)
!18129 = !DILocalVariable(name: "buf", scope: !18092, file: !1448, line: 823, type: !143)
!18130 = !DILocation(line: 823, column: 9, scope: !18092)
!18131 = !DILocation(line: 823, column: 27, scope: !18092)
!18132 = !DILocation(line: 823, column: 15, scope: !18092)
!18133 = !DILocation(line: 824, column: 29, scope: !18092)
!18134 = !DILocation(line: 824, column: 34, scope: !18092)
!18135 = !DILocation(line: 824, column: 43, scope: !18092)
!18136 = !DILocation(line: 824, column: 48, scope: !18092)
!18137 = !DILocation(line: 824, column: 57, scope: !18092)
!18138 = !DILocation(line: 824, column: 60, scope: !18092)
!18139 = !DILocation(line: 824, column: 67, scope: !18092)
!18140 = !DILocation(line: 825, column: 29, scope: !18092)
!18141 = !DILocation(line: 825, column: 32, scope: !18092)
!18142 = !DILocation(line: 826, column: 29, scope: !18092)
!18143 = !DILocation(line: 826, column: 32, scope: !18092)
!18144 = !DILocation(line: 826, column: 44, scope: !18092)
!18145 = !DILocation(line: 826, column: 47, scope: !18092)
!18146 = !DILocation(line: 824, column: 3, scope: !18092)
!18147 = !DILocation(line: 827, column: 11, scope: !18092)
!18148 = !DILocation(line: 827, column: 3, scope: !18092)
!18149 = !DILocation(line: 827, column: 9, scope: !18092)
!18150 = !DILocation(line: 828, column: 7, scope: !18151)
!18151 = distinct !DILexicalBlock(scope: !18092, file: !1448, line: 828, column: 7)
!18152 = !DILocation(line: 828, column: 7, scope: !18092)
!18153 = !DILocation(line: 829, column: 13, scope: !18151)
!18154 = !DILocation(line: 829, column: 21, scope: !18151)
!18155 = !DILocation(line: 829, column: 6, scope: !18151)
!18156 = !DILocation(line: 829, column: 11, scope: !18151)
!18157 = !DILocation(line: 829, column: 5, scope: !18151)
!18158 = !DILocation(line: 830, column: 10, scope: !18092)
!18159 = !DILocation(line: 830, column: 3, scope: !18092)
!18160 = distinct !DISubprogram(name: "quotearg_free", scope: !1448, file: !1448, line: 848, type: !336, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18161 = !DILocalVariable(name: "sv", scope: !18160, file: !1448, line: 850, type: !1475)
!18162 = !DILocation(line: 850, column: 19, scope: !18160)
!18163 = !DILocation(line: 850, column: 24, scope: !18160)
!18164 = !DILocalVariable(name: "i", scope: !18160, file: !1448, line: 851, type: !27)
!18165 = !DILocation(line: 851, column: 7, scope: !18160)
!18166 = !DILocation(line: 852, column: 10, scope: !18167)
!18167 = distinct !DILexicalBlock(scope: !18160, file: !1448, line: 852, column: 3)
!18168 = !DILocation(line: 852, column: 8, scope: !18167)
!18169 = !DILocation(line: 852, column: 15, scope: !18170)
!18170 = distinct !DILexicalBlock(scope: !18167, file: !1448, line: 852, column: 3)
!18171 = !DILocation(line: 852, column: 19, scope: !18170)
!18172 = !DILocation(line: 852, column: 17, scope: !18170)
!18173 = !DILocation(line: 852, column: 3, scope: !18167)
!18174 = !DILocation(line: 853, column: 11, scope: !18170)
!18175 = !DILocation(line: 853, column: 14, scope: !18170)
!18176 = !DILocation(line: 853, column: 17, scope: !18170)
!18177 = !{!18178, !2475, i64 8}
!18178 = !{!"slotvec", !2499, i64 0, !2475, i64 8}
!18179 = !DILocation(line: 853, column: 5, scope: !18170)
!18180 = !DILocation(line: 852, column: 28, scope: !18170)
!18181 = !DILocation(line: 852, column: 3, scope: !18170)
!18182 = distinct !{!18182, !18173, !18183}
!18183 = !DILocation(line: 853, column: 20, scope: !18167)
!18184 = !DILocation(line: 854, column: 7, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18160, file: !1448, line: 854, column: 7)
!18186 = !DILocation(line: 854, column: 13, scope: !18185)
!18187 = !DILocation(line: 854, column: 17, scope: !18185)
!18188 = !DILocation(line: 854, column: 7, scope: !18160)
!18189 = !DILocation(line: 856, column: 13, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18185, file: !1448, line: 855, column: 5)
!18191 = !DILocation(line: 856, column: 19, scope: !18190)
!18192 = !DILocation(line: 856, column: 7, scope: !18190)
!18193 = !DILocation(line: 857, column: 21, scope: !18190)
!18194 = !{!18178, !2499, i64 0}
!18195 = !DILocation(line: 858, column: 20, scope: !18190)
!18196 = !DILocation(line: 859, column: 5, scope: !18190)
!18197 = !DILocation(line: 860, column: 7, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18160, file: !1448, line: 860, column: 7)
!18199 = !DILocation(line: 860, column: 10, scope: !18198)
!18200 = !DILocation(line: 860, column: 7, scope: !18160)
!18201 = !DILocation(line: 862, column: 13, scope: !18202)
!18202 = distinct !DILexicalBlock(scope: !18198, file: !1448, line: 861, column: 5)
!18203 = !DILocation(line: 862, column: 7, scope: !18202)
!18204 = !DILocation(line: 863, column: 15, scope: !18202)
!18205 = !DILocation(line: 864, column: 5, scope: !18202)
!18206 = !DILocation(line: 865, column: 10, scope: !18160)
!18207 = !DILocation(line: 866, column: 1, scope: !18160)
!18208 = distinct !DISubprogram(name: "quotearg_n", scope: !1448, file: !1448, line: 931, type: !1480, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18209 = !DILocalVariable(name: "n", arg: 1, scope: !18208, file: !1448, line: 931, type: !27)
!18210 = !DILocation(line: 931, column: 17, scope: !18208)
!18211 = !DILocalVariable(name: "arg", arg: 2, scope: !18208, file: !1448, line: 931, type: !146)
!18212 = !DILocation(line: 931, column: 32, scope: !18208)
!18213 = !DILocation(line: 933, column: 30, scope: !18208)
!18214 = !DILocation(line: 933, column: 33, scope: !18208)
!18215 = !DILocation(line: 933, column: 10, scope: !18208)
!18216 = !DILocation(line: 933, column: 3, scope: !18208)
!18217 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1448, file: !1448, line: 877, type: !1528, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18218 = !DILocalVariable(name: "n", arg: 1, scope: !18217, file: !1448, line: 877, type: !27)
!18219 = !DILocation(line: 877, column: 25, scope: !18217)
!18220 = !DILocalVariable(name: "arg", arg: 2, scope: !18217, file: !1448, line: 877, type: !146)
!18221 = !DILocation(line: 877, column: 40, scope: !18217)
!18222 = !DILocalVariable(name: "argsize", arg: 3, scope: !18217, file: !1448, line: 877, type: !149)
!18223 = !DILocation(line: 877, column: 52, scope: !18217)
!18224 = !DILocalVariable(name: "options", arg: 4, scope: !18217, file: !1448, line: 878, type: !1458)
!18225 = !DILocation(line: 878, column: 51, scope: !18217)
!18226 = !DILocalVariable(name: "e", scope: !18217, file: !1448, line: 880, type: !27)
!18227 = !DILocation(line: 880, column: 7, scope: !18217)
!18228 = !DILocation(line: 880, column: 11, scope: !18217)
!18229 = !DILocalVariable(name: "sv", scope: !18217, file: !1448, line: 882, type: !1475)
!18230 = !DILocation(line: 882, column: 19, scope: !18217)
!18231 = !DILocation(line: 882, column: 24, scope: !18217)
!18232 = !DILocation(line: 884, column: 7, scope: !18233)
!18233 = distinct !DILexicalBlock(scope: !18217, file: !1448, line: 884, column: 7)
!18234 = !DILocation(line: 884, column: 9, scope: !18233)
!18235 = !DILocation(line: 884, column: 7, scope: !18217)
!18236 = !DILocation(line: 885, column: 5, scope: !18233)
!18237 = !DILocation(line: 887, column: 7, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18217, file: !1448, line: 887, column: 7)
!18239 = !DILocation(line: 887, column: 17, scope: !18238)
!18240 = !DILocation(line: 887, column: 14, scope: !18238)
!18241 = !DILocation(line: 887, column: 7, scope: !18217)
!18242 = !DILocalVariable(name: "preallocated", scope: !18243, file: !1448, line: 889, type: !141)
!18243 = distinct !DILexicalBlock(scope: !18238, file: !1448, line: 888, column: 5)
!18244 = !DILocation(line: 889, column: 12, scope: !18243)
!18245 = !DILocation(line: 889, column: 28, scope: !18243)
!18246 = !DILocation(line: 889, column: 31, scope: !18243)
!18247 = !DILocalVariable(name: "nmax", scope: !18243, file: !1448, line: 890, type: !27)
!18248 = !DILocation(line: 890, column: 11, scope: !18243)
!18249 = !DILocation(line: 892, column: 11, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18243, file: !1448, line: 892, column: 11)
!18251 = !DILocation(line: 892, column: 18, scope: !18250)
!18252 = !DILocation(line: 892, column: 16, scope: !18250)
!18253 = !DILocation(line: 892, column: 11, scope: !18243)
!18254 = !DILocation(line: 893, column: 9, scope: !18250)
!18255 = !DILocation(line: 895, column: 32, scope: !18243)
!18256 = !DILocation(line: 895, column: 54, scope: !18243)
!18257 = !DILocation(line: 895, column: 59, scope: !18243)
!18258 = !DILocation(line: 895, column: 61, scope: !18243)
!18259 = !DILocation(line: 895, column: 58, scope: !18243)
!18260 = !DILocation(line: 895, column: 66, scope: !18243)
!18261 = !DILocation(line: 895, column: 22, scope: !18243)
!18262 = !DILocation(line: 895, column: 20, scope: !18243)
!18263 = !DILocation(line: 895, column: 15, scope: !18243)
!18264 = !DILocation(line: 896, column: 11, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18243, file: !1448, line: 896, column: 11)
!18266 = !DILocation(line: 896, column: 11, scope: !18243)
!18267 = !DILocation(line: 897, column: 10, scope: !18265)
!18268 = !DILocation(line: 897, column: 15, scope: !18265)
!18269 = !{i64 0, i64 8, !2611, i64 8, i64 8, !2474}
!18270 = !DILocation(line: 897, column: 9, scope: !18265)
!18271 = !DILocation(line: 898, column: 15, scope: !18243)
!18272 = !DILocation(line: 898, column: 20, scope: !18243)
!18273 = !DILocation(line: 898, column: 18, scope: !18243)
!18274 = !DILocation(line: 898, column: 7, scope: !18243)
!18275 = !DILocation(line: 898, column: 32, scope: !18243)
!18276 = !DILocation(line: 898, column: 34, scope: !18243)
!18277 = !DILocation(line: 898, column: 40, scope: !18243)
!18278 = !DILocation(line: 898, column: 38, scope: !18243)
!18279 = !DILocation(line: 898, column: 31, scope: !18243)
!18280 = !DILocation(line: 898, column: 48, scope: !18243)
!18281 = !DILocation(line: 899, column: 16, scope: !18243)
!18282 = !DILocation(line: 899, column: 18, scope: !18243)
!18283 = !DILocation(line: 899, column: 14, scope: !18243)
!18284 = !DILocation(line: 900, column: 5, scope: !18243)
!18285 = !DILocalVariable(name: "size", scope: !18286, file: !1448, line: 903, type: !149)
!18286 = distinct !DILexicalBlock(scope: !18217, file: !1448, line: 902, column: 3)
!18287 = !DILocation(line: 903, column: 12, scope: !18286)
!18288 = !DILocation(line: 903, column: 19, scope: !18286)
!18289 = !DILocation(line: 903, column: 22, scope: !18286)
!18290 = !DILocation(line: 903, column: 25, scope: !18286)
!18291 = !DILocalVariable(name: "val", scope: !18286, file: !1448, line: 904, type: !143)
!18292 = !DILocation(line: 904, column: 11, scope: !18286)
!18293 = !DILocation(line: 904, column: 17, scope: !18286)
!18294 = !DILocation(line: 904, column: 20, scope: !18286)
!18295 = !DILocation(line: 904, column: 23, scope: !18286)
!18296 = !DILocalVariable(name: "flags", scope: !18286, file: !1448, line: 906, type: !27)
!18297 = !DILocation(line: 906, column: 9, scope: !18286)
!18298 = !DILocation(line: 906, column: 17, scope: !18286)
!18299 = !DILocation(line: 906, column: 26, scope: !18286)
!18300 = !DILocation(line: 906, column: 32, scope: !18286)
!18301 = !DILocalVariable(name: "qsize", scope: !18286, file: !1448, line: 907, type: !149)
!18302 = !DILocation(line: 907, column: 12, scope: !18286)
!18303 = !DILocation(line: 907, column: 46, scope: !18286)
!18304 = !DILocation(line: 907, column: 51, scope: !18286)
!18305 = !DILocation(line: 907, column: 57, scope: !18286)
!18306 = !DILocation(line: 907, column: 62, scope: !18286)
!18307 = !DILocation(line: 908, column: 46, scope: !18286)
!18308 = !DILocation(line: 908, column: 55, scope: !18286)
!18309 = !DILocation(line: 908, column: 62, scope: !18286)
!18310 = !DILocation(line: 909, column: 46, scope: !18286)
!18311 = !DILocation(line: 909, column: 55, scope: !18286)
!18312 = !DILocation(line: 910, column: 46, scope: !18286)
!18313 = !DILocation(line: 910, column: 55, scope: !18286)
!18314 = !DILocation(line: 911, column: 46, scope: !18286)
!18315 = !DILocation(line: 911, column: 55, scope: !18286)
!18316 = !DILocation(line: 907, column: 20, scope: !18286)
!18317 = !DILocation(line: 913, column: 9, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !18286, file: !1448, line: 913, column: 9)
!18319 = !DILocation(line: 913, column: 17, scope: !18318)
!18320 = !DILocation(line: 913, column: 14, scope: !18318)
!18321 = !DILocation(line: 913, column: 9, scope: !18286)
!18322 = !DILocation(line: 915, column: 29, scope: !18323)
!18323 = distinct !DILexicalBlock(scope: !18318, file: !1448, line: 914, column: 7)
!18324 = !DILocation(line: 915, column: 35, scope: !18323)
!18325 = !DILocation(line: 915, column: 27, scope: !18323)
!18326 = !DILocation(line: 915, column: 9, scope: !18323)
!18327 = !DILocation(line: 915, column: 12, scope: !18323)
!18328 = !DILocation(line: 915, column: 15, scope: !18323)
!18329 = !DILocation(line: 915, column: 20, scope: !18323)
!18330 = !DILocation(line: 916, column: 13, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18323, file: !1448, line: 916, column: 13)
!18332 = !DILocation(line: 916, column: 17, scope: !18331)
!18333 = !DILocation(line: 916, column: 13, scope: !18323)
!18334 = !DILocation(line: 917, column: 17, scope: !18331)
!18335 = !DILocation(line: 917, column: 11, scope: !18331)
!18336 = !DILocation(line: 918, column: 39, scope: !18323)
!18337 = !DILocation(line: 918, column: 27, scope: !18323)
!18338 = !DILocation(line: 918, column: 25, scope: !18323)
!18339 = !DILocation(line: 918, column: 9, scope: !18323)
!18340 = !DILocation(line: 918, column: 12, scope: !18323)
!18341 = !DILocation(line: 918, column: 15, scope: !18323)
!18342 = !DILocation(line: 918, column: 19, scope: !18323)
!18343 = !DILocation(line: 919, column: 35, scope: !18323)
!18344 = !DILocation(line: 919, column: 40, scope: !18323)
!18345 = !DILocation(line: 919, column: 46, scope: !18323)
!18346 = !DILocation(line: 919, column: 51, scope: !18323)
!18347 = !DILocation(line: 919, column: 60, scope: !18323)
!18348 = !DILocation(line: 919, column: 69, scope: !18323)
!18349 = !DILocation(line: 920, column: 35, scope: !18323)
!18350 = !DILocation(line: 920, column: 42, scope: !18323)
!18351 = !DILocation(line: 920, column: 51, scope: !18323)
!18352 = !DILocation(line: 921, column: 35, scope: !18323)
!18353 = !DILocation(line: 921, column: 44, scope: !18323)
!18354 = !DILocation(line: 922, column: 35, scope: !18323)
!18355 = !DILocation(line: 922, column: 44, scope: !18323)
!18356 = !DILocation(line: 919, column: 9, scope: !18323)
!18357 = !DILocation(line: 923, column: 7, scope: !18323)
!18358 = !DILocation(line: 925, column: 13, scope: !18286)
!18359 = !DILocation(line: 925, column: 5, scope: !18286)
!18360 = !DILocation(line: 925, column: 11, scope: !18286)
!18361 = !DILocation(line: 926, column: 12, scope: !18286)
!18362 = !DILocation(line: 926, column: 5, scope: !18286)
!18363 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1448, file: !1448, line: 937, type: !1482, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18364 = !DILocalVariable(name: "n", arg: 1, scope: !18363, file: !1448, line: 937, type: !27)
!18365 = !DILocation(line: 937, column: 21, scope: !18363)
!18366 = !DILocalVariable(name: "arg", arg: 2, scope: !18363, file: !1448, line: 937, type: !146)
!18367 = !DILocation(line: 937, column: 36, scope: !18363)
!18368 = !DILocalVariable(name: "argsize", arg: 3, scope: !18363, file: !1448, line: 937, type: !149)
!18369 = !DILocation(line: 937, column: 48, scope: !18363)
!18370 = !DILocation(line: 939, column: 30, scope: !18363)
!18371 = !DILocation(line: 939, column: 33, scope: !18363)
!18372 = !DILocation(line: 939, column: 38, scope: !18363)
!18373 = !DILocation(line: 939, column: 10, scope: !18363)
!18374 = !DILocation(line: 939, column: 3, scope: !18363)
!18375 = distinct !DISubprogram(name: "quotearg", scope: !1448, file: !1448, line: 943, type: !560, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18376 = !DILocalVariable(name: "arg", arg: 1, scope: !18375, file: !1448, line: 943, type: !146)
!18377 = !DILocation(line: 943, column: 23, scope: !18375)
!18378 = !DILocation(line: 945, column: 25, scope: !18375)
!18379 = !DILocation(line: 945, column: 10, scope: !18375)
!18380 = !DILocation(line: 945, column: 3, scope: !18375)
!18381 = distinct !DISubprogram(name: "quotearg_mem", scope: !1448, file: !1448, line: 949, type: !1484, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18382 = !DILocalVariable(name: "arg", arg: 1, scope: !18381, file: !1448, line: 949, type: !146)
!18383 = !DILocation(line: 949, column: 27, scope: !18381)
!18384 = !DILocalVariable(name: "argsize", arg: 2, scope: !18381, file: !1448, line: 949, type: !149)
!18385 = !DILocation(line: 949, column: 39, scope: !18381)
!18386 = !DILocation(line: 951, column: 29, scope: !18381)
!18387 = !DILocation(line: 951, column: 34, scope: !18381)
!18388 = !DILocation(line: 951, column: 10, scope: !18381)
!18389 = !DILocation(line: 951, column: 3, scope: !18381)
!18390 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1448, file: !1448, line: 955, type: !1486, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18391 = !DILocalVariable(name: "n", arg: 1, scope: !18390, file: !1448, line: 955, type: !27)
!18392 = !DILocation(line: 955, column: 23, scope: !18390)
!18393 = !DILocalVariable(name: "s", arg: 2, scope: !18390, file: !1448, line: 955, type: !95)
!18394 = !DILocation(line: 955, column: 45, scope: !18390)
!18395 = !DILocalVariable(name: "arg", arg: 3, scope: !18390, file: !1448, line: 955, type: !146)
!18396 = !DILocation(line: 955, column: 60, scope: !18390)
!18397 = !DILocalVariable(name: "o", scope: !18390, file: !1448, line: 957, type: !1459)
!18398 = !DILocation(line: 957, column: 32, scope: !18390)
!18399 = !DILocation(line: 957, column: 64, scope: !18390)
!18400 = !DILocation(line: 957, column: 36, scope: !18390)
!18401 = !DILocation(line: 958, column: 30, scope: !18390)
!18402 = !DILocation(line: 958, column: 33, scope: !18390)
!18403 = !DILocation(line: 958, column: 10, scope: !18390)
!18404 = !DILocation(line: 958, column: 3, scope: !18390)
!18405 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1448, file: !1448, line: 193, type: !1530, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18406 = !DILocalVariable(name: "style", arg: 1, scope: !18405, file: !1448, line: 193, type: !95)
!18407 = !DILocation(line: 193, column: 48, scope: !18405)
!18408 = !DILocalVariable(name: "o", scope: !18405, file: !1448, line: 195, type: !1447)
!18409 = !DILocation(line: 195, column: 26, scope: !18405)
!18410 = !DILocation(line: 196, column: 7, scope: !18411)
!18411 = distinct !DILexicalBlock(scope: !18405, file: !1448, line: 196, column: 7)
!18412 = !DILocation(line: 196, column: 13, scope: !18411)
!18413 = !DILocation(line: 196, column: 7, scope: !18405)
!18414 = !DILocation(line: 197, column: 5, scope: !18411)
!18415 = !DILocation(line: 198, column: 13, scope: !18405)
!18416 = !DILocation(line: 198, column: 5, scope: !18405)
!18417 = !DILocation(line: 198, column: 11, scope: !18405)
!18418 = !DILocation(line: 199, column: 3, scope: !18405)
!18419 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1448, file: !1448, line: 962, type: !1488, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18420 = !DILocalVariable(name: "n", arg: 1, scope: !18419, file: !1448, line: 962, type: !27)
!18421 = !DILocation(line: 962, column: 27, scope: !18419)
!18422 = !DILocalVariable(name: "s", arg: 2, scope: !18419, file: !1448, line: 962, type: !95)
!18423 = !DILocation(line: 962, column: 49, scope: !18419)
!18424 = !DILocalVariable(name: "arg", arg: 3, scope: !18419, file: !1448, line: 963, type: !146)
!18425 = !DILocation(line: 963, column: 35, scope: !18419)
!18426 = !DILocalVariable(name: "argsize", arg: 4, scope: !18419, file: !1448, line: 963, type: !149)
!18427 = !DILocation(line: 963, column: 47, scope: !18419)
!18428 = !DILocalVariable(name: "o", scope: !18419, file: !1448, line: 965, type: !1459)
!18429 = !DILocation(line: 965, column: 32, scope: !18419)
!18430 = !DILocation(line: 965, column: 64, scope: !18419)
!18431 = !DILocation(line: 965, column: 36, scope: !18419)
!18432 = !DILocation(line: 966, column: 30, scope: !18419)
!18433 = !DILocation(line: 966, column: 33, scope: !18419)
!18434 = !DILocation(line: 966, column: 38, scope: !18419)
!18435 = !DILocation(line: 966, column: 10, scope: !18419)
!18436 = !DILocation(line: 966, column: 3, scope: !18419)
!18437 = distinct !DISubprogram(name: "quotearg_style", scope: !1448, file: !1448, line: 970, type: !1490, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18438 = !DILocalVariable(name: "s", arg: 1, scope: !18437, file: !1448, line: 970, type: !95)
!18439 = !DILocation(line: 970, column: 36, scope: !18437)
!18440 = !DILocalVariable(name: "arg", arg: 2, scope: !18437, file: !1448, line: 970, type: !146)
!18441 = !DILocation(line: 970, column: 51, scope: !18437)
!18442 = !DILocation(line: 972, column: 31, scope: !18437)
!18443 = !DILocation(line: 972, column: 34, scope: !18437)
!18444 = !DILocation(line: 972, column: 10, scope: !18437)
!18445 = !DILocation(line: 972, column: 3, scope: !18437)
!18446 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1448, file: !1448, line: 976, type: !1492, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18447 = !DILocalVariable(name: "s", arg: 1, scope: !18446, file: !1448, line: 976, type: !95)
!18448 = !DILocation(line: 976, column: 40, scope: !18446)
!18449 = !DILocalVariable(name: "arg", arg: 2, scope: !18446, file: !1448, line: 976, type: !146)
!18450 = !DILocation(line: 976, column: 55, scope: !18446)
!18451 = !DILocalVariable(name: "argsize", arg: 3, scope: !18446, file: !1448, line: 976, type: !149)
!18452 = !DILocation(line: 976, column: 67, scope: !18446)
!18453 = !DILocation(line: 978, column: 35, scope: !18446)
!18454 = !DILocation(line: 978, column: 38, scope: !18446)
!18455 = !DILocation(line: 978, column: 43, scope: !18446)
!18456 = !DILocation(line: 978, column: 10, scope: !18446)
!18457 = !DILocation(line: 978, column: 3, scope: !18446)
!18458 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1448, file: !1448, line: 982, type: !1494, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18459 = !DILocalVariable(name: "arg", arg: 1, scope: !18458, file: !1448, line: 982, type: !146)
!18460 = !DILocation(line: 982, column: 32, scope: !18458)
!18461 = !DILocalVariable(name: "argsize", arg: 2, scope: !18458, file: !1448, line: 982, type: !149)
!18462 = !DILocation(line: 982, column: 44, scope: !18458)
!18463 = !DILocalVariable(name: "ch", arg: 3, scope: !18458, file: !1448, line: 982, type: !144)
!18464 = !DILocation(line: 982, column: 58, scope: !18458)
!18465 = !DILocalVariable(name: "options", scope: !18458, file: !1448, line: 984, type: !1447)
!18466 = !DILocation(line: 984, column: 26, scope: !18458)
!18467 = !DILocation(line: 985, column: 13, scope: !18458)
!18468 = !{i64 0, i64 4, !2529, i64 4, i64 4, !2468, i64 8, i64 32, !2529, i64 40, i64 8, !2474, i64 48, i64 8, !2474}
!18469 = !DILocation(line: 986, column: 31, scope: !18458)
!18470 = !DILocation(line: 986, column: 3, scope: !18458)
!18471 = !DILocation(line: 987, column: 33, scope: !18458)
!18472 = !DILocation(line: 987, column: 38, scope: !18458)
!18473 = !DILocation(line: 987, column: 10, scope: !18458)
!18474 = !DILocation(line: 987, column: 3, scope: !18458)
!18475 = distinct !DISubprogram(name: "quotearg_char", scope: !1448, file: !1448, line: 991, type: !1496, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18476 = !DILocalVariable(name: "arg", arg: 1, scope: !18475, file: !1448, line: 991, type: !146)
!18477 = !DILocation(line: 991, column: 28, scope: !18475)
!18478 = !DILocalVariable(name: "ch", arg: 2, scope: !18475, file: !1448, line: 991, type: !144)
!18479 = !DILocation(line: 991, column: 38, scope: !18475)
!18480 = !DILocation(line: 993, column: 29, scope: !18475)
!18481 = !DILocation(line: 993, column: 44, scope: !18475)
!18482 = !DILocation(line: 993, column: 10, scope: !18475)
!18483 = !DILocation(line: 993, column: 3, scope: !18475)
!18484 = distinct !DISubprogram(name: "quotearg_colon", scope: !1448, file: !1448, line: 997, type: !560, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18485 = !DILocalVariable(name: "arg", arg: 1, scope: !18484, file: !1448, line: 997, type: !146)
!18486 = !DILocation(line: 997, column: 29, scope: !18484)
!18487 = !DILocation(line: 999, column: 25, scope: !18484)
!18488 = !DILocation(line: 999, column: 10, scope: !18484)
!18489 = !DILocation(line: 999, column: 3, scope: !18484)
!18490 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1448, file: !1448, line: 1003, type: !1484, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18491 = !DILocalVariable(name: "arg", arg: 1, scope: !18490, file: !1448, line: 1003, type: !146)
!18492 = !DILocation(line: 1003, column: 33, scope: !18490)
!18493 = !DILocalVariable(name: "argsize", arg: 2, scope: !18490, file: !1448, line: 1003, type: !149)
!18494 = !DILocation(line: 1003, column: 45, scope: !18490)
!18495 = !DILocation(line: 1005, column: 29, scope: !18490)
!18496 = !DILocation(line: 1005, column: 34, scope: !18490)
!18497 = !DILocation(line: 1005, column: 10, scope: !18490)
!18498 = !DILocation(line: 1005, column: 3, scope: !18490)
!18499 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1448, file: !1448, line: 1009, type: !1486, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18500 = !DILocalVariable(name: "n", arg: 1, scope: !18499, file: !1448, line: 1009, type: !27)
!18501 = !DILocation(line: 1009, column: 29, scope: !18499)
!18502 = !DILocalVariable(name: "s", arg: 2, scope: !18499, file: !1448, line: 1009, type: !95)
!18503 = !DILocation(line: 1009, column: 51, scope: !18499)
!18504 = !DILocalVariable(name: "arg", arg: 3, scope: !18499, file: !1448, line: 1009, type: !146)
!18505 = !DILocation(line: 1009, column: 66, scope: !18499)
!18506 = !DILocalVariable(name: "options", scope: !18499, file: !1448, line: 1011, type: !1447)
!18507 = !DILocation(line: 1011, column: 26, scope: !18499)
!18508 = !DILocation(line: 1012, column: 41, scope: !18499)
!18509 = !DILocation(line: 1012, column: 13, scope: !18499)
!18510 = !DILocation(line: 1013, column: 3, scope: !18499)
!18511 = !DILocation(line: 1014, column: 30, scope: !18499)
!18512 = !DILocation(line: 1014, column: 33, scope: !18499)
!18513 = !DILocation(line: 1014, column: 10, scope: !18499)
!18514 = !DILocation(line: 1014, column: 3, scope: !18499)
!18515 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1448, file: !1448, line: 1018, type: !1498, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18516 = !DILocalVariable(name: "n", arg: 1, scope: !18515, file: !1448, line: 1018, type: !27)
!18517 = !DILocation(line: 1018, column: 24, scope: !18515)
!18518 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18515, file: !1448, line: 1018, type: !146)
!18519 = !DILocation(line: 1018, column: 39, scope: !18515)
!18520 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18515, file: !1448, line: 1019, type: !146)
!18521 = !DILocation(line: 1019, column: 32, scope: !18515)
!18522 = !DILocalVariable(name: "arg", arg: 4, scope: !18515, file: !1448, line: 1019, type: !146)
!18523 = !DILocation(line: 1019, column: 57, scope: !18515)
!18524 = !DILocation(line: 1021, column: 33, scope: !18515)
!18525 = !DILocation(line: 1021, column: 36, scope: !18515)
!18526 = !DILocation(line: 1021, column: 48, scope: !18515)
!18527 = !DILocation(line: 1021, column: 61, scope: !18515)
!18528 = !DILocation(line: 1021, column: 10, scope: !18515)
!18529 = !DILocation(line: 1021, column: 3, scope: !18515)
!18530 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1448, file: !1448, line: 1026, type: !1500, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18531 = !DILocalVariable(name: "n", arg: 1, scope: !18530, file: !1448, line: 1026, type: !27)
!18532 = !DILocation(line: 1026, column: 28, scope: !18530)
!18533 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18530, file: !1448, line: 1026, type: !146)
!18534 = !DILocation(line: 1026, column: 43, scope: !18530)
!18535 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18530, file: !1448, line: 1027, type: !146)
!18536 = !DILocation(line: 1027, column: 36, scope: !18530)
!18537 = !DILocalVariable(name: "arg", arg: 4, scope: !18530, file: !1448, line: 1028, type: !146)
!18538 = !DILocation(line: 1028, column: 36, scope: !18530)
!18539 = !DILocalVariable(name: "argsize", arg: 5, scope: !18530, file: !1448, line: 1028, type: !149)
!18540 = !DILocation(line: 1028, column: 48, scope: !18530)
!18541 = !DILocalVariable(name: "o", scope: !18530, file: !1448, line: 1030, type: !1447)
!18542 = !DILocation(line: 1030, column: 26, scope: !18530)
!18543 = !DILocation(line: 1030, column: 30, scope: !18530)
!18544 = !DILocation(line: 1031, column: 27, scope: !18530)
!18545 = !DILocation(line: 1031, column: 39, scope: !18530)
!18546 = !DILocation(line: 1031, column: 3, scope: !18530)
!18547 = !DILocation(line: 1032, column: 30, scope: !18530)
!18548 = !DILocation(line: 1032, column: 33, scope: !18530)
!18549 = !DILocation(line: 1032, column: 38, scope: !18530)
!18550 = !DILocation(line: 1032, column: 10, scope: !18530)
!18551 = !DILocation(line: 1032, column: 3, scope: !18530)
!18552 = distinct !DISubprogram(name: "quotearg_custom", scope: !1448, file: !1448, line: 1036, type: !1502, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18553 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18552, file: !1448, line: 1036, type: !146)
!18554 = !DILocation(line: 1036, column: 30, scope: !18552)
!18555 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18552, file: !1448, line: 1036, type: !146)
!18556 = !DILocation(line: 1036, column: 54, scope: !18552)
!18557 = !DILocalVariable(name: "arg", arg: 3, scope: !18552, file: !1448, line: 1037, type: !146)
!18558 = !DILocation(line: 1037, column: 30, scope: !18552)
!18559 = !DILocation(line: 1039, column: 32, scope: !18552)
!18560 = !DILocation(line: 1039, column: 44, scope: !18552)
!18561 = !DILocation(line: 1039, column: 57, scope: !18552)
!18562 = !DILocation(line: 1039, column: 10, scope: !18552)
!18563 = !DILocation(line: 1039, column: 3, scope: !18552)
!18564 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1448, file: !1448, line: 1043, type: !1504, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18565 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18564, file: !1448, line: 1043, type: !146)
!18566 = !DILocation(line: 1043, column: 34, scope: !18564)
!18567 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18564, file: !1448, line: 1043, type: !146)
!18568 = !DILocation(line: 1043, column: 58, scope: !18564)
!18569 = !DILocalVariable(name: "arg", arg: 3, scope: !18564, file: !1448, line: 1044, type: !146)
!18570 = !DILocation(line: 1044, column: 34, scope: !18564)
!18571 = !DILocalVariable(name: "argsize", arg: 4, scope: !18564, file: !1448, line: 1044, type: !149)
!18572 = !DILocation(line: 1044, column: 46, scope: !18564)
!18573 = !DILocation(line: 1046, column: 36, scope: !18564)
!18574 = !DILocation(line: 1046, column: 48, scope: !18564)
!18575 = !DILocation(line: 1046, column: 61, scope: !18564)
!18576 = !DILocation(line: 1047, column: 33, scope: !18564)
!18577 = !DILocation(line: 1046, column: 10, scope: !18564)
!18578 = !DILocation(line: 1046, column: 3, scope: !18564)
!18579 = distinct !DISubprogram(name: "quote_n_mem", scope: !1448, file: !1448, line: 1061, type: !1506, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18580 = !DILocalVariable(name: "n", arg: 1, scope: !18579, file: !1448, line: 1061, type: !27)
!18581 = !DILocation(line: 1061, column: 18, scope: !18579)
!18582 = !DILocalVariable(name: "arg", arg: 2, scope: !18579, file: !1448, line: 1061, type: !146)
!18583 = !DILocation(line: 1061, column: 33, scope: !18579)
!18584 = !DILocalVariable(name: "argsize", arg: 3, scope: !18579, file: !1448, line: 1061, type: !149)
!18585 = !DILocation(line: 1061, column: 45, scope: !18579)
!18586 = !DILocation(line: 1063, column: 30, scope: !18579)
!18587 = !DILocation(line: 1063, column: 33, scope: !18579)
!18588 = !DILocation(line: 1063, column: 38, scope: !18579)
!18589 = !DILocation(line: 1063, column: 10, scope: !18579)
!18590 = !DILocation(line: 1063, column: 3, scope: !18579)
!18591 = distinct !DISubprogram(name: "quote_mem", scope: !1448, file: !1448, line: 1067, type: !1508, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18592 = !DILocalVariable(name: "arg", arg: 1, scope: !18591, file: !1448, line: 1067, type: !146)
!18593 = !DILocation(line: 1067, column: 24, scope: !18591)
!18594 = !DILocalVariable(name: "argsize", arg: 2, scope: !18591, file: !1448, line: 1067, type: !149)
!18595 = !DILocation(line: 1067, column: 36, scope: !18591)
!18596 = !DILocation(line: 1069, column: 26, scope: !18591)
!18597 = !DILocation(line: 1069, column: 31, scope: !18591)
!18598 = !DILocation(line: 1069, column: 10, scope: !18591)
!18599 = !DILocation(line: 1069, column: 3, scope: !18591)
!18600 = distinct !DISubprogram(name: "quote_n", scope: !1448, file: !1448, line: 1073, type: !1510, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18601 = !DILocalVariable(name: "n", arg: 1, scope: !18600, file: !1448, line: 1073, type: !27)
!18602 = !DILocation(line: 1073, column: 14, scope: !18600)
!18603 = !DILocalVariable(name: "arg", arg: 2, scope: !18600, file: !1448, line: 1073, type: !146)
!18604 = !DILocation(line: 1073, column: 29, scope: !18600)
!18605 = !DILocation(line: 1075, column: 23, scope: !18600)
!18606 = !DILocation(line: 1075, column: 26, scope: !18600)
!18607 = !DILocation(line: 1075, column: 10, scope: !18600)
!18608 = !DILocation(line: 1075, column: 3, scope: !18600)
!18609 = distinct !DISubprogram(name: "quote", scope: !1448, file: !1448, line: 1079, type: !567, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1438, retainedNodes: !152)
!18610 = !DILocalVariable(name: "arg", arg: 1, scope: !18609, file: !1448, line: 1079, type: !146)
!18611 = !DILocation(line: 1079, column: 20, scope: !18609)
!18612 = !DILocation(line: 1081, column: 22, scope: !18609)
!18613 = !DILocation(line: 1081, column: 10, scope: !18609)
!18614 = !DILocation(line: 1081, column: 3, scope: !18609)
!18615 = distinct !DISubprogram(name: "same_name", scope: !18616, file: !18616, line: 61, type: !1958, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !152)
!18616 = !DIFile(filename: "lib/same.c", directory: "/home/mohamad/clone/coreutils")
!18617 = !DILocalVariable(name: "source", arg: 1, scope: !18615, file: !18616, line: 61, type: !146)
!18618 = !DILocation(line: 61, column: 24, scope: !18615)
!18619 = !DILocalVariable(name: "dest", arg: 2, scope: !18615, file: !18616, line: 61, type: !146)
!18620 = !DILocation(line: 61, column: 44, scope: !18615)
!18621 = !DILocation(line: 63, column: 33, scope: !18615)
!18622 = !DILocation(line: 63, column: 51, scope: !18615)
!18623 = !DILocation(line: 63, column: 10, scope: !18615)
!18624 = !DILocation(line: 63, column: 3, scope: !18615)
!18625 = distinct !DISubprogram(name: "same_nameat", scope: !18616, file: !18616, line: 70, type: !1960, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1955, retainedNodes: !152)
!18626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !191, line: 46, size: 1152, elements: !18627)
!18627 = !{!18628, !18629, !18630, !18631, !18632, !18633, !18634, !18635, !18636, !18637, !18638, !18639, !18644, !18645, !18646}
!18628 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !18626, file: !191, line: 48, baseType: !194, size: 64)
!18629 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !18626, file: !191, line: 53, baseType: !196, size: 64, offset: 64)
!18630 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !18626, file: !191, line: 61, baseType: !198, size: 64, offset: 128)
!18631 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !18626, file: !191, line: 62, baseType: !200, size: 32, offset: 192)
!18632 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !18626, file: !191, line: 64, baseType: !202, size: 32, offset: 224)
!18633 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !18626, file: !191, line: 65, baseType: !204, size: 32, offset: 256)
!18634 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !18626, file: !191, line: 67, baseType: !27, size: 32, offset: 288)
!18635 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !18626, file: !191, line: 69, baseType: !194, size: 64, offset: 320)
!18636 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !18626, file: !191, line: 74, baseType: !180, size: 64, offset: 384)
!18637 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !18626, file: !191, line: 78, baseType: !209, size: 64, offset: 448)
!18638 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !18626, file: !191, line: 80, baseType: !211, size: 64, offset: 512)
!18639 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !18626, file: !191, line: 91, baseType: !18640, size: 128, offset: 576)
!18640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !163, line: 120, size: 128, elements: !18641)
!18641 = !{!18642, !18643}
!18642 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !18640, file: !163, line: 122, baseType: !164, size: 64)
!18643 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !18640, file: !163, line: 123, baseType: !217, size: 64, offset: 64)
!18644 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !18626, file: !191, line: 92, baseType: !18640, size: 128, offset: 704)
!18645 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !18626, file: !191, line: 93, baseType: !18640, size: 128, offset: 832)
!18646 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !18626, file: !191, line: 106, baseType: !221, size: 192, offset: 960)
!18647 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !18625, file: !18616, line: 70, type: !27)
!18648 = !DILocation(line: 70, column: 18, scope: !18625)
!18649 = !DILocalVariable(name: "source", arg: 2, scope: !18625, file: !18616, line: 70, type: !146)
!18650 = !DILocation(line: 70, column: 42, scope: !18625)
!18651 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !18625, file: !18616, line: 71, type: !27)
!18652 = !DILocation(line: 71, column: 18, scope: !18625)
!18653 = !DILocalVariable(name: "dest", arg: 4, scope: !18625, file: !18616, line: 71, type: !146)
!18654 = !DILocation(line: 71, column: 40, scope: !18625)
!18655 = !DILocalVariable(name: "source_basename", scope: !18625, file: !18616, line: 74, type: !146)
!18656 = !DILocation(line: 74, column: 15, scope: !18625)
!18657 = !DILocation(line: 74, column: 49, scope: !18625)
!18658 = !DILocation(line: 74, column: 33, scope: !18625)
!18659 = !DILocalVariable(name: "dest_basename", scope: !18625, file: !18616, line: 75, type: !146)
!18660 = !DILocation(line: 75, column: 15, scope: !18625)
!18661 = !DILocation(line: 75, column: 47, scope: !18625)
!18662 = !DILocation(line: 75, column: 31, scope: !18625)
!18663 = !DILocalVariable(name: "source_baselen", scope: !18625, file: !18616, line: 76, type: !149)
!18664 = !DILocation(line: 76, column: 10, scope: !18625)
!18665 = !DILocation(line: 76, column: 37, scope: !18625)
!18666 = !DILocation(line: 76, column: 27, scope: !18625)
!18667 = !DILocalVariable(name: "dest_baselen", scope: !18625, file: !18616, line: 77, type: !149)
!18668 = !DILocation(line: 77, column: 10, scope: !18625)
!18669 = !DILocation(line: 77, column: 35, scope: !18625)
!18670 = !DILocation(line: 77, column: 25, scope: !18625)
!18671 = !DILocalVariable(name: "identical_basenames", scope: !18625, file: !18616, line: 78, type: !141)
!18672 = !DILocation(line: 78, column: 8, scope: !18625)
!18673 = !DILocation(line: 79, column: 6, scope: !18625)
!18674 = !DILocation(line: 79, column: 24, scope: !18625)
!18675 = !DILocation(line: 79, column: 21, scope: !18625)
!18676 = !DILocation(line: 80, column: 6, scope: !18625)
!18677 = !DILocation(line: 80, column: 17, scope: !18625)
!18678 = !DILocation(line: 80, column: 34, scope: !18625)
!18679 = !DILocation(line: 80, column: 49, scope: !18625)
!18680 = !DILocation(line: 80, column: 9, scope: !18625)
!18681 = !DILocation(line: 80, column: 63, scope: !18625)
!18682 = !DILocation(line: 0, scope: !18625)
!18683 = !DILocalVariable(name: "compare_dirs", scope: !18625, file: !18616, line: 81, type: !141)
!18684 = !DILocation(line: 81, column: 8, scope: !18625)
!18685 = !DILocation(line: 81, column: 23, scope: !18625)
!18686 = !DILocalVariable(name: "same", scope: !18625, file: !18616, line: 82, type: !141)
!18687 = !DILocation(line: 82, column: 8, scope: !18625)
!18688 = !DILocation(line: 92, column: 7, scope: !18689)
!18689 = distinct !DILexicalBlock(scope: !18625, file: !18616, line: 92, column: 7)
!18690 = !DILocation(line: 92, column: 7, scope: !18625)
!18691 = !DILocalVariable(name: "source_dir_stats", scope: !18692, file: !18616, line: 94, type: !18626)
!18692 = distinct !DILexicalBlock(scope: !18689, file: !18616, line: 93, column: 5)
!18693 = !DILocation(line: 94, column: 19, scope: !18692)
!18694 = !DILocalVariable(name: "dest_dir_stats", scope: !18692, file: !18616, line: 95, type: !18626)
!18695 = !DILocation(line: 95, column: 19, scope: !18692)
!18696 = !DILocalVariable(name: "source_dirname", scope: !18692, file: !18616, line: 98, type: !143)
!18697 = !DILocation(line: 98, column: 13, scope: !18692)
!18698 = !DILocation(line: 98, column: 40, scope: !18692)
!18699 = !DILocation(line: 98, column: 30, scope: !18692)
!18700 = !DILocalVariable(name: "flags", scope: !18692, file: !18616, line: 99, type: !27)
!18701 = !DILocation(line: 99, column: 11, scope: !18692)
!18702 = !DILocation(line: 100, column: 20, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18692, file: !18616, line: 100, column: 11)
!18704 = !DILocation(line: 100, column: 32, scope: !18703)
!18705 = !DILocation(line: 100, column: 67, scope: !18703)
!18706 = !DILocation(line: 100, column: 11, scope: !18703)
!18707 = !DILocation(line: 100, column: 74, scope: !18703)
!18708 = !DILocation(line: 100, column: 11, scope: !18692)
!18709 = !DILocation(line: 103, column: 21, scope: !18710)
!18710 = distinct !DILexicalBlock(scope: !18703, file: !18616, line: 101, column: 9)
!18711 = !DILocation(line: 103, column: 34, scope: !18710)
!18712 = !DILocation(line: 103, column: 11, scope: !18710)
!18713 = !DILocation(line: 104, column: 9, scope: !18710)
!18714 = !DILocation(line: 105, column: 13, scope: !18692)
!18715 = !DILocation(line: 105, column: 7, scope: !18692)
!18716 = !DILocalVariable(name: "dest_dirname", scope: !18692, file: !18616, line: 107, type: !143)
!18717 = !DILocation(line: 107, column: 13, scope: !18692)
!18718 = !DILocation(line: 107, column: 38, scope: !18692)
!18719 = !DILocation(line: 107, column: 28, scope: !18692)
!18720 = !DILocation(line: 137, column: 20, scope: !18721)
!18721 = distinct !DILexicalBlock(scope: !18692, file: !18616, line: 137, column: 11)
!18722 = !DILocation(line: 137, column: 30, scope: !18721)
!18723 = !DILocation(line: 137, column: 61, scope: !18721)
!18724 = !DILocation(line: 137, column: 11, scope: !18721)
!18725 = !DILocation(line: 137, column: 68, scope: !18721)
!18726 = !DILocation(line: 137, column: 11, scope: !18692)
!18727 = !DILocation(line: 140, column: 21, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18721, file: !18616, line: 138, column: 9)
!18729 = !DILocation(line: 140, column: 34, scope: !18728)
!18730 = !DILocation(line: 140, column: 11, scope: !18728)
!18731 = !DILocation(line: 141, column: 9, scope: !18728)
!18732 = !DILocation(line: 142, column: 14, scope: !18692)
!18733 = !DILocation(line: 0, scope: !18692)
!18734 = !DILocation(line: 142, column: 12, scope: !18692)
!18735 = !DILocation(line: 145, column: 13, scope: !18692)
!18736 = !DILocation(line: 145, column: 7, scope: !18692)
!18737 = !DILocation(line: 146, column: 5, scope: !18692)
!18738 = !DILocation(line: 148, column: 10, scope: !18625)
!18739 = !DILocation(line: 148, column: 3, scope: !18625)
!18740 = distinct !DISubprogram(name: "getcon", scope: !1969, file: !1969, line: 87, type: !1965, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18741 = !DILocalVariable(name: "con", arg: 1, scope: !18740, file: !1969, line: 87, type: !1967)
!18742 = !DILocation(line: 87, column: 29, scope: !18740)
!18743 = !DILocation(line: 88, column: 5, scope: !18740)
!18744 = !DILocation(line: 88, column: 11, scope: !18740)
!18745 = !DILocation(line: 88, column: 22, scope: !18740)
!18746 = distinct !DISubprogram(name: "freecon", scope: !1969, file: !1969, line: 90, type: !1970, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18747 = !DILocalVariable(name: "con", arg: 1, scope: !18746, file: !1969, line: 90, type: !1968)
!18748 = !DILocation(line: 90, column: 29, scope: !18746)
!18749 = !DILocation(line: 90, column: 56, scope: !18746)
!18750 = distinct !DISubprogram(name: "getfscreatecon", scope: !1969, file: !1969, line: 93, type: !1965, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18751 = !DILocalVariable(name: "con", arg: 1, scope: !18750, file: !1969, line: 93, type: !1967)
!18752 = !DILocation(line: 93, column: 37, scope: !18750)
!18753 = !DILocation(line: 94, column: 5, scope: !18750)
!18754 = !DILocation(line: 94, column: 11, scope: !18750)
!18755 = !DILocation(line: 94, column: 22, scope: !18750)
!18756 = distinct !DISubprogram(name: "setfscreatecon", scope: !1969, file: !1969, line: 96, type: !1972, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18757 = !DILocalVariable(name: "con", arg: 1, scope: !18756, file: !1969, line: 96, type: !1968)
!18758 = !DILocation(line: 96, column: 36, scope: !18756)
!18759 = !DILocation(line: 97, column: 5, scope: !18756)
!18760 = !DILocation(line: 97, column: 11, scope: !18756)
!18761 = !DILocation(line: 97, column: 22, scope: !18756)
!18762 = distinct !DISubprogram(name: "matchpathcon", scope: !1969, file: !1969, line: 99, type: !1974, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18763 = !DILocalVariable(name: "file", arg: 1, scope: !18762, file: !1969, line: 99, type: !146)
!18764 = !DILocation(line: 99, column: 27, scope: !18762)
!18765 = !DILocalVariable(name: "m", arg: 2, scope: !18762, file: !1969, line: 100, type: !226)
!18766 = !DILocation(line: 100, column: 22, scope: !18762)
!18767 = !DILocalVariable(name: "con", arg: 3, scope: !18762, file: !1969, line: 101, type: !1967)
!18768 = !DILocation(line: 101, column: 23, scope: !18762)
!18769 = !DILocation(line: 102, column: 5, scope: !18762)
!18770 = !DILocation(line: 102, column: 11, scope: !18762)
!18771 = !DILocation(line: 102, column: 22, scope: !18762)
!18772 = distinct !DISubprogram(name: "getfilecon", scope: !1969, file: !1969, line: 104, type: !1976, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18773 = !DILocalVariable(name: "file", arg: 1, scope: !18772, file: !1969, line: 104, type: !146)
!18774 = !DILocation(line: 104, column: 25, scope: !18772)
!18775 = !DILocalVariable(name: "con", arg: 2, scope: !18772, file: !1969, line: 105, type: !1967)
!18776 = !DILocation(line: 105, column: 33, scope: !18772)
!18777 = !DILocation(line: 106, column: 5, scope: !18772)
!18778 = !DILocation(line: 106, column: 11, scope: !18772)
!18779 = !DILocation(line: 106, column: 22, scope: !18772)
!18780 = distinct !DISubprogram(name: "lgetfilecon", scope: !1969, file: !1969, line: 108, type: !1976, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18781 = !DILocalVariable(name: "file", arg: 1, scope: !18780, file: !1969, line: 108, type: !146)
!18782 = !DILocation(line: 108, column: 26, scope: !18780)
!18783 = !DILocalVariable(name: "con", arg: 2, scope: !18780, file: !1969, line: 109, type: !1967)
!18784 = !DILocation(line: 109, column: 34, scope: !18780)
!18785 = !DILocation(line: 110, column: 5, scope: !18780)
!18786 = !DILocation(line: 110, column: 11, scope: !18780)
!18787 = !DILocation(line: 110, column: 22, scope: !18780)
!18788 = distinct !DISubprogram(name: "fgetfilecon", scope: !1969, file: !1969, line: 112, type: !1978, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18789 = !DILocalVariable(name: "fd", arg: 1, scope: !18788, file: !1969, line: 112, type: !27)
!18790 = !DILocation(line: 112, column: 18, scope: !18788)
!18791 = !DILocalVariable(name: "con", arg: 2, scope: !18788, file: !1969, line: 112, type: !1967)
!18792 = !DILocation(line: 112, column: 42, scope: !18788)
!18793 = !DILocation(line: 113, column: 5, scope: !18788)
!18794 = !DILocation(line: 113, column: 11, scope: !18788)
!18795 = !DILocation(line: 113, column: 22, scope: !18788)
!18796 = distinct !DISubprogram(name: "setfilecon", scope: !1969, file: !1969, line: 115, type: !1980, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18797 = !DILocalVariable(name: "file", arg: 1, scope: !18796, file: !1969, line: 115, type: !146)
!18798 = !DILocation(line: 115, column: 25, scope: !18796)
!18799 = !DILocalVariable(name: "con", arg: 2, scope: !18796, file: !1969, line: 116, type: !1968)
!18800 = !DILocation(line: 116, column: 32, scope: !18796)
!18801 = !DILocation(line: 117, column: 5, scope: !18796)
!18802 = !DILocation(line: 117, column: 11, scope: !18796)
!18803 = !DILocation(line: 117, column: 22, scope: !18796)
!18804 = distinct !DISubprogram(name: "lsetfilecon", scope: !1969, file: !1969, line: 119, type: !1980, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18805 = !DILocalVariable(name: "file", arg: 1, scope: !18804, file: !1969, line: 119, type: !146)
!18806 = !DILocation(line: 119, column: 26, scope: !18804)
!18807 = !DILocalVariable(name: "con", arg: 2, scope: !18804, file: !1969, line: 120, type: !1968)
!18808 = !DILocation(line: 120, column: 33, scope: !18804)
!18809 = !DILocation(line: 121, column: 5, scope: !18804)
!18810 = !DILocation(line: 121, column: 11, scope: !18804)
!18811 = !DILocation(line: 121, column: 22, scope: !18804)
!18812 = distinct !DISubprogram(name: "fsetfilecon", scope: !1969, file: !1969, line: 123, type: !1982, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18813 = !DILocalVariable(name: "fd", arg: 1, scope: !18812, file: !1969, line: 123, type: !27)
!18814 = !DILocation(line: 123, column: 18, scope: !18812)
!18815 = !DILocalVariable(name: "con", arg: 2, scope: !18812, file: !1969, line: 124, type: !1968)
!18816 = !DILocation(line: 124, column: 33, scope: !18812)
!18817 = !DILocation(line: 125, column: 5, scope: !18812)
!18818 = !DILocation(line: 125, column: 11, scope: !18812)
!18819 = !DILocation(line: 125, column: 22, scope: !18812)
!18820 = distinct !DISubprogram(name: "security_check_context", scope: !1969, file: !1969, line: 128, type: !1972, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18821 = !DILocalVariable(name: "con", arg: 1, scope: !18820, file: !1969, line: 128, type: !1968)
!18822 = !DILocation(line: 128, column: 44, scope: !18820)
!18823 = !DILocation(line: 129, column: 5, scope: !18820)
!18824 = !DILocation(line: 129, column: 11, scope: !18820)
!18825 = !DILocation(line: 129, column: 22, scope: !18820)
!18826 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1969, file: !1969, line: 131, type: !1972, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18827 = !DILocalVariable(name: "con", arg: 1, scope: !18826, file: !1969, line: 131, type: !1968)
!18828 = !DILocation(line: 131, column: 48, scope: !18826)
!18829 = !DILocation(line: 132, column: 5, scope: !18826)
!18830 = !DILocation(line: 132, column: 11, scope: !18826)
!18831 = !DILocation(line: 132, column: 22, scope: !18826)
!18832 = distinct !DISubprogram(name: "setexeccon", scope: !1969, file: !1969, line: 134, type: !1972, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18833 = !DILocalVariable(name: "con", arg: 1, scope: !18832, file: !1969, line: 134, type: !1968)
!18834 = !DILocation(line: 134, column: 32, scope: !18832)
!18835 = !DILocation(line: 135, column: 5, scope: !18832)
!18836 = !DILocation(line: 135, column: 11, scope: !18832)
!18837 = !DILocation(line: 135, column: 22, scope: !18832)
!18838 = distinct !DISubprogram(name: "security_compute_create", scope: !1969, file: !1969, line: 137, type: !1984, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18839 = !DILocalVariable(name: "scon", arg: 1, scope: !18838, file: !1969, line: 137, type: !1968)
!18840 = !DILocation(line: 137, column: 45, scope: !18838)
!18841 = !DILocalVariable(name: "tcon", arg: 2, scope: !18838, file: !1969, line: 138, type: !1968)
!18842 = !DILocation(line: 138, column: 45, scope: !18838)
!18843 = !DILocalVariable(name: "tclass", arg: 3, scope: !18838, file: !1969, line: 139, type: !1986)
!18844 = !DILocation(line: 139, column: 43, scope: !18838)
!18845 = !DILocalVariable(name: "newcon", arg: 4, scope: !18838, file: !1969, line: 140, type: !1967)
!18846 = !DILocation(line: 140, column: 46, scope: !18838)
!18847 = !DILocation(line: 141, column: 5, scope: !18838)
!18848 = !DILocation(line: 141, column: 11, scope: !18838)
!18849 = !DILocation(line: 141, column: 22, scope: !18838)
!18850 = distinct !DISubprogram(name: "string_to_security_class", scope: !1969, file: !1969, line: 143, type: !1987, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18851 = !DILocalVariable(name: "name", arg: 1, scope: !18850, file: !1969, line: 143, type: !146)
!18852 = !DILocation(line: 143, column: 39, scope: !18850)
!18853 = !DILocation(line: 144, column: 5, scope: !18850)
!18854 = !DILocation(line: 144, column: 11, scope: !18850)
!18855 = !DILocation(line: 144, column: 22, scope: !18850)
!18856 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1969, file: !1969, line: 146, type: !714, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1962, retainedNodes: !152)
!18857 = !DILocalVariable(name: "path", arg: 1, scope: !18856, file: !1969, line: 146, type: !146)
!18858 = !DILocation(line: 146, column: 39, scope: !18856)
!18859 = !DILocalVariable(name: "prefix", arg: 2, scope: !18856, file: !1969, line: 147, type: !146)
!18860 = !DILocation(line: 147, column: 39, scope: !18856)
!18861 = !DILocation(line: 148, column: 5, scope: !18856)
!18862 = !DILocation(line: 148, column: 11, scope: !18856)
!18863 = !DILocation(line: 148, column: 22, scope: !18856)
!18864 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !18865, file: !18865, line: 66, type: !1992, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18865 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mohamad/clone/coreutils")
!18866 = !DILocalVariable(name: "st", arg: 1, scope: !18864, file: !18865, line: 66, type: !1994)
!18867 = !DILocation(line: 66, column: 39, scope: !18864)
!18868 = !DILocation(line: 69, column: 10, scope: !18864)
!18869 = !DILocation(line: 69, column: 38, scope: !18864)
!18870 = !{!3833, !2499, i64 80}
!18871 = !DILocation(line: 69, column: 3, scope: !18864)
!18872 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !18865, file: !18865, line: 79, type: !1992, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18873 = !DILocalVariable(name: "st", arg: 1, scope: !18872, file: !18865, line: 79, type: !1994)
!18874 = !DILocation(line: 79, column: 39, scope: !18872)
!18875 = !DILocation(line: 82, column: 10, scope: !18872)
!18876 = !DILocation(line: 82, column: 38, scope: !18872)
!18877 = !{!3833, !2499, i64 112}
!18878 = !DILocation(line: 82, column: 3, scope: !18872)
!18879 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !18865, file: !18865, line: 92, type: !1992, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18880 = !DILocalVariable(name: "st", arg: 1, scope: !18879, file: !18865, line: 92, type: !1994)
!18881 = !DILocation(line: 92, column: 39, scope: !18879)
!18882 = !DILocation(line: 95, column: 10, scope: !18879)
!18883 = !DILocation(line: 95, column: 38, scope: !18879)
!18884 = !{!3833, !2499, i64 96}
!18885 = !DILocation(line: 95, column: 3, scope: !18879)
!18886 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !18865, file: !18865, line: 105, type: !1992, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18887 = !DILocalVariable(name: "st", arg: 1, scope: !18886, file: !18865, line: 105, type: !1994)
!18888 = !DILocation(line: 105, column: 43, scope: !18886)
!18889 = !DILocation(line: 112, column: 3, scope: !18886)
!18890 = distinct !DISubprogram(name: "get_stat_atime", scope: !18865, file: !18865, line: 118, type: !2017, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18891 = !DILocalVariable(name: "st", arg: 1, scope: !18890, file: !18865, line: 118, type: !1994)
!18892 = !DILocation(line: 118, column: 36, scope: !18890)
!18893 = !DILocation(line: 121, column: 10, scope: !18890)
!18894 = !DILocation(line: 121, column: 3, scope: !18890)
!18895 = distinct !DISubprogram(name: "get_stat_ctime", scope: !18865, file: !18865, line: 132, type: !2017, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18896 = !DILocalVariable(name: "st", arg: 1, scope: !18895, file: !18865, line: 132, type: !1994)
!18897 = !DILocation(line: 132, column: 36, scope: !18895)
!18898 = !DILocation(line: 135, column: 10, scope: !18895)
!18899 = !DILocation(line: 135, column: 3, scope: !18895)
!18900 = distinct !DISubprogram(name: "get_stat_mtime", scope: !18865, file: !18865, line: 146, type: !2017, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18901 = !DILocalVariable(name: "st", arg: 1, scope: !18900, file: !18865, line: 146, type: !1994)
!18902 = !DILocation(line: 146, column: 36, scope: !18900)
!18903 = !DILocation(line: 149, column: 10, scope: !18900)
!18904 = !DILocation(line: 149, column: 3, scope: !18900)
!18905 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !18865, file: !18865, line: 161, type: !2017, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18906 = !DILocalVariable(name: "st", arg: 1, scope: !18905, file: !18865, line: 161, type: !1994)
!18907 = !DILocation(line: 161, column: 40, scope: !18905)
!18908 = !DILocalVariable(name: "t", scope: !18905, file: !18865, line: 163, type: !2010)
!18909 = !DILocation(line: 163, column: 19, scope: !18905)
!18910 = !DILocation(line: 183, column: 5, scope: !18905)
!18911 = !DILocation(line: 183, column: 12, scope: !18905)
!18912 = !DILocation(line: 184, column: 5, scope: !18905)
!18913 = !DILocation(line: 184, column: 13, scope: !18905)
!18914 = !DILocation(line: 202, column: 3, scope: !18905)
!18915 = distinct !DISubprogram(name: "stat_time_normalize", scope: !18865, file: !18865, line: 211, type: !2019, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1989, retainedNodes: !152)
!18916 = !DILocalVariable(name: "result", arg: 1, scope: !18915, file: !18865, line: 211, type: !27)
!18917 = !DILocation(line: 211, column: 26, scope: !18915)
!18918 = !DILocalVariable(name: "st", arg: 2, scope: !18915, file: !18865, line: 211, type: !2021)
!18919 = !DILocation(line: 211, column: 47, scope: !18915)
!18920 = !DILocation(line: 243, column: 10, scope: !18915)
!18921 = !DILocation(line: 243, column: 3, scope: !18915)
!18922 = distinct !DISubprogram(name: "make_timespec", scope: !18923, file: !18923, line: 54, type: !2025, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2022, retainedNodes: !152)
!18923 = !DIFile(filename: "./lib/timespec.h", directory: "/home/mohamad/clone/coreutils")
!18924 = !DILocalVariable(name: "s", arg: 1, scope: !18922, file: !18923, line: 54, type: !162)
!18925 = !DILocation(line: 54, column: 23, scope: !18922)
!18926 = !DILocalVariable(name: "ns", arg: 2, scope: !18922, file: !18923, line: 54, type: !166)
!18927 = !DILocation(line: 54, column: 35, scope: !18922)
!18928 = !DILocalVariable(name: "r", scope: !18922, file: !18923, line: 56, type: !2027)
!18929 = !DILocation(line: 56, column: 19, scope: !18922)
!18930 = !DILocation(line: 57, column: 14, scope: !18922)
!18931 = !DILocation(line: 57, column: 5, scope: !18922)
!18932 = !DILocation(line: 57, column: 12, scope: !18922)
!18933 = !DILocation(line: 58, column: 15, scope: !18922)
!18934 = !DILocation(line: 58, column: 5, scope: !18922)
!18935 = !DILocation(line: 58, column: 13, scope: !18922)
!18936 = !DILocation(line: 59, column: 3, scope: !18922)
!18937 = distinct !DISubprogram(name: "timespec_cmp", scope: !18923, file: !18923, line: 89, type: !2031, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2022, retainedNodes: !152)
!18938 = !DILocalVariable(name: "a", arg: 1, scope: !18937, file: !18923, line: 89, type: !2027)
!18939 = !DILocation(line: 89, column: 31, scope: !18937)
!18940 = !DILocalVariable(name: "b", arg: 2, scope: !18937, file: !18923, line: 89, type: !2027)
!18941 = !DILocation(line: 89, column: 50, scope: !18937)
!18942 = !DILocation(line: 91, column: 9, scope: !18943)
!18943 = distinct !DILexicalBlock(scope: !18937, file: !18923, line: 91, column: 7)
!18944 = !DILocation(line: 91, column: 20, scope: !18943)
!18945 = !DILocation(line: 91, column: 16, scope: !18943)
!18946 = !DILocation(line: 91, column: 7, scope: !18937)
!18947 = !DILocation(line: 92, column: 5, scope: !18943)
!18948 = !DILocation(line: 93, column: 9, scope: !18949)
!18949 = distinct !DILexicalBlock(scope: !18937, file: !18923, line: 93, column: 7)
!18950 = !DILocation(line: 93, column: 20, scope: !18949)
!18951 = !DILocation(line: 93, column: 16, scope: !18949)
!18952 = !DILocation(line: 93, column: 7, scope: !18937)
!18953 = !DILocation(line: 94, column: 5, scope: !18949)
!18954 = !DILocation(line: 98, column: 3, scope: !18937)
!18955 = !DILocation(line: 99, column: 3, scope: !18937)
!18956 = !DILocation(line: 101, column: 12, scope: !18937)
!18957 = !DILocation(line: 101, column: 24, scope: !18937)
!18958 = !DILocation(line: 101, column: 20, scope: !18937)
!18959 = !DILocation(line: 101, column: 10, scope: !18937)
!18960 = !DILocation(line: 101, column: 3, scope: !18937)
!18961 = !DILocation(line: 102, column: 1, scope: !18937)
!18962 = distinct !DISubprogram(name: "timespec_sign", scope: !18923, file: !18923, line: 107, type: !2033, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2022, retainedNodes: !152)
!18963 = !DILocalVariable(name: "a", arg: 1, scope: !18962, file: !18923, line: 107, type: !2027)
!18964 = !DILocation(line: 107, column: 32, scope: !18962)
!18965 = !DILocation(line: 109, column: 12, scope: !18962)
!18966 = !DILocation(line: 109, column: 19, scope: !18962)
!18967 = !DILocation(line: 109, column: 10, scope: !18962)
!18968 = !DILocation(line: 109, column: 32, scope: !18962)
!18969 = !DILocation(line: 109, column: 30, scope: !18962)
!18970 = !DILocation(line: 109, column: 39, scope: !18962)
!18971 = !DILocation(line: 109, column: 44, scope: !18962)
!18972 = !DILocation(line: 109, column: 3, scope: !18962)
!18973 = distinct !DISubprogram(name: "timespectod", scope: !18923, file: !18923, line: 121, type: !2035, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2022, retainedNodes: !152)
!18974 = !DILocalVariable(name: "a", arg: 1, scope: !18973, file: !18923, line: 121, type: !2027)
!18975 = !DILocation(line: 121, column: 30, scope: !18973)
!18976 = !DILocation(line: 123, column: 12, scope: !18973)
!18977 = !DILocation(line: 123, column: 10, scope: !18973)
!18978 = !DILocation(line: 123, column: 23, scope: !18973)
!18979 = !DILocation(line: 123, column: 21, scope: !18973)
!18980 = !DILocation(line: 123, column: 31, scope: !18973)
!18981 = !DILocation(line: 123, column: 19, scope: !18973)
!18982 = !DILocation(line: 123, column: 3, scope: !18973)
!18983 = distinct !DISubprogram(name: "version_etc_arn", scope: !18984, file: !18984, line: 61, type: !2041, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2038, retainedNodes: !152)
!18984 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!18985 = !DILocalVariable(name: "stream", arg: 1, scope: !18983, file: !18984, line: 61, type: !2043)
!18986 = !DILocation(line: 61, column: 24, scope: !18983)
!18987 = !DILocalVariable(name: "command_name", arg: 2, scope: !18983, file: !18984, line: 62, type: !146)
!18988 = !DILocation(line: 62, column: 30, scope: !18983)
!18989 = !DILocalVariable(name: "package", arg: 3, scope: !18983, file: !18984, line: 62, type: !146)
!18990 = !DILocation(line: 62, column: 56, scope: !18983)
!18991 = !DILocalVariable(name: "version", arg: 4, scope: !18983, file: !18984, line: 63, type: !146)
!18992 = !DILocation(line: 63, column: 30, scope: !18983)
!18993 = !DILocalVariable(name: "authors", arg: 5, scope: !18983, file: !18984, line: 64, type: !555)
!18994 = !DILocation(line: 64, column: 39, scope: !18983)
!18995 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18983, file: !18984, line: 64, type: !149)
!18996 = !DILocation(line: 64, column: 55, scope: !18983)
!18997 = !DILocation(line: 66, column: 7, scope: !18998)
!18998 = distinct !DILexicalBlock(scope: !18983, file: !18984, line: 66, column: 7)
!18999 = !DILocation(line: 66, column: 7, scope: !18983)
!19000 = !DILocation(line: 67, column: 14, scope: !18998)
!19001 = !DILocation(line: 67, column: 38, scope: !18998)
!19002 = !DILocation(line: 67, column: 52, scope: !18998)
!19003 = !DILocation(line: 67, column: 61, scope: !18998)
!19004 = !DILocation(line: 67, column: 5, scope: !18998)
!19005 = !DILocation(line: 69, column: 14, scope: !18998)
!19006 = !DILocation(line: 69, column: 33, scope: !18998)
!19007 = !DILocation(line: 69, column: 42, scope: !18998)
!19008 = !DILocation(line: 69, column: 5, scope: !18998)
!19009 = !DILocation(line: 83, column: 12, scope: !18983)
!19010 = !DILocation(line: 83, column: 43, scope: !18983)
!19011 = !DILocation(line: 83, column: 3, scope: !18983)
!19012 = !DILocation(line: 85, column: 3, scope: !18983)
!19013 = !DILocation(line: 88, column: 12, scope: !18983)
!19014 = !DILocation(line: 88, column: 20, scope: !18983)
!19015 = !DILocation(line: 88, column: 3, scope: !18983)
!19016 = !DILocation(line: 95, column: 3, scope: !18983)
!19017 = !DILocation(line: 97, column: 11, scope: !18983)
!19018 = !DILocation(line: 97, column: 3, scope: !18983)
!19019 = !DILocation(line: 102, column: 7, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !18983, file: !18984, line: 98, column: 5)
!19021 = !DILocation(line: 105, column: 16, scope: !19020)
!19022 = !DILocation(line: 105, column: 24, scope: !19020)
!19023 = !DILocation(line: 105, column: 47, scope: !19020)
!19024 = !DILocation(line: 105, column: 7, scope: !19020)
!19025 = !DILocation(line: 106, column: 7, scope: !19020)
!19026 = !DILocation(line: 109, column: 16, scope: !19020)
!19027 = !DILocation(line: 109, column: 24, scope: !19020)
!19028 = !DILocation(line: 109, column: 54, scope: !19020)
!19029 = !DILocation(line: 109, column: 66, scope: !19020)
!19030 = !DILocation(line: 109, column: 7, scope: !19020)
!19031 = !DILocation(line: 110, column: 7, scope: !19020)
!19032 = !DILocation(line: 113, column: 16, scope: !19020)
!19033 = !DILocation(line: 113, column: 24, scope: !19020)
!19034 = !DILocation(line: 114, column: 16, scope: !19020)
!19035 = !DILocation(line: 114, column: 28, scope: !19020)
!19036 = !DILocation(line: 114, column: 40, scope: !19020)
!19037 = !DILocation(line: 113, column: 7, scope: !19020)
!19038 = !DILocation(line: 115, column: 7, scope: !19020)
!19039 = !DILocation(line: 120, column: 16, scope: !19020)
!19040 = !DILocation(line: 120, column: 24, scope: !19020)
!19041 = !DILocation(line: 121, column: 16, scope: !19020)
!19042 = !DILocation(line: 121, column: 28, scope: !19020)
!19043 = !DILocation(line: 121, column: 40, scope: !19020)
!19044 = !DILocation(line: 121, column: 52, scope: !19020)
!19045 = !DILocation(line: 120, column: 7, scope: !19020)
!19046 = !DILocation(line: 122, column: 7, scope: !19020)
!19047 = !DILocation(line: 127, column: 16, scope: !19020)
!19048 = !DILocation(line: 127, column: 24, scope: !19020)
!19049 = !DILocation(line: 128, column: 16, scope: !19020)
!19050 = !DILocation(line: 128, column: 28, scope: !19020)
!19051 = !DILocation(line: 128, column: 40, scope: !19020)
!19052 = !DILocation(line: 128, column: 52, scope: !19020)
!19053 = !DILocation(line: 128, column: 64, scope: !19020)
!19054 = !DILocation(line: 127, column: 7, scope: !19020)
!19055 = !DILocation(line: 129, column: 7, scope: !19020)
!19056 = !DILocation(line: 134, column: 16, scope: !19020)
!19057 = !DILocation(line: 134, column: 24, scope: !19020)
!19058 = !DILocation(line: 135, column: 16, scope: !19020)
!19059 = !DILocation(line: 135, column: 28, scope: !19020)
!19060 = !DILocation(line: 135, column: 40, scope: !19020)
!19061 = !DILocation(line: 135, column: 52, scope: !19020)
!19062 = !DILocation(line: 135, column: 64, scope: !19020)
!19063 = !DILocation(line: 136, column: 16, scope: !19020)
!19064 = !DILocation(line: 134, column: 7, scope: !19020)
!19065 = !DILocation(line: 137, column: 7, scope: !19020)
!19066 = !DILocation(line: 142, column: 16, scope: !19020)
!19067 = !DILocation(line: 142, column: 24, scope: !19020)
!19068 = !DILocation(line: 143, column: 16, scope: !19020)
!19069 = !DILocation(line: 143, column: 28, scope: !19020)
!19070 = !DILocation(line: 143, column: 40, scope: !19020)
!19071 = !DILocation(line: 143, column: 52, scope: !19020)
!19072 = !DILocation(line: 143, column: 64, scope: !19020)
!19073 = !DILocation(line: 144, column: 16, scope: !19020)
!19074 = !DILocation(line: 144, column: 28, scope: !19020)
!19075 = !DILocation(line: 142, column: 7, scope: !19020)
!19076 = !DILocation(line: 145, column: 7, scope: !19020)
!19077 = !DILocation(line: 150, column: 16, scope: !19020)
!19078 = !DILocation(line: 150, column: 24, scope: !19020)
!19079 = !DILocation(line: 152, column: 17, scope: !19020)
!19080 = !DILocation(line: 152, column: 29, scope: !19020)
!19081 = !DILocation(line: 152, column: 41, scope: !19020)
!19082 = !DILocation(line: 152, column: 53, scope: !19020)
!19083 = !DILocation(line: 152, column: 65, scope: !19020)
!19084 = !DILocation(line: 153, column: 17, scope: !19020)
!19085 = !DILocation(line: 153, column: 29, scope: !19020)
!19086 = !DILocation(line: 153, column: 41, scope: !19020)
!19087 = !DILocation(line: 150, column: 7, scope: !19020)
!19088 = !DILocation(line: 154, column: 7, scope: !19020)
!19089 = !DILocation(line: 159, column: 16, scope: !19020)
!19090 = !DILocation(line: 159, column: 24, scope: !19020)
!19091 = !DILocation(line: 161, column: 16, scope: !19020)
!19092 = !DILocation(line: 161, column: 28, scope: !19020)
!19093 = !DILocation(line: 161, column: 40, scope: !19020)
!19094 = !DILocation(line: 161, column: 52, scope: !19020)
!19095 = !DILocation(line: 161, column: 64, scope: !19020)
!19096 = !DILocation(line: 162, column: 16, scope: !19020)
!19097 = !DILocation(line: 162, column: 28, scope: !19020)
!19098 = !DILocation(line: 162, column: 40, scope: !19020)
!19099 = !DILocation(line: 162, column: 52, scope: !19020)
!19100 = !DILocation(line: 159, column: 7, scope: !19020)
!19101 = !DILocation(line: 163, column: 7, scope: !19020)
!19102 = !DILocation(line: 170, column: 16, scope: !19020)
!19103 = !DILocation(line: 170, column: 24, scope: !19020)
!19104 = !DILocation(line: 172, column: 17, scope: !19020)
!19105 = !DILocation(line: 172, column: 29, scope: !19020)
!19106 = !DILocation(line: 172, column: 41, scope: !19020)
!19107 = !DILocation(line: 172, column: 53, scope: !19020)
!19108 = !DILocation(line: 172, column: 65, scope: !19020)
!19109 = !DILocation(line: 173, column: 17, scope: !19020)
!19110 = !DILocation(line: 173, column: 29, scope: !19020)
!19111 = !DILocation(line: 173, column: 41, scope: !19020)
!19112 = !DILocation(line: 173, column: 53, scope: !19020)
!19113 = !DILocation(line: 170, column: 7, scope: !19020)
!19114 = !DILocation(line: 174, column: 7, scope: !19020)
!19115 = !DILocation(line: 176, column: 1, scope: !18983)
!19116 = distinct !DISubprogram(name: "version_etc_ar", scope: !18984, file: !18984, line: 183, type: !2084, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2038, retainedNodes: !152)
!19117 = !DILocalVariable(name: "stream", arg: 1, scope: !19116, file: !18984, line: 183, type: !2043)
!19118 = !DILocation(line: 183, column: 23, scope: !19116)
!19119 = !DILocalVariable(name: "command_name", arg: 2, scope: !19116, file: !18984, line: 184, type: !146)
!19120 = !DILocation(line: 184, column: 29, scope: !19116)
!19121 = !DILocalVariable(name: "package", arg: 3, scope: !19116, file: !18984, line: 184, type: !146)
!19122 = !DILocation(line: 184, column: 55, scope: !19116)
!19123 = !DILocalVariable(name: "version", arg: 4, scope: !19116, file: !18984, line: 185, type: !146)
!19124 = !DILocation(line: 185, column: 29, scope: !19116)
!19125 = !DILocalVariable(name: "authors", arg: 5, scope: !19116, file: !18984, line: 185, type: !555)
!19126 = !DILocation(line: 185, column: 59, scope: !19116)
!19127 = !DILocalVariable(name: "n_authors", scope: !19116, file: !18984, line: 187, type: !149)
!19128 = !DILocation(line: 187, column: 10, scope: !19116)
!19129 = !DILocation(line: 189, column: 18, scope: !19130)
!19130 = distinct !DILexicalBlock(scope: !19116, file: !18984, line: 189, column: 3)
!19131 = !DILocation(line: 189, column: 8, scope: !19130)
!19132 = !DILocation(line: 189, column: 23, scope: !19133)
!19133 = distinct !DILexicalBlock(scope: !19130, file: !18984, line: 189, column: 3)
!19134 = !DILocation(line: 189, column: 31, scope: !19133)
!19135 = !DILocation(line: 189, column: 3, scope: !19130)
!19136 = !DILocation(line: 189, column: 52, scope: !19133)
!19137 = !DILocation(line: 189, column: 3, scope: !19133)
!19138 = distinct !{!19138, !19135, !19139}
!19139 = !DILocation(line: 190, column: 5, scope: !19130)
!19140 = !DILocation(line: 191, column: 20, scope: !19116)
!19141 = !DILocation(line: 191, column: 28, scope: !19116)
!19142 = !DILocation(line: 191, column: 42, scope: !19116)
!19143 = !DILocation(line: 191, column: 51, scope: !19116)
!19144 = !DILocation(line: 191, column: 60, scope: !19116)
!19145 = !DILocation(line: 191, column: 69, scope: !19116)
!19146 = !DILocation(line: 191, column: 3, scope: !19116)
!19147 = !DILocation(line: 192, column: 1, scope: !19116)
!19148 = distinct !DISubprogram(name: "version_etc_va", scope: !18984, file: !18984, line: 199, type: !2086, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2038, retainedNodes: !152)
!19149 = !DILocalVariable(name: "stream", arg: 1, scope: !19148, file: !18984, line: 199, type: !2043)
!19150 = !DILocation(line: 199, column: 23, scope: !19148)
!19151 = !DILocalVariable(name: "command_name", arg: 2, scope: !19148, file: !18984, line: 200, type: !146)
!19152 = !DILocation(line: 200, column: 29, scope: !19148)
!19153 = !DILocalVariable(name: "package", arg: 3, scope: !19148, file: !18984, line: 200, type: !146)
!19154 = !DILocation(line: 200, column: 55, scope: !19148)
!19155 = !DILocalVariable(name: "version", arg: 4, scope: !19148, file: !18984, line: 201, type: !146)
!19156 = !DILocation(line: 201, column: 29, scope: !19148)
!19157 = !DILocalVariable(name: "authors", arg: 5, scope: !19148, file: !18984, line: 201, type: !2088)
!19158 = !DILocation(line: 201, column: 46, scope: !19148)
!19159 = !DILocalVariable(name: "n_authors", scope: !19148, file: !18984, line: 203, type: !149)
!19160 = !DILocation(line: 203, column: 10, scope: !19148)
!19161 = !DILocalVariable(name: "authtab", scope: !19148, file: !18984, line: 204, type: !2095)
!19162 = !DILocation(line: 204, column: 15, scope: !19148)
!19163 = !DILocation(line: 206, column: 18, scope: !19164)
!19164 = distinct !DILexicalBlock(scope: !19148, file: !18984, line: 206, column: 3)
!19165 = !DILocation(line: 206, column: 8, scope: !19164)
!19166 = !DILocation(line: 207, column: 8, scope: !19167)
!19167 = distinct !DILexicalBlock(scope: !19164, file: !18984, line: 206, column: 3)
!19168 = !DILocation(line: 207, column: 18, scope: !19167)
!19169 = !DILocation(line: 208, column: 10, scope: !19167)
!19170 = !DILocation(line: 208, column: 35, scope: !19167)
!19171 = !DILocation(line: 208, column: 22, scope: !19167)
!19172 = !DILocation(line: 208, column: 14, scope: !19167)
!19173 = !DILocation(line: 208, column: 33, scope: !19167)
!19174 = !DILocation(line: 208, column: 67, scope: !19167)
!19175 = !DILocation(line: 0, scope: !19167)
!19176 = !DILocation(line: 206, column: 3, scope: !19164)
!19177 = !DILocation(line: 209, column: 17, scope: !19167)
!19178 = !DILocation(line: 206, column: 3, scope: !19167)
!19179 = distinct !{!19179, !19176, !19180}
!19180 = !DILocation(line: 210, column: 5, scope: !19164)
!19181 = !DILocation(line: 211, column: 20, scope: !19148)
!19182 = !DILocation(line: 211, column: 28, scope: !19148)
!19183 = !DILocation(line: 211, column: 42, scope: !19148)
!19184 = !DILocation(line: 211, column: 51, scope: !19148)
!19185 = !DILocation(line: 212, column: 20, scope: !19148)
!19186 = !DILocation(line: 212, column: 29, scope: !19148)
!19187 = !DILocation(line: 211, column: 3, scope: !19148)
!19188 = !DILocation(line: 213, column: 1, scope: !19148)
!19189 = distinct !DISubprogram(name: "version_etc", scope: !18984, file: !18984, line: 230, type: !19190, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2038, retainedNodes: !152)
!19190 = !DISubroutineType(types: !19191)
!19191 = !{null, !2043, !146, !146, !146, null}
!19192 = !DILocalVariable(name: "stream", arg: 1, scope: !19189, file: !18984, line: 230, type: !2043)
!19193 = !DILocation(line: 230, column: 20, scope: !19189)
!19194 = !DILocalVariable(name: "command_name", arg: 2, scope: !19189, file: !18984, line: 231, type: !146)
!19195 = !DILocation(line: 231, column: 26, scope: !19189)
!19196 = !DILocalVariable(name: "package", arg: 3, scope: !19189, file: !18984, line: 231, type: !146)
!19197 = !DILocation(line: 231, column: 52, scope: !19189)
!19198 = !DILocalVariable(name: "version", arg: 4, scope: !19189, file: !18984, line: 232, type: !146)
!19199 = !DILocation(line: 232, column: 26, scope: !19189)
!19200 = !DILocalVariable(name: "authors", scope: !19189, file: !18984, line: 234, type: !2098)
!19201 = !DILocation(line: 234, column: 11, scope: !19189)
!19202 = !DILocation(line: 236, column: 3, scope: !19189)
!19203 = !DILocation(line: 237, column: 19, scope: !19189)
!19204 = !DILocation(line: 237, column: 27, scope: !19189)
!19205 = !DILocation(line: 237, column: 41, scope: !19189)
!19206 = !DILocation(line: 237, column: 50, scope: !19189)
!19207 = !DILocation(line: 237, column: 59, scope: !19189)
!19208 = !DILocation(line: 237, column: 3, scope: !19189)
!19209 = !DILocation(line: 238, column: 3, scope: !19189)
!19210 = !DILocation(line: 239, column: 1, scope: !19189)
!19211 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18984, file: !18984, line: 242, type: !336, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2038, retainedNodes: !152)
!19212 = !DILocation(line: 244, column: 3, scope: !19211)
!19213 = !DILocation(line: 249, column: 11, scope: !19211)
!19214 = !DILocation(line: 249, column: 3, scope: !19211)
!19215 = !DILocation(line: 255, column: 11, scope: !19211)
!19216 = !DILocation(line: 255, column: 3, scope: !19211)
!19217 = !DILocation(line: 260, column: 11, scope: !19211)
!19218 = !DILocation(line: 260, column: 3, scope: !19211)
!19219 = !DILocation(line: 262, column: 1, scope: !19211)
!19220 = distinct !DISubprogram(name: "xnmalloc", scope: !19221, file: !19221, line: 99, type: !2106, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19221 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!19222 = !DILocalVariable(name: "n", arg: 1, scope: !19220, file: !19221, line: 99, type: !149)
!19223 = !DILocation(line: 99, column: 18, scope: !19220)
!19224 = !DILocalVariable(name: "s", arg: 2, scope: !19220, file: !19221, line: 99, type: !149)
!19225 = !DILocation(line: 99, column: 28, scope: !19220)
!19226 = !DILocation(line: 101, column: 7, scope: !19227)
!19227 = distinct !DILexicalBlock(scope: !19220, file: !19221, line: 101, column: 7)
!19228 = !DILocation(line: 101, column: 7, scope: !19220)
!19229 = !DILocation(line: 102, column: 5, scope: !19227)
!19230 = !DILocation(line: 103, column: 19, scope: !19220)
!19231 = !DILocation(line: 103, column: 23, scope: !19220)
!19232 = !DILocation(line: 103, column: 21, scope: !19220)
!19233 = !DILocation(line: 103, column: 10, scope: !19220)
!19234 = !DILocation(line: 103, column: 3, scope: !19220)
!19235 = distinct !DISubprogram(name: "xmalloc", scope: !19236, file: !19236, line: 39, type: !371, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19236 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!19237 = !DILocalVariable(name: "n", arg: 1, scope: !19235, file: !19236, line: 39, type: !149)
!19238 = !DILocation(line: 39, column: 17, scope: !19235)
!19239 = !DILocalVariable(name: "p", scope: !19235, file: !19236, line: 41, type: !167)
!19240 = !DILocation(line: 41, column: 9, scope: !19235)
!19241 = !DILocation(line: 41, column: 21, scope: !19235)
!19242 = !DILocation(line: 41, column: 13, scope: !19235)
!19243 = !DILocation(line: 42, column: 8, scope: !19244)
!19244 = distinct !DILexicalBlock(scope: !19235, file: !19236, line: 42, column: 7)
!19245 = !DILocation(line: 42, column: 10, scope: !19244)
!19246 = !DILocation(line: 42, column: 13, scope: !19244)
!19247 = !DILocation(line: 42, column: 15, scope: !19244)
!19248 = !DILocation(line: 42, column: 7, scope: !19235)
!19249 = !DILocation(line: 43, column: 5, scope: !19244)
!19250 = !DILocation(line: 44, column: 10, scope: !19235)
!19251 = !DILocation(line: 44, column: 3, scope: !19235)
!19252 = distinct !DISubprogram(name: "xnrealloc", scope: !19221, file: !19221, line: 112, type: !2108, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19253 = !DILocalVariable(name: "p", arg: 1, scope: !19252, file: !19221, line: 112, type: !167)
!19254 = !DILocation(line: 112, column: 18, scope: !19252)
!19255 = !DILocalVariable(name: "n", arg: 2, scope: !19252, file: !19221, line: 112, type: !149)
!19256 = !DILocation(line: 112, column: 28, scope: !19252)
!19257 = !DILocalVariable(name: "s", arg: 3, scope: !19252, file: !19221, line: 112, type: !149)
!19258 = !DILocation(line: 112, column: 38, scope: !19252)
!19259 = !DILocation(line: 114, column: 7, scope: !19260)
!19260 = distinct !DILexicalBlock(scope: !19252, file: !19221, line: 114, column: 7)
!19261 = !DILocation(line: 114, column: 7, scope: !19252)
!19262 = !DILocation(line: 115, column: 5, scope: !19260)
!19263 = !DILocation(line: 116, column: 20, scope: !19252)
!19264 = !DILocation(line: 116, column: 23, scope: !19252)
!19265 = !DILocation(line: 116, column: 27, scope: !19252)
!19266 = !DILocation(line: 116, column: 25, scope: !19252)
!19267 = !DILocation(line: 116, column: 10, scope: !19252)
!19268 = !DILocation(line: 116, column: 3, scope: !19252)
!19269 = distinct !DISubprogram(name: "xrealloc", scope: !19236, file: !19236, line: 51, type: !375, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19270 = !DILocalVariable(name: "p", arg: 1, scope: !19269, file: !19236, line: 51, type: !167)
!19271 = !DILocation(line: 51, column: 17, scope: !19269)
!19272 = !DILocalVariable(name: "n", arg: 2, scope: !19269, file: !19236, line: 51, type: !149)
!19273 = !DILocation(line: 51, column: 27, scope: !19269)
!19274 = !DILocation(line: 53, column: 8, scope: !19275)
!19275 = distinct !DILexicalBlock(scope: !19269, file: !19236, line: 53, column: 7)
!19276 = !DILocation(line: 53, column: 10, scope: !19275)
!19277 = !DILocation(line: 53, column: 13, scope: !19275)
!19278 = !DILocation(line: 53, column: 7, scope: !19269)
!19279 = !DILocation(line: 57, column: 13, scope: !19280)
!19280 = distinct !DILexicalBlock(scope: !19275, file: !19236, line: 54, column: 5)
!19281 = !DILocation(line: 57, column: 7, scope: !19280)
!19282 = !DILocation(line: 58, column: 7, scope: !19280)
!19283 = !DILocation(line: 61, column: 16, scope: !19269)
!19284 = !DILocation(line: 61, column: 19, scope: !19269)
!19285 = !DILocation(line: 61, column: 7, scope: !19269)
!19286 = !DILocation(line: 61, column: 5, scope: !19269)
!19287 = !DILocation(line: 62, column: 8, scope: !19288)
!19288 = distinct !DILexicalBlock(scope: !19269, file: !19236, line: 62, column: 7)
!19289 = !DILocation(line: 62, column: 10, scope: !19288)
!19290 = !DILocation(line: 62, column: 13, scope: !19288)
!19291 = !DILocation(line: 62, column: 7, scope: !19269)
!19292 = !DILocation(line: 63, column: 5, scope: !19288)
!19293 = !DILocation(line: 64, column: 10, scope: !19269)
!19294 = !DILocation(line: 64, column: 3, scope: !19269)
!19295 = !DILocation(line: 65, column: 1, scope: !19269)
!19296 = distinct !DISubprogram(name: "x2nrealloc", scope: !19221, file: !19221, line: 174, type: !2110, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19297 = !DILocalVariable(name: "p", arg: 1, scope: !19296, file: !19221, line: 174, type: !167)
!19298 = !DILocation(line: 174, column: 19, scope: !19296)
!19299 = !DILocalVariable(name: "pn", arg: 2, scope: !19296, file: !19221, line: 174, type: !148)
!19300 = !DILocation(line: 174, column: 30, scope: !19296)
!19301 = !DILocalVariable(name: "s", arg: 3, scope: !19296, file: !19221, line: 174, type: !149)
!19302 = !DILocation(line: 174, column: 41, scope: !19296)
!19303 = !DILocalVariable(name: "n", scope: !19296, file: !19221, line: 176, type: !149)
!19304 = !DILocation(line: 176, column: 10, scope: !19296)
!19305 = !DILocation(line: 176, column: 15, scope: !19296)
!19306 = !DILocation(line: 176, column: 14, scope: !19296)
!19307 = !DILocation(line: 178, column: 9, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19296, file: !19221, line: 178, column: 7)
!19309 = !DILocation(line: 178, column: 7, scope: !19296)
!19310 = !DILocation(line: 180, column: 13, scope: !19311)
!19311 = distinct !DILexicalBlock(scope: !19312, file: !19221, line: 180, column: 11)
!19312 = distinct !DILexicalBlock(scope: !19308, file: !19221, line: 179, column: 5)
!19313 = !DILocation(line: 180, column: 11, scope: !19312)
!19314 = !DILocation(line: 188, column: 32, scope: !19315)
!19315 = distinct !DILexicalBlock(scope: !19311, file: !19221, line: 181, column: 9)
!19316 = !DILocation(line: 188, column: 30, scope: !19315)
!19317 = !DILocation(line: 188, column: 13, scope: !19315)
!19318 = !DILocation(line: 189, column: 17, scope: !19315)
!19319 = !DILocation(line: 189, column: 16, scope: !19315)
!19320 = !DILocation(line: 189, column: 13, scope: !19315)
!19321 = !DILocation(line: 190, column: 9, scope: !19315)
!19322 = !DILocation(line: 191, column: 11, scope: !19323)
!19323 = distinct !DILexicalBlock(scope: !19312, file: !19221, line: 191, column: 11)
!19324 = !DILocation(line: 191, column: 11, scope: !19312)
!19325 = !DILocation(line: 192, column: 9, scope: !19323)
!19326 = !DILocation(line: 193, column: 5, scope: !19312)
!19327 = !DILocation(line: 200, column: 71, scope: !19328)
!19328 = distinct !DILexicalBlock(scope: !19329, file: !19221, line: 200, column: 11)
!19329 = distinct !DILexicalBlock(scope: !19308, file: !19221, line: 195, column: 5)
!19330 = !DILocation(line: 200, column: 69, scope: !19328)
!19331 = !DILocation(line: 201, column: 14, scope: !19328)
!19332 = !DILocation(line: 201, column: 11, scope: !19328)
!19333 = !DILocation(line: 200, column: 11, scope: !19329)
!19334 = !DILocation(line: 202, column: 9, scope: !19328)
!19335 = !DILocation(line: 203, column: 12, scope: !19329)
!19336 = !DILocation(line: 203, column: 14, scope: !19329)
!19337 = !DILocation(line: 203, column: 18, scope: !19329)
!19338 = !DILocation(line: 203, column: 9, scope: !19329)
!19339 = !DILocation(line: 206, column: 9, scope: !19296)
!19340 = !DILocation(line: 206, column: 4, scope: !19296)
!19341 = !DILocation(line: 206, column: 7, scope: !19296)
!19342 = !DILocation(line: 207, column: 20, scope: !19296)
!19343 = !DILocation(line: 207, column: 23, scope: !19296)
!19344 = !DILocation(line: 207, column: 27, scope: !19296)
!19345 = !DILocation(line: 207, column: 25, scope: !19296)
!19346 = !DILocation(line: 207, column: 10, scope: !19296)
!19347 = !DILocation(line: 207, column: 3, scope: !19296)
!19348 = distinct !DISubprogram(name: "xcharalloc", scope: !19221, file: !19221, line: 216, type: !2112, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19349 = !DILocalVariable(name: "n", arg: 1, scope: !19348, file: !19221, line: 216, type: !149)
!19350 = !DILocation(line: 216, column: 20, scope: !19348)
!19351 = !DILocation(line: 218, column: 10, scope: !19348)
!19352 = !DILocation(line: 218, column: 3, scope: !19348)
!19353 = distinct !DISubprogram(name: "x2realloc", scope: !19236, file: !19236, line: 74, type: !2114, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19354 = !DILocalVariable(name: "p", arg: 1, scope: !19353, file: !19236, line: 74, type: !167)
!19355 = !DILocation(line: 74, column: 18, scope: !19353)
!19356 = !DILocalVariable(name: "pn", arg: 2, scope: !19353, file: !19236, line: 74, type: !148)
!19357 = !DILocation(line: 74, column: 29, scope: !19353)
!19358 = !DILocation(line: 76, column: 22, scope: !19353)
!19359 = !DILocation(line: 76, column: 25, scope: !19353)
!19360 = !DILocation(line: 76, column: 10, scope: !19353)
!19361 = !DILocation(line: 76, column: 3, scope: !19353)
!19362 = distinct !DISubprogram(name: "xzalloc", scope: !19236, file: !19236, line: 84, type: !371, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19363 = !DILocalVariable(name: "s", arg: 1, scope: !19362, file: !19236, line: 84, type: !149)
!19364 = !DILocation(line: 84, column: 17, scope: !19362)
!19365 = !DILocation(line: 86, column: 27, scope: !19362)
!19366 = !DILocation(line: 86, column: 18, scope: !19362)
!19367 = !DILocation(line: 86, column: 34, scope: !19362)
!19368 = !DILocation(line: 86, column: 10, scope: !19362)
!19369 = !DILocation(line: 86, column: 3, scope: !19362)
!19370 = distinct !DISubprogram(name: "xcalloc", scope: !19236, file: !19236, line: 93, type: !2106, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19371 = !DILocalVariable(name: "n", arg: 1, scope: !19370, file: !19236, line: 93, type: !149)
!19372 = !DILocation(line: 93, column: 17, scope: !19370)
!19373 = !DILocalVariable(name: "s", arg: 2, scope: !19370, file: !19236, line: 93, type: !149)
!19374 = !DILocation(line: 93, column: 27, scope: !19370)
!19375 = !DILocalVariable(name: "p", scope: !19370, file: !19236, line: 95, type: !167)
!19376 = !DILocation(line: 95, column: 9, scope: !19370)
!19377 = !DILocation(line: 100, column: 7, scope: !19378)
!19378 = distinct !DILexicalBlock(scope: !19370, file: !19236, line: 100, column: 7)
!19379 = !DILocation(line: 101, column: 7, scope: !19378)
!19380 = !DILocation(line: 101, column: 26, scope: !19378)
!19381 = !DILocation(line: 101, column: 29, scope: !19378)
!19382 = !DILocation(line: 101, column: 18, scope: !19378)
!19383 = !DILocation(line: 101, column: 16, scope: !19378)
!19384 = !DILocation(line: 100, column: 7, scope: !19370)
!19385 = !DILocation(line: 102, column: 5, scope: !19378)
!19386 = !DILocation(line: 103, column: 10, scope: !19370)
!19387 = !DILocation(line: 103, column: 3, scope: !19370)
!19388 = distinct !DISubprogram(name: "xmemdup", scope: !19236, file: !19236, line: 111, type: !2116, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19389 = !DILocalVariable(name: "p", arg: 1, scope: !19388, file: !19236, line: 111, type: !175)
!19390 = !DILocation(line: 111, column: 22, scope: !19388)
!19391 = !DILocalVariable(name: "s", arg: 2, scope: !19388, file: !19236, line: 111, type: !149)
!19392 = !DILocation(line: 111, column: 32, scope: !19388)
!19393 = !DILocation(line: 113, column: 27, scope: !19388)
!19394 = !DILocation(line: 113, column: 18, scope: !19388)
!19395 = !DILocation(line: 113, column: 31, scope: !19388)
!19396 = !DILocation(line: 113, column: 34, scope: !19388)
!19397 = !DILocation(line: 113, column: 10, scope: !19388)
!19398 = !DILocation(line: 113, column: 3, scope: !19388)
!19399 = distinct !DISubprogram(name: "xstrdup", scope: !19236, file: !19236, line: 119, type: !560, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2103, retainedNodes: !152)
!19400 = !DILocalVariable(name: "string", arg: 1, scope: !19399, file: !19236, line: 119, type: !146)
!19401 = !DILocation(line: 119, column: 22, scope: !19399)
!19402 = !DILocation(line: 121, column: 19, scope: !19399)
!19403 = !DILocation(line: 121, column: 35, scope: !19399)
!19404 = !DILocation(line: 121, column: 27, scope: !19399)
!19405 = !DILocation(line: 121, column: 43, scope: !19399)
!19406 = !DILocation(line: 121, column: 10, scope: !19399)
!19407 = !DILocation(line: 121, column: 3, scope: !19399)
!19408 = distinct !DISubprogram(name: "xalloc_die", scope: !19409, file: !19409, line: 32, type: !336, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2118, retainedNodes: !152)
!19409 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!19410 = !DILocation(line: 34, column: 10, scope: !19408)
!19411 = !DILocation(line: 34, column: 33, scope: !19408)
!19412 = !DILocation(line: 34, column: 3, scope: !19408)
!19413 = !DILocation(line: 40, column: 3, scope: !19408)
!19414 = distinct !DISubprogram(name: "xnumtoumax", scope: !19415, file: !19415, line: 36, type: !2124, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2121, retainedNodes: !152)
!19415 = !DIFile(filename: "./lib/xdectoint.c", directory: "/home/mohamad/clone/coreutils")
!19416 = !DILocalVariable(name: "n_str", arg: 1, scope: !19414, file: !19415, line: 36, type: !146)
!19417 = !DILocation(line: 36, column: 26, scope: !19414)
!19418 = !DILocalVariable(name: "base", arg: 2, scope: !19414, file: !19415, line: 36, type: !27)
!19419 = !DILocation(line: 36, column: 37, scope: !19414)
!19420 = !DILocalVariable(name: "min", arg: 3, scope: !19414, file: !19415, line: 36, type: !168)
!19421 = !DILocation(line: 36, column: 57, scope: !19414)
!19422 = !DILocalVariable(name: "max", arg: 4, scope: !19414, file: !19415, line: 36, type: !168)
!19423 = !DILocation(line: 36, column: 76, scope: !19414)
!19424 = !DILocalVariable(name: "suffixes", arg: 5, scope: !19414, file: !19415, line: 37, type: !146)
!19425 = !DILocation(line: 37, column: 26, scope: !19414)
!19426 = !DILocalVariable(name: "err", arg: 6, scope: !19414, file: !19415, line: 37, type: !146)
!19427 = !DILocation(line: 37, column: 48, scope: !19414)
!19428 = !DILocalVariable(name: "err_exit", arg: 7, scope: !19414, file: !19415, line: 37, type: !27)
!19429 = !DILocation(line: 37, column: 57, scope: !19414)
!19430 = !DILocalVariable(name: "s_err", scope: !19414, file: !19415, line: 39, type: !1319)
!19431 = !DILocation(line: 39, column: 16, scope: !19414)
!19432 = !DILocalVariable(name: "tnum", scope: !19414, file: !19415, line: 41, type: !168)
!19433 = !DILocation(line: 41, column: 17, scope: !19414)
!19434 = !DILocation(line: 42, column: 22, scope: !19414)
!19435 = !DILocation(line: 42, column: 35, scope: !19414)
!19436 = !DILocation(line: 42, column: 48, scope: !19414)
!19437 = !DILocation(line: 42, column: 11, scope: !19414)
!19438 = !DILocation(line: 42, column: 9, scope: !19414)
!19439 = !DILocation(line: 44, column: 7, scope: !19440)
!19440 = distinct !DILexicalBlock(scope: !19414, file: !19415, line: 44, column: 7)
!19441 = !DILocation(line: 44, column: 13, scope: !19440)
!19442 = !DILocation(line: 44, column: 7, scope: !19414)
!19443 = !DILocation(line: 46, column: 11, scope: !19444)
!19444 = distinct !DILexicalBlock(scope: !19445, file: !19415, line: 46, column: 11)
!19445 = distinct !DILexicalBlock(scope: !19440, file: !19415, line: 45, column: 5)
!19446 = !DILocation(line: 46, column: 18, scope: !19444)
!19447 = !DILocation(line: 46, column: 16, scope: !19444)
!19448 = !DILocation(line: 46, column: 22, scope: !19444)
!19449 = !DILocation(line: 46, column: 25, scope: !19444)
!19450 = !DILocation(line: 46, column: 31, scope: !19444)
!19451 = !DILocation(line: 46, column: 29, scope: !19444)
!19452 = !DILocation(line: 46, column: 11, scope: !19445)
!19453 = !DILocation(line: 48, column: 17, scope: !19454)
!19454 = distinct !DILexicalBlock(scope: !19444, file: !19415, line: 47, column: 9)
!19455 = !DILocation(line: 51, column: 15, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19454, file: !19415, line: 51, column: 15)
!19457 = !DILocation(line: 51, column: 20, scope: !19456)
!19458 = !DILocation(line: 51, column: 15, scope: !19454)
!19459 = !DILocation(line: 52, column: 13, scope: !19456)
!19460 = !DILocation(line: 52, column: 19, scope: !19456)
!19461 = !DILocation(line: 58, column: 13, scope: !19456)
!19462 = !DILocation(line: 58, column: 19, scope: !19456)
!19463 = !DILocation(line: 59, column: 9, scope: !19454)
!19464 = !DILocation(line: 60, column: 5, scope: !19445)
!19465 = !DILocation(line: 61, column: 12, scope: !19466)
!19466 = distinct !DILexicalBlock(scope: !19440, file: !19415, line: 61, column: 12)
!19467 = !DILocation(line: 61, column: 18, scope: !19466)
!19468 = !DILocation(line: 61, column: 12, scope: !19440)
!19469 = !DILocation(line: 62, column: 5, scope: !19466)
!19470 = !DILocation(line: 62, column: 11, scope: !19466)
!19471 = !DILocation(line: 63, column: 12, scope: !19472)
!19472 = distinct !DILexicalBlock(scope: !19466, file: !19415, line: 63, column: 12)
!19473 = !DILocation(line: 63, column: 18, scope: !19472)
!19474 = !DILocation(line: 63, column: 12, scope: !19466)
!19475 = !DILocation(line: 64, column: 5, scope: !19472)
!19476 = !DILocation(line: 64, column: 11, scope: !19472)
!19477 = !DILocation(line: 66, column: 7, scope: !19478)
!19478 = distinct !DILexicalBlock(scope: !19414, file: !19415, line: 66, column: 7)
!19479 = !DILocation(line: 66, column: 13, scope: !19478)
!19480 = !DILocation(line: 66, column: 7, scope: !19414)
!19481 = !DILocation(line: 69, column: 14, scope: !19482)
!19482 = distinct !DILexicalBlock(scope: !19478, file: !19415, line: 67, column: 5)
!19483 = !DILocation(line: 69, column: 25, scope: !19482)
!19484 = !DILocation(line: 69, column: 50, scope: !19482)
!19485 = !DILocation(line: 69, column: 56, scope: !19482)
!19486 = !DILocation(line: 69, column: 72, scope: !19482)
!19487 = !DILocation(line: 70, column: 24, scope: !19482)
!19488 = !DILocation(line: 70, column: 36, scope: !19482)
!19489 = !DILocation(line: 70, column: 29, scope: !19482)
!19490 = !DILocation(line: 69, column: 7, scope: !19482)
!19491 = !DILocation(line: 71, column: 5, scope: !19482)
!19492 = !DILocation(line: 73, column: 10, scope: !19414)
!19493 = !DILocation(line: 73, column: 3, scope: !19414)
!19494 = distinct !DISubprogram(name: "xdectoumax", scope: !19415, file: !19415, line: 82, type: !2126, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2121, retainedNodes: !152)
!19495 = !DILocalVariable(name: "n_str", arg: 1, scope: !19494, file: !19415, line: 82, type: !146)
!19496 = !DILocation(line: 82, column: 26, scope: !19494)
!19497 = !DILocalVariable(name: "min", arg: 2, scope: !19494, file: !19415, line: 82, type: !168)
!19498 = !DILocation(line: 82, column: 47, scope: !19494)
!19499 = !DILocalVariable(name: "max", arg: 3, scope: !19494, file: !19415, line: 82, type: !168)
!19500 = !DILocation(line: 82, column: 66, scope: !19494)
!19501 = !DILocalVariable(name: "suffixes", arg: 4, scope: !19494, file: !19415, line: 83, type: !146)
!19502 = !DILocation(line: 83, column: 26, scope: !19494)
!19503 = !DILocalVariable(name: "err", arg: 5, scope: !19494, file: !19415, line: 83, type: !146)
!19504 = !DILocation(line: 83, column: 48, scope: !19494)
!19505 = !DILocalVariable(name: "err_exit", arg: 6, scope: !19494, file: !19415, line: 83, type: !27)
!19506 = !DILocation(line: 83, column: 57, scope: !19494)
!19507 = !DILocation(line: 85, column: 23, scope: !19494)
!19508 = !DILocation(line: 85, column: 34, scope: !19494)
!19509 = !DILocation(line: 85, column: 39, scope: !19494)
!19510 = !DILocation(line: 85, column: 44, scope: !19494)
!19511 = !DILocation(line: 85, column: 54, scope: !19494)
!19512 = !DILocation(line: 85, column: 59, scope: !19494)
!19513 = !DILocation(line: 85, column: 10, scope: !19494)
!19514 = !DILocation(line: 85, column: 3, scope: !19494)
!19515 = distinct !DISubprogram(name: "xgetcwd", scope: !19516, file: !19516, line: 35, type: !2131, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19516 = !DIFile(filename: "lib/xgetcwd.c", directory: "/home/mohamad/clone/coreutils")
!19517 = !DILocalVariable(name: "cwd", scope: !19515, file: !19516, line: 37, type: !143)
!19518 = !DILocation(line: 37, column: 9, scope: !19515)
!19519 = !DILocation(line: 37, column: 15, scope: !19515)
!19520 = !DILocation(line: 38, column: 9, scope: !19521)
!19521 = distinct !DILexicalBlock(scope: !19515, file: !19516, line: 38, column: 7)
!19522 = !DILocation(line: 38, column: 13, scope: !19521)
!19523 = !DILocation(line: 38, column: 16, scope: !19521)
!19524 = !DILocation(line: 38, column: 22, scope: !19521)
!19525 = !DILocation(line: 38, column: 7, scope: !19515)
!19526 = !DILocation(line: 39, column: 5, scope: !19521)
!19527 = !DILocation(line: 40, column: 10, scope: !19515)
!19528 = !DILocation(line: 40, column: 3, scope: !19515)
!19529 = distinct !DISubprogram(name: "xgethostname", scope: !19530, file: !19530, line: 41, type: !2131, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2133, retainedNodes: !152)
!19530 = !DIFile(filename: "lib/xgethostname.c", directory: "/home/mohamad/clone/coreutils")
!19531 = !DILocalVariable(name: "hostname", scope: !19529, file: !19530, line: 43, type: !143)
!19532 = !DILocation(line: 43, column: 9, scope: !19529)
!19533 = !DILocalVariable(name: "size", scope: !19529, file: !19530, line: 44, type: !149)
!19534 = !DILocation(line: 44, column: 10, scope: !19529)
!19535 = !DILocation(line: 46, column: 3, scope: !19529)
!19536 = !DILocalVariable(name: "size_1", scope: !19537, file: !19530, line: 51, type: !149)
!19537 = distinct !DILexicalBlock(scope: !19529, file: !19530, line: 47, column: 5)
!19538 = !DILocation(line: 51, column: 14, scope: !19537)
!19539 = !DILocation(line: 53, column: 29, scope: !19537)
!19540 = !DILocation(line: 53, column: 18, scope: !19537)
!19541 = !DILocation(line: 53, column: 16, scope: !19537)
!19542 = !DILocation(line: 54, column: 16, scope: !19537)
!19543 = !DILocation(line: 54, column: 21, scope: !19537)
!19544 = !DILocation(line: 54, column: 14, scope: !19537)
!19545 = !DILocation(line: 55, column: 7, scope: !19537)
!19546 = !DILocation(line: 55, column: 16, scope: !19537)
!19547 = !DILocation(line: 55, column: 23, scope: !19537)
!19548 = !DILocation(line: 55, column: 28, scope: !19537)
!19549 = !DILocation(line: 56, column: 7, scope: !19537)
!19550 = !DILocation(line: 56, column: 13, scope: !19537)
!19551 = !DILocation(line: 58, column: 24, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19537, file: !19530, line: 58, column: 11)
!19553 = !DILocation(line: 58, column: 34, scope: !19552)
!19554 = !DILocation(line: 58, column: 11, scope: !19552)
!19555 = !DILocation(line: 58, column: 42, scope: !19552)
!19556 = !DILocation(line: 58, column: 11, scope: !19537)
!19557 = !DILocation(line: 60, column: 17, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !19559, file: !19530, line: 60, column: 15)
!19559 = distinct !DILexicalBlock(scope: !19552, file: !19530, line: 59, column: 9)
!19560 = !DILocation(line: 60, column: 26, scope: !19558)
!19561 = !DILocation(line: 60, column: 33, scope: !19558)
!19562 = !DILocation(line: 60, column: 15, scope: !19559)
!19563 = !DILocation(line: 61, column: 13, scope: !19558)
!19564 = !DILocation(line: 62, column: 9, scope: !19559)
!19565 = !DILocation(line: 63, column: 16, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !19552, file: !19530, line: 63, column: 16)
!19567 = !DILocation(line: 63, column: 22, scope: !19566)
!19568 = !DILocation(line: 63, column: 27, scope: !19566)
!19569 = !DILocation(line: 63, column: 30, scope: !19566)
!19570 = !DILocation(line: 63, column: 36, scope: !19566)
!19571 = !DILocation(line: 63, column: 52, scope: !19566)
!19572 = !DILocation(line: 63, column: 55, scope: !19566)
!19573 = !DILocation(line: 63, column: 61, scope: !19566)
!19574 = !DILocation(line: 65, column: 16, scope: !19566)
!19575 = !DILocation(line: 65, column: 19, scope: !19566)
!19576 = !DILocation(line: 65, column: 25, scope: !19566)
!19577 = !DILocation(line: 63, column: 16, scope: !19552)
!19578 = !DILocalVariable(name: "saved_errno", scope: !19579, file: !19530, line: 67, type: !27)
!19579 = distinct !DILexicalBlock(scope: !19566, file: !19530, line: 66, column: 9)
!19580 = !DILocation(line: 67, column: 15, scope: !19579)
!19581 = !DILocation(line: 67, column: 29, scope: !19579)
!19582 = !DILocation(line: 68, column: 17, scope: !19579)
!19583 = !DILocation(line: 68, column: 11, scope: !19579)
!19584 = !DILocation(line: 69, column: 19, scope: !19579)
!19585 = !DILocation(line: 69, column: 11, scope: !19579)
!19586 = !DILocation(line: 69, column: 17, scope: !19579)
!19587 = !DILocation(line: 70, column: 11, scope: !19579)
!19588 = distinct !{!19588, !19535, !19589}
!19589 = !DILocation(line: 72, column: 5, scope: !19529)
!19590 = !DILocalVariable(name: "actual_size", scope: !19591, file: !19530, line: 76, type: !149)
!19591 = distinct !DILexicalBlock(scope: !19529, file: !19530, line: 75, column: 3)
!19592 = !DILocation(line: 76, column: 12, scope: !19591)
!19593 = !DILocation(line: 76, column: 34, scope: !19591)
!19594 = !DILocation(line: 76, column: 26, scope: !19591)
!19595 = !DILocation(line: 76, column: 44, scope: !19591)
!19596 = !DILocation(line: 77, column: 9, scope: !19597)
!19597 = distinct !DILexicalBlock(scope: !19591, file: !19530, line: 77, column: 9)
!19598 = !DILocation(line: 77, column: 23, scope: !19597)
!19599 = !DILocation(line: 77, column: 21, scope: !19597)
!19600 = !DILocation(line: 77, column: 9, scope: !19591)
!19601 = !DILocalVariable(name: "shrinked_hostname", scope: !19602, file: !19530, line: 79, type: !143)
!19602 = distinct !DILexicalBlock(scope: !19597, file: !19530, line: 78, column: 7)
!19603 = !DILocation(line: 79, column: 15, scope: !19602)
!19604 = !DILocation(line: 79, column: 44, scope: !19602)
!19605 = !DILocation(line: 79, column: 54, scope: !19602)
!19606 = !DILocation(line: 79, column: 35, scope: !19602)
!19607 = !DILocation(line: 80, column: 13, scope: !19608)
!19608 = distinct !DILexicalBlock(scope: !19602, file: !19530, line: 80, column: 13)
!19609 = !DILocation(line: 80, column: 31, scope: !19608)
!19610 = !DILocation(line: 80, column: 13, scope: !19602)
!19611 = !DILocation(line: 81, column: 22, scope: !19608)
!19612 = !DILocation(line: 81, column: 20, scope: !19608)
!19613 = !DILocation(line: 81, column: 11, scope: !19608)
!19614 = !DILocation(line: 82, column: 7, scope: !19602)
!19615 = !DILocation(line: 85, column: 10, scope: !19529)
!19616 = !DILocation(line: 85, column: 3, scope: !19529)
!19617 = !DILocation(line: 86, column: 1, scope: !19529)
!19618 = distinct !DISubprogram(name: "xstrtoul", scope: !19619, file: !19619, line: 76, type: !2139, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2136, retainedNodes: !152)
!19619 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mohamad/clone/coreutils")
!19620 = !DILocalVariable(name: "s", arg: 1, scope: !19618, file: !19619, line: 76, type: !146)
!19621 = !DILocation(line: 76, column: 24, scope: !19618)
!19622 = !DILocalVariable(name: "ptr", arg: 2, scope: !19618, file: !19619, line: 76, type: !142)
!19623 = !DILocation(line: 76, column: 34, scope: !19618)
!19624 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19618, file: !19619, line: 76, type: !27)
!19625 = !DILocation(line: 76, column: 43, scope: !19618)
!19626 = !DILocalVariable(name: "val", arg: 4, scope: !19618, file: !19619, line: 77, type: !2141)
!19627 = !DILocation(line: 77, column: 24, scope: !19618)
!19628 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19618, file: !19619, line: 77, type: !146)
!19629 = !DILocation(line: 77, column: 41, scope: !19618)
!19630 = !DILocalVariable(name: "t_ptr", scope: !19618, file: !19619, line: 79, type: !143)
!19631 = !DILocation(line: 79, column: 9, scope: !19618)
!19632 = !DILocalVariable(name: "p", scope: !19618, file: !19619, line: 80, type: !142)
!19633 = !DILocation(line: 80, column: 10, scope: !19618)
!19634 = !DILocalVariable(name: "tmp", scope: !19618, file: !19619, line: 81, type: !151)
!19635 = !DILocation(line: 81, column: 14, scope: !19618)
!19636 = !DILocalVariable(name: "err", scope: !19618, file: !19619, line: 82, type: !1319)
!19637 = !DILocation(line: 82, column: 16, scope: !19618)
!19638 = !DILocation(line: 84, column: 3, scope: !19618)
!19639 = !DILocation(line: 86, column: 8, scope: !19618)
!19640 = !DILocation(line: 86, column: 14, scope: !19618)
!19641 = !DILocation(line: 86, column: 5, scope: !19618)
!19642 = !DILocation(line: 88, column: 3, scope: !19618)
!19643 = !DILocation(line: 88, column: 9, scope: !19618)
!19644 = !DILocalVariable(name: "q", scope: !19645, file: !19619, line: 92, type: !146)
!19645 = distinct !DILexicalBlock(scope: !19646, file: !19619, line: 91, column: 5)
!19646 = distinct !DILexicalBlock(scope: !19618, file: !19619, line: 90, column: 7)
!19647 = !DILocation(line: 92, column: 19, scope: !19645)
!19648 = !DILocation(line: 92, column: 23, scope: !19645)
!19649 = !DILocalVariable(name: "ch", scope: !19645, file: !19619, line: 93, type: !579)
!19650 = !DILocation(line: 93, column: 21, scope: !19645)
!19651 = !DILocation(line: 93, column: 27, scope: !19645)
!19652 = !DILocation(line: 93, column: 26, scope: !19645)
!19653 = !DILocation(line: 94, column: 7, scope: !19645)
!19654 = !DILocation(line: 94, column: 14, scope: !19645)
!19655 = !DILocation(line: 95, column: 15, scope: !19645)
!19656 = !DILocation(line: 95, column: 14, scope: !19645)
!19657 = !DILocation(line: 95, column: 12, scope: !19645)
!19658 = distinct !{!19658, !19653, !19659}
!19659 = !DILocation(line: 95, column: 17, scope: !19645)
!19660 = !DILocation(line: 96, column: 11, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19645, file: !19619, line: 96, column: 11)
!19662 = !DILocation(line: 96, column: 14, scope: !19661)
!19663 = !DILocation(line: 96, column: 11, scope: !19645)
!19664 = !DILocation(line: 97, column: 9, scope: !19661)
!19665 = !DILocation(line: 100, column: 19, scope: !19618)
!19666 = !DILocation(line: 100, column: 22, scope: !19618)
!19667 = !DILocation(line: 100, column: 25, scope: !19618)
!19668 = !DILocation(line: 100, column: 9, scope: !19618)
!19669 = !DILocation(line: 100, column: 7, scope: !19618)
!19670 = !DILocation(line: 102, column: 8, scope: !19671)
!19671 = distinct !DILexicalBlock(scope: !19618, file: !19619, line: 102, column: 7)
!19672 = !DILocation(line: 102, column: 7, scope: !19671)
!19673 = !DILocation(line: 102, column: 13, scope: !19671)
!19674 = !DILocation(line: 102, column: 10, scope: !19671)
!19675 = !DILocation(line: 102, column: 7, scope: !19618)
!19676 = !DILocation(line: 106, column: 11, scope: !19677)
!19677 = distinct !DILexicalBlock(scope: !19678, file: !19619, line: 106, column: 11)
!19678 = distinct !DILexicalBlock(scope: !19671, file: !19619, line: 103, column: 5)
!19679 = !DILocation(line: 106, column: 26, scope: !19677)
!19680 = !DILocation(line: 106, column: 31, scope: !19677)
!19681 = !DILocation(line: 106, column: 30, scope: !19677)
!19682 = !DILocation(line: 106, column: 29, scope: !19677)
!19683 = !DILocation(line: 106, column: 33, scope: !19677)
!19684 = !DILocation(line: 106, column: 44, scope: !19677)
!19685 = !DILocation(line: 106, column: 62, scope: !19677)
!19686 = !DILocation(line: 106, column: 61, scope: !19677)
!19687 = !DILocation(line: 106, column: 60, scope: !19677)
!19688 = !DILocation(line: 106, column: 36, scope: !19677)
!19689 = !DILocation(line: 106, column: 11, scope: !19678)
!19690 = !DILocation(line: 107, column: 13, scope: !19677)
!19691 = !DILocation(line: 107, column: 9, scope: !19677)
!19692 = !DILocation(line: 109, column: 9, scope: !19677)
!19693 = !DILocation(line: 110, column: 5, scope: !19678)
!19694 = !DILocation(line: 111, column: 12, scope: !19695)
!19695 = distinct !DILexicalBlock(scope: !19671, file: !19619, line: 111, column: 12)
!19696 = !DILocation(line: 111, column: 18, scope: !19695)
!19697 = !DILocation(line: 111, column: 12, scope: !19671)
!19698 = !DILocation(line: 113, column: 11, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19700, file: !19619, line: 113, column: 11)
!19700 = distinct !DILexicalBlock(scope: !19695, file: !19619, line: 112, column: 5)
!19701 = !DILocation(line: 113, column: 17, scope: !19699)
!19702 = !DILocation(line: 113, column: 11, scope: !19700)
!19703 = !DILocation(line: 114, column: 9, scope: !19699)
!19704 = !DILocation(line: 115, column: 11, scope: !19700)
!19705 = !DILocation(line: 116, column: 5, scope: !19700)
!19706 = !DILocation(line: 121, column: 8, scope: !19707)
!19707 = distinct !DILexicalBlock(scope: !19618, file: !19619, line: 121, column: 7)
!19708 = !DILocation(line: 121, column: 7, scope: !19618)
!19709 = !DILocation(line: 123, column: 14, scope: !19710)
!19710 = distinct !DILexicalBlock(scope: !19707, file: !19619, line: 122, column: 5)
!19711 = !DILocation(line: 123, column: 8, scope: !19710)
!19712 = !DILocation(line: 123, column: 12, scope: !19710)
!19713 = !DILocation(line: 124, column: 14, scope: !19710)
!19714 = !DILocation(line: 124, column: 7, scope: !19710)
!19715 = !DILocation(line: 127, column: 9, scope: !19716)
!19716 = distinct !DILexicalBlock(scope: !19618, file: !19619, line: 127, column: 7)
!19717 = !DILocation(line: 127, column: 8, scope: !19716)
!19718 = !DILocation(line: 127, column: 7, scope: !19716)
!19719 = !DILocation(line: 127, column: 11, scope: !19716)
!19720 = !DILocation(line: 127, column: 7, scope: !19618)
!19721 = !DILocalVariable(name: "base", scope: !19722, file: !19619, line: 129, type: !27)
!19722 = distinct !DILexicalBlock(scope: !19716, file: !19619, line: 128, column: 5)
!19723 = !DILocation(line: 129, column: 11, scope: !19722)
!19724 = !DILocalVariable(name: "suffixes", scope: !19722, file: !19619, line: 130, type: !27)
!19725 = !DILocation(line: 130, column: 11, scope: !19722)
!19726 = !DILocalVariable(name: "overflow", scope: !19722, file: !19619, line: 131, type: !1319)
!19727 = !DILocation(line: 131, column: 20, scope: !19722)
!19728 = !DILocation(line: 133, column: 20, scope: !19729)
!19729 = distinct !DILexicalBlock(scope: !19722, file: !19619, line: 133, column: 11)
!19730 = !DILocation(line: 133, column: 38, scope: !19729)
!19731 = !DILocation(line: 133, column: 37, scope: !19729)
!19732 = !DILocation(line: 133, column: 36, scope: !19729)
!19733 = !DILocation(line: 133, column: 12, scope: !19729)
!19734 = !DILocation(line: 133, column: 11, scope: !19722)
!19735 = !DILocation(line: 135, column: 18, scope: !19736)
!19736 = distinct !DILexicalBlock(scope: !19729, file: !19619, line: 134, column: 9)
!19737 = !DILocation(line: 135, column: 12, scope: !19736)
!19738 = !DILocation(line: 135, column: 16, scope: !19736)
!19739 = !DILocation(line: 136, column: 18, scope: !19736)
!19740 = !DILocation(line: 136, column: 22, scope: !19736)
!19741 = !DILocation(line: 136, column: 11, scope: !19736)
!19742 = !DILocation(line: 139, column: 17, scope: !19722)
!19743 = !DILocation(line: 139, column: 16, scope: !19722)
!19744 = !DILocation(line: 139, column: 15, scope: !19722)
!19745 = !DILocation(line: 139, column: 7, scope: !19722)
!19746 = !DILocation(line: 151, column: 23, scope: !19747)
!19747 = distinct !DILexicalBlock(scope: !19748, file: !19619, line: 151, column: 15)
!19748 = distinct !DILexicalBlock(scope: !19722, file: !19619, line: 140, column: 9)
!19749 = !DILocation(line: 151, column: 15, scope: !19747)
!19750 = !DILocation(line: 151, column: 15, scope: !19748)
!19751 = !DILocation(line: 152, column: 21, scope: !19747)
!19752 = !DILocation(line: 152, column: 13, scope: !19747)
!19753 = !DILocation(line: 155, column: 21, scope: !19754)
!19754 = distinct !DILexicalBlock(scope: !19755, file: !19619, line: 155, column: 21)
!19755 = distinct !DILexicalBlock(scope: !19747, file: !19619, line: 153, column: 15)
!19756 = !DILocation(line: 155, column: 29, scope: !19754)
!19757 = !DILocation(line: 155, column: 21, scope: !19755)
!19758 = !DILocation(line: 156, column: 28, scope: !19754)
!19759 = !DILocation(line: 156, column: 19, scope: !19754)
!19760 = !DILocation(line: 157, column: 17, scope: !19755)
!19761 = !DILocation(line: 161, column: 22, scope: !19755)
!19762 = !DILocation(line: 162, column: 25, scope: !19755)
!19763 = !DILocation(line: 163, column: 17, scope: !19755)
!19764 = !DILocation(line: 164, column: 15, scope: !19755)
!19765 = !DILocation(line: 165, column: 9, scope: !19748)
!19766 = !DILocation(line: 167, column: 17, scope: !19722)
!19767 = !DILocation(line: 167, column: 16, scope: !19722)
!19768 = !DILocation(line: 167, column: 15, scope: !19722)
!19769 = !DILocation(line: 167, column: 7, scope: !19722)
!19770 = !DILocation(line: 170, column: 22, scope: !19771)
!19771 = distinct !DILexicalBlock(scope: !19722, file: !19619, line: 168, column: 9)
!19772 = !DILocation(line: 170, column: 20, scope: !19771)
!19773 = !DILocation(line: 171, column: 11, scope: !19771)
!19774 = !DILocation(line: 177, column: 22, scope: !19771)
!19775 = !DILocation(line: 177, column: 20, scope: !19771)
!19776 = !DILocation(line: 178, column: 11, scope: !19771)
!19777 = !DILocation(line: 181, column: 20, scope: !19771)
!19778 = !DILocation(line: 182, column: 11, scope: !19771)
!19779 = !DILocation(line: 185, column: 48, scope: !19771)
!19780 = !DILocation(line: 185, column: 22, scope: !19771)
!19781 = !DILocation(line: 185, column: 20, scope: !19771)
!19782 = !DILocation(line: 186, column: 11, scope: !19771)
!19783 = !DILocation(line: 190, column: 48, scope: !19771)
!19784 = !DILocation(line: 190, column: 22, scope: !19771)
!19785 = !DILocation(line: 190, column: 20, scope: !19771)
!19786 = !DILocation(line: 191, column: 11, scope: !19771)
!19787 = !DILocation(line: 195, column: 48, scope: !19771)
!19788 = !DILocation(line: 195, column: 22, scope: !19771)
!19789 = !DILocation(line: 195, column: 20, scope: !19771)
!19790 = !DILocation(line: 196, column: 11, scope: !19771)
!19791 = !DILocation(line: 200, column: 48, scope: !19771)
!19792 = !DILocation(line: 200, column: 22, scope: !19771)
!19793 = !DILocation(line: 200, column: 20, scope: !19771)
!19794 = !DILocation(line: 201, column: 11, scope: !19771)
!19795 = !DILocation(line: 204, column: 48, scope: !19771)
!19796 = !DILocation(line: 204, column: 22, scope: !19771)
!19797 = !DILocation(line: 204, column: 20, scope: !19771)
!19798 = !DILocation(line: 205, column: 11, scope: !19771)
!19799 = !DILocation(line: 209, column: 48, scope: !19771)
!19800 = !DILocation(line: 209, column: 22, scope: !19771)
!19801 = !DILocation(line: 209, column: 20, scope: !19771)
!19802 = !DILocation(line: 210, column: 11, scope: !19771)
!19803 = !DILocation(line: 213, column: 22, scope: !19771)
!19804 = !DILocation(line: 213, column: 20, scope: !19771)
!19805 = !DILocation(line: 214, column: 11, scope: !19771)
!19806 = !DILocation(line: 217, column: 48, scope: !19771)
!19807 = !DILocation(line: 217, column: 22, scope: !19771)
!19808 = !DILocation(line: 217, column: 20, scope: !19771)
!19809 = !DILocation(line: 218, column: 11, scope: !19771)
!19810 = !DILocation(line: 221, column: 48, scope: !19771)
!19811 = !DILocation(line: 221, column: 22, scope: !19771)
!19812 = !DILocation(line: 221, column: 20, scope: !19771)
!19813 = !DILocation(line: 222, column: 11, scope: !19771)
!19814 = !DILocation(line: 225, column: 18, scope: !19771)
!19815 = !DILocation(line: 225, column: 12, scope: !19771)
!19816 = !DILocation(line: 225, column: 16, scope: !19771)
!19817 = !DILocation(line: 226, column: 18, scope: !19771)
!19818 = !DILocation(line: 226, column: 22, scope: !19771)
!19819 = !DILocation(line: 226, column: 11, scope: !19771)
!19820 = !DILocation(line: 229, column: 14, scope: !19722)
!19821 = !DILocation(line: 229, column: 11, scope: !19722)
!19822 = !DILocation(line: 230, column: 13, scope: !19722)
!19823 = !DILocation(line: 230, column: 8, scope: !19722)
!19824 = !DILocation(line: 230, column: 10, scope: !19722)
!19825 = !DILocation(line: 231, column: 13, scope: !19826)
!19826 = distinct !DILexicalBlock(scope: !19722, file: !19619, line: 231, column: 11)
!19827 = !DILocation(line: 231, column: 12, scope: !19826)
!19828 = !DILocation(line: 231, column: 11, scope: !19826)
!19829 = !DILocation(line: 231, column: 11, scope: !19722)
!19830 = !DILocation(line: 232, column: 13, scope: !19826)
!19831 = !DILocation(line: 232, column: 9, scope: !19826)
!19832 = !DILocation(line: 233, column: 5, scope: !19722)
!19833 = !DILocation(line: 235, column: 10, scope: !19618)
!19834 = !DILocation(line: 235, column: 4, scope: !19618)
!19835 = !DILocation(line: 235, column: 8, scope: !19618)
!19836 = !DILocation(line: 236, column: 10, scope: !19618)
!19837 = !DILocation(line: 236, column: 3, scope: !19618)
!19838 = !DILocation(line: 237, column: 1, scope: !19618)
!19839 = distinct !DISubprogram(name: "bkm_scale", scope: !19619, file: !19619, line: 48, type: !2142, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2136, retainedNodes: !152)
!19840 = !DILocalVariable(name: "x", arg: 1, scope: !19839, file: !19619, line: 48, type: !2141)
!19841 = !DILocation(line: 48, column: 24, scope: !19839)
!19842 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19839, file: !19619, line: 48, type: !27)
!19843 = !DILocation(line: 48, column: 31, scope: !19839)
!19844 = !DILocation(line: 55, column: 26, scope: !19845)
!19845 = distinct !DILexicalBlock(scope: !19839, file: !19619, line: 55, column: 7)
!19846 = !DILocation(line: 55, column: 24, scope: !19845)
!19847 = !DILocation(line: 55, column: 42, scope: !19845)
!19848 = !DILocation(line: 55, column: 41, scope: !19845)
!19849 = !DILocation(line: 55, column: 39, scope: !19845)
!19850 = !DILocation(line: 55, column: 7, scope: !19839)
!19851 = !DILocation(line: 57, column: 8, scope: !19852)
!19852 = distinct !DILexicalBlock(scope: !19845, file: !19619, line: 56, column: 5)
!19853 = !DILocation(line: 57, column: 10, scope: !19852)
!19854 = !DILocation(line: 58, column: 7, scope: !19852)
!19855 = !DILocation(line: 60, column: 9, scope: !19839)
!19856 = !DILocation(line: 60, column: 4, scope: !19839)
!19857 = !DILocation(line: 60, column: 6, scope: !19839)
!19858 = !DILocation(line: 61, column: 3, scope: !19839)
!19859 = !DILocation(line: 62, column: 1, scope: !19839)
!19860 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19619, file: !19619, line: 65, type: !2144, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2136, retainedNodes: !152)
!19861 = !DILocalVariable(name: "x", arg: 1, scope: !19860, file: !19619, line: 65, type: !2141)
!19862 = !DILocation(line: 65, column: 33, scope: !19860)
!19863 = !DILocalVariable(name: "base", arg: 2, scope: !19860, file: !19619, line: 65, type: !27)
!19864 = !DILocation(line: 65, column: 40, scope: !19860)
!19865 = !DILocalVariable(name: "power", arg: 3, scope: !19860, file: !19619, line: 65, type: !27)
!19866 = !DILocation(line: 65, column: 50, scope: !19860)
!19867 = !DILocalVariable(name: "err", scope: !19860, file: !19619, line: 67, type: !1319)
!19868 = !DILocation(line: 67, column: 16, scope: !19860)
!19869 = !DILocation(line: 68, column: 3, scope: !19860)
!19870 = !DILocation(line: 68, column: 15, scope: !19860)
!19871 = !DILocation(line: 69, column: 23, scope: !19860)
!19872 = !DILocation(line: 69, column: 26, scope: !19860)
!19873 = !DILocation(line: 69, column: 12, scope: !19860)
!19874 = !DILocation(line: 69, column: 9, scope: !19860)
!19875 = distinct !{!19875, !19869, !19876}
!19876 = !DILocation(line: 69, column: 30, scope: !19860)
!19877 = !DILocation(line: 70, column: 10, scope: !19860)
!19878 = !DILocation(line: 70, column: 3, scope: !19860)
!19879 = distinct !DISubprogram(name: "xstrtol_fatal", scope: !19880, file: !19880, line: 92, type: !2149, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2146, retainedNodes: !152)
!19880 = !DIFile(filename: "lib/xstrtol-error.c", directory: "/home/mohamad/clone/coreutils")
!19881 = !DILocalVariable(name: "err", arg: 1, scope: !19879, file: !19880, line: 92, type: !109)
!19882 = !DILocation(line: 92, column: 34, scope: !19879)
!19883 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19879, file: !19880, line: 93, type: !27)
!19884 = !DILocation(line: 93, column: 20, scope: !19879)
!19885 = !DILocalVariable(name: "c", arg: 3, scope: !19879, file: !19880, line: 93, type: !144)
!19886 = !DILocation(line: 93, column: 34, scope: !19879)
!19887 = !DILocalVariable(name: "long_options", arg: 4, scope: !19879, file: !19880, line: 93, type: !2151)
!19888 = !DILocation(line: 93, column: 58, scope: !19879)
!19889 = !DILocalVariable(name: "arg", arg: 5, scope: !19879, file: !19880, line: 94, type: !146)
!19890 = !DILocation(line: 94, column: 28, scope: !19879)
!19891 = !DILocation(line: 96, column: 18, scope: !19879)
!19892 = !DILocation(line: 96, column: 23, scope: !19879)
!19893 = !DILocation(line: 96, column: 32, scope: !19879)
!19894 = !DILocation(line: 96, column: 35, scope: !19879)
!19895 = !DILocation(line: 96, column: 49, scope: !19879)
!19896 = !DILocation(line: 96, column: 54, scope: !19879)
!19897 = !DILocation(line: 96, column: 3, scope: !19879)
!19898 = !DILocation(line: 97, column: 3, scope: !19879)
!19899 = distinct !DISubprogram(name: "xstrtol_error", scope: !19880, file: !19880, line: 47, type: !2159, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2146, retainedNodes: !152)
!19900 = !DILocalVariable(name: "err", arg: 1, scope: !19899, file: !19880, line: 47, type: !109)
!19901 = !DILocation(line: 47, column: 34, scope: !19899)
!19902 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19899, file: !19880, line: 48, type: !27)
!19903 = !DILocation(line: 48, column: 20, scope: !19899)
!19904 = !DILocalVariable(name: "c", arg: 3, scope: !19899, file: !19880, line: 48, type: !144)
!19905 = !DILocation(line: 48, column: 34, scope: !19899)
!19906 = !DILocalVariable(name: "long_options", arg: 4, scope: !19899, file: !19880, line: 48, type: !2151)
!19907 = !DILocation(line: 48, column: 58, scope: !19899)
!19908 = !DILocalVariable(name: "arg", arg: 5, scope: !19899, file: !19880, line: 49, type: !146)
!19909 = !DILocation(line: 49, column: 28, scope: !19899)
!19910 = !DILocalVariable(name: "exit_status", arg: 6, scope: !19899, file: !19880, line: 50, type: !27)
!19911 = !DILocation(line: 50, column: 20, scope: !19899)
!19912 = !DILocalVariable(name: "hyphens", scope: !19899, file: !19880, line: 52, type: !146)
!19913 = !DILocation(line: 52, column: 15, scope: !19899)
!19914 = !DILocalVariable(name: "msgid", scope: !19899, file: !19880, line: 53, type: !146)
!19915 = !DILocation(line: 53, column: 15, scope: !19899)
!19916 = !DILocalVariable(name: "option", scope: !19899, file: !19880, line: 54, type: !146)
!19917 = !DILocation(line: 54, column: 15, scope: !19899)
!19918 = !DILocalVariable(name: "option_buffer", scope: !19899, file: !19880, line: 55, type: !653)
!19919 = !DILocation(line: 55, column: 8, scope: !19899)
!19920 = !DILocation(line: 57, column: 11, scope: !19899)
!19921 = !DILocation(line: 57, column: 3, scope: !19899)
!19922 = !DILocation(line: 60, column: 7, scope: !19923)
!19923 = distinct !DILexicalBlock(scope: !19899, file: !19880, line: 58, column: 5)
!19924 = !DILocation(line: 63, column: 13, scope: !19923)
!19925 = !DILocation(line: 64, column: 7, scope: !19923)
!19926 = !DILocation(line: 68, column: 13, scope: !19923)
!19927 = !DILocation(line: 69, column: 7, scope: !19923)
!19928 = !DILocation(line: 72, column: 13, scope: !19923)
!19929 = !DILocation(line: 73, column: 7, scope: !19923)
!19930 = !DILocation(line: 76, column: 7, scope: !19931)
!19931 = distinct !DILexicalBlock(scope: !19899, file: !19880, line: 76, column: 7)
!19932 = !DILocation(line: 76, column: 15, scope: !19931)
!19933 = !DILocation(line: 76, column: 7, scope: !19899)
!19934 = !DILocation(line: 78, column: 18, scope: !19935)
!19935 = distinct !DILexicalBlock(scope: !19931, file: !19880, line: 77, column: 5)
!19936 = !DILocation(line: 78, column: 15, scope: !19935)
!19937 = !DILocation(line: 79, column: 26, scope: !19935)
!19938 = !DILocation(line: 79, column: 7, scope: !19935)
!19939 = !DILocation(line: 79, column: 24, scope: !19935)
!19940 = !DILocation(line: 80, column: 7, scope: !19935)
!19941 = !DILocation(line: 80, column: 24, scope: !19935)
!19942 = !DILocation(line: 81, column: 16, scope: !19935)
!19943 = !DILocation(line: 81, column: 14, scope: !19935)
!19944 = !DILocation(line: 82, column: 5, scope: !19935)
!19945 = !DILocation(line: 84, column: 14, scope: !19931)
!19946 = !DILocation(line: 84, column: 27, scope: !19931)
!19947 = !DILocation(line: 84, column: 36, scope: !19931)
!19948 = !{!19949, !2475, i64 0}
!19949 = !{!"option", !2475, i64 0, !2469, i64 8, !2475, i64 16, !2469, i64 24}
!19950 = !DILocation(line: 84, column: 12, scope: !19931)
!19951 = !DILocation(line: 86, column: 10, scope: !19899)
!19952 = !DILocation(line: 86, column: 35, scope: !19899)
!19953 = !DILocation(line: 86, column: 26, scope: !19899)
!19954 = !DILocation(line: 86, column: 43, scope: !19899)
!19955 = !DILocation(line: 86, column: 52, scope: !19899)
!19956 = !DILocation(line: 86, column: 60, scope: !19899)
!19957 = !DILocation(line: 86, column: 3, scope: !19899)
!19958 = !DILocation(line: 87, column: 1, scope: !19899)
!19959 = distinct !DISubprogram(name: "xstrtoumax", scope: !19619, file: !19619, line: 76, type: !2164, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2161, retainedNodes: !152)
!19960 = !DILocalVariable(name: "s", arg: 1, scope: !19959, file: !19619, line: 76, type: !146)
!19961 = !DILocation(line: 76, column: 24, scope: !19959)
!19962 = !DILocalVariable(name: "ptr", arg: 2, scope: !19959, file: !19619, line: 76, type: !142)
!19963 = !DILocation(line: 76, column: 34, scope: !19959)
!19964 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19959, file: !19619, line: 76, type: !27)
!19965 = !DILocation(line: 76, column: 43, scope: !19959)
!19966 = !DILocalVariable(name: "val", arg: 4, scope: !19959, file: !19619, line: 77, type: !1318)
!19967 = !DILocation(line: 77, column: 24, scope: !19959)
!19968 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19959, file: !19619, line: 77, type: !146)
!19969 = !DILocation(line: 77, column: 41, scope: !19959)
!19970 = !DILocalVariable(name: "t_ptr", scope: !19959, file: !19619, line: 79, type: !143)
!19971 = !DILocation(line: 79, column: 9, scope: !19959)
!19972 = !DILocalVariable(name: "p", scope: !19959, file: !19619, line: 80, type: !142)
!19973 = !DILocation(line: 80, column: 10, scope: !19959)
!19974 = !DILocalVariable(name: "tmp", scope: !19959, file: !19619, line: 81, type: !168)
!19975 = !DILocation(line: 81, column: 14, scope: !19959)
!19976 = !DILocalVariable(name: "err", scope: !19959, file: !19619, line: 82, type: !1319)
!19977 = !DILocation(line: 82, column: 16, scope: !19959)
!19978 = !DILocation(line: 84, column: 3, scope: !19959)
!19979 = !DILocation(line: 86, column: 8, scope: !19959)
!19980 = !DILocation(line: 86, column: 14, scope: !19959)
!19981 = !DILocation(line: 86, column: 5, scope: !19959)
!19982 = !DILocation(line: 88, column: 3, scope: !19959)
!19983 = !DILocation(line: 88, column: 9, scope: !19959)
!19984 = !DILocalVariable(name: "q", scope: !19985, file: !19619, line: 92, type: !146)
!19985 = distinct !DILexicalBlock(scope: !19986, file: !19619, line: 91, column: 5)
!19986 = distinct !DILexicalBlock(scope: !19959, file: !19619, line: 90, column: 7)
!19987 = !DILocation(line: 92, column: 19, scope: !19985)
!19988 = !DILocation(line: 92, column: 23, scope: !19985)
!19989 = !DILocalVariable(name: "ch", scope: !19985, file: !19619, line: 93, type: !579)
!19990 = !DILocation(line: 93, column: 21, scope: !19985)
!19991 = !DILocation(line: 93, column: 27, scope: !19985)
!19992 = !DILocation(line: 93, column: 26, scope: !19985)
!19993 = !DILocation(line: 94, column: 7, scope: !19985)
!19994 = !DILocation(line: 94, column: 14, scope: !19985)
!19995 = !DILocation(line: 95, column: 15, scope: !19985)
!19996 = !DILocation(line: 95, column: 14, scope: !19985)
!19997 = !DILocation(line: 95, column: 12, scope: !19985)
!19998 = distinct !{!19998, !19993, !19999}
!19999 = !DILocation(line: 95, column: 17, scope: !19985)
!20000 = !DILocation(line: 96, column: 11, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19985, file: !19619, line: 96, column: 11)
!20002 = !DILocation(line: 96, column: 14, scope: !20001)
!20003 = !DILocation(line: 96, column: 11, scope: !19985)
!20004 = !DILocation(line: 97, column: 9, scope: !20001)
!20005 = !DILocation(line: 100, column: 19, scope: !19959)
!20006 = !DILocation(line: 100, column: 22, scope: !19959)
!20007 = !DILocation(line: 100, column: 25, scope: !19959)
!20008 = !DILocation(line: 100, column: 9, scope: !19959)
!20009 = !DILocation(line: 100, column: 7, scope: !19959)
!20010 = !DILocation(line: 102, column: 8, scope: !20011)
!20011 = distinct !DILexicalBlock(scope: !19959, file: !19619, line: 102, column: 7)
!20012 = !DILocation(line: 102, column: 7, scope: !20011)
!20013 = !DILocation(line: 102, column: 13, scope: !20011)
!20014 = !DILocation(line: 102, column: 10, scope: !20011)
!20015 = !DILocation(line: 102, column: 7, scope: !19959)
!20016 = !DILocation(line: 106, column: 11, scope: !20017)
!20017 = distinct !DILexicalBlock(scope: !20018, file: !19619, line: 106, column: 11)
!20018 = distinct !DILexicalBlock(scope: !20011, file: !19619, line: 103, column: 5)
!20019 = !DILocation(line: 106, column: 26, scope: !20017)
!20020 = !DILocation(line: 106, column: 31, scope: !20017)
!20021 = !DILocation(line: 106, column: 30, scope: !20017)
!20022 = !DILocation(line: 106, column: 29, scope: !20017)
!20023 = !DILocation(line: 106, column: 33, scope: !20017)
!20024 = !DILocation(line: 106, column: 44, scope: !20017)
!20025 = !DILocation(line: 106, column: 62, scope: !20017)
!20026 = !DILocation(line: 106, column: 61, scope: !20017)
!20027 = !DILocation(line: 106, column: 60, scope: !20017)
!20028 = !DILocation(line: 106, column: 36, scope: !20017)
!20029 = !DILocation(line: 106, column: 11, scope: !20018)
!20030 = !DILocation(line: 107, column: 13, scope: !20017)
!20031 = !DILocation(line: 107, column: 9, scope: !20017)
!20032 = !DILocation(line: 109, column: 9, scope: !20017)
!20033 = !DILocation(line: 110, column: 5, scope: !20018)
!20034 = !DILocation(line: 111, column: 12, scope: !20035)
!20035 = distinct !DILexicalBlock(scope: !20011, file: !19619, line: 111, column: 12)
!20036 = !DILocation(line: 111, column: 18, scope: !20035)
!20037 = !DILocation(line: 111, column: 12, scope: !20011)
!20038 = !DILocation(line: 113, column: 11, scope: !20039)
!20039 = distinct !DILexicalBlock(scope: !20040, file: !19619, line: 113, column: 11)
!20040 = distinct !DILexicalBlock(scope: !20035, file: !19619, line: 112, column: 5)
!20041 = !DILocation(line: 113, column: 17, scope: !20039)
!20042 = !DILocation(line: 113, column: 11, scope: !20040)
!20043 = !DILocation(line: 114, column: 9, scope: !20039)
!20044 = !DILocation(line: 115, column: 11, scope: !20040)
!20045 = !DILocation(line: 116, column: 5, scope: !20040)
!20046 = !DILocation(line: 121, column: 8, scope: !20047)
!20047 = distinct !DILexicalBlock(scope: !19959, file: !19619, line: 121, column: 7)
!20048 = !DILocation(line: 121, column: 7, scope: !19959)
!20049 = !DILocation(line: 123, column: 14, scope: !20050)
!20050 = distinct !DILexicalBlock(scope: !20047, file: !19619, line: 122, column: 5)
!20051 = !DILocation(line: 123, column: 8, scope: !20050)
!20052 = !DILocation(line: 123, column: 12, scope: !20050)
!20053 = !DILocation(line: 124, column: 14, scope: !20050)
!20054 = !DILocation(line: 124, column: 7, scope: !20050)
!20055 = !DILocation(line: 127, column: 9, scope: !20056)
!20056 = distinct !DILexicalBlock(scope: !19959, file: !19619, line: 127, column: 7)
!20057 = !DILocation(line: 127, column: 8, scope: !20056)
!20058 = !DILocation(line: 127, column: 7, scope: !20056)
!20059 = !DILocation(line: 127, column: 11, scope: !20056)
!20060 = !DILocation(line: 127, column: 7, scope: !19959)
!20061 = !DILocalVariable(name: "base", scope: !20062, file: !19619, line: 129, type: !27)
!20062 = distinct !DILexicalBlock(scope: !20056, file: !19619, line: 128, column: 5)
!20063 = !DILocation(line: 129, column: 11, scope: !20062)
!20064 = !DILocalVariable(name: "suffixes", scope: !20062, file: !19619, line: 130, type: !27)
!20065 = !DILocation(line: 130, column: 11, scope: !20062)
!20066 = !DILocalVariable(name: "overflow", scope: !20062, file: !19619, line: 131, type: !1319)
!20067 = !DILocation(line: 131, column: 20, scope: !20062)
!20068 = !DILocation(line: 133, column: 20, scope: !20069)
!20069 = distinct !DILexicalBlock(scope: !20062, file: !19619, line: 133, column: 11)
!20070 = !DILocation(line: 133, column: 38, scope: !20069)
!20071 = !DILocation(line: 133, column: 37, scope: !20069)
!20072 = !DILocation(line: 133, column: 36, scope: !20069)
!20073 = !DILocation(line: 133, column: 12, scope: !20069)
!20074 = !DILocation(line: 133, column: 11, scope: !20062)
!20075 = !DILocation(line: 135, column: 18, scope: !20076)
!20076 = distinct !DILexicalBlock(scope: !20069, file: !19619, line: 134, column: 9)
!20077 = !DILocation(line: 135, column: 12, scope: !20076)
!20078 = !DILocation(line: 135, column: 16, scope: !20076)
!20079 = !DILocation(line: 136, column: 18, scope: !20076)
!20080 = !DILocation(line: 136, column: 22, scope: !20076)
!20081 = !DILocation(line: 136, column: 11, scope: !20076)
!20082 = !DILocation(line: 139, column: 17, scope: !20062)
!20083 = !DILocation(line: 139, column: 16, scope: !20062)
!20084 = !DILocation(line: 139, column: 15, scope: !20062)
!20085 = !DILocation(line: 139, column: 7, scope: !20062)
!20086 = !DILocation(line: 151, column: 23, scope: !20087)
!20087 = distinct !DILexicalBlock(scope: !20088, file: !19619, line: 151, column: 15)
!20088 = distinct !DILexicalBlock(scope: !20062, file: !19619, line: 140, column: 9)
!20089 = !DILocation(line: 151, column: 15, scope: !20087)
!20090 = !DILocation(line: 151, column: 15, scope: !20088)
!20091 = !DILocation(line: 152, column: 21, scope: !20087)
!20092 = !DILocation(line: 152, column: 13, scope: !20087)
!20093 = !DILocation(line: 155, column: 21, scope: !20094)
!20094 = distinct !DILexicalBlock(scope: !20095, file: !19619, line: 155, column: 21)
!20095 = distinct !DILexicalBlock(scope: !20087, file: !19619, line: 153, column: 15)
!20096 = !DILocation(line: 155, column: 29, scope: !20094)
!20097 = !DILocation(line: 155, column: 21, scope: !20095)
!20098 = !DILocation(line: 156, column: 28, scope: !20094)
!20099 = !DILocation(line: 156, column: 19, scope: !20094)
!20100 = !DILocation(line: 157, column: 17, scope: !20095)
!20101 = !DILocation(line: 161, column: 22, scope: !20095)
!20102 = !DILocation(line: 162, column: 25, scope: !20095)
!20103 = !DILocation(line: 163, column: 17, scope: !20095)
!20104 = !DILocation(line: 164, column: 15, scope: !20095)
!20105 = !DILocation(line: 165, column: 9, scope: !20088)
!20106 = !DILocation(line: 167, column: 17, scope: !20062)
!20107 = !DILocation(line: 167, column: 16, scope: !20062)
!20108 = !DILocation(line: 167, column: 15, scope: !20062)
!20109 = !DILocation(line: 167, column: 7, scope: !20062)
!20110 = !DILocation(line: 170, column: 22, scope: !20111)
!20111 = distinct !DILexicalBlock(scope: !20062, file: !19619, line: 168, column: 9)
!20112 = !DILocation(line: 170, column: 20, scope: !20111)
!20113 = !DILocation(line: 171, column: 11, scope: !20111)
!20114 = !DILocation(line: 177, column: 22, scope: !20111)
!20115 = !DILocation(line: 177, column: 20, scope: !20111)
!20116 = !DILocation(line: 178, column: 11, scope: !20111)
!20117 = !DILocation(line: 181, column: 20, scope: !20111)
!20118 = !DILocation(line: 182, column: 11, scope: !20111)
!20119 = !DILocation(line: 185, column: 48, scope: !20111)
!20120 = !DILocation(line: 185, column: 22, scope: !20111)
!20121 = !DILocation(line: 185, column: 20, scope: !20111)
!20122 = !DILocation(line: 186, column: 11, scope: !20111)
!20123 = !DILocation(line: 190, column: 48, scope: !20111)
!20124 = !DILocation(line: 190, column: 22, scope: !20111)
!20125 = !DILocation(line: 190, column: 20, scope: !20111)
!20126 = !DILocation(line: 191, column: 11, scope: !20111)
!20127 = !DILocation(line: 195, column: 48, scope: !20111)
!20128 = !DILocation(line: 195, column: 22, scope: !20111)
!20129 = !DILocation(line: 195, column: 20, scope: !20111)
!20130 = !DILocation(line: 196, column: 11, scope: !20111)
!20131 = !DILocation(line: 200, column: 48, scope: !20111)
!20132 = !DILocation(line: 200, column: 22, scope: !20111)
!20133 = !DILocation(line: 200, column: 20, scope: !20111)
!20134 = !DILocation(line: 201, column: 11, scope: !20111)
!20135 = !DILocation(line: 204, column: 48, scope: !20111)
!20136 = !DILocation(line: 204, column: 22, scope: !20111)
!20137 = !DILocation(line: 204, column: 20, scope: !20111)
!20138 = !DILocation(line: 205, column: 11, scope: !20111)
!20139 = !DILocation(line: 209, column: 48, scope: !20111)
!20140 = !DILocation(line: 209, column: 22, scope: !20111)
!20141 = !DILocation(line: 209, column: 20, scope: !20111)
!20142 = !DILocation(line: 210, column: 11, scope: !20111)
!20143 = !DILocation(line: 213, column: 22, scope: !20111)
!20144 = !DILocation(line: 213, column: 20, scope: !20111)
!20145 = !DILocation(line: 214, column: 11, scope: !20111)
!20146 = !DILocation(line: 217, column: 48, scope: !20111)
!20147 = !DILocation(line: 217, column: 22, scope: !20111)
!20148 = !DILocation(line: 217, column: 20, scope: !20111)
!20149 = !DILocation(line: 218, column: 11, scope: !20111)
!20150 = !DILocation(line: 221, column: 48, scope: !20111)
!20151 = !DILocation(line: 221, column: 22, scope: !20111)
!20152 = !DILocation(line: 221, column: 20, scope: !20111)
!20153 = !DILocation(line: 222, column: 11, scope: !20111)
!20154 = !DILocation(line: 225, column: 18, scope: !20111)
!20155 = !DILocation(line: 225, column: 12, scope: !20111)
!20156 = !DILocation(line: 225, column: 16, scope: !20111)
!20157 = !DILocation(line: 226, column: 18, scope: !20111)
!20158 = !DILocation(line: 226, column: 22, scope: !20111)
!20159 = !DILocation(line: 226, column: 11, scope: !20111)
!20160 = !DILocation(line: 229, column: 14, scope: !20062)
!20161 = !DILocation(line: 229, column: 11, scope: !20062)
!20162 = !DILocation(line: 230, column: 13, scope: !20062)
!20163 = !DILocation(line: 230, column: 8, scope: !20062)
!20164 = !DILocation(line: 230, column: 10, scope: !20062)
!20165 = !DILocation(line: 231, column: 13, scope: !20166)
!20166 = distinct !DILexicalBlock(scope: !20062, file: !19619, line: 231, column: 11)
!20167 = !DILocation(line: 231, column: 12, scope: !20166)
!20168 = !DILocation(line: 231, column: 11, scope: !20166)
!20169 = !DILocation(line: 231, column: 11, scope: !20062)
!20170 = !DILocation(line: 232, column: 13, scope: !20166)
!20171 = !DILocation(line: 232, column: 9, scope: !20166)
!20172 = !DILocation(line: 233, column: 5, scope: !20062)
!20173 = !DILocation(line: 235, column: 10, scope: !19959)
!20174 = !DILocation(line: 235, column: 4, scope: !19959)
!20175 = !DILocation(line: 235, column: 8, scope: !19959)
!20176 = !DILocation(line: 236, column: 10, scope: !19959)
!20177 = !DILocation(line: 236, column: 3, scope: !19959)
!20178 = !DILocation(line: 237, column: 1, scope: !19959)
!20179 = distinct !DISubprogram(name: "bkm_scale", scope: !19619, file: !19619, line: 48, type: !2166, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !152)
!20180 = !DILocalVariable(name: "x", arg: 1, scope: !20179, file: !19619, line: 48, type: !1318)
!20181 = !DILocation(line: 48, column: 24, scope: !20179)
!20182 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !20179, file: !19619, line: 48, type: !27)
!20183 = !DILocation(line: 48, column: 31, scope: !20179)
!20184 = !DILocation(line: 55, column: 26, scope: !20185)
!20185 = distinct !DILexicalBlock(scope: !20179, file: !19619, line: 55, column: 7)
!20186 = !DILocation(line: 55, column: 24, scope: !20185)
!20187 = !DILocation(line: 55, column: 42, scope: !20185)
!20188 = !DILocation(line: 55, column: 41, scope: !20185)
!20189 = !DILocation(line: 55, column: 39, scope: !20185)
!20190 = !DILocation(line: 55, column: 7, scope: !20179)
!20191 = !DILocation(line: 57, column: 8, scope: !20192)
!20192 = distinct !DILexicalBlock(scope: !20185, file: !19619, line: 56, column: 5)
!20193 = !DILocation(line: 57, column: 10, scope: !20192)
!20194 = !DILocation(line: 58, column: 7, scope: !20192)
!20195 = !DILocation(line: 60, column: 9, scope: !20179)
!20196 = !DILocation(line: 60, column: 4, scope: !20179)
!20197 = !DILocation(line: 60, column: 6, scope: !20179)
!20198 = !DILocation(line: 61, column: 3, scope: !20179)
!20199 = !DILocation(line: 62, column: 1, scope: !20179)
!20200 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19619, file: !19619, line: 65, type: !2168, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2161, retainedNodes: !152)
!20201 = !DILocalVariable(name: "x", arg: 1, scope: !20200, file: !19619, line: 65, type: !1318)
!20202 = !DILocation(line: 65, column: 33, scope: !20200)
!20203 = !DILocalVariable(name: "base", arg: 2, scope: !20200, file: !19619, line: 65, type: !27)
!20204 = !DILocation(line: 65, column: 40, scope: !20200)
!20205 = !DILocalVariable(name: "power", arg: 3, scope: !20200, file: !19619, line: 65, type: !27)
!20206 = !DILocation(line: 65, column: 50, scope: !20200)
!20207 = !DILocalVariable(name: "err", scope: !20200, file: !19619, line: 67, type: !1319)
!20208 = !DILocation(line: 67, column: 16, scope: !20200)
!20209 = !DILocation(line: 68, column: 3, scope: !20200)
!20210 = !DILocation(line: 68, column: 15, scope: !20200)
!20211 = !DILocation(line: 69, column: 23, scope: !20200)
!20212 = !DILocation(line: 69, column: 26, scope: !20200)
!20213 = !DILocation(line: 69, column: 12, scope: !20200)
!20214 = !DILocation(line: 69, column: 9, scope: !20200)
!20215 = distinct !{!20215, !20209, !20216}
!20216 = !DILocation(line: 69, column: 30, scope: !20200)
!20217 = !DILocation(line: 70, column: 10, scope: !20200)
!20218 = !DILocation(line: 70, column: 3, scope: !20200)
!20219 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !20220, file: !20220, line: 461, type: !2173, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2170, retainedNodes: !152)
!20220 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!20221 = !DILocalVariable(name: "pwc", arg: 1, scope: !20219, file: !20220, line: 461, type: !1877)
!20222 = !DILocation(line: 461, column: 23, scope: !20219)
!20223 = !DILocalVariable(name: "s", arg: 2, scope: !20219, file: !20220, line: 461, type: !146)
!20224 = !DILocation(line: 461, column: 40, scope: !20219)
!20225 = !DILocalVariable(name: "n", arg: 3, scope: !20219, file: !20220, line: 461, type: !149)
!20226 = !DILocation(line: 461, column: 50, scope: !20219)
!20227 = !DILocalVariable(name: "ps", arg: 4, scope: !20219, file: !20220, line: 461, type: !2175)
!20228 = !DILocation(line: 461, column: 64, scope: !20219)
!20229 = !DILocalVariable(name: "ret", scope: !20219, file: !20220, line: 463, type: !149)
!20230 = !DILocation(line: 463, column: 10, scope: !20219)
!20231 = !DILocalVariable(name: "wc", scope: !20219, file: !20220, line: 464, type: !641)
!20232 = !DILocation(line: 464, column: 11, scope: !20219)
!20233 = !DILocation(line: 480, column: 9, scope: !20234)
!20234 = distinct !DILexicalBlock(scope: !20219, file: !20220, line: 480, column: 7)
!20235 = !DILocation(line: 480, column: 7, scope: !20219)
!20236 = !DILocation(line: 481, column: 9, scope: !20234)
!20237 = !DILocation(line: 481, column: 5, scope: !20234)
!20238 = !DILocation(line: 515, column: 18, scope: !20219)
!20239 = !DILocation(line: 515, column: 23, scope: !20219)
!20240 = !DILocation(line: 515, column: 26, scope: !20219)
!20241 = !DILocation(line: 515, column: 29, scope: !20219)
!20242 = !DILocation(line: 515, column: 9, scope: !20219)
!20243 = !DILocation(line: 515, column: 7, scope: !20219)
!20244 = !DILocation(line: 523, column: 22, scope: !20245)
!20245 = distinct !DILexicalBlock(scope: !20219, file: !20220, line: 523, column: 7)
!20246 = !DILocation(line: 523, column: 19, scope: !20245)
!20247 = !DILocation(line: 523, column: 26, scope: !20245)
!20248 = !DILocation(line: 523, column: 29, scope: !20245)
!20249 = !DILocation(line: 523, column: 31, scope: !20245)
!20250 = !DILocation(line: 523, column: 36, scope: !20245)
!20251 = !DILocation(line: 523, column: 41, scope: !20245)
!20252 = !DILocation(line: 523, column: 7, scope: !20219)
!20253 = !DILocalVariable(name: "uc", scope: !20254, file: !20220, line: 525, type: !579)
!20254 = distinct !DILexicalBlock(scope: !20245, file: !20220, line: 524, column: 5)
!20255 = !DILocation(line: 525, column: 21, scope: !20254)
!20256 = !DILocation(line: 525, column: 27, scope: !20254)
!20257 = !DILocation(line: 525, column: 26, scope: !20254)
!20258 = !DILocation(line: 526, column: 14, scope: !20254)
!20259 = !DILocation(line: 526, column: 8, scope: !20254)
!20260 = !DILocation(line: 526, column: 12, scope: !20254)
!20261 = !DILocation(line: 527, column: 7, scope: !20254)
!20262 = !DILocation(line: 531, column: 10, scope: !20219)
!20263 = !DILocation(line: 531, column: 3, scope: !20219)
!20264 = !DILocation(line: 532, column: 1, scope: !20219)
!20265 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !20266, file: !20266, line: 99, type: !2189, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2186, retainedNodes: !152)
!20266 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!20267 = !DILocalVariable(name: "item", arg: 1, scope: !20265, file: !20266, line: 99, type: !2191)
!20268 = !DILocation(line: 99, column: 26, scope: !20265)
!20269 = !DILocation(line: 101, column: 11, scope: !20265)
!20270 = !DILocation(line: 101, column: 3, scope: !20265)
!20271 = !DILocation(line: 126, column: 14, scope: !20272)
!20272 = distinct !DILexicalBlock(scope: !20265, file: !20266, line: 102, column: 5)
!20273 = !DILocation(line: 126, column: 19, scope: !20272)
!20274 = !DILocation(line: 126, column: 30, scope: !20272)
!20275 = !DILocation(line: 126, column: 12, scope: !20272)
!20276 = !DILocation(line: 127, column: 7, scope: !20272)
!20277 = !DILocation(line: 162, column: 7, scope: !20272)
!20278 = !DILocation(line: 164, column: 23, scope: !20265)
!20279 = !DILocation(line: 164, column: 10, scope: !20265)
!20280 = !DILocation(line: 164, column: 3, scope: !20265)
!20281 = distinct !DISubprogram(name: "print_and_abort", scope: !1651, file: !1651, line: 330, type: !336, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20282 = !DILocation(line: 340, column: 12, scope: !20281)
!20283 = !DILocation(line: 340, column: 28, scope: !20281)
!20284 = !DILocation(line: 340, column: 3, scope: !20281)
!20285 = !DILocation(line: 342, column: 9, scope: !20281)
!20286 = !DILocation(line: 342, column: 3, scope: !20281)
!20287 = distinct !DISubprogram(name: "_obstack_begin", scope: !1651, file: !1651, line: 150, type: !1562, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20288 = !DILocalVariable(name: "h", arg: 1, scope: !20287, file: !1651, line: 150, type: !1564)
!20289 = !DILocation(line: 150, column: 33, scope: !20287)
!20290 = !DILocalVariable(name: "size", arg: 2, scope: !20287, file: !1651, line: 151, type: !149)
!20291 = !DILocation(line: 151, column: 33, scope: !20287)
!20292 = !DILocalVariable(name: "alignment", arg: 3, scope: !20287, file: !1651, line: 151, type: !149)
!20293 = !DILocation(line: 151, column: 55, scope: !20287)
!20294 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20287, file: !1651, line: 152, type: !370)
!20295 = !DILocation(line: 152, column: 25, scope: !20287)
!20296 = !DILocalVariable(name: "freefun", arg: 5, scope: !20287, file: !1651, line: 153, type: !381)
!20297 = !DILocation(line: 153, column: 24, scope: !20287)
!20298 = !DILocation(line: 155, column: 23, scope: !20287)
!20299 = !DILocation(line: 155, column: 3, scope: !20287)
!20300 = !DILocation(line: 155, column: 6, scope: !20287)
!20301 = !DILocation(line: 155, column: 15, scope: !20287)
!20302 = !DILocation(line: 155, column: 21, scope: !20287)
!20303 = !DILocation(line: 156, column: 22, scope: !20287)
!20304 = !DILocation(line: 156, column: 3, scope: !20287)
!20305 = !DILocation(line: 156, column: 6, scope: !20287)
!20306 = !DILocation(line: 156, column: 14, scope: !20287)
!20307 = !DILocation(line: 156, column: 20, scope: !20287)
!20308 = !DILocation(line: 157, column: 3, scope: !20287)
!20309 = !DILocation(line: 157, column: 6, scope: !20287)
!20310 = !DILocation(line: 157, column: 20, scope: !20287)
!20311 = !DILocation(line: 158, column: 33, scope: !20287)
!20312 = !DILocation(line: 158, column: 36, scope: !20287)
!20313 = !DILocation(line: 158, column: 42, scope: !20287)
!20314 = !DILocation(line: 158, column: 10, scope: !20287)
!20315 = !DILocation(line: 158, column: 3, scope: !20287)
!20316 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !1651, file: !1651, line: 109, type: !1608, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20317 = !DILocalVariable(name: "h", arg: 1, scope: !20316, file: !1651, line: 109, type: !1564)
!20318 = !DILocation(line: 109, column: 40, scope: !20316)
!20319 = !DILocalVariable(name: "size", arg: 2, scope: !20316, file: !1651, line: 110, type: !149)
!20320 = !DILocation(line: 110, column: 40, scope: !20316)
!20321 = !DILocalVariable(name: "alignment", arg: 3, scope: !20316, file: !1651, line: 110, type: !149)
!20322 = !DILocation(line: 110, column: 62, scope: !20316)
!20323 = !DILocalVariable(name: "chunk", scope: !20316, file: !1651, line: 112, type: !1569)
!20324 = !DILocation(line: 112, column: 26, scope: !20316)
!20325 = !DILocation(line: 114, column: 7, scope: !20326)
!20326 = distinct !DILexicalBlock(scope: !20316, file: !1651, line: 114, column: 7)
!20327 = !DILocation(line: 114, column: 17, scope: !20326)
!20328 = !DILocation(line: 114, column: 7, scope: !20316)
!20329 = !DILocation(line: 115, column: 15, scope: !20326)
!20330 = !DILocation(line: 115, column: 5, scope: !20326)
!20331 = !DILocation(line: 116, column: 7, scope: !20332)
!20332 = distinct !DILexicalBlock(scope: !20316, file: !1651, line: 116, column: 7)
!20333 = !DILocation(line: 116, column: 12, scope: !20332)
!20334 = !DILocation(line: 116, column: 7, scope: !20316)
!20335 = !DILocalVariable(name: "extra", scope: !20336, file: !1651, line: 127, type: !27)
!20336 = distinct !DILexicalBlock(scope: !20332, file: !1651, line: 118, column: 5)
!20337 = !DILocation(line: 127, column: 11, scope: !20336)
!20338 = !DILocation(line: 130, column: 21, scope: !20336)
!20339 = !DILocation(line: 130, column: 19, scope: !20336)
!20340 = !DILocation(line: 130, column: 14, scope: !20336)
!20341 = !DILocation(line: 130, column: 12, scope: !20336)
!20342 = !DILocation(line: 131, column: 5, scope: !20336)
!20343 = !DILocation(line: 133, column: 19, scope: !20316)
!20344 = !DILocation(line: 133, column: 3, scope: !20316)
!20345 = !DILocation(line: 133, column: 6, scope: !20316)
!20346 = !DILocation(line: 133, column: 17, scope: !20316)
!20347 = !{!4763, !2499, i64 0}
!20348 = !DILocation(line: 134, column: 23, scope: !20316)
!20349 = !DILocation(line: 134, column: 33, scope: !20316)
!20350 = !DILocation(line: 134, column: 3, scope: !20316)
!20351 = !DILocation(line: 134, column: 6, scope: !20316)
!20352 = !DILocation(line: 134, column: 21, scope: !20316)
!20353 = !DILocation(line: 136, column: 37, scope: !20316)
!20354 = !DILocation(line: 136, column: 40, scope: !20316)
!20355 = !DILocation(line: 136, column: 43, scope: !20316)
!20356 = !DILocation(line: 136, column: 22, scope: !20316)
!20357 = !DILocation(line: 136, column: 11, scope: !20316)
!20358 = !DILocation(line: 136, column: 14, scope: !20316)
!20359 = !DILocation(line: 136, column: 20, scope: !20316)
!20360 = !DILocation(line: 136, column: 9, scope: !20316)
!20361 = !DILocation(line: 137, column: 8, scope: !20362)
!20362 = distinct !DILexicalBlock(scope: !20316, file: !1651, line: 137, column: 7)
!20363 = !DILocation(line: 137, column: 7, scope: !20316)
!20364 = !DILocation(line: 138, column: 7, scope: !20362)
!20365 = !DILocation(line: 138, column: 5, scope: !20362)
!20366 = !DILocation(line: 139, column: 35, scope: !20316)
!20367 = !DILocation(line: 139, column: 18, scope: !20316)
!20368 = !DILocation(line: 139, column: 21, scope: !20316)
!20369 = !DILocation(line: 139, column: 33, scope: !20316)
!20370 = !DILocation(line: 139, column: 3, scope: !20316)
!20371 = !DILocation(line: 139, column: 6, scope: !20316)
!20372 = !DILocation(line: 139, column: 16, scope: !20316)
!20373 = !DILocation(line: 141, column: 44, scope: !20316)
!20374 = !DILocation(line: 141, column: 35, scope: !20316)
!20375 = !DILocation(line: 141, column: 52, scope: !20316)
!20376 = !DILocation(line: 141, column: 55, scope: !20316)
!20377 = !DILocation(line: 141, column: 50, scope: !20316)
!20378 = !DILocation(line: 141, column: 20, scope: !20316)
!20379 = !DILocation(line: 141, column: 27, scope: !20316)
!20380 = !DILocation(line: 141, column: 33, scope: !20316)
!20381 = !DILocation(line: 141, column: 3, scope: !20316)
!20382 = !DILocation(line: 141, column: 6, scope: !20316)
!20383 = !DILocation(line: 141, column: 18, scope: !20316)
!20384 = !DILocation(line: 142, column: 3, scope: !20316)
!20385 = !DILocation(line: 142, column: 10, scope: !20316)
!20386 = !DILocation(line: 142, column: 15, scope: !20316)
!20387 = !DILocation(line: 144, column: 3, scope: !20316)
!20388 = !DILocation(line: 144, column: 6, scope: !20316)
!20389 = !DILocation(line: 144, column: 25, scope: !20316)
!20390 = !DILocation(line: 145, column: 3, scope: !20316)
!20391 = !DILocation(line: 145, column: 6, scope: !20316)
!20392 = !DILocation(line: 145, column: 19, scope: !20316)
!20393 = !DILocation(line: 146, column: 3, scope: !20316)
!20394 = distinct !DISubprogram(name: "call_chunkfun", scope: !1651, file: !1651, line: 84, type: !1610, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20395 = !DILocalVariable(name: "h", arg: 1, scope: !20394, file: !1651, line: 84, type: !1564)
!20396 = !DILocation(line: 84, column: 32, scope: !20394)
!20397 = !DILocalVariable(name: "size", arg: 2, scope: !20394, file: !1651, line: 84, type: !149)
!20398 = !DILocation(line: 84, column: 42, scope: !20394)
!20399 = !DILocation(line: 86, column: 7, scope: !20400)
!20400 = distinct !DILexicalBlock(scope: !20394, file: !1651, line: 86, column: 7)
!20401 = !DILocation(line: 86, column: 10, scope: !20400)
!20402 = !DILocation(line: 86, column: 7, scope: !20394)
!20403 = !DILocation(line: 87, column: 12, scope: !20400)
!20404 = !DILocation(line: 87, column: 15, scope: !20400)
!20405 = !DILocation(line: 87, column: 24, scope: !20400)
!20406 = !DILocation(line: 87, column: 31, scope: !20400)
!20407 = !DILocation(line: 87, column: 34, scope: !20400)
!20408 = !{!4763, !2475, i64 72}
!20409 = !DILocation(line: 87, column: 45, scope: !20400)
!20410 = !DILocation(line: 87, column: 5, scope: !20400)
!20411 = !DILocation(line: 89, column: 12, scope: !20400)
!20412 = !DILocation(line: 89, column: 15, scope: !20400)
!20413 = !DILocation(line: 89, column: 24, scope: !20400)
!20414 = !DILocation(line: 89, column: 31, scope: !20400)
!20415 = !DILocation(line: 89, column: 5, scope: !20400)
!20416 = !DILocation(line: 90, column: 1, scope: !20394)
!20417 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !1651, file: !1651, line: 162, type: !1598, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20418 = !DILocalVariable(name: "h", arg: 1, scope: !20417, file: !1651, line: 162, type: !1564)
!20419 = !DILocation(line: 162, column: 35, scope: !20417)
!20420 = !DILocalVariable(name: "size", arg: 2, scope: !20417, file: !1651, line: 163, type: !149)
!20421 = !DILocation(line: 163, column: 35, scope: !20417)
!20422 = !DILocalVariable(name: "alignment", arg: 3, scope: !20417, file: !1651, line: 163, type: !149)
!20423 = !DILocation(line: 163, column: 57, scope: !20417)
!20424 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20417, file: !1651, line: 164, type: !374)
!20425 = !DILocation(line: 164, column: 27, scope: !20417)
!20426 = !DILocalVariable(name: "freefun", arg: 5, scope: !20417, file: !1651, line: 165, type: !383)
!20427 = !DILocation(line: 165, column: 26, scope: !20417)
!20428 = !DILocalVariable(name: "arg", arg: 6, scope: !20417, file: !1651, line: 166, type: !167)
!20429 = !DILocation(line: 166, column: 25, scope: !20417)
!20430 = !DILocation(line: 168, column: 23, scope: !20417)
!20431 = !DILocation(line: 168, column: 3, scope: !20417)
!20432 = !DILocation(line: 168, column: 6, scope: !20417)
!20433 = !DILocation(line: 168, column: 15, scope: !20417)
!20434 = !DILocation(line: 168, column: 21, scope: !20417)
!20435 = !DILocation(line: 169, column: 22, scope: !20417)
!20436 = !DILocation(line: 169, column: 3, scope: !20417)
!20437 = !DILocation(line: 169, column: 6, scope: !20417)
!20438 = !DILocation(line: 169, column: 14, scope: !20417)
!20439 = !DILocation(line: 169, column: 20, scope: !20417)
!20440 = !DILocation(line: 170, column: 18, scope: !20417)
!20441 = !DILocation(line: 170, column: 3, scope: !20417)
!20442 = !DILocation(line: 170, column: 6, scope: !20417)
!20443 = !DILocation(line: 170, column: 16, scope: !20417)
!20444 = !DILocation(line: 171, column: 3, scope: !20417)
!20445 = !DILocation(line: 171, column: 6, scope: !20417)
!20446 = !DILocation(line: 171, column: 20, scope: !20417)
!20447 = !DILocation(line: 172, column: 33, scope: !20417)
!20448 = !DILocation(line: 172, column: 36, scope: !20417)
!20449 = !DILocation(line: 172, column: 42, scope: !20417)
!20450 = !DILocation(line: 172, column: 10, scope: !20417)
!20451 = !DILocation(line: 172, column: 3, scope: !20417)
!20452 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !1651, file: !1651, line: 182, type: !1600, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20453 = !DILocalVariable(name: "h", arg: 1, scope: !20452, file: !1651, line: 182, type: !1564)
!20454 = !DILocation(line: 182, column: 36, scope: !20452)
!20455 = !DILocalVariable(name: "length", arg: 2, scope: !20452, file: !1651, line: 182, type: !149)
!20456 = !DILocation(line: 182, column: 55, scope: !20452)
!20457 = !DILocalVariable(name: "old_chunk", scope: !20452, file: !1651, line: 184, type: !1569)
!20458 = !DILocation(line: 184, column: 26, scope: !20452)
!20459 = !DILocation(line: 184, column: 38, scope: !20452)
!20460 = !DILocation(line: 184, column: 41, scope: !20452)
!20461 = !DILocalVariable(name: "new_chunk", scope: !20452, file: !1651, line: 185, type: !1569)
!20462 = !DILocation(line: 185, column: 26, scope: !20452)
!20463 = !DILocalVariable(name: "obj_size", scope: !20452, file: !1651, line: 186, type: !149)
!20464 = !DILocation(line: 186, column: 10, scope: !20452)
!20465 = !DILocation(line: 186, column: 21, scope: !20452)
!20466 = !DILocation(line: 186, column: 24, scope: !20452)
!20467 = !DILocation(line: 186, column: 36, scope: !20452)
!20468 = !DILocation(line: 186, column: 39, scope: !20452)
!20469 = !DILocation(line: 186, column: 34, scope: !20452)
!20470 = !DILocalVariable(name: "object_base", scope: !20452, file: !1651, line: 187, type: !143)
!20471 = !DILocation(line: 187, column: 9, scope: !20452)
!20472 = !DILocalVariable(name: "sum1", scope: !20452, file: !1651, line: 190, type: !149)
!20473 = !DILocation(line: 190, column: 10, scope: !20452)
!20474 = !DILocation(line: 190, column: 17, scope: !20452)
!20475 = !DILocation(line: 190, column: 28, scope: !20452)
!20476 = !DILocation(line: 190, column: 26, scope: !20452)
!20477 = !DILocalVariable(name: "sum2", scope: !20452, file: !1651, line: 191, type: !149)
!20478 = !DILocation(line: 191, column: 10, scope: !20452)
!20479 = !DILocation(line: 191, column: 17, scope: !20452)
!20480 = !DILocation(line: 191, column: 24, scope: !20452)
!20481 = !DILocation(line: 191, column: 27, scope: !20452)
!20482 = !DILocation(line: 191, column: 22, scope: !20452)
!20483 = !DILocalVariable(name: "new_size", scope: !20452, file: !1651, line: 192, type: !149)
!20484 = !DILocation(line: 192, column: 10, scope: !20452)
!20485 = !DILocation(line: 192, column: 21, scope: !20452)
!20486 = !DILocation(line: 192, column: 29, scope: !20452)
!20487 = !DILocation(line: 192, column: 38, scope: !20452)
!20488 = !DILocation(line: 192, column: 26, scope: !20452)
!20489 = !DILocation(line: 192, column: 44, scope: !20452)
!20490 = !DILocation(line: 193, column: 7, scope: !20491)
!20491 = distinct !DILexicalBlock(scope: !20452, file: !1651, line: 193, column: 7)
!20492 = !DILocation(line: 193, column: 18, scope: !20491)
!20493 = !DILocation(line: 193, column: 16, scope: !20491)
!20494 = !DILocation(line: 193, column: 7, scope: !20452)
!20495 = !DILocation(line: 194, column: 16, scope: !20491)
!20496 = !DILocation(line: 194, column: 14, scope: !20491)
!20497 = !DILocation(line: 194, column: 5, scope: !20491)
!20498 = !DILocation(line: 195, column: 7, scope: !20499)
!20499 = distinct !DILexicalBlock(scope: !20452, file: !1651, line: 195, column: 7)
!20500 = !DILocation(line: 195, column: 18, scope: !20499)
!20501 = !DILocation(line: 195, column: 21, scope: !20499)
!20502 = !DILocation(line: 195, column: 16, scope: !20499)
!20503 = !DILocation(line: 195, column: 7, scope: !20452)
!20504 = !DILocation(line: 196, column: 16, scope: !20499)
!20505 = !DILocation(line: 196, column: 19, scope: !20499)
!20506 = !DILocation(line: 196, column: 14, scope: !20499)
!20507 = !DILocation(line: 196, column: 5, scope: !20499)
!20508 = !DILocation(line: 199, column: 7, scope: !20509)
!20509 = distinct !DILexicalBlock(scope: !20452, file: !1651, line: 199, column: 7)
!20510 = !DILocation(line: 199, column: 19, scope: !20509)
!20511 = !DILocation(line: 199, column: 16, scope: !20509)
!20512 = !DILocation(line: 199, column: 24, scope: !20509)
!20513 = !DILocation(line: 199, column: 27, scope: !20509)
!20514 = !DILocation(line: 199, column: 35, scope: !20509)
!20515 = !DILocation(line: 199, column: 32, scope: !20509)
!20516 = !DILocation(line: 199, column: 7, scope: !20452)
!20517 = !DILocation(line: 200, column: 32, scope: !20509)
!20518 = !DILocation(line: 200, column: 35, scope: !20509)
!20519 = !DILocation(line: 200, column: 17, scope: !20509)
!20520 = !DILocation(line: 200, column: 15, scope: !20509)
!20521 = !DILocation(line: 200, column: 5, scope: !20509)
!20522 = !DILocation(line: 201, column: 8, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20452, file: !1651, line: 201, column: 7)
!20524 = !DILocation(line: 201, column: 7, scope: !20452)
!20525 = !DILocation(line: 202, column: 7, scope: !20523)
!20526 = !DILocation(line: 202, column: 5, scope: !20523)
!20527 = !DILocation(line: 203, column: 14, scope: !20452)
!20528 = !DILocation(line: 203, column: 3, scope: !20452)
!20529 = !DILocation(line: 203, column: 6, scope: !20452)
!20530 = !DILocation(line: 203, column: 12, scope: !20452)
!20531 = !DILocation(line: 204, column: 21, scope: !20452)
!20532 = !DILocation(line: 204, column: 3, scope: !20452)
!20533 = !DILocation(line: 204, column: 14, scope: !20452)
!20534 = !DILocation(line: 204, column: 19, scope: !20452)
!20535 = !DILocation(line: 205, column: 48, scope: !20452)
!20536 = !DILocation(line: 205, column: 39, scope: !20452)
!20537 = !DILocation(line: 205, column: 60, scope: !20452)
!20538 = !DILocation(line: 205, column: 58, scope: !20452)
!20539 = !DILocation(line: 205, column: 22, scope: !20452)
!20540 = !DILocation(line: 205, column: 25, scope: !20452)
!20541 = !DILocation(line: 205, column: 37, scope: !20452)
!20542 = !DILocation(line: 205, column: 3, scope: !20452)
!20543 = !DILocation(line: 205, column: 14, scope: !20452)
!20544 = !DILocation(line: 205, column: 20, scope: !20452)
!20545 = !DILocation(line: 209, column: 5, scope: !20452)
!20546 = !DILocation(line: 208, column: 15, scope: !20452)
!20547 = !DILocation(line: 212, column: 11, scope: !20452)
!20548 = !DILocation(line: 212, column: 24, scope: !20452)
!20549 = !DILocation(line: 212, column: 27, scope: !20452)
!20550 = !DILocation(line: 212, column: 40, scope: !20452)
!20551 = !DILocation(line: 212, column: 3, scope: !20452)
!20552 = !DILocation(line: 217, column: 8, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20452, file: !1651, line: 217, column: 7)
!20554 = !DILocation(line: 217, column: 11, scope: !20553)
!20555 = !DILocation(line: 218, column: 7, scope: !20553)
!20556 = !DILocation(line: 218, column: 11, scope: !20553)
!20557 = !DILocation(line: 218, column: 14, scope: !20553)
!20558 = !DILocation(line: 219, column: 14, scope: !20553)
!20559 = !DILocation(line: 219, column: 11, scope: !20553)
!20560 = !DILocation(line: 217, column: 7, scope: !20452)
!20561 = !DILocation(line: 222, column: 25, scope: !20562)
!20562 = distinct !DILexicalBlock(scope: !20553, file: !1651, line: 221, column: 5)
!20563 = !DILocation(line: 222, column: 36, scope: !20562)
!20564 = !DILocation(line: 222, column: 7, scope: !20562)
!20565 = !DILocation(line: 222, column: 18, scope: !20562)
!20566 = !DILocation(line: 222, column: 23, scope: !20562)
!20567 = !DILocation(line: 223, column: 21, scope: !20562)
!20568 = !DILocation(line: 223, column: 24, scope: !20562)
!20569 = !DILocation(line: 223, column: 7, scope: !20562)
!20570 = !DILocation(line: 224, column: 5, scope: !20562)
!20571 = !DILocation(line: 226, column: 20, scope: !20452)
!20572 = !DILocation(line: 226, column: 3, scope: !20452)
!20573 = !DILocation(line: 226, column: 6, scope: !20452)
!20574 = !DILocation(line: 226, column: 18, scope: !20452)
!20575 = !DILocation(line: 227, column: 18, scope: !20452)
!20576 = !DILocation(line: 227, column: 21, scope: !20452)
!20577 = !DILocation(line: 227, column: 35, scope: !20452)
!20578 = !DILocation(line: 227, column: 33, scope: !20452)
!20579 = !DILocation(line: 227, column: 3, scope: !20452)
!20580 = !DILocation(line: 227, column: 6, scope: !20452)
!20581 = !DILocation(line: 227, column: 16, scope: !20452)
!20582 = !DILocation(line: 229, column: 3, scope: !20452)
!20583 = !DILocation(line: 229, column: 6, scope: !20452)
!20584 = !DILocation(line: 229, column: 25, scope: !20452)
!20585 = !DILocation(line: 230, column: 1, scope: !20452)
!20586 = distinct !DISubprogram(name: "call_freefun", scope: !1651, file: !1651, line: 93, type: !1604, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20587 = !DILocalVariable(name: "h", arg: 1, scope: !20586, file: !1651, line: 93, type: !1564)
!20588 = !DILocation(line: 93, column: 31, scope: !20586)
!20589 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !20586, file: !1651, line: 93, type: !167)
!20590 = !DILocation(line: 93, column: 40, scope: !20586)
!20591 = !DILocation(line: 95, column: 7, scope: !20592)
!20592 = distinct !DILexicalBlock(scope: !20586, file: !1651, line: 95, column: 7)
!20593 = !DILocation(line: 95, column: 10, scope: !20592)
!20594 = !DILocation(line: 95, column: 7, scope: !20586)
!20595 = !DILocation(line: 96, column: 5, scope: !20592)
!20596 = !DILocation(line: 96, column: 8, scope: !20592)
!20597 = !DILocation(line: 96, column: 16, scope: !20592)
!20598 = !DILocation(line: 96, column: 23, scope: !20592)
!20599 = !DILocation(line: 96, column: 26, scope: !20592)
!20600 = !DILocation(line: 96, column: 37, scope: !20592)
!20601 = !DILocation(line: 98, column: 5, scope: !20592)
!20602 = !DILocation(line: 98, column: 8, scope: !20592)
!20603 = !DILocation(line: 98, column: 16, scope: !20592)
!20604 = !DILocation(line: 98, column: 23, scope: !20592)
!20605 = !DILocation(line: 99, column: 1, scope: !20586)
!20606 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !1651, file: !1651, line: 241, type: !1602, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20607 = !DILocalVariable(name: "h", arg: 1, scope: !20606, file: !1651, line: 241, type: !1564)
!20608 = !DILocation(line: 241, column: 39, scope: !20606)
!20609 = !DILocalVariable(name: "obj", arg: 2, scope: !20606, file: !1651, line: 241, type: !167)
!20610 = !DILocation(line: 241, column: 48, scope: !20606)
!20611 = !DILocalVariable(name: "lp", scope: !20606, file: !1651, line: 243, type: !1569)
!20612 = !DILocation(line: 243, column: 26, scope: !20606)
!20613 = !DILocalVariable(name: "plp", scope: !20606, file: !1651, line: 244, type: !1569)
!20614 = !DILocation(line: 244, column: 26, scope: !20606)
!20615 = !DILocation(line: 246, column: 9, scope: !20606)
!20616 = !DILocation(line: 246, column: 13, scope: !20606)
!20617 = !DILocation(line: 246, column: 6, scope: !20606)
!20618 = !DILocation(line: 250, column: 3, scope: !20606)
!20619 = !DILocation(line: 250, column: 10, scope: !20606)
!20620 = !DILocation(line: 250, column: 13, scope: !20606)
!20621 = !DILocation(line: 250, column: 18, scope: !20606)
!20622 = !DILocation(line: 250, column: 31, scope: !20606)
!20623 = !DILocation(line: 250, column: 22, scope: !20606)
!20624 = !DILocation(line: 250, column: 37, scope: !20606)
!20625 = !DILocation(line: 250, column: 34, scope: !20606)
!20626 = !DILocation(line: 250, column: 41, scope: !20606)
!20627 = !DILocation(line: 250, column: 54, scope: !20606)
!20628 = !DILocation(line: 250, column: 59, scope: !20606)
!20629 = !DILocation(line: 250, column: 67, scope: !20606)
!20630 = !DILocation(line: 250, column: 65, scope: !20606)
!20631 = !DILocation(line: 0, scope: !20606)
!20632 = !DILocation(line: 252, column: 13, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20606, file: !1651, line: 251, column: 5)
!20634 = !DILocation(line: 252, column: 17, scope: !20633)
!20635 = !DILocation(line: 252, column: 11, scope: !20633)
!20636 = !DILocation(line: 253, column: 12, scope: !20633)
!20637 = !DILocation(line: 253, column: 10, scope: !20633)
!20638 = distinct !{!20638, !20618, !20639}
!20639 = !DILocation(line: 254, column: 5, scope: !20606)
!20640 = !DILocation(line: 255, column: 10, scope: !20606)
!20641 = !DILocation(line: 255, column: 13, scope: !20606)
!20642 = !DILocation(line: 255, column: 3, scope: !20606)
!20643 = distinct !DISubprogram(name: "_obstack_free", scope: !1651, file: !1651, line: 262, type: !1604, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20644 = !DILocalVariable(name: "h", arg: 1, scope: !20643, file: !1651, line: 262, type: !1564)
!20645 = !DILocation(line: 262, column: 32, scope: !20643)
!20646 = !DILocalVariable(name: "obj", arg: 2, scope: !20643, file: !1651, line: 262, type: !167)
!20647 = !DILocation(line: 262, column: 41, scope: !20643)
!20648 = !DILocalVariable(name: "lp", scope: !20643, file: !1651, line: 264, type: !1569)
!20649 = !DILocation(line: 264, column: 26, scope: !20643)
!20650 = !DILocalVariable(name: "plp", scope: !20643, file: !1651, line: 265, type: !1569)
!20651 = !DILocation(line: 265, column: 26, scope: !20643)
!20652 = !DILocation(line: 267, column: 8, scope: !20643)
!20653 = !DILocation(line: 267, column: 11, scope: !20643)
!20654 = !DILocation(line: 267, column: 6, scope: !20643)
!20655 = !DILocation(line: 271, column: 3, scope: !20643)
!20656 = !DILocation(line: 271, column: 10, scope: !20643)
!20657 = !DILocation(line: 271, column: 13, scope: !20643)
!20658 = !DILocation(line: 271, column: 18, scope: !20643)
!20659 = !DILocation(line: 271, column: 31, scope: !20643)
!20660 = !DILocation(line: 271, column: 22, scope: !20643)
!20661 = !DILocation(line: 271, column: 37, scope: !20643)
!20662 = !DILocation(line: 271, column: 34, scope: !20643)
!20663 = !DILocation(line: 271, column: 41, scope: !20643)
!20664 = !DILocation(line: 271, column: 54, scope: !20643)
!20665 = !DILocation(line: 271, column: 59, scope: !20643)
!20666 = !DILocation(line: 271, column: 67, scope: !20643)
!20667 = !DILocation(line: 271, column: 65, scope: !20643)
!20668 = !DILocation(line: 0, scope: !20643)
!20669 = !DILocation(line: 273, column: 13, scope: !20670)
!20670 = distinct !DILexicalBlock(scope: !20643, file: !1651, line: 272, column: 5)
!20671 = !DILocation(line: 273, column: 17, scope: !20670)
!20672 = !DILocation(line: 273, column: 11, scope: !20670)
!20673 = !DILocation(line: 274, column: 21, scope: !20670)
!20674 = !DILocation(line: 274, column: 24, scope: !20670)
!20675 = !DILocation(line: 274, column: 7, scope: !20670)
!20676 = !DILocation(line: 275, column: 12, scope: !20670)
!20677 = !DILocation(line: 275, column: 10, scope: !20670)
!20678 = !DILocation(line: 278, column: 7, scope: !20670)
!20679 = !DILocation(line: 278, column: 10, scope: !20670)
!20680 = !DILocation(line: 278, column: 29, scope: !20670)
!20681 = distinct !{!20681, !20655, !20682}
!20682 = !DILocation(line: 279, column: 5, scope: !20643)
!20683 = !DILocation(line: 280, column: 7, scope: !20684)
!20684 = distinct !DILexicalBlock(scope: !20643, file: !1651, line: 280, column: 7)
!20685 = !DILocation(line: 280, column: 7, scope: !20643)
!20686 = !DILocation(line: 282, column: 49, scope: !20687)
!20687 = distinct !DILexicalBlock(scope: !20684, file: !1651, line: 281, column: 5)
!20688 = !DILocation(line: 282, column: 24, scope: !20687)
!20689 = !DILocation(line: 282, column: 27, scope: !20687)
!20690 = !DILocation(line: 282, column: 37, scope: !20687)
!20691 = !DILocation(line: 282, column: 7, scope: !20687)
!20692 = !DILocation(line: 282, column: 10, scope: !20687)
!20693 = !DILocation(line: 282, column: 22, scope: !20687)
!20694 = !DILocation(line: 283, column: 24, scope: !20687)
!20695 = !DILocation(line: 283, column: 28, scope: !20687)
!20696 = !DILocation(line: 283, column: 7, scope: !20687)
!20697 = !DILocation(line: 283, column: 10, scope: !20687)
!20698 = !DILocation(line: 283, column: 22, scope: !20687)
!20699 = !DILocation(line: 284, column: 18, scope: !20687)
!20700 = !DILocation(line: 284, column: 7, scope: !20687)
!20701 = !DILocation(line: 284, column: 10, scope: !20687)
!20702 = !DILocation(line: 284, column: 16, scope: !20687)
!20703 = !DILocation(line: 285, column: 5, scope: !20687)
!20704 = !DILocation(line: 286, column: 12, scope: !20705)
!20705 = distinct !DILexicalBlock(scope: !20684, file: !1651, line: 286, column: 12)
!20706 = !DILocation(line: 286, column: 16, scope: !20705)
!20707 = !DILocation(line: 286, column: 12, scope: !20684)
!20708 = !DILocation(line: 288, column: 5, scope: !20705)
!20709 = !DILocation(line: 289, column: 1, scope: !20643)
!20710 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !1651, file: !1651, line: 292, type: !1606, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1559, retainedNodes: !152)
!20711 = !DILocalVariable(name: "h", arg: 1, scope: !20710, file: !1651, line: 292, type: !1564)
!20712 = !DILocation(line: 292, column: 39, scope: !20710)
!20713 = !DILocalVariable(name: "lp", scope: !20710, file: !1651, line: 294, type: !1569)
!20714 = !DILocation(line: 294, column: 26, scope: !20710)
!20715 = !DILocalVariable(name: "nbytes", scope: !20710, file: !1651, line: 295, type: !149)
!20716 = !DILocation(line: 295, column: 19, scope: !20710)
!20717 = !DILocation(line: 297, column: 13, scope: !20718)
!20718 = distinct !DILexicalBlock(scope: !20710, file: !1651, line: 297, column: 3)
!20719 = !DILocation(line: 297, column: 16, scope: !20718)
!20720 = !DILocation(line: 297, column: 11, scope: !20718)
!20721 = !DILocation(line: 297, column: 8, scope: !20718)
!20722 = !DILocation(line: 297, column: 23, scope: !20723)
!20723 = distinct !DILexicalBlock(scope: !20718, file: !1651, line: 297, column: 3)
!20724 = !DILocation(line: 297, column: 26, scope: !20723)
!20725 = !DILocation(line: 297, column: 3, scope: !20718)
!20726 = !DILocation(line: 299, column: 17, scope: !20727)
!20727 = distinct !DILexicalBlock(scope: !20723, file: !1651, line: 298, column: 5)
!20728 = !DILocation(line: 299, column: 21, scope: !20727)
!20729 = !DILocation(line: 299, column: 38, scope: !20727)
!20730 = !DILocation(line: 299, column: 29, scope: !20727)
!20731 = !DILocation(line: 299, column: 27, scope: !20727)
!20732 = !DILocation(line: 299, column: 14, scope: !20727)
!20733 = !DILocation(line: 300, column: 5, scope: !20727)
!20734 = !DILocation(line: 297, column: 37, scope: !20723)
!20735 = !DILocation(line: 297, column: 41, scope: !20723)
!20736 = !DILocation(line: 297, column: 35, scope: !20723)
!20737 = !DILocation(line: 297, column: 3, scope: !20723)
!20738 = distinct !{!20738, !20725, !20739}
!20739 = !DILocation(line: 300, column: 5, scope: !20718)
!20740 = !DILocation(line: 301, column: 10, scope: !20710)
!20741 = !DILocation(line: 301, column: 3, scope: !20710)
!20742 = distinct !DISubprogram(name: "tzalloc", scope: !2246, file: !2246, line: 95, type: !2196, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!20743 = !DILocalVariable(name: "name", arg: 1, scope: !20742, file: !2246, line: 95, type: !146)
!20744 = !DILocation(line: 95, column: 22, scope: !20742)
!20745 = !DILocalVariable(name: "name_size", scope: !20742, file: !2246, line: 97, type: !149)
!20746 = !DILocation(line: 97, column: 10, scope: !20742)
!20747 = !DILocation(line: 97, column: 22, scope: !20742)
!20748 = !DILocation(line: 97, column: 37, scope: !20742)
!20749 = !DILocation(line: 97, column: 29, scope: !20742)
!20750 = !DILocation(line: 97, column: 43, scope: !20742)
!20751 = !DILocalVariable(name: "abbr_size", scope: !20742, file: !2246, line: 98, type: !149)
!20752 = !DILocation(line: 98, column: 10, scope: !20742)
!20753 = !DILocation(line: 98, column: 22, scope: !20742)
!20754 = !DILocation(line: 98, column: 32, scope: !20742)
!20755 = !DILocation(line: 98, column: 66, scope: !20742)
!20756 = !DILocation(line: 98, column: 76, scope: !20742)
!20757 = !DILocalVariable(name: "tz", scope: !20742, file: !2246, line: 99, type: !2198)
!20758 = !DILocation(line: 99, column: 14, scope: !20742)
!20759 = !DILocation(line: 99, column: 27, scope: !20742)
!20760 = !DILocation(line: 99, column: 19, scope: !20742)
!20761 = !DILocation(line: 100, column: 7, scope: !20762)
!20762 = distinct !DILexicalBlock(scope: !20742, file: !2246, line: 100, column: 7)
!20763 = !DILocation(line: 100, column: 7, scope: !20742)
!20764 = !DILocation(line: 102, column: 7, scope: !20765)
!20765 = distinct !DILexicalBlock(scope: !20762, file: !2246, line: 101, column: 5)
!20766 = !DILocation(line: 102, column: 11, scope: !20765)
!20767 = !DILocation(line: 102, column: 16, scope: !20765)
!20768 = !DILocation(line: 106, column: 25, scope: !20765)
!20769 = !DILocation(line: 106, column: 24, scope: !20765)
!20770 = !DILocation(line: 106, column: 23, scope: !20765)
!20771 = !DILocation(line: 106, column: 7, scope: !20765)
!20772 = !DILocation(line: 106, column: 11, scope: !20765)
!20773 = !DILocation(line: 106, column: 21, scope: !20765)
!20774 = !DILocation(line: 107, column: 7, scope: !20765)
!20775 = !DILocation(line: 107, column: 11, scope: !20765)
!20776 = !DILocation(line: 107, column: 20, scope: !20765)
!20777 = !DILocation(line: 108, column: 11, scope: !20778)
!20778 = distinct !DILexicalBlock(scope: !20765, file: !2246, line: 108, column: 11)
!20779 = !DILocation(line: 108, column: 11, scope: !20765)
!20780 = !DILocation(line: 109, column: 23, scope: !20778)
!20781 = !DILocation(line: 109, column: 27, scope: !20778)
!20782 = !DILocation(line: 109, column: 34, scope: !20778)
!20783 = !DILocation(line: 109, column: 40, scope: !20778)
!20784 = !DILocation(line: 109, column: 9, scope: !20778)
!20785 = !DILocation(line: 110, column: 5, scope: !20765)
!20786 = !DILocation(line: 111, column: 10, scope: !20742)
!20787 = !DILocation(line: 111, column: 3, scope: !20742)
!20788 = distinct !DISubprogram(name: "extend_abbrs", scope: !2246, file: !2246, line: 86, type: !2227, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!20789 = !DILocalVariable(name: "abbrs", arg: 1, scope: !20788, file: !2246, line: 86, type: !143)
!20790 = !DILocation(line: 86, column: 21, scope: !20788)
!20791 = !DILocalVariable(name: "abbr", arg: 2, scope: !20788, file: !2246, line: 86, type: !146)
!20792 = !DILocation(line: 86, column: 40, scope: !20788)
!20793 = !DILocalVariable(name: "abbr_size", arg: 3, scope: !20788, file: !2246, line: 86, type: !149)
!20794 = !DILocation(line: 86, column: 53, scope: !20788)
!20795 = !DILocation(line: 88, column: 11, scope: !20788)
!20796 = !DILocation(line: 88, column: 18, scope: !20788)
!20797 = !DILocation(line: 88, column: 24, scope: !20788)
!20798 = !DILocation(line: 88, column: 3, scope: !20788)
!20799 = !DILocation(line: 89, column: 3, scope: !20788)
!20800 = !DILocation(line: 89, column: 9, scope: !20788)
!20801 = !DILocation(line: 89, column: 20, scope: !20788)
!20802 = !DILocation(line: 90, column: 1, scope: !20788)
!20803 = distinct !DISubprogram(name: "tzfree", scope: !2246, file: !2246, line: 196, type: !2205, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!20804 = !DILocalVariable(name: "tz", arg: 1, scope: !20803, file: !2246, line: 196, type: !2198)
!20805 = !DILocation(line: 196, column: 20, scope: !20803)
!20806 = !DILocation(line: 198, column: 7, scope: !20807)
!20807 = distinct !DILexicalBlock(scope: !20803, file: !2246, line: 198, column: 7)
!20808 = !DILocation(line: 198, column: 10, scope: !20807)
!20809 = !DILocation(line: 198, column: 7, scope: !20803)
!20810 = !DILocation(line: 199, column: 5, scope: !20807)
!20811 = !DILocation(line: 199, column: 12, scope: !20807)
!20812 = !DILocalVariable(name: "next", scope: !20813, file: !2246, line: 201, type: !2198)
!20813 = distinct !DILexicalBlock(scope: !20807, file: !2246, line: 200, column: 7)
!20814 = !DILocation(line: 201, column: 20, scope: !20813)
!20815 = !DILocation(line: 201, column: 27, scope: !20813)
!20816 = !DILocation(line: 201, column: 31, scope: !20813)
!20817 = !DILocation(line: 202, column: 15, scope: !20813)
!20818 = !DILocation(line: 202, column: 9, scope: !20813)
!20819 = !DILocation(line: 203, column: 14, scope: !20813)
!20820 = !DILocation(line: 203, column: 12, scope: !20813)
!20821 = distinct !{!20821, !20810, !20822}
!20822 = !DILocation(line: 204, column: 7, scope: !20807)
!20823 = !DILocation(line: 205, column: 1, scope: !20803)
!20824 = distinct !DISubprogram(name: "localtime_rz", scope: !2246, file: !2246, line: 287, type: !2207, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!20825 = !DILocalVariable(name: "tz", arg: 1, scope: !20824, file: !2246, line: 287, type: !2198)
!20826 = !DILocation(line: 287, column: 26, scope: !20824)
!20827 = !DILocalVariable(name: "t", arg: 2, scope: !20824, file: !2246, line: 287, type: !2223)
!20828 = !DILocation(line: 287, column: 44, scope: !20824)
!20829 = !DILocalVariable(name: "tm", arg: 3, scope: !20824, file: !2246, line: 287, type: !2209)
!20830 = !DILocation(line: 287, column: 58, scope: !20824)
!20831 = !DILocation(line: 304, column: 8, scope: !20832)
!20832 = distinct !DILexicalBlock(scope: !20824, file: !2246, line: 304, column: 7)
!20833 = !DILocation(line: 304, column: 7, scope: !20824)
!20834 = !DILocation(line: 305, column: 22, scope: !20832)
!20835 = !DILocation(line: 305, column: 25, scope: !20832)
!20836 = !DILocation(line: 305, column: 12, scope: !20832)
!20837 = !DILocation(line: 305, column: 5, scope: !20832)
!20838 = !DILocalVariable(name: "old_tz", scope: !20839, file: !2246, line: 308, type: !2198)
!20839 = distinct !DILexicalBlock(scope: !20832, file: !2246, line: 307, column: 5)
!20840 = !DILocation(line: 308, column: 18, scope: !20839)
!20841 = !DILocation(line: 308, column: 35, scope: !20839)
!20842 = !DILocation(line: 308, column: 27, scope: !20839)
!20843 = !DILocation(line: 309, column: 11, scope: !20844)
!20844 = distinct !DILexicalBlock(scope: !20839, file: !2246, line: 309, column: 11)
!20845 = !DILocation(line: 309, column: 11, scope: !20839)
!20846 = !DILocalVariable(name: "abbr_saved", scope: !20847, file: !2246, line: 311, type: !141)
!20847 = distinct !DILexicalBlock(scope: !20844, file: !2246, line: 310, column: 9)
!20848 = !DILocation(line: 311, column: 16, scope: !20847)
!20849 = !DILocation(line: 311, column: 42, scope: !20847)
!20850 = !DILocation(line: 311, column: 45, scope: !20847)
!20851 = !DILocation(line: 311, column: 29, scope: !20847)
!20852 = !DILocation(line: 311, column: 49, scope: !20847)
!20853 = !DILocation(line: 311, column: 63, scope: !20847)
!20854 = !DILocation(line: 311, column: 67, scope: !20847)
!20855 = !DILocation(line: 311, column: 52, scope: !20847)
!20856 = !DILocation(line: 0, scope: !20847)
!20857 = !DILocation(line: 312, column: 26, scope: !20858)
!20858 = distinct !DILexicalBlock(scope: !20847, file: !2246, line: 312, column: 15)
!20859 = !DILocation(line: 312, column: 15, scope: !20858)
!20860 = !DILocation(line: 312, column: 34, scope: !20858)
!20861 = !DILocation(line: 312, column: 37, scope: !20858)
!20862 = !DILocation(line: 312, column: 15, scope: !20847)
!20863 = !DILocation(line: 313, column: 20, scope: !20858)
!20864 = !DILocation(line: 313, column: 13, scope: !20858)
!20865 = !DILocation(line: 314, column: 9, scope: !20847)
!20866 = !DILocation(line: 315, column: 7, scope: !20839)
!20867 = !DILocation(line: 317, column: 1, scope: !20824)
!20868 = distinct !DISubprogram(name: "set_tz", scope: !2246, file: !2246, line: 242, type: !2229, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!20869 = !DILocalVariable(name: "tz", arg: 1, scope: !20868, file: !2246, line: 242, type: !2198)
!20870 = !DILocation(line: 242, column: 20, scope: !20868)
!20871 = !DILocalVariable(name: "env_tz", scope: !20868, file: !2246, line: 244, type: !143)
!20872 = !DILocation(line: 244, column: 9, scope: !20868)
!20873 = !DILocation(line: 244, column: 18, scope: !20868)
!20874 = !DILocation(line: 245, column: 7, scope: !20875)
!20875 = distinct !DILexicalBlock(scope: !20868, file: !2246, line: 245, column: 7)
!20876 = !DILocation(line: 245, column: 7, scope: !20868)
!20877 = !DILocation(line: 246, column: 9, scope: !20875)
!20878 = !DILocation(line: 246, column: 13, scope: !20875)
!20879 = !DILocation(line: 246, column: 23, scope: !20875)
!20880 = !DILocation(line: 246, column: 34, scope: !20875)
!20881 = !DILocation(line: 246, column: 38, scope: !20875)
!20882 = !DILocation(line: 246, column: 45, scope: !20875)
!20883 = !DILocation(line: 246, column: 26, scope: !20875)
!20884 = !DILocation(line: 246, column: 53, scope: !20875)
!20885 = !DILocation(line: 247, column: 10, scope: !20875)
!20886 = !DILocation(line: 247, column: 14, scope: !20875)
!20887 = !DILocation(line: 248, column: 5, scope: !20875)
!20888 = !DILocalVariable(name: "old_tz", scope: !20889, file: !2246, line: 251, type: !2198)
!20889 = distinct !DILexicalBlock(scope: !20875, file: !2246, line: 250, column: 5)
!20890 = !DILocation(line: 251, column: 18, scope: !20889)
!20891 = !DILocation(line: 251, column: 36, scope: !20889)
!20892 = !DILocation(line: 251, column: 27, scope: !20889)
!20893 = !DILocation(line: 252, column: 12, scope: !20894)
!20894 = distinct !DILexicalBlock(scope: !20889, file: !2246, line: 252, column: 11)
!20895 = !DILocation(line: 252, column: 11, scope: !20889)
!20896 = !DILocation(line: 253, column: 16, scope: !20894)
!20897 = !DILocation(line: 253, column: 9, scope: !20894)
!20898 = !DILocation(line: 254, column: 25, scope: !20899)
!20899 = distinct !DILexicalBlock(scope: !20889, file: !2246, line: 254, column: 11)
!20900 = !DILocation(line: 254, column: 13, scope: !20899)
!20901 = !DILocation(line: 254, column: 11, scope: !20889)
!20902 = !DILocalVariable(name: "saved_errno", scope: !20903, file: !2246, line: 256, type: !27)
!20903 = distinct !DILexicalBlock(scope: !20899, file: !2246, line: 255, column: 9)
!20904 = !DILocation(line: 256, column: 15, scope: !20903)
!20905 = !DILocation(line: 256, column: 29, scope: !20903)
!20906 = !DILocation(line: 257, column: 19, scope: !20903)
!20907 = !DILocation(line: 257, column: 11, scope: !20903)
!20908 = !DILocation(line: 258, column: 19, scope: !20903)
!20909 = !DILocation(line: 258, column: 11, scope: !20903)
!20910 = !DILocation(line: 258, column: 17, scope: !20903)
!20911 = !DILocation(line: 259, column: 11, scope: !20903)
!20912 = !DILocation(line: 261, column: 14, scope: !20889)
!20913 = !DILocation(line: 261, column: 7, scope: !20889)
!20914 = !DILocation(line: 263, column: 1, scope: !20868)
!20915 = distinct !DISubprogram(name: "save_abbr", scope: !2246, file: !2246, line: 119, type: !2235, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!20916 = !DILocalVariable(name: "tz", arg: 1, scope: !20915, file: !2246, line: 119, type: !2198)
!20917 = !DILocation(line: 119, column: 23, scope: !20915)
!20918 = !DILocalVariable(name: "tm", arg: 2, scope: !20915, file: !2246, line: 119, type: !2209)
!20919 = !DILocation(line: 119, column: 38, scope: !20915)
!20920 = !DILocalVariable(name: "zone", scope: !20915, file: !2246, line: 122, type: !146)
!20921 = !DILocation(line: 122, column: 15, scope: !20915)
!20922 = !DILocalVariable(name: "zone_copy", scope: !20915, file: !2246, line: 123, type: !143)
!20923 = !DILocation(line: 123, column: 9, scope: !20915)
!20924 = !DILocation(line: 130, column: 10, scope: !20915)
!20925 = !DILocation(line: 130, column: 14, scope: !20915)
!20926 = !DILocation(line: 130, column: 8, scope: !20915)
!20927 = !DILocation(line: 142, column: 8, scope: !20928)
!20928 = distinct !DILexicalBlock(scope: !20915, file: !2246, line: 142, column: 7)
!20929 = !DILocation(line: 142, column: 13, scope: !20928)
!20930 = !DILocation(line: 142, column: 26, scope: !20928)
!20931 = !DILocation(line: 142, column: 17, scope: !20928)
!20932 = !DILocation(line: 142, column: 32, scope: !20928)
!20933 = !DILocation(line: 142, column: 29, scope: !20928)
!20934 = !DILocation(line: 142, column: 37, scope: !20928)
!20935 = !DILocation(line: 142, column: 40, scope: !20928)
!20936 = !DILocation(line: 142, column: 57, scope: !20928)
!20937 = !DILocation(line: 142, column: 60, scope: !20928)
!20938 = !DILocation(line: 142, column: 47, scope: !20928)
!20939 = !DILocation(line: 142, column: 45, scope: !20928)
!20940 = !DILocation(line: 142, column: 7, scope: !20915)
!20941 = !DILocation(line: 143, column: 5, scope: !20928)
!20942 = !DILocation(line: 145, column: 8, scope: !20943)
!20943 = distinct !DILexicalBlock(scope: !20915, file: !2246, line: 145, column: 7)
!20944 = !DILocation(line: 145, column: 7, scope: !20943)
!20945 = !DILocation(line: 145, column: 7, scope: !20915)
!20946 = !DILocation(line: 147, column: 19, scope: !20947)
!20947 = distinct !DILexicalBlock(scope: !20943, file: !2246, line: 146, column: 5)
!20948 = !DILocation(line: 147, column: 23, scope: !20947)
!20949 = !DILocation(line: 147, column: 17, scope: !20947)
!20950 = !DILocation(line: 149, column: 7, scope: !20947)
!20951 = !DILocation(line: 149, column: 22, scope: !20947)
!20952 = !DILocation(line: 149, column: 33, scope: !20947)
!20953 = !DILocation(line: 149, column: 14, scope: !20947)
!20954 = !DILocation(line: 149, column: 39, scope: !20947)
!20955 = !DILocation(line: 151, column: 19, scope: !20956)
!20956 = distinct !DILexicalBlock(scope: !20957, file: !2246, line: 151, column: 15)
!20957 = distinct !DILexicalBlock(scope: !20947, file: !2246, line: 150, column: 9)
!20958 = !DILocation(line: 151, column: 18, scope: !20956)
!20959 = !DILocation(line: 151, column: 29, scope: !20956)
!20960 = !DILocation(line: 151, column: 33, scope: !20956)
!20961 = !DILocation(line: 151, column: 46, scope: !20956)
!20962 = !DILocation(line: 151, column: 50, scope: !20956)
!20963 = !DILocation(line: 151, column: 43, scope: !20956)
!20964 = !DILocation(line: 151, column: 56, scope: !20956)
!20965 = !DILocation(line: 151, column: 59, scope: !20956)
!20966 = !DILocation(line: 151, column: 63, scope: !20956)
!20967 = !DILocation(line: 151, column: 15, scope: !20957)
!20968 = !DILocalVariable(name: "zone_size", scope: !20969, file: !2246, line: 153, type: !149)
!20969 = distinct !DILexicalBlock(scope: !20956, file: !2246, line: 152, column: 13)
!20970 = !DILocation(line: 153, column: 22, scope: !20969)
!20971 = !DILocation(line: 153, column: 42, scope: !20969)
!20972 = !DILocation(line: 153, column: 34, scope: !20969)
!20973 = !DILocation(line: 153, column: 48, scope: !20969)
!20974 = !DILocalVariable(name: "zone_used", scope: !20969, file: !2246, line: 154, type: !149)
!20975 = !DILocation(line: 154, column: 22, scope: !20969)
!20976 = !DILocation(line: 154, column: 34, scope: !20969)
!20977 = !DILocation(line: 154, column: 46, scope: !20969)
!20978 = !DILocation(line: 154, column: 50, scope: !20969)
!20979 = !DILocation(line: 154, column: 44, scope: !20969)
!20980 = !DILocation(line: 155, column: 30, scope: !20981)
!20981 = distinct !DILexicalBlock(scope: !20969, file: !2246, line: 155, column: 19)
!20982 = !DILocation(line: 155, column: 28, scope: !20981)
!20983 = !DILocation(line: 155, column: 42, scope: !20981)
!20984 = !DILocation(line: 155, column: 40, scope: !20981)
!20985 = !DILocation(line: 155, column: 19, scope: !20969)
!20986 = !DILocation(line: 157, column: 19, scope: !20987)
!20987 = distinct !DILexicalBlock(scope: !20981, file: !2246, line: 156, column: 17)
!20988 = !DILocation(line: 157, column: 25, scope: !20987)
!20989 = !DILocation(line: 158, column: 19, scope: !20987)
!20990 = !DILocation(line: 160, column: 19, scope: !20991)
!20991 = distinct !DILexicalBlock(scope: !20969, file: !2246, line: 160, column: 19)
!20992 = !DILocation(line: 160, column: 31, scope: !20991)
!20993 = !DILocation(line: 160, column: 29, scope: !20991)
!20994 = !DILocation(line: 160, column: 41, scope: !20991)
!20995 = !DILocation(line: 160, column: 19, scope: !20969)
!20996 = !DILocation(line: 161, column: 31, scope: !20991)
!20997 = !DILocation(line: 161, column: 42, scope: !20991)
!20998 = !DILocation(line: 161, column: 48, scope: !20991)
!20999 = !DILocation(line: 161, column: 17, scope: !20991)
!21000 = !DILocation(line: 164, column: 44, scope: !21001)
!21001 = distinct !DILexicalBlock(scope: !20991, file: !2246, line: 163, column: 17)
!21002 = !DILocation(line: 164, column: 35, scope: !21001)
!21003 = !DILocation(line: 164, column: 24, scope: !21001)
!21004 = !DILocation(line: 164, column: 28, scope: !21001)
!21005 = !DILocation(line: 164, column: 33, scope: !21001)
!21006 = !DILocation(line: 164, column: 22, scope: !21001)
!21007 = !DILocation(line: 165, column: 24, scope: !21008)
!21008 = distinct !DILexicalBlock(scope: !21001, file: !2246, line: 165, column: 23)
!21009 = !DILocation(line: 165, column: 23, scope: !21001)
!21010 = !DILocation(line: 166, column: 21, scope: !21008)
!21011 = !DILocation(line: 167, column: 19, scope: !21001)
!21012 = !DILocation(line: 167, column: 23, scope: !21001)
!21013 = !DILocation(line: 167, column: 33, scope: !21001)
!21014 = !DILocation(line: 168, column: 31, scope: !21001)
!21015 = !DILocation(line: 168, column: 35, scope: !21001)
!21016 = !DILocation(line: 168, column: 29, scope: !21001)
!21017 = !DILocation(line: 170, column: 15, scope: !20969)
!21018 = !DILocation(line: 173, column: 32, scope: !20957)
!21019 = !DILocation(line: 173, column: 24, scope: !20957)
!21020 = !DILocation(line: 173, column: 43, scope: !20957)
!21021 = !DILocation(line: 173, column: 21, scope: !20957)
!21022 = !DILocation(line: 174, column: 17, scope: !21023)
!21023 = distinct !DILexicalBlock(scope: !20957, file: !2246, line: 174, column: 15)
!21024 = !DILocation(line: 174, column: 16, scope: !21023)
!21025 = !DILocation(line: 174, column: 27, scope: !21023)
!21026 = !DILocation(line: 174, column: 30, scope: !21023)
!21027 = !DILocation(line: 174, column: 34, scope: !21023)
!21028 = !DILocation(line: 174, column: 15, scope: !20957)
!21029 = !DILocation(line: 176, column: 20, scope: !21030)
!21030 = distinct !DILexicalBlock(scope: !21023, file: !2246, line: 175, column: 13)
!21031 = !DILocation(line: 176, column: 24, scope: !21030)
!21032 = !DILocation(line: 176, column: 18, scope: !21030)
!21033 = !DILocation(line: 177, column: 27, scope: !21030)
!21034 = !DILocation(line: 177, column: 31, scope: !21030)
!21035 = !DILocation(line: 177, column: 25, scope: !21030)
!21036 = !DILocation(line: 178, column: 13, scope: !21030)
!21037 = distinct !{!21037, !20950, !21038}
!21038 = !DILocation(line: 179, column: 9, scope: !20947)
!21039 = !DILocation(line: 180, column: 5, scope: !20947)
!21040 = !DILocation(line: 184, column: 17, scope: !20915)
!21041 = !DILocation(line: 184, column: 3, scope: !20915)
!21042 = !DILocation(line: 184, column: 7, scope: !20915)
!21043 = !DILocation(line: 184, column: 15, scope: !20915)
!21044 = !DILocation(line: 191, column: 3, scope: !20915)
!21045 = !DILocation(line: 192, column: 1, scope: !20915)
!21046 = distinct !DISubprogram(name: "revert_tz", scope: !2246, file: !2246, line: 269, type: !2231, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21047 = !DILocalVariable(name: "tz", arg: 1, scope: !21046, file: !2246, line: 269, type: !2198)
!21048 = !DILocation(line: 269, column: 23, scope: !21046)
!21049 = !DILocation(line: 271, column: 7, scope: !21050)
!21050 = distinct !DILexicalBlock(scope: !21046, file: !2246, line: 271, column: 7)
!21051 = !DILocation(line: 271, column: 10, scope: !21050)
!21052 = !DILocation(line: 271, column: 7, scope: !21046)
!21053 = !DILocation(line: 272, column: 5, scope: !21050)
!21054 = !DILocalVariable(name: "saved_errno", scope: !21055, file: !2246, line: 275, type: !27)
!21055 = distinct !DILexicalBlock(scope: !21050, file: !2246, line: 274, column: 5)
!21056 = !DILocation(line: 275, column: 11, scope: !21055)
!21057 = !DILocation(line: 275, column: 25, scope: !21055)
!21058 = !DILocalVariable(name: "ok", scope: !21055, file: !2246, line: 276, type: !141)
!21059 = !DILocation(line: 276, column: 12, scope: !21055)
!21060 = !DILocation(line: 276, column: 29, scope: !21055)
!21061 = !DILocation(line: 276, column: 17, scope: !21055)
!21062 = !DILocation(line: 277, column: 12, scope: !21063)
!21063 = distinct !DILexicalBlock(scope: !21055, file: !2246, line: 277, column: 11)
!21064 = !DILocation(line: 277, column: 11, scope: !21055)
!21065 = !DILocation(line: 278, column: 23, scope: !21063)
!21066 = !DILocation(line: 278, column: 21, scope: !21063)
!21067 = !DILocation(line: 278, column: 9, scope: !21063)
!21068 = !DILocation(line: 279, column: 15, scope: !21055)
!21069 = !DILocation(line: 279, column: 7, scope: !21055)
!21070 = !DILocation(line: 280, column: 15, scope: !21055)
!21071 = !DILocation(line: 280, column: 7, scope: !21055)
!21072 = !DILocation(line: 280, column: 13, scope: !21055)
!21073 = !DILocation(line: 281, column: 14, scope: !21055)
!21074 = !DILocation(line: 281, column: 7, scope: !21055)
!21075 = !DILocation(line: 283, column: 1, scope: !21046)
!21076 = distinct !DISubprogram(name: "change_env", scope: !2246, file: !2246, line: 229, type: !2231, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21077 = !DILocalVariable(name: "tz", arg: 1, scope: !21076, file: !2246, line: 229, type: !2198)
!21078 = !DILocation(line: 229, column: 24, scope: !21076)
!21079 = !DILocation(line: 231, column: 18, scope: !21080)
!21080 = distinct !DILexicalBlock(scope: !21076, file: !2246, line: 231, column: 7)
!21081 = !DILocation(line: 231, column: 22, scope: !21080)
!21082 = !DILocation(line: 231, column: 34, scope: !21080)
!21083 = !DILocation(line: 231, column: 38, scope: !21080)
!21084 = !DILocation(line: 231, column: 7, scope: !21080)
!21085 = !DILocation(line: 231, column: 52, scope: !21080)
!21086 = !DILocation(line: 231, column: 7, scope: !21076)
!21087 = !DILocation(line: 232, column: 5, scope: !21080)
!21088 = !DILocation(line: 233, column: 3, scope: !21076)
!21089 = !DILocation(line: 234, column: 3, scope: !21076)
!21090 = !DILocation(line: 235, column: 1, scope: !21076)
!21091 = distinct !DISubprogram(name: "setenv_TZ", scope: !2246, file: !2246, line: 220, type: !2233, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21092 = !DILocalVariable(name: "tz", arg: 1, scope: !21091, file: !2246, line: 220, type: !146)
!21093 = !DILocation(line: 220, column: 24, scope: !21091)
!21094 = !DILocation(line: 222, column: 10, scope: !21091)
!21095 = !DILocation(line: 222, column: 29, scope: !21091)
!21096 = !DILocation(line: 222, column: 15, scope: !21091)
!21097 = !DILocation(line: 222, column: 38, scope: !21091)
!21098 = !DILocation(line: 222, column: 3, scope: !21091)
!21099 = distinct !DISubprogram(name: "getenv_TZ", scope: !2246, file: !2246, line: 212, type: !2131, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21100 = !DILocation(line: 214, column: 10, scope: !21099)
!21101 = !DILocation(line: 214, column: 3, scope: !21099)
!21102 = distinct !DISubprogram(name: "mktime_z", scope: !2246, file: !2246, line: 321, type: !2225, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21103 = !DILocalVariable(name: "tz", arg: 1, scope: !21102, file: !2246, line: 321, type: !2198)
!21104 = !DILocation(line: 321, column: 22, scope: !21102)
!21105 = !DILocalVariable(name: "tm", arg: 2, scope: !21102, file: !2246, line: 321, type: !2209)
!21106 = !DILocation(line: 321, column: 37, scope: !21102)
!21107 = !DILocation(line: 323, column: 8, scope: !21108)
!21108 = distinct !DILexicalBlock(scope: !21102, file: !2246, line: 323, column: 7)
!21109 = !DILocation(line: 323, column: 7, scope: !21102)
!21110 = !DILocation(line: 324, column: 20, scope: !21108)
!21111 = !DILocation(line: 324, column: 12, scope: !21108)
!21112 = !DILocation(line: 324, column: 5, scope: !21108)
!21113 = !DILocalVariable(name: "old_tz", scope: !21114, file: !2246, line: 327, type: !2198)
!21114 = distinct !DILexicalBlock(scope: !21108, file: !2246, line: 326, column: 5)
!21115 = !DILocation(line: 327, column: 18, scope: !21114)
!21116 = !DILocation(line: 327, column: 35, scope: !21114)
!21117 = !DILocation(line: 327, column: 27, scope: !21114)
!21118 = !DILocation(line: 328, column: 11, scope: !21119)
!21119 = distinct !DILexicalBlock(scope: !21114, file: !2246, line: 328, column: 11)
!21120 = !DILocation(line: 328, column: 11, scope: !21114)
!21121 = !DILocalVariable(name: "t", scope: !21122, file: !2246, line: 330, type: !162)
!21122 = distinct !DILexicalBlock(scope: !21119, file: !2246, line: 329, column: 9)
!21123 = !DILocation(line: 330, column: 18, scope: !21122)
!21124 = !DILocation(line: 330, column: 30, scope: !21122)
!21125 = !DILocation(line: 330, column: 22, scope: !21122)
!21126 = !DILocalVariable(name: "badtime", scope: !21122, file: !2246, line: 332, type: !162)
!21127 = !DILocation(line: 332, column: 18, scope: !21122)
!21128 = !DILocalVariable(name: "tm_1", scope: !21122, file: !2246, line: 333, type: !2210)
!21129 = !DILocation(line: 333, column: 21, scope: !21122)
!21130 = !DILocation(line: 334, column: 16, scope: !21131)
!21131 = distinct !DILexicalBlock(scope: !21122, file: !2246, line: 334, column: 15)
!21132 = !DILocation(line: 334, column: 21, scope: !21131)
!21133 = !DILocation(line: 334, column: 18, scope: !21131)
!21134 = !DILocation(line: 335, column: 16, scope: !21131)
!21135 = !DILocation(line: 335, column: 20, scope: !21131)
!21136 = !DILocation(line: 335, column: 44, scope: !21131)
!21137 = !DILocation(line: 335, column: 57, scope: !21131)
!21138 = !DILocation(line: 335, column: 47, scope: !21131)
!21139 = !DILocation(line: 336, column: 15, scope: !21131)
!21140 = !DILocation(line: 336, column: 30, scope: !21131)
!21141 = !DILocation(line: 336, column: 34, scope: !21131)
!21142 = !DILocation(line: 336, column: 19, scope: !21131)
!21143 = !DILocation(line: 334, column: 15, scope: !21122)
!21144 = !DILocation(line: 337, column: 17, scope: !21131)
!21145 = !DILocation(line: 337, column: 15, scope: !21131)
!21146 = !DILocation(line: 337, column: 13, scope: !21131)
!21147 = !DILocation(line: 339, column: 26, scope: !21148)
!21148 = distinct !DILexicalBlock(scope: !21122, file: !2246, line: 339, column: 15)
!21149 = !DILocation(line: 339, column: 15, scope: !21148)
!21150 = !DILocation(line: 339, column: 15, scope: !21122)
!21151 = !DILocation(line: 340, column: 20, scope: !21148)
!21152 = !DILocation(line: 340, column: 13, scope: !21148)
!21153 = !DILocation(line: 341, column: 9, scope: !21122)
!21154 = !DILocation(line: 342, column: 7, scope: !21114)
!21155 = !DILocation(line: 344, column: 1, scope: !21102)
!21156 = distinct !DISubprogram(name: "equal_tm", scope: !2246, file: !2246, line: 69, type: !2237, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21157 = !DILocalVariable(name: "a", arg: 1, scope: !21156, file: !2246, line: 69, type: !2239)
!21158 = !DILocation(line: 69, column: 28, scope: !21156)
!21159 = !DILocalVariable(name: "b", arg: 2, scope: !21156, file: !2246, line: 69, type: !2239)
!21160 = !DILocation(line: 69, column: 48, scope: !21156)
!21161 = !DILocation(line: 71, column: 14, scope: !21156)
!21162 = !DILocation(line: 71, column: 17, scope: !21156)
!21163 = !DILocation(line: 71, column: 26, scope: !21156)
!21164 = !DILocation(line: 71, column: 29, scope: !21156)
!21165 = !DILocation(line: 71, column: 24, scope: !21156)
!21166 = !DILocation(line: 72, column: 16, scope: !21156)
!21167 = !DILocation(line: 72, column: 19, scope: !21156)
!21168 = !DILocation(line: 72, column: 28, scope: !21156)
!21169 = !DILocation(line: 72, column: 31, scope: !21156)
!21170 = !DILocation(line: 72, column: 26, scope: !21156)
!21171 = !DILocation(line: 72, column: 13, scope: !21156)
!21172 = !DILocation(line: 73, column: 16, scope: !21156)
!21173 = !DILocation(line: 73, column: 19, scope: !21156)
!21174 = !DILocation(line: 73, column: 29, scope: !21156)
!21175 = !DILocation(line: 73, column: 32, scope: !21156)
!21176 = !DILocation(line: 73, column: 27, scope: !21156)
!21177 = !DILocation(line: 73, column: 13, scope: !21156)
!21178 = !DILocation(line: 74, column: 16, scope: !21156)
!21179 = !DILocation(line: 74, column: 19, scope: !21156)
!21180 = !DILocation(line: 74, column: 29, scope: !21156)
!21181 = !DILocation(line: 74, column: 32, scope: !21156)
!21182 = !DILocation(line: 74, column: 27, scope: !21156)
!21183 = !DILocation(line: 74, column: 13, scope: !21156)
!21184 = !DILocation(line: 75, column: 16, scope: !21156)
!21185 = !DILocation(line: 75, column: 19, scope: !21156)
!21186 = !DILocation(line: 75, column: 28, scope: !21156)
!21187 = !DILocation(line: 75, column: 31, scope: !21156)
!21188 = !DILocation(line: 75, column: 26, scope: !21156)
!21189 = !DILocation(line: 75, column: 13, scope: !21156)
!21190 = !DILocation(line: 76, column: 16, scope: !21156)
!21191 = !DILocation(line: 76, column: 19, scope: !21156)
!21192 = !DILocation(line: 76, column: 29, scope: !21156)
!21193 = !DILocation(line: 76, column: 32, scope: !21156)
!21194 = !DILocation(line: 76, column: 27, scope: !21156)
!21195 = !DILocation(line: 76, column: 13, scope: !21156)
!21196 = !DILocation(line: 77, column: 29, scope: !21156)
!21197 = !DILocation(line: 77, column: 32, scope: !21156)
!21198 = !DILocation(line: 77, column: 42, scope: !21156)
!21199 = !DILocation(line: 77, column: 45, scope: !21156)
!21200 = !DILocation(line: 77, column: 15, scope: !21156)
!21201 = !DILocation(line: 77, column: 13, scope: !21156)
!21202 = !DILocation(line: 71, column: 10, scope: !21156)
!21203 = !DILocation(line: 71, column: 3, scope: !21156)
!21204 = distinct !DISubprogram(name: "isdst_differ", scope: !2246, file: !2246, line: 62, type: !2241, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2193, retainedNodes: !152)
!21205 = !DILocalVariable(name: "a", arg: 1, scope: !21204, file: !2246, line: 62, type: !27)
!21206 = !DILocation(line: 62, column: 19, scope: !21204)
!21207 = !DILocalVariable(name: "b", arg: 2, scope: !21204, file: !2246, line: 62, type: !27)
!21208 = !DILocation(line: 62, column: 26, scope: !21204)
!21209 = !DILocation(line: 64, column: 11, scope: !21204)
!21210 = !DILocation(line: 64, column: 10, scope: !21204)
!21211 = !DILocation(line: 64, column: 17, scope: !21204)
!21212 = !DILocation(line: 64, column: 16, scope: !21204)
!21213 = !DILocation(line: 64, column: 13, scope: !21204)
!21214 = !DILocation(line: 64, column: 19, scope: !21204)
!21215 = !DILocation(line: 64, column: 27, scope: !21204)
!21216 = !DILocation(line: 64, column: 24, scope: !21204)
!21217 = !DILocation(line: 64, column: 29, scope: !21204)
!21218 = !DILocation(line: 64, column: 37, scope: !21204)
!21219 = !DILocation(line: 64, column: 34, scope: !21204)
!21220 = !DILocation(line: 0, scope: !21204)
!21221 = !DILocation(line: 64, column: 3, scope: !21204)
!21222 = distinct !DISubprogram(name: "rotl64", scope: !21223, file: !21223, line: 39, type: !2251, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21223 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!21224 = !DILocalVariable(name: "x", arg: 1, scope: !21222, file: !21223, line: 39, type: !2253)
!21225 = !DILocation(line: 39, column: 18, scope: !21222)
!21226 = !DILocalVariable(name: "n", arg: 2, scope: !21222, file: !21223, line: 39, type: !27)
!21227 = !DILocation(line: 39, column: 25, scope: !21222)
!21228 = !DILocation(line: 41, column: 12, scope: !21222)
!21229 = !DILocation(line: 41, column: 17, scope: !21222)
!21230 = !DILocation(line: 41, column: 14, scope: !21222)
!21231 = !DILocation(line: 41, column: 23, scope: !21222)
!21232 = !DILocation(line: 41, column: 34, scope: !21222)
!21233 = !DILocation(line: 41, column: 32, scope: !21222)
!21234 = !DILocation(line: 41, column: 25, scope: !21222)
!21235 = !DILocation(line: 41, column: 20, scope: !21222)
!21236 = !DILocation(line: 41, column: 3, scope: !21222)
!21237 = distinct !DISubprogram(name: "rotr64", scope: !21223, file: !21223, line: 48, type: !2251, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21238 = !DILocalVariable(name: "x", arg: 1, scope: !21237, file: !21223, line: 48, type: !2253)
!21239 = !DILocation(line: 48, column: 18, scope: !21237)
!21240 = !DILocalVariable(name: "n", arg: 2, scope: !21237, file: !21223, line: 48, type: !27)
!21241 = !DILocation(line: 48, column: 25, scope: !21237)
!21242 = !DILocation(line: 50, column: 12, scope: !21237)
!21243 = !DILocation(line: 50, column: 17, scope: !21237)
!21244 = !DILocation(line: 50, column: 14, scope: !21237)
!21245 = !DILocation(line: 50, column: 23, scope: !21237)
!21246 = !DILocation(line: 50, column: 34, scope: !21237)
!21247 = !DILocation(line: 50, column: 32, scope: !21237)
!21248 = !DILocation(line: 50, column: 25, scope: !21237)
!21249 = !DILocation(line: 50, column: 20, scope: !21237)
!21250 = !DILocation(line: 50, column: 3, scope: !21237)
!21251 = distinct !DISubprogram(name: "rotl32", scope: !21223, file: !21223, line: 58, type: !2254, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21252 = !DILocalVariable(name: "x", arg: 1, scope: !21251, file: !21223, line: 58, type: !2256)
!21253 = !DILocation(line: 58, column: 18, scope: !21251)
!21254 = !DILocalVariable(name: "n", arg: 2, scope: !21251, file: !21223, line: 58, type: !27)
!21255 = !DILocation(line: 58, column: 25, scope: !21251)
!21256 = !DILocation(line: 60, column: 12, scope: !21251)
!21257 = !DILocation(line: 60, column: 17, scope: !21251)
!21258 = !DILocation(line: 60, column: 14, scope: !21251)
!21259 = !DILocation(line: 60, column: 23, scope: !21251)
!21260 = !DILocation(line: 60, column: 34, scope: !21251)
!21261 = !DILocation(line: 60, column: 32, scope: !21251)
!21262 = !DILocation(line: 60, column: 25, scope: !21251)
!21263 = !DILocation(line: 60, column: 20, scope: !21251)
!21264 = !DILocation(line: 60, column: 3, scope: !21251)
!21265 = distinct !DISubprogram(name: "rotr32", scope: !21223, file: !21223, line: 67, type: !2254, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21266 = !DILocalVariable(name: "x", arg: 1, scope: !21265, file: !21223, line: 67, type: !2256)
!21267 = !DILocation(line: 67, column: 18, scope: !21265)
!21268 = !DILocalVariable(name: "n", arg: 2, scope: !21265, file: !21223, line: 67, type: !27)
!21269 = !DILocation(line: 67, column: 25, scope: !21265)
!21270 = !DILocation(line: 69, column: 12, scope: !21265)
!21271 = !DILocation(line: 69, column: 17, scope: !21265)
!21272 = !DILocation(line: 69, column: 14, scope: !21265)
!21273 = !DILocation(line: 69, column: 23, scope: !21265)
!21274 = !DILocation(line: 69, column: 34, scope: !21265)
!21275 = !DILocation(line: 69, column: 32, scope: !21265)
!21276 = !DILocation(line: 69, column: 25, scope: !21265)
!21277 = !DILocation(line: 69, column: 20, scope: !21265)
!21278 = !DILocation(line: 69, column: 3, scope: !21265)
!21279 = distinct !DISubprogram(name: "rotl_sz", scope: !21223, file: !21223, line: 76, type: !2257, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21280 = !DILocalVariable(name: "x", arg: 1, scope: !21279, file: !21223, line: 76, type: !149)
!21281 = !DILocation(line: 76, column: 17, scope: !21279)
!21282 = !DILocalVariable(name: "n", arg: 2, scope: !21279, file: !21223, line: 76, type: !27)
!21283 = !DILocation(line: 76, column: 24, scope: !21279)
!21284 = !DILocation(line: 78, column: 12, scope: !21279)
!21285 = !DILocation(line: 78, column: 17, scope: !21279)
!21286 = !DILocation(line: 78, column: 14, scope: !21279)
!21287 = !DILocation(line: 78, column: 23, scope: !21279)
!21288 = !DILocation(line: 78, column: 53, scope: !21279)
!21289 = !DILocation(line: 78, column: 51, scope: !21279)
!21290 = !DILocation(line: 78, column: 25, scope: !21279)
!21291 = !DILocation(line: 78, column: 20, scope: !21279)
!21292 = !DILocation(line: 78, column: 3, scope: !21279)
!21293 = distinct !DISubprogram(name: "rotr_sz", scope: !21223, file: !21223, line: 85, type: !2257, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21294 = !DILocalVariable(name: "x", arg: 1, scope: !21293, file: !21223, line: 85, type: !149)
!21295 = !DILocation(line: 85, column: 17, scope: !21293)
!21296 = !DILocalVariable(name: "n", arg: 2, scope: !21293, file: !21223, line: 85, type: !27)
!21297 = !DILocation(line: 85, column: 24, scope: !21293)
!21298 = !DILocation(line: 87, column: 12, scope: !21293)
!21299 = !DILocation(line: 87, column: 17, scope: !21293)
!21300 = !DILocation(line: 87, column: 14, scope: !21293)
!21301 = !DILocation(line: 87, column: 23, scope: !21293)
!21302 = !DILocation(line: 87, column: 53, scope: !21293)
!21303 = !DILocation(line: 87, column: 51, scope: !21293)
!21304 = !DILocation(line: 87, column: 25, scope: !21293)
!21305 = !DILocation(line: 87, column: 20, scope: !21293)
!21306 = !DILocation(line: 87, column: 3, scope: !21293)
!21307 = distinct !DISubprogram(name: "rotl16", scope: !21223, file: !21223, line: 96, type: !2259, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21308 = !DILocalVariable(name: "x", arg: 1, scope: !21307, file: !21223, line: 96, type: !2261)
!21309 = !DILocation(line: 96, column: 18, scope: !21307)
!21310 = !DILocalVariable(name: "n", arg: 2, scope: !21307, file: !21223, line: 96, type: !27)
!21311 = !DILocation(line: 96, column: 25, scope: !21307)
!21312 = !DILocation(line: 98, column: 27, scope: !21307)
!21313 = !DILocation(line: 98, column: 12, scope: !21307)
!21314 = !DILocation(line: 98, column: 32, scope: !21307)
!21315 = !DILocation(line: 98, column: 29, scope: !21307)
!21316 = !DILocation(line: 98, column: 53, scope: !21307)
!21317 = !DILocation(line: 98, column: 38, scope: !21307)
!21318 = !DILocation(line: 98, column: 64, scope: !21307)
!21319 = !DILocation(line: 98, column: 62, scope: !21307)
!21320 = !DILocation(line: 98, column: 55, scope: !21307)
!21321 = !DILocation(line: 98, column: 35, scope: !21307)
!21322 = !DILocation(line: 99, column: 10, scope: !21307)
!21323 = !DILocation(line: 98, column: 10, scope: !21307)
!21324 = !DILocation(line: 98, column: 3, scope: !21307)
!21325 = distinct !DISubprogram(name: "rotr16", scope: !21223, file: !21223, line: 108, type: !2259, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21326 = !DILocalVariable(name: "x", arg: 1, scope: !21325, file: !21223, line: 108, type: !2261)
!21327 = !DILocation(line: 108, column: 18, scope: !21325)
!21328 = !DILocalVariable(name: "n", arg: 2, scope: !21325, file: !21223, line: 108, type: !27)
!21329 = !DILocation(line: 108, column: 25, scope: !21325)
!21330 = !DILocation(line: 110, column: 27, scope: !21325)
!21331 = !DILocation(line: 110, column: 12, scope: !21325)
!21332 = !DILocation(line: 110, column: 32, scope: !21325)
!21333 = !DILocation(line: 110, column: 29, scope: !21325)
!21334 = !DILocation(line: 110, column: 53, scope: !21325)
!21335 = !DILocation(line: 110, column: 38, scope: !21325)
!21336 = !DILocation(line: 110, column: 64, scope: !21325)
!21337 = !DILocation(line: 110, column: 62, scope: !21325)
!21338 = !DILocation(line: 110, column: 55, scope: !21325)
!21339 = !DILocation(line: 110, column: 35, scope: !21325)
!21340 = !DILocation(line: 111, column: 10, scope: !21325)
!21341 = !DILocation(line: 110, column: 10, scope: !21325)
!21342 = !DILocation(line: 110, column: 3, scope: !21325)
!21343 = distinct !DISubprogram(name: "rotl8", scope: !21223, file: !21223, line: 120, type: !2262, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21344 = !DILocalVariable(name: "x", arg: 1, scope: !21343, file: !21223, line: 120, type: !2264)
!21345 = !DILocation(line: 120, column: 16, scope: !21343)
!21346 = !DILocalVariable(name: "n", arg: 2, scope: !21343, file: !21223, line: 120, type: !27)
!21347 = !DILocation(line: 120, column: 23, scope: !21343)
!21348 = !DILocation(line: 122, column: 27, scope: !21343)
!21349 = !DILocation(line: 122, column: 12, scope: !21343)
!21350 = !DILocation(line: 122, column: 32, scope: !21343)
!21351 = !DILocation(line: 122, column: 29, scope: !21343)
!21352 = !DILocation(line: 122, column: 53, scope: !21343)
!21353 = !DILocation(line: 122, column: 38, scope: !21343)
!21354 = !DILocation(line: 122, column: 63, scope: !21343)
!21355 = !DILocation(line: 122, column: 61, scope: !21343)
!21356 = !DILocation(line: 122, column: 55, scope: !21343)
!21357 = !DILocation(line: 122, column: 35, scope: !21343)
!21358 = !DILocation(line: 122, column: 68, scope: !21343)
!21359 = !DILocation(line: 122, column: 10, scope: !21343)
!21360 = !DILocation(line: 122, column: 3, scope: !21343)
!21361 = distinct !DISubprogram(name: "rotr8", scope: !21223, file: !21223, line: 131, type: !2262, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2248, retainedNodes: !152)
!21362 = !DILocalVariable(name: "x", arg: 1, scope: !21361, file: !21223, line: 131, type: !2264)
!21363 = !DILocation(line: 131, column: 16, scope: !21361)
!21364 = !DILocalVariable(name: "n", arg: 2, scope: !21361, file: !21223, line: 131, type: !27)
!21365 = !DILocation(line: 131, column: 23, scope: !21361)
!21366 = !DILocation(line: 133, column: 27, scope: !21361)
!21367 = !DILocation(line: 133, column: 12, scope: !21361)
!21368 = !DILocation(line: 133, column: 32, scope: !21361)
!21369 = !DILocation(line: 133, column: 29, scope: !21361)
!21370 = !DILocation(line: 133, column: 53, scope: !21361)
!21371 = !DILocation(line: 133, column: 38, scope: !21361)
!21372 = !DILocation(line: 133, column: 63, scope: !21361)
!21373 = !DILocation(line: 133, column: 61, scope: !21361)
!21374 = !DILocation(line: 133, column: 55, scope: !21361)
!21375 = !DILocation(line: 133, column: 35, scope: !21361)
!21376 = !DILocation(line: 133, column: 68, scope: !21361)
!21377 = !DILocation(line: 133, column: 10, scope: !21361)
!21378 = !DILocation(line: 133, column: 3, scope: !21361)
!21379 = distinct !DISubprogram(name: "c_strcasecmp", scope: !21380, file: !21380, line: 27, type: !714, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2265, retainedNodes: !152)
!21380 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!21381 = !DILocalVariable(name: "s1", arg: 1, scope: !21379, file: !21380, line: 27, type: !146)
!21382 = !DILocation(line: 27, column: 27, scope: !21379)
!21383 = !DILocalVariable(name: "s2", arg: 2, scope: !21379, file: !21380, line: 27, type: !146)
!21384 = !DILocation(line: 27, column: 43, scope: !21379)
!21385 = !DILocalVariable(name: "p1", scope: !21379, file: !21380, line: 29, type: !1665)
!21386 = !DILocation(line: 29, column: 33, scope: !21379)
!21387 = !DILocation(line: 29, column: 62, scope: !21379)
!21388 = !DILocalVariable(name: "p2", scope: !21379, file: !21380, line: 30, type: !1665)
!21389 = !DILocation(line: 30, column: 33, scope: !21379)
!21390 = !DILocation(line: 30, column: 62, scope: !21379)
!21391 = !DILocalVariable(name: "c1", scope: !21379, file: !21380, line: 31, type: !579)
!21392 = !DILocation(line: 31, column: 17, scope: !21379)
!21393 = !DILocalVariable(name: "c2", scope: !21379, file: !21380, line: 31, type: !579)
!21394 = !DILocation(line: 31, column: 21, scope: !21379)
!21395 = !DILocation(line: 33, column: 7, scope: !21396)
!21396 = distinct !DILexicalBlock(scope: !21379, file: !21380, line: 33, column: 7)
!21397 = !DILocation(line: 33, column: 13, scope: !21396)
!21398 = !DILocation(line: 33, column: 10, scope: !21396)
!21399 = !DILocation(line: 33, column: 7, scope: !21379)
!21400 = !DILocation(line: 34, column: 5, scope: !21396)
!21401 = !DILocation(line: 36, column: 3, scope: !21379)
!21402 = !DILocation(line: 38, column: 24, scope: !21403)
!21403 = distinct !DILexicalBlock(scope: !21379, file: !21380, line: 37, column: 5)
!21404 = !DILocation(line: 38, column: 23, scope: !21403)
!21405 = !DILocation(line: 38, column: 12, scope: !21403)
!21406 = !DILocation(line: 38, column: 10, scope: !21403)
!21407 = !DILocation(line: 39, column: 24, scope: !21403)
!21408 = !DILocation(line: 39, column: 23, scope: !21403)
!21409 = !DILocation(line: 39, column: 12, scope: !21403)
!21410 = !DILocation(line: 39, column: 10, scope: !21403)
!21411 = !DILocation(line: 41, column: 11, scope: !21412)
!21412 = distinct !DILexicalBlock(scope: !21403, file: !21380, line: 41, column: 11)
!21413 = !DILocation(line: 41, column: 14, scope: !21412)
!21414 = !DILocation(line: 41, column: 11, scope: !21403)
!21415 = !DILocation(line: 42, column: 9, scope: !21412)
!21416 = !DILocation(line: 44, column: 7, scope: !21403)
!21417 = !DILocation(line: 45, column: 7, scope: !21403)
!21418 = !DILocation(line: 46, column: 5, scope: !21403)
!21419 = !DILocation(line: 47, column: 10, scope: !21379)
!21420 = !DILocation(line: 47, column: 16, scope: !21379)
!21421 = !DILocation(line: 47, column: 13, scope: !21379)
!21422 = distinct !{!21422, !21401, !21423}
!21423 = !DILocation(line: 47, column: 18, scope: !21379)
!21424 = !DILocation(line: 50, column: 12, scope: !21425)
!21425 = distinct !DILexicalBlock(scope: !21379, file: !21380, line: 49, column: 7)
!21426 = !DILocation(line: 50, column: 17, scope: !21425)
!21427 = !DILocation(line: 50, column: 15, scope: !21425)
!21428 = !DILocation(line: 50, column: 5, scope: !21425)
!21429 = !DILocation(line: 56, column: 1, scope: !21379)
!21430 = distinct !DISubprogram(name: "close_stream", scope: !21431, file: !21431, line: 56, type: !2271, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2268, retainedNodes: !152)
!21431 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!21432 = !DILocalVariable(name: "stream", arg: 1, scope: !21430, file: !21431, line: 56, type: !2273)
!21433 = !DILocation(line: 56, column: 21, scope: !21430)
!21434 = !DILocalVariable(name: "some_pending", scope: !21430, file: !21431, line: 58, type: !2313)
!21435 = !DILocation(line: 58, column: 14, scope: !21430)
!21436 = !DILocation(line: 58, column: 42, scope: !21430)
!21437 = !DILocation(line: 58, column: 30, scope: !21430)
!21438 = !DILocation(line: 58, column: 50, scope: !21430)
!21439 = !DILocalVariable(name: "prev_fail", scope: !21430, file: !21431, line: 59, type: !2313)
!21440 = !DILocation(line: 59, column: 14, scope: !21430)
!21441 = !DILocation(line: 59, column: 27, scope: !21430)
!21442 = !DILocation(line: 59, column: 43, scope: !21430)
!21443 = !DILocalVariable(name: "fclose_fail", scope: !21430, file: !21431, line: 60, type: !2313)
!21444 = !DILocation(line: 60, column: 14, scope: !21430)
!21445 = !DILocation(line: 60, column: 37, scope: !21430)
!21446 = !DILocation(line: 60, column: 29, scope: !21430)
!21447 = !DILocation(line: 60, column: 45, scope: !21430)
!21448 = !DILocation(line: 70, column: 7, scope: !21449)
!21449 = distinct !DILexicalBlock(scope: !21430, file: !21431, line: 70, column: 7)
!21450 = !DILocation(line: 70, column: 17, scope: !21449)
!21451 = !DILocation(line: 70, column: 21, scope: !21449)
!21452 = !DILocation(line: 70, column: 33, scope: !21449)
!21453 = !DILocation(line: 70, column: 37, scope: !21449)
!21454 = !DILocation(line: 70, column: 50, scope: !21449)
!21455 = !DILocation(line: 70, column: 53, scope: !21449)
!21456 = !DILocation(line: 70, column: 59, scope: !21449)
!21457 = !DILocation(line: 70, column: 7, scope: !21430)
!21458 = !DILocation(line: 72, column: 13, scope: !21459)
!21459 = distinct !DILexicalBlock(scope: !21460, file: !21431, line: 72, column: 11)
!21460 = distinct !DILexicalBlock(scope: !21449, file: !21431, line: 71, column: 5)
!21461 = !DILocation(line: 72, column: 11, scope: !21460)
!21462 = !DILocation(line: 73, column: 9, scope: !21459)
!21463 = !DILocation(line: 73, column: 15, scope: !21459)
!21464 = !DILocation(line: 74, column: 7, scope: !21460)
!21465 = !DILocation(line: 77, column: 3, scope: !21430)
!21466 = !DILocation(line: 78, column: 1, scope: !21430)
!21467 = distinct !DISubprogram(name: "dir_name", scope: !21468, file: !21468, line: 32, type: !560, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2314, retainedNodes: !152)
!21468 = !DIFile(filename: "lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!21469 = !DILocalVariable(name: "file", arg: 1, scope: !21467, file: !21468, line: 32, type: !146)
!21470 = !DILocation(line: 32, column: 23, scope: !21467)
!21471 = !DILocalVariable(name: "result", scope: !21467, file: !21468, line: 34, type: !143)
!21472 = !DILocation(line: 34, column: 9, scope: !21467)
!21473 = !DILocation(line: 34, column: 29, scope: !21467)
!21474 = !DILocation(line: 34, column: 18, scope: !21467)
!21475 = !DILocation(line: 35, column: 8, scope: !21476)
!21476 = distinct !DILexicalBlock(scope: !21467, file: !21468, line: 35, column: 7)
!21477 = !DILocation(line: 35, column: 7, scope: !21467)
!21478 = !DILocation(line: 36, column: 5, scope: !21476)
!21479 = !DILocation(line: 37, column: 10, scope: !21467)
!21480 = !DILocation(line: 37, column: 3, scope: !21467)
!21481 = distinct !DISubprogram(name: "hash_pjw", scope: !21482, file: !21482, line: 31, type: !328, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2317, retainedNodes: !152)
!21482 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!21483 = !DILocalVariable(name: "x", arg: 1, scope: !21481, file: !21482, line: 31, type: !175)
!21484 = !DILocation(line: 31, column: 23, scope: !21481)
!21485 = !DILocalVariable(name: "tablesize", arg: 2, scope: !21481, file: !21482, line: 31, type: !149)
!21486 = !DILocation(line: 31, column: 33, scope: !21481)
!21487 = !DILocalVariable(name: "s", scope: !21481, file: !21482, line: 33, type: !146)
!21488 = !DILocation(line: 33, column: 15, scope: !21481)
!21489 = !DILocalVariable(name: "h", scope: !21481, file: !21482, line: 34, type: !149)
!21490 = !DILocation(line: 34, column: 10, scope: !21481)
!21491 = !DILocation(line: 36, column: 12, scope: !21492)
!21492 = distinct !DILexicalBlock(scope: !21481, file: !21482, line: 36, column: 3)
!21493 = !DILocation(line: 36, column: 10, scope: !21492)
!21494 = !DILocation(line: 36, column: 8, scope: !21492)
!21495 = !DILocation(line: 36, column: 16, scope: !21496)
!21496 = distinct !DILexicalBlock(scope: !21492, file: !21482, line: 36, column: 3)
!21497 = !DILocation(line: 36, column: 15, scope: !21496)
!21498 = !DILocation(line: 36, column: 3, scope: !21492)
!21499 = !DILocation(line: 37, column: 10, scope: !21496)
!21500 = !DILocation(line: 37, column: 9, scope: !21496)
!21501 = !DILocation(line: 37, column: 16, scope: !21496)
!21502 = !DILocation(line: 37, column: 18, scope: !21496)
!21503 = !DILocation(line: 37, column: 27, scope: !21496)
!21504 = !DILocation(line: 37, column: 29, scope: !21496)
!21505 = !DILocation(line: 37, column: 24, scope: !21496)
!21506 = !DILocation(line: 37, column: 12, scope: !21496)
!21507 = !DILocation(line: 37, column: 7, scope: !21496)
!21508 = !DILocation(line: 37, column: 5, scope: !21496)
!21509 = !DILocation(line: 36, column: 20, scope: !21496)
!21510 = !DILocation(line: 36, column: 3, scope: !21496)
!21511 = distinct !{!21511, !21498, !21512}
!21512 = !DILocation(line: 37, column: 48, scope: !21492)
!21513 = !DILocation(line: 39, column: 10, scope: !21481)
!21514 = !DILocation(line: 39, column: 14, scope: !21481)
!21515 = !DILocation(line: 39, column: 12, scope: !21481)
!21516 = !DILocation(line: 39, column: 3, scope: !21481)
!21517 = distinct !DISubprogram(name: "locale_charset", scope: !21518, file: !21518, line: 826, type: !2323, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2320, retainedNodes: !152)
!21518 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!21519 = !DILocalVariable(name: "codeset", scope: !21517, file: !21518, line: 828, type: !146)
!21520 = !DILocation(line: 828, column: 15, scope: !21517)
!21521 = !DILocation(line: 835, column: 13, scope: !21517)
!21522 = !DILocation(line: 835, column: 11, scope: !21517)
!21523 = !DILocation(line: 893, column: 7, scope: !21524)
!21524 = distinct !DILexicalBlock(scope: !21517, file: !21518, line: 893, column: 7)
!21525 = !DILocation(line: 893, column: 15, scope: !21524)
!21526 = !DILocation(line: 893, column: 7, scope: !21517)
!21527 = !DILocation(line: 895, column: 13, scope: !21524)
!21528 = !DILocation(line: 895, column: 5, scope: !21524)
!21529 = !DILocation(line: 1051, column: 13, scope: !21530)
!21530 = distinct !DILexicalBlock(scope: !21531, file: !21518, line: 1051, column: 13)
!21531 = distinct !DILexicalBlock(scope: !21532, file: !21518, line: 1041, column: 7)
!21532 = distinct !DILexicalBlock(scope: !21517, file: !21518, line: 1000, column: 3)
!21533 = !DILocation(line: 1051, column: 24, scope: !21530)
!21534 = !DILocation(line: 1051, column: 13, scope: !21531)
!21535 = !DILocation(line: 1052, column: 19, scope: !21530)
!21536 = !DILocation(line: 1052, column: 11, scope: !21530)
!21537 = !DILocation(line: 1139, column: 10, scope: !21517)
!21538 = !DILocation(line: 1139, column: 3, scope: !21517)
!21539 = distinct !DISubprogram(name: "rpl_fclose", scope: !21540, file: !21540, line: 58, type: !2327, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2324, retainedNodes: !152)
!21540 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!21541 = !DILocalVariable(name: "fp", arg: 1, scope: !21539, file: !21540, line: 58, type: !2329)
!21542 = !DILocation(line: 58, column: 19, scope: !21539)
!21543 = !DILocalVariable(name: "saved_errno", scope: !21539, file: !21540, line: 60, type: !27)
!21544 = !DILocation(line: 60, column: 7, scope: !21539)
!21545 = !DILocalVariable(name: "fd", scope: !21539, file: !21540, line: 61, type: !27)
!21546 = !DILocation(line: 61, column: 7, scope: !21539)
!21547 = !DILocalVariable(name: "result", scope: !21539, file: !21540, line: 62, type: !27)
!21548 = !DILocation(line: 62, column: 7, scope: !21539)
!21549 = !DILocation(line: 65, column: 16, scope: !21539)
!21550 = !DILocation(line: 65, column: 8, scope: !21539)
!21551 = !DILocation(line: 65, column: 6, scope: !21539)
!21552 = !DILocation(line: 66, column: 7, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21539, file: !21540, line: 66, column: 7)
!21554 = !DILocation(line: 66, column: 10, scope: !21553)
!21555 = !DILocation(line: 66, column: 7, scope: !21539)
!21556 = !DILocation(line: 67, column: 28, scope: !21553)
!21557 = !DILocation(line: 67, column: 12, scope: !21553)
!21558 = !DILocation(line: 67, column: 5, scope: !21553)
!21559 = !DILocation(line: 72, column: 9, scope: !21560)
!21560 = distinct !DILexicalBlock(scope: !21539, file: !21540, line: 72, column: 7)
!21561 = !DILocation(line: 72, column: 23, scope: !21560)
!21562 = !DILocation(line: 72, column: 41, scope: !21560)
!21563 = !DILocation(line: 72, column: 33, scope: !21560)
!21564 = !DILocation(line: 72, column: 26, scope: !21560)
!21565 = !DILocation(line: 72, column: 59, scope: !21560)
!21566 = !DILocation(line: 73, column: 7, scope: !21560)
!21567 = !DILocation(line: 73, column: 18, scope: !21560)
!21568 = !DILocation(line: 73, column: 10, scope: !21560)
!21569 = !DILocation(line: 72, column: 7, scope: !21539)
!21570 = !DILocation(line: 74, column: 19, scope: !21560)
!21571 = !DILocation(line: 74, column: 17, scope: !21560)
!21572 = !DILocation(line: 74, column: 5, scope: !21560)
!21573 = !DILocation(line: 100, column: 28, scope: !21539)
!21574 = !DILocation(line: 100, column: 12, scope: !21539)
!21575 = !DILocation(line: 100, column: 10, scope: !21539)
!21576 = !DILocation(line: 105, column: 7, scope: !21577)
!21577 = distinct !DILexicalBlock(scope: !21539, file: !21540, line: 105, column: 7)
!21578 = !DILocation(line: 105, column: 19, scope: !21577)
!21579 = !DILocation(line: 105, column: 7, scope: !21539)
!21580 = !DILocation(line: 107, column: 15, scope: !21581)
!21581 = distinct !DILexicalBlock(scope: !21577, file: !21540, line: 106, column: 5)
!21582 = !DILocation(line: 107, column: 7, scope: !21581)
!21583 = !DILocation(line: 107, column: 13, scope: !21581)
!21584 = !DILocation(line: 108, column: 14, scope: !21581)
!21585 = !DILocation(line: 109, column: 5, scope: !21581)
!21586 = !DILocation(line: 111, column: 10, scope: !21539)
!21587 = !DILocation(line: 111, column: 3, scope: !21539)
!21588 = !DILocation(line: 112, column: 1, scope: !21539)
!21589 = distinct !DISubprogram(name: "rpl_fflush", scope: !21590, file: !21590, line: 129, type: !2372, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2369, retainedNodes: !152)
!21590 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!21591 = !DILocalVariable(name: "stream", arg: 1, scope: !21589, file: !21590, line: 129, type: !2374)
!21592 = !DILocation(line: 129, column: 19, scope: !21589)
!21593 = !DILocation(line: 150, column: 7, scope: !21594)
!21594 = distinct !DILexicalBlock(scope: !21589, file: !21590, line: 150, column: 7)
!21595 = !DILocation(line: 150, column: 14, scope: !21594)
!21596 = !DILocation(line: 150, column: 22, scope: !21594)
!21597 = !DILocation(line: 150, column: 27, scope: !21594)
!21598 = !DILocation(line: 150, column: 7, scope: !21589)
!21599 = !DILocation(line: 151, column: 20, scope: !21594)
!21600 = !DILocation(line: 151, column: 12, scope: !21594)
!21601 = !DILocation(line: 151, column: 5, scope: !21594)
!21602 = !DILocation(line: 156, column: 44, scope: !21589)
!21603 = !DILocation(line: 156, column: 3, scope: !21589)
!21604 = !DILocation(line: 158, column: 18, scope: !21589)
!21605 = !DILocation(line: 158, column: 10, scope: !21589)
!21606 = !DILocation(line: 158, column: 3, scope: !21589)
!21607 = !DILocation(line: 232, column: 1, scope: !21589)
!21608 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !21590, file: !21590, line: 41, type: !2414, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2369, retainedNodes: !152)
!21609 = !DILocalVariable(name: "fp", arg: 1, scope: !21608, file: !21590, line: 41, type: !2374)
!21610 = !DILocation(line: 41, column: 48, scope: !21608)
!21611 = !DILocation(line: 43, column: 7, scope: !21612)
!21612 = distinct !DILexicalBlock(scope: !21608, file: !21590, line: 43, column: 7)
!21613 = !DILocation(line: 43, column: 11, scope: !21612)
!21614 = !{!21615, !2469, i64 0}
!21615 = !{!"_IO_FILE", !2469, i64 0, !2475, i64 8, !2475, i64 16, !2475, i64 24, !2475, i64 32, !2475, i64 40, !2475, i64 48, !2475, i64 56, !2475, i64 64, !2475, i64 72, !2475, i64 80, !2475, i64 88, !2475, i64 96, !2475, i64 104, !2469, i64 112, !2469, i64 116, !2499, i64 120, !2889, i64 128, !2470, i64 130, !2470, i64 131, !2475, i64 136, !2499, i64 144, !2475, i64 152, !2475, i64 160, !2475, i64 168, !2475, i64 176, !2499, i64 184, !2469, i64 192, !2470, i64 196}
!21616 = !DILocation(line: 43, column: 18, scope: !21612)
!21617 = !DILocation(line: 43, column: 7, scope: !21608)
!21618 = !DILocation(line: 45, column: 13, scope: !21612)
!21619 = !DILocation(line: 45, column: 5, scope: !21612)
!21620 = !DILocation(line: 46, column: 1, scope: !21608)
!21621 = distinct !DISubprogram(name: "rpl_fseeko", scope: !21622, file: !21622, line: 28, type: !2419, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !152)
!21622 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!21623 = !DILocalVariable(name: "fp", arg: 1, scope: !21621, file: !21622, line: 28, type: !2421)
!21624 = !DILocation(line: 28, column: 15, scope: !21621)
!21625 = !DILocalVariable(name: "offset", arg: 2, scope: !21621, file: !21622, line: 28, type: !2461)
!21626 = !DILocation(line: 28, column: 25, scope: !21621)
!21627 = !DILocalVariable(name: "whence", arg: 3, scope: !21621, file: !21622, line: 28, type: !27)
!21628 = !DILocation(line: 28, column: 37, scope: !21621)
!21629 = !DILocation(line: 52, column: 7, scope: !21630)
!21630 = distinct !DILexicalBlock(scope: !21621, file: !21622, line: 52, column: 7)
!21631 = !DILocation(line: 52, column: 11, scope: !21630)
!21632 = !{!21615, !2475, i64 16}
!21633 = !DILocation(line: 52, column: 27, scope: !21630)
!21634 = !DILocation(line: 52, column: 31, scope: !21630)
!21635 = !{!21615, !2475, i64 8}
!21636 = !DILocation(line: 52, column: 24, scope: !21630)
!21637 = !DILocation(line: 53, column: 7, scope: !21630)
!21638 = !DILocation(line: 53, column: 10, scope: !21630)
!21639 = !DILocation(line: 53, column: 14, scope: !21630)
!21640 = !{!21615, !2475, i64 40}
!21641 = !DILocation(line: 53, column: 31, scope: !21630)
!21642 = !DILocation(line: 53, column: 35, scope: !21630)
!21643 = !{!21615, !2475, i64 32}
!21644 = !DILocation(line: 53, column: 28, scope: !21630)
!21645 = !DILocation(line: 54, column: 7, scope: !21630)
!21646 = !DILocation(line: 54, column: 10, scope: !21630)
!21647 = !DILocation(line: 54, column: 14, scope: !21630)
!21648 = !{!21615, !2475, i64 72}
!21649 = !DILocation(line: 54, column: 28, scope: !21630)
!21650 = !DILocation(line: 52, column: 7, scope: !21621)
!21651 = !DILocalVariable(name: "pos", scope: !21652, file: !21622, line: 117, type: !2461)
!21652 = distinct !DILexicalBlock(scope: !21630, file: !21622, line: 113, column: 5)
!21653 = !DILocation(line: 117, column: 13, scope: !21652)
!21654 = !DILocation(line: 117, column: 34, scope: !21652)
!21655 = !DILocation(line: 117, column: 26, scope: !21652)
!21656 = !DILocation(line: 117, column: 39, scope: !21652)
!21657 = !DILocation(line: 117, column: 47, scope: !21652)
!21658 = !DILocation(line: 117, column: 19, scope: !21652)
!21659 = !DILocation(line: 118, column: 11, scope: !21660)
!21660 = distinct !DILexicalBlock(scope: !21652, file: !21622, line: 118, column: 11)
!21661 = !DILocation(line: 118, column: 15, scope: !21660)
!21662 = !DILocation(line: 118, column: 11, scope: !21652)
!21663 = !DILocation(line: 124, column: 11, scope: !21664)
!21664 = distinct !DILexicalBlock(scope: !21660, file: !21622, line: 119, column: 9)
!21665 = !DILocation(line: 129, column: 7, scope: !21652)
!21666 = !DILocation(line: 129, column: 11, scope: !21652)
!21667 = !DILocation(line: 129, column: 18, scope: !21652)
!21668 = !DILocation(line: 130, column: 21, scope: !21652)
!21669 = !DILocation(line: 130, column: 7, scope: !21652)
!21670 = !DILocation(line: 130, column: 11, scope: !21652)
!21671 = !DILocation(line: 130, column: 19, scope: !21652)
!21672 = !{!21615, !2499, i64 144}
!21673 = !DILocation(line: 161, column: 7, scope: !21652)
!21674 = !DILocation(line: 163, column: 18, scope: !21621)
!21675 = !DILocation(line: 163, column: 22, scope: !21621)
!21676 = !DILocation(line: 163, column: 30, scope: !21621)
!21677 = !DILocation(line: 163, column: 10, scope: !21621)
!21678 = !DILocation(line: 163, column: 3, scope: !21621)
!21679 = !DILocation(line: 164, column: 1, scope: !21621)
